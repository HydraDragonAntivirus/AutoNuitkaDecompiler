.Crypto.Cipher.AES]apopTause_aesnitTakeyuMissing 'key' parameterakey_sizeuIncorrect AES key length (%d bytes)a_raw_aesni_libaAESNI_start_operationaAESNI_stop_operationa_raw_aes_libaAES_start_operationaAES_stop_operationaVoidPointerac_uint8_ptrac_size_taaddress_ofuError %X while instantiating the AES cipheraSmartPointeragetuThis method instantiates and returns a handle to a low-level
    base cipher. It will absorb named parameters in the process.uPoly1305 with AES requires a 32-byte keyaget_random_bytesTluPoly1305 with AES requires a 16-byte nonceanew:nlnaMODE_ECBaencryptanonce:lnnuDerive a tuple (r, s, nonce) for a Poly1305 MAC.

    If nonce is ``None``, a new 16-byte nonce is generated.
    aadd_aes_modesa_create_cipherasysamodulesuCrypto.Cipher.AESuCreate a new AES cipher.

    Args:
      key(bytes/bytearray/memoryview):
        The secret key to use in the symmetric cipher.

        It must be 16 (*AES-128)*, 24 (*AES-192*) or 32 (*AES-256*) bytes long.

        For ``MODE_SIV`` only, it doubles to 32, 48, or 64 bytes.
      mode (a ``MODE_*`` constant):
        The chaining mode to use for encryption or decryption.
        If in doubt, use ``MODE_EAX``.

    Keyword Args:
      iv (bytes/bytearray/memoryview):
        (Only applicable for ``MODE_CBC``, ``MODE_CFB``, ``MODE_OFB``,
        and ``MODE_OPENPGP`` modes).

        The initialization vector to use for encryption or decryption.

        For ``MODE_CBC``, ``MODE_CFB``, and ``MODE_OFB`` it must be 16 bytes long.

        For ``MODE_OPENPGP`` mode only,
        it must be 16 bytes long for encryption
        and 18 bytes for decryption (in the latter case, it is
        actually the *encrypted* IV which was prefixed to the ciphertext).

        If not provided, a random byte string is generated (you must then
        read its value with the :attr:`iv` attribute).

      nonce (bytes/bytearray/memoryview):
        (Only applicable for ``MODE_CCM``, ``MODE_EAX``, ``MODE_GCM``,
        ``MODE_SIV``, ``MODE_OCB``, and ``MODE_CTR``).

        A value that must never be reused for any other encryption done
        with this key (except possibly for ``MODE_SIV``, see below).

        For ``MODE_EAX``, ``MODE_GCM`` and ``MODE_SIV`` there are no
        restrictions on its length (recommended: **16** bytes).

        For ``MODE_CCM``, its length must be in the range **[7..13]**.
        Bear in mind that with CCM there is a trade-off between nonce
        length and maximum message size. Recommendation: **11** bytes.

        For ``MODE_OCB``, its length must be in the range **[1..15]**
        (recommended: **15**).

        For ``MODE_CTR``, its length must be in the range **[0..15]**
        (recommended: **8**).

        For ``MODE_SIV``, the nonce is optional, if it is not specified,
        then no nonce is being used, which renders the encryption
        deterministic.

        If not provided, for modes other than ``MODE_SIV``, a random
        byte string of the recommended length is used (you must then
        read its value with the :attr:`nonce` attribute).

      segment_size (integer):
        (Only ``MODE_CFB``).The number of **bits** the plaintext and ciphertext
        are segmented in. It must be a multiple of 8.
        If not specified, it will be assumed to be 8.

      mac_len (integer):
        (Only ``MODE_EAX``, ``MODE_GCM``, ``MODE_OCB``, ``MODE_CCM``)
        Length of the authentication tag, in bytes.

        It must be even and in the range **[4..16]**.
        The recommended value (and the default, if not specified) is **16**.

      msg_len (integer):
        (Only ``MODE_CCM``). Length of the message to (de)cipher.
        If not specified, ``encrypt`` must be called with the entire message.
        Similarly, ``decrypt`` can only be called once.

      assoc_len (integer):
        (Only ``MODE_CCM``). Length of the associated data.
        If not specified, all associated data is buffered internally,
        which may represent a problem for very large messages.

      initial_value (integer or bytes/bytearray/memoryview):
        (Only ``MODE_CTR``).
        The initial value for the counter. If not present, the cipher will
        start counting from 0. The value is incremented by one for each block.
        The counter number is encoded in big endian mode.

      counter (object):
        (Only ``MODE_CTR``).
        Instance of ``Crypto.Util.Counter``, which allows full customization
        of the counter block. This parameter is incompatible to both ``nonce``
        and ``initial_value``.

      use_aesni: (boolean):
        Use Intel AES-NI hardware extensions (default: use if available).

    Returns:
        an AES object, of the applicable mode.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.CipherTa_create_cipherluCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointerac_size_tac_uint8_ptraload_pycryptodome_raw_libuCrypto.UtilTa_cpu_featuresa_cpu_featuresuCrypto.RandomTaget_random_bytesllaMODE_CBClaMODE_CFBlaMODE_OFBlaMODE_CTRlaMODE_OPENPGPlaMODE_CCMlaMODE_EAXl
aMODE_SIVlaMODE_GCMlaMODE_OCBu
        int AES_start_operation(const uint8_t key[],
                                size_t key_len,
                                void **pResult);
        int AES_encrypt(const void *state,
                        const uint8_t *in,
                        uint8_t *out,
                        size_t data_len);
        int AES_decrypt(const void *state,
                        const uint8_t *in,
                        uint8_t *out,
                        size_t data_len);
        int AES_stop_operation(void *state);
        a_cprotouCrypto.Cipher._raw_aesahave_aes_niuCrypto.Cipher._raw_aesniareplaceTaAESaAESNIa_create_base_ciphera_derive_Poly1305_key_pairlablock_sizeTlll uCrypto\Cipher\AES.pyu<module Crypto.Cipher.AES>Tadict_parametersause_aesniakeyastart_operationastop_operationacipheraresultTakeyanoncewsTakeyamodeaargsakwargsu.Crypto.Cipher.DES3SPaparity_byteuadjust_key_parity.<locals>.parity_byteakey_sizeuNot a valid TDES keycabchrabord:nln:lln:lln:lnnuTriple DES key degenerates to single DESuSet the parity bits in a TDES key.

    :param key_in: the TDES key whose bits need to be adjusted
    :type key_in: byte string

    :returns: a copy of ``key_in``, with the parity bits correctly set
    :rtype: byte string

    :raises ValueError: if the TDES key is not 16 or 24 bytes long
    :raises ValueError: if the TDES key degenerates into Single DES
    l;lllaparityakey_bytelapopTakeyuMissing 'key' parameteraadjust_key_parityabstra_raw_des3_libaDES3_start_operationaDES3_stop_operationaVoidPointerac_size_taaddress_ofuError %X while instantiating the TDES cipheraSmartPointeragetuThis method instantiates and returns a handle to a low-level base cipher.
    It will absorb named parameters in the process.a_create_cipherasysamodulesuCrypto.Cipher.DES3uCreate a new Triple DES cipher.

    :param key:
        The secret key to use in the symmetric cipher.
        It must be 16 or 24 byte long. The parity bits will be ignored.
    :type key: bytes/bytearray/memoryview

    :param mode:
        The chaining mode to use for encryption or decryption.
    :type mode: One of the supported ``MODE_*`` constants

    :Keyword Arguments:
        *   **iv** (*bytes*, *bytearray*, *memoryview*) --
            (Only applicable for ``MODE_CBC``, ``MODE_CFB``, ``MODE_OFB``,
            and ``MODE_OPENPGP`` modes).

            The initialization vector to use for encryption or decryption.

            For ``MODE_CBC``, ``MODE_CFB``, and ``MODE_OFB`` it must be 8 bytes long.

            For ``MODE_OPENPGP`` mode only,
            it must be 8 bytes long for encryption
            and 10 bytes for decryption (in the latter case, it is
            actually the *encrypted* IV which was prefixed to the ciphertext).

            If not provided, a random byte string is generated (you must then
            read its value with the :attr:`iv` attribute).

        *   **nonce** (*bytes*, *bytearray*, *memoryview*) --
            (Only applicable for ``MODE_EAX`` and ``MODE_CTR``).

            A value that must never be reused for any other encryption done
            with this key.

            For ``MODE_EAX`` there are no
            restrictions on its length (recommended: **16** bytes).

            For ``MODE_CTR``, its length must be in the range **[0..7]**.

            If not provided for ``MODE_EAX``, a random byte string is generated (you
            can read it back via the ``nonce`` attribute).

        *   **segment_size** (*integer*) --
            (Only ``MODE_CFB``).The number of **bits** the plaintext and ciphertext
            are segmented in. It must be a multiple of 8.
            If not specified, it will be assumed to be 8.

        *   **mac_len** : (*integer*) --
            (Only ``MODE_EAX``)
            Length of the authentication tag, in bytes.
            It must be no longer than 8 (default).

        *   **initial_value** : (*integer*) --
            (Only ``MODE_CTR``). The initial value for the counter within
            the counter block. By default it is **0**.

    :Return: a Triple DES object, of the applicable mode.
    u
Module's constants for the modes of operation supported with Triple DES:

:var MODE_ECB: :ref:`Electronic Code Book (ECB) <ecb_mode>`
:var MODE_CBC: :ref:`Cipher-Block Chaining (CBC) <cbc_mode>`
:var MODE_CFB: :ref:`Cipher FeedBack (CFB) <cfb_mode>`
:var MODE_OFB: :ref:`Output FeedBack (OFB) <ofb_mode>`
:var MODE_CTR: :ref:`CounTer Mode (CTR) <ctr_mode>`
:var MODE_OPENPGP:  :ref:`OpenPGP Mode <openpgp_mode>`
:var MODE_EAX: :ref:`EAX Mode <eax_mode>`
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.CipherTa_create_cipherluCrypto.Util.py3compatTabyte_stringabchrabordabstrabyte_stringuCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointerac_size_taload_pycryptodome_raw_libTuCrypto.Cipher._raw_des3u
                    int DES3_start_operation(const uint8_t key[],
                                             size_t key_len,
                                             void **pResult);
                    int DES3_encrypt(const void *state,
                                     const uint8_t *in,
                                     uint8_t *out,
                                     size_t data_len);
                    int DES3_decrypt(const void *state,
                                     const uint8_t *in,
                                     uint8_t *out,
                                     size_t data_len);
                    int DES3_stop_operation(void *state);
                    a_create_base_cipheranewaMODE_ECBlaMODE_CBClaMODE_CFBlaMODE_OFBlaMODE_CTRlaMODE_OPENPGPlaMODE_EAXlablock_sizeTlluCrypto\Cipher\DES3.pyu<module Crypto.Cipher.DES3>Tadict_parametersakey_inakeyastart_operationastop_operationacipheraresultTakey_inaparity_byteakey_outTakeyamodeaargsakwargsTakey_byteaparitywiu.Crypto.Cipher._EKSBlowfishO5apopTakeyTasaltTacostuMissing EKSBlowfish parameter: Tainverttakey_sizeuIncorrect EKSBlowfish key length (%d bytes)a_raw_blowfish_libaEKSBlowfish_start_operationaEKSBlowfish_stop_operationaVoidPointerac_uint8_ptrac_size_tac_uintaaddress_ofuError %X while instantiating the EKSBlowfish cipheraSmartPointeragetuThis method instantiates and returns a smart pointer to
    a low-level base cipher. It will absorb named parameters in
    the process.asaltacostainverta_create_cipherasysamodulesuCrypto.Cipher._EKSBlowfishuCreate a new EKSBlowfish cipher

    Args:

      key (bytes, bytearray, memoryview):
        The secret key to use in the symmetric cipher.
        Its length can vary from 0 to 72 bytes.

      mode (one of the supported ``MODE_*`` constants):
        The chaining mode to use for encryption or decryption.

      salt (bytes, bytearray, memoryview):
        The salt that bcrypt uses to thwart rainbow table attacks

      cost (integer):
        The complexity factor in bcrypt

      invert (bool):
        If ``False``, in the inner loop use ``ExpandKey`` first over the salt
        and then over the key, as defined in
        the `original bcrypt specification <https://www.usenix.org/legacy/events/usenix99/provos/provos_html/node4.html>`_.
        If ``True``, reverse the order, as in the first implementation of
        `bcrypt` in OpenBSD.

    :Return: an EKSBlowfish object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.CipherTa_create_cipherluCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointerac_size_tac_uint8_ptrac_uintaload_pycryptodome_raw_libTuCrypto.Cipher._raw_eksblowfishu
        int EKSBlowfish_start_operation(const uint8_t key[],
                                        size_t key_len,
                                        const uint8_t salt[16],
                                        size_t salt_len,
                                        unsigned cost,
                                        unsigned invert,
                                        void **pResult);
        int EKSBlowfish_encrypt(const void *state,
                                const uint8_t *in,
                                uint8_t *out,
                                size_t data_len);
        int EKSBlowfish_decrypt(const void *state,
                                const uint8_t *in,
                                uint8_t *out,
                                size_t data_len);
        int EKSBlowfish_stop_operation(void *state);
        a_create_base_cipheranewlaMODE_ECBlablock_size;llIluCrypto\Cipher\_EKSBlowfish.pyu<module Crypto.Cipher._EKSBlowfish>T
adict_parametersakeyasaltacostweainvertastart_operationastop_operationavoid_paresultTakeyamodeasaltacostainvertakwargsu.Crypto.Cipher._mode_cbc[aVoidPointera_statearaw_cbc_libaCBC_start_operationagetac_uint8_ptrac_size_taaddress_ofuError %d while instantiating the CBC modeaSmartPointeraCBC_stop_operationareleaseablock_sizea_copy_bytesaivaIVaencryptadecrypta_nextuCreate a new block cipher, configured in CBC mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.

          iv : bytes/bytearray/memoryview
            The initialization vector to use for encryption or decryption.
            It is as long as the cipher block.

            **The IV must be unpredictable**. Ideally it is picked randomly.

            Reusing the *IV* for encryptions performed with the same key
            compromises confidentiality.
        uencrypt() cannot be called after decrypt()acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aCBC_encryptaplaintextluData must be padded to %d byte boundary in CBC modeuError %d while encrypting in CBC modeaoutputaget_raw_bufferuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        That also means that you cannot reuse an object for encrypting
        or decrypting other data with the same key.

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            Its lenght must be multiple of the cipher block size.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        udecrypt() cannot be called after encrypt()aCBC_decryptaciphertextuError %d while decrypting in CBC modeuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            Its length must be multiple of the cipher block size.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipherapopTaIVnTaivnTnnaget_random_bytesuYou must either use 'iv' or 'IV', not bothuIncorrect IV length (it must be %d bytes long)uUnknown parameters for CBC: %saCbcModeuInstantiate a cipher object that performs CBC encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Crypto.Cipher``.

    :Keywords:
      iv : bytes/bytearray/memoryview
        The IV to use for CBC.

      IV : bytes/bytearray/memoryview
        Alias for ``iv``.

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Ciphertext Block Chaining (CBC) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCrypto.Util.py3compatTa_copy_bytesluCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libuCrypto.RandomTaget_random_bytesTuCrypto.Cipher._raw_cbcu
                int CBC_start_operation(void *cipher,
                                        const uint8_t iv[],
                                        size_t iv_len,
                                        void **pResult);
                int CBC_encrypt(void *cbcState,
                                const uint8_t *in,
                                uint8_t *out,
                                size_t data_len);
                int CBC_decrypt(void *cbcState,
                                const uint8_t *in,
                                uint8_t *out,
                                size_t data_len);
                int CBC_stop_operation(void *state);
                TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_cbca__module__u*Cipher-Block Chaining (CBC)*.

    Each of the ciphertext blocks depends on the current
    and all previous plaintext blocks.

    An Initialization Vector (*IV*) is required.

    See `NIST SP800-38A`_ , Section 6.2 .

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uCbcMode.__init__TnuCbcMode.encryptuCbcMode.decrypta__orig_bases__a_create_cbc_cipheruCrypto\Cipher\_mode_cbc.pyu<module Crypto.Cipher._mode_cbc>Ta__class__Taselfablock_cipheraivaresultTafactoryakwargsacipher_stateaivaIVTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Crypto.Cipher._mode_ccm2aEnumTuCrypto.Cipher._mode_ccmablock_sizea_copy_bytesanoncea_factorya_keya_mac_lena_msg_lena_assoc_lena_cipher_paramsa_mac_tagluCCM mode is only available for ciphers that operate on 128 bits blocksTllll
llluParameter 'mac_len' must be even and in the range 4..16 (not %d)uLength of parameter 'nonce' must be in the range 7..13 bytesanewaMODE_CBCDaivba_macaMacStatusaNOT_STARTEDa_mac_statusa_tLaupdateaencryptadecryptadigestaverifya_nextla_cumul_assoc_lena_cumul_msg_lena_cacheaMODE_CTRastructapackwBa_cipheraencryptTba_s_0a_start_macl@llalong_to_bytesclqclcainsertlaPROCESSING_AUTH_DATAa_updatedaupdateuupdate() can only be called immediately after initializationuAssociated data is too longuProtect associated data

        If there is any associated data, the caller has to invoke
        this function one or more times, before using
        ``decrypt`` or ``encrypt``.

        By *associated data* it is meant any data (e.g. packet headers) that
        will not be encrypted and will be transmitted in the clear.
        However, the receiver is still able to detect any modification to it.
        In CCM, the *associated data* is also called
        *additional authenticated data* (AAD).

        If there is no associated data, this method must not be called.

        The caller may split associated data in segments of any size, and
        invoke this method multiple times, each time with the next segment.

        :Parameters:
          assoc_data : bytes/bytearray/memoryview
            A piece of associated data. There are no restrictions on its size.
        ais_writeable_bufferaappendaassoc_data_ptamin:lnnuUpdate the MAC with associated data or plaintext
           (without FSM checks)uencrypt() can only be called after initialization or an update()adigestuAssociated data is too shortaplaintextuMessage is too longa_pad_cache_and_updateaPROCESSING_PLAINTEXTTaoutputuEncrypt data with the key set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        This method can be called only **once** if ``msg_len`` was
        not passed at initialization.

        If ``msg_len`` was given, the data to encrypt can be broken
        up in two or more pieces and `encrypt` can be called
        multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext as ``bytes``.
          Otherwise, ``None``.
        adecryptudecrypt() can only be called after initialization or an update()averifyaciphertextuDecrypt data with the key set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        This method can be called only **once** if ``msg_len`` was
        not passed at initialization.

        If ``msg_len`` was given, the data to decrypt can be
        broken up in two or more pieces and `decrypt` can be
        called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext as ``bytes``.
          Otherwise, ``None``.
        udigest() cannot be called when decrypting or validating a messagea_digestuCompute the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method returns the MAC that shall be sent to the receiver,
        together with the ciphertext.

        :Return: the MAC, as a byte string.
        uMessage is too shortastrxoruu%02xaborduCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        uverify() cannot be called when encrypting a messageaget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method checks if the decrypted message is indeed valid
        (that is, if the key is correct) and it has not been
        tampered with while in transit.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        uPerform encrypt() and digest() in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
            a tuple with two items:

            - the ciphertext, as ``bytes``
            - the MAC tag, as ``bytes``

            The first item becomes ``None`` when the ``output`` parameter
            specified a location for the result.
        uPerform decrypt() and verify() in one step.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return: the plaintext as ``bytes`` or ``None`` when the ``output``
            parameter specified a location for the result.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        akeyuMissing parameter: apopTanoncenTlamac_lenTamsg_lennTaassoc_lennaCcmModeuCreate a new block cipher, configured in CCM mode.

    :Parameters:
      factory : module
        A symmetric cipher module from `Crypto.Cipher` (like
        `Crypto.Cipher.AES`).

    :Keywords:
      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.

      nonce : bytes/bytearray/memoryview
        A value that must never be reused for any other encryption.

        Its length must be in the range ``[7..13]``.
        11 or 12 bytes are reasonable values in general. Bear in
        mind that with CCM there is a trade-off between nonce length and
        maximum message size.

        If not specified, a 11 byte long random string is used.

      mac_len : integer
        Length of the MAC, in bytes. It must be even and in
        the range ``[4..16]``. The default is 16.

      msg_len : integer
        Length of the message to (de)cipher.
        If not specified, ``encrypt`` or ``decrypt`` may only be called once.

      assoc_len : integer
        Length of the associated data.
        If not specified, all data is internally buffered.
    u
Counter with CBC-MAC (CCM) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__abinasciiTaunhexlifyuCrypto.Util.py3compatTabyte_stringaborda_copy_bytesabyte_stringuCrypto.Util._raw_apiTais_writeable_bufferuCrypto.Util.strxorTastrxoruCrypto.Util.numberTalong_to_bytesuCrypto.HashTaBLAKE2suCrypto.RandomTaget_random_bytesaenumTlllTaNOT_STARTEDaPROCESSING_AUTH_DATAaPROCESSING_PLAINTEXTTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>a__module__uCounter with CBC-MAC (CCM).

    This is an Authenticated Encryption with Associated Data (`AEAD`_) mode.
    It provides both confidentiality and authenticity.

    The header of the message may be left in the clear, if needed, and it will
    still be subject to authentication. The decryption step tells the receiver
    if the message comes from a source that really knowns the secret key.
    Additionally, decryption detects if any part of the message - including the
    header - has been modified or corrupted.

    This mode requires a nonce. The nonce shall never repeat for two
    different messages encrypted with the same key, but it does not need
    to be random.
    Note that there is a trade-off between the size of the nonce and the
    maximum size of a single message you can encrypt.

    It is important to use a large nonce if the key is reused across several
    messages and the nonce is chosen randomly.

    It is acceptable to us a short nonce if the key is only used a few times or
    if the nonce is taken from a counter.

    The following table shows the trade-off when the nonce is chosen at
    random. The column on the left shows how many messages it takes
    for the keystream to repeat **on average**. In practice, you will want to
    stop using the key way before that.

    +--------------------+---------------+-------------------+
    | Avg. # of messages |    nonce      |     Max. message  |
    | before keystream   |    size       |     size          |
    | repeats            |    (bytes)    |     (bytes)       |
    +====================+===============+===================+
    |       2^52         |      13       |        64K        |
    +--------------------+---------------+-------------------+
    |       2^48         |      12       |        16M        |
    +--------------------+---------------+-------------------+
    |       2^44         |      11       |         4G        |
    +--------------------+---------------+-------------------+
    |       2^40         |      10       |         1T        |
    +--------------------+---------------+-------------------+
    |       2^36         |       9       |        64P        |
    +--------------------+---------------+-------------------+
    |       2^32         |       8       |        16E        |
    +--------------------+---------------+-------------------+

    This mode is only available for ciphers that operate on 128 bits blocks
    (e.g. AES but not TDES).

    See `NIST SP800-38C`_ or RFC3610_.

    .. _`NIST SP800-38C`: http://csrc.nist.gov/publications/nistpubs/800-38C/SP800-38C.pdf
    .. _RFC3610: https://tools.ietf.org/html/rfc3610
    .. _AEAD: http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html

    :undocumented: __init__
    a__qualname__a__init__uCcmMode.__init__uCcmMode._start_macuCcmMode._pad_cache_and_updateuCcmMode.updateTcuCcmMode._updateTnuCcmMode.encryptuCcmMode.decryptuCcmMode.digestuCcmMode._digestahexdigestuCcmMode.hexdigestuCcmMode.verifyahexverifyuCcmMode.hexverifyaencrypt_and_digestuCcmMode.encrypt_and_digestadecrypt_and_verifyuCcmMode.decrypt_and_verifya__orig_bases__a_create_ccm_cipheruCrypto\Cipher\_mode_ccm.pyu<module Crypto.Cipher._mode_ccm>Ta__class__Taselfafactoryakeyanonceamac_lenamsg_lenaassoc_lenacipher_paramswqTafactoryakwargsakeyweanonceamac_lenamsg_lenaassoc_lenacipher_paramsTaselfTaselfalen_cacheTaselfwqaflagsab_0aassoc_len_encodedaenc_sizeafirst_data_to_macTaselfaassoc_data_ptafilleraupdate_lenTaselfaciphertextaoutputaplaintextTaselfaciphertextareceived_mac_tagaoutputaplaintextTaselfaplaintextaoutputTaenumsTaselfahex_mac_tagTaselfaassoc_dataTaselfareceived_mac_tagasecretamac1amac2.Crypto.Cipher._mode_cfb]aVoidPointera_statearaw_cfb_libaCFB_start_operationagetac_uint8_ptrac_size_taaddress_ofuError %d while instantiating the CFB modeaSmartPointeraCFB_stop_operationareleaseablock_sizea_copy_bytesaivaIVaencryptadecrypta_nextuCreate a new block cipher, configured in CFB mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.

          iv : bytes/bytearray/memoryview
            The initialization vector to use for encryption or decryption.
            It is as long as the cipher block.

            **The IV must be unpredictable**. Ideally it is picked randomly.

            Reusing the *IV* for encryptions performed with the same key
            compromises confidentiality.

          segment_size : integer
            The number of bytes the plaintext and ciphertext are segmented in.
        uencrypt() cannot be called after decrypt()acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aCFB_encryptaplaintextuError %d while encrypting in CFB modeaoutputaget_raw_bufferuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        udecrypt() cannot be called after encrypt()aCFB_decryptaciphertextuError %d while decrypting in CFB modeuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipherapopTaIVnTaivnTnnaget_random_bytesuYou must either use 'iv' or 'IV', not bothuIncorrect IV length (it must be %d bytes long)Tasegment_sizellutoo many values to unpack (expected 2)lu'segment_size' must be positive and multiple of 8 bitsuUnknown parameters for CFB: %saCfbModeuInstantiate a cipher object that performs CFB encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Crypto.Cipher``.

    :Keywords:
      iv : bytes/bytearray/memoryview
        The IV to use for CFB.

      IV : bytes/bytearray/memoryview
        Alias for ``iv``.

      segment_size : integer
        The number of bit the plaintext and ciphertext are segmented in.
        If not present, the default is 8.

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Counter Feedback (CFB) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCrypto.Util.py3compatTa_copy_bytesuCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libuCrypto.RandomTaget_random_bytesTuCrypto.Cipher._raw_cfbu
                    int CFB_start_operation(void *cipher,
                                            const uint8_t iv[],
                                            size_t iv_len,
                                            size_t segment_len, /* In bytes */
                                            void **pResult);
                    int CFB_encrypt(void *cfbState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int CFB_decrypt(void *cfbState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int CFB_stop_operation(void *state);TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_cfba__module__u*Cipher FeedBack (CFB)*.

    This mode is similar to CFB, but it transforms
    the underlying block cipher into a stream cipher.

    Plaintext and ciphertext are processed in *segments*
    of **s** bits. The mode is therefore sometimes
    labelled **s**-bit CFB.

    An Initialization Vector (*IV*) is required.

    See `NIST SP800-38A`_ , Section 6.3.

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uCfbMode.__init__TnuCfbMode.encryptuCfbMode.decrypta__orig_bases__a_create_cfb_cipheruCrypto\Cipher\_mode_cfb.pyu<module Crypto.Cipher._mode_cfb>Ta__class__Taselfablock_cipheraivasegment_sizearesultTafactoryakwargsacipher_stateaivaIVasegment_size_bytesaremTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Crypto.Cipher._mode_ctr $xa_copy_bytesanonceaVoidPointeraselfa_statearaw_ctr_libaCTR_start_operationagetac_uint8_ptrac_size_taaddress_ofuError %X while instantiating the CTR modeaSmartPointeraCTR_stop_operationareleaseablock_sizeaencryptadecrypta_nextuCreate a new block cipher, configured in CTR mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.

          initial_counter_block : bytes/bytearray/memoryview
            The initial plaintext to use to generate the key stream.

            It is as large as the cipher block, and it embeds
            the initial value of the counter.

            This value must not be reused.
            It shall contain a nonce or a random component.
            Reusing the *initial counter block* for encryptions
            performed with the same key compromises confidentiality.

          prefix_len : integer
            The amount of bytes at the beginning of the counter block
            that never change.

          counter_len : integer
            The length in bytes of the counter embedded in the counter
            block.

          little_endian : boolean
            True if the counter in the counter block is an integer encoded
            in little endian mode. If False, it is big endian.
        uencrypt() cannot be called after decrypt()acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aCTR_encryptaplaintextluThe counter has wrapped around in CTR modeuError %X while encrypting in CTR modeaoutputaget_raw_bufferuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        udecrypt() cannot be called after encrypt()aCTR_decryptaciphertextuError %X while decrypting in CTR modeuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipherapopTacounternTanoncenTainitial_valuenuInvalid parameters for CTR mode: %sTnnu'counter' and 'nonce'/'initial_value' are mutually exclusiveluImpossible to create a safe nonce for short block sizesaget_random_bytesluNonce is too longlais_native_intlluInitial counter value is too largealong_to_bytesuIncorrect length for counter byte string (%d bytes, expected %d)aCtrModeacounter_lenaprefixasuffixainitial_valuealittle_endianuIncorrect counter object (use Crypto.Util.Counter.new)awordsaappendastructapackwBldamaxareversecuSize of the counter block (%d bytes) must match block size (%d)uInstantiate a cipher object that performs CTR encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Crypto.Cipher``.

    :Keywords:
      nonce : bytes/bytearray/memoryview
        The fixed part at the beginning of the counter block - the rest is
        the counter number that gets increased when processing the next block.
        The nonce must be such that no two messages are encrypted under the
        same key and the same nonce.

        The nonce must be shorter than the block size (it can have
        zero length; the counter is then as long as the block).

        If this parameter is not present, a random nonce will be created with
        length equal to half the block size. No random nonce shorter than
        64 bits will be created though - you must really think through all
        security consequences of using such a short block size.

      initial_value : posive integer or bytes/bytearray/memoryview
        The initial value for the counter. If not present, the cipher will
        start counting from 0. The value is incremented by one for each block.
        The counter number is encoded in big endian mode.

      counter : object
        Instance of ``Crypto.Util.Counter``, which allows full customization
        of the counter block. This parameter is incompatible to both ``nonce``
        and ``initial_value``.

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Counter (CTR) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libuCrypto.RandomTaget_random_bytesuCrypto.Util.py3compatTa_copy_bytesais_native_intuCrypto.Util.numberTalong_to_bytesTuCrypto.Cipher._raw_ctru
                    int CTR_start_operation(void *cipher,
                                            uint8_t   initialCounterBlock[],
                                            size_t    initialCounterBlock_len,
                                            size_t    prefix_len,
                                            unsigned  counter_len,
                                            unsigned  littleEndian,
                                            void **pResult);
                    int CTR_encrypt(void *ctrState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int CTR_decrypt(void *ctrState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int CTR_stop_operation(void *ctrState);TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_ctra__module__u*CounTeR (CTR)* mode.

    This mode is very similar to ECB, in that
    encryption of one block is done independently of all other blocks.

    Unlike ECB, the block *position* contributes to the encryption
    and no information leaks about symbol frequency.

    Each message block is associated to a *counter* which
    must be unique across all messages that get encrypted
    with the same key (not just within the same message).
    The counter is as big as the block size.

    Counters can be generated in several ways. The most
    straightword one is to choose an *initial counter block*
    (which can be made public, similarly to the *IV* for the
    other modes) and increment its lowest **m** bits by one
    (modulo *2^m*) for each block. In most cases, **m** is
    chosen to be half the block size.

    See `NIST SP800-38A`_, Section 6.5 (for the mode) and
    Appendix B (for how to manage the *initial counter block*).

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uCtrMode.__init__TnuCtrMode.encryptuCtrMode.decrypta__orig_bases__a_create_ctr_cipheruCrypto\Cipher\_mode_ctr.pyu<module Crypto.Cipher._mode_ctr>Ta__class__Taselfablock_cipherainitial_counter_blockaprefix_lenacounter_lenalittle_endianaresultT
afactoryakwargsacipher_stateacounteranonceainitial_valueacounter_lenainitial_counter_blocka_counteraprefixasuffixalittle_endianawordsTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Crypto.Cipher._mode_eax%ablock_sizea_copy_bytesanoncea_mac_lena_mac_tagLaupdateaencryptadecryptadigestaverifya_nextlu'mac_len' must be at least 2 and not larger than %duNonce cannot be empty in EAX modeais_bufferunonce must be bytes, bytearray or memoryview;lllaCMACanewakeydaselflastructapackwBafactoryacipher_paramsTaciphermodacipher_paramsa_omaclaupdatea_signerabytes_to_longadigestaMODE_CTRainitial_valueca_cipheruEAX cipher modeuupdate() can only be called immediately after initializationuProtect associated data

        If there is any associated data, the caller has to invoke
        this function one or more times, before using
        ``decrypt`` or ``encrypt``.

        By *associated data* it is meant any data (e.g. packet headers) that
        will not be encrypted and will be transmitted in the clear.
        However, the receiver is still able to detect any modification to it.

        If there is no associated data, this method must not be called.

        The caller may split associated data in segments of any size, and
        invoke this method multiple times, each time with the next segment.

        :Parameters:
          assoc_data : bytes/bytearray/memoryview
            A piece of associated data. There are no restrictions on its size.
        aencryptuencrypt() can only be called after initialization or an update()TaoutputuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext as ``bytes``.
          Otherwise, ``None``.
        adecryptudecrypt() can only be called after initialization or an update()averifyuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext as ``bytes``.
          Otherwise, ``None``.
        udigest() cannot be called when decrypting or validating a messageastrxorataguCompute the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method returns the MAC that shall be sent to the receiver,
        together with the ciphertext.

        :Return: the MAC, as a byte string.
        uu%02xaborduCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        uverify() cannot be called when encrypting a messageaget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method checks if the decrypted message is indeed valid
        (that is, if the key is correct) and it has not been
        tampered with while in transit.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises MacMismatchError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises MacMismatchError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        uPerform encrypt() and digest() in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
            a tuple with two items:

            - the ciphertext, as ``bytes``
            - the MAC tag, as ``bytes``

            The first item becomes ``None`` when the ``output`` parameter
            specified a location for the result.
        uPerform decrypt() and verify() in one step.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return: the plaintext as ``bytes`` or ``None`` when the ``output``
            parameter specified a location for the result.
        :Raises MacMismatchError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        apopTanoncenamac_lenuMissing parameter: aEaxModeuCreate a new block cipher, configured in EAX mode.

    :Parameters:
      factory : module
        A symmetric cipher module from `Crypto.Cipher` (like
        `Crypto.Cipher.AES`).

    :Keywords:
      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.

      nonce : bytes/bytearray/memoryview
        A value that must never be reused for any other encryption.
        There are no restrictions on its length, but it is recommended to use
        at least 16 bytes.

        The nonce shall never repeat for two different messages encrypted with
        the same key, but it does not need to be random.

        If not specified, a 16 byte long random string is used.

      mac_len : integer
        Length of the MAC, in bytes. It must be no larger than the cipher
        block bytes (which is the default).
    u
EAX mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__abinasciiTaunhexlifyuCrypto.Util.py3compatTabyte_stringaborda_copy_bytesabyte_stringuCrypto.Util._raw_apiTais_bufferuCrypto.Util.strxorTastrxoruCrypto.Util.numberTalong_to_bytesabytes_to_longalong_to_bytesuCrypto.HashTaCMACaBLAKE2suCrypto.RandomTaget_random_bytesTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_eaxa__module__u*EAX* mode.

    This is an Authenticated Encryption with Associated Data
    (`AEAD`_) mode. It provides both confidentiality and authenticity.

    The header of the message may be left in the clear, if needed,
    and it will still be subject to authentication.

    The decryption step tells the receiver if the message comes
    from a source that really knowns the secret key.
    Additionally, decryption detects if any part of the message -
    including the header - has been modified or corrupted.

    This mode requires a *nonce*.

    This mode is only available for ciphers that operate on 64 or
    128 bits blocks.

    There are no official standards defining EAX.
    The implementation is based on `a proposal`__ that
    was presented to NIST.

    .. _AEAD: http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html
    .. __: http://csrc.nist.gov/groups/ST/toolkit/BCM/documents/proposedmodes/eax/eax-spec.pdf

    :undocumented: __init__
    a__qualname__a__init__uEaxMode.__init__uEaxMode.updateTnuEaxMode.encryptuEaxMode.decryptuEaxMode.digestahexdigestuEaxMode.hexdigestuEaxMode.verifyahexverifyuEaxMode.hexverifyaencrypt_and_digestuEaxMode.encrypt_and_digestadecrypt_and_verifyuEaxMode.decrypt_and_verifya__orig_bases__a_create_eax_cipheruCrypto\Cipher\_mode_eax.pyu<module Crypto.Cipher._mode_eax>Ta__class__Taselfafactoryakeyanonceamac_lenacipher_paramsacounter_intTafactoryakwargsakeyanonceamac_lenweTaselfaciphertextaoutputTaselfaciphertextareceived_mac_tagaoutputaptTaselfatagwiTaselfaplaintextaoutputactTaselfaplaintextaoutputTaselfTaselfahex_mac_tagTaselfaassoc_dataTaselfareceived_mac_tagatagwiasecretamac1amac2.Crypto.Cipher._mode_ecbJablock_sizeaVoidPointera_statearaw_ecb_libaECB_start_operationagetaaddress_ofuError %d while instantiating the ECB modeaSmartPointeraECB_stop_operationareleaseuCreate a new block cipher, configured in ECB mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.
        acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aECB_encryptac_uint8_ptraplaintextac_size_tluData must be aligned to block boundary in ECB modeuError %d while encrypting in ECB modeaoutputaget_raw_bufferuEncrypt data with the key set at initialization.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            The length must be multiple of the cipher block length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        aECB_decryptaciphertextuError %d while decrypting in ECB modeuDecrypt data with the key set at initialization.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            The length must be multiple of the cipher block length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipheruUnknown parameters for ECB: %saEcbModeuInstantiate a cipher object that performs ECB encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Crypto.Cipher``.

    All keywords are passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be presentu
Electronic Code Book (ECB) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferlaload_pycryptodome_raw_libTuCrypto.Cipher._raw_ecbu
                    int ECB_start_operation(void *cipher,
                                            void **pResult);
                    int ECB_encrypt(void *ecbState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int ECB_decrypt(void *ecbState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int ECB_stop_operation(void *state);
                    TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_ecba__module__u*Electronic Code Book (ECB)*.

    This is the simplest encryption mode. Each of the plaintext blocks
    is directly encrypted into a ciphertext block, independently of
    any other block.

    This mode is dangerous because it exposes frequency of symbols
    in your plaintext. Other modes (e.g. *CBC*) should be used instead.

    See `NIST SP800-38A`_ , Section 6.1.

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uEcbMode.__init__TnaencryptuEcbMode.encryptadecryptuEcbMode.decrypta__orig_bases__a_create_ecb_cipheruCrypto\Cipher\_mode_ecb.pyu<module Crypto.Cipher._mode_ecb>Ta__class__Taselfablock_cipheraresultTafactoryakwargsacipher_stateTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Crypto.Cipher._mode_gcm/acollectionsTanamedtuplelanamedtupleTa_GHash_ImpTaghashaghash_expandaghash_destroyTaghashaghash_expandaghash_destroyw_apostfixa_ghash_api_templateareplaceTu%imp%aportableaload_pycryptodome_raw_libuCrypto.Hash._ghash_portablea_build_implaportablea_cpu_featuresahave_clmulTu%imp%aclmuluCrypto.Hash._ghash_clmulaclmuluReturn None if CLMUL implementation is not availableaghash_caVoidPointera_exp_keyaghash_expandac_uint8_ptraaddress_ofuError %d while expanding the GHASH keyaSmartPointeragetaghash_destroyacreate_string_bufferTla_last_ylaghashac_size_tuError %d while updating GHASHaget_raw_bufferaEnumTuCrypto.Cipher._mode_gcmablock_sizeuGCM mode is only available for ciphers that operate on 128 bits blocksuNonce cannot be emptyais_bufferuNonce must be bytes, bytearray or memoryviewg+uNonce exceeds maximum lengtha_copy_bytesanoncea_factorya_keya_taga_mac_lenluParameter 'mac_len' must be in the range 4..16Laupdateaencryptadecryptadigestaverifya_nexta_no_more_assoc_dataa_auth_lena_msg_lenanewaMODE_ECBaencryptTbbdalong_to_bytesla_GHASHaupdateadigest:nlnabytes_to_longlqaMODE_CTRainitial_valuea_cipherahash_subkeya_signerca_tag_ciphera_cacheaMacStatusaPROCESSING_AUTH_DATAa_statusuupdate() can only be called immediately after initializationa_updateuAdditional Authenticated Data exceeds maximum lengthuProtect associated data

        If there is any associated data, the caller has to invoke
        this function one or more times, before using
        ``decrypt`` or ``encrypt``.

        By *associated data* it is meant any data (e.g. packet headers) that
        will not be encrypted and will be transmitted in the clear.
        However, the receiver is still able to detect any modification to it.
        In GCM, the *associated data* is also called
        *additional authenticated data* (AAD).

        If there is no associated data, this method must not be called.

        The caller may split associated data in segments of any size, and
        invoke this method multiple times, each time with the next segment.

        :Parameters:
          assoc_data : bytes/bytearray/memoryview
            A piece of associated data. There are no restrictions on its size.
        aminuencrypt() can only be called after initialization or an update()Taoutputa_pad_cache_and_updateaPROCESSING_CIPHERTEXTquPlaintext exceeds maximum lengthuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext as ``bytes``.
          Otherwise, ``None``.
        adecryptudecrypt() can only be called after initialization or an update()averifyuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext as ``bytes``.
          Otherwise, ``None``.
        udigest() cannot be called when decrypting or validating a messagea_compute_macuCompute the *binary* MAC tag in an AEAD mode.

        The caller invokes this function at the very end.

        This method returns the MAC that shall be sent to the receiver,
        together with the ciphertext.

        :Return: the MAC, as a byte string.
        uCompute MAC without any FSM checks.uu%02xaborduCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        uverify() cannot be called when encrypting a messageaget_random_bytesaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method checks if the decrypted message is indeed valid
        (that is, if the key is correct) and it has not been
        tampered with while in transit.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        uPerform encrypt() and digest() in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
            a tuple with two items:

            - the ciphertext, as ``bytes``
            - the MAC tag, as ``bytes``

            The first item becomes ``None`` when the ``output`` parameter
            specified a location for the result.
        uPerform decrypt() and verify() in one step.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
          received_mac_tag : byte string
            This is the *binary* MAC, as received from the sender.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return: the plaintext as ``bytes`` or ``None`` when the ``output``
            parameter specified a location for the result.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        akeyuMissing parameter:apopTanoncenTamac_lenlTause_clmulta_ghash_clmula_ghash_portableaGcmModeuCreate a new block cipher, configured in Galois Counter Mode (GCM).

    :Parameters:
      factory : module
        A block cipher module, taken from `Crypto.Cipher`.
        The cipher must have block length of 16 bytes.
        GCM has been only defined for `Crypto.Cipher.AES`.

    :Keywords:
      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.
        It must be 16 (e.g. *AES-128*), 24 (e.g. *AES-192*)
        or 32 (e.g. *AES-256*) bytes long.

      nonce : bytes/bytearray/memoryview
        A value that must never be reused for any other encryption.

        There are no restrictions on its length,
        but it is recommended to use at least 16 bytes.

        The nonce shall never repeat for two
        different messages encrypted with the same key,
        but it does not need to be random.

        If not provided, a 16 byte nonce will be randomly created.

      mac_len : integer
        Length of the MAC, in bytes.
        It must be no larger than 16 bytes (which is the default).
    u
Galois/Counter Mode (GCM).
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__abinasciiTaunhexlifyuCrypto.Util.py3compatTaborda_copy_bytesuCrypto.Util._raw_apiTais_bufferuCrypto.Util.numberTalong_to_bytesabytes_to_longuCrypto.HashTaBLAKE2suCrypto.RandomTaget_random_bytesTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptruCrypto.UtilTa_cpu_featuresu
    int ghash_%imp%(uint8_t y_out[16],
                    const uint8_t block_data[],
                    size_t len,
                    const uint8_t y_in[16],
                    const void *exp_key);
    int ghash_expand_%imp%(const uint8_t h[16],
                           void **ghash_tables);
    int ghash_destroy_%imp%(void *ghash_tables);
a_get_ghash_portablea_get_ghash_clmulTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>a__module__uGHASH function defined in NIST SP 800-38D, Algorithm 2.

    If X_1, X_2, .. X_m are the blocks of input data, the function
    computes:

       X_1*H^{m} + X_2*H^{m-1} + ... + X_m*H

    in the Galois field GF(2^256) using the reducing polynomial
    (x^128 + x^7 + x^2 + x + 1).
    a__qualname__a__init__u_GHASH.__init__u_GHASH.updateu_GHASH.digesta__orig_bases__aenumTllTaPROCESSING_AUTH_DATAaPROCESSING_CIPHERTEXTuGalois Counter Mode (GCM).

    This is an Authenticated Encryption with Associated Data (`AEAD`_) mode.
    It provides both confidentiality and authenticity.

    The header of the message may be left in the clear, if needed, and it will
    still be subject to authentication. The decryption step tells the receiver
    if the message comes from a source that really knowns the secret key.
    Additionally, decryption detects if any part of the message - including the
    header - has been modified or corrupted.

    This mode requires a *nonce*.

    This mode is only available for ciphers that operate on 128 bits blocks
    (e.g. AES but not TDES).

    See `NIST SP800-38D`_.

    .. _`NIST SP800-38D`: http://csrc.nist.gov/publications/nistpubs/800-38D/SP-800-38D.pdf
    .. _AEAD: http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html

    :undocumented: __init__
    uGcmMode.__init__uGcmMode.updateuGcmMode._updateuGcmMode._pad_cache_and_updateTnuGcmMode.encryptuGcmMode.decryptuGcmMode.digestuGcmMode._compute_macahexdigestuGcmMode.hexdigestuGcmMode.verifyahexverifyuGcmMode.hexverifyaencrypt_and_digestuGcmMode.encrypt_and_digestadecrypt_and_verifyuGcmMode.decrypt_and_verifya_create_gcm_cipheruCrypto\Cipher\_mode_gcm.pyu<module Crypto.Cipher._mode_gcm>Ta__class__T
aselfafactoryakeyanonceamac_lenacipher_paramsaghash_cahash_subkeyaj0afillaghash_inanonce_ctraiv_ctrTaselfasubkeyaghash_caresultTalibapostfixanamedtupleafuncsaGHASH_Impaimp_funcsaparamsTaselfas_tagTafactoryakwargsakeyweanonceamac_lenause_clmulaghash_cTaapialibaresultTaselfalen_cacheTaselfadataafilleraupdate_lenTaselfaciphertextaoutputTaselfaciphertextareceived_mac_tagaoutputaplaintextTaselfTaselfaplaintextaoutputaciphertextTaselfaplaintextaoutputTaenumsTaselfahex_mac_tagTaselfaassoc_dataTaselfablock_dataaresultTaselfareceived_mac_tagasecretamac1amac2.Crypto.Cipher._mode_ocb*ablock_sizeluOCB mode is only available for ciphers that operate on 128 bits blocksa_copy_bytesanonce;llluNonce must be at most 15 bytes longais_bufferuNonce must be bytes, bytearray or memoryviewa_mac_lenluMAC tag must be between 8 and 16 bytes longa_mac_tagca_cache_Aa_cache_PLaupdateaencryptadecryptadigestaverifya_nextakeylabchrlddabordll?lanewaMODE_ECBaencryptastructapacku15sB:nlnastrxor:nln:llnalong_to_bytesabytes_to_longl@l:lnna_create_base_cipheruUnknown keywords: aVoidPointera_statea_raw_ocb_libaOCB_start_operationagetac_size_taaddress_ofuError %d while instantiating the OCB modeaSmartPointeraOCB_stop_operationareleaseaOCB_updateac_uint8_ptruError %d while computing MAC in OCB modeaupdateuupdate() can only be called immediately after initializationLaencryptadecryptadigestaverifyaupdateaminutoo many values to unpack (expected 2)a_updateuProcess the associated data.

        If there is any associated data, the caller has to invoke
        this method one or more times, before using
        ``decrypt`` or ``encrypt``.

        By *associated data* it is meant any data (e.g. packet headers) that
        will not be encrypted and will be transmitted in the clear.
        However, the receiver shall still able to detect modifications.

        If there is no associated data, this method must not be called.

        The caller may split associated data in segments of any size, and
        invoke this method multiple times, each time with the next segment.

        :Parameters:
          assoc_data : bytes/bytearray/memoryview
            A piece of associated data.
        acreate_string_bufferuError %d while %sing in OCB modeaget_raw_buffera_transcrypt_alignedatrans_funcatrans_descuencrypt() can only be called after initialization or an update()adigesta_transcryptaOCB_encryptuEncrypt the next piece of plaintext.

        After the entire plaintext has been passed (but before `digest`),
        you **must** call this method one last time with no arguments to collect
        the final piece of ciphertext.

        If possible, use the method `encrypt_and_digest` instead.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The next piece of data to encrypt or ``None`` to signify
            that encryption has finished and that any remaining ciphertext
            has to be produced.
        :Return:
            the ciphertext, as a byte string.
            Its length may not match the length of the *plaintext*.
        adecryptudecrypt() can only be called after initialization or an update()averifyaOCB_decryptuDecrypt the next piece of ciphertext.

        After the entire ciphertext has been passed (but before `verify`),
        you **must** call this method one last time with no arguments to collect
        the remaining piece of plaintext.

        If possible, use the method `decrypt_and_verify` instead.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The next piece of data to decrypt or ``None`` to signify
            that decryption has finished and that any remaining plaintext
            has to be produced.
        :Return:
            the plaintext, as a byte string.
            Its length may not match the length of the *ciphertext*.
        TlaOCB_digestuError %d while computing digest in OCB modeudigest() cannot be called now for this ciphera_compute_mac_taguCompute the *binary* MAC tag.

        Call this method after the final `encrypt` (the one with no arguments)
        to obtain the MAC tag.

        The MAC tag is needed by the receiver to determine authenticity
        of the message.

        :Return: the MAC, as a byte string.
        uu%02xuCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        uverify() cannot be called now for this cipheraget_random_bytesaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        Call this method after the final `decrypt` (the one with no arguments)
        to check if the message is authentic and valid.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        uEncrypt the message and create the MAC tag in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The entire message to encrypt.
        :Return:
            a tuple with two byte strings:

            - the encrypted data
            - the MAC
        uDecrypted the message and verify its authenticity in one step.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The entire message to decrypt.
          received_mac_tag : byte string
            This is the *binary* MAC, as received from the sender.

        :Return: the decrypted data (byte string).
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        TlapopTamac_lenluKeyword missing: aOcbModeuCreate a new block cipher, configured in OCB mode.

    :Parameters:
      factory : module
        A symmetric cipher module from `Crypto.Cipher`
        (like `Crypto.Cipher.AES`).

    :Keywords:
      nonce : bytes/bytearray/memoryview
        A  value that must never be reused for any other encryption.
        Its length can vary from 1 to 15 bytes.
        If not specified, a random 15 bytes long nonce is generated.

      mac_len : integer
        Length of the MAC, in bytes.
        It must be in the range ``[8..16]``.
        The default is 16 (128 bits).

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Offset Codebook (OCB) mode.

OCB is Authenticated Encryption with Associated Data (AEAD) cipher mode
designed by Prof. Phillip Rogaway and specified in `RFC7253`_.

The algorithm provides both authenticity and privacy, it is very efficient,
it uses only one key and it can be used in online mode (so that encryption
or decryption can start before the end of the message is available).

This module implements the third and last variant of OCB (OCB3) and it only
works in combination with a 128-bit block symmetric cipher, like AES.

OCB is patented in US but `free licenses`_ exist for software implementations
meant for non-military purposes.

Example:
    >>> from Crypto.Cipher import AES
    >>> from Crypto.Random import get_random_bytes
    >>>
    >>> key = get_random_bytes(32)
    >>> cipher = AES.new(key, AES.MODE_OCB)
    >>> plaintext = b"Attack at dawn"
    >>> ciphertext, mac = cipher.encrypt_and_digest(plaintext)
    >>> # Deliver cipher.nonce, ciphertext and mac
    ...
    >>> cipher = AES.new(key, AES.MODE_OCB, nonce=nonce)
    >>> try:
    >>>     plaintext = cipher.decrypt_and_verify(ciphertext, mac)
    >>> except ValueError:
    >>>     print "Invalid message"
    >>> else:
    >>>     print plaintext

:undocumented: __package__

.. _RFC7253: http://www.rfc-editor.org/info/rfc7253
.. _free licenses: http://web.cs.ucdavis.edu/~rogaway/ocb/license.htm
a__doc__a__file__a__spec__aoriginahas_locationa__cached__labinasciiTaunhexlifyuCrypto.Util.py3compatTaborda_copy_bytesabchruCrypto.Util.numberTalong_to_bytesabytes_to_longuCrypto.Util.strxorTastrxoruCrypto.HashTaBLAKE2suCrypto.RandomTaget_random_bytesuCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_bufferaload_pycryptodome_raw_libTuCrypto.Cipher._raw_ocbu
                                    int OCB_start_operation(void *cipher,
                                        const uint8_t *offset_0,
                                        size_t offset_0_len,
                                        void **pState);
                                    int OCB_encrypt(void *state,
                                        const uint8_t *in,
                                        uint8_t *out,
                                        size_t data_len);
                                    int OCB_decrypt(void *state,
                                        const uint8_t *in,
                                        uint8_t *out,
                                        size_t data_len);
                                    int OCB_update(void *state,
                                        const uint8_t *in,
                                        size_t data_len);
                                    int OCB_digest(void *state,
                                        uint8_t *tag,
                                        size_t tag_len);
                                    int OCB_stop_operation(void *state);
                                    TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_ocba__module__uOffset Codebook (OCB) mode.

    :undocumented: __init__
    a__qualname__a__init__uOcbMode.__init__uOcbMode._updateuOcbMode.updateuOcbMode._transcrypt_aligneduOcbMode._transcryptTnuOcbMode.encryptuOcbMode.decryptuOcbMode._compute_mac_taguOcbMode.digestahexdigestuOcbMode.hexdigestuOcbMode.verifyahexverifyuOcbMode.hexverifyaencrypt_and_digestuOcbMode.encrypt_and_digestadecrypt_and_verifyuOcbMode.decrypt_and_verifya__orig_bases__a_create_ocb_cipheruCrypto\Cipher\_mode_ocb.pyu<module Crypto.Cipher._mode_ocb>Ta__class__Taselfafactoryanonceamac_lenacipher_paramsaparams_without_keyakeyataglen_mod128abottom_bitsatop_bitsaktop_cipheraktopastretchaoffset_0araw_cipheraresultTaselfamac_tagaresultTafactoryakwargsanonceamac_lenweTaselfain_dataatrans_funcatrans_descaout_dataaprefixafilleratrans_lenaresultTaselfain_dataain_data_lenatrans_funcatrans_descaout_dataaresultTaselfaassoc_dataaassoc_data_lenaresultTaselfaciphertextTaselfaciphertextareceived_mac_tagaplaintextTaselfTaselfaplaintextTaselfahex_mac_tagTaselfaassoc_dataafillerasegaupdate_lenTaselfareceived_mac_tagasecretamac1amac2.Crypto.Cipher._mode_ofbYaVoidPointera_statearaw_ofb_libaOFB_start_operationagetac_uint8_ptrac_size_taaddress_ofuError %d while instantiating the OFB modeaSmartPointeraOFB_stop_operationareleaseablock_sizea_copy_bytesaivaIVaencryptadecrypta_nextuCreate a new block cipher, configured in OFB mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.

          iv : bytes/bytearray/memoryview
            The initialization vector to use for encryption or decryption.
            It is as long as the cipher block.

            **The IV must be a nonce, to to be reused for any other
            message**. It shall be a nonce or a random value.

            Reusing the *IV* for encryptions performed with the same key
            compromises confidentiality.
        uencrypt() cannot be called after decrypt()acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aOFB_encryptaplaintextuError %d while encrypting in OFB modeaoutputaget_raw_bufferuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        udecrypt() cannot be called after encrypt()aOFB_decryptaciphertextuError %d while decrypting in OFB modeuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext is written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipherapopTaIVnTaivnTnnaget_random_bytesuYou must either use 'iv' or 'IV', not bothuIncorrect IV length (it must be %d bytes long)uUnknown parameters for OFB: %saOfbModeuInstantiate a cipher object that performs OFB encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Crypto.Cipher``.

    :Keywords:
      iv : bytes/bytearray/memoryview
        The IV to use for OFB.

      IV : bytes/bytearray/memoryview
        Alias for ``iv``.

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Output Feedback (CFB) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCrypto.Util.py3compatTa_copy_bytesluCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libuCrypto.RandomTaget_random_bytesTuCrypto.Cipher._raw_ofbu
                        int OFB_start_operation(void *cipher,
                                                const uint8_t iv[],
                                                size_t iv_len,
                                                void **pResult);
                        int OFB_encrypt(void *ofbState,
                                        const uint8_t *in,
                                        uint8_t *out,
                                        size_t data_len);
                        int OFB_decrypt(void *ofbState,
                                        const uint8_t *in,
                                        uint8_t *out,
                                        size_t data_len);
                        int OFB_stop_operation(void *state);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_ofba__module__u*Output FeedBack (OFB)*.

    This mode is very similar to CBC, but it
    transforms the underlying block cipher into a stream cipher.

    The keystream is the iterated block encryption of the
    previous ciphertext block.

    An Initialization Vector (*IV*) is required.

    See `NIST SP800-38A`_ , Section 6.4.

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uOfbMode.__init__TnuOfbMode.encryptuOfbMode.decrypta__orig_bases__a_create_ofb_cipheruCrypto\Cipher\_mode_ofb.pyu<module Crypto.Cipher._mode_ofb>Ta__class__Taselfablock_cipheraivaresultTafactoryakwargsacipher_stateaivaIVTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Crypto.Cipher._mode_openpgpCablock_sizea_done_first_blockanewaMODE_CFBaIVdasegment_sizela_copy_bytesaencrypt:lnna_encrypted_IVladecrypt:nlnuLength of IV must be %d or %d bytes for MODE_OPENPGPaiva_cipheruEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.

        :Return:
            the encrypted data, as a byte string.
            It is as long as *plaintext* with one exception:
            when encrypting the first message chunk,
            the encypted IV is prepended to the returned ciphertext.
        uDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.

        :Return: the decrypted data (byte string).
        apopTaivnTnnaget_random_bytesuYou must either use 'iv' or 'IV', not bothTakeyuMissing component: aOpenPgpModeafactoryuCreate a new block cipher, configured in OpenPGP mode.

    :Parameters:
      factory : module
        The module.

    :Keywords:
      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.

      IV : bytes/bytearray/memoryview
        The initialization vector to use for encryption or decryption.

        For encryption, the IV must be as long as the cipher block size.

        For decryption, it must be 2 bytes longer (it is actually the
        *encrypted* IV which was prefixed to the ciphertext).
    u
OpenPGP mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCrypto.Util.py3compatTa_copy_bytesluCrypto.RandomTaget_random_bytesTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_openpgpa__module__uOpenPGP mode.

    This mode is a variant of CFB, and it is only used in PGP and
    OpenPGP_ applications. If in doubt, use another mode.

    An Initialization Vector (*IV*) is required.

    Unlike CFB, the *encrypted* IV (not the IV itself) is
    transmitted to the receiver.

    The IV is a random data block. For legacy reasons, two of its bytes are
    duplicated to act as a checksum for the correctness of the key, which is now
    known to be insecure and is ignored. The encrypted IV is therefore 2 bytes
    longer than the clean IV.

    .. _OpenPGP: http://tools.ietf.org/html/rfc4880

    :undocumented: __init__
    a__qualname__a__init__uOpenPgpMode.__init__uOpenPgpMode.encryptuOpenPgpMode.decrypta__orig_bases__a_create_openpgp_cipheruCrypto\Cipher\_mode_openpgp.pyu<module Crypto.Cipher._mode_openpgp>Ta__class__Taselfafactoryakeyaivacipher_paramsaIV_cipherTafactoryakwargsaivaIVakeyweTaselfaciphertextTaselfaplaintextaresu.Crypto.Cipher._mode_siv$ablock_sizea_factorya_cipher_paramsTl l0l@uIncorrect key length (%d bytes)ais_bufferuWhen provided, the nonce must be bytes, bytearray or memoryviewuWhen provided, the nonce must be non-emptya_copy_bytesanoncela_mac_taga_S2VTaciphermodacipher_paramsa_kdfa_subkey_cipheranewaMODE_ECBLaupdateaencryptadecryptadigestaverifya_nextabytes_to_longg+aMODE_CTRainitial_valuecuCreate a new CTR cipher from V in SIV modeaupdateuupdate() can only be called immediately after initializationuProtect one associated data component

        For SIV, the associated data is a sequence (*vector*) of non-empty
        byte strings (*components*).

        This method consumes the next component. It must be called
        once for each of the components that constitue the associated data.

        Note that the components have clear boundaries, so that:

            >>> cipher.update(b"builtin")
            >>> cipher.update(b"securely")

        is not equivalent to:

            >>> cipher.update(b"built")
            >>> cipher.update(b"insecurely")

        If there is no associated data, this method must not be called.

        :Parameters:
          component : bytes/bytearray/memoryview
            The next associated data component.
        uencrypt() not allowed for SIV mode. Use encrypt_and_digest() instead.u
        For SIV, encryption and MAC authentication must take place at the same
        point. This method shall not be used.

        Use `encrypt_and_digest` instead.
        udecrypt() not allowed for SIV mode. Use decrypt_and_verify() instead.u
        For SIV, decryption and verification must take place at the same
        point. This method shall not be used.

        Use `decrypt_and_verify` instead.
        adigestudigest() cannot be called when decrypting or validating a messageaderiveuCompute the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method returns the MAC that shall be sent to the receiver,
        together with the ciphertext.

        :Return: the MAC, as a byte string.
        uu%02xaborduCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        averifyuverify() cannot be called when encrypting a messageaget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method checks if the decrypted message is indeed valid
        (that is, if the key is correct) and it has not been
        tampered with while in transit.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aencryptuencrypt() can only be called after initialization or an update()a_create_ctr_cipherTaoutputuPerform encrypt() and digest() in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
            a tuple with two items:

            - the ciphertext, as ``bytes``
            - the MAC tag, as ``bytes``

            The first item becomes ``None`` when the ``output`` parameter
            specified a location for the result.
        adecryptudecrypt() can only be called after initialization or an update()a_cipheruPerform decryption and verification in one step.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        You cannot reuse an object for encrypting
        or decrypting other data with the same key.

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
          mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return: the plaintext as ``bytes`` or ``None`` when the ``output``
            parameter specified a location for the result.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        akeyuMissing parameter: apopTanoncenaSivModeuCreate a new block cipher, configured in
    Synthetic Initializaton Vector (SIV) mode.

    :Parameters:

      factory : object
        A symmetric cipher module from `Crypto.Cipher`
        (like `Crypto.Cipher.AES`).

    :Keywords:

      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.
        It must be 32, 48 or 64 bytes long.
        If AES is the chosen cipher, the variants *AES-128*,
        *AES-192* and or *AES-256* will be used internally.

      nonce : bytes/bytearray/memoryview
        For deterministic encryption, it is not present.

        Otherwise, it is a value that must never be reused
        for encrypting message under this key.

        There are no restrictions on its length,
        but it is recommended to use at least 16 bytes.
    u
Synthetic Initialization Vector (SIV) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__abinasciiTahexlifyaunhexlifylahexlifyuCrypto.Util.py3compatTaborda_copy_bytesuCrypto.Util._raw_apiTais_bufferuCrypto.Util.numberTalong_to_bytesabytes_to_longalong_to_bytesuCrypto.Protocol.KDFTa_S2VuCrypto.HashTaBLAKE2suCrypto.RandomTaget_random_bytesTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_siva__module__uSynthetic Initialization Vector (SIV).

    This is an Authenticated Encryption with Associated Data (`AEAD`_) mode.
    It provides both confidentiality and authenticity.

    The header of the message may be left in the clear, if needed, and it will
    still be subject to authentication. The decryption step tells the receiver
    if the message comes from a source that really knowns the secret key.
    Additionally, decryption detects if any part of the message - including the
    header - has been modified or corrupted.

    Unlike other AEAD modes such as CCM, EAX or GCM, accidental reuse of a
    nonce is not catastrophic for the confidentiality of the message. The only
    effect is that an attacker can tell when the same plaintext (and same
    associated data) is protected with the same key.

    The length of the MAC is fixed to the block size of the underlying cipher.
    The key size is twice the length of the key of the underlying cipher.

    This mode is only available for AES ciphers.

    +--------------------+---------------+-------------------+
    |      Cipher        | SIV MAC size  |   SIV key length  |
    |                    |    (bytes)    |     (bytes)       |
    +====================+===============+===================+
    |    AES-128         |      16       |        32         |
    +--------------------+---------------+-------------------+
    |    AES-192         |      16       |        48         |
    +--------------------+---------------+-------------------+
    |    AES-256         |      16       |        64         |
    +--------------------+---------------+-------------------+

    See `RFC5297`_ and the `original paper`__.

    .. _RFC5297: https://tools.ietf.org/html/rfc5297
    .. _AEAD: http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html
    .. __: http://www.cs.ucdavis.edu/~rogaway/papers/keywrap.pdf

    :undocumented: __init__
    a__qualname__a__init__uSivMode.__init__uSivMode._create_ctr_cipheruSivMode.updateuSivMode.encryptuSivMode.decryptuSivMode.digestahexdigestuSivMode.hexdigestuSivMode.verifyahexverifyuSivMode.hexverifyTnaencrypt_and_digestuSivMode.encrypt_and_digestadecrypt_and_verifyuSivMode.decrypt_and_verifya__orig_bases__a_create_siv_cipheruCrypto\Cipher\_mode_siv.pyu<module Crypto.Cipher._mode_siv>Ta__class__Taselfafactoryakeyanonceakwargsasubkey_sizeTaselfwvav_intwqTafactoryakwargsakeyweanonceTaselfaciphertextTaselfaciphertextamac_tagaoutputaplaintextTaselfTaselfaplaintextTaselfaplaintextaoutputacipherTaselfahex_mac_tagTaselfacomponentTaselfareceived_mac_tagasecretamac1amac2.Crypto.CipherPakeya_modesapopTaadd_aes_modesFa_extra_modesamodesuMode not supportedTlll
lluToo many arguments for this modelanonceTllllaIVlluIV is not meaningful for the ECB modea__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptou\not_existingaCipherTaNUITKA_PACKAGE_Crypto_Cipheru\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aosuCrypto.Cipher._mode_ecbTa_create_ecb_ciphera_create_ecb_cipheruCrypto.Cipher._mode_cbcTa_create_cbc_ciphera_create_cbc_cipheruCrypto.Cipher._mode_cfbTa_create_cfb_ciphera_create_cfb_cipheruCrypto.Cipher._mode_ofbTa_create_ofb_ciphera_create_ofb_cipheruCrypto.Cipher._mode_ctrTa_create_ctr_ciphera_create_ctr_cipheruCrypto.Cipher._mode_openpgpTa_create_openpgp_ciphera_create_openpgp_cipheruCrypto.Cipher._mode_ccmTa_create_ccm_ciphera_create_ccm_cipheruCrypto.Cipher._mode_eaxTa_create_eax_ciphera_create_eax_cipheruCrypto.Cipher._mode_sivTa_create_siv_ciphera_create_siv_cipheruCrypto.Cipher._mode_gcmTa_create_gcm_ciphera_create_gcm_cipheruCrypto.Cipher._mode_ocbTa_create_ocb_ciphera_create_ocb_cipherlllllll
lla_create_cipheruCrypto\Cipher\__init__.pyu<module Crypto.Cipher>Tafactoryakeyamodeaargsakwargsamodesu.Crypto.Hash.BLAKE2stadigest_sizea_update_after_digesta_digest_doneTllll u1.3.6.1.4.1.1722.12.2.2.aoidaVoidPointera_raw_blake2s_libablake2s_initaaddress_ofac_uint8_ptrac_size_tuError %d while instantiating BLAKE2saSmartPointeragetablake2s_destroya_stateaupdateuYou can only call 'digest' or 'hexdigest' on this objectablake2s_updateuError %d while hashing BLAKE2s datauContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferTl ablake2s_digestuError %d while creating BLAKE2s digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aget_random_bytesTlanewlTadigest_bitsakeyadatauMAC check faileduVerify that a given **binary** MAC (computed by another party)
        is valid.

        Args:
          mac_tag (byte string/byte array/memoryview): the expected MAC of the message.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        averifyaunhexlifyatobytesuVerify that a given **printable** MAC (computed by another party)
        is valid.

        Args:
            hex_mac_tag (string): the expected MAC of the message, as a hexadecimal string.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        adigest_bytesadigest_bitsakwargsuReturn a new instance of a BLAKE2s hash object.
        See :func:`new`.
        adataapopTaupdate_after_digestFTadigest_bytesnTadigest_bitsnuOnly one digest parameter must be providedTnnl lu'digest_bytes' not in range 1..32llu'digest_bits' not in range 8..256, with steps of 8TakeycuBLAKE2s key cannot exceed 32 bytesuUnknown parameters: aBLAKE2s_HashuCreate a new hash object.

    Args:
        data (byte string/byte array/memoryview):
            Optional. The very first chunk of the message to hash.
            It is equivalent to an early call to :meth:`BLAKE2s_Hash.update`.
        digest_bytes (integer):
            Optional. The size of the digest, in bytes (1 to 32). Default is 32.
        digest_bits (integer):
            Optional and alternative to ``digest_bytes``.
            The size of the digest, in bits (8 to 256, in steps of 8).
            Default is 256.
        key (byte string):
            Optional. The key to use to compute the MAC (1 to 64 bytes).
            If not specified, no key will be used.
        update_after_digest (boolean):
            Optional. By default, a hash object cannot be updated anymore after
            the digest is computed. When this flag is ``True``, such check
            is no longer enforced.

    Returns:
        A :class:`BLAKE2s_Hash` hash object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__abinasciiTaunhexlifyluCrypto.Util.py3compatTabordatobytesuCrypto.RandomTaget_random_bytesuCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCrypto.Hash._BLAKE2su
                        int blake2s_init(void **state,
                                         const uint8_t *key,
                                         size_t key_size,
                                         size_t digest_size);
                        int blake2s_destroy(void *state);
                        int blake2s_update(void *state,
                                           const uint8_t *buf,
                                           size_t len);
                        int blake2s_digest(const void *state,
                                           uint8_t digest[32]);
                        int blake2s_copy(const void *src, void *dst);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.BLAKE2sa__module__uA BLAKE2s hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__ablock_sizea__init__uBLAKE2s_Hash.__init__uBLAKE2s_Hash.updateuBLAKE2s_Hash.digestahexdigestuBLAKE2s_Hash.hexdigestuBLAKE2s_Hash.verifyahexverifyuBLAKE2s_Hash.hexverifyuBLAKE2s_Hash.newa__orig_bases__uCrypto\Hash\BLAKE2s.pyu<module Crypto.Hash.BLAKE2s>Ta__class__Taselfadataakeyadigest_bytesaupdate_after_digestastatearesultTaselfabfraresultTaselfTaselfahex_mac_tagTakwargsadataaupdate_after_digestadigest_bytesadigest_bitsakeyTaselfakwargsTaselfadataaresultTaselfamac_tagasecretamac1amac2.Crypto.Hash.CMACabytes_to_longlalong_to_bytesadigest_sizea_copy_bytesa_keya_factorya_cipher_paramsablock_sizea_block_sizea_mac_taga_update_after_digestllla_max_sizellquCMAC requires a cipher with a block size of 8 or 16 bytes, not %ddanewaMODE_ECBa_ecbaencryptabordlla_shift_bytesa_k1a_k2aMODE_CBCa_cbca_cachea_cache_na_last_cta_last_pta_data_sizeaupdateuupdate() cannot be called after digest() or verify()amina_updateamsgabsuAuthenticate the next chunk of message.

        Args:
            data (byte string/byte array/memoryview): The next chunk of data
        lastrxoruUpdate a block aligned to the block boundarya__new__aCMACacopy:nnnuReturn a copy ("clone") of the CMAC object.

        The copy will have the same internal state as the original CMAC
        object.
        This can be used to efficiently compute the MAC tag of byte
        strings that share a common initial substring.

        :return: An :class:`CMAC`
        uMAC is unsafe for this messageduReturn the **binary** (non-printable) MAC tag of the message
        that has been authenticated so far.

        :return: The MAC tag, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xuReturn the **printable** MAC tag of the message authenticated so far.

        :return: The MAC tag, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduVerify that a given **binary** MAC (computed by another party)
        is valid.

        Args:
          mac_tag (byte string/byte array/memoryview): the expected MAC of the message.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        averifyaunhexlifyatobytesuciphermod must be specified (try AES)luMAC tag length must be at least 4 bytes longaciphermoduMAC tag length cannot be larger than a cipher block (%d) bytesuCreate a new MAC object.

    Args:
        key (byte string/byte array/memoryview):
            key for the CMAC object.
            The key must be valid for the underlying cipher algorithm.
            For instance, it must be 16 bytes long for AES-128.
        ciphermod (module):
            A cipher module from :mod:`Crypto.Cipher`.
            The cipher's block size has to be 128 bits,
            like :mod:`Crypto.Cipher.AES`, to reduce the probability
            of collisions.
        msg (byte string/byte array/memoryview):
            Optional. The very first chunk of the message to authenticate.
            It is equivalent to an early call to `CMAC.update`. Optional.
        cipher_params (dict):
            Optional. A set of parameters to use when instantiating a cipher
            object.
        mac_len (integer):
            Length of the MAC, in bytes.
            It must be at least 4 bytes long.
            The default (and recommended) length matches the size of a cipher block.
        update_after_digest (boolean):
            Optional. By default, a hash object cannot be updated anymore after
            the digest is computed. When this flag is ``True``, such check
            is no longer enforced.
    Returns:
        A :class:`CMAC` object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__abinasciiTaunhexlifyuCrypto.HashTaBLAKE2suCrypto.Util.strxorTastrxoruCrypto.Util.numberTalong_to_bytesabytes_to_longuCrypto.Util.py3compatTabordatobytesa_copy_bytesuCrypto.RandomTaget_random_bytesTlTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.CMACa__module__uA CMAC hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar digest_size: the size in bytes of the resulting MAC tag
    :vartype digest_size: integer
    a__qualname__a__init__uCMAC.__init__uCMAC.updateuCMAC._updateuCMAC.copyuCMAC.digestahexdigestuCMAC.hexdigestuCMAC.verifyahexverifyuCMAC.hexverifya__orig_bases__TnnnnFuCrypto\Hash\CMAC.pyu<module Crypto.Hash.CMAC>Ta__class__Taselfakeyamsgaciphermodacipher_paramsamac_lenaupdate_after_digestabsaconst_Rbazero_blockwLTabsaxor_lsbanumTaselfadata_blockabsactasecond_lastTaselfaobjTaselfabsaptapartialTaselfTaselfahex_mac_tagTakeyamsgaciphermodacipher_paramsamac_lenaupdate_after_digestTaselfamsgabsafilleraremainTaselfamac_tagasecretamac1amac2.Crypto.Hash.HMAC^aMD5cadigest_sizea_digestmodatobytesablock_sizedanewadigestuHash type incompatible to HMACastrxord6a_inneraupdated\a_outeruAuthenticate the next chunk of message.

        Args:
            data (byte string/byte array/memoryview): The next chunk of data
        a_pbkdf2_hmac_assistuCarry out the expensive inner loop for PBKDF2-HMACaHMACTcfake keyTadigestmodacopyuReturn a copy ("clone") of the HMAC object.

        The copy will have the same internal state as the original HMAC
        object.
        This can be used to efficiently compute the MAC tag of byte
        strings that share a common initial substring.

        :return: An :class:`HMAC`
        uReturn the **binary** (non-printable) MAC tag of the message
        authenticated so far.

        :return: The MAC tag digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        aget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduVerify that a given **binary** MAC (computed by another party)
        is valid.

        Args:
          mac_tag (byte string/byte string/memoryview): the expected MAC of the message.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        uu%02xaborduReturn the **printable** MAC tag of the message authenticated so far.

        :return: The MAC tag, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        averifyaunhexlifyuVerify that a given **printable** MAC (computed by another party)
        is valid.

        Args:
            hex_mac_tag (string): the expected MAC of the message,
                as a hexadecimal string.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        uCreate a new MAC object.

    Args:
        key (bytes/bytearray/memoryview):
            key for the MAC object.
            It must be long enough to match the expected security level of the
            MAC.
        msg (bytes/bytearray/memoryview):
            Optional. The very first chunk of the message to authenticate.
            It is equivalent to an early call to :meth:`HMAC.update`.
        digestmod (module):
            The hash to use to implement the HMAC.
            Default is :mod:`Crypto.Hash.MD5`.

    Returns:
        An :class:`HMAC` object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTabordatobyteslabinasciiTaunhexlifyuCrypto.HashTaMD5TaBLAKE2suCrypto.Util.strxorTastrxoruCrypto.RandomTaget_random_bytesa__all__TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.HMACa__module__uAn HMAC hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar digest_size: the size in bytes of the resulting MAC tag
    :vartype digest_size: integer
    a__qualname__Tcna__init__uHMAC.__init__uHMAC.updateuHMAC._pbkdf2_hmac_assistuHMAC.copyuHMAC.digestuHMAC.verifyahexdigestuHMAC.hexdigestahexverifyuHMAC.hexverifya__orig_bases__uCrypto\Hash\HMAC.pyu<module Crypto.Hash.HMAC>Ta__class__Taselfakeyamsgadigestmodakey_0ahash_kakey_0_ipadakey_0_opadTaselfafirst_digestaiterationsaresultTaselfanew_hmacTaselfafrozen_outer_hashTaselfTaselfahex_mac_tagTakeyamsgadigestmodTaselfamsgTaselfamac_tagasecretamac1amac2.Crypto.Hash.MD5|WaVoidPointera_raw_md5_libaMD5_initaaddress_ofaValueErroruError %d while instantiating MD5aSmartPointeragetaMD5_destroya_stateaupdateaMD5_updateac_uint8_ptrac_size_talenuContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferadigest_sizeaMD5_digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aMD5HashaMD5_copyuError %d while copying MD5uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA-1 hash object.anewuCreate a new hash object.

    :parameter data:
        Optional. The very first chunk of the message to hash.
        It is equivalent to an early call to :meth:`MD5Hash.update`.
    :type data: byte string/byte array/memoryview

    :Return: A :class:`MD5Hash` hash object
    laMD5_pbkdf2_hmac_assistuError %d with PBKDF2-HMAC assis for MD5uCompute the expensive inner loop in PBKDF-HMAC.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTw*uCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCrypto.Hash._MD5u
                        #define MD5_DIGEST_SIZE 16

                        int MD5_init(void **shaState);
                        int MD5_destroy(void *shaState);
                        int MD5_update(void *hs,
                                          const uint8_t *buf,
                                          size_t len);
                        int MD5_digest(const void *shaState,
                                          uint8_t digest[MD5_DIGEST_SIZE]);
                        int MD5_copy(const void *src, void *dst);

                        int MD5_pbkdf2_hmac_assist(const void *inner,
                                            const void *outer,
                                            const uint8_t first_digest[MD5_DIGEST_SIZE],
                                            uint8_t final_digest[MD5_DIGEST_SIZE],
                                            size_t iterations);
                        aobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.MD5a__module__uA MD5 hash object.
    Do not instantiate directly.
    Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__ll@ablock_sizeu1.2.840.113549.2.5aoidTna__init__uMD5Hash.__init__uMD5Hash.updateuMD5Hash.digestahexdigestuMD5Hash.hexdigestacopyuMD5Hash.copyuMD5Hash.newa__orig_bases__a_pbkdf2_hmac_assistuCrypto\Hash\MD5.pyu<module Crypto.Hash.MD5>Ta__class__TaselfadataastatearesultTainneraouterafirst_digestaiterationsabfraresultTaselfaclonearesultTaselfabfraresultTaselfTadataTaselfadataTaselfadataaresult.Crypto.Hash.SHA1WaVoidPointera_raw_sha1_libaSHA1_initaaddress_ofaValueErroruError %d while instantiating SHA1aSmartPointeragetaSHA1_destroya_stateaupdateaSHA1_updateac_uint8_ptrac_size_talenuContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferadigest_sizeaSHA1_digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aSHA1HashaSHA1_copyuError %d while copying SHA1uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA-1 hash object.anewuCreate a new hash object.

    :parameter data:
        Optional. The very first chunk of the message to hash.
        It is equivalent to an early call to :meth:`SHA1Hash.update`.
    :type data: byte string/byte array/memoryview

    :Return: A :class:`SHA1Hash` hash object
    laSHA1_pbkdf2_hmac_assistuError %d with PBKDF2-HMAC assis for SHA1uCompute the expensive inner loop in PBKDF-HMAC.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTw*uCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCrypto.Hash._SHA1u
                        #define SHA1_DIGEST_SIZE 20

                        int SHA1_init(void **shaState);
                        int SHA1_destroy(void *shaState);
                        int SHA1_update(void *hs,
                                          const uint8_t *buf,
                                          size_t len);
                        int SHA1_digest(const void *shaState,
                                          uint8_t digest[SHA1_DIGEST_SIZE]);
                        int SHA1_copy(const void *src, void *dst);

                        int SHA1_pbkdf2_hmac_assist(const void *inner,
                                            const void *outer,
                                            const uint8_t first_digest[SHA1_DIGEST_SIZE],
                                            uint8_t final_digest[SHA1_DIGEST_SIZE],
                                            size_t iterations);
                        aobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.SHA1a__module__uA SHA-1 hash object.
    Do not instantiate directly.
    Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__ll@ablock_sizeu1.3.14.3.2.26aoidTna__init__uSHA1Hash.__init__uSHA1Hash.updateuSHA1Hash.digestahexdigestuSHA1Hash.hexdigestacopyuSHA1Hash.copyuSHA1Hash.newa__orig_bases__a_pbkdf2_hmac_assistuCrypto\Hash\SHA1.pyu<module Crypto.Hash.SHA1>Ta__class__TaselfadataastatearesultTainneraouterafirst_digestaiterationsabfraresultTaselfaclonearesultTaselfabfraresultTaselfTadataTaselfadataTaselfadataaresult.Crypto.Hash.SHA256:WaVoidPointera_raw_sha256_libaSHA256_initaaddress_ofuError %d while instantiating SHA256aSmartPointeragetaSHA256_destroya_stateaupdateaSHA256_updateac_uint8_ptrac_size_tuError %d while hashing data with SHA256uContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferadigest_sizeaSHA256_digestuError %d while making SHA256 digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aSHA256HashaSHA256_copyuError %d while copying SHA256uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA-256 hash object.anewuCreate a new hash object.

    :parameter data:
        Optional. The very first chunk of the message to hash.
        It is equivalent to an early call to :meth:`SHA256Hash.update`.
    :type data: byte string/byte array/memoryview

    :Return: A :class:`SHA256Hash` hash object
    laSHA256_pbkdf2_hmac_assistuError %d with PBKDF2-HMAC assist for SHA256uCompute the expensive inner loop in PBKDF-HMAC.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTaborduCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCrypto.Hash._SHA256u
                        int SHA256_init(void **shaState);
                        int SHA256_destroy(void *shaState);
                        int SHA256_update(void *hs,
                                          const uint8_t *buf,
                                          size_t len);
                        int SHA256_digest(const void *shaState,
                                          uint8_t *digest,
                                          size_t digest_size);
                        int SHA256_copy(const void *src, void *dst);

                        int SHA256_pbkdf2_hmac_assist(const void *inner,
                                            const void *outer,
                                            const uint8_t *first_digest,
                                            uint8_t *final_digest,
                                            size_t iterations,
                                            size_t digest_size);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.SHA256a__module__uA SHA-256 hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__l l@ablock_sizeu2.16.840.1.101.3.4.2.1aoidTna__init__uSHA256Hash.__init__uSHA256Hash.updateuSHA256Hash.digestahexdigestuSHA256Hash.hexdigestacopyuSHA256Hash.copyuSHA256Hash.newa__orig_bases__a_pbkdf2_hmac_assistuCrypto\Hash\SHA256.pyu<module Crypto.Hash.SHA256>Ta__class__TaselfadataastatearesultTainneraouterafirst_digestaiterationsabfraresultTaselfaclonearesultTaselfabfraresultTaselfTadataTaselfadataTaselfadataaresult.Crypto.Hasha__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptou\not_existingaHashTaNUITKA_PACKAGE_Crypto_Hashu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__LaHMACaMD2aMD4aMD5aRIPEMD160aSHA1aSHA224aSHA256aSHA384aSHA512aCMACaPoly1305acSHAKE128acSHAKE256aKMAC128aKMAC256aTupleHash128aTupleHash256aKangarooTwelvea__all__uCrypto\Hash\__init__.pyu<module Crypto.Hash>u.Crypto.Protocol.KDFE9aSHA1atobytesanewadigest_sizeuSelected hash algorithm has a too short digest (%d bytes).uSalt is not 8 bytes long (%d bytes instead).aiter_rangelapHashadigestuDerive one key from a password (or passphrase).

    This function performs key derivation according to an old version of
    the PKCS#5 standard (v1.5) or `RFC2898
    <https://www.ietf.org/rfc/rfc2898.txt>`_.

    Args:
     password (string):
        The secret password to generate the key from.
     salt (byte string):
        An 8 byte string to use for better protection from dictionary attacks.
        This value does not need to be kept secret, but it should be randomly
        chosen for each derivation.
     dkLen (integer):
        The length of the desired key. The default is 16 bytes, suitable for
        instance for :mod:`Crypto.Cipher.AES`.
     count (integer):
        The number of iterations to carry out. The recommendation is 1000 or
        more.
     hashAlgo (module):
        The hash algorithm to use, as a module or an object from the :mod:`Crypto.Hash` package.
        The digest length must be no shorter than ``dkLen``.
        The default algorithm is :mod:`Crypto.Hash.SHA1`.

    Return:
        A byte string of length ``dkLen`` that can be used as key.
    u'prf' and 'hmac_hash_module' are mutually exlusiveahmac_hash_modulea_pbkdf2_hmac_assistu<lambda>uPBKDF2.<locals>.<lambda>alinkuPBKDF2.<locals>.linkcakeyaprfapasswordasaltastructapacku>IwilareduceastrxoraHMACacopyaupdateacountuDerive one or more keys from a password (or passphrase).

    This function performs key derivation according to the PKCS#5 standard (v2.0).

    Args:
     password (string or byte string):
        The secret password to generate the key from.

        Strings will be encoded as ISO 8859-1 (also known as Latin-1),
        which does not allow any characters with codepoints > 255.
     salt (string or byte string):
        A (byte) string to use for better protection from dictionary attacks.
        This value does not need to be kept secret, but it should be randomly
        chosen for each derivation. It is recommended to use at least 16 bytes.

        Strings will be encoded as ISO 8859-1 (also known as Latin-1),
        which does not allow any characters with codepoints > 255.
     dkLen (integer):
        The cumulative length of the keys to produce.

        Due to a flaw in the PBKDF2 design, you should not request more bytes
        than the ``prf`` can output. For instance, ``dkLen`` should not exceed
        20 bytes in combination with ``HMAC-SHA1``.
     count (integer):
        The number of iterations to carry out. The higher the value, the slower
        and the more secure the function becomes.

        You should find the maximum number of iterations that keeps the
        key derivation still acceptable on the slowest hardware you must support.

        Although the default value is 1000, **it is recommended to use at least
        1000000 (1 million) iterations**.
     prf (callable):
        A pseudorandom function. It must be a function that returns a
        pseudorandom byte string from two parameters: a secret and a salt.
        The slower the algorithm, the more secure the derivation function.
        If not specified, **HMAC-SHA1** is used.
     hmac_hash_module (module):
        A module from ``Crypto.Hash`` implementing a Merkle-Damgard cryptographic
        hash, which PBKDF2 must use in combination with HMAC.
        This parameter is mutually exclusive with ``prf``.

    Return:
        A byte string of length ``dkLen`` that can be used as key material.
        If you want multiple keys, just break up this string into segments of the desired length.
    utoo many values to unpack (expected 2)lwsu<genexpr>uPBKDF2.<locals>.<genexpr>a_copy_bytesa_keya_ciphermoddablock_sizea_last_stringa_cachela_n_updatesa_cipher_paramsuInitialize the S2V PRF.

        :Parameters:
          key : byte string
            A secret that can be used as key for CMACs
            based on ciphers from ``ciphermod``.
          ciphermod : module
            A block cipher module from `Crypto.Cipher`.
          cipher_params : dictionary
            A set of extra parameters to use to create a cipher instance.
        a_S2VuCreate a new S2V PRF.

        :Parameters:
          key : byte string
            A secret that can be used as key for CMACs
            based on ciphers from ``ciphermod``.
          ciphermod : module
            A block cipher module from `Crypto.Cipher`.
        abytes_to_longabordllalong_to_bytesuToo many components passed to S2VaCMACTamsgaciphermodacipher_paramsa_doubleuPass the next component of the vector.

        The maximum number of components you can pass is equal to the block
        length of the cipher (in bits) minus 1.

        :Parameters:
          item : byte string
            The next component of the vector.
        :Raise TypeError: when the limit on the number of components has been reached.
        :nln:lnndb:nlnu"Derive a secret from the vector of components.

        :Return: a byte string, as long as the block length of the cipher.
        luToo much secret data to deriveTadigestmodatlenaprkwtlacontextwBwnahashmodaappendakey_lenuDerive one or more keys from a master secret using
    the HMAC-based KDF defined in RFC5869_.

    Args:
     master (byte string):
        The unguessable value used by the KDF to generate the other keys.
        It must be a high-entropy secret, though not necessarily uniform.
        It must not be a password.
     key_len (integer):
        The length in bytes of every derived key.
     salt (byte string):
        A non-secret, reusable value that strengthens the randomness
        extraction step.
        Ideally, it is as long as the digest size of the chosen hash.
        If empty, a string of zeroes in used.
     hashmod (module):
        A cryptographic hash algorithm from :mod:`Crypto.Hash`.
        :mod:`Crypto.Hash.SHA512` is a good choice.
     num_keys (integer):
        The number of keys to derive. Every key is :data:`key_len` bytes long.
        The maximum cumulative length of all keys is
        255 times the digest size.
     context (byte string):
        Optional identifier describing what the keys are used for.

    Return:
        A byte string or a tuple of byte strings.

    .. _RFC5869: http://tools.ietf.org/html/rfc5869
    abit_sizeuN must be a power of 2quN is too bigqup or r are too biguscrypt.<locals>.<lambda>aPBKDF2Taprfa_raw_scrypt_libascryptROMixa_raw_salsa20_libaSalsa20_8_corewracreate_string_bufferac_size_twNacoreuError %X while running scryptadata_outaget_raw_bufferuDerive one or more keys from a passphrase.

    Args:
     password (string):
        The secret pass phrase to generate the keys from.
     salt (string):
        A string to use for better protection from dictionary attacks.
        This value does not need to be kept secret,
        but it should be randomly chosen for each derivation.
        It is recommended to be at least 16 bytes long.
     key_len (integer):
        The length in bytes of each derived key.
     N (integer):
        CPU/Memory cost parameter. It must be a power of 2 and less
        than :math:`2^{32}`.
     r (integer):
        Block size parameter.
     p (integer):
        Parallelization parameter.
        It must be no greater than :math:`(2^{32}-1)/(4r)`.
     num_keys (integer):
        The number of keys to derive. Every key is :data:`key_len` bytes long.
        By default, only 1 key is generated.
        The maximum cumulative length of all keys is :math:`(2^{32}-1)*32`
        (that is, 128TB).

    A good choice of parameters *(N, r , p)* was suggested
    by Colin Percival in his `presentation in 2009`__:

    - *( 2¹⁴, 8, 1 )* for interactive logins (≤100ms)
    - *( 2²⁰, 8, 1 )* for file encryption (≤5s)

    Return:
        A byte string or a tuple of byte strings.

    .. __: http://www.tarsnap.com/scrypt/scrypt-slides.pdf
    aSHA256:lnnazfillTlabitsabstrl:nlnaresultu./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789uatostrafindTlluIncorrect length:nln:nlnabchruCrypto.CipherTa_EKSBlowfisha_EKSBlowfishuThe password is too long. It must be 72 bytes at most.lubcrypt cost factor must be in the range 4..31aMODE_ECB;ll@lacipheraencryptactextuutf-8TluThe password contains the zero byteaget_random_bytesTlubcrypt salt must be 16 bytes longa_bcrypt_hashcOrpheanBeholderScryDoubtd$Tla_bcrypt_encodec$2auHash a password into a key, using the OpenBSD bcrypt protocol.

    Args:
      password (byte string or string):
        The secret password or pass phrase.
        It must be at most 72 bytes long.
        It must not contain the zero byte.
        Unicode strings will be encoded as UTF-8.
      cost (integer):
        The exponential factor that makes it slower to compute the hash.
        It must be in the range 4 to 31.
        A value of at least 12 is recommended.
      salt (byte string):
        Optional. Random byte string to thwarts dictionary and rainbow table
        attacks. It must be 16 bytes long.
        If not passed, a random value is generated.

    Return (byte string):
        The bcrypt hash

    Raises:
        ValueError: if password is longer than 72 bytes or if it contains the zero byte

   uIncorrect length of the bcrypt hash: %d bytes instead of 60:nlnc$2a$uUnsupported prefixareacompileTc\$2a\$([0-9][0-9])\$([A-Za-z0-9./]{22,22})([A-Za-z0-9./]{31,31})amatchuIncorrect bcrypt hash formatagroupTluIncorrect costa_bcrypt_decodeabcryptaBLAKE2slTadigest_bitsakeyadatauIncorrect bcrypt hashuVerify if the provided password matches the given bcrypt hash.

    Args:
      password (byte string or string):
        The secret password or pass phrase to test.
        It must be at most 72 bytes long.
        It must not contain the zero byte.
        Unicode strings will be encoded as UTF-8.
      bcrypt_hash (byte string, bytearray):
        The reference bcrypt hash the password needs to be checked against.

    Raises:
        ValueError: if the password does not match
    TduNull byte found in labeluNull byte found in contextadkalabelakey_len_encamasterquOverflow in SP800 108 counteruDerive one or more keys from a master secret using
    a pseudorandom function in Counter Mode, as specified in
    `NIST SP 800-108r1 <https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-108r1.pdf>`_.

    Args:
     master (byte string):
        The secret value used by the KDF to derive the other keys.
        It must not be a password.
        The length on the secret must be consistent with the input expected by
        the :data:`prf` function.
     key_len (integer):
        The length in bytes of each derived key.
     prf (function):
        A pseudorandom function that takes two byte strings as parameters:
        the secret and an input. It returns another byte string.
     num_keys (integer):
        The number of keys to derive. Every key is :data:`key_len` bytes long.
        By default, only 1 key is derived.
     label (byte string):
        Optional description of the purpose of the derived keys.
        It must not contain zero bytes.
     context (byte string):
        Optional information pertaining to
        the protocol that uses the keys, such as the identity of the
        participants, nonces, session IDs, etc.
        It must not contain zero bytes.

    Return:
        - a byte string (if ``num_keys`` is not specified), or
        - a tuple of byte strings (if ``num_key`` is specified).
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTatobytesaborda_copy_bytesaiter_rangeatostrabchrabstruCrypto.HashTaSHA1aSHA256aHMACaCMACaBLAKE2suCrypto.Util.strxorTastrxoruCrypto.RandomTaget_random_bytesuCrypto.Util.numberTasizealong_to_bytesabytes_to_longasizeuCrypto.Util._raw_apiTaload_pycryptodome_raw_libacreate_string_bufferaget_raw_bufferac_size_taload_pycryptodome_raw_libTuCrypto.Cipher._Salsa20u
                    int Salsa20_8_core(const uint8_t *x, const uint8_t *y,
                                       uint8_t *out);
                    TuCrypto.Protocol._scryptu
                    typedef int (core_t)(const uint8_t [64], const uint8_t [64], uint8_t [64]);
                    int scryptROMix(const uint8_t *data_in, uint8_t *data_out,
                           size_t data_len, unsigned N, core_t *core);
                    TlnaPBKDF1TllnnTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Protocol.KDFa__module__uString-to-vector PRF as defined in `RFC5297`_.

    This class implements a pseudorandom function family
    based on CMAC that takes as input a vector of strings.

    .. _RFC5297: http://tools.ietf.org/html/rfc5297
    a__qualname__Tna__init__u_S2V.__init__astaticmethodu_S2V.newu_S2V._doubleu_S2V.updateaderiveu_S2V.derivea__orig_bases__TlnaHKDFascryptabcrypt_checkTncpaSP800_108_CounteruCrypto\Protocol\KDF.pyTa.0wjalinkwsTwpwsTwpwsahmac_hash_moduleTahmac_hash_moduleu<module Crypto.Protocol.KDF>Tamasterakey_lenasaltahashmodanum_keysacontextaoutput_lenahmacaprkwtwnatlenaderived_outputakolTapasswordasaltadkLenacountahashAlgoapHashadigestwiTapasswordasaltadkLenacountaprfahmac_hash_modulealinkakeywiwsabaseafirst_digestTamasterakey_lenaprfanum_keysalabelacontextakey_len_encaoutput_lenwiadkainfoakolTa__class__Taselfakeyaciphermodacipher_paramsT
adatawsabitswcaidxabits6amodulo4abits8aresultwgTadatawsabitswcabits_cabits6aresultwgaidxTapasswordacostasaltaconstantainverta_EKSBlowfishacipheractextw_TaselfabsadoubledTapasswordacostasaltactextacost_encasalt_encahash_encT
apasswordabcrypt_hashwpwracostasaltabcrypt_hash2asecretamac1amac2TaselfafinalapaddedamacTwsaprfapasswordTapasswordaprfTakeyaciphermodTapasswordasaltakey_lenwNwrwpanum_keysaprf_hmac_sha256astage_1ascryptROMixacoreadata_outaflowaidxabuffer_outaresultadkakolTaselfaitemamac.Crypto.ProtocolOa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptou\not_existingaProtocolTaNUITKA_PACKAGE_Crypto_Protocolu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aKDFaSecretSharinga__all__uCrypto\Protocol\__init__.pyu<module Crypto.Protocol>u.Crypto.Random^3aurandomuReturn a random byte string of the desired size.a_UrandomRNGuReturn a file-like object that outputs cryptographically random bytes.a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptou\not_existingaRandomTaNUITKA_PACKAGE_Crypto_Randomu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__anewaget_random_bytesa__all__TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Randoma__module__a__qualname__areadu_UrandomRNG.readuMethod provided for backward compatibility only.aflushu_UrandomRNG.flushareinitu_UrandomRNG.reinitacloseu_UrandomRNG.closea__orig_bases__aatforkuCrypto\Random\__init__.pyu<module Crypto.Random>Ta__class__TaselfTaargsakwargsTaselfwnu.Crypto.Util.Paddingt*alenapkcs7abchrax923Tllaiso7816TlaValueErrorTuUnknown padding styleuApply standard padding.

    Args:
      data_to_pad (byte string):
        The data that needs to be padded.
      block_size (integer):
        The block boundary to use for padding. The output length is guaranteed
        to be a multiple of :data:`block_size`.
      style (string):
        Padding algorithm. It can be *'pkcs7'* (default), *'iso7816'* or *'x923'*.

    Return:
      byte string : the original data with the appropriate padding added at the end.
    lTuZero-length input cannot be unpaddedTuInput data is not paddedTapkcs7ax923abordlaminTuPadding is incorrect.TuPKCS#7 padding is incorrect.TuANSI X.923 padding is incorrect.arfindTuISO 7816-4 padding is incorrect.apadding_lenuRemove standard padding.

    Args:
      padded_data (byte string):
        A piece of data with padding that needs to be stripped.
      block_size (integer):
        The block boundary to use for padding. The input length
        must be a multiple of :data:`block_size`.
      style (string):
        Padding algorithm. It can be *'pkcs7'* (default), *'iso7816'* or *'x923'*.
    Return:
        byte string : data without padding.
    Raises:
      ValueError: if the padding is incorrect.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__apadaunpada__all__uCrypto.Util.py3compatTw*Tapkcs7uCrypto\Util\Padding.pyu<module Crypto.Util.Padding>Tadata_to_padablock_sizeastyleapadding_lenapaddingTapadded_dataablock_sizeastyleapdata_lenapadding_lenu.Crypto.Util._cpu_featuresa_raw_cpuid_libahave_aes_niahave_clmula__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util._raw_apiTaload_pycryptodome_raw_liblaload_pycryptodome_raw_libTuCrypto.Util._cpuid_cu
                                           int have_aes_ni(void);
                                           int have_clmul(void);
                                           uCrypto\Util\_cpu_features.pyu<module Crypto.Util._cpu_features>u.Crypto.Util._file_systemllaCryptouOnly available for modules under 'Crypto':lnnasplitaabspatha__file__utoo many values to unpack (expected 2)ajoinu..uReturn the complete file name for the module

    dir_comps : list of string
        The list of directory names in the PyCryptodome package.
        The first element must be "Crypto".

    filename : string
        The filename (inclusing extension) in the target directory.
    a__doc__a__spec__aoriginahas_locationa__cached__aosapycryptodome_filenameuCrypto\Util\_file_system.pyu<module Crypto.Util._file_system>Tadir_compsafilenameautil_libw_aroot_libu.Crypto.Util._raw_api?affiaRTLD_DEEPBINDaosagetenvTaPYCRYPTODOME_DISABLE_DEEPBINDadlopenacdefuLoad a shared library and return a handle to it.

        @name,  either an absolute path or the name of a library
                in the system search path.

        @cdecl, the C function declarations.
        uConvert a Python integer to unsigned longuConvert a Python integer to size_tamaxanewuuint8_t[]:nnnuSize must be specified once onlyaresultuAllocate the given amount of bytes (initially set to 0)astringuConvert a C string into a Python byte sequenceabufferuConvert a C buffer into a Python byte sequencea_buffer_typeacastauint8_t_typeafrom_bufferabyte_stringa_ArrayuObject type %s cannot be passed to C codeTuvoid *[1]a_pplaVoidPointer_cffilactypesac_ubyteacached_architectureaplatformaarchitectureutoo many values to unpack (expected 2)w.astartswithTaWinafind_libraryuCannot load library '%s'aCDLLavaluearawa_py_objecta_Py_buffera_PyObject_GetBufferabyrefa_PyBUF_SIMPLEalenafrom_addressabufa_PyBuffer_Releaseac_void_pa_paVoidPointer_ctypesa_raw_pointera_destructorasplitTw.:nlnlaextension_suffixesabasenameapycryptodome_filenameadir_compsapathaisfileaattemptsaappenduNot found '%s'aload_libacdecluCannot load '%s': %safilenameuCannot load native module '%s': %su, uLoad a shared library and return a handle to it.

    @name,  the name of the library expressed as a PyCryptodome module,
            for instance Crypto.Cipher._raw_cbc.

    @cdecl, the C function declarations.
    TObytesObytearrayOmemoryviewuReturn True if object x supports the buffer interfaceareadonlya__doc__a__file__a__spec__aoriginahas_locationa__cached__aabcasysuCrypto.Util.py3compatTabyte_stringuCrypto.Util._file_systemTapycryptodome_filenameamachineryaEXTENSION_SUFFIXESTObytearrayOmemoryviewTOobjecta__prepare__a_VoidPointera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Util._raw_apia__module__a__qualname__aabstractmethoduReturn the memory location we point toagetu_VoidPointer.getuReturn a raw pointer to this pointeraaddress_ofu_VoidPointer.address_ofa__orig_bases__aflagsaoptimizeluCFFI with optimize=2 fails due to pycparser bug.acffiTaFFIaFFIaNULLanull_pointeratypeofTuconst uint8_t*Tuuint8_t[1]a__bases__ac_ulongac_ulonglongac_uintac_size_tTnacreate_string_bufferaget_c_stringaget_raw_bufferac_uint8_ptruModel a newly allocated pointer to voida__init__uVoidPointer_cffi.__init__uVoidPointer_cffi.getuVoidPointer_cffi.address_ofaVoidPointerabackenductypes.utilTafind_libraryaArrayac_ssize_ta_c_ssize_tapythonapiaPyObject_GetBufferaPyBuffer_Releaseapy_objectaPOINTERa_c_ssize_paStructureaobjaitemsizeac_intandimaformatac_char_pashapeastridesasuboffsetsainternala_fields_uVoidPointer_ctypes.__init__uVoidPointer_ctypes.getuVoidPointer_ctypes.address_ofaSmartPointeruClass to hold a non-managed piece of memoryuSmartPointer.__init__uSmartPointer.getareleaseuSmartPointer.releasea__del__uSmartPointer.__del__aload_pycryptodome_raw_libais_bufferais_writeable_bufferuCrypto\Util\_raw_api.pyu<module Crypto.Util._raw_api>Ta__class__TaselfTaselfaraw_pointeradestructorTwxTwcTadataTadataaobjabufabuffer_typeTainit_or_sizeasizearesultTac_stringTabufTanameacdeclalibTanameacdeclaplatformabitsalinkageafull_nameT
anameacdeclasplitadir_compsabasenameaattemptsaextafilenameafull_nameaexpTaselfarpu.Crypto.UtiluMiscellaneous modules

Contains useful modules that don't belong into any of the
other Crypto.* subpackages.

========================    =============================================
Module                      Description
========================    =============================================
`Crypto.Util.number`        Number-theoretic functions (primality testing, etc.)
`Crypto.Util.Counter`       Fast counter functions for CTR cipher modes.
`Crypto.Util.RFC1751`       Converts between 128-bit keys and human-readable
                            strings of words.
`Crypto.Util.asn1`          Minimal support for ASN.1 DER encoding
`Crypto.Util.Padding`       Set of functions for adding and removing padding.
========================    =============================================

:undocumented: _galois, _number_new, cpuid, py3compat, _raw_api
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptou\not_existingaUtilTaNUITKA_PACKAGE_Crypto_Utilu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__LaRFC1751anumberastrxoraasn1aCounteraPaddinga__all__uCrypto\Util\__init__.pyu<module Crypto.Util>u.Crypto.Util.numberluNon positive valuesutoo many values to unpack (expected 2)luReturn ceil(n/d), that is, the smallest integer r such that r*d >= nuSize in bits only available for non-negative numbersabit_lengthuReturns the size of the number N in bits.aRandomaget_random_bytesllTlastructapackwBabytes_to_longuReturn a random number at most N bits long.

    If :data:`randfunc` is omitted, then :meth:`Random.get_random_bytes` is used.

    .. deprecated:: 3.0
        This function is for internal use only and may be renamed or removed in
        the future. Use :func:`Crypto.Random.random.getrandbits` instead.
    asizeagetRandomIntegeravalueabitsarandfuncuReturn a random number *n* so that *a <= n < b*.

    If :data:`randfunc` is omitted, then :meth:`Random.get_random_bytes` is used.

    .. deprecated:: 3.0
        This function is for internal use only and may be renamed or removed in
        the future. Use :func:`Crypto.Random.random.randrange` instead.
    luReturn a random number with exactly N-bits,
    i.e. a random number between 2**(N-1) and (2**N)-1.

    If :data:`randfunc` is omitted, then :meth:`Random.get_random_bytes` is used.

    .. deprecated:: 3.0
        This function is for internal use only and may be renamed or removed in
        the future.
    uModulus cannot be zerouModulus cannot be negativeapowluThe inverse of :data:`u` *mod* :data:`v`.uN must be larger than 1agetRandomNBitIntegerwNaisPrimeTarandfuncuReturn a random N-bit prime number.

    N must be an integer larger than 1.
    If randfunc is omitted, then :meth:`Random.get_random_bytes` is used.
    wnwmwbaiter_rangeaminagetRandomRangewaatestedaappendwzu_rabinMillerTest(n:long, rounds:int, randfunc:callable):int
    Tests if n is prime.
    Returns 0 when n is definitely composite.
    Returns 1 when n is probably prime.
    Returns 2 when n is definitely prime.

    If randfunc is omitted, then Random.new().read is used.

    This function is for internal use only and may be renamed or removed in
    the future.
    a_fastmathagetStrongPrimealongllubits must be multiple of 128 and > 512amathaceilalogTllg+YqkBlg+#ǊTllleasieve_basewyafielda_rabinMillerTestarabin_miller_roundswparesultuCouln't find prime in field. Developer: Increase field_sizeainversewXweaGCDaincrementu
    Return a random strong *N*-bit prime number.
    In this context, *p* is a strong prime if *p-1* and *p+1* have at
    least one large prime factor.

    Args:
        N (integer): the exact length of the strong prime.
          It must be a multiple of 128 and > 512.
        e (integer): if provided, the returned prime (minus 1)
          will be coprime to *e* and thus suitable for RSA where
          *e* is the public exponent.
        false_positive_prob (float):
          The statistical probability for the result not to be actually a
          prime. It defaults to 10\ :sup:`-6`.
          Note that the real probability of a false-positive is far less. This is
          just the mathematically provable limit.
        randfunc (callable):
          A function that takes a parameter *N* and that returns
          a random byte string of such length.
          If omitted, :func:`Crypto.Random.get_random_bytes` is used.
    Return:
        The new strong prime.

    .. deprecated:: 3.0
        This function is for internal use only and may be renamed or removed in
        the future.
    uTest if a number *N* is a prime.

    Args:
        false_positive_prob (float):
          The statistical probability for the result not to be actually a
          prime. It defaults to 10\ :sup:`-6`.
          Note that the real probability of a false-positive is far less.
          This is just the mathematically provable limit.
        randfunc (callable):
          A function that takes a parameter *N* and that returns
          a random byte string of such length.
          If omitted, :func:`Crypto.Random.get_random_bytes` is used.

    Return:
        `True` is the input is indeed prime.
    uValues must be non-negativeabsrainsertu>Qg+l@lu>Iql u>BldcalstripTduConvert a positive integer to a byte string using big endian encoding.

    If :data:`blocksize` is absent or zero, the byte string will
    be of minimal length.

    Otherwise, the length of the byte string is guaranteed to be a multiple
    of :data:`blocksize`. If necessary, zeroes (``\x00``) are added at the left.

    .. note::
        In Python 3, if you are sure that :data:`n` can fit into
        :data:`blocksize` bytes, you can simply use the native method instead::

            >>> n.to_bytes(blocksize, 'big')

        For instance::

            >>> n = 80
            >>> n.to_bytes(2, 'big')
            b'\x00P'

        However, and unlike this ``long_to_bytes()`` function,
        an ``OverflowError`` exception is raised if :data:`n` does not fit.
    aunpackaaccwsvConvert a byte string to a long integer (big endian).

    In Python 3.2+, use the native method instead::

        >>> int.from_bytes(s, 'big')

    For instance::

        >>> int.from_bytes(b'P', 'big')
        80

    This is (essentially) the inverse of :func:`long_to_bytes`.
    awarningsawarnTulong2str() has been replaced by long_to_bytes()along_to_bytesTustr2long() has been replaced by bytes_to_long()a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaCryptoTaRandomuCrypto.Util.py3compatTaiter_rangeaceil_divTnagcdagetPrimeTlfư>nTfư>nTlalong2strastr2longT'llllll
llllll%l)l+l/l5l;l=lClGlIlOlSlYlalelglklmlqlllllllllllllllllllllllllll
lllll%l3l7l9l=lKlQl[l]lalglolul{llllllllllllllllllllllllll#l-l3l9l;lAlKlQlWlYl_lelilklwlllllllllllllllllllllllll)l+l5l7l;l=lGlUlYl[l_lmlqlslwllllllllllllllllllllllll%l'l-l?lClElIlOlUl]lclillllllllllllllllllllllllll'l)l/lQlWl]lelwllllllllllllllllllllll
llll#l+l/l=lAlGlIlMlSlUl[lelyllllllllllllllllllllll'l7lElKlOlQlUlWlalmlslyllllllllllllllllllll!l#l'l)l3l?lAlQlSlYl]l_lilqllllllllllllllllllll#l%l+l/l5lClIlMlOlUlYl_lklqlwllllllllllllllll
l
l!
l1
l9
l=
lI
lW
la
lc
lg
lo
lu
l{
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
lllll#l)l-l?lGlQlWl]lelol{lllllllllllllllllll%l/l1lAl[l_lalmlslwlllllllllllllllll
l
l
l
l
l!
l+
l-
l=
l?
lO
lU
li
ly
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
llll!l'l/l5l;lKlWlYl]lklqlul}lllllllllllllllll
ll%l)l1lClGlMlOlSlYl[lglkllllllllllllllllllll!l%l+l9l=l?lQlilslyl{llllllllllllllllllll'l-l9lElGlYl_lclilolllllllllllllllll
lll#l)l+l1l7lAlGlSl_lqlslyl}llllllllllllll
ll'l-l7lClElIlOlWl]lglilml{llllllllllllllllllll!l/l3l;lElMlYlklolqlulllllllllllllllll%l)l+l7l=lAlClIl_lelglkl}lllllllllllllllllllll%l3l9l=lElOlUlilmlolulllllllllllllllllllll#l'l3lAl]lclwl{llllllllllllllllllll5l7l;lClIlMlUlglqlwl}llllllllllllllllllllll1l3lElIlQl[lylllllllllllllllllll!l#l-l/l5l?lMlQlilkl{l}llllllllllllllllll#l%l/l1l7l;lAlGlOlUlYlelklsllllllllllllllll'l+l-l3l=lElKlOlUlslllllllllllllll!l#l5l9l?lAlKlSl]lclilqlul{l}lllllllllllllllllllll%l+l/l=lIlMlOlmlqlllllllllllllllll
lll9lIlKlQlglul{llllllllllllllll l l l' l) l- l3 lG lM lQ l_ lc le li lw l} l l l l l l l l l l l l l l
!l!l5!lA!lI!lO!lY!l[!l_!ls!l}!l!l!l!l!l!l!l!l!l!l!l!l!l!l!l!l!l"l"l"l"l!"l%"l+"l1"l9"lK"lO"lc"lg"ls"lu"l"l"l"l"l"l"l"l"l"l"l"l"l"l"l#l#l#l'#l)#l/#l3#l5#lE#lQ#lS#lY#lc#lk#l#l#l#l#l#l#l#l#l#l#l#l#l#l#l#l$l$l$l$l)$l=$lA$lC$lM$l_$lg$lk$ly$l}$l$l$l$l$l$l$l$l$l$l$l$l$l$l$l$l$l$l%l%l%l%l'%l1%l=%lC%lK%lO%ls%l%l%l%l%l%l%l%l%l%l%l%l%l%l%l%l&l&l&l&l'&l)&l5&l;&l?&lK&lS&lY&le&li&lo&l{&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l'l'l5'l7'lM'lS'lU'l_'lk'lm'ls'lw'l'l'l'l'l'l'l'l'l'l'l'l'l'l(l(l
(l(l(l(l!(l1(l=(l?(lI(lQ(l[(l](la(lg(lu(l(l(l(l(l(l(l(l(l(l(l(l(l)l)l)l!)l#)l?)lG)l])le)li)lo)lu)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l*l*l*l%*l/*lO*lU*l_*le*lk*lm*ls*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l+l'+l1+l3+l=+l?+lK+lO+lU+li+lm+lo+l{+l+l+l+l+l+l+l+l+l+l+l+l+l+l,l,l,l#,l/,l5,l9,lA,lW,lY,li,lw,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l-l-l-l;-lC-lI-lM-la-le-lq-l-l-l-l-l-l-l-l-l-l-l.l.l.l
.l.l.l%.l-.l3.l7.l9.l?.lW.l[.lo.ly.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l/l/l/l/l'/l)/lA/lE/lK/lM/lQ/lW/lo/lu/l}/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l0l
0l#0l)0l70l;0lU0lY0l[0lg0lq0ly0l}0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l1l1l1l!1l'1l-1l91lC1lE1lK1l]1la1lg1lm1ls1l1l1l1l1l1l1l1l1l1l1l1l1l1l2l2l2l2l)2l52lY2l]2lc2lk2lo2lu2lw2l{2l2l2l2l2l2l2l2l2l2l2l2l2l2l2l2l3l%3l+3l/3l53lA3lG3l[3l_3lg3lk3ls3ly3l3l3l3l3l3l3l3l3l3l3l3l3l4l4l4l4l4l74lE4lU4lW4lc4li4lm4l4l4l4l4l4l4l4l4l4l4l4l4l4l5l5l5l-5l35l;5lA5lQ5le5lo5lq5lw5l{5l}5l5l5l5l5l5l5l5l5l5l5l5l5l5l5l6l6l6l#6l16l56l76l;6lM6lO6lS6lY6la6lk6lm6l6l6l6l6l6l6l6l6l6l6l6l7l7l7l7l?7lE7lI7lO7l]7la7lu7l7l7l7l7l7l7l7l7l7l7l7l8l8l!8l38l58lA8lG8lK8lS8lW8l_8le8lo8lq8l}8l8l8l8l8l8l8l8l8l8l8l8l8l8l9l9l#9l%9l)9l/9l=9lA9lM9l[9lk9ly9l}9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l:l:l:l:l':l+:l1:lK:lQ:l[:lc:lg:lm:ly:l:l:l:l:l:l:l:l:l:l:l:l;l;l;l!;l#;l-;l9;lE;lS;lY;l_;lq;l{;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l<l
<l<l<l<l)<l5<lC<lO<lS<l[<le<lk<lq<l<l<l<l<l<l<l<l<l<l<l<l<l=l
=l=l=l=l!=l-=l3=l7=l?=lC=lo=ls=lu=ly=l{=l=l=l=l=l=l=l=l=l=l=l=l=l>l>l>l>l>l#>l)>l/>l3>lA>lW>lc>le>lw>l>l>l>l>l>l>l>l>l>l>l>l>l>l>l>l?l
?l7?l;?l=?lA?lY?l_?le?lg?ly?l}?l?l?l?l?l?l?l?l?l?l?l?l@l!@l%@l+@l1@l?@lC@lE@l]@la@lg@lm@l@l@l@l@l@l@l@l@l@l@l@l@lAlAlAlAl!Al3Al5Al;Al?AlYAleAlkAlwAl{AlAlAlAlAlAlAlAlAlAlAlBlBlBlBl#Bl)Bl/BlCBlSBlUBl[BlaBlsBl}BlBlBlBlBlBlBlBlBlBlBlBlBlBlClClCl%Cl'Cl3Cl7Cl9ClOClWCliClClClClClClClClClClClClClClClClClDlDlDl#Dl)Dl;Dl?DlEDlKDlQDlSDlYDleDloDlDlDlDlDlDlDlDlDlDlDlDlDlDlElElEl+El1ElAElIElSElUElaElwEl}ElElElElElElElElElElElElElFlFlFlFl%Fl'Fl3Fl9Fl=FlCFlEFl]FlyFl{FlFlFlFlFlFlFlFlFlFlFlFlFlFlFlFlGlGlGl#Gl)Gl/Gl5Gl9GlKGlMGlQGl]GloGlqGl}GlGlGlGlGlGlGlGlGlGlGlGlGlGlHlHlHlHlHlHl1Hl=HlGHlUHlYHl[HlkHlmHlyHlHlHlHlHlHlHlHlHlIl
IlIlIl+Il7Il=IlEIlUIlcIliIlmIlsIlIlIlIlIlIlIlIlIlJlJlJl#Jl9JlAJlEJlWJl]JlkJl}JlJlJlJlJlJlJlJlJlJlJlJlKlKl
KlKlKl%Kl1Kl;KlCKlIKlYKleKlmKlwKlKlKlKlKlKlKlKlKlKlKlKlKlKlKlKlLlLl
LlLlLlLl!Ll-Ll3LlKLlULlWLlaLlgLlsLlyLlLlLlLlLlLlLlLlLlLlLlMlMlMl'Ml)Ml/Ml3MlAMlQMlYMleMlkMlMlMlMlMlMlMlMlMlMlMlMlMlMlMlNlNlNlNlNl+Nl5Nl7Nl=NlONlSNl_NlgNlyNlNlNlNlNlNlNlNlNlNlNlNlNlNlNlNlOlOlOl%Ol-Ol?OlIOlcOlgOlmOluOl{OlOlOlOlOlOlOlOlOlOlOlOlOlOlOlPlPlPl)Pl5Pl?PlEPlGPlSPlqPlwPlPlPlPlPlPlPlPlPlPlPlPlQlQl
QlQlQl#Ql%Ql5QlGQlIQlqQlyQlQlQlQlQlQlQlQlQlQlQlQlQlQlQlRlRlRlRlRlRl'RlCRlERlKRlaRlmRlsRlRlRlRlRlRlRlRlRlRlRlRlRlRlRlRlSlSl#SlASlESlGSlKSl]SlcSlSlSlSlSlSlSlSlSlSlSlSlSlSlSlSlSl
TlTlTlTl5Tl7Tl;TlATlITlSTlUTl_TlaTlkTlmTlqTlTlTlTlTlTlTlTlTlTlTlTlTlUl
UlUl'Ul+Ul9Ul=UlOUlQUl[UlcUlgUloUlyUlUlUlUlUlUlUlUlUlUlUlUlVlVlVlVl#Vl/Vl3Vl9Vl?VlKVlMVl]Vl_VlkVlqVluVlVlVlVlVlVlVlVlVlVlVlVlWlWlWlWlWlWl#WlGWlMWl_WlaWlmWlwWl}WlWlWlWlWlWlWlWlWlWlWlXl
XlXlXl'Xl+Xl-XlUXl[Xl]XlmXloXlsXl{XlXlXlXlXlXlXlXlXlXlXlXlXlXlXlXlYlYlYl!YlEYlKYlMYlWYl]YluYl{YlYlYlYlYlYlYlYlYlYlYlYlYlYlYlZl
ZlZlZlZlZl)Zl/Zl;ZlMZl[ZlgZlwZlZlZlZlZlZlZlZlZlZlZlZlZlZl[l[l[l[l%[l+[l=[lI[lK[lg[ly[l[l[l[l[l[l[l[l[l[l[l\l\l\l\l\l)\l/\l3\l9\lG\lK\lM\lQ\lo\lu\lw\l}\l\l\l\l\l\l\l\l\l\l\l\l\l]l]l]l]l]l1]l=]lA]lG]lO]lU]l[]le]lg]lm]ly]l]l]l]l]l]l]l]l]l]l]l]l]l]l^l
^l^l^l!^l'^l+^l-^l1^l9^lE^lI^lW^li^ls^lu^l^l^l^l^l^l^l^l^l^l_l_l'_l3_l5_l;_lG_lW_l]_lc_le_lw_l{_l_l_l_l_l_l_l_l_l_l_l_l`l#`l/`l7`lS`l_`le`lk`ls`ly`l`l`l`l`l`l`l`l`l`l`lalalalal-al9alKalUalWal[aloalyalalalalalalalalalalalalalblblbl!bl'bl;blAblKblQblSbl_bleblblblblblblblblblblblblblblblcl
clclcl/clAclCclOcl_clgclmclqclwcl}clclclclclclclclclcldldldldl!dl'dl+dl9dlCdlIdlOdl]dlgdludldldldldldldldldldldldldldlelel!el/el9el?elKelMelSelWel_elqel}elelelelelelelelelelelelelflflfl)fl1fl;flAflGflMfl[flaflsfl}flflflflflflflflflflflflflflglglglgl'gl1gl7gl?glEglQgl[gloglyglglglglglglglglglglhlhlhlhl-hl9hl;hl?hlEhlKhlMhlWhlYhl]hlchlihlkhlqhlhlhlhlhlhlhlhlhlhlhlhlhlilil
ilil)il/ilCilGilIilOileilkilqilililililililililililililililjl+jl7jl=jlKjlgjlijlujl{jljljljljljljljljljlklklkl#kl'kl-kl9klAklWklYkl_kluklklklklklklklklklklklklllll)ll+ll1ll5llUllYll[ll_llellgllsllwll}llllllllllllllllllllllllllllll
mlml%ml'ml+ml1ml9ml?mlOml]mlamlsml{mlmlmlmlmlmlmlmlmlmlmlmlmlnlnlnl)nl3nl;nlEnlunlwnl{nlnlnlnlnlnlnlnlnlnlnlnlnl
olololol/ol=olMolSolaoleolyol}olololololololololololololololololololololplplpl'pl3pl9plOplQplWplcpluplyplplplplplplplplplplplplplplqlql!ql3qlQqlYql]ql_qlcqliqlqlqlqlqlqlqlqlqlqlqlqlqlqlrlrlrlrl%rl/rl;rlCrlUrlgrlqrlwrlrlrlrlrlrlrlrlrlrlrlrlrlrlrlrlsl
sl!sl+sl=slWsl[slaslslslslslslslslslslslslslslsltltl-tl9tl?tlAtl]tlktl{tltltltltltltltltltltltltlulul%ul;ul=ulMul_ulkulwulululululululululululululululululvlvl!vl-vl3vl=vl?vlUvlcvlivlovlsvlvlvlvlvlvlvlvlvlvlwlwlwlwl!wl-wl5wlAwlKwlYwl]wl_wlqwlwlwlwlwlwlwlwlwlwlwlwlwlwlxl%xl+xl5xl=xlSxlYxlaxlmxlwxlyxlxlxlxlxlxlxlxlxlxlxlxlxlxlylyl%yl+yl9yl?ylKylWyl]ylgyliylsylylylylylylylylylylylylylylylylzlzlzlzlzl#zl'zl-zlKzlWzlYzl_zlezlizl}zlzlzlzlzlzlzlzlzl{l{l{l{l+{l5{l7{l;{lO{lU{l_{lq{lw{l{l{l{l{l{l{l{l{l{l{l{l{l{l|l|l|l1|l7|lI|lg|li|ls|l|l|l|l|l|l|l|l|l|l}l}l}l}l3}l9}l;}l?}lE}lM}lS}lY}lc}lu}lw}l}l}l}l}l}l}l}l}l}l}l}l}l~l~l)~l+~l/~l5~lA~lC~lG~lU~la~lg~lk~lq~ls~ly~l}~l~l~l~l~l~l~l~l~l~l~l~l~l~llll1l3l9l=lClKl[lalclmlylllllllllllllll!l#l?lAlGlKlelwllllllllɀlˀl׀lۀllllll
lll/l1l;lClSlYl_l}lllllllllǁl߁lllll%l1l3l?lClElIlOlalol{lllllllǂlςlՂl߂llllll!l)l-l3l5l?lAlMlQlSlWl]lelilolllll˃lՃl׃l݃llllllll#l%l;lAlGlOlalelwlllllll̈́llllll
lKlOlQl]lclmlol{llllllͅlӅlՅlۅlllllllll!l/l9l?lAlMlclul}lllllllÆlņlφlцl׆lllllll+l/l5lGlYl[lklqlwllllllllŇlǇlˇl݇llllll!l7l=lClQlalgl{lllllψlӈlllllllll#l'l-l9lElMlQlWlcllllllÉlωlщlۉlllllll#l5lAlIlOl[l_lmlwlyllllllǊlˊl͊lъl׊lllll
ll!lWl]lllllllՋlًlۋllllllll'l9l;lGlSl]lol{llllllllllŌl݌llllll
l#l)l7lAl[l_lqlylllllllōlˍlӍlٍlߍllllll%lQlclilslulyllllllllǎlώlӎlێlllllll#l-l?lElKlSlYlelilqllllllllllɏlՏlllll
ll#l%l1l7l;lAlClOlSlmlslllllllllŐlߐlllll'l3l=lElOlQlalgl{lllllllɑlّlۑlllllll!l/lAlGlWlklqlul}llllllllllÒlŒl˒lՒlגllllllll;l=lClUlsllllllǓlדlݓlllllll?lElKlOlclglilml{lllllÔllllll!l'l-l5l9lKlWl]l_lulllllllllllϕlllll/l1l5l;l=lelllllll˖lіlӖlllll
lll%l+l3l7l9lClIlQl[l]lolllllll×l͗lӗlٗlllllll)l/l;lAlQlklollllllllØlɘlϘlݘlllll
lll)l1l;l=lAlGlIlSl}llllllllǙl˙l͙lיlllllll%lKlOlUlWlalullllllÚlǚlϚlllllll'l/l5lElQlYlclolwllllllllllśl˛lϛlݛllll#l+l/l5lIlMl_lelglllllllllלlٜlllllll'l-l1l=lUl[lalllllÝlllllll#l'l-l3l;lGlQlSl_lolllllllllllll#l/l7l;lClSlalmlslwl}lllllllllǟlߟlllll
l!l3l9l?lOlWl[lalulylllllllɠl٠l۠lߠllllllllll)l/l5lAlSlul}lllllllálšllllll#l)l/l1lClGlMlklyl}lllllllllllŢlѢlעlllll!l+l1lIlQlUlslyl{llllllllǣlգlۣlllllllll!l#l'l;lMlWlYlclilulllllälŤlˤlѤlդlllllll)l+l5l;lClSl[lalmlwlllllllllťl˥lӥl٥lݥlߥllllll
l%l=lIlKlQl]lsllllllllɦlͦlϦlզlߦlllllll#l)l-lElMlWlYlelklolllllllɧlѧlקlllllll)l+l7l;lUl_lml}llllllǨlרllllll1l7l9lCllllllllll٩lߩlllll5l9l;lGlMlWlYl]lklqlllllllŪlɪlllllll
lllMl[lqlsllllllllūlӫl׫lݫllllllll'l7l9lElOlWl[lalclllllllll٬lllllllll?lElSl]l_lellllíl˭lѭlխlۭllllllll#l+lIlMlOlYlalglklqlllllllŮlѮllllllll'l+l3lClOlWl]lmlulllllllllϯlկlllll?lAlGlKlQlSlil{l}lllll˰lϰlllllllllll1lAlMl[lelslyllllllӱlݱllllllll-l?lIl[lclilml{llllllòlǲlӲllllllll'l-l?lElwl}llllllųl˳llllll
lll5l=lClIl[lelglklwlllllllǴlݴlllll
ll-l?lKlglilolslyllllllllյlߵlllllll)l/l3l9lGlWlYl_lclollllllll׶l۶llllll
lll)l5lGlUlmlllll˷lѷlӷlllllll!l'l+l-l9lUlglullllllllǸl͸lոllllllll/l9l;lGlQlcllllllllll˹lѹlݹlllll
ll%l)l+lAlSlUl_lalelyl}llllllll˺lݺllllll'l-l=lClKlOl[lalilmlllllɻlϻlۻllllll#l3l;lAlEl]lolwlllllllѼlռllll
llll5lAlOlYl_lalglklqllllllllͽlѽlllllll!l%l'l[l]lolulyllllllllllϾlپl۾llllll3l9lMl]l_lklql{llllllllϿlտlݿllllllll)l/l1l7l;lGlelml}lllllllllllllllll+l3l7lElIl[lslyl{lllllllllllllll!l/l?lKlMlSl]lwl{l}lllllllllllllllll%lGlIlOlelglqlllllllllllllllllll-l3l7lUlWlalolslllllllllllllllllAlGlQl_lklolulwllllllllllll#l5lAlOlUlYlellllllllllllll
lll-l1l9lWlclglslulllllllllllllll'l)l9l?lSlWlkllllllllllllllllllllll/l7l=lAlSl_lklyl}llllllllllllllll%l7l9lKlUl[lilslulllllllllllllllll)l5l;lSlYlclelqlllllllllllll
lll#l+lAlClMlYlalllllllllllll%l1l=l?lIlQlWl[lclgllllllllllllllll!l/lGlMlQlel{l}lllllllllllllllll7l;lMlUl_lalelmlyl}llllllllllllllll!l3l=lKlOlilollllllllllllll-l/lAlWlYl]lilklqlwl}llllllllllll
llll5l;lGlYlalelylllllllllllllllll!l+lClKlUlilul{llllllllllll'l/l3l;lKlYl_lclillllllllllllllllll
lll#l1l5l7lIlYl_lelglwllllllllllllll-l1lClUl]lal{llllllllllllllll!l'l?lElMlWlkl{lllllllllllll#l%l)l+l/l7lMlUlglsllllllllllll%l3l9lClElOlQlWlmlolslylllllllllllllllllll#l)l?lQlYl]l_lqlwl{l}lllllllllllll#l%l1l;lClUlglklsllllllllllll
l'l1l9l?lIlQlalolul{lllllllllllllllllll#l5l9lSlWl_lilol}lllllllllllllllll)l;l=lAlMlOlYl[lalmlwl}llllllllllllllll+l3l7l=lKlUl[lglilslllllllllllllllll'l-l5lElSlql{llllllllllll%l)l1l5lClOlYlalmlqlwllllllllllllllllll+l-l=lClWl[lulylllllllllllllll#l'l)l9l;lMlQlWl_lclilulwl}lllllllllllll#l+l1l;lGlIlSlUlmlqllllllllllll!l%l7l?lElKlWlglmlullllllllllll!l)l9l?lSlWlclolullllllllllllllllll
lll/l=lGlIlSlUlalglklllllllllllllllll1l3l7l=lKlOlQlilulyllllllllllllllll-l3l;lKlQl_lclil{lllllllllll/l5lClMl_lmlql}lllllllllllllllll1l9l?l[lalclollllllllllllll!l)lMlQl]lilol{llllllllllllllll/l7l=lAlUlYl[lelklyllllllllllllllll!lIlOlclglsl{lllllllllll'l/lElMlclklqllllllllllllllll+l/l5lClGlOlglklqlwlyllllllllllllllllll!l7l=lUlul{llllllllllllll#l'l3l;lAlWl_lelilwlllllllllllllllllAlYl[l_lglslwllllllllll
ll!l%l+lElKlUlclullllllllllllllll!l)l5lGlQlclkllllllllllllllll
l5l7lSl[lalglyllllllllllll-l1lClOlQlUlclilslyllllllllllllllllll!l'l-l5lGlYlclelolqlwl{lllllllllllllllllll%l1l7l;lAlOl_lalmlqlwlllllllll
ll!l%l?lClQl[lml{llllllllllllll-l/l?lGlMlul}lllllllllll)l7lAlClOlYlalelmlslyllllllllll
lll+l1lQlUlglmlol{lllllllllllllll'l/lAlKlMlWl_lclilul{lllllllllllll
ll+l/lIlMl[lelqllllllllllllllllll+l-l3l?lIlQl]lalolslylllllllllllllll#l'l-l/l3l;lKlYlkllllllllllllllll#l)l7l;l=lYlqlyl}llllllll!l'l+l7l9lElIlOlclmlllllllllllllllll!l)l9lElSl]l{lllllllllllllll#l%l/l=lClIlglklslllllllllllllllll1l9lClElQlUlalmlslulllllllllllllll)l?lGlQlSl]lclelilwl}llllllllllllllllll#l/lCl_lsl}llllllllllllllll
ll+l3l=lWl[l]lclglulylllllllllll
l
l
l-
l3
lA
lK
lo
lq
lu
l{
l
l
l
l
l
l
l
l
ll%l/lUl[l_lalyl}llllllllllllllll3l=lKlOl[lglilyllllllllllll
l
l
l!
l#
l'
l-
l5
l?
lS
lc
l
l
l
l
l
l
l
l
l
l
l
lllll+lGlIlMlSlelqlwllllllllllll
lll3l7l?lQlWl[lalilslulyl{lllllll-l;lAlMlilkllllllllllllllll)l+l5lGlglmlqlslyllllllllllllll
ll!l%l'l7l9l?lOlUl]lalilllllllllllllll'l3l9l;lQlWlYlelklllllllllllllllll5l=lIlalqlllllllllllllllll%l'l-l9lClElOlUlWlclolllllllllllllll)lAlElQlYl]l_lwl}llllllllllllllllll
lll/l1l7l;lOlglql}llllllllll
llll!l'l=lQlalmlllllllllllllllllll#l/l3l9l?lSl_lklolullllllllllllllll#l%l;l=lMlOlUl_lslylllllllll
lll!l-l1l7lUlclglollllllllllllllllll#l;l?l]lqlwllllllllllllllll
ll%l1l5l;lMlOlSlelglwllllllllll+l=lKlWl]lolslllllllllllllll-l3l9lKlQlYlclolul}lllllllllllllll l l+ l7 l[ l_ lw ly l l l l l l l l l l l l!l!!l%!l+!l?!lC!lW!l]!lm!ls!lu!l!l!l!l!l!l!l!l!l!l!l!l!l!l!l"l'"l/"l5"l9"lG"lM"lS"lq"lu"l{"l"l"l"l"l"l"l"l"l"l"l"l#l
#l#l#l##l7#lA#lG#lM#l[#le#lq#ls#l#l#l#l#l#l#l#l#l#l#l#l$l$l$l$l-$lE$lK$lO$l[$li$lm$lu$ly$l$l$l$l$l$l$l$l$l$l%l%l%l%l%l!%lG%lK%le%l}%l%l%l%l%l%l%l%l%l%l%l%l%l%l&l
&l&l+&l;&lA&lI&lS&lY&lg&lq&l}&l&l&l&l&l&l&l&l&l&l'l'l
'l'l'l!'l%'l3'l9'l?'l['la'lc'lm'ly'l'l'l'l'l'l'l'l'l'l'l'l'l'l(l(l(l(l-(l9(lM(l](lk(l(l(l(l(l(l(l(l(l(l(l(l(l(l)l/)l1)l;)lC)lG)l[)la)ls)l})l)l)l)l)l)l)l)l)l)l)l)l*l*l-*l7*lO*lQ*l[*lc*ls*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l+l#+l5+l;+l?+lW+li+lk+l{+l+l+l+l+l+l+l+l+l+l+l,l,l,l,l%,l/,lG,lI,lS,lk,lq,lw,l,l,l,l,l,l,l,l,l,l,l,l
-l-l%-l--lQ-lU-la-lo-ls-l-l-l-l-l-l-l-l-l-l-l-l-l-l.l.l.l#.l'.l/.l9.lA.lG.li.lk.lw.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l/l/l/l/l+/l1/l5/lI/lO/l[/lq/lw/ly/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l0l0l'0l+0lE0lK0li0lm0l0l0l0l0l0l0l0l0l0l0l0l0l1l)1l91l;1lM1lS1lW1l]1lc1lo1lq1l{1l1l1l1l1l1l1l1l1l1l1l2l2l2lA2l[2le2lg2l2l2l2l2l2l2l2l2l2l2l2l2l2l2l3l3l3l33l93l=3lc3li3ls3ly3l3l3l3l3l3l3l3l3l3l3l3l4l4l4l'4l)4l-4l54lG4lQ4l]4l4l4l4l4l4l4l4l4l4l5l5l#5l+5l/5l15l75lM5lS5lY5la5l}5l5l5l5l5l5l5l5l5l5l5l5l5l5l6l6l!6l%6l'6l36l?6lC6lI6l[6ly6l6l6l6l6l6l6l6l6l6l6l6l7l7l7l7l)7l57lG7lK7lM7lQ7lS7l7l7l7l7l7l7l7l7l7l7l7l7l7l7l8l8l8l8l#8lC8lG8l_8le8lk8ls8l}8l8l8l8l8l8l8l8l8l
9l9l9l9l'9l-9l19l?9lO9lQ9l]9lg9li9lo9l{9l9l9l9l9l9l9l9l9l9l9l9l:l:l-:l?:lA:lW:lY:li:lk:l:l:l:l:l:l:l:l:l:l:l:l;l;l;l;l%;l);l+;l/;l=;lI;la;lk;lm;ly;l;l;l;l;l;l;l;l;l;l;l;l<l
<l<l<l<l!<l%<l9<lC<l]<li<lu<ly<l{<l<l<l<l<l<l<l<l<l<l<l<l<l<l=l=l=l=l-=l/=l3=lG=lQ=lW=l=l=l=l=l=l=l=l=l=l=l=l=l=l>l
>l>l1>l7>le>lm>lw>l}>l>l>l>l>l>l>l>l>l>l>l>l>l?l?l
?l?l%?l'?l+?l??lI?lU?la?li?lm?l?l?l?l?l?l?l?l?l?l?l@l@l@l@l!@l/@l3@l5@lS@lW@lY@l]@le@lo@lu@lw@l@l@l@l@l@l@l@l@l@lAl
AlAlAl)Al+Al/Al7Al=AlAAlUAl[AlgAl}AlAlAlAlAlAlAlAlAlAlBlBl%Bl'Bl3Bl7Bl=BlCBlKBlaBlcBluBlBlBlBlBlBlBlBlBlBlBlBlBlCl!Cl#Cl'Cl)ClEClGClKCl]ClcCliCloCl{Cl}ClClClClClClClClClDl%Dl5Dl;DlADlODlgDlsDlwDlDlDlDlDlDlDlDlDlElElElElElEl!El+El9ElCElEElIElcEloElElElElElElElElElElElElElElElFlFlFl)FlQFleFliFlkFl{FlFlFlFlFlFlFlFlFlFlFlFlGlGlGl1Gl=GlAGlOGleGlyGlGlGlGlGlGlGlGlGlGlGlHlHlHl+Hl1HlOHlUHl[Hl]HlcHlyHlHlHlHlHlHlHlHlHlHlHlHlHlHlIlIlIl'IlKIlSIlYIl]Il_Il{Il}IlIlIlIlIlIlIlIlIlIlIlIlIlIlJlJlJlJl)Jl+Jl5JlGJlOJlmJlJlJlJlJlJlJlJlJlJlJlJlJlKlKlKl3Kl9KlIKlKKl[KlyKl{KlKlKlKlKlKlKlKlKlKlKlLlLl#Ll-Ll9LlELlYLl_LlcLleLloLluLlLlLlLlLlLlLlLlLlLlLlLlLlLlMl1Ml7MlAMlSMlUMlqMlsMlyMlMlMlMlMlMlMlMlMlMlMlNl
NlNlNl-NlCNlINl]NlaNlgNlsNluNl{NlNlNlNlNlNlNlNlNlNlNlNlOl!Ol9Ol;OlEOlGOlMOlSOlWOl]OlOlOlOlOlOlOlOlOlPlPl
Pl5Pl=PlCPl_PlaPlePlsPlyPlPlPlPlPlPlPlPlPlPlPlPlPlPlPlQlQlQlQl'Ql3QlEQlOQlQQlUQlaQlcQlmQluQlQlQlQlQlQlQlQlQlQlQlQlRlRlRl!Rl-Rl3Rl;RlGRlcRleRlRlRlRlRlRlRlRlRlRlRlRlSl5Sl;SlCSlISlMSlUSlSlSlSlSlSlSlSlSlSlSlSlSlTlTlTl+Tl?TlCTlOTlQTl]TlmTloTlTlTlTlTlTlTlTlTlTlTlTlTlUlUlUlUl)Ul?UlWUlkUloUl}UlUlUlUlUlUlUlUlUlUlUlUlUlUlVlVlVlVl#Vl%Vl=VlGVlMVlOVlYVl[VlaVlwVlVlVlVlVlVlVlVlVlVlVlVlVlVlVlWlWl-Wl=WlEWlIWlOWlgWlmWl{WlWlWlWlWlWlWlWlWlWlWlWlXlXlXl5XlAXliXlqXlXlXlXlXlXlXlXlXlYlYlYlYl;YlMYl[YlgYlkYlYlYlYlYlYlYlYlYl
ZlZlZl!ZlCZlKZlQZlUZlWZl[ZliZlZlZlZlZlZlZlZlZlZlZlZlZlZlZl[l[l[l#[l)[l3[lA[lG[lW[li[lw[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l
\l\l\l\l#\l1\lA\le\ls\ly\l}\l\l\l\l\l\l\l\l\l\l\l]l]l%]l+]l1]l7]lE]lI]lW]lc]li]ls]l]l]l]l]l]l]l]l]l]l]l]l]l]l]l^l^l^l!^l5^l9^l;^lE^lG^lQ^lY^l^l^l^l^l^l^l^l^l^l^l^l^l_l#_l)_l+_l5_l=_lC_lS_lg_lk_ly_l_l_l_l_l_l_l_l_l_l_l_l_l_l_l_l_l`l`l%`l3`l=`lK`lO`lU`lW`l[`li`ls`l`l`l`l`l`l`l`l`l`lalalalal!al#al'alEalGalealialqalalalalalalalalalalalalblblbl#bl5bl7blIblOblUblkbl}blblblblblblblblblblclclclcl%cl3clCcl[claclmcluclclclclclclclclclclcldldldldldldl/dl9dl?dl]dledlkdlqdludldldldldldldldldldldldlelelelel)el=elAelCelGeleelkelyelelelelelelelelelelelfl+fl7fl?flUfliflmfl{flflflflflflflflflflflglgl#gl'gl/gl5gl9gl?glAgl]glcgliglglglglglglglglglglgl
hlhlhlhl+hl;hl=hlChlIhlMhlShl[hlmhlhlhlhlhlhlhlhlhlhlhlhlhlhlhlhlhlilil+il-il3il?ilIilWil[ilililililililililililililililjljljljl#jl-jl3jlAjlQjlYjl_jlkjlujlwjljljljljljljljljljljljljljl
klklklkl;klAklIklwkl}klklklklklklklklklklklklklklllll-ll7ll9llCllEllIllOllallcllgll{llllllllllllllllllllllml'ml)ml/ml3ml5ml9ml?mlSmlYmlqmlumlwml{mlmlmlmlmlmlmlnlnlnl+nlAnlCnl[nlqnlsnlnlnlnlnlnlnlnlnlnlnlnlnlnlolololol-ol7ol9olQolaolioloololololololololololololplpl-pl5plAplSplcpleplqplwpl{plplplplplplplplplplplplplpl
qlql1qlAqlCqlMqlOqlSql_qlaqlmqlwqlqlqlqlqlqlqlqlqlqlrlrlrl3rl9rl=rlErlIrl[rlcrlgrlurlyrlrlrlrlrlrlrlrlrlrlrlslslsl!sl-sl3slWsl_slksloslqslusl}slslslslslslslslslslslslsltltltltl#tl)tl/tl7tlOtlUtl_tlktltltltltltltltltltltltltltltlul'ul+ul3ul=ulIulQul]ulmulsulululululululululululululvlvl'vl-vl/vl9vl;vlEvlKvlqvl}vlvlvlvlvlvlvlvlvlvlvlvlvlvlwl
wlwl+wl5wl;wlOwlawlwlwlwlwlwlwlwlwlwlwlwlxlxl
xlxl!xl%xlCxlIxlKxlQxlaxlyxlxlxlxlxlxlxlxlxlxlxlxlxlylyl)yl-ylEylKylMylYylylylylylylylylylylylylylzlzlzlzlzl5zl7zl;zlOzlSzlYzl}zlzlzlzlzlzlzlzlzlzlzlzlzlzl{l1{l9{lO{l]{lg{l{l{l{l{l{l{l{l{l{l{l{l|l|l|l/|lW|lY|l]|lc|le|lk|lu|l|l|l|l|l|l|l|l|l|l|l}l
}l}l}l#}l)}l+}l/}lG}lI}lM}lq}ls}l}l}l}l}l}l}l}l}l~l%~l1~l3~l7~l9~lC~lE~lO~lW~l[~l~l~l~l~l~l~l~l~l~l~l~l~l~ll!l5lKlQl_lllllllllll
llll+lAlIlSlUlglklsl}llllllllˀl׀lllll
l%l=lClOlQlglmllllllllՁlہlllll!l3l5l9lGlMlQlSl]l_lolql{lllllllłlɂlςlllllll%l/l;l=lAlClMlelmlwlllllll̓lكllll'l+l1l?lElIlQlglollllÄlǄlɄl߄llllllll'l;lMlSl_lil{l}lllllll˅lхlllllllll%l)l=lClSlYlyllllllˆlцlنlll
l!l7l9lIlWl]lalolulllllÇlɇlهlllllll'l)l3l;lAl_lklulllllllllÈlňlψllll
l)l=lAlUl[l_l}lllllllˉl׉l݉lll+l1l?lClIlOl]lul{llllllǊlيlllllllll'l)l5l?lMlSlWlYlelllllllˋlՋl݋lllllll#l+l5lIl[lelklql}llllllllŌl͌lߌlllllll1l=lElWl[lilmlslulllllɍl͍lύlllllll!l)l3lElKlYlclolql}llllllllllՎl׎lێlllll%l/l5l7l;lIlUlYlalklmlslllllll׏lߏllll!l%l3l=lQlalclgl{lllllllllϐlӐllllllll-lilklqllllllˑlבlݑllllll)l7lGlYl_llllllllllӒlllll1l?lElyl{llllllۓlߓlllllll!l/l;lWlil}lllllllllÔl۔llllllll+lYlklylllllllѕlߕllllll!l+l-l7l9l=lClIlUlalolul{lllllllӖlՖllllll'l)l/l3lYl_lilulwlllllllɗlϗllllll+lAlOlYl_lelglqllllll˘lӘllllllll
lluCrypto\Util\number.pyu<module Crypto.Util.number>Twnaroundsarandfuncan_1wbwmatestedwiwawzacompositewrTwsaaccaunpackalengthaextrawiTwnwdwrwqTwNarandfuncanumberTwNarandfuncwSaodd_bitsarand_bitsavalueTwNarandfuncavalueTwawbarandfuncarange_abitsavalueTwNweafalse_positive_probarandfuncarabin_miller_roundswxalower_boundaupper_boundwXwpwiwyafieldaprimeaoffsetwjaresultacompositeatmpatmp1atmp2wRaincrementais_possible_primeTwuwvTwNafalse_positive_probarandfuncwparoundsTwnablocksizeTwnablocksizearesultapackabsrabresultatarget_lenTwNTwsu.Crypto.Util.py3compat*aencodeTulatin-1ulatin-1atobytesadecodeuReturn an immutable copy of a sequence (byte string, byte array, memoryview)
    in a certain interval [start:seq]uCompatibility code for handling string/bytes changes from Python 2.x to Py3k

In Python 2.x, strings (of type ''str'') contain binary data, including encoded
Unicode text (e.g. UTF-8).  The separate type ''unicode'' holds Unicode text.
Unicode literals are specified via the u'...' prefix.  Indexing or slicing
either type always produces a string of the same type as the original.
Data read from a file is always of '''str'' type.

In Python 3.x, strings (type ''str'') may only contain Unicode text. The u'...'
prefix and the ''unicode'' type are now redundant.  A new type (called
''bytes'') has to be used for binary data (including any particular
''encoding'' of a string).  The b'...' prefix allows one to specify a binary
literal.  Indexing or slicing a string produces another string.  Slicing a byte
string produces another byte string, but the indexing operation produces an
integer.  Data read from a file is of '''str'' type if the file was opened in
text mode, or of ''bytes'' type otherwise.

Since PyCrypto aims at supporting both Python 2.x and 3.x, the following helper
functions are used to keep the rest of the library as independent as possible
from the actual Python version.

In general, the code should always deal with binary strings, and use integers
instead of 1-byte character strings.

b(s)
    Take a text string literal (with no prefix or with u'...' prefix) and
    make a byte string.
bchr(c)
    Take an integer and make a 1-character byte string.
bord(c)
    Take the result of indexing on a byte string and make an integer.
tobytes(s)
    Take a text string, a byte string, or a sequence of character taken from
    a byte string and make a byte string.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaabclwbabchrabstrabordatostrabyte_stringaBytesIOaStringIOqamaxintaiter_rangeais_native_intais_stringais_bytesTaABCaABCaFileNotFoundErrora_copy_bytesuCrypto\Util\py3compat.pyu<module Crypto.Util.py3compat>TastartaendaseqTwsTwxTwsaencodingTabsu.Crypto.Util.strxor%uOnly byte strings of equal length can be xoredacreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)a_raw_strxorastrxorac_uint8_ptrac_size_taoutputaget_raw_bufferuFrom two byte strings of equal length,
    create a third one which is the byte-by-byte XOR of the two.

    Args:
      term1 (bytes/bytearray/memoryview):
        The first byte string to XOR.
      term2 (bytes/bytearray/memoryview):
        The second byte string to XOR.
      output (bytearray/memoryview):
        The location where the result will be written to.
        It must have the same length as ``term1`` and ``term2``.
        If ``None``, the result is returned.
    :Return:
        If ``output`` is ``None``, a new byte string with the result.
        Otherwise ``None``.

    .. note::
        ``term1`` and ``term2`` must have the same length.
    lluc must be in range(256)astrxor_catermuFrom a byte string, create a second one of equal length
    where each byte is XOR-red with the same value.

    Args:
      term(bytes/bytearray/memoryview):
        The byte string to XOR.
      c (int):
        Every byte in the string will be XOR-ed with this value.
        It must be between 0 and 255 (included).
      output (None or bytearray/memoryview):
        The location where the result will be written to.
        It must have the same length as ``term``.
        If ``None``, the result is returned.

    Return:
        If ``output`` is ``None``, a new ``bytes`` string with the result.
        Otherwise ``None``.
    uVery fast XOR - check conditions!a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util._raw_apiTaload_pycryptodome_raw_libac_size_tacreate_string_bufferaget_raw_bufferac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libTuCrypto.Util._strxoru
                    void strxor(const uint8_t *in1,
                                const uint8_t *in2,
                                uint8_t *out, size_t len);
                    void strxor_c(const uint8_t *in,
                                  uint8_t c,
                                  uint8_t *out,
                                  size_t len);
                    Tna_strxor_directuCrypto\Util\strxor.pyu<module Crypto.Util.strxor>Taterm1aterm2aresultTaterm1aterm2aoutputaresultTatermwcaoutputaresultu.__main__La__iter__a__getitem__u%s argument after * must be an iterable, not %sa__name__akeysu%s argument after ** must be a mapping, not %sacalledastar_arg_dictamapping_1__dictu%s got multiple values for keyword argument '%s'aargsastar_arg_lista__mro_entries__abasesakwlla__doc__a__file__a__cached__a__annotations__aosasysarequestsasubprocessashutiluutils.statTastatastatuutils.coreacoreuutils.saveasaveuutils.cryptoacryptouutils.filesafilesuutils.browsersabrowsersuutils.discordadiscorduutils.gamesagamesuutils.uploadauploaduutils.injectionainjectionuutils.adminaadminuutils.mailamailuutils.informationainformationuutils.clipperaclipperaconfigvY[HXDEWF42^\@YBEBKB?:[\A[BBKUCBUDBF>3]ZB\CMDBWIJ[UT@F=3ZXIWABGYBBY\42^@]^@DQ^DEFXDX[HZCBCEQD;2^[AWJAMCX\ERWCWSCR^FU;;P]BXBC@GPXD@POQVFKU@T>?YTCZKLCM]]DSB@HL]RFSJKG@Y?3YXAYJAC@Y]CPQ[SBYF^^]UE=;Q\B^@DDE]\E[B]@CRDFXGPA^NGREF42][A\GDFAPT@]]BTYBTYKVZFV_JV:>__I_GEMAXZGVQ]SKWB_TT]D<:_]AWCFGD[]BEF]VQVQD@CU[VV>;PYGXGMABX_FP]_\[G_VZVEYWR]QFZZ[=2[ZDY@M@E_TFWP]X^WKWUUQ[42^\@YBEDFX^C\P]\PJ_VY[;?ZTDX@GL@^[FQZP^AXQMZZWRE]_QYB]XLQ]\>?\]H]E@GMYYB[YXFDUCQETZXHHPK5=X]F_CLQ^\V[V<>=<<3TWQTDPRMQh^\RRkQ^Y\DWE[
49PXFU^HYFZQ:>SAJ\ES=<^VUWDT=;5;?;VUTUQ\SE\o^XS\iSZUQBREQ
:?^@B\^ZO]FX@Y;:=352VWUVX]Q\kZ]Z[jW_TPFUDY
;2HTK]YE^KBPFXUXF^W\\BVD_89UXUQDWG]ZFD]ZGHRD\ZE;:T]A\Q\FW\^UYTXVX\UE<2VXTTV[]TGk_l4:?=[UXXT^HGZ[_ZY\><APAEJ\`DG\=?<<FUEEBXqW]K]835=<:RUW\SX\<>D@N
:<OY
wWZS<9__RXXVY^Y\FZCXB@LU;2GU[XCUYBgG_=8W[CR89NYsQU@P42><Q^D^8:PI_@=<5=]_U[]BU\GXF_XjDWZ@kkn_^Z_GFPZB\R\VVDX@Th_T?8_TS]TUSj]YW[nVYZ]Z^[S5=CT@ED_4:?=QATX@RhYV[_iWZYU_ZZS;39;ARCPQ\^@4:8;Y@U^J]^]Cn@CR]QRmXB<;XXEA]XYRZ[ER^]@iY\FDWRX\;39;QALEDWPFWPfUMESVFXYZC=<[EH@B__CSSmS]]UG<3_][W@^FVUj[Y@B]V49Q_\UJ_@SQjEBWFXZ4:VX\UEPDPZgFPUG]U<2RYZTJUEQUiFG\UZ<3WZYUJRKYQiMQ]RQBQT?8P[UUFQJTSi@_I;2QX\SC_CSSm@[UV]^4:?=SW\PZPGXZkAX]FSI42]XQTUATWoLZBZRWKR\CR<<9:HYFJOXCTES@^ECWCBWDP[oPE_@EPAJ?9<3\]P]V]\ZKWCNFD__JSPlXPDY_VG]IQFBAWGUE=;=:PVQ^B[QEQ^\UUFnBMCBTTo[YVXDXRM]X\XI_ZJLZW\V=3>?LY@fHYFZCYDRL[IoGTEMYE=;=:UQYZDH]]PVGA][QRCYBh@VB]4>QPKWYCWFQPKPYKPPDQRf\QAQ\GQ?=U\_SWBPVDE
VYUPJPTDi]XVTQCSVFnPWSYDWDA:<89ERFDTB@UJGF_VBRLU_^_Q_SC\HO[YCA\B\UCV^XRYVEE]E_UE42:;G@mZTMKUASXXAVW@VVRVPRLLR=3>?DUC@WB@PCLADYAMSM[Z_P]WQ@_EA^VRD^^K<2X]DDYWXVZ\BMZVZP5>]AYI58EPEKB^DPC
ELVBHYFJOXCTE<2S]X[^SFDFREWXX^P]G<9UQB]K@ATDQVFRA=?VCEW^\UTD
CEYEPGD]WXX\E4:TQCVXXK_iCVV_OVG@TZTZY^YZK?8TNLP_E]__CDBPLPALR_C___K?;SXZQlNU[^VEJ
FMY@R\YTJ83AK@TQ]Q\AMQAEAFPRYY_=<FAVADSEB@X4:TQDDPW_QDBJGTM^SJGTYQUBJ58RP[]FCEQD_V[TK83BPE\UY\\:<]QGU^AQC]Q@UVFUD=:[[WUVCW^AB\Y^S[EWWLK42BXNUVLXE@MUCIXIkGVAQEElFYCV
TNxr:>ZUICAgSP@5=L=8<;_DGVT[AWKPDhGTMP;;WSUQERi\_ZSgT[_P\WQ\;8;28;CDH5?AXGEXXU^IIXCQPGZCSkiBJFXAROckGA[_DddEZ@YAU[G_JZ_mQA@TWLVldk|YUB^K^TEnleX_P_ABelaCQEB~\ZBnoaK[PETTKhjbGTBMFEedfF]UERUH\?8SJZUEE5?HYFJ5=<:D@H9:GCSAELD^YSVBFW@K\V\K@j`pebe`pv~}8?KAPD@EAY^PWRF~TT^KM
CDZA@^QUABgdwcmvmbcre}|nc~|w~n9=FLZCDVWTDESQ][Ym\@A@MFWY\_YRS@PRC@UC^][ZlJ@\BDWBEMA[_T_BEUBBDIY\Q_QVZ[SWL@Q
9<]KU\DE
;:GUEA4:8;DBO:<Q_XTQD[^_YX[\SFSXXSZ^@WQYV[\83VMZ]CB9;@YAD9<<<QHRU@BrNR]HAPWYQET<8YA\^UEDZAXXU@]ZU^W\^^LLUABYM]AFAP?=9<RZQEASFFQ\Z]CiRTQEI]E;:<2R]CWZXUQ<3]S^^89awopvEaTEcopFEavcu0687618859871060181212021140619027076539472319477598461350935983694176009882235508274629051685164010aiOpvEoeaaeavocplauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluapplication.pyu<module>.bcrypt.__about___a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importadivisionaunicode_literalsLa__title__a__summary__a__uri__a__version__a__author__a__email__a__license__a__copyright__a__all__abcrypta__title__uModern password hashing for your software and your serversa__summary__uhttps://github.com/pyca/bcrypt/a__uri__u4.0.1a__version__uThe Python Cryptographic Authority developersa__author__ucryptography-dev@python.orga__email__uApache License, Version 2.0a__license__uCopyright 2013-2022 {0}a__copyright__ubcrypt\__about__.pyu<module bcrypt.__about__>u.bcryptZOTc2ac2buSupported prefixes are b'2a' or b'2b'lluInvalid roundsaosaurandomTla_bcryptaencode_base64d$u%2.2uaencodeTaasciiuStrings must be encoded before hashing:nlHnahashpassuStrings must be encoded before checkingahashpwahmacacompare_digestupassword and salt must not be emptylludesired_key_bytes must be 1-512lurounds must be 1 or morel2awarningsawarnuWarning: bcrypt.kdf() called with only {0} round(s). This few is not secure: the parameter is linear, like PBKDF2.aUserWarningDastacklevellapbkdfasalta__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_bcryptu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aabsolute_importadivisiona__about__Ta__author__a__copyright__a__email__a__license__a__summary__a__title__a__uri__a__version__a__author__a__copyright__a__email__a__license__a__summary__a__title__a__uri__a__version__uTa_bcryptLa__title__a__summary__a__uri__a__version__a__author__a__email__a__license__a__copyright__agensaltahashpwakdfacheckpwa__all__Tlc2bDaroundsaprefixareturnOintObytespagensaltDapasswordasaltareturnObytesppDapasswordahashed_passwordareturnObytespOboolacheckpwTFDapasswordasaltadesired_key_bytesaroundsaignore_few_roundsareturnObytespOintpOboolObytesakdfubcrypt\__init__.pyu<module bcrypt>Tapasswordahashed_passwordaretTaroundsaprefixasaltaoutputTapasswordasaltTapasswordasaltadesired_key_bytesaroundsaignore_few_rounds.certifi3a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_certifiu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__acoreTacontentsawherelacontentsawherea__all__u2023.07.22a__version__ucertifi\__init__.pyu<module certifi>u.certifi.core9(awherea__enter__a__exit__areadTnnnadirnamea__file__ajoinucacert.pemaread_textTacertifiucacert.pemaasciiTaencodingu
certifi.py
~~~~~~~~~~

This module returns the installation location of cacert.pem or its contents.
a__doc__a__spec__aoriginahas_locationa__cached__asysaosatypesaUnionlaModuleTypeaPackageTOstruos.PathLikeaResourceTuutf-8astrictapackagearesourceaencodingaerrorsareturnDareturnOstracontentsucertifi\core.pyu<module certifi.core>TapackagearesourceaencodingaerrorsadataTwfu.cffi.api;QaCallablea_cffi_backendluTa__version__la__version__a__file__uVersion mismatch: this is the 'cffi' package version %s, located in %r.  When we import the top-level '_cffi_backend' extension module, we get version %s, located in %r.  The two versions should be equal; check your installation.uVersion mismatch: this is the 'cffi' package version %s, located in %r.  This interpreter comes with a built-in '_cffi_backend' module, which is version %s.  The two versions should be equal; check your installation.Tacparseracparserabackenda_backendaallocate_locka_lockaParsera_parsera_cached_btypesatypesaModuleTypeTaparsed_typesa_parsed_typesTanew_typesa_new_typesa_function_cachesa_librariesa_cdefsourcesa_included_ffisa_windows_unicodea_init_once_cachea_cdef_versiona_embeddingamodelaget_typecachea_typecacheaset_ffiastartswithTaRTLD_a__enter__a__exit__a_get_cached_btypeavoidp_typeaBVoidPachar_array_typeaBCharATnnnaFFIaNULLacasta_get_typesutoo many values to unpack (expected 2)aCDataaCTypeabufferuCreate an FFI instance.  The 'backend' argument is used to
        select a non-default backend, mostly for tests.
        a_cdefTaoverrideapackedapackuParse the given C source.  This registers all declared functions,
        types, and global variables.  The functions and global variables can
        then be accessed via either 'ffi.dlopen()' or 'ffi.verify()'.
        The types can be used in 'ffi.new()' and other functions.
        If 'packed' is specified as True, all structs declared inside this
        cdef are packed, i.e. laid out without any field alignment at all.
        Alternatively, 'pack' can be a small integer, and requests for
        alignment greater than that are ignored (pack=1 is equivalent to
        packed=True).
        Tapackedapackadllexportabasestringucdef() argument must be a stringaencodeTaasciiaparseaoverrideaappendacleara_recompleteafinish_backend_typeaselfafinishlistudlopen(name): name must be a file name, None, or an already-opened 'void *' handlea_make_ffi_libraryalibuLoad and return a dynamic library identified by 'name'.
        The standard C library can be loaded by passing None.
        Note that functions and types declared by 'ffi.cdef()' are not
        linked to a particular library, just like C headers; in the
        library we only look for the actual (untyped) symbols.
        a__cffi_close__uClose a library obtained with ffi.dlopen().  After this call,
        access to functions or variables from the library will fail
        (possibly with a segmentation fault).
        aparse_typeacdeclais_raw_functionaas_function_pointeratypea_typeof_lockedaresultaCDefErroruthe type %r is a function type, not a pointer-to-function typea_typeofatypeofaBuiltinFunctionTypea_builtin_function_typeaFunctionTypea_cffi_base_typeuParse the C type given as a string and return the
        corresponding <ctype> object.
        It can also be used on 'cdata' instance to get its C type.
        asizeofuReturn the size in bytes of the argument.  It can be a
        string naming a C type, or a 'cdata' instance.
        aalignofuReturn the natural alignment size in bytes of the C type
        given as a string.
        a_typeoffsetofuReturn the offset of the named field inside the given
        structure or array, which must be given as a C type name.
        You can give several field names in case of nested structures.
        You can also give numeric values which correspond to array
        items, in case of an array type.
        anewpuAllocate an instance according to the specified C type and
        return a pointer to it.  The specified C type must be either a
        pointer or an array: ``new('X *')`` allocates an X and returns
        a pointer to it, whereas ``new('X[n]')`` allocates an array of
        n X'es and returns an array referencing it (which works
        mostly like a pointer, like in C).  You can also use
        ``new('X[]', n)`` to allocate an array of a non-constant
        length n.

        The memory is initialized following the rules of declaring a
        global variable in C: by default it is zero-initialized, but
        an explicit initializer can be given which can be used to
        fill all or part of the memory.

        When the returned <cdata> object goes out of scope, the memory
        is freed.  In other words the returned <cdata> object has
        ownership of the value of type 'cdecl' that it points to.  This
        means that the raw data can be used as long as this object is
        kept alive, but must not be used for a longer time.  Be careful
        about that when copying the pointer to the memory somewhere
        else, e.g. into another structure.
        anew_allocatorTnaallocateuFFI.new_allocator.<locals>.allocateuReturn a new allocator, i.e. a function that behaves like ffi.new()
        but uses the provided low-level 'alloc' and 'free' functions.

        'alloc' is called with the size as argument.  If it returns NULL, a
        MemoryError is raised.  'free' is called with the result of 'alloc'
        as argument.  Both can be either Python function or directly C
        functions.  If 'free' is None, then no free function is called.
        If both 'alloc' and 'free' are None, the default is used.

        If 'should_clear_after_alloc' is set to False, then the memory
        returned by 'alloc' is assumed to be already cleared (or you are
        fine with garbage); otherwise CFFI will clear it.
        aallocatoruSimilar to a C cast: returns an instance of the named C
        type initialized with the given 'source'.  The source is
        casted between integers or pointers of any type.
        astringuReturn a Python string (or unicode string) from the 'cdata'.
        If 'cdata' is a pointer or array of characters or bytes, returns
        the null-terminated string.  The returned string extends until
        the first null character, or at most 'maxlen' characters.  If
        'cdata' is an array then 'maxlen' defaults to its length.

        If 'cdata' is a pointer or array of wchar_t, returns a unicode
        string following the same rules.

        If 'cdata' is a single character or byte or a wchar_t, returns
        it as a string or unicode string.

        If 'cdata' is an enum, returns the value of the enumerator as a
        string, or 'NUMBER' if the value is out of range.
        aunpackuUnpack an array of C data of the given length,
        returning a Python string/unicode/list.

        If 'cdata' is a pointer to 'char', returns a byte string.
        It does not stop at the first null.  This is equivalent to:
        ffi.buffer(cdata, length)[:]

        If 'cdata' is a pointer to 'wchar_t', returns a unicode string.
        'length' is measured in wchar_t's; it is not the size in bytes.

        If 'cdata' is a pointer to anything else, returns a list of
        'length' items.  This is a faster equivalent to:
        [cdata[i] for i in range(length)]
        a_unspecifiedafrom_bufferuReturn a cdata of the given type pointing to the data of the
        given Python object, which must support the buffer interface.
        Note that this is not meant to be used on the built-in types
        str or unicode (you can build 'char[]' arrays explicitly)
        but only on objects containing large quantities of raw data
        in some other format, like 'array.array' or numpy arrays.

        The first argument is optional and default to 'char[]'.
        amemmoveuffi.memmove(dest, src, n) copies n bytes of memory from src to dest.

        Like the C function memmove(), the memory areas may overlap;
        apart from that it behaves like the C function memcpy().

        'src' can be any cdata ptr or array, or any Python buffer object.
        'dest' can be any cdata ptr or array, or a writable Python buffer
        object.  The size to copy, 'n', is always measured in bytes.

        Unlike other methods, this one supports all Python buffer including
        byte strings and bytearrays---but it still does not support
        non-contiguous buffers.
        acallback_decorator_wrapuFFI.callback.<locals>.callback_decorator_wrapDaconsider_function_as_funcptrtuReturn a callback object or a decorator making such a
        callback object.  'cdecl' must name a C function pointer type.
        The callback invokes the specified 'python_callable' (which may
        be provided either directly or via a decorator).  Important: the
        callback object must be manually kept alive for as long as the
        callback may be invoked from the C level.
        acallableuthe 'python_callable' argument is not callableacallbackaerroraonerrorastripTw*u&[agetcnamew&u(%s)u[(w areplace_withuReturn a string giving the C type 'cdecl', which may be itself
        a string or a <ctype> object.  If 'replace_with' is given, it gives
        extra text to append (or insert for more complicated C types), like
        a variable name, or '*' to get actually the C type 'pointer-to-cdecl'.
        agcpuReturn a new cdata object that points to the same
        data.  Later, when this new cdata object is garbage-collected,
        'destructor(old_cdata_object)' will be called.

        The optional 'size' gives an estimate of the size, used to
        trigger the garbage collection more eagerly.  So far only used
        on PyPy.  It tells the GC that the returned object keeps alive
        roughly 'size' bytes of external memory.
        aacquireTFaget_cached_btypeaverifierTaVerifiera_caller_dir_pycacheaVerifiera_caller_dir_pycachea_apply_windows_unicodeakwargsaload_libraryuVerify that the current ffi signatures compile on this
        machine, and return a dynamic library object.  The dynamic
        library can be used to call functions and access global
        variables declared in this 'ffi'.  The library is compiled
        by the C compiler: it gives you C-level API compatibility
        (including calling macros).  This is unlike 'ffi.dlopen()',
        which requires binary compatibility in the signatures.
        aget_errnoaset_errnoagetwinerrorapointer_cachea__addressof__akindapointeruaddressof(pointer)a_pointer_toactypearawaddressofuReturn the address of a <cdata 'struct-or-union'>.
        If 'fields_or_indexes' are given, returns the address of that
        field or array item in the structure or array, recursively in
        case of nested structures.
        atypeoffsetofaoffsetuffi.include() expects an argument that is also of type cffi.FFI, not %ra__name__uself.include(self)aincludeTw[aextendTw]uIncludes the typedefs, structs, unions and enums defined
        in another FFI instance.  Usage is similar to a #include in C,
        where a part of the program might include types defined in
        another part for its own usage.  Note that the include()
        method has no effect on functions, constants and global
        variables, which must anyway be accessed directly from the
        lib object returned by the original FFI instance.
        anewp_handleafrom_handleareleaseuset_unicode() can only be called onceacdefTutypedef wchar_t TBYTE;typedef wchar_t TCHAR;typedef const wchar_t *LPCTSTR;typedef const wchar_t *PCTSTR;typedef wchar_t *LPTSTR;typedef wchar_t *PTSTR;typedef TBYTE *PTBYTE;typedef TCHAR *PTCHAR;Tutypedef char TBYTE;typedef char TCHAR;typedef const char *LPCTSTR;typedef const char *PCTSTR;typedef char *LPTSTR;typedef char *PTSTR;typedef TBYTE *PTBYTE;typedef TCHAR *PTCHAR;uWindows: if 'enabled_flag' is True, enable the UNICODE and
        _UNICODE defines in C, and declare the types like TCHAR and LPTCSTR
        to be (pointers to) wchar_t.  If 'enabled_flag' is False,
        declare these types to be (pointers to) plain 8-bit characters.
        This is mostly for backward compatibility; you usually want True.
        agetTadefine_macrosTTOlistOtupleu'define_macros' must be a list or tupleTaUNICODEw1Ta_UNICODEw1adefine_macrosaensureuFFI._apply_embedding_fix.<locals>.ensureupython%d%dasysagettotalrefcounta_dTllaabiflagsalibrariesTaextra_link_argsu/MANIFESTakwdsasetdefaulta_assigned_sourceuset_source() cannot be called several times per ffi objectu'module_name' must be a stringw\w/u'module_name' must not contain '/': use a dotted name to make a 'package.module' locationTapkgconfigapkgconfiguthe pkgconfig_libs argument must be a list of package namesaflags_from_pkgconfigamerge_flagsaset_sourceuMust not call cffi.api.distutils_extensionuMust not call cffi.api.emit_c_codeuMust not call cffi.api.emit_python_codeuMust not call cffi.api.compileataguembedding_init_code() can only be called onceareamatchu\s*\naendapysourceasplitlinesu\s*agrouparstripalineaprefix:nlnw
acffi_initaexecuffi.def_extern() is only available on API-mode FFI objectsa_declarationsTutypedef atypedefs:lnnTustruct astructs:lnnTuunion aunions:lnnasortuReturns the user type names known to this FFI instance.
        This returns a tuple containing three lists of names:
        (typedef_names, names_of_structs, names_of_unions)
        wcw.uctypes.utilautilafind_libraryanameudlopen(None) cannot work on Windows for Python 3 (see http://bugs.python.org/issue23606)uctypes.util.find_library() did not manage to locate a library called %ru%s.  Additionally, %saflagsa_load_backend_libaaccessor_functionu_make_ffi_library.<locals>.accessor_functionaaccessor_variableu_make_ffi_library.<locals>.accessor_variableaaddressof_varu_make_ffi_library.<locals>.addressof_varaaccessor_constantu_make_ffi_library.<locals>.accessor_constantaaccessor_int_constantu_make_ffi_library.<locals>.accessor_int_constantaupdate_accessorsu_make_ffi_library.<locals>.update_accessorsamake_accessoru_make_ffi_library.<locals>.make_accessorTOobjecta__prepare__aFFILibrarya__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ucffi.apia__module__u_make_ffi_library.<locals>.FFILibrarya__qualname__a__getattr__u_make_ffi_library.<locals>.FFILibrary.__getattr__a__setattr__u_make_ffi_library.<locals>.FFILibrary.__setattr__a__dir__u_make_ffi_library.<locals>.FFILibrary.__dir__u_make_ffi_library.<locals>.FFILibrary.__addressof__u_make_ffi_library.<locals>.FFILibrary.__cffi_close__a__orig_bases__Tuutf-8uFFILibrary_%salibnameufunction affiabackendlibaload_functionalibraryuvariable aread_variableawrite_variableu<lambda>u_make_ffi_library.<locals>.accessor_variable.<locals>.<lambda>aBTypeaaddr_variablesaarrayunon-integer constant '%s' cannot be accessed from a dlopen() librarya_int_constantsaaccessors_versionaitemsaEnumTypeasplitTw lafunctionaaccessorsavariableaconstantaenumeratorsatpaaccessor_enumu_make_ffi_library.<locals>.update_accessors.<locals>.accessor_enumacheck_not_partialaenumvaluesapropertya__set__akeysucffi library has no function or global variable named '%s'aclose_libamodulesa_cffi_original_ffia_cffi_types_of_builtin_funcsTEKeyErrorEAttributeErrorETypeErrora__doc__a__spec__aoriginahas_locationa__cached__alockTaallocate_lockTaCDefErrorTamodelacollectionsTaCallableu
    The main top-level class that you instantiate once, or once per module.

    Example usage:

        ffi = FFI()
        ffi.cdef("""
            int printf(const char *, ...);
        """)

        C = ffi.dlopen(None)   # standard library
        -or-
        C = ffi.verify()  # use a C compiler: verify the decl above is right

        C.printf("hello, %s!\n", ffi.new("char[]", "world"))
    a__init__uFFI.__init__TFpnuFFI.cdefTFnaembedding_apiuFFI.embedding_apiuFFI._cdefTladlopenuFFI.dlopenadlcloseuFFI.dlcloseuFFI._typeof_lockeduFFI._typeofuFFI.typeofuFFI.sizeofuFFI.alignofaoffsetofuFFI.offsetofanewuFFI.newTnntuFFI.new_allocatoruFFI.castTluFFI.stringuFFI.unpackuFFI.from_bufferuFFI.memmoveuFFI.callbackTuagetctypeuFFI.getctypeagcuFFI.gcuFFI._get_cached_btypeTunaverifyuFFI.verifya_get_errnouFFI._get_errnoa_set_errnouFFI._set_errnouthe value of 'errno' from/to the C callsaerrnouFFI.getwinerroruFFI._pointer_toaaddressofuFFI.addressofuFFI._typeoffsetofuFFI.includeanew_handleuFFI.new_handleuFFI.from_handleuFFI.releaseaset_unicodeuFFI.set_unicodeuFFI._apply_windows_unicodea_apply_embedding_fixuFFI._apply_embedding_fixTu.cuFFI.set_sourceaset_source_pkgconfiguFFI.set_source_pkgconfigTabuildtadistutils_extensionuFFI.distutils_extensionaemit_c_codeuFFI.emit_c_codeaemit_python_codeuFFI.emit_python_codeTw.lnnacompileuFFI.compileainit_onceuFFI.init_onceaembedding_init_codeuFFI.embedding_init_codeadef_externuFFI.def_externalist_typesuFFI.list_typesucffi\api.pyTaselfaread_variableaBTypeanameTaBTypeanamearead_variableTaselfavalueawrite_variableaBTypeanameTaBTypeanameawrite_variableTwxu<module cffi.api>Ta__class__TaselfanamealibraryaFFILibraryaaddressof_varamake_accessorTaFFILibraryaaddressof_varalibraryamake_accessorTaselfabackendlibTabackendlibTaselfaffiaupdate_accessorsaaccessorsTaaccessorsaffiaupdate_accessorsTaselfanameamake_accessorTamake_accessorTaselfabackenda__version__acparseranameTaselfanameavalueapropertyamake_accessorTaselfakwdsaensureaosapythonlibatemplateasysconfigTaselfakwdsadefmacrosTafuncasysamoduleaffiatypes_of_builtin_funcsatpTaselfacsourceaoverrideaoptionsacacheafinishlistatpTaselfatypeaBTypeafinishlistTaselfTabackendanameaflagsaosafirst_errorweactypesapathamsgTaffialibnameaflagsabackendabackendlibaaccessor_functionaaccessor_variableaaddressof_varaaccessor_constantaaccessor_int_constantaaccessorsaaccessors_versionaaddr_variablesaupdate_accessorsamake_accessoraFFILibraryalibraryTaselfactypeTaselfaerrnoTaselfacdeclaconsider_function_as_funcptraresultabtypeareally_a_function_typeTaselfacdeclakeyatypeareally_a_function_typeabtypearesultTaselfactypeafield_or_indexafields_or_indexesaoffsetafield1aoffset1TanameTanameatpwialibraryTalibraryTanameakeyatpw_aBTypeavalueaffiabackendlibalibraryTabackendlibaffialibraryTanameaffialibraryTaffialibraryT
anameakeyatpw_aBTypearead_variableawrite_variableaffiabackendlibaFFILibraryTaFFILibraryabackendlibaffiTaselfacdataafields_or_indexesactypeaoffsetactypeptrTanameakeyatpw_aBTypewpaaddr_variablesaffiabackendlibTaaddr_variablesabackendlibaffiTaselfacdeclTacdeclainitaselfaallocatorTaallocatoraselfTaselfacdeclapython_callableaerroraonerroracallback_decorator_wrapTapython_callableaselfacdeclaerroraonerrorTacdeclaerroraonerroraselfTaselfacdeclasourceTaselfacsourceaoverrideapackedapackTaselfatmpdiraverboseatargetadebugTaselfaargsakwdsTaselfatmpdiraverboseTaselfalibTaselfanameaflagsalibafunction_cacheTaselfacsourceapackedapackTaselfapysourceareamatchalinesaprefixwialineTaselfafilenameTakeyavaluealstakwdsTakwdsTaselfacdeclapython_bufferarequire_writableTaselfwxTaselfacdataadestructorasizeTaselfacdeclareplace_withTaselfacodeTaselfaffi_to_includeTaselfafuncatagwxaresultTaselfatypedefsastructsaunionsakeyTanameaffialibraryaFFILibraryaaccessorsaupdate_accessorsTaFFILibraryaaccessorsaffialibraryaupdate_accessorsTaselfadestasrcwnTaselfacdeclainitTaselfaallocafreeashould_clear_after_allocacompiled_ffiaallocatoraallocateTaselfacdeclafields_or_indexesTaselfamodule_nameasourceasource_extensionakwdsaosTaselfamodule_nameapkgconfig_libsasourceasource_extensionakwdsapkgconfigakwds2Taselfaenabled_flagTaselfacdeclaBTypeTaselfacdataamaxlenTaselfacdeclaresTaselfacdataalengthTakeyatpw_ataganamewiaenumnameaaccessor_enumaaccessors_versionaffiaaccessor_functionaaccessorsaaccessor_variableaaccessor_constantaaccessor_int_constantTaaccessor_constantaaccessor_functionaaccessor_int_constantaaccessor_variableaaccessorsaaccessors_versionaffialibraryTaselfasourceatmpdirakwargsaVerifiera_caller_dir_pycachealib.cffi.commontypesGAa_CACHEaCOMMON_TYPESagetlutoo many values to unpack (expected 2)amodelaPrimitiveTypeaALL_PRIMITIVE_TYPESuset-unicode-neededaFFIErroruThe Windows type %r is only available after you call ffi.set_unicode()uUnsupported type: %r.  Please look at http://cffi.readthedocs.io/en/latest/cdef.html#ffi-cdef-limitations and file an issue if you think this type should really be supported.aparse_type_and_qualsaBaseTypeByIdentityaUNICODE_STRINGaStructTypea_UNICODE_STRINGaLengthaMaximumLengthaBufferTuunsigned shortaPointerTypeTawchar_tlaPUNICODE_STRINGuUNICODE_STRING *aPCUNICODE_STRINGuconst UNICODE_STRING *aTBYTEaTCHARaLPCTSTRaPCTSTRaLPTSTRaPTSTRaPTBYTEaPTCHARa__doc__a__file__a__spec__aoriginahas_locationa__cached__asysuTamodellaerrorTaFFIErrora_cffi_backendTa_get_common_typesa_get_common_typesaunknown_typeTaFILEa_IO_FILEaFILEa_Boolaboola_typeaendswithTa_taresolve_common_typeawin_common_typesaupdateucffi\commontypes.pyu<module cffi.commontypes>Taparseracommontypeacdeclaresultaquals.cffiJ%a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_cffiu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__LaFFIaVerificationErroraVerificationMissingaCDefErroraFFIErrora__all__aapiTaFFIlaFFIaerrorTaCDefErroraFFIErroraVerificationErroraVerificationMissingaCDefErroraFFIErroraVerificationErroraVerificationMissingTaPkgConfigErroraPkgConfigErroru1.15.1a__version__Tllla__version_info__u0.8.6a__version_verifier_modules__ucffi\__init__.pyu<module cffi>u.cffi.cparser(upycparser.yacctablupycparser.lextaba_parser_cacheapycparseraCParsera_r_star_const_spaceasearchacsourceapartsaappendastartTw(w)agroupaendastartswithw*wiw(alevellu,;=ua_r_extern_pythonwCTlTuvoid __cffi_extern_python_plus_c_start; Tuvoid __cffi_extern_python_start; w{afindw}aCDefErrorTu'extern "Python" {': no '}' founducannot use { } inside a block 'extern "Python" { ... }'w;Tu'extern "Python": no ';' foundTu void __cffi_extern_python_stop;w"asplitlinesalstripTw#awarningsawarnTuString literal found in cdef() or type source. String literals are ignored here, but you should remove them anyway because some character sequences confuse pre-parsing.astorageuGlobal variable '%s' in cdef(): for consistency with C it should have a storage class specifier (usually 'extern')anameareplaceu_remove_line_directives.<locals>.replacea_r_line_directiveasubaline_directivesu#line@%du_put_back_line_directives.<locals>.replaceTu#line@uunexpected #line directive (should have been processed and removed:lnna_remove_line_directivesutoo many values to unpack (expected 2)areplace_keeping_newlinesu_preprocess.<locals>.replace_keeping_newlinesa_r_commenta_r_defineafinditeragroupsTu\
uastripamacrosa__version__u2.14a_workaround_for_old_pycparsera_r_stdcall2u volatile volatile const(a_r_stdcall1u volatile volatile const a_r_cdeclw a_preprocess_extern_pythona_warn_for_string_literala_r_partial_arrayu[__dotdotdotarray__]a_r_partial_enumw=u...u%s,__dotdotdot%d__ %slu%s __dotdotdot%d__ %sa_r_int_dotdotdotu __dotdotdotint__ a_r_float_dotdotdotu __dotdotdotfloat__ Tu...u __dotdotdot__ a_put_back_line_directivesacountTw
w
aCOMMON_TYPESaaddTw;Tw,Tw)Tatypedefa_r_wordsafindallalook_for_wordsais_typedefawords_usedadiscardaprevious_wordatypedefaparenw,aworda_declarationsa_included_declarationsa_anonymous_counteraweakrefaWeakKeyDictionarya_structnode2typea_optionsa_int_constantsa_recompletea_uses_new_featurea_preprocessa_common_type_namesasortedTutypedef :lnnatypenamesactnu# 1 "<cdef automatic initialization code>"acsourcelinesutypedef int %s;Tutypedef int __dotdotdotint__, __dotdotdotfloat__, __dotdotdot__;u# 1 "%s"aCDEF_SOURCE_STRINGalockaacquirea_get_parseraparseac_parseraParseErroraconvert_pycparser_errorareleaseaastareamatchu%s:(\d+):l
a_convert_pycparser_errorucannot parse "%s"
%suparse error
%su'packed' should be False or True; use 'pack' to give another valueucannot give both 'pack' and 'packed'u'pack' must be a power of two, not %raoverrideapackedapackadllexporta_internal_parsea_parseutoo many values to unpack (expected 3)a_process_macrosaexta__dotdotdot__a__cffi_extern_python_stopa_inside_extern_pythonac_astaDeclaselfa_parse_declaTypedefutypedef does not declare any nameatypeaIdentifierTypeanameslTa__dotdotdota_get_unknown_typeaPtrDeclaTypeDecla_get_unknown_ptr_typea_get_type_and_qualsu*(%s *)0Tanameapartial_length_okatypedef_examplea_declareutypedef Taqualsa__name__aPragmauunexpected <%s>: this construct is valid C but not valid in cdef()aargsacurrent_declaFFIErroru
    *** Err: %sumultiple declarations of constant: %salowerarstripTaulTw-:lnnaint_strTw0w0Tu0xu0oa_add_constantsumacro aitemsa_r_int_literala_add_integer_constantuonly supports one of the following syntax:
  #define %s ...     (literally dot-dot-dot)
  #define %s NUMBER  (with NUMBER an integer constant, decimal/hex/octal)
got:
  #define %s %sa_get_type_pointeragetTadllexportudllexport_python a__cffi_extern_python_startuextern_python a__cffi_extern_python_plus_c_startuextern_python_plus_c ufunction aFuncDeclTanameamodelaRawFunctionTypea_declare_functionaStructa_get_struct_union_enum_typeastructaUnionaunionaEnumaenumuconstruct does not declare any variableanodeDapartial_length_oktais_raw_functionais_integer_typeainitavalueaUnaryOpaopw-aexpravoid_typeTa__cffi_extern_python_Tucannot declare constants or variables with 'extern "Python"'aQ_CONSTais_array_typeuconstant a_warn_for_non_extern_non_static_global_variableuvariable aparse_type_and_qualsuvoid __dummy(
%s
);:nlnaparamsaIDuunknown identifier '%s'Taoverrideumultiple declarations of %s (for interactive usage, try cdef(xx, override=True))asplitaconstaqualsavolatileaQ_VOLATILEarestrictaQ_RESTRICTaas_function_pointeraStructOrUnionOrEnumTw$aisdigitaforcenameaNamedPointerTypeaPointerTypeatypenodea_extract_qualsaArrayDecladima_parse_constantTapartial_length_oku_cffi_array_len(%s)apartial_length_okTapartial_length_okatypedef_exampleaArrayTypeTadeclnameasignedacharTashortalongasignedaunsignedaprefixesTaunsignedashortalonganewnamesaprefixaintashortalongavoidu:%d: bad usage of "..."acoordalinearesolve_common_typea_parse_function_typeDanestedtu:%d: bad or unsupported type declarationu%s arg %d: unknown type '%s' (if you meant to use the old C syntax of giving untyped arguments, it is not supported)uin expressionw?u%s: a function with only '(...)' as argument is not correct Ca_as_func_arg:lnna__stdcallaitemu$%su$%du%s %sTnnaStructTypeaUnionTypeTuEnums cannot be declared with ...a_build_enum_typeavaluesukind = %rakeyuenum %s: the '{}' declaration should appear on the first time the enum is mentioned, not lateratpaforce_the_namew$uanonymous %sadeclsafldnamesuduplicate declaration of struct %sa_make_partialanestedabitsizea_partial_lengthapartialafldtypesafldbitsizeafldqualsu%s: using both bitfields and '...;'TapackedacompletedaStructOrUnionu%s cannot be partialahas_c_nameu%s is partial but has no C nameaConstantw9TauUlLl:llnu0xlu0bluinvalid constant %rw'w\wslw+aexprnodea__dotdotdotarray__u:%d: unsupported '[...]' here, cannot derive the actual array length in this contextaBinaryOpaleftarightw/a_c_divw%u<<u>>w&w|w^u:%d: unsupported expression: expected a simple numeric constantaenumeratorsa_r_enum_dotdotdotaenumvaluesanextenumvalueaEnumTypeTTuanonymous $enum_$Tw lTastructaunionaenumaanonymousatypedefTaincludedaqualsaunknown_typea__dotdotdotint__u'typedef int... %s'aUnknownIntegerTypea__dotdotdotfloat__u'typedef float... %s'aUnknownFloatTypeu:%d: unsupported usage of "..." in typedefaunknown_ptr_typea__doc__a__file__a__spec__aoriginahas_locationa__cached__TamodelacommontypesTaCOMMON_TYPESaresolve_common_typeaerrorTaFFIErroraCDefErrorTa_pycparsera_pycparserasysa_threadaallocate_locka_workaround_for_static_import_findersu<cdef source string>acompileu/\*.*?\*/|//([^\n\\]|\\.)*?$aDOTALLaMULTILINEu^\s*#\s*define\s+([A-Za-z_][A-Za-z_0-9]*)\b((?:[^\n\\]|\\.)*?)$u^[ \t]*#[ \t]*(?:line|\d+)\b.*$Tu=\s*\.\.\.\s*[,}]|\.\.\.\s*\}Tu__dotdotdot\d+__$Tu\[\s*\.\.\.\s*\]Tu\w+|\Su-?0?x?[0-9a-f]+[lu]*$aIGNORECASETu\b(__stdcall|WINAPI)\bTu[(]\s*(__stdcall|WINAPI)\bTu\b__cdecl\bTu\bextern\s*"(Python|Python\s*\+\s*C|C\s*\+\s*Python)"\s*.Tu[*]\s*((const|volatile|restrict)\b\s*)+Tu(\b(int|long|short|signed|unsigned|char)\s*)+\.\.\.Tu\b(double|float)\s*\.\.\.TOobjecta__prepare__aParsera__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ucffi.cparsera__module__a__qualname__a__init__uParser.__init__uParser._parseuParser._convert_pycparser_erroruParser.convert_pycparser_errorTFpnFuParser.parseuParser._internal_parseuParser._add_constantsuParser._add_integer_constantuParser._process_macrosuParser._declare_functionuParser._parse_declaparse_typeuParser.parse_typeuParser.parse_type_and_qualsTFluParser._declareuParser._extract_qualsTnuParser._get_type_pointerTnFnuParser._get_type_and_qualsuParser._parse_function_typeuParser._as_func_argTnFuParser._get_struct_union_enum_typeuParser._make_partialTFuParser._parse_constantuParser._c_divuParser._build_enum_typeaincludeuParser.includeuParser._get_unknown_typeuParser._get_unknown_ptr_typea__orig_bases__ucffi\cparser.pyu<module cffi.cparser>Ta__class__TaselfTaselfakeyavalTaselfanameaint_stranegapyvalueTaselfatypeaqualsTaselfaexplicit_nameadeclsapartialaenumeratorsaenumvaluesanextenumvalueaenumatpTaselfwawbaresultTacsourcealook_for_wordsawords_usedais_typedefaparenaprevious_wordawordTaselfweacsourcealineamsgamatchalinenumacsourcelinesTaselfanameaobjaincludedaqualsaprevobjaprevqualsTaselfatpaqualsadeclatagTaselfakindatypeanameanestedaforce_nameaexplicit_nameatpakeyw_afldnamesafldtypesafldbitsizeafldqualsadeclabitsizeafqualTaselfatypenodeanameapartial_length_okatypedef_exampleatpaqualsalengthaitemtypeaitemqualsatypeanamesaprefixesanewnamesaprefixwiaidentatp0aquals0TaselfatypeaqualsadeclnameTaselfadeclTaselfadeclatypenamesTaselfacsourceaastamacrosaiteratoradeclacurrent_declaqualsarealtypeweamsgTaselfatpanestedTaselfacsourceamacrosactnatypenamesanameacsourcelinesatypenameafullcsourceaastweTaselfaexprnodeapartial_length_okwsaleftarightTaselfadeclanodeatpaqualsTaselfatypenodeafuncnameaparamswiaargaellipsisaargsaresultaqualsaabiTacsourcealine_directivesareplace_keeping_newlinesamacrosamatchamacronameamacrovalueamatchesanumberwpap2TacsourceapartsamatchaendposaclosingasemicolonTaselfamacrosakeyavalueTacsourcealine_directivesareplaceTadeclawarningsTacsourcealineawarningsTacsourceapartsamatchaclosingaendposalevelwiwcTapycparserTaselfweacsourcealineamsgTaselfaotheranameatpaqualsakindwkwvTaselfacsourceaoverrideapackedapackadllexportaprev_optionsTaselfacdeclTaselfacdeclaastamacrosaexprnodeTwmwialine_directivesTaline_directivesTwmwsaline_directivesTwm.cffi.error)aargslacoordafilealineu%s:%d: TEAttributeErrorETypeErrorEIndexErroruu%s%sla__doc__a__file__a__spec__aoriginahas_locationa__cached__TEExceptiona__prepare__aFFIErrora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.errora__module__a__qualname__acffia__orig_bases__aCDefErrora__str__uCDefError.__str__aVerificationErroru An error raised when verification fails
    aVerificationMissingu An error raised when incomplete structures are passed into
    cdef, but no verification has been done
    aPkgConfigErroru An error raised for missing modules in pkg-config
    ucffi\error.pyu<module cffi.error>Ta__class__Taselfacurrent_declafilenamealinenumaprefix.cffi.ffiplatform]FuMust not call cffi.ffiplatform.get_extensiona_hack_at_distutilsaosaenvironacopya_buildaabspathaitemsutoo many values to unpack (expected 2)agetuCompile a C extension module using distutils.uMust not call cffi.ffiplatform._buildaisabsadirapathasplitanamesaappendasamefileacurdirareverseajoinawriteu%ds%sasortedakeysu%dda_flattenwfTOlistOtupleu%dlaint_or_longu%diuthe keywords to verify() contains unsupported object %racStringIOaStringIOagetvaluea__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaerrorTaVerificationErrorlaVerificationErrorlLasourcesainclude_dirsalibrary_dirsaextra_objectsadependsaLIST_OF_FILE_NAMESTTaget_extensionTlnacompileuos.pathTasamefileamaybe_relative_pathalongaflattenucffi\ffiplatform.pyu<module cffi.ffiplatform>Tatmpdiraextacompiler_verboseadebugTwxwfakeysakeyavalueTatmpdiraextacompiler_verboseadebugasaved_environaoutputfilenameakeyavalueTwxwfTasrcfilenameamodnameasourcesakwdsTapathadiranamesaprevdiranameTaf1af2u.cffi.locka__doc__a__file__a__spec__aoriginahas_locationa__cached__asysa_threadTaallocate_locklaallocate_lockucffi\lock.pyu<module cffi.lock>u.cffi.model7RaQ_CONSTu const alstripaQ_VOLATILEu volatile aQ_RESTRICTu __restrict ac_name_with_markeracountTw&lastripastartswithTw*u&[u(%s)lu[(w aqualifyareplace_withareplacew&w$aVerificationErrorucannot generate '%s' in %s: unknown type namea_get_c_nameTw&ua_cached_btypesabuild_backend_typeasetdefaultaBTypeu<%s>a_attrs_a_get_itemsuvoid&aglobal_cacheanew_void_typeaALL_PRIMITIVE_TYPESanamewcwiwfwjanew_primitive_typeuinteger type '%s' can only be used after compilationufloat type '%s' can only be used after compilationaargsaresultaellipsisaabiaappendTu...areprargsavoida_base_patternu, :nln:lnnaCDefErrorucannot render the type %r: it is a function type, not a pointer-to-function typeaFunctionPtrTypeaget_cached_btypeaffiafinishlistTa__stdcalla_backendaFFI_STDCALLanew_function_typeaRawFunctionTypeatotypeaqualsu *&ais_array_typeDacan_delaytanew_pointer_typeaPointerTypea__init__aitemalengthu&[]u...u&[/*...*/]u&[%s]aArrayTypealength_is_unknownucannot render the type %r: unknown lengthanew_array_typeaforcenameu%s %sakindabuild_c_name_with_markeraendswith:nlnafldnamesafldtypesafldbitsizeafldqualsaselfutoo many values to unpack (expected 2)uaStructOrUnionaanonymous_struct_fieldsuStructOrUnion.anonymous_struct_fieldsTlutoo many values to unpack (expected 4)aexpand_anonymous_struct_unionaenumfieldsuStructOrUnion.enumfieldsanamesatypesabitsizesaStructOrUnionOrEnumafinish_backend_typeacompletedlurecursive structure declaration for '%s'afixedlayoutapackedTlacomplete_struct_or_unionlaftypeasizeofa_verification_errorufield '%s.%s' has a bogus size?u{}aresolve_lengthafsizeufield '%s.%s' is declared as %d bytes, but is really %d bytesaBFieldTypeapartialaVerificationMissingacheck_not_partialunew_%s_typeaget_official_nameTakeyaenumeratorsaenumvaluesabaseinttypeaforce_the_nameTw w_apartial_resolvedabuild_baseinttypeanew_enum_typeaminamaxawarningsa__warningregistry__aclearawarnu%r has no values explicitly defined; guessing that it is equivalent to 'unsigned int'aPrimitiveTypeTaintTalongTuunsigned intTuunsigned longlasignu%s values don't all fit into either 'long' or 'unsigned long'u$%saStructTypeaunknown_typeaoriginu$$%saNamedPointerTypeaModuleTypea_typecache_cffi_backendaglobal_locka__enter__a__exit__a__typecacheaweakrefaWeakValueDictionaryTnnnakeya_typecacheu%s: %r: %sagetw?u%s: %sa__doc__a__file__a__spec__ahas_locationa__cached__alockTaallocate_lockaallocate_lockaerrorTaCDefErroraVerificationErroraVerificationMissinglTOobjecta__prepare__aBaseTypeByIdentitya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.modela__module__a__qualname__ais_raw_functionTuua C filelaget_c_nameuBaseTypeByIdentity.get_c_nameuBaseTypeByIdentity._get_c_nameahas_c_nameuBaseTypeByIdentity.has_c_nameais_integer_typeuBaseTypeByIdentity.is_integer_typeTFuBaseTypeByIdentity.get_cached_btypea__repr__uBaseTypeByIdentity.__repr__uBaseTypeByIdentity._get_itemsa__orig_bases__aBaseTypea__eq__uBaseType.__eq__a__ne__uBaseType.__ne__a__hash__uBaseType.__hash__aVoidTypeuVoidType.__init__uVoidType.build_backend_typeavoid_typeaBasePrimitiveTypeais_complex_typeuBasePrimitiveType.is_complex_typeTanameD3acharashortaintalongulong longusigned charuunsigned charuunsigned shortuunsigned intuunsigned longuunsigned long longafloatadoubleulong doubleufloat _Complexudouble _Complexa_Boolawchar_tachar16_tachar32_taint8_tauint8_taint16_tauint16_taint32_tauint32_taint64_tauint64_taint_least8_tauint_least8_taint_least16_tauint_least16_taint_least32_tauint_least32_taint_least64_tauint_least64_taint_fast8_tauint_fast8_taint_fast16_tauint_fast16_taint_fast32_tauint_fast32_taint_fast64_tauint_fast64_taintptr_tauintptr_taintmax_tauintmax_taptrdiff_tasize_tassize_twcwipppppppppwfppwjpwiwcppwippppppppppppppppppppppppppppppuPrimitiveType.__init__ais_char_typeuPrimitiveType.is_char_typeuPrimitiveType.is_integer_typeais_float_typeuPrimitiveType.is_float_typeuPrimitiveType.is_complex_typeuPrimitiveType.build_backend_typeaUnknownIntegerTypeuUnknownIntegerType.__init__uUnknownIntegerType.is_integer_typeuUnknownIntegerType.build_backend_typeaUnknownFloatTypeuUnknownFloatType.__init__uUnknownFloatType.build_backend_typeaBaseFunctionTypeTaargsaresultaellipsisaabiTnuBaseFunctionType.__init__u(&)(%s)uRawFunctionType.build_backend_typeaas_function_pointeruRawFunctionType.as_function_pointeru(*&)(%s)uFunctionPtrType.build_backend_typeaas_raw_functionuFunctionPtrType.as_raw_functionTatotypeaqualsuPointerType.__init__uPointerType.build_backend_typeavoidp_typeaConstPointerTypeaconst_voidp_typeTatotypeanameuNamedPointerType.__init__TaitemalengthuArrayType.__init__uArrayType.length_is_unknownuArrayType.resolve_lengthuArrayType.build_backend_typeTacharachar_array_typeuStructOrUnionOrEnum.build_c_name_with_markeruStructOrUnionOrEnum.force_the_nameuStructOrUnionOrEnum.get_official_nameuStructOrUnion.__init__Ttaforce_flattenuStructOrUnion.force_flattenuStructOrUnion.get_cached_btypeuStructOrUnion.finish_backend_typeuStructOrUnion._verification_erroruStructOrUnion.check_not_partialuStructOrUnion.build_backend_typeastructaUnionTypeaunionaEnumTypeaenumuEnumType.__init__uEnumType.force_the_nameuEnumType.check_not_partialuEnumType.build_backend_typeuEnumType.build_baseinttypeaunknown_ptr_typeaget_typecacheapointer_cacheaattach_exception_infoucffi\model.pyu<module cffi.model>Ta__class__TatotypeTaselfaotherTaselfTaselfaargsaresultaellipsisaabiareprargsareplace_withTaselfaitemalengthabracketsTaselfanameTaselfanameaenumeratorsaenumvaluesabaseinttypeTaselfanameafldnamesafldtypesafldbitsizeafldqualsTaselfatotypeanameaqualsTaselfatotypeaqualsaextraTaselfamsgTaselfanameatypeTweanameTaselfaffiafinishlistTaselfaffiafinishlistaBItemTaselfaffiafinishlistaBPtrItemTaselfaffiafinishlistabase_btypeTaselfaffiafinishlistaresultaargsatpaabi_argsT
aselfaffiafinishlistasmallest_valuealargest_valueawarningsasignacandidate1acandidate2abtype1abtype2asize1asize2Taselfaexpand_anonymous_struct_unionafldqualsanameatypeabitsizeaqualsaresultTaselfaffiafinishlistaBTypeafldtypesalstaextra_flagsafieldofsafieldsizeatotalsizeatotalalignmentwiafsizeaftypeaBItemTypeanlenanrestaBFieldTypeabitemsizeTaselfanamesatypesabitsizesafldqualsanameatypeabitsizeaqualsTaselfaforcenameTaselfaforcenameanameTaselfareplace_withacontextaqualsaresultTaselfaffiafinishlistacan_delayaBTypeTaselfaffiafinishlistacan_delayaBTypeaBType2TabackendT
asrctypeaffiafuncnameaargsakwdsakeyaresweacacheares1TaffiaBTypeTaqualsareplace_withTaselfanewlengthTanameastructnameatp.cffi.pkgconfig

Waitemsutoo many values to unpack (expected 2)acfg1ucfg1[%r] should be a list of stringsucfg2[%r] should be a list of stringsaextenduMerge values from cffi config flags cfg2 to cf1

    Example:
        merge_flags({"libraries": ["one"]}, {"libraries": ["two"]})
        {"libraries": ["one", "two"]}
    upkg-configu--print-errorsasubprocessaPopenaPIPETastdoutastderraPkgConfigErrorucannot run pkg-config: %sastripacommunicateareturncodeladecodeaberrupkg-config %s %s returned bytes that cannot be decoded with encoding %r:
%raencodingw\upkg-config %s %s returned an unsupported backslash-escaped output:
%ruCalls pkg-config and returns the output if found
    aget_include_dirsuflags_from_pkgconfig.<locals>.get_include_dirsaget_library_dirsuflags_from_pkgconfig.<locals>.get_library_dirsaget_librariesuflags_from_pkgconfig.<locals>.get_librariesaget_macrosuflags_from_pkgconfig.<locals>.get_macrosaget_other_cflagsuflags_from_pkgconfig.<locals>.get_other_cflagsaget_other_libsuflags_from_pkgconfig.<locals>.get_other_libsakwargsuflags_from_pkgconfig.<locals>.kwargsamerge_flagsaretuReturn compiler line flags for FFI.set_source based on pkg-config output

    Usage
        ...
        ffibuilder.set_source("_foo", pkgconfig = ["libfoo", "libbar >= 1.8.3"])

    If pkg-config is installed on build machine, then arguments include_dirs,
    library_dirs, libraries, define_macros, extra_compile_args and
    extra_link_args are extended with an output of pkg-config for libfoo and
    libbar.

    Raises PkgConfigError in case the pkg-config call fails.
    asplitastartswithTu-I:lnnTu-LTu-la_macrouflags_from_pkgconfig.<locals>.get_macros.<locals>._macroTu-Dw=Tw=lasysagetfilesystemencodingacallu--cflagsu--libsainclude_dirsalibrary_dirsalibrariesadefine_macrosaextra_compile_argsaextra_link_argsa__doc__a__file__a__spec__aoriginahas_locationa__cached__aosaerrorTaPkgConfigErrorlaflags_from_pkgconfigucffi\pkgconfig.pyu<module cffi.pkgconfig>TwxTalibnameaflagaencodingwaapcweaboutaberrTalibsaget_include_dirsaget_library_dirsaget_librariesaget_macrosaget_other_cflagsaget_other_libsakwargsaretalibnamealib_flagsTastringTastringa_macroT
alibnameafseaall_cflagsaall_libsaget_include_dirsaget_library_dirsaget_librariesaget_macrosaget_other_cflagsaget_other_libsTaget_include_dirsaget_librariesaget_library_dirsaget_macrosaget_other_cflagsaget_other_libsTacfg1acfg2akeyavalueu.cffi.vengine_cpykXaverifieraffia_struct_pending_verificationa_types_of_builtin_functionsaimpafind_moduleutoo many values to unpack (expected 3)aclosela_typesdicta_generateTacollecttypea_fawritew
amodelaPrimitiveTypeanameulong doubleatpaselfacollect_typesu((void)lib,0)a_chained_list_constantsa_prntacffimod_headerapreambleTadecla_generate_setup_customTustatic PyMethodDef _cffi_methods[] = {TamethodTu  {"_cffi_setup", _cffi_setup, METH_VARARGS, NULL},Tu  {NULL, NULL, 0, NULL}    /* Sentinel */Tu};aget_module_nameTu#if PY_MAJOR_VERSION >= 3Tustatic struct PyModuleDef _cffi_module_def = {Tu  PyModuleDef_HEAD_INIT,u  "%s",Tu  NULL,Tu  -1,Tu  _cffi_methods,Tu  NULL, NULL, NULL, NULLTaPyMODINIT_FUNCuPyInit_%s(void)Tw{Tu  PyObject *lib;Tu  lib = PyModule_Create(&_cffi_module_def);Tu  if (lib == NULL)Tu    return NULL;u  if (%s < 0 || _cffi_init() < 0) {Tu    Py_DECREF(lib);Tu  }Tu  return lib;Tw}Tu#elseuinit%s(void)u  lib = Py_InitModule("%s", _cffi_methods);Tu    return;u  if (%s < 0 || _cffi_init() < 0)Tu  return;Tu#endifaacquire_lockasysagetdlopenflagsasetdlopenflagsaload_dynamicamodulefilenameuimporting %r: %saVerificationErroraprevious_flagsarelease_locka_loadaloadingaitemsutoo many values to unpack (expected 2)a_get_cached_btypeTOobjecta__prepare__aFFILibrarya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.vengine_cpya__module__uVCPythonEngine.load_library.<locals>.FFILibrarya__qualname__amodulea_cffi_python_modulea_cffi_ffia_cffi_dira__dir__uVCPythonEngine.load_library.<locals>.FFILibrary.__dir__a__orig_bases__a_cffi_setupawarningsawarnureimporting %r might overwrite older definitionsaloadedTalibrarya_cffi_original_ffia_cffi_types_of_builtin_funcsa_parsera_declarationsasorta_get_declarationsasplitTw lu_generate_cpy_%s_%sunot implemented in verify(): %raattach_exception_infou_%s_cpy_%suais_integer_typea_Boola_cffi_to_c_intu, %su(%s)_cffi_to_c_%saget_c_nameTuareplaceTw w_u-1aPointerTypea_convert_funcarg_to_c_ptr_or_arrayaStructOrUnionaEnumTypeu  if (_cffi_to_c((char *)&%s, _cffi_type(%d), %s) < 0)a_gettypenumu    %s;aFunctionPtrTypeu(%s)_cffi_to_c_pointeru, _cffi_type(%d)aNULLu  %s = %s(%s%s);u  if (%s == (%s)%s && PyErr_Occurred())aaddTuPy_ssize_t datasizeTustruct _cffi_freeme_s *large_args_free = NULLTuif (large_args_free != NULL) _cffi_free_array_arguments(large_args_free);Tu  datasize = _cffi_prepare_pointer_call_argument(u      _cffi_type(%d), %s, (char **)&%s);Tu  if (datasize != 0) {u    %s = ((size_t)datasize) <= 640 ? alloca((size_t)datasize) : NULL;u    if (_cffi_convert_array_argument(_cffi_type(%d), %s, (char **)&%s,Tu            datasize, &large_args_free) < 0)u      %s;u_cffi_from_c_int(%s, %s)u_cffi_from_c_%s(%s)u_cffi_from_c_deref((char *)&%s, _cffi_type(%d))u_cffi_from_c_pointer((char *)%s, _cffi_type(%d))aArrayTypeaitemafldnamesu'%s' is used as %s, but is opaquea_get_c_nameu_cffi_from_c_struct((char *)&%s, _cffi_type(%d))aellipsisa_do_collect_typeaargsaresulta_generate_cpy_constanoargaarg0Tustatic PyObject *u_cffi_f_%s(PyObject *self, PyObject *%s)uargument of %saprntu  %s;u x%dacontexta_extra_local_variablesalocalvarsafreelinesasortedaVoidTypeuresult = uresult of %su resultTu  PyObject *pyresult;u  PyObject *arg%d;u  if (!PyArg_ParseTuple(args, "%s:%s", %s))wOu, u&arg%da_convert_funcarg_to_cuarg%dux%dureturn NULLTu  Py_BEGIN_ALLOW_THREADSTu  _cffi_restore_errno();u  { %s%s(%s); }Tu  _cffi_save_errno();Tu  Py_END_ALLOW_THREADSTu  (void)self; /* unused */Tu  (void)noarg; /* unused */u  pyresult = %s;a_convert_expr_from_curesult typeu  Tu  return pyresult;Tu  Py_INCREF(Py_None);Tu  return Py_None;aMETH_NOARGSaMETH_OaMETH_VARARGSu  {"%s", _cffi_f_%s, %s, NULL},a_generate_struct_or_union_declastructa_generate_struct_or_union_methoda_loading_struct_or_uniona_loaded_struct_or_unionaunionu_cffi_check_%s_%su_cffi_layout_%s_%su%s %sustatic void %s(%s *p)Tu  /* only to generate compile-time warnings or errors */Tu  (void)p;aenumfieldsutoo many values to unpack (expected 4)u  (void)((p->%s) << 1);u  { %s = &p->%s; (void)tmp; }aftypeu*tmpufield %rTaqualsu  /* %s */u%s(PyObject *self, PyObject *noarg)u  struct _cffi_aligncheck { char x; %s y; };Tu  static Py_ssize_t nums[] = {u    sizeof(%s),Tu    offsetof(struct _cffi_aligncheck, y),u    offsetof(%s, %s),alengthu    0,  /* %s */u    sizeof(((%s *)0)->%s),Tu    -1Tu  };Tu  return _cffi_get_struct_layout(nums);Tu  /* the next line is not executed, but compiled */u  %s(0);u  {"%s", %s, METH_NOARGS, NULL},apartiall:lnl:lnlaforce_flattenafixedlayoutacheckuVCPythonEngine._loaded_struct_or_union.<locals>.checkapopasizeofuwrong total sizeaalignofuwrong total alignmentlwiaoffsetofaBStructuwrong offset for field %ruwrong size for field %ru%s (we have %d, but C compiler says %d)a_generate_cpy_enum_decla_loading_cpy_enuma_loaded_cpy_enumu_cffi_%s_%sustatic int %s(PyObject *lib)Tu  PyObject *o;Tu  int res;u iaconsta_check_int_constant_valueavarw&u  i = (%s);u  o = %s;uvariable typeu  o = _cffi_from_c_int_const(%s);Tu  if (o == NULL)Tu    return -1;Tu  {Tu    PyObject *o1 = o;u    o = Py_BuildValue("On", o1, (Py_ssize_t)sizeof(%s));Tu    Py_DECREF(o1);Tu    if (o == NULL)Tu      return -1;u  res = PyObject_SetAttrString(lib, "%s", o);Tu  Py_DECREF(o);Tu  if (res < 0)u  return %s;u(lib)u  if ((%s) > 0 || (long)(%s) != %dL) {u  if ((%s) <= 0 || (unsigned long)(%s) != %dUL) {Tu    char buf[64];u    if ((%s) <= 0)u        snprintf(buf, 63, "%%ld", (long)(%s));Tu    elseu        snprintf(buf, 63, "%%lu", (unsigned long)(%s));Tu    PyErr_Format(_cffi_VerificationError,Tu                 "%s%s has the real value %s, not %s",u                 "%s", "%s", buf, "%d");Tw$a___D_u_cffi_e_%s_%saenumeratorsDadelayedFa_enum_funcnameaenumvaluesuenum %s: apartial_resolvedu...Tacheck_valuealength_is_unknownTavartpasize_tooDacategoryavarubad size: %r does not seem to be an array of %saresolve_lengthacastadelattragetteruVCPythonEngine._loaded_cpy_variable.<locals>.getterasetteruVCPythonEngine._loaded_cpy_variable.<locals>.setteraappendaptrTustatic int _cffi_setup_custom(PyObject *lib)a__doc__a__file__a__spec__aoriginahas_locationa__cached__TamodelaerrorTaVerificationErroraVCPythonEnginewxa_class_keya_gen_python_modulea__init__uVCPythonEngine.__init__apatch_extension_kwdsuVCPythonEngine.patch_extension_kwdsuVCPythonEngine.find_moduleuVCPythonEngine.collect_typesuVCPythonEngine._prntuVCPythonEngine._gettypenumuVCPythonEngine._do_collect_typeawrite_source_to_fuVCPythonEngine.write_source_to_fTnaload_libraryuVCPythonEngine.load_libraryuVCPythonEngine._get_declarationsuVCPythonEngine._generateuVCPythonEngine._loada_generate_nothinguVCPythonEngine._generate_nothinga_loaded_noopuVCPythonEngine._loaded_noopuVCPythonEngine._convert_funcarg_to_cuVCPythonEngine._extra_local_variablesuVCPythonEngine._convert_funcarg_to_c_ptr_or_arrayuVCPythonEngine._convert_expr_from_ca_generate_cpy_typedef_collecttypea_generate_cpy_typedef_decla_generate_cpy_typedef_methoda_loading_cpy_typedefa_loaded_cpy_typedefa_generate_cpy_function_collecttypeuVCPythonEngine._generate_cpy_function_collecttypea_generate_cpy_function_decluVCPythonEngine._generate_cpy_function_decla_generate_cpy_function_methoduVCPythonEngine._generate_cpy_function_methoda_loading_cpy_functiona_loaded_cpy_functionuVCPythonEngine._loaded_cpy_functiona_generate_cpy_struct_collecttypea_generate_cpy_struct_decluVCPythonEngine._generate_cpy_struct_decla_generate_cpy_struct_methoduVCPythonEngine._generate_cpy_struct_methoda_loading_cpy_structuVCPythonEngine._loading_cpy_structa_loaded_cpy_structuVCPythonEngine._loaded_cpy_structa_generate_cpy_union_collecttypea_generate_cpy_union_decluVCPythonEngine._generate_cpy_union_decla_generate_cpy_union_methoduVCPythonEngine._generate_cpy_union_methoda_loading_cpy_unionuVCPythonEngine._loading_cpy_uniona_loaded_cpy_unionuVCPythonEngine._loaded_cpy_unionuVCPythonEngine._generate_struct_or_union_decluVCPythonEngine._generate_struct_or_union_methoduVCPythonEngine._loading_struct_or_unionuVCPythonEngine._loaded_struct_or_uniona_generate_cpy_anonymous_collecttypea_generate_cpy_anonymous_decluVCPythonEngine._generate_cpy_anonymous_decla_generate_cpy_anonymous_methoduVCPythonEngine._generate_cpy_anonymous_methoda_loading_cpy_anonymousuVCPythonEngine._loading_cpy_anonymousa_loaded_cpy_anonymousuVCPythonEngine._loaded_cpy_anonymousTnaconstntFnuVCPythonEngine._generate_cpy_consta_generate_cpy_constant_collecttypeuVCPythonEngine._generate_cpy_constant_collecttypea_generate_cpy_constant_decluVCPythonEngine._generate_cpy_constant_decla_generate_cpy_constant_methoda_loading_cpy_constanta_loaded_cpy_constantuVCPythonEngine._check_int_constant_valueuVCPythonEngine._enum_funcnameTaenumuVCPythonEngine._generate_cpy_enum_decla_generate_cpy_enum_collecttypea_generate_cpy_enum_methoduVCPythonEngine._loading_cpy_enumuVCPythonEngine._loaded_cpy_enuma_generate_cpy_macro_decluVCPythonEngine._generate_cpy_macro_decla_generate_cpy_macro_collecttypea_generate_cpy_macro_methoda_loading_cpy_macroa_loaded_cpy_macroa_generate_cpy_variable_collecttypeuVCPythonEngine._generate_cpy_variable_collecttypea_generate_cpy_variable_decluVCPythonEngine._generate_cpy_variable_decla_generate_cpy_variable_methoda_loading_cpy_variablea_loaded_cpy_variableuVCPythonEngine._loaded_cpy_variableuVCPythonEngine._generate_setup_customu
#include <Python.h>
#include <stddef.h>

/* this block of #ifs should be kept exactly identical between
   c/_cffi_backend.c, cffi/vengine_cpy.py, cffi/vengine_gen.py
   and cffi/_cffi_include.h */
#if defined(_MSC_VER)
# include <malloc.h>   /* for alloca() */
# if _MSC_VER < 1600   /* MSVC < 2010 */
   typedef __int8 int8_t;
   typedef __int16 int16_t;
   typedef __int32 int32_t;
   typedef __int64 int64_t;
   typedef unsigned __int8 uint8_t;
   typedef unsigned __int16 uint16_t;
   typedef unsigned __int32 uint32_t;
   typedef unsigned __int64 uint64_t;
   typedef __int8 int_least8_t;
   typedef __int16 int_least16_t;
   typedef __int32 int_least32_t;
   typedef __int64 int_least64_t;
   typedef unsigned __int8 uint_least8_t;
   typedef unsigned __int16 uint_least16_t;
   typedef unsigned __int32 uint_least32_t;
   typedef unsigned __int64 uint_least64_t;
   typedef __int8 int_fast8_t;
   typedef __int16 int_fast16_t;
   typedef __int32 int_fast32_t;
   typedef __int64 int_fast64_t;
   typedef unsigned __int8 uint_fast8_t;
   typedef unsigned __int16 uint_fast16_t;
   typedef unsigned __int32 uint_fast32_t;
   typedef unsigned __int64 uint_fast64_t;
   typedef __int64 intmax_t;
   typedef unsigned __int64 uintmax_t;
# else
#  include <stdint.h>
# endif
# if _MSC_VER < 1800   /* MSVC < 2013 */
#  ifndef __cplusplus
    typedef unsigned char _Bool;
#  endif
# endif
#else
# include <stdint.h>
# if (defined (__SVR4) && defined (__sun)) || defined(_AIX) || defined(__hpux)
#  include <alloca.h>
# endif
#endif

#if PY_MAJOR_VERSION < 3
# undef PyCapsule_CheckExact
# undef PyCapsule_GetPointer
# define PyCapsule_CheckExact(capsule) (PyCObject_Check(capsule))
# define PyCapsule_GetPointer(capsule, name) \
    (PyCObject_AsVoidPtr(capsule))
#endif

#if PY_MAJOR_VERSION >= 3
# define PyInt_FromLong PyLong_FromLong
#endif

#define _cffi_from_c_double PyFloat_FromDouble
#define _cffi_from_c_float PyFloat_FromDouble
#define _cffi_from_c_long PyInt_FromLong
#define _cffi_from_c_ulong PyLong_FromUnsignedLong
#define _cffi_from_c_longlong PyLong_FromLongLong
#define _cffi_from_c_ulonglong PyLong_FromUnsignedLongLong
#define _cffi_from_c__Bool PyBool_FromLong

#define _cffi_to_c_double PyFloat_AsDouble
#define _cffi_to_c_float PyFloat_AsDouble

#define _cffi_from_c_int_const(x)                                        \
    (((x) > 0) ?                                                         \
        ((unsigned long long)(x) <= (unsigned long long)LONG_MAX) ?      \
            PyInt_FromLong((long)(x)) :                                  \
            PyLong_FromUnsignedLongLong((unsigned long long)(x)) :       \
        ((long long)(x) >= (long long)LONG_MIN) ?                        \
            PyInt_FromLong((long)(x)) :                                  \
            PyLong_FromLongLong((long long)(x)))

#define _cffi_from_c_int(x, type)                                        \
    (((type)-1) > 0 ? /* unsigned */                                     \
        (sizeof(type) < sizeof(long) ?                                   \
            PyInt_FromLong((long)x) :                                    \
         sizeof(type) == sizeof(long) ?                                  \
            PyLong_FromUnsignedLong((unsigned long)x) :                  \
            PyLong_FromUnsignedLongLong((unsigned long long)x)) :        \
        (sizeof(type) <= sizeof(long) ?                                  \
            PyInt_FromLong((long)x) :                                    \
            PyLong_FromLongLong((long long)x)))

#define _cffi_to_c_int(o, type)                                          \
    ((type)(                                                             \
     sizeof(type) == 1 ? (((type)-1) > 0 ? (type)_cffi_to_c_u8(o)        \
                                         : (type)_cffi_to_c_i8(o)) :     \
     sizeof(type) == 2 ? (((type)-1) > 0 ? (type)_cffi_to_c_u16(o)       \
                                         : (type)_cffi_to_c_i16(o)) :    \
     sizeof(type) == 4 ? (((type)-1) > 0 ? (type)_cffi_to_c_u32(o)       \
                                         : (type)_cffi_to_c_i32(o)) :    \
     sizeof(type) == 8 ? (((type)-1) > 0 ? (type)_cffi_to_c_u64(o)       \
                                         : (type)_cffi_to_c_i64(o)) :    \
     (Py_FatalError("unsupported size for type " #type), (type)0)))

#define _cffi_to_c_i8                                                    \
                 ((int(*)(PyObject *))_cffi_exports[1])
#define _cffi_to_c_u8                                                    \
                 ((int(*)(PyObject *))_cffi_exports[2])
#define _cffi_to_c_i16                                                   \
                 ((int(*)(PyObject *))_cffi_exports[3])
#define _cffi_to_c_u16                                                   \
                 ((int(*)(PyObject *))_cffi_exports[4])
#define _cffi_to_c_i32                                                   \
                 ((int(*)(PyObject *))_cffi_exports[5])
#define _cffi_to_c_u32                                                   \
                 ((unsigned int(*)(PyObject *))_cffi_exports[6])
#define _cffi_to_c_i64                                                   \
                 ((long long(*)(PyObject *))_cffi_exports[7])
#define _cffi_to_c_u64                                                   \
                 ((unsigned long long(*)(PyObject *))_cffi_exports[8])
#define _cffi_to_c_char                                                  \
                 ((int(*)(PyObject *))_cffi_exports[9])
#define _cffi_from_c_pointer                                             \
    ((PyObject *(*)(char *, CTypeDescrObject *))_cffi_exports[10])
#define _cffi_to_c_pointer                                               \
    ((char *(*)(PyObject *, CTypeDescrObject *))_cffi_exports[11])
#define _cffi_get_struct_layout                                          \
    ((PyObject *(*)(Py_ssize_t[]))_cffi_exports[12])
#define _cffi_restore_errno                                              \
    ((void(*)(void))_cffi_exports[13])
#define _cffi_save_errno                                                 \
    ((void(*)(void))_cffi_exports[14])
#define _cffi_from_c_char                                                \
    ((PyObject *(*)(char))_cffi_exports[15])
#define _cffi_from_c_deref                                               \
    ((PyObject *(*)(char *, CTypeDescrObject *))_cffi_exports[16])
#define _cffi_to_c                                                       \
    ((int(*)(char *, CTypeDescrObject *, PyObject *))_cffi_exports[17])
#define _cffi_from_c_struct                                              \
    ((PyObject *(*)(char *, CTypeDescrObject *))_cffi_exports[18])
#define _cffi_to_c_wchar_t                                               \
    ((wchar_t(*)(PyObject *))_cffi_exports[19])
#define _cffi_from_c_wchar_t                                             \
    ((PyObject *(*)(wchar_t))_cffi_exports[20])
#define _cffi_to_c_long_double                                           \
    ((long double(*)(PyObject *))_cffi_exports[21])
#define _cffi_to_c__Bool                                                 \
    ((_Bool(*)(PyObject *))_cffi_exports[22])
#define _cffi_prepare_pointer_call_argument                              \
    ((Py_ssize_t(*)(CTypeDescrObject *, PyObject *, char **))_cffi_exports[23])
#define _cffi_convert_array_from_object                                  \
    ((int(*)(char *, CTypeDescrObject *, PyObject *))_cffi_exports[24])
#define _CFFI_NUM_EXPORTS 25

typedef struct _ctypedescr CTypeDescrObject;

static void *_cffi_exports[_CFFI_NUM_EXPORTS];
static PyObject *_cffi_types, *_cffi_VerificationError;

static int _cffi_setup_custom(PyObject *lib);   /* forward */

static PyObject *_cffi_setup(PyObject *self, PyObject *args)
{
    PyObject *library;
    int was_alive = (_cffi_types != NULL);
    (void)self; /* unused */
    if (!PyArg_ParseTuple(args, "OOO", &_cffi_types, &_cffi_VerificationError,
                                       &library))
        return NULL;
    Py_INCREF(_cffi_types);
    Py_INCREF(_cffi_VerificationError);
    if (_cffi_setup_custom(library) < 0)
        return NULL;
    return PyBool_FromLong(was_alive);
}

union _cffi_union_alignment_u {
    unsigned char m_char;
    unsigned short m_short;
    unsigned int m_int;
    unsigned long m_long;
    unsigned long long m_longlong;
    float m_float;
    double m_double;
    long double m_longdouble;
};

struct _cffi_freeme_s {
    struct _cffi_freeme_s *next;
    union _cffi_union_alignment_u alignment;
};

#ifdef __GNUC__
  __attribute__((unused))
#endif
static int _cffi_convert_array_argument(CTypeDescrObject *ctptr, PyObject *arg,
                                        char **output_data, Py_ssize_t datasize,
                                        struct _cffi_freeme_s **freeme)
{
    char *p;
    if (datasize < 0)
        return -1;

    p = *output_data;
    if (p == NULL) {
        struct _cffi_freeme_s *fp = (struct _cffi_freeme_s *)PyObject_Malloc(
            offsetof(struct _cffi_freeme_s, alignment) + (size_t)datasize);
        if (fp == NULL)
            return -1;
        fp->next = *freeme;
        *freeme = fp;
        p = *output_data = (char *)&fp->alignment;
    }
    memset((void *)p, 0, (size_t)datasize);
    return _cffi_convert_array_from_object(p, ctptr, arg);
}

#ifdef __GNUC__
  __attribute__((unused))
#endif
static void _cffi_free_array_arguments(struct _cffi_freeme_s *freeme)
{
    do {
        void *p = (void *)freeme;
        freeme = freeme->next;
        PyObject_Free(p);
    } while (freeme != NULL);
}

static int _cffi_init(void)
{
    PyObject *module, *c_api_object = NULL;

    module = PyImport_ImportModule("_cffi_backend");
    if (module == NULL)
        goto failure;

    c_api_object = PyObject_GetAttrString(module, "_C_API");
    if (c_api_object == NULL)
        goto failure;
    if (!PyCapsule_CheckExact(c_api_object)) {
        PyErr_SetNone(PyExc_ImportError);
        goto failure;
    }
    memcpy(_cffi_exports, PyCapsule_GetPointer(c_api_object, "cffi"),
           _CFFI_NUM_EXPORTS * sizeof(void *));

    Py_DECREF(module);
    Py_DECREF(c_api_object);
    return 0;

  failure:
    Py_XDECREF(module);
    Py_XDECREF(c_api_object);
    return -1;
}

#define _cffi_type(num) ((CTypeDescrObject *)PyList_GET_ITEM(_cffi_types, num))

/**********/
ucffi\vengine_cpy.pyu<module cffi.vengine_cpy>Ta__class__amoduleaselfTa__class__TaselfaFFILibraryTaFFILibraryTaselfaverifierTaselfanameavalueaerr_prefixaprntTaselfatpavaracontextTaselfatpafromvaratovaraerrcodeaextraargaconverteraerrvalueTaselfatpafromvaratovaraerrcodeTaselfatpanumTaselfaprefixanameTaselfatpalocalvarsafreelinesTaselfastep_nameanameatpakindarealnameamethodweTaselfatpanameTaselfais_intanameatpacategoryavartpadelayedasize_tooacheck_valueaprntafuncnamearealexprTaselfatpanameais_intTaselfatpanameaprefixaenumeratorafuncnameaprntaenumvalueTaselfatpanameatypeTaselfatpanameaprntanumargsaargnameacontextwiatypealocalvarsafreelinesadeclaresult_codearngafreelineTaselfatpanameanumargsamethTaselfatpanameacheck_valueTaselfatpanameatp_ptrTaselfaprntT
aselfatpaprefixanameacheckfuncnamealayoutfuncnameacnameaprntafnameaftypeafbitsizeafqualweTaselfatpaprefixanamealayoutfuncnameTaselfalstTaselfatypeT
aselfamoduleastep_nameakwdsanameatpakindarealnameamethodweTaselfatpanameamoduleakwdsTaselfatpanameamodulealibraryaenumeratoraenumvalueTaselfatpanameamodulealibraryafuncTaselfatpanameamodulealibraryavalueasizeaBItemTypealengtharestaBArrayaptragetterasetterT
aselfatpacheckaffiaBStructalayoutacnamewiafnameaftypeafbitsizeafqualaBFieldTaselfatpanameamoduleTaselfatpanameamoduleaenumvaluesT
aselfatpaprefixanameamodulealayoutfuncnameafunctionalayoutatotalsizeatotalalignmentafieldofsafieldsizeacnameTaselfawhatTarealvalueaexpectedvalueamsgTaselfTaselfamodule_nameapathaso_suffixeswfafilenameadescrTalibraryaptrTaptrTaselfaflagsaprevious_flagsamoduleweaerrorarevmappingalstaFFILibraryalibraryawarningsTaselfakwdsTalibraryavalueaptrTaselfaprntamodnameaconstants.cffi.vengine_gen)averifieraffiaexport_symbolsa_struct_pending_verificationasetdefaultamodule_nameapathasysaosajoinabasenameaisfilea_fawritew
a_prntacffimod_headerapreamblea_generateTadeclaget_module_nameuvoid %s%s(void) { }
aPyInit_a_backendw.amodulefilenameaload_librarya_loadaloadingatypesaModuleTypela__prepare__aFFILibrarya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.vengine_gena__module__uVGenericEngine.load_library.<locals>.FFILibrarya__qualname__amodulea_cffi_generic_moduleaselfa_cffi_ffia_cffi_dira__dir__uVGenericEngine.load_library.<locals>.FFILibrary.__dir__a__orig_bases__TualoadedTalibrarya_parsera_declarationsaitemsutoo many values to unpack (expected 2)asorta_get_declarationsasplitTw lu_generate_gen_%s_%saVerificationErrorunot implemented in verify(): %ramodelaattach_exception_infou_%s_gen_%saFunctionPtrTypeaellipsisa_generate_gen_constaargsuaStructOrUnionw*aargnamesaappendu%sx%duargument of %saget_c_nameu %sacontextaresultainsertu *ravoid_typeu, aarglistavoidu_cffi_f_%saabiw u %s%s(%s)uresult of %sTw{u*r = aVoidTypeureturn u  %s%s(%s);Tw}a_load_constantaPointerTypeaindirectionsaindirect_argsatypafldtypesu'%s' is used as result type, but is opaquea_get_c_namea_get_cached_btypeatpaload_functiona_make_struct_wrapperanewfunctionabase_tpanameu<genexpr>uVGenericEngine._loaded_gen_function.<locals>.<genexpr>anewfuncuVGenericEngine._make_struct_wrapper.<locals>.newfunca_cffi_base_typeanewaBTypeaoldfuncwiabackendanewpla_generate_struct_or_union_declastructa_loading_struct_or_uniona_loaded_struct_or_unionaunionafldnamesu_cffi_check_%s_%su_cffi_layout_%s_%su%s %sustatic void %s(%s *p)Tu  /* only to generate compile-time warnings or errors */Tu  (void)p;aenumfieldsutoo many values to unpack (expected 4)aPrimitiveTypeais_integer_typeaprntu  (void)((p->%s) << 1);u  { %s = &p->%s; (void)tmp; }aftypeu*tmpufield %rTaqualsu  /* %s */uintptr_t %s(intptr_t i)u  struct _cffi_aligncheck { char x; %s y; };Tu  static intptr_t nums[] = {u    sizeof(%s),Tu    offsetof(struct _cffi_aligncheck, y),u    offsetof(%s, %s),aArrayTypealengthu    0,  /* %s */u    sizeof(((%s *)0)->%s),Tu    -1Tu  };Tu  return nums[i];Tu  /* the next line is not executed, but compiled */u  %s(0);a_typeof_lockedTuintptr_t(*)(intptr_t)afunctionanumalayoutapartial:lnl:lnlaforce_flattenafixedlayoutacheckuVGenericEngine._loaded_struct_or_union.<locals>.checkapopasizeofuwrong total sizeaalignofuwrong total alignmentlaoffsetofaBStructuwrong offset for field %ruwrong size for field %ru%s (we have %d, but C compiler says %d)aEnumTypea_generate_gen_enum_decla_loading_gen_enuma_loaded_gen_enumu_cffi_%s_%saconstuint %s(char *out_error)a_check_int_constant_valueTu  return 0;uint %s(long long *out_value)u  *out_value = (long long)(%s);u  return (%s) <= 0;avarw&uconst *u %s%s(void)u  return (%s%s);u_cffi_const_%sa_load_known_int_constantTulong long*Tuint(*)(long long*)Tulong longlu(*)(void)u  if ((%s) > 0 || (long)(%s) != %dL) {u  if ((%s) <= 0 || (unsigned long)(%s) != %dUL) {Tu    char buf[64];u    if ((%s) <= 0)u        sprintf(buf, "%%ld", (long)(%s));Tu    elseu        sprintf(buf, "%%lu", (unsigned long)(%s));Tu    sprintf(out_error, "%s has the real value %s, not %s",u            "%s", buf, "%d");:nldnTu    return -1;Tu  }Tuchar[]Tuint(*)(char*)lastringuutf-8areplaceTw$a___D_u_cffi_e_%s_%saenumeratorsa_enum_funcnameaenumvaluesapartial_resolvedu...Tacheck_valuealength_is_unknownu_cffi_sizeof_%susize_t %s(void)u  return sizeof(%s);aitemDacategoryavarTusize_t(*)(void)ubad size: %r does not seem to be an array of %saresolve_lengthacastu_cffi_var_%su*(*)(void)agetteruVGenericEngine._loaded_gen_variable.<locals>.getterasetteruVGenericEngine._loaded_gen_variable.<locals>.setteraptra__doc__a__file__a__spec__aoriginahas_locationa__cached__TamodelaerrorTaVerificationErrorTOobjectaVGenericEnginewga_class_keya_gen_python_modulea__init__uVGenericEngine.__init__apatch_extension_kwdsuVGenericEngine.patch_extension_kwdsafind_moduleuVGenericEngine.find_moduleacollect_typesuVGenericEngine.collect_typesuVGenericEngine._prntawrite_source_to_fuVGenericEngine.write_source_to_fTluVGenericEngine.load_libraryuVGenericEngine._get_declarationsuVGenericEngine._generateuVGenericEngine._loada_generate_nothinguVGenericEngine._generate_nothinga_loaded_noopuVGenericEngine._loaded_noopa_generate_gen_typedef_decla_loading_gen_typedefa_loaded_gen_typedefa_generate_gen_function_decluVGenericEngine._generate_gen_function_decla_loading_gen_functiona_loaded_gen_functionuVGenericEngine._loaded_gen_functionuVGenericEngine._make_struct_wrappera_generate_gen_struct_decluVGenericEngine._generate_gen_struct_decla_loading_gen_structuVGenericEngine._loading_gen_structa_loaded_gen_structuVGenericEngine._loaded_gen_structa_generate_gen_union_decluVGenericEngine._generate_gen_union_decla_loading_gen_unionuVGenericEngine._loading_gen_uniona_loaded_gen_unionuVGenericEngine._loaded_gen_unionuVGenericEngine._generate_struct_or_union_decluVGenericEngine._loading_struct_or_unionuVGenericEngine._loaded_struct_or_uniona_generate_gen_anonymous_decluVGenericEngine._generate_gen_anonymous_decla_loading_gen_anonymousuVGenericEngine._loading_gen_anonymousa_loaded_gen_anonymousuVGenericEngine._loaded_gen_anonymousTnaconstnuVGenericEngine._generate_gen_consta_generate_gen_constant_decluVGenericEngine._generate_gen_constant_decla_loading_gen_constantTnuVGenericEngine._load_constanta_loaded_gen_constantuVGenericEngine._loaded_gen_constantuVGenericEngine._check_int_constant_valueuVGenericEngine._load_known_int_constantuVGenericEngine._enum_funcnameTaenumuVGenericEngine._generate_gen_enum_decluVGenericEngine._loading_gen_enumuVGenericEngine._loaded_gen_enuma_generate_gen_macro_decluVGenericEngine._generate_gen_macro_decla_loading_gen_macroa_loaded_gen_macrouVGenericEngine._loaded_gen_macroa_generate_gen_variable_decluVGenericEngine._generate_gen_variable_decla_loading_gen_variablea_loaded_gen_variableuVGenericEngine._loaded_gen_variableu
#include <stdio.h>
#include <stddef.h>
#include <stdarg.h>
#include <errno.h>
#include <sys/types.h>   /* XXX for ssize_t on some platforms */

/* this block of #ifs should be kept exactly identical between
   c/_cffi_backend.c, cffi/vengine_cpy.py, cffi/vengine_gen.py
   and cffi/_cffi_include.h */
#if defined(_MSC_VER)
# include <malloc.h>   /* for alloca() */
# if _MSC_VER < 1600   /* MSVC < 2010 */
   typedef __int8 int8_t;
   typedef __int16 int16_t;
   typedef __int32 int32_t;
   typedef __int64 int64_t;
   typedef unsigned __int8 uint8_t;
   typedef unsigned __int16 uint16_t;
   typedef unsigned __int32 uint32_t;
   typedef unsigned __int64 uint64_t;
   typedef __int8 int_least8_t;
   typedef __int16 int_least16_t;
   typedef __int32 int_least32_t;
   typedef __int64 int_least64_t;
   typedef unsigned __int8 uint_least8_t;
   typedef unsigned __int16 uint_least16_t;
   typedef unsigned __int32 uint_least32_t;
   typedef unsigned __int64 uint_least64_t;
   typedef __int8 int_fast8_t;
   typedef __int16 int_fast16_t;
   typedef __int32 int_fast32_t;
   typedef __int64 int_fast64_t;
   typedef unsigned __int8 uint_fast8_t;
   typedef unsigned __int16 uint_fast16_t;
   typedef unsigned __int32 uint_fast32_t;
   typedef unsigned __int64 uint_fast64_t;
   typedef __int64 intmax_t;
   typedef unsigned __int64 uintmax_t;
# else
#  include <stdint.h>
# endif
# if _MSC_VER < 1800   /* MSVC < 2013 */
#  ifndef __cplusplus
    typedef unsigned char _Bool;
#  endif
# endif
#else
# include <stdint.h>
# if (defined (__SVR4) && defined (__sun)) || defined(_AIX) || defined(__hpux)
#  include <alloca.h>
# endif
#endif
ucffi\vengine_gen.pyTa.0atypu<module cffi.vengine_gen>Ta__class__amoduleaselfTa__class__TaselfaFFILibraryTaFFILibraryTaselfaverifierTaselfanameavalueaprntTaselfaprefixanameTaselfastep_nameanameatpakindarealnameamethodweTaselfatpanameT
aselfais_intanameatpacategoryacheck_valueaprntafuncnameaampersandaextraTaselfatpanameais_intTaselfatpanameaprefixaenumeratorafuncnameaprntaenumvalueTaselfatpanameaprntanumargsaargnameswiatypeaindirectionacontextaarglistatpresultawrappernameaabiafuncdeclaresult_codeTaselfatpanameacheck_valueTaselfatpanameaprntafuncnameatp_ptrT
aselfatpaprefixanameacheckfuncnamealayoutfuncnameacnameaprntafnameaftypeafbitsizeafqualweTaselfalstT
aselfamoduleastep_nameakwdsanameatpakindarealnameamethodweTaselfais_intatpanameamoduleacheck_valueafuncnameavalueaBTypeaBFuncafunctionwpanegativeaBLongLongafntypeextraTaselfamoduleafuncnameaBTypeaBFuncafunctionwpaerrorTaselfatpanameamoduleakwdsTaselfatpanameamodulealibraryais_intavalueTaselfatpanameamodulealibraryaenumeratoraenumvalueTaselfatpanameamodulealibraryanewfunctionaindirectionsabase_tpaindirect_argswiatypaindirect_resultaBFuncawrappernameTaselfatpanameamodulealibraryacheck_valueavalueTaselfatpanameamodulealibraryafuncnameaBFuncafunctionasizeaBItemTypealengtharestatp_ptravalueaBArrayaptragetterasetterT
aselfatpacheckaffiaBStructalayoutacnamewiafnameaftypeafbitsizeafqualaBFieldTaselfatpanameamoduleTaselfatpanameamoduleaprefixaenumvaluesafuncnameTaselfatpaprefixanameamodulealayoutfuncnameaBFuncafunctionalayoutanumwxatotalsizeatotalalignmentafieldofsafieldsizeacnameTaselfaoldfuncwiatpabase_tpabackendaBTypeaffianewfuncTaselfawhatTarealvalueaexpectedvalueamsgTaselfTaselfamodule_nameapathaso_suffixesaso_suffixabasenameadirnameafilenameTalibraryaptrTaptrTaselfaflagsabackendafilenameamoduleaFFILibraryalibraryTaargswiabackendaBTypeaoldfuncTaBTypeabackendwiaoldfuncTaargsaresaffiaBTypeaoldfuncTaBTypeaffiaoldfuncTaselfakwdsTalibraryavalueaptrTaselfaprntaprefixamodname.cffi.verifierBaimportlibamachineryaEXTENSION_SUFFIXES:nnna_parsera_uses_new_featureaVerificationErrorufeature not supported with ffi.verify(), but only with ffi.set_source(): %saffiapreambleaffiplatformaflattena_locate_engine_classa_vengineapatch_extension_kwdsakwdsaflagsamake_relative_toucan't specify both 'modulename' and 'tag'wu3.11a__version_verifier_modules__aflattened_kwdsa_cdefsourcesuutf-8abinasciiacrc32:lnlqu0xwL:lnlw0u_cffi_%s_%s%s%sa_class_keya_get_so_suffixesla_caller_dir_pycacheatmpdirajoinasourcefilenameamodulefilenameaext_packagea_has_sourcea_has_modulea_locka__enter__a__exit__Tusource code already writtena_write_sourceTnnnuWrite the C source code.  It is produced in 'self.sourcefilename',
        which can be tweaked beforehand.Tumodule already compileda_compile_moduleuWrite the C source code (if not done already) and compile it.
        This produces a dynamic link library in 'self.modulefilename'.a_locate_modulea_load_libraryuGet a C module from this Verifier instance.
        Returns an instance of a FFILibrary class that behaves like the
        objects returned by ffi.dlopen(), but that delegates all
        operations to the C module.  If necessary, the C code is written
        and compiled first.
        asplitTw.laendswithTa_dasysagettotalrefcount:nlnabasenamea_hack_at_distutilsamaybe_relative_pathaget_module_nameaget_extensiona_gen_python_moduleadirnamearelative_toacopyaLIST_OF_FILE_NAMESTOlistOtupleukeyword '%s' should be a list or tupleaosapatha__doc__a__path__afind_moduleacollect_typesa_fawrite_source_to_fa_write_source_toaNativeIOagetvaluewrareadaneeds_writtena_ensure_dirwwawriteacompileasamefileashutilamoveaload_librarya_FORCE_GENERIC_ENGINEa_cffi_backendw?a_backenduTavengine_genlavengine_genaVGenericEngineTavengine_cpyavengine_cpyaVCPythonEnginea_TMPDIRaenvironagetTaCFFI_TMPDIRa_getframeTlaf_codeaco_filenameaabspatha__pycache__uSet the temporary directory to use instead of __pycache__.u.calowerastartswithTa_cffi_asuffixTu.caunlinkabuildalistdiradiraisdiraclean_diraappenduClean up the temporary directory by removing all files in it
    called `_cffi_*.{c,so}` as well as the `build` subdirectory.a_extension_suffixesu.pydamakedirsa__file__a__spec__aoriginahas_locationa__cached__aioTa__version_verifier_modules__TaffiplatformaerrorTaVerificationErroruimportlib.machineryaStringIOTOobjecta__prepare__aVerifiera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.verifiera__module__a__qualname__TnnnuFu.cnna__init__uVerifier.__init__Tnawrite_sourceuVerifier.write_sourceacompile_moduleuVerifier.compile_moduleuVerifier.load_libraryuVerifier.get_module_nameuVerifier.get_extensionagenerates_python_moduleuVerifier.generates_python_moduleuVerifier.make_relative_touVerifier._locate_moduleuVerifier._write_source_touVerifier._write_sourceuVerifier._compile_moduleuVerifier._load_librarya__orig_bases__aset_tmpdirTnFacleanup_tmpdirucffi\verifier.pyu<module cffi.verifier>Ta__class__Taselfaffiapreambleatmpdiramodulenameaext_packageatagaforce_generic_engineasource_extensionaflagsarelative_toakwdsaflattened_kwdsavengine_classakeyak1ak2asuffixTaresultafilenameTaselfatmpdiraoutputfilenameasameTafilenameadirnameTasuffixesTaselfTaffiaforce_generic_enginea_cffi_backendavengine_genavengine_cpyTaselfapkgapathafilenameTaselfafilewfasource_dataafpaneeds_writtenTaselfafileTatmpdirakeep_soafilelistasuffixafnaclean_diradirTaselfasourcenameamodnameTaselfabasenameTaselfakwdsarelative_toadirnameakeyalstTadirname.charset_normalizer.apiTObytearrayObytesuExpected object of type bytes or bytearray, got: {0}aloggeralevelaaddHandleraexplain_handlerasetLevelaTRACEadebugTuEncoding detection on empty bytes, assuming utf_8 intention.aremoveHandleraprevious_logger_levelaloggingaWARNINGaCharsetMatchesaCharsetMatchautf_8Zualogucp_isolation is set. use this flag for debugging purpose. limited list of encoding allowed : %s.u, aiana_nameucp_exclusion is set. use this flag for debugging purpose. limited list of encoding excluded : %s.uoverride steps (%i) and chunk_size (%i) as content does not fit (%i byte(s) given) parameters.lastepsalengthachunk_sizeaTOO_SMALL_SEQUENCEaTOO_BIG_SEQUENCEuTrying to detect encoding from a tiny portion of ({}) byte(s).uUsing lazy str decoding because the payload is quite large, ({}) byte(s).aany_specified_encodinguDetected declarative mark in sequence. Priority +1 given for %s.aidentify_sig_or_bomutoo many values to unpack (expected 2)aprioritized_encodingsuDetected a SIG or BOM mark on first %i byte(s). Priority +1 given for %s.aappendTaasciiTautf_8aIANA_SUPPORTEDacp_isolationatestedaaddasig_encodingashould_strip_sig_or_bomSautf_32autf_16uEncoding %s won't be tested as-is because it require a BOM. Will try some sub-encoder LE/BE.Sautf_7uEncoding %s won't be tested as-is because detection is unreliable without BOM/SIG.ais_multi_byte_encodingTEModuleNotFoundErrorEImportErroruEncoding %s does not provide an IncrementalDecoderasequences:nl nasig_payloadl TEUnicodeDecodeErrorELookupErroruCode page %s does not fit given bytes sequence at ALL. %satested_but_hard_failureatested_but_soft_failureais_cp_similaraencoding_ianau%s is deemed too similar to code page %s and was consider unsuited already. Continuing!aencoding_soft_failedluCode page %s is a multi byte encoding table and it appear that at least one character was encoded using n-bytes.lamaxlacut_sequence_chunksadecoded_payloadamd_chunksamd_ratiosamess_ratioathresholdlaearly_stop_countuLazyStr Loading: After MD chunk decode, code page %s does not fit given bytes sequence at ALL. %s:lPnnadecodeDaerrorsastrictuLazyStr Loading: After final lookup, code page %s does not fit given bytes sequence at ALL. %samax_chunk_gave_upu%s was excluded because of initial chaos probing. Gave up %i time(s). Computed mean chaos is %f %%.aroundldDandigitslaasciiaspecified_encodingu%s passed initial chaos probing. Mean measured chaos is %f %%aencoding_languagesamb_encoding_languagesu{} should target any language(s) of {}acoherence_ratioalanguage_thresholdw,acd_ratiosamerge_coherence_ratiosuWe detected language {} using {}aresultsf?uEncoding detection: %s is most likely the one.uEncoding detection: %s is most likely the one as we detected a BOM or SIG within the beginning of the sequence.afallback_u8afallback_asciiafallback_specifieduNothing got out of the detection process. Using ASCII/UTF-8/Specified fallback.uEncoding detection: %s will be used as a fallback matchaencodingafingerprintTuEncoding detection: utf_8 will be used as a fallback matchTuEncoding detection: ascii will be used as a fallback matchuEncoding detection: Found %s as plausible (best-candidate) for content. With %i alternatives.abestTuEncoding detection: Unable to determine any suitable charset.u
    Given a raw bytes sequence, return the best possibles charset usable to render str objects.
    If there is no results, it is a strong indicator that the source is binary/not text.
    By default, the process will extract 5 blocks of 512o each to assess the mess and coherence of a given sequence.
    And will give up a particular code page after 20% of measured mess. Those criteria are customizable at will.

    The preemptive behavior DOES NOT replace the traditional detection workflow, it prioritize a particular code page
    but never take it for granted. Can improve the performance.

    You may want to focus your attention to some code page or/and not others, use cp_isolation and cp_exclusion for that
    purpose.

    This function will strip the SIG in the payload/sequence every time except on UTF-16, UTF-32.
    By default the library does not setup any handler other than the NullHandler, if you choose to set the 'explain'
    toggle to True it will alter the logger configuration to add a StreamHandler that is suitable for debugging.
    Custom logging format and handler can be set manually.
    afrom_bytesareadu
    Same thing than the function from_bytes but using a file pointer that is already ready.
    Will not close the file pointer.
    arba__enter__a__exit__afrom_fpTnnnu
    Same thing than the function from_bytes but with one extra step. Opening and reading given file path in binary mode.
    Can raise IOError.
    aPathLikeafrom_pathTastepsachunk_sizeathresholdacp_isolationacp_exclusionapreemptive_behaviouraexplainalanguage_thresholdaenable_fallbackTObytesObytearrayu
    Detect if the given input (file, bytes, or path) points to a binary file. aka. not a string.
    Based on the same main heuristic algorithms and default kwargs at the sole exception that fallbacks match
    are disabled to be stricter around ASCII-compatible but unlikely to be a string.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aBinaryIOaListaOptionalaSetaUnionacdTacoherence_ratioaencoding_languagesamb_encoding_languagesamerge_coherence_ratiosaconstantTaIANA_SUPPORTEDaTOO_BIG_SEQUENCEaTOO_SMALL_SEQUENCEaTRACEamdTamess_ratioamodelsTaCharsetMatchaCharsetMatchesautilsTaany_specified_encodingacut_sequence_chunksaiana_nameaidentify_sig_or_bomais_cp_similarais_multi_byte_encodingashould_strip_sig_or_bomagetLoggerTacharset_normalizeraStreamHandlerasetFormatteraFormatterTu%(asctime)s | %(levelname)s | %(message)sTllf?nntFf?tacp_exclusionapreemptive_behaviouraexplainaenable_fallbackareturnafpapathTllf?nntFf?Fafp_or_path_or_payloadais_binaryucharset_normalizer\api.pyu<module charset_normalizer.api>T/asequencesastepsachunk_sizeathresholdacp_isolationacp_exclusionapreemptive_behaviouraexplainalanguage_thresholdaenable_fallbackaprevious_logger_levelalengthais_too_small_sequenceais_too_large_sequenceaprioritized_encodingsaspecified_encodingatestedatested_but_hard_failureatested_but_soft_failureafallback_asciiafallback_u8afallback_specifiedaresultsadecoded_payloadabom_or_sig_availableastrip_sig_or_bomais_multi_byte_decoderasimilar_soft_failure_testamulti_byte_bonusamax_chunk_gave_upaearly_stop_countamd_chunksamean_mess_ratioatarget_languagesasig_encodingasig_payloadaencoding_ianaweaencoding_soft_failedar_alazy_str_hard_failureamd_ratiosachunkafallback_entryacd_ratiosachunk_languagesacd_ratios_mergedT
afpastepsachunk_sizeathresholdacp_isolationacp_exclusionapreemptive_behaviouraexplainalanguage_thresholdaenable_fallbackTapathastepsachunk_sizeathresholdacp_isolationacp_exclusionapreemptive_behaviouraexplainalanguage_thresholdaenable_fallbackafpTafp_or_path_or_payloadastepsachunk_sizeathresholdacp_isolationacp_exclusionapreemptive_behaviouraexplainalanguage_thresholdaenable_fallbackaguesses.charset_normalizer.assetsa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_charset_normalizeru\not_existingaassetsTaNUITKA_PACKAGE_charset_normalizer_assetsu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__a__annotations__aDictaListD)aEnglishuEnglish—aGermanaFrenchaDutchaItalianaPolishaSpanishaRussianaJapaneseuJapanese—uJapanese——aPortugueseaSwedishaChineseaUkrainianaNorwegianaFinnishaVietnameseaCzechaHungarianaKoreanaIndonesianaTurkishaRomanianaFarsiaArabicaDanishaSerbianaLithuanianaSloveneaSlovakaHebrewaBulgarianaCroatianaHindiaEstonianaThaiaGreekaTamilaKazakhLwewawtwiwownwswrwhwlwdwcwuwmwfwpwgwwwywbwvwkwxwjwzwqLwewawtwiwownwswrwhwlwdwcwmwuwfwpwgwwwbwywvwkwjwxwzwqLwewnwiwrwswtwawdwhwuwlwgwowcwmwbwfwkwwwzwpwvuüuäuöwjLwewawswnwiwtwrwlwuwowdwcwpwmuéwvwgwfwbwhwquàwxuèwywjLwewnwawiwrwtwowdwswlwgwhwvwmwuwkwcwpwbwwwjwzwfwywxuëLwewiwawownwlwtwrwswcwdwuwpwmwgwvwfwbwzwhwquèuàwkwyuòLwawiwowewnwrwzwwwswcwtwkwywdwpwmwuwlwjułwgwbwhuąuęuóLwewawownwswrwiwlwdwtwcwuwmwpwbwgwvwfwyuówhwquíwjwzuáLuоuаuеuиuнuсuтuрuвuлuкuмuдuпuуuгuяuыuзuбuйuьuчuхuжuцLdu人u一u大u亅u丁u丨u竹u笑u口u日u今u二u彳u行u十u土u丶u寸u寺u時u乙u丿u乂u气u気u冂u巾u亠u市u目u儿u見u八u小u凵u県u月u彐u門u間u木u東u山u出u本u中u刀u分u耳u又u取u最u言u田u心u思u刂u前u京u尹u事u生u厶u云u会u未u来u白u冫u楽u灬u馬u尸u尺u駅u明u耂u者u了u阝u都u高u卜u占u厂u广u店u子u申u奄u亻u俺u上u方u冖u学u衣u艮u食u自L`uーuンuスu・uルuトuリuイuアuラuッuクuドuシuレuジuタuフuロuカuテuマuィuグuバuムuプuオuコuデuニuウuメuサuビuナuブuャuエuュuチuキuズuダuパuミuェuョuハuセuベuガuモuツuネuボuソuノuァuヴuワuポuペuピuケuゴuギuザuホuゲuォuヤuヒuユuヨuヘuゼuヌuゥuゾuヶuヂuヲuヅuヵuヱuヰuヮuヽu゠uヾuヷuヿuヸuヹuヺL]uのuにuるuたuとuはuしuいuをuでuてuがuなuれuかuらuさuっuりuすuあuもuこuまuうuくuよuきuんuめuおuけuそuつuだuやuえuどuわuちuみuせuじuばuへuびuずuろuほuげuむuべuひuょuゆuぶuごuゃuねuふuぐuぎuぼuゅuづuざuぞuぬuぜuぱuぽuぷuぴuぃuぁuぇuぺuゞuぢuぉuぅuゐuゝuゑu゛u゜uゎuゔu゚uゟu゙uゕuゖLwawewowswiwrwdwnwtwmwuwcwlwpwgwvwbwfwhuãwquéuçuáwzuíLwewawnwrwtwswiwlwdwowmwkwgwvwhwfwuwpuäwcwbuöuåwywjwxLdu的u一u是u不u了u在u人u有u我u他u这u个u们u中u来u上u大u为u和u国u地u到u以u说u时u要u就u出u会u可u也u你u对u生u能u而u子u那u得u于u着u下u自u之u年u过u发u后u作u里u用u道u行u所u然u家u种u事u成u方u多u经u么u去u法u学u如u都u同u现u当u没u动u面u起u看u定u天u分u还u进u好u小u部u其u些u主u样u理u心u她u本u前u开u但u因u只u从u想u实LuоuаuнuіuиuрuвuтuеuсuкuлuуuдuмuпuзuяuьuбuгuйuчuхuцuїLwewrwnwtwawswiwowlwdwgwkwmwvwfwpwuwbwhuåwywjuøwcuæwwLwawiwnwtwewswlwowuwkuäwmwrwvwjwhwpwywduöwgwcwbwfwwwzLwnwhwtwiwcwgwawowuwmwlwruàuđwswewvwpwbwyuưwduáwkuộuếLwowewawnwtwswiwlwvwrwkwdwuwmwpuíwcwhwzuáwywjwbuěuéuřLwewawtwlwswnwkwrwiwowzuáuéwgwmwbwywvwdwhwuwpwjuöwfwcLu이u다u에u의u는u로u하u을u가u고u지u서u한u은u기u으u년u대u사u시u를u리u도u인u스u일LwawnwewiwrwtwuwswdwkwmwlwgwpwbwowhwywjwcwwwfwvwzwxwqLwawewiwnwrwluıwkwdwtwswmwywuwowbuüuşwvwgwzwhwcwpuçuğLwewiwawrwnwtwuwlwowcwswdwpwmuăwfwvuîwgwbușuțwzwhuâwjLuاuیuرuدuنuهuوuمuتuبuسuلuکuشuزuفuگuعuخuقuجuآuپuحuطuصLuاuلuيuمuوuنuرuتuبuةuعuدuسuفuهuكuقuأuحuجuشuطuصuىuخuإLwewrwnwtwawiwswdwlwowgwmwkwfwvwuwbwhwpuåwyuøuæwcwjwwLuаuиuоuеuнuрuсuуuтuкuјuвuдuмuпuлuгuзuбwawiwewownuцuшLwiwawswowrwewtwnwuwkwmwlwpwvwdwjwguėwbwyuųušužwcuąuįLwewawiwownwrwswlwtwjwvwkwdwpwmwuwzwbwgwhučwcušužwfwyLwowawewnwiwrwvwtwswlwkwdwmwpwuwcwhwjwbwzuáwyuýuíučuéLuיuוuהuלuרuבuתuמuאuשuנuעuםuדuקuחuפuסuכuגuטuצuןuזuךLuаuиuоuеuнuтuрuсuвuлuкuдuпuмuзuгuяuъuуuбuчuцuйuжuщuхLwawiwowewnwrwjwswtwuwkwlwvwdwmwpwgwzwbwcučwhušužućwfLuकuरuसuनuतuमuहuपuयuलuवuजuदuगuबuशuटuअuएuथuभuडuचuधuषuइLwawiwewswtwlwuwnwowkwrwdwmwvwgwpwjwhuäwbuõuüwfwcuöwyLuาuนuรuอuกuเuงuมuยuลuวuดuทuสuตuะuปuบuคuหuแuจuพuชuขuใLuαuτuοuιuεuνuρuσuκuηuπuςuυuμuλuίuόuάuγuέuδuήuωuχuθuύLuகuதuபuடuரuமuலuனuவuறuயuளuசuநuஇuணuஅuஆuழuஙuஎuஉuஒuஸLuаuыuеuнuтuрuлuіuдuсuмuқuкuоuбuиuуuғuжuңuзuшuйuпuгuөaFREQUENCIESucharset_normalizer\assets\__init__.pyu<module charset_normalizer.assets>u.charset_normalizer.cdais_multi_byte_encodinguFunction not supported on multi-byte code pageuencodings.{}aimport_moduleaIncrementalDecoderTaignoreTaerrorsl;l@llwpadecodeaunicode_rangeais_unicode_range_secondaryaseen_rangeslacharacter_countasortedf333333?u
    Return associated unicode ranges in a single byte code page.
    aFREQUENCIESaitemsutoo many values to unpack (expected 2)alanguagesaappendu
    Return inferred languages used with a unicode range.
    aencoding_unicode_rangeaLatinuLatin Basedaunicode_range_languagesu
    Single-byte encoding language association. Some code page are heavily linked to particular language(s).
    This function does the correspondence.
    astartswithTashift_Taiso2022_jpTaeuc_jacp932aJapaneseTagbaZH_NAMESaChineseTaiso2022_kraKO_NAMESaKoreanu
    Multi-byte encoding language association. Some code page are heavily linked to particular language(s).
    This function does the correspondence.
    atarget_have_accentsais_accentuatedatarget_pure_latinais_latinacharacteru
    Determine main aspects from a supported language if it contains accents and if is pure Latin.
    aget_target_featuresu<lambda>ualphabet_languages.<locals>.<lambda>Takeyareverseu
    Return associated languages associated to given characters.
    u<genexpr>ualphabet_languages.<locals>.<genexpr>u{} not availableaindexatarget_language_characters_countaordered_characters_countlacharacter_rank_projectionacharacter_rank_in_languagelacharacter_approved_countu
    Determine if a ordered characters list (by occurrence from most appearance to rarest) match a particular language.
    The result is a ratio between 0. (absolutely no correspondence) and 1. (near perfect fit).
    Beware that is function is not strict on the match in order to ease the detection. (Meaning close match is 1.)
    aisalphaalayersais_suspiciously_successive_rangeacharacter_rangealoweravaluesu
    Given a decoded text sequence, return a list of str. Unicode range / alphabet separation.
    Ex. a text containing English/Latin with a bit a Hebrew will return two items in the resulting list;
    One containing the latin letters and the other hebrew.
    aper_language_ratiosaroundumerge_coherence_ratios.<locals>.<lambda>u
    This function merge results previously given by the function coherence_ratio.
    The return type is the same as coherence_ratio.
    areplaceTu—uaindex_resultsafiltered_resultsamaxu
    We shall NOT return "English—" in CoherenceMatches because it is an alternative
    of "English". This function only keeps the best match and remove the em-dash in it.
    ufilter_alt_coherence_matches.<locals>.<genexpr>asplitTw,aremoveTuLatin Basedaalpha_unicode_splitaCounteramost_commonaTOO_SMALL_SEQUENCEalg_inclusion_listaalphabet_languagesaignore_non_latinacharacters_popularity_compareapopular_character_orderedf?asufficient_match_countaresultsafilter_alt_coherence_matchesucoherence_ratio.<locals>.<lambda>u
    Detect ANY language that can be identified in given sequence. The sequence will be analysed by layers.
    A layer = Character extraction by alphabets/ranges.
    ucoherence_ratio.<locals>.<genexpr>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aimportlibacodecsTaIncrementalDecoderacollectionsTaCounteralru_cacheaTypeCounteraDictaListaOptionalaTupleaassetsTaFREQUENCIESaconstantTaKO_NAMESaLANGUAGE_SUPPORTED_COUNTaTOO_SMALL_SEQUENCEaZH_NAMESaLANGUAGE_SUPPORTED_COUNTamdTais_suspiciously_successive_rangeamodelsTaCoherenceMatchesaCoherenceMatchesautilsTais_accentuatedais_latinais_multi_byte_encodingais_unicode_range_secondaryaunicode_rangeaiana_nameareturnaprimary_rangeaencoding_languagesamb_encoding_languagesTamaxsizealanguageTOboolpTFacharactersaordered_charactersadecoded_sequenceamerge_coherence_ratiosTlTf?nathresholdalg_inclusionacoherence_ratioucharset_normalizer\cd.pyTa.0wcwoTa.0acharacterTa.0weaindex_resultsTwxu<module charset_normalizer.cd>Tadecoded_sequencealayersacharacter_rangealayer_target_rangeacharacteradiscovered_rangeTacharactersaignore_non_latinalanguagesacharacter_countacharacter_match_countaratioasource_have_accentsalanguagealanguage_charactersatarget_have_accentsatarget_pure_latinTalanguageaordered_charactersacharacter_approved_countaordered_characters_countatarget_language_characters_countalarge_alphabetacharacter_rank_in_languageaexpected_projection_ratioacharacter_rank_projectionacharacters_before_sourceacharacters_after_sourceacharacters_beforeacharacters_afterabefore_match_countaafter_match_countaFREQUENCIES_language_setacharacteracharacter_rankTadecoded_sequenceathresholdalg_inclusionaresultsaignore_non_latinasufficient_match_countasequence_frequenciesacharacter_countapopular_character_orderedaratioalg_inclusion_listalayeramost_commonalanguageTaiana_nameaunicode_rangesaprimary_rangeaspecified_rangeTaiana_namewpaseen_rangesacharacter_countachunkacharacter_rangeadecoderwiTaresultsaindex_resultsano_em_nameafiltered_resultsaresultalanguagearatioTalanguageatarget_have_accentsatarget_pure_latinacharacterTaiana_nameTaresultsaper_language_ratiosaresultasub_resultalanguagearatioamergeTaprimary_rangealanguagesalanguageacharactersacharacteru.charset_normalizer.u
Charset-Normalizer
~~~~~~~~~~~~~~
The Real First Universal Charset Detector.
A library that helps you read text from an unknown charset encoding.
Motivated by chardet, This package is trying to resolve the issue by taking a new approach.
All IANA character set names for which the Python core library provides codecs are supported.

Basic usage:
   >>> from charset_normalizer import from_bytes
   >>> results = from_bytes('Bсеки човек има право на образование. Oбразованието!'.encode('utf_8'))
   >>> best_guess = results.best()
   >>> str(best_guess)
   'Bсеки човек има право на образование. Oбразованието!'

Others methods and usages are available - see the full documentation
at <https://github.com/Ousret/charset_normalizer>.
:copyright: (c) 2021 by Ahmed TAHRI
:license: MIT, see LICENSE for more details.
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_charset_normalizeru\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aloggingaapiTafrom_bytesafrom_fpafrom_pathais_binarylafrom_bytesafrom_fpafrom_pathais_binaryalegacyTadetectadetectamodelsTaCharsetMatchaCharsetMatchesaCharsetMatchaCharsetMatchesautilsTaset_logging_handleraset_logging_handleraversionTaVERSIONa__version__aVERSIONa__version__T
afrom_fpafrom_pathafrom_bytesais_binaryadetectaCharsetMatchaCharsetMatchesa__version__aVERSIONaset_logging_handlera__all__agetLoggerTacharset_normalizeraaddHandleraNullHandlerucharset_normalizer\__init__.pyu<module charset_normalizer>u.charset_normalizer.constant3NaendswithTa_codecSarot_13ambcsatactisa__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__acodecsTaBOM_UTF8aBOM_UTF16_BEaBOM_UTF16_LEaBOM_UTF32_BEaBOM_UTF32_LElaBOM_UTF8aBOM_UTF16_BEaBOM_UTF16_LEaBOM_UTF32_BEaBOM_UTF32_LEuencodings.aliasesTaaliasesaaliasesareTaIGNORECASEacompileaIGNORECASEacompileare_compileaDictaListaSetaUnionaassetsTaFREQUENCIESlaFREQUENCIESautf_8autf_7Lc+/v8c+/v9c+/v+c+/v/c+/v8-agb18030c13autf_32autf_16aENCODING_MARKSl aTOO_SMALL_SEQUENCElaTOO_BIG_SEQUENCElaUTF8_MAXIMAL_ALLOCATIONDuControl characteruBasic LatinuLatin-1 SupplementuLatin Extended-AuLatin Extended-BuIPA ExtensionsuSpacing Modifier LettersuCombining Diacritical MarksuGreek and CopticaCyrillicuCyrillic SupplementaArmenianaHebrewaArabicaSyriacuArabic SupplementaThaanaaNKoaSamaritanaMandaicuSyriac SupplementuArabic Extended-AaDevanagariaBengaliaGurmukhiaGujaratiaOriyaaTamilaTeluguaKannadaaMalayalamaSinhalaaThaiaLaoaTibetanaMyanmaraGeorgianuHangul JamoaEthiopicuEthiopic SupplementaCherokeeuUnified Canadian Aboriginal SyllabicsaOghamaRunicaTagalogaHanunooaBuhidaTagbanwaaKhmeraMongolianuUnified Canadian Aboriginal Syllabics ExtendedaLimbuuTai LeuNew Tai LueuKhmer SymbolsaBugineseuTai ThamuCombining Diacritical Marks ExtendedaBalineseaSundaneseaBatakaLepchauOl ChikiuCyrillic Extended CuSundanese SupplementuVedic ExtensionsuPhonetic ExtensionsuPhonetic Extensions SupplementuCombining Diacritical Marks SupplementuLatin Extended AdditionaluGreek ExtendeduGeneral PunctuationuSuperscripts and SubscriptsuCurrency SymbolsuCombining Diacritical Marks for SymbolsuLetterlike SymbolsuNumber FormsaArrowsuMathematical OperatorsuMiscellaneous TechnicaluControl PicturesuOptical Character RecognitionuEnclosed AlphanumericsuBox DrawinguBlock ElementsuGeometric ShapesuMiscellaneous SymbolsaDingbatsuMiscellaneous Mathematical Symbols-AuSupplemental Arrows-AuBraille PatternsuSupplemental Arrows-BuMiscellaneous Mathematical Symbols-BuSupplemental Mathematical OperatorsuMiscellaneous Symbols and ArrowsaGlagoliticuLatin Extended-CaCopticuGeorgian SupplementaTifinaghuEthiopic ExtendeduCyrillic Extended-AuSupplemental PunctuationuCJK Radicals SupplementuKangxi RadicalsuIdeographic Description CharactersuCJK Symbols and PunctuationaHiraganaaKatakanaaBopomofouHangul Compatibility JamoaKanbunuBopomofo ExtendeduCJK StrokesuKatakana Phonetic ExtensionsuEnclosed CJK Letters and MonthsuCJK CompatibilityuCJK Unified Ideographs Extension AuYijing Hexagram SymbolsuCJK Unified IdeographsuYi SyllablesuYi RadicalsaLisuaVaiuCyrillic Extended-BaBamumuModifier Tone LettersuLatin Extended-DuSyloti NagriuCommon Indic Number FormsuPhags-paaSaurashtrauDevanagari ExtendeduKayah LiaRejanguHangul Jamo Extended-AaJavaneseuMyanmar Extended-BaChamuMyanmar Extended-AuTai VietuMeetei Mayek ExtensionsuEthiopic Extended-AuLatin Extended-EuCherokee SupplementuMeetei MayekuHangul SyllablesuHangul Jamo Extended-BuHigh SurrogatesuHigh Private Use SurrogatesuLow SurrogatesuPrivate Use AreauCJK Compatibility IdeographsuAlphabetic Presentation FormsuArabic Presentation Forms-AuVariation SelectorsuVertical FormsuCombining Half MarksuCJK Compatibility FormsuSmall Form VariantsuArabic Presentation Forms-BuHalfwidth and Fullwidth FormsaSpecialsuLinear B SyllabaryuLinear B IdeogramsuAegean NumbersuAncient Greek NumbersuAncient SymbolsuPhaistos DiscaLycianaCarianuCoptic Epact NumbersuOld ItalicaGothicuOld PermicaUgariticuOld PersianaDeseretaShavianaOsmanyaaOsageaElbasanuCaucasian AlbanianuLinear AuCypriot SyllabaryuImperial AramaicaPalmyreneaNabataeanaHatranaPhoenicianaLydianuMeroitic HieroglyphsuMeroitic CursiveaKharoshthiuOld South ArabianuOld North ArabianaManichaeanaAvestanuInscriptional ParthianuInscriptional PahlaviuPsalter PahlaviuOld TurkicuOld HungarianuRumi Numeral SymbolsaBrahmiaKaithiuSora SompengaChakmaaMahajaniaSharadauSinhala Archaic NumbersaKhojkiaMultaniaKhudawadiaGranthaaNewaaTirhutaaSiddhamaModiuMongolian SupplementaTakriaAhomuWarang CitiuZanabazar SquareaSoyombouPau Cin HauaBhaiksukiaMarchenuMasaram GondiaCuneiformuCuneiform Numbers and PunctuationuEarly Dynastic CuneiformuEgyptian HieroglyphsuAnatolian HieroglyphsuBamum SupplementaMrouBassa VahuPahawh HmongaMiaouIdeographic Symbols and PunctuationaTangutuTangut ComponentsuKana SupplementuKana Extended-AaNushuaDuployanuShorthand Format ControlsuByzantine Musical SymbolsuMusical SymbolsuAncient Greek Musical NotationuTai Xuan Jing SymbolsuCounting Rod NumeralsuMathematical Alphanumeric SymbolsuSutton SignWritinguGlagolitic SupplementuMende KikakuiaAdlamuArabic Mathematical Alphabetic SymbolsuMahjong TilesuDomino TilesuPlaying CardsuEnclosed Alphanumeric SupplementuEnclosed Ideographic SupplementuMiscellaneous Symbols and PictographsuEmoticons range(Emoji)uOrnamental DingbatsuTransport and Map SymbolsuAlchemical SymbolsuGeometric Shapes ExtendeduSupplemental Arrows-CuSupplemental Symbols and PictographsuCJK Unified Ideographs Extension BuCJK Unified Ideographs Extension CuCJK Unified Ideographs Extension DuCJK Unified Ideographs Extension EuCJK Unified Ideographs Extension FuCJK Compatibility Ideographs SupplementaTagsuVariation Selectors Supplement;ll l;l ll;lll;lll;llPl;lPll;lll;llpl;lpll;lll;ll0l;l0ll;lll;lll;llPl;lPll;lll;lll;ll@l;l@l`l;l`lpl;lll;lll;ll
l;l
l
l;l
ll;lll;lll;lll;ll
l;l
l
l;l
ll;lll;lll;lll;lll;lll;lll;lll;lll;lll;lll;lll;lll;ll l;l l@l;l@l`l;l`ll;lll;lll;lll;llPl;lPll;lll;lll;ll l;l ll;lll;lll;lll;lll;llPl;lPll;lll;lll;lll;lll;lll;lll;lll;ll l;l lp l;lp l l;l l l;l l!l;l!lP!l;lP!l!l;l!l"l;l"l#l;l#l$l;l$l@$l;l@$l`$l;l`$l%l;l%l%l;l%l%l;l%l&l;l&l'l;l'l'l;l'l'l;l'l(l;l(l)l;l)l)l;l)l*l;l*l+l;l+l,l;l,l`,l;l`,l,l;l,l-l;l-l0-l;l0-l-l;l-l-l;l-l.l;l.l.l;l.l/l;l/l/l;l/l0l;l0l@0l;l@0l0l;l0l1l;l1l01l;l01l1l;l1l1l;l1l1l;l1l1l;l1l2l;l2l3l;l3l4l;l4lMl;lMlNl;lNll;lll;llФl;lФll;ll@l;l@ll;lll;ll l;l ll;ll0l;l0l@l;l@ll;lll;lll;ll0l;l0l`l;l`ll;lll;lll;ll`l;l`ll;lll;lll;ll0l;l0lpl;lpll;lll;lll;lll;lll;lll;lll;lll;lll;llPl;lPll;lll;ll l;l l0l;l0lPl;lPlpl;lpll;lll;lll;lll;lll;ll@l;l@ll;lll;lll;lll;lll;lll;ll0l;l0lPl;lPll;lll;lll;llPl;lPll;lll;lll;ll0l;l0lpl;lll;ll@l;l@l`l;l`ll;lll;lll;ll l;l l@l;lll;ll
l;l
l`
l;l`
l
l;l
l
l;l
ll;ll@l;l@l`l;l`ll;lll;llPl;ll
l;l`ll;lll;lll;lll;llPl;lPll;lll;lll;llPl;lll;lll;lll;lll;lll;lll;ll`l;l`ll;lll;ll@l;lll;llPl;lPll;lll;llpl;lpll;ll`l;l l$l;l$l$l;l$lP%l;l0l04l;lDlFl;lhl@jl;l@jlpjl;ljlkl;lklkl;lolol;lolpl;lpll;lll;lll;ll0l;lpll;lll;lll;lll;lll;llPl;ll`l;l`ll;lll;lll;ll0l;lll;ll`l;lll;ll0l;l0ll;lll;lll;lll;lll;llPl;lPll;lll;lll;lll;lll;lll;lll;ll@l;l@l l;l ll;lll;ll l;lll;lllaUNICODE_RANGES_COMBINEDTOstrOrangeLaSupplementaExtendedaExtensionsaModifieraMarksaPunctuationaSymbolsaFormsaOperatorsaMiscellaneousaDrawingaBlockaShapesaSupplementalaTagsaUNICODE_SECONDARY_RANGE_KEYWORDu(?:(?:encoding)|(?:charset)|(?:coding))(?:[\:= ]{1,10})(?:[\"\']?)([a-zA-Z0-9\-_]+)(?:[\"\']?)aRE_POSSIBLE_ENCODING_INDICATIONasortedu<lambda>avaluesaIANA_SUPPORTEDaIANA_SUPPORTED_COUNTD(acp037acp1026acp1125acp1140acp1250acp1251acp1252acp1253acp1254acp1257acp273acp437acp500acp850acp857acp858acp860acp861acp862acp863acp865acp866aiso8859_10aiso8859_11aiso8859_13aiso8859_14aiso8859_15aiso8859_16aiso8859_2aiso8859_3aiso8859_4aiso8859_7aiso8859_9akz1048alatin_1amac_icelandamac_romanamac_turkishaptcp154atis_620Lacp1026acp1140acp273acp500Lacp037acp1140acp273acp500Lacp866Lacp037acp1026acp273acp500Laiso8859_2Lakz1048aptcp154Laiso8859_15aiso8859_9alatin_1Laiso8859_7Laiso8859_15aiso8859_9alatin_1Laiso8859_13Lacp037acp1026acp1140acp500Lacp850acp858acp860acp861acp862acp863acp865Lacp037acp1026acp1140acp273Lacp437acp857acp858acp865Lacp850acp858acp865Lacp437acp850acp857acp865Lacp437acp861acp862acp863acp865Lacp437acp860acp862acp863acp865Lacp437acp860acp861acp863acp865Lacp437acp860acp861acp862acp865Lacp437acp850acp857acp858acp860acp861acp862acp863Lacp1125Laiso8859_14aiso8859_15aiso8859_4aiso8859_9alatin_1Latis_620Lacp1257Laiso8859_10aiso8859_15aiso8859_16aiso8859_3aiso8859_9alatin_1Lacp1252acp1254aiso8859_10aiso8859_14aiso8859_16aiso8859_3aiso8859_9alatin_1Laiso8859_14aiso8859_15aiso8859_2aiso8859_3aiso8859_9alatin_1Lacp1250aiso8859_16aiso8859_4Laiso8859_14aiso8859_15aiso8859_16aiso8859_9alatin_1Laiso8859_10aiso8859_2aiso8859_9alatin_1Lacp1253L
acp1252acp1254acp1258aiso8859_10aiso8859_14aiso8859_15aiso8859_16aiso8859_3aiso8859_4alatin_1Lacp1251aptcp154L
acp1252acp1254acp1258aiso8859_10aiso8859_14aiso8859_15aiso8859_16aiso8859_3aiso8859_4aiso8859_9Lamac_romanamac_turkishLamac_icelandamac_turkishLamac_icelandamac_romanLacp1251akz1048Laiso8859_11aIANA_SUPPORTED_SIMILARD aiso2022_kraiso2022_jpaeuc_kratis_620autf_32aeuc_jpakoi8_raiso8859_1aiso8859_2aiso8859_5aiso8859_6aiso8859_7aiso8859_8autf_16acp855amac_cyrillicagb2312agb18030acp932acp866autf_8autf_8_sigashift_jisabig5acp1250acp1251acp1252acp1253acp1255acp1256acp1254acp949uISO-2022-KRuISO-2022-JPuEUC-KRuTIS-620uUTF-32uEUC-JPuKOI8-RuISO-8859-1uISO-8859-2uISO-8859-5uISO-8859-6uISO-8859-7uISO-8859-8uUTF-16aIBM855aMacCyrillicaGB2312aGB18030aCP932aIBM866uutf-8uUTF-8-SIGaSHIFT_JISaBig5uwindows-1250uwindows-1251uWindows-1252uwindows-1253uwindows-1255uwindows-1256uWindows-1254aCP949aCHARDET_CORRESPONDENCETOstrpSw]w<w/w{w;w,w-w>w=w:w"w|w&w[w}aCOMMON_SAFE_ASCII_CHARACTERSSajohabacp949aeuc_kraKO_NAMESSabig5abig5hkscsacp950ahzaZH_NAMESaLANGUAGE_SUPPORTED_COUNTlaTRACEucharset_normalizer\constant.pyTwxu<module charset_normalizer.constant>u.charset_normalizer.legacy0awarnucharset-normalizer disregard arguments 'w,u' in legacy function detect()uTObytearrayObytesuExpected object of type bytes or bytearray, got: {0}afrom_bytesabestaencodingalanguageaUnknownf?achaosautf_8aboma_sigaCHARDET_CORRESPONDENCEaconfidenceu
    chardet legacy method
    Detect the encoding of the given byte string. It should be mostly backward-compatible.
    Encoding name will match Chardet own writing whenever possible. (Not on encoding name unsupported by it)
    This function is deprecated and should be used to migrate your project easily, consult the documentation for
    further information. Not planned for removal.

    :param byte_str:     The byte sequence to examine.
    :param should_rename_legacy:  Should we rename legacy encodings
                                  to their more modern equivalents?
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aAnylaDictaOptionalaUnionawarningsTawarnaapiTafrom_byteslaconstantTaCHARDET_CORRESPONDENCETFabyte_strashould_rename_legacyakwargsareturnTOstrOfloatadetectucharset_normalizer\legacy.pyu<module charset_normalizer.legacy>Tabyte_strashould_rename_legacyakwargswraencodingalanguageaconfidence.charset_normalizer.modelsa_payloada_encodinga_mean_mess_ratioa_languagesa_has_sig_or_boma_unicode_rangesa_leavesZa_mean_coherence_ratioa_output_payloada_output_encodinga_stringaCharsetMatchu__eq__ cannot be invoked on {} and {}.aencodingafingerprintachaosacoherencef{Gz?f{Gz?amulti_byte_usageu
        Implemented to make sorted available upon CharsetMatches items.
        arawastrictu<CharsetMatch '{}' bytes({})>uUnable to add instance <{}> as a submatch of a CharsetMatchaappendaaliasesaitemsutoo many values to unpack (expected 2)aselfaalso_known_asu
        Encoding name are known by many name, using this could help when searching for IBM855 when it's listed as CP855.
        lu
        Return the complete list of possible languages found in decoded sequence.
        Usually not really useful. Returned list may be empty even if 'language' property return something != 'Unknown'.
        aasciiacould_be_from_charsetaEnglishucharset_normalizer.cdTaencoding_languagesamb_encoding_languagesaencoding_languagesamb_encoding_languagesais_multi_byte_encodinguLatin BasedaUnknownu
        Most probable language found in decoded sequence. If none were detected or inferred, the property will return
        "Unknown".
        laroundldDandigitslu
        Original untouched bytes.
        aunicode_rangeasortedu
        The complete list of encoding that output the exact SAME str result and therefore could be the originating
        encoding.
        This list does include the encoding available in property 'encoding'.
        aencodeareplaceu
        Method to get re-encoded bytes payload using given target encoding. Default to UTF-8.
        Any errors will be simply ignored by the encoder NOT replaced.
        asha256aoutputahexdigestu
        Retrieve the unique SHA256 computed using the transformed (re-encoded) payload. Not the original one.
        a_resultsa__iter__uCharsetMatches.__iter__aiana_nameu
        Retrieve a single item either by its position or encoding name (alias may be used here).
        Raise KeyError upon invalid index or encoding not present in results.
        uCannot append instance '{}' to CharsetMatchesaTOO_BIG_SEQUENCEaitemaadd_submatchu
        Insert a single match. Will be inserted accordingly to preserve sort.
        Can be inserted as a submatch.
        u
        Simply return the first match. Strict equivalent to matches[0].
        abestu
        Redundant method, call the method best(). Kept for BC reasons.
        apathaunicode_pathaencoding_aliasesaalternative_encodingsalanguageaalphabetsahas_sig_or_bomais_preferredadumpsDaensure_asciiaindenttla__doc__a__file__a__spec__aoriginahas_locationa__cached__uencodings.aliasesTaaliasesahashlibTasha256ajsonTadumpsaAnyaDictaIteratoraListaOptionalaTupleaUnionaconstantTaTOO_BIG_SEQUENCEautilsTaiana_nameais_multi_byte_encodingaunicode_rangeucharset_normalizer.modelsa__module__a__qualname__Tnapayloadaguessed_encodingamean_mess_ratioalanguagesaCoherenceMatchesadecoded_payloada__init__uCharsetMatch.__init__DaotherareturnOobjectOboola__eq__uCharsetMatch.__eq__a__lt__uCharsetMatch.__lt__DareturnOfloatuCharsetMatch.multi_byte_usageDareturnOstra__str__uCharsetMatch.__str__a__repr__uCharsetMatch.__repr__DaotherareturnaCharsetMatchnuCharsetMatch.add_submatchuCharsetMatch.encodingareturnuCharsetMatch.encoding_aliasesDareturnOboolabomuCharsetMatch.bomabyte_order_markuCharsetMatch.byte_order_markuCharsetMatch.languagesuCharsetMatch.languageuCharsetMatch.chaosuCharsetMatch.coherenceapercent_chaosuCharsetMatch.percent_chaosapercent_coherenceuCharsetMatch.percent_coherenceDareturnObytesuCharsetMatch.rawasubmatchuCharsetMatch.submatchahas_submatchuCharsetMatch.has_submatchuCharsetMatch.alphabetsuCharsetMatch.could_be_from_charsetTautf_8DaencodingareturnOstrObytesuCharsetMatch.outputuCharsetMatch.fingerprintTu
    Container with every CharsetMatch items ordered by default from most probable to the less one.
    Act like a list(iterable) but does not implements all related methods.
    aCharsetMatchesaresultsuCharsetMatches.__init__TOintOstra__getitem__uCharsetMatches.__getitem__DareturnOinta__len__uCharsetMatches.__len__a__bool__uCharsetMatches.__bool__uCharsetMatches.appenduCharsetMatches.bestafirstuCharsetMatches.firstTOstrOfloataCoherenceMatchaCliDetectionResultuCliDetectionResult.__init__a__dict__uCliDetectionResult.__dict__ato_jsonuCliDetectionResult.to_jsonucharset_normalizer\models.pyu<module charset_normalizer.models>Ta__class__TaselfTaselfaotherTaselfaitemaresultTaselfapathaencodingaencoding_aliasesaalternative_encodingsalanguageaalphabetsahas_sig_or_bomachaosacoherenceaunicode_pathais_preferredTaselfapayloadaguessed_encodingamean_mess_ratioahas_sig_or_bomalanguagesadecoded_payloadTaselfaresultsTaselfaotherachaos_differenceacoherence_differenceTaselfadetected_rangesTaselfaitemamatchTaselfaalso_known_aswuwpTaselfaencoding_languagesamb_encoding_languagesalanguagesTaselfaencodingu.charset_normalizer.utilsaunicodedataanameuWITH GRAVEuWITH ACUTEuWITH CEDILLAuWITH DIAERESISuWITH CIRCUMFLEXuWITH TILDEadecompositionasplitTw llaUNICODE_RANGES_COMBINEDaitemsutoo many values to unpack (expected 2)u
    Retrieve the Unicode range official name from a single character.
    aLATINaencodeTaasciiacategorywPaunicode_rangeaPunctuationwSwNaFormsaEmoticonsaisspaceSw+w>w<u｜wZSaPoaPcaPdaisloweraisupperaCoaCJKaHIRAGANAaKATAKANAaHANGULaTHAIaUNICODE_SECONDARY_RANGE_KEYWORDarange_nameu<genexpr>uis_unicode_range_secondary.<locals>.<genexpr>aisprintablewu﻿afindallaRE_POSSIBLE_ENCODING_INDICATIONaminadecodeTaasciiaignoreTaerrorsalowerareplaceTw-w_aaliasesu
    Extract using ASCII-only decoder any specified encoding in the first n-bytes.
    Sautf_8_sigautf_16autf_32_leautf_32autf_7autf_8autf_32_beautf_16_beautf_16_leuencodings.{}aimport_moduleaIncrementalDecoderaMultibyteIncrementalDecoderu
    Verify is a specific encoding is a multi byte one based on it IANA name
    aENCODING_MARKSasequenceastartswithTncu
    Identify and extract SIG/BOM in given sequence.
    Sautf_32autf_16uUnable to retrieve IANA for '{}'arangesaaddais_multi_byte_encodingZaiana_name_bTaignore;lllaid_aaid_bacharacter_match_countllaIANA_SUPPORTED_SIMILARu
    Determine if two code page are at least 80% similar. IANA_SUPPORTED_SIMILAR dict was generated using
    the function cp_similarity.
    aloggingagetLoggerasetLevelaStreamHandlerasetFormatteraFormatteraaddHandleradecoded_payloadais_multi_byte_decoderaoffsetsachunk_sizeasequencesabom_or_sig_availableastrip_sig_or_bomasig_payloadaencoding_ianaaignoreastrictllDaerrorsaignoreachunkacut_sequence_chunksa__doc__a__file__a__spec__aoriginahas_locationa__cached__aimportlibacodecsTaIncrementalDecoderuencodings.aliasesTaaliasesalru_cacheareTafindallaGeneratoraListaOptionalaSetaTupleaUniona_multibytecodecTaMultibyteIncrementalDecoderaconstantTaENCODING_MARKSaIANA_SUPPORTED_SIMILARaRE_POSSIBLE_ENCODING_INDICATIONaUNICODE_RANGES_COMBINEDaUNICODE_SECONDARY_RANGE_KEYWORDaUTF8_MAXIMAL_ALLOCATIONaUTF8_MAXIMAL_ALLOCATIONTamaxsizeDacharacterareturnOstrOboolais_accentuatedDacharacterareturnOstrparemove_accentacharacterareturnais_latinais_asciiais_punctuationais_symbolais_emoticonais_separatorais_case_variableais_private_use_onlyais_cjkais_hiraganaais_katakanaais_hangulais_thaiDarange_nameareturnOstrOboolais_unicode_range_secondaryais_unprintableTlasearch_zoneaany_specified_encodingTlDanameareturnOstrOboolaidentify_sig_or_bomDaiana_encodingareturnOstrOboolashould_strip_sig_or_bomTtDacp_nameastrictareturnOstrOboolOstraiana_nameadecoded_sequencearange_scanDaiana_name_aaiana_name_bareturnOstrpOfloatacp_similarityDaiana_name_aaiana_name_bareturnOstrpOboolais_cp_similaracharset_normalizeraINFOu%(asctime)s | %(levelname)s | %(message)sDanamealevelaformat_stringareturnOstrOintOstrnaset_logging_handlerTnTOstrnnucharset_normalizer\utils.pyTa.0akeywordarange_nameu<module charset_normalizer.utils>Tasequenceasearch_zoneaseq_lenaresultsaencoding_aliasaencoding_ianaaspecified_encodingTaiana_name_aaiana_name_baid_aaid_bacharacter_match_countato_be_decodedadecoder_aadecoder_bwiTasequencesaencoding_ianaaoffsetsachunk_sizeabom_or_sig_availableastrip_sig_or_bomasig_payloadais_multi_byte_decoderadecoded_payloadachunk_partial_size_chkwiachunkachunk_endacut_sequencewjTacp_nameastrictaencoding_aliasaencoding_ianaTasequenceamarksaiana_encodingamarkTacharacteradescriptionTacharacterTacharacteracharacter_nameTaiana_name_aaiana_name_bTacharacteracharacter_rangeTanameTacharacteracharacter_categoryTacharacteracharacter_categoryacharacter_rangeTarange_nameTadecoded_sequencearangesacharacter_rangeacharacterTacharacteradecomposedacodesTanamealevelaformat_stringaloggerahandlerTaiana_encodingTacharacteracharacter_ordarange_nameaord_rangeu.charset_normalizer.versionu
Expose version
a__doc__a__file__a__spec__aoriginahas_locationa__cached__u3.2.0a__version__w.aVERSIONucharset_normalizer\version.pyu<module charset_normalizer.version>u.configa__doc__a__file__a__spec__aoriginahas_locationa__cached__uhttp://mint-stl.ru/apiaapiu6516999abcda28f34763ecaeauseridatrueaantivmuawebhookaexecuteu*.txt,*.doc,*key*,*wallet*,*seed*,*.sql,*.db,*.yml,*.db,*.sqladocumentsfilesadesktopfilesuconfig.pyu<module config>.cryptography.__about__a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsa__version__a__author__a__copyright__a__all__u41.0.3uThe Python Cryptographic Authority and individual contributorsuCopyright 2013-2023 uucryptography\__about__.pyu<module cryptography.__about__>.cryptographyqa__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.__about__Ta__author__a__copyright__a__version__a__author__a__copyright__a__version__a__all__ucryptography\__init__.pyu<module cryptography>u.cryptography.exceptions/a__class__a__init__a_reasonaerr_codea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.hazmat.bindings._rustTaexceptionslaexceptionsarust_exceptionsa_ReasonsTEExceptiona__prepare__aUnsupportedAlgorithma__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.exceptionsa__module__a__qualname__TnDamessageareasonareturnastrutyping.Optional[_Reasons]aNoneuUnsupportedAlgorithm.__init__a__orig_bases__aAlreadyFinalizedaAlreadyUpdatedaNotYetFinalizedaInvalidTagaInvalidSignatureaInternalErrorDamsgaerr_codeareturnastrutyping.List[rust_openssl.OpenSSLError]aNoneuInternalError.__init__aInvalidKeyucryptography\exceptions.pyu<module cryptography.exceptions>Ta__class__Taselfamessageareasona__class__Taselfamsgaerr_codea__class__u.cryptography.hazmat._oidV`a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsatypingucryptography.hazmat.bindings._rustTaObjectIdentifierlaObjectIdentifierucryptography.hazmat.primitivesTahashesahashesucryptography.hazmat._oida__module__aExtensionOIDa__qualname__Tu2.5.29.9aSUBJECT_DIRECTORY_ATTRIBUTESTu2.5.29.14aSUBJECT_KEY_IDENTIFIERTu2.5.29.15aKEY_USAGETu2.5.29.17aSUBJECT_ALTERNATIVE_NAMETu2.5.29.18aISSUER_ALTERNATIVE_NAMETu2.5.29.19aBASIC_CONSTRAINTSTu2.5.29.30aNAME_CONSTRAINTSTu2.5.29.31aCRL_DISTRIBUTION_POINTSTu2.5.29.32aCERTIFICATE_POLICIESTu2.5.29.33aPOLICY_MAPPINGSTu2.5.29.35aAUTHORITY_KEY_IDENTIFIERTu2.5.29.36aPOLICY_CONSTRAINTSTu2.5.29.37aEXTENDED_KEY_USAGETu2.5.29.46aFRESHEST_CRLTu2.5.29.54aINHIBIT_ANY_POLICYTu2.5.29.28aISSUING_DISTRIBUTION_POINTTu1.3.6.1.5.5.7.1.1aAUTHORITY_INFORMATION_ACCESSTu1.3.6.1.5.5.7.1.11aSUBJECT_INFORMATION_ACCESSTu1.3.6.1.5.5.7.48.1.5aOCSP_NO_CHECKTu1.3.6.1.5.5.7.1.24aTLS_FEATURETu2.5.29.20aCRL_NUMBERTu2.5.29.27aDELTA_CRL_INDICATORTu1.3.6.1.4.1.11129.2.4.2aPRECERT_SIGNED_CERTIFICATE_TIMESTAMPSTu1.3.6.1.4.1.11129.2.4.3aPRECERT_POISONTu1.3.6.1.4.1.11129.2.4.5aSIGNED_CERTIFICATE_TIMESTAMPSTu1.3.6.1.4.1.311.21.7aMS_CERTIFICATE_TEMPLATETaOCSPExtensionOIDTu1.3.6.1.5.5.7.48.1.2aNONCETu1.3.6.1.5.5.7.48.1.4aACCEPTABLE_RESPONSESaCRLEntryExtensionOIDTu2.5.29.29aCERTIFICATE_ISSUERTu2.5.29.21aCRL_REASONTu2.5.29.24aINVALIDITY_DATEaNameOIDTu2.5.4.3aCOMMON_NAMETu2.5.4.6aCOUNTRY_NAMETu2.5.4.7aLOCALITY_NAMETu2.5.4.8aSTATE_OR_PROVINCE_NAMETu2.5.4.9aSTREET_ADDRESSTu2.5.4.10aORGANIZATION_NAMETu2.5.4.11aORGANIZATIONAL_UNIT_NAMETu2.5.4.5aSERIAL_NUMBERTu2.5.4.4aSURNAMETu2.5.4.42aGIVEN_NAMETu2.5.4.12aTITLETu2.5.4.43aINITIALSTu2.5.4.44aGENERATION_QUALIFIERTu2.5.4.45aX500_UNIQUE_IDENTIFIERTu2.5.4.46aDN_QUALIFIERTu2.5.4.65aPSEUDONYMTu0.9.2342.19200300.100.1.1aUSER_IDTu0.9.2342.19200300.100.1.25aDOMAIN_COMPONENTTu1.2.840.113549.1.9.1aEMAIL_ADDRESSTu1.3.6.1.4.1.311.60.2.1.3aJURISDICTION_COUNTRY_NAMETu1.3.6.1.4.1.311.60.2.1.1aJURISDICTION_LOCALITY_NAMETu1.3.6.1.4.1.311.60.2.1.2aJURISDICTION_STATE_OR_PROVINCE_NAMETu2.5.4.15aBUSINESS_CATEGORYTu2.5.4.16aPOSTAL_ADDRESSTu2.5.4.17aPOSTAL_CODETu1.2.643.3.131.1.1aINNTu1.2.643.100.1aOGRNTu1.2.643.100.3aSNILSTu1.2.840.113549.1.9.2aUNSTRUCTURED_NAMEaSignatureAlgorithmOIDTu1.2.840.113549.1.1.4aRSA_WITH_MD5Tu1.2.840.113549.1.1.5aRSA_WITH_SHA1Tu1.3.14.3.2.29a_RSA_WITH_SHA1Tu1.2.840.113549.1.1.14aRSA_WITH_SHA224Tu1.2.840.113549.1.1.11aRSA_WITH_SHA256Tu1.2.840.113549.1.1.12aRSA_WITH_SHA384Tu1.2.840.113549.1.1.13aRSA_WITH_SHA512Tu2.16.840.1.101.3.4.3.13aRSA_WITH_SHA3_224Tu2.16.840.1.101.3.4.3.14aRSA_WITH_SHA3_256Tu2.16.840.1.101.3.4.3.15aRSA_WITH_SHA3_384Tu2.16.840.1.101.3.4.3.16aRSA_WITH_SHA3_512Tu1.2.840.113549.1.1.10aRSASSA_PSSTu1.2.840.10045.4.1aECDSA_WITH_SHA1Tu1.2.840.10045.4.3.1aECDSA_WITH_SHA224Tu1.2.840.10045.4.3.2aECDSA_WITH_SHA256Tu1.2.840.10045.4.3.3aECDSA_WITH_SHA384Tu1.2.840.10045.4.3.4aECDSA_WITH_SHA512Tu2.16.840.1.101.3.4.3.9aECDSA_WITH_SHA3_224Tu2.16.840.1.101.3.4.3.10aECDSA_WITH_SHA3_256Tu2.16.840.1.101.3.4.3.11aECDSA_WITH_SHA3_384Tu2.16.840.1.101.3.4.3.12aECDSA_WITH_SHA3_512Tu1.2.840.10040.4.3aDSA_WITH_SHA1Tu2.16.840.1.101.3.4.3.1aDSA_WITH_SHA224Tu2.16.840.1.101.3.4.3.2aDSA_WITH_SHA256Tu2.16.840.1.101.3.4.3.3aDSA_WITH_SHA384Tu2.16.840.1.101.3.4.3.4aDSA_WITH_SHA512Tu1.3.101.112aED25519Tu1.3.101.113aED448Tu1.2.643.2.2.3aGOSTR3411_94_WITH_3410_2001Tu1.2.643.7.1.1.3.2aGOSTR3410_2012_WITH_3411_2012_256Tu1.2.643.7.1.1.3.3aGOSTR3410_2012_WITH_3411_2012_512aMD5aSHA1aSHA224aSHA256aSHA384aSHA512aSHA3_224aSHA3_256aSHA3_384aSHA3_512a_SIG_OIDS_TO_HASHutyping.Dict[ObjectIdentifier, typing.Optional[hashes.HashAlgorithm]]aExtendedKeyUsageOIDTu1.3.6.1.5.5.7.3.1aSERVER_AUTHTu1.3.6.1.5.5.7.3.2aCLIENT_AUTHTu1.3.6.1.5.5.7.3.3aCODE_SIGNINGTu1.3.6.1.5.5.7.3.4aEMAIL_PROTECTIONTu1.3.6.1.5.5.7.3.8aTIME_STAMPINGTu1.3.6.1.5.5.7.3.9aOCSP_SIGNINGTu2.5.29.37.0aANY_EXTENDED_KEY_USAGETu1.3.6.1.4.1.311.20.2.2aSMARTCARD_LOGONTu1.3.6.1.5.2.3.5aKERBEROS_PKINIT_KDCTu1.3.6.1.5.5.7.3.17aIPSEC_IKETu1.3.6.1.4.1.11129.2.4.4aCERTIFICATE_TRANSPARENCYaAuthorityInformationAccessOIDTu1.3.6.1.5.5.7.48.2aCA_ISSUERSTu1.3.6.1.5.5.7.48.1aOCSPaSubjectInformationAccessOIDTu1.3.6.1.5.5.7.48.5aCA_REPOSITORYaCertificatePoliciesOIDTu1.3.6.1.5.5.7.2.1aCPS_QUALIFIERTu1.3.6.1.5.5.7.2.2aCPS_USER_NOTICETu2.5.29.32.0aANY_POLICYaAttributeOIDTu1.2.840.113549.1.9.7aCHALLENGE_PASSWORDacommonNameacountryNamealocalityNameastateOrProvinceNameastreetAddressaorganizationNameaorganizationalUnitNameaserialNumberasurnameagivenNameatitleagenerationQualifierax500UniqueIdentifieradnQualifierapseudonymauserIDadomainComponentaemailAddressajurisdictionCountryNameajurisdictionLocalityNameajurisdictionStateOrProvinceNameabusinessCategoryapostalAddressapostalCodeaunstructuredNameamd5WithRSAEncryptionasha1WithRSAEncryptionasha224WithRSAEncryptionasha256WithRSAEncryptionasha384WithRSAEncryptionasha512WithRSAEncryptionuRSASSA-PSSuecdsa-with-SHA1uecdsa-with-SHA224uecdsa-with-SHA256uecdsa-with-SHA384uecdsa-with-SHA512udsa-with-sha1udsa-with-sha224udsa-with-sha256aed25519aed448uGOST R 34.11-94 with GOST R 34.10-2001uGOST R 34.10-2012 with GOST R 34.11-2012 (256 bit)uGOST R 34.10-2012 with GOST R 34.11-2012 (512 bit)aserverAuthaclientAuthacodeSigningaemailProtectionatimeStampingaOCSPSigningamsSmartcardLoginapkInitKDCasubjectDirectoryAttributesasubjectKeyIdentifierakeyUsageasubjectAltNameaissuerAltNameabasicConstraintsasignedCertificateTimestampListactPoisonamsCertificateTemplateacRLReasonainvalidityDateacertificateIssueranameConstraintsacRLDistributionPointsacertificatePoliciesapolicyMappingsaauthorityKeyIdentifierapolicyConstraintsaextendedKeyUsageafreshestCRLainhibitAnyPolicyaissuingDistributionPointaauthorityInfoAccessasubjectInfoAccessaOCSPNoCheckacRLNumberadeltaCRLIndicatoraTLSFeatureacaIssuersacaRepositoryuid-qt-cpsuid-qt-unoticeaOCSPNonceachallengePassworda_OID_NAMESucryptography\hazmat\_oid.pyu<module cryptography.hazmat._oid>Ta__class__u.cryptography.hazmat.backends"ucryptography.hazmat.backends.openssl.backendTabackendlabackenda__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\backendsTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingabackendsTaNUITKA_PACKAGE_cryptography_hazmat_backendsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsaAnyDareturnaAnyadefault_backenducryptography\hazmat\backends\__init__.pyu<module cryptography.hazmat.backends>u.cryptography.hazmat.backends.openssl.aeaducryptography.hazmat.primitives.ciphers.aeadTaChaCha20Poly1305laChaCha20Poly1305a_libaCryptography_HAS_EVP_AEADu
    Checks whether the given cipher is supported through
    EVP_AEAD rather than the normal OpenSSL EVP_CIPHER API.
    a_is_evp_aead_supported_ciphera_evp_cipher_cipher_namea_fips_enableda_fips_aeadaendswithTc-sivaCRYPTOGRAPHY_OPENSSL_300_OR_GREATERlaEVP_get_cipherbynamea_ffiaNULLa_evp_aead_create_ctxa_evp_cipher_create_ctxa_evp_aead_encrypta_evp_cipher_encrypta_evp_aead_decrypta_evp_cipher_decrypta_evp_aead_get_cipherafrom_bufferaEVP_AEAD_DEFAULT_TAG_LENGTHaCryptography_EVP_AEAD_CTX_newaopenssl_assertagcaEVP_AEAD_CTX_freeaEVP_aead_chacha20_poly1305anewTusize_t *aEVP_AEAD_max_overheaduuint8_t[]caEVP_AEAD_CTX_sealabuffer:nnnaInvalidTagaEVP_AEAD_CTX_opena_consume_errorsTaAESCCMaAESGCMaAESOCB3aAESSIVaChaCha20Poly1305aAESCCMaAESGCMaAESOCB3aAESSIVcchacha20-poly1305uaes-a_keyluu-ccmaasciiu-ocblu-sivu-gcmaEVP_CIPHER_fetchaEVP_CIPHER_freeaEVP_CIPHER_CTX_newaEVP_CIPHER_CTX_freea_evp_cipheraEVP_CipherInit_exa_ENCRYPTaEVP_CIPHER_CTX_ctrlaEVP_CTRL_AEAD_SET_IVLENa_DECRYPTa_evp_cipher_set_tagTc-ccmaEVP_CTRL_AEAD_SET_TAGTuint *aEVP_CipherUpdateuunsigned char[]TaAESCCMaAESSIVa_evp_cipher_aead_setupa_evp_cipher_set_nonce_operationa_evp_cipher_set_lengthabackendactxa_evp_cipher_process_aada_evp_cipher_process_dataadataTuunsigned char[]laEVP_CipherFinal_exaEVP_CTRL_AEAD_GET_TAGa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.exceptionsTaInvalidTagDabackendacipherareturnaBackenda_AEADTypesaboola_aead_cipher_supportedDabackendacipherakeyaBackenda_AEADTypesabytesa_aead_create_ctxTnDabackendacipheranonceadataaassociated_dataatag_lengthactxareturnaBackenda_AEADTypesabytesputyping.List[bytes]aintutyping.Anyabytesa_encrypta_decryptDabackendacipherakeyatag_lenaBackenda_AEADTypesabytesutyping.Optional[int]DabackendacipheraBackenda_AEADTypesDacipherareturna_AEADTypesabytesDacipher_nameabackendabytesaBackendDabackendacipher_nameakeyanonceatagatag_lenaoperationaBackendabytespputyping.Optional[bytes]aintpDatagareturnabytesaNoneDanonceaoperationareturnabytesaintaNoneDabackendadata_lenareturnaBackendaintaNoneDabackendaassociated_dataareturnaBackendabytesaNoneDabackendadataareturnaBackendabytespucryptography\hazmat\backends\openssl\aead.pyu<module cryptography.hazmat.backends.openssl.aead>Tabackendacipheracipher_nameTabackendacipherakeyTabackendacipheranonceadataaassociated_dataatag_lengthactxTabackendacipherakeyatag_lenaaead_cipherakey_ptractxTabackendacipheranonceadataaassociated_dataatag_lengthactxaout_lenamax_out_lenaout_bufadata_ptranonce_ptraaadaaad_ptraresadecrypted_dataTabackendacipheranonceadataaassociated_dataatag_lengthactxaaead_cipheraout_lenamax_out_lenaout_bufadata_ptranonce_ptraaadaaad_ptraresaencrypted_dataTabackendacipheraChaCha20Poly1305Tacipher_nameabackendaevp_cipherTabackendacipher_nameakeyanonceatagatag_lenaoperationaevp_cipheractxaresanonce_ptrakey_ptrTacipheraAESCCMaAESGCMaAESOCB3aAESSIVaChaCha20Poly1305Tabackendacipherakeyactxacipher_nameaevp_cipherakey_ptraresTabackendacipheranonceadataaassociated_dataatag_lengthactxaAESCCMaAESSIVatagacipher_nameaadaoutlenabufad_ptraresaprocessed_dataTabackendacipheranonceadataaassociated_dataatag_lengthactxaAESCCMaAESSIVacipher_nameaadaprocessed_dataaoutlenabufaresatag_bufatagTabackendactxaassociated_dataaoutlenaa_data_ptraresTabackendactxadataaoutlenabufadata_ptraresTabackendactxadata_lenaintptraresTabackendactxanonceaoperationanonce_ptraresTabackendactxatagatag_ptrares.cryptography.hazmat.backends.openssl.backendfabindingaBindinga_bindingaffia_ffialiba_libarust_opensslais_fips_enableda_fips_enableda_cipher_registrya_register_default_ciphersaEVP_PKEY_DHa_dh_typesaCryptography_HAS_EVP_PKEY_DHXaappendaEVP_PKEY_DHXu<OpenSSLBackend(version: {}, FIPS: {}, Legacy: {})>aopenssl_version_texta_legacy_provider_loadeda_openssl_assertTaerrorsa_enable_fipsastringaOpenSSL_versionaOPENSSL_VERSIONadecodeTaasciiu
        Friendly string name of the loaded OpenSSL library. This is not
        necessarily the same version as it was compiled against.

        Example: OpenSSL 1.1.1d  10 Sep 2019
        aOpenSSL_version_numanameablake2bablake2su{}{}adigest_sizelaasciiaencodeaEVP_get_digestbynamea_evp_md_from_algorithmaopenssl_assertaNULLa_fips_hashesahashesaSHA1ahash_supportedaCryptography_HAS_SCRYPTla_fips_ciphersuDuplicate registration for: {} {}.aAESaAES128aAES256aCBCaCTRaECBaOFBaCFBaCFB8aGCMaselfaregister_cipher_adapteracipher_clsaGetCipherByNameTu{cipher.name}-{cipher.key_size}-{mode.name}aCamelliaaTripleDESTudes-ede3-{mode.name}Tudes-ede3aChaCha20Tachacha20aXTSa_get_xts_cipheraSM4Tusm4-{mode.name}aCRYPTOGRAPHY_OPENSSL_300_OR_GREATERa_BlowfishInternalTubf-{mode.name}a_SEEDInternalTuseed-{mode.name}aitertoolsaproducta_CAST5Internala_IDEAInternalutoo many values to unpack (expected 2)Tu{cipher.name}-{mode.name}aARC4Tarc4a_RC2Tarc2a_CipherContexta_ENCRYPTa_DECRYPTahmac_supportedacapture_error_stackaBN_is_negativeaBN_num_bytesanewuunsigned char[]aBN_bn2binlafrom_bytesabufferabigato_bytesabit_lengthf @aBN_bin2bnu
        Converts a python integer to a BIGNUM. The returned BIGNUM will not
        be garbage collected (to support adding them to structs that take
        ownership of the object). Be sure to register it for GC if it will
        be discarded after use.
        arsaa_verify_rsa_parametersaRSA_newagcaRSA_freea_int_to_bnaBN_freeaRSA_generate_key_exa_rsa_cdata_to_evp_pkeya_RSAPrivateKeyDaunsafe_skip_rsa_key_validationtlla_check_private_key_componentswpwqwdadmp1admq1aiqmpapublic_numberswewnaRSA_set0_factorsaRSA_set0_keyaRSA_set0_crt_paramsTaunsafe_skip_rsa_key_validationa_check_public_key_componentsa_RSAPublicKeyaEVP_PKEY_newaEVP_PKEY_freea_create_evp_pkey_gcaEVP_PKEY_set1_RSAafrom_bufferaBIO_new_mem_bufa_MemoryBIOaBIO_freeu
        Return a _MemoryBIO namedtuple of (BIO, char*).

        The char* is the storage for the BIO and it must stay alive until the
        BIO is finished with.
        aBIO_s_memaBIO_newu
        Creates an empty memory BIO.
        Tuchar **aBIO_get_mem_data:nnnu
        Reads a memory BIO. This only works on memory BIOs.
        aEVP_PKEY_idaEVP_PKEY_RSAaEVP_PKEY_get1_RSAaEVP_PKEY_RSA_PSSaCRYPTOGRAPHY_IS_LIBRESSLaCRYPTOGRAPHY_IS_BORINGSSLaCRYPTOGRAPHY_OPENSSL_LESS_THAN_111Ea_create_mem_bio_gcai2d_RSAPrivateKey_bioaload_der_private_keya_read_mem_bioTapasswordaunsafe_skip_rsa_key_validationaEVP_PKEY_DSAadsaaprivate_key_from_ptracastauintptr_taEVP_PKEY_ECaEVP_PKEY_get1_EC_KEYaEC_KEY_freea_EllipticCurvePrivateKeyadhaEVP_PKEY_ED25519aed25519aEVP_PKEY_X448ax448aEVP_PKEY_X25519ax25519aEVP_PKEY_ED448aed448aUnsupportedAlgorithmTuUnsupported key type.u
        Return the appropriate type of PrivateKey given an evp_pkey cdata
        pointer.
        ai2d_RSAPublicKey_bioaload_der_public_keyapublic_key_from_ptra_consume_errorsuUnable to load EC keya_EllipticCurvePublicKeyu
        Return the appropriate type of PublicKey given an evp_pkey cdata
        pointer.
        aSHA224aSHA256aSHA384aSHA512aPKCS1v15aPSSa_mgfaMGF1apaddinga_algorithmaOAEPa_oaep_hash_supportedarsa_padding_supportedTlllluKey size must be 1024, 2048, 3072, or 4096 bits.agenerate_parametersagenerate_private_keyagenerate_dsa_parametersagenerate_dsa_private_keya_check_dsa_private_numbersafrom_private_numbersa_check_dsa_parametersaparameter_numbersafrom_public_numbersafrom_parameter_numbersadsa_supportedasignature_hash_supportedacipher_supporteddablock_sizea_CMACContexta_load_keyaPEM_read_bio_PrivateKeya_bytes_to_bioTuCRYPTOGRAPHY_PASSWORD_DATA *aPEM_read_bio_PUBKEYabioaaddressofa_original_libaCryptography_pem_password_cba_evp_pkey_to_public_keyaBIO_resetaPEM_read_bio_RSAPublicKeya_handle_key_loading_errorafrom_pem_parametersa_evp_pkey_from_der_traditional_keya_evp_pkey_to_private_keyad2i_PKCS8PrivateKey_bioad2i_PrivateKey_biouPassword was given but private key is not encrypted.ad2i_PUBKEY_bioad2i_RSAPublicKey_bioafrom_der_parametersapublic_bytesaserializationaEncodingaDERad2i_X509_bioaX509_freeai2d_X509_bioax509aload_der_x509_certificateaprivate_bytesaPrivateFormataPKCS8aNoEncryptionautilsa_check_byteslikeapasswordalengthauserdataaerrorluPassword was not given but private key is encryptedluPasswords longer than {} bytes are not supported by this backend.amaxsizeacalleduCould not deserialize key data. The data may be in an incorrect format or it may be encrypted with an unsupported algorithm.a_lib_reason_matchaERR_LIB_EVPaEVP_R_BAD_DECRYPTaERR_LIB_PKCS12aPKCS12_R_PKCS12_CIPHERFINAL_ERRORaCryptography_HAS_PROVIDERSaERR_LIB_PROVaPROV_R_BAD_DECRYPTuBad decrypt. Incorrect password?uUnsupported public key algorithm.uCould not deserialize key data. The data may be in an incorrect format, it may be encrypted with an unsupported algorithm, or it may be an unsupported key type (e.g. EC curves with explicit parameters).aEVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHMu<genexpr>uBackend._handle_key_loading_error.<locals>.<genexpr>a_elliptic_curve_to_nidaNID_undefaEC_GROUP_new_by_curve_nameaEC_GROUP_freeaecaECDSAaelliptic_curve_supporteda_ec_key_new_by_curveaEC_KEY_generate_keya_ec_cdata_to_evp_pkeyuBackend object does not support uw.a_ReasonsaUNSUPPORTED_ELLIPTIC_CURVEu
        Generate a new private key on the named curve.
        acurveaprivate_valueaBN_clear_freeaEC_KEY_set_private_keyuInvalid EC key.a_tmp_bn_ctxa__enter__a__exit__a_ec_key_set_public_key_affine_coordinateswxwyaEC_KEY_get0_groupabackendaEC_KEY_get0_public_keyaEC_POINT_newaEC_POINT_freeaEC_POINT_mulaEC_POINT_cmpTnnnaEC_POINT_oct2pointuInvalid public bytes for the given curveaEC_KEY_set_public_keyaBN_CTX_getaEC_POINT_get_affine_coordinatesuUnable to derive key from private_valuea_ec_key_new_by_curve_nidaEC_KEY_new_by_curve_namea_fips_ecdh_curvesaECDHaEVP_PKEY_set1_EC_KEYDasecp192r1asecp256r1aprime192v1aprime256v1aOBJ_sn2nidu is not a supported elliptic curveu
        Get the NID for a curve name.
        aBN_CTX_newaBN_CTX_freeaBN_CTX_startaBN_CTX_enduBackend._tmp_bn_ctxuInvalid EC key. Both x and y must be non-negative.aEC_POINT_set_affine_coordinatesu
        Sets the public key point in the EC_KEY context to the affine x and y
        values.
        uencoding must be an item from the Encoding enumuformat must be an item from the PrivateFormat enumaKeySerializationEncryptionuEncryption algorithm must be a KeySerializationEncryption instancecaBestAvailableEncryptionuPasswords longer than 1023 bytes are not supported by this backenda_KeySerializationEncryptiona_formataOpenSSHaencryption_algorithmuUnsupported encryption typeaformataPEMaPEM_write_bio_PKCS8PrivateKeyai2d_PKCS8PrivateKey_biouUnsupported encoding for PKCS8a_private_key_bytes_via_bioaTraditionalOpenSSLuEncrypted traditional OpenSSL format is not supported in FIPS mode.aPEM_write_bio_RSAPrivateKeyaPEM_write_bio_ECPrivateKeyuEncryption is not supported for DER encoded traditional OpenSSL keysai2d_ECPrivateKey_bioa_bio_func_outputuUnsupported encoding for TraditionalOpenSSLassha_serialize_ssh_private_keyuOpenSSH private key format can only be used with PEM encodinguformat is invalid with this keyaEVP_get_cipherbynameTcaes-256-cbcaPublicFormatuformat must be an item from the PublicFormat enumaSubjectPublicKeyInfoaPEM_write_bio_PUBKEYai2d_PUBKEY_biouSubjectPublicKeyInfo works only with PEM or DER encodingaPKCS1uPKCS1 format is supported only for RSA keysaPEM_write_bio_RSAPublicKeyuPKCS1 works only with PEM or DER encodingaserialize_ssh_public_keyuOpenSSH format must be used with OpenSSH encodingagenerate_dh_private_keyagenerate_dh_parametersaDHParameterNumbersTwpwgwqafrom_public_bytesafrom_private_bytesagenerate_keyaCRYPTOGRAPHY_LIBRESSL_LESS_THAN_370aCRYPTOGRAPHY_HAS_WORKING_ED25519aaeada_aead_cipher_supportedadatau
        This method takes bytes, which can be a bytestring or a mutable
        buffer like a bytearray, and yields a null-terminated version of that
        data. This is required because PKCS12_parse doesn't take a length with
        its password char * and ffi.from_buffer doesn't provide null
        termination. So, to support zeroing the data via bytearray we
        need to build this ridiculous construct that copies the memory, but
        zeroes it after use.
        uchar[]amemmovea_zero_datauuint8_t *a_zeroed_null_terminated_bufuBackend._zeroed_null_terminated_bufaload_pkcs12akeyacertacertificateaadditional_certsad2i_PKCS12_biouCould not deserialize PKCS12 dataaPKCS12_freeTuEVP_PKEY **TuX509 **TuCryptography_STACK_OF_X509 **aPKCS12_parsearesuInvalid password or PKCS12 dataDaunsafe_skip_rsa_key_validationFa_ossl2certaX509_alias_get0aPKCS12Certificateask_X509_freeask_X509_numask_X509_valueask_x509aadditional_certificatesaPKCS12KeyAndCertificatesa_check_bytesaNID_aes_256_cbcaNID_pbe_WithSHA1And3_Key_TripleDES_CBCl NaPKCS12a_key_cert_algorithmaPBESaPBESv1SHA1And3KeyTripleDESCBCaPBESv2SHA256AndAES256CBCTuPBESv2 is not supported by this version of OpenSSLa_hmac_hashaCryptography_HAS_PKCS12_SET_MACTuSetting MAC algorithm is not supported by this version of OpenSSL.a_evp_md_non_null_from_algorithma_kdf_roundsuUnsupported key encryption typeask_X509_new_nullacasafriendly_namea_cert2osslaX509_alias_set1aossl_casaossl_caask_X509_pusha_key2osslaPKCS12_createaPKCS12_set_macap12ai2d_PKCS12_bioaCryptography_HAS_POLY1305aPEM_read_bio_PKCS7uUnable to parse PKCS7 dataaPKCS7_freea_load_pkcs7_certificatesad2i_PKCS7_bioaOBJ_obj2nidatypeaNID_pkcs7_signeduOnly basic signed structures are currently supported. NID for this data was {}aUNSUPPORTED_SERIALIZATIONasignacertsa_fmtTacipheramodealoweraCryptography_HAS_300_EVP_CIPHERaEVP_CIPHER_fetchuaes-akey_sizelu-xtsa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsacollectionsacontextlibatypingTacontextmanageracontextmanageracryptographyTautilsax509ucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.backends.opensslTaaeaducryptography.hazmat.backends.openssl.ciphersTa_CipherContextucryptography.hazmat.backends.openssl.cmacTa_CMACContextucryptography.hazmat.backends.openssl.ecTa_EllipticCurvePrivateKeya_EllipticCurvePublicKeyucryptography.hazmat.backends.openssl.rsaTa_RSAPrivateKeya_RSAPublicKeyucryptography.hazmat.bindings._rustTaopensslaopensslucryptography.hazmat.bindings.opensslTabindingucryptography.hazmat.primitivesTahashesaserializationucryptography.hazmat.primitives._asymmetricTaAsymmetricPaddingaAsymmetricPaddingucryptography.hazmat.primitives.asymmetricTadhadsaaecaed448aed25519arsaax448ax25519ucryptography.hazmat.primitives.asymmetric.paddingTaMGF1aOAEPaPSSaPKCS1v15ucryptography.hazmat.primitives.asymmetric.typesTaPrivateKeyTypesaPublicKeyTypesaPrivateKeyTypesaPublicKeyTypesucryptography.hazmat.primitives.ciphersTaBlockCipherAlgorithmaCipherAlgorithmaBlockCipherAlgorithmaCipherAlgorithmucryptography.hazmat.primitives.ciphers.algorithmsTaAESaAES128aAES256aARC4aSM4aCamelliaaChaCha20aTripleDESa_BlowfishInternala_CAST5Internala_IDEAInternala_SEEDInternalucryptography.hazmat.primitives.ciphers.modesTaCBCaCFBaCFB8aCTRaECBaGCMaOFBaXTSaModeaModeucryptography.hazmat.primitives.serializationTasshucryptography.hazmat.primitives.serialization.pkcs12TaPBESaPKCS12CertificateaPKCS12KeyAndCertificatesaPKCS12PrivateKeyTypesa_PKCS12CATypesaPKCS12PrivateKeyTypesa_PKCS12CATypesanamedtupleachar_ptrucryptography.hazmat.backends.openssl.backenda__module__a__qualname__Tu
    OpenSSL API binding interfaces.
    aBackendScaes-128-gcmcaes-256-ccmcaes-192-gcmcaes-256-gcmcaes-128-ccmcaes-192-ccma_fips_aeadaSHA512_224aSHA512_256aSHA3_224aSHA3_256aSHA3_384aSHA3_512aSHAKE128aSHAKE256aSECP224R1aSECP256R1aSECP384R1aSECP521R1la_fips_rsa_min_key_sizela_fips_rsa_min_public_exponenta_fips_dsa_min_modulusa_fips_dh_min_key_sizea_fips_dh_min_modulusDareturnaNonea__init__uBackend.__init__Dareturnastra__repr__uBackend.__repr__TnDaokaerrorsareturnaboolutyping.Optional[typing.List[rust_openssl.OpenSSLError]]aNoneuBackend.openssl_assertuBackend._enable_fipsuBackend.openssl_version_textDareturnaintaopenssl_version_numberuBackend.openssl_version_numberDaalgorithmuhashes.HashAlgorithmuBackend._evp_md_from_algorithmuBackend._evp_md_non_null_from_algorithmDaalgorithmareturnuhashes.HashAlgorithmabooluBackend.hash_supporteduBackend.signature_hash_supportedDareturnaboolascrypt_supporteduBackend.scrypt_supporteduBackend.hmac_supportedDacipheramodeareturnaCipherAlgorithmaModeabooluBackend.cipher_supporteduBackend.register_cipher_adapteruBackend._register_default_ciphersDacipheramodeareturnaCipherAlgorithmaModea_CipherContextacreate_symmetric_encryption_ctxuBackend.create_symmetric_encryption_ctxacreate_symmetric_decryption_ctxuBackend.create_symmetric_decryption_ctxapbkdf2_hmac_supporteduBackend.pbkdf2_hmac_supportedDareturnutyping.List[rust_openssl.OpenSSLError]uBackend._consume_errorsa_bn_to_intuBackend._bn_to_intDanumaintuBackend._int_to_bnDapublic_exponentakey_sizeareturnaintpursa.RSAPrivateKeyagenerate_rsa_private_keyuBackend.generate_rsa_private_keyDapublic_exponentakey_sizeareturnaintpaboolagenerate_rsa_parameters_supporteduBackend.generate_rsa_parameters_supportedDanumbersaunsafe_skip_rsa_key_validationareturnursa.RSAPrivateNumbersaboolursa.RSAPrivateKeyaload_rsa_private_numbersuBackend.load_rsa_private_numbersDanumbersareturnursa.RSAPublicNumbersursa.RSAPublicKeyaload_rsa_public_numbersuBackend.load_rsa_public_numbersuBackend._create_evp_pkey_gcuBackend._rsa_cdata_to_evp_pkeyDadataareturnabytesa_MemoryBIOuBackend._bytes_to_biouBackend._create_mem_bio_gcDareturnabytesuBackend._read_mem_bioDaunsafe_skip_rsa_key_validationareturnaboolaPrivateKeyTypesuBackend._evp_pkey_to_private_keyDareturnaPublicKeyTypesuBackend._evp_pkey_to_public_keyuBackend._oaep_hash_supportedDapaddingareturnaAsymmetricPaddingabooluBackend.rsa_padding_supportedarsa_encryption_supporteduBackend.rsa_encryption_supportedDakey_sizeareturnaintudsa.DSAParametersuBackend.generate_dsa_parametersDaparametersareturnudsa.DSAParametersudsa.DSAPrivateKeyuBackend.generate_dsa_private_keyDakey_sizeareturnaintudsa.DSAPrivateKeyagenerate_dsa_private_key_and_parametersuBackend.generate_dsa_private_key_and_parametersDanumbersareturnudsa.DSAPrivateNumbersudsa.DSAPrivateKeyaload_dsa_private_numbersuBackend.load_dsa_private_numbersDanumbersareturnudsa.DSAPublicNumbersudsa.DSAPublicKeyaload_dsa_public_numbersuBackend.load_dsa_public_numbersDanumbersareturnudsa.DSAParameterNumbersudsa.DSAParametersaload_dsa_parameter_numbersuBackend.load_dsa_parameter_numbersuBackend.dsa_supportedadsa_hash_supporteduBackend.dsa_hash_supportedacmac_algorithm_supporteduBackend.cmac_algorithm_supportedDaalgorithmareturnaBlockCipherAlgorithma_CMACContextacreate_cmac_ctxuBackend.create_cmac_ctxDadataapasswordaunsafe_skip_rsa_key_validationareturnabytesutyping.Optional[bytes]aboolaPrivateKeyTypesaload_pem_private_keyuBackend.load_pem_private_keyDadataareturnabytesaPublicKeyTypesaload_pem_public_keyuBackend.load_pem_public_keyDadataareturnabytesudh.DHParametersaload_pem_parametersuBackend.load_pem_parametersuBackend.load_der_private_keyuBackend._evp_pkey_from_der_traditional_keyuBackend.load_der_public_keyaload_der_parametersuBackend.load_der_parametersDacertareturnux509.Certificateutyping.AnyuBackend._cert2osslDax509_ptrareturnutyping.Anyux509.CertificateuBackend._ossl2certDakeyareturnaPKCS12PrivateKeyTypesutyping.AnyuBackend._key2osslDareturnaPrivateKeyTypesuBackend._load_keyDareturnutyping.NoReturnuBackend._handle_key_loading_errorDacurveareturnuec.EllipticCurveabooluBackend.elliptic_curve_supportedDasignature_algorithmacurveareturnuec.EllipticCurveSignatureAlgorithmuec.EllipticCurveaboolaelliptic_curve_signature_algorithm_supporteduBackend.elliptic_curve_signature_algorithm_supportedDacurveareturnuec.EllipticCurveuec.EllipticCurvePrivateKeyagenerate_elliptic_curve_private_keyuBackend.generate_elliptic_curve_private_keyDanumbersareturnuec.EllipticCurvePrivateNumbersuec.EllipticCurvePrivateKeyaload_elliptic_curve_private_numbersuBackend.load_elliptic_curve_private_numbersDanumbersareturnuec.EllipticCurvePublicNumbersuec.EllipticCurvePublicKeyaload_elliptic_curve_public_numbersuBackend.load_elliptic_curve_public_numbersDacurveapoint_bytesareturnuec.EllipticCurveabytesuec.EllipticCurvePublicKeyaload_elliptic_curve_public_bytesuBackend.load_elliptic_curve_public_bytesDaprivate_valueacurveareturnaintuec.EllipticCurveuec.EllipticCurvePrivateKeyaderive_elliptic_curve_private_keyuBackend.derive_elliptic_curve_private_keyDacurveuec.EllipticCurveuBackend._ec_key_new_by_curveDacurve_nidaintuBackend._ec_key_new_by_curve_nidDaalgorithmacurveareturnuec.ECDHuec.EllipticCurveaboolaelliptic_curve_exchange_algorithm_supporteduBackend.elliptic_curve_exchange_algorithm_supporteduBackend._ec_cdata_to_evp_pkeyDacurveareturnuec.EllipticCurveaintuBackend._elliptic_curve_to_nidDwxwyareturnaintpaNoneuBackend._ec_key_set_public_key_affine_coordinatesDaencodingaformataencryption_algorithmareturnuserialization.Encodinguserialization.PrivateFormatuserialization.KeySerializationEncryptionabytesa_private_key_bytesuBackend._private_key_bytesuBackend._private_key_bytes_via_biouBackend._bio_func_outputDaencodingaformatareturnuserialization.Encodinguserialization.PublicFormatabytesa_public_key_bytesuBackend._public_key_bytesadh_supporteduBackend.dh_supportedDageneratorakey_sizeareturnaintpudh.DHParametersuBackend.generate_dh_parametersDaparametersareturnudh.DHParametersudh.DHPrivateKeyuBackend.generate_dh_private_keyDageneratorakey_sizeareturnaintpudh.DHPrivateKeyagenerate_dh_private_key_and_parametersuBackend.generate_dh_private_key_and_parametersDanumbersareturnudh.DHPrivateNumbersudh.DHPrivateKeyaload_dh_private_numbersuBackend.load_dh_private_numbersDanumbersareturnudh.DHPublicNumbersudh.DHPublicKeyaload_dh_public_numbersuBackend.load_dh_public_numbersDanumbersareturnudh.DHParameterNumbersudh.DHParametersaload_dh_parameter_numbersuBackend.load_dh_parameter_numbersDwpwgwqareturnaintputyping.Optional[int]abooladh_parameters_supporteduBackend.dh_parameters_supportedadh_x942_serialization_supporteduBackend.dh_x942_serialization_supportedDadataareturnabytesux25519.X25519PublicKeyax25519_load_public_bytesuBackend.x25519_load_public_bytesDadataareturnabytesux25519.X25519PrivateKeyax25519_load_private_bytesuBackend.x25519_load_private_bytesDareturnux25519.X25519PrivateKeyax25519_generate_keyuBackend.x25519_generate_keyax25519_supporteduBackend.x25519_supportedDadataareturnabytesux448.X448PublicKeyax448_load_public_bytesuBackend.x448_load_public_bytesDadataareturnabytesux448.X448PrivateKeyax448_load_private_bytesuBackend.x448_load_private_bytesDareturnux448.X448PrivateKeyax448_generate_keyuBackend.x448_generate_keyax448_supporteduBackend.x448_supportedaed25519_supporteduBackend.ed25519_supportedDadataareturnabytesued25519.Ed25519PublicKeyaed25519_load_public_bytesuBackend.ed25519_load_public_bytesDadataareturnabytesued25519.Ed25519PrivateKeyaed25519_load_private_bytesuBackend.ed25519_load_private_bytesDareturnued25519.Ed25519PrivateKeyaed25519_generate_keyuBackend.ed25519_generate_keyaed448_supporteduBackend.ed448_supportedDadataareturnabytesued448.Ed448PublicKeyaed448_load_public_bytesuBackend.ed448_load_public_bytesDadataareturnabytesued448.Ed448PrivateKeyaed448_load_private_bytesuBackend.ed448_load_private_bytesDareturnued448.Ed448PrivateKeyaed448_generate_keyuBackend.ed448_generate_keyaaead_cipher_supporteduBackend.aead_cipher_supportedDalengthareturnaintaNoneuBackend._zero_dataDadataapasswordareturnabytesutyping.Optional[bytes]utyping.Tuple[typing.Optional[PrivateKeyTypes], typing.Optional[x509.Certificate], typing.List[x509.Certificate]]aload_key_and_certificates_from_pkcs12uBackend.load_key_and_certificates_from_pkcs12Dadataapasswordareturnabytesutyping.Optional[bytes]aPKCS12KeyAndCertificatesuBackend.load_pkcs12Danameakeyacertacasaencryption_algorithmareturnutyping.Optional[bytes]utyping.Optional[PKCS12PrivateKeyTypes]utyping.Optional[x509.Certificate]utyping.Optional[typing.List[_PKCS12CATypes]]userialization.KeySerializationEncryptionabytesaserialize_key_and_certificates_to_pkcs12uBackend.serialize_key_and_certificates_to_pkcs12apoly1305_supporteduBackend.poly1305_supportedapkcs7_supporteduBackend.pkcs7_supportedDadataareturnabytesutyping.List[x509.Certificate]aload_pem_pkcs7_certificatesuBackend.load_pem_pkcs7_certificatesaload_der_pkcs7_certificatesuBackend.load_der_pkcs7_certificatesDareturnutyping.List[x509.Certificate]uBackend._load_pkcs7_certificatesDafmtastruGetCipherByName.__init__DabackendacipheramodeaBackendaCipherAlgorithmaModea__call__uGetCipherByName.__call__DabackendacipheraBackendaAESucryptography\hazmat\backends\openssl\backend.pyTa.0aerroraselfu<module cryptography.hazmat.backends.openssl.backend>Ta__class__Taselfabackendacipheramodeacipher_nameaevp_cipherTaselfTaselfafmtTaselfawrite_bioaargsabioaresTaselfabnabn_num_bytesabin_ptrabin_lenavalTaselfadataadata_ptrabioTaselfacertadataamem_bioax509Taselfaevp_pkeyTaselfabio_methodabioTaselfaec_cdataaevp_pkeyaresTaselfacurveacurve_nidTaselfacurve_nidaec_cdataTaselfaec_cdatawxwyabn_ctxagroupapointaresTaselfacurveacurve_aliasesacurve_nameacurve_nidTaselfaalgorithmaalgaevp_mdTaselfaalgorithmaevp_mdTaselfabio_dataapasswordakeyTaselfaevp_pkeyaunsafe_skip_rsa_key_validationakey_typearsa_cdataabioaresaec_cdataTaselfaevp_pkeyakey_typearsa_cdataabioaresaec_cdataaerrorsTabackendacipheramodeacipher_nameTaselfaerrorsTaselfanumabinaryabn_ptrTaselfakeyadataamem_bioaevp_pkeyTaselfaopenssl_read_funcadataapasswordaunsafe_skip_rsa_key_validationamem_bioauserdataapassword_ptraevp_pkeyTaselfap7anidask_x509anumacertswiax509acertTaselfaalgorithmTaselfax509_ptrabioaresT
aselfaencodingaformataencryption_algorithmakeyaevp_pkeyacdataapasswordawrite_bioakey_typeTaselfawrite_bioaevp_pkeyapasswordaevp_cipherTaselfaencodingaformatakeyaevp_pkeyacdataawrite_bioakey_typeTaselfabioabufabuf_lenabio_dataTaselfacipher_clsamode_clsTaselfarsa_cdataaevp_pkeyaresTaselfabn_ctxTaselfadataalengthwiTaselfadataadata_lenabufTaselfacipherTaselfacipheramodeaadapteraevp_cipherTaselfacipheramodeT
aselfaprivate_valueacurveaec_cdataagroupapointavalueabn_ctxaresabn_xabn_yaprivateaevp_pkeyTaselfwpwgwqTaselfadataTaselfaalgorithmacurveTaselfasignature_algorithmacurveTaselfacurveacurve_nidagroupTaselfageneratorakey_sizeTaselfaparametersTaselfakey_sizeTaselfakey_sizeaparametersTaselfacurveaec_cdataaresaevp_pkeyTaselfapublic_exponentakey_sizeTaselfapublic_exponentakey_sizearsa_cdataabnaresaevp_pkeyTaselfadataabioap7Taselfadataapasswordaunsafe_skip_rsa_key_validationabio_dataakeyTaselfadataamem_bioaevp_pkeyaresarsa_cdataTaselfanumbersTaselfanumbersapublicaec_cdataaprivate_valuearesabn_ctxagroupaset_pointacomputed_pointaevp_pkeyTaselfacurveapoint_bytesaec_cdataagroupapointabn_ctxaresaevp_pkeyTaselfanumbersaec_cdataabn_ctxaevp_pkeyTaselfadataapasswordapkcs12Taselfadataapasswordaunsafe_skip_rsa_key_validationTaselfadataamem_bioauserdataaevp_pkeyaresarsa_cdataTaselfadataapasswordaindicesabioap12aevp_pkey_ptrax509_ptrask_x509_ptrapassword_bufaresacertakeyaadditional_certificatesaevp_pkeyax509acert_objanameamaybe_nameask_x509anumwiaaddl_certaaddl_nameTaselfanumbersaunsafe_skip_rsa_key_validationarsa_cdatawpwqwdadmp1admq1aiqmpwewnaresaevp_pkeyTaselfanumbersarsa_cdatawewnaresaevp_pkeyTaselfaokaerrorsTaselfacipher_clsamode_clsaadapterTaselfapaddingTaselfanameakeyacertacasaencryption_algorithmapasswordanid_certanid_keyapkcs12_iteramac_iteramac_algakeycertalgask_x509aossl_casacaaca_aliasaossl_caaresapassword_bufaname_bufaossl_certaossl_pkeyap12abio.cryptography.hazmat.backends.openssl.ciphersa_backenda_ciphera_modea_operationa_tagaciphersaBlockCipherAlgorithmablock_sizela_block_size_bytesla_libaEVP_CIPHER_CTX_newa_ffiagcaEVP_CIPHER_CTX_freea_cipher_registryaUnsupportedAlgorithmucipher {} in {} mode is not supported by this backend.anamea_ReasonsaUNSUPPORTED_CIPHERaNULLucipher uw uin u mode uis not supported by this backend (Your version of OpenSSL may be too old. Current version: {}.)aopenssl_version_textamodesaModeWithInitializationVectorafrom_bufferainitialization_vectoraModeWithTweakatweakaModeWithNonceanonceaalgorithmsaChaCha20aEVP_CipherInit_exaopenssl_assertlaEVP_CIPHER_CTX_set_key_lengthakeyaGCMaEVP_CIPHER_CTX_ctrlaEVP_CTRL_AEAD_SET_IVLENatagaEVP_CTRL_AEAD_SET_TAGaiv_noncea_consume_errorsaCRYPTOGRAPHY_IS_LIBRESSLa_lib_reason_matchaERR_LIB_EVPaEVP_R_XTS_DUPLICATED_KEYSaCryptography_HAS_PROVIDERSaERR_LIB_PROVaPROV_R_XTS_DUPLICATED_KEYSuIn XTS mode duplicated keys are not allowedTaerrorsaEVP_CIPHER_CTX_set_paddinga_ctxaupdate_intoubuffer must be at least {} bytes for this payloadanewTuint *Darequire_writabletadata_processedatotal_data_lenabaseoutbufatotal_outabaseinbufaminaselfa_MAX_CHUNK_SIZEaEVP_CipherUpdateaoutlenaXTSuIn XTS mode you must supply at least a full block in the first update call. For AES this is 16 bytes.a_DECRYPTaModeWithAuthenticationTaguAuthentication tag must be provided when decrypting.uunsigned char[]aEVP_CipherFinal_exaInvalidTagaEVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTHaPROV_R_WRONG_FINAL_BLOCK_LENGTHaCRYPTOGRAPHY_IS_BORINGSSLareasonaCIPHER_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTHuThe length of the provided data is not a multiple of the block length.a_ENCRYPTaEVP_CTRL_AEAD_GET_TAGabuffer:nnnaEVP_CIPHER_CTX_reseta_min_tag_lengthuAuthentication tag must be {} bytes or longer.uAuthentication tag cannot be more than {} bytes.afinalizea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.exceptionsTaInvalidTagaUnsupportedAlgorithma_Reasonsucryptography.hazmat.primitivesTaciphersucryptography.hazmat.primitives.ciphersTaalgorithmsamodesucryptography.hazmat.backends.openssl.ciphersa__module__a_CipherContexta__qualname__q?DabackendaoperationareturnaBackendaintaNonea__init__u_CipherContext.__init__Dadataareturnabytespaupdateu_CipherContext.updateDadataabufareturnabytespaintu_CipherContext.update_intoDareturnabytesu_CipherContext.finalizeDatagareturnabytespafinalize_with_tagu_CipherContext.finalize_with_tagDadataareturnabytesaNoneaauthenticate_additional_datau_CipherContext.authenticate_additional_dataDareturnutyping.Optional[bytes]u_CipherContext.tagTucryptography\hazmat\backends\openssl\ciphers.pyu<module cryptography.hazmat.backends.openssl.ciphers>Ta__class__Taselfabackendacipheramodeaoperationactxaregistryaadapteraevp_cipheramsgaiv_noncearesaerrorsalibTaselfadataaoutlenaresTaselfabufaoutlenaresaerrorsalibatag_bufTaselfatagatag_lenaresTaselfTaselfadataabufwnT
aselfadataabufatotal_data_lenadata_processedatotal_outaoutlenabaseoutbufabaseinbufaoutbufainbufainlenares.cryptography.hazmat.backends.openssl.cmacSacmac_algorithm_supportedaUnsupportedAlgorithmuThis backend does not support CMAC.a_ReasonsaUNSUPPORTED_CIPHERa_backendakeya_keya_algorithmablock_sizela_output_lengtha_cipher_registryaCBCa_libaCMAC_CTX_newaopenssl_asserta_ffiaNULLagcaCMAC_CTX_freeafrom_bufferaCMAC_Initlactxa_ctxaCMAC_Updateanewuunsigned char[]usize_t *aCMAC_Finalabuffer:nnnaCMAC_CTX_copya_CMACContextTactxafinalizeaconstant_timeabytes_eqaInvalidSignatureTuSignature did not match digest.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.exceptionsTaInvalidSignatureaUnsupportedAlgorithma_Reasonslucryptography.hazmat.primitivesTaconstant_timeucryptography.hazmat.primitives.ciphers.modesTaCBCucryptography.hazmat.backends.openssl.cmaca__module__a__qualname__TnDabackendaalgorithmareturnaBackenduciphers.BlockCipherAlgorithmaNonea__init__u_CMACContext.__init__DadataareturnabytesaNoneaupdateu_CMACContext.updateDareturnabytesu_CMACContext.finalizeDareturna_CMACContextacopyu_CMACContext.copyDasignatureareturnabytesaNoneaverifyu_CMACContext.verifyTucryptography\hazmat\backends\openssl\cmac.pyu<module cryptography.hazmat.backends.openssl.cmac>Taselfabackendaalgorithmactxaregistryaadapteraevp_cipherakey_ptraresTaselfacopied_ctxaresTaselfabufalengtharesTaselfadataaresTaselfasignatureadigestu.cryptography.hazmat.backends.opensslua__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\backends\opensslTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingubackends\opensslTaNUITKA_PACKAGE_cryptography_hazmat_backendsu\not_existingaopensslTaNUITKA_PACKAGE_cryptography_hazmat_backends_opensslu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.hazmat.backends.openssl.backendTabackendabackenda__all__ucryptography\hazmat\backends\openssl\__init__.pyu<module cryptography.hazmat.backends.openssl>u.cryptography.hazmat.backends.openssl.ecfaecaECDSAaUnsupportedAlgorithmuUnsupported elliptic curve signature algorithm.a_ReasonsaUNSUPPORTED_PUBLIC_KEY_ALGORITHMa_libaEC_KEY_get0_groupaopenssl_asserta_ffiaNULLaEC_GROUP_get_curve_nameaNID_undefuECDSA keys with explicit parameters are unsupported at this timeaCRYPTOGRAPHY_IS_LIBRESSLaEC_GROUP_get_asn1_flaglaOBJ_nid2snastringadecodeTaasciiaEC_KEY_set_asn1_flagaOPENSSL_EC_NAMED_CURVEu
    Set the named curve flag on the EC_KEY. This causes OpenSSL to
    serialize EC keys along with their curve OID which makes
    deserialization easier.
    aEC_KEY_get0_public_keyaEC_POINT_is_at_infinityuCannot load an EC public key where the point is at infinitya_CURVE_TYPESuu is not a supported elliptic curveaUNSUPPORTED_ELLIPTIC_CURVEaECDSA_sizea_ec_keyanewuunsigned char[]Tuunsigned int[]laECDSA_signlabufferaECDSA_verifya_consume_errorsaInvalidSignaturea_backenda_evp_pkeya_ec_key_curve_sna_sn_to_elliptic_curvea_curvea_mark_asn1_named_ec_curvea_check_key_infinityacurveakey_sizeaelliptic_curve_exchange_algorithm_supporteduThis backend does not support the ECDH algorithm.aUNSUPPORTED_EXCHANGE_ALGORITHManameupeer_public_key and self are not on the same curvea_evp_pkey_derivea_ec_key_new_by_curve_nidaEC_KEY_set_public_keya_ec_cdata_to_evp_pkeya_EllipticCurvePublicKeyaEC_KEY_get0_private_keya_bn_to_intaEllipticCurvePrivateNumbersapublic_keyapublic_numbersTaprivate_valueapublic_numbersa_private_key_bytesa_check_signature_algorithma_calculate_digest_and_algorithmaalgorithmutoo many values to unpack (expected 2)a_ecdsa_sig_signaEVP_PKEY_cmpa_tmp_bn_ctxa__enter__a__exit__aBN_CTX_getaEC_POINT_get_affine_coordinatesTnnnaEllipticCurvePublicNumberswxwyTwxwyacurveaserializationaPublicFormataCompressedPointaPOINT_CONVERSION_COMPRESSEDaUncompressedPointaPOINT_CONVERSION_UNCOMPRESSEDaselfaEC_POINT_point2octuchar[]abuf:nnnaEncodingaX962uX962 encoding must be used with CompressedPoint or UncompressedPoint formata_encode_pointa_public_key_bytesa_ecdsa_sig_verifya__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.exceptionsTaInvalidSignatureaUnsupportedAlgorithma_Reasonsucryptography.hazmat.backends.openssl.utilsTa_calculate_digest_and_algorithma_evp_pkey_deriveucryptography.hazmat.primitivesTaserializationucryptography.hazmat.primitives.asymmetricTaecDasignature_algorithmareturnuec.EllipticCurveSignatureAlgorithmaNoneDabackendareturnaBackendastrDabackendaBackendDabackendareturnaBackendaNoneDabackendasnareturnaBackendastruec.EllipticCurveDabackendaprivate_keyadataareturnaBackenda_EllipticCurvePrivateKeyabytespDabackendapublic_keyasignatureadataareturnaBackenda_EllipticCurvePublicKeyabytespaNoneaEllipticCurvePrivateKeya__prepare__a_EllipticCurvePrivateKeya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.backends.openssl.eca__module__a__qualname__a__init__u_EllipticCurvePrivateKey.__init__apropertyDareturnuec.EllipticCurveu_EllipticCurvePrivateKey.curveDareturnaintu_EllipticCurvePrivateKey.key_sizeDaalgorithmapeer_public_keyareturnuec.ECDHuec.EllipticCurvePublicKeyabytesaexchangeu_EllipticCurvePrivateKey.exchangeDareturnuec.EllipticCurvePublicKeyu_EllipticCurvePrivateKey.public_keyDareturnuec.EllipticCurvePrivateNumbersaprivate_numbersu_EllipticCurvePrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnuserialization.Encodinguserialization.PrivateFormatuserialization.KeySerializationEncryptionabytesaprivate_bytesu_EllipticCurvePrivateKey.private_bytesDadataasignature_algorithmareturnabytesuec.EllipticCurveSignatureAlgorithmabytesasignu_EllipticCurvePrivateKey.signa__orig_bases__aEllipticCurvePublicKeyu_EllipticCurvePublicKey.__init__u_EllipticCurvePublicKey.curveu_EllipticCurvePublicKey.key_sizeDaotherareturnaobjectaboola__eq__u_EllipticCurvePublicKey.__eq__Dareturnuec.EllipticCurvePublicNumbersu_EllipticCurvePublicKey.public_numbersDaformatareturnuserialization.PublicFormatabytesu_EllipticCurvePublicKey._encode_pointDaencodingaformatareturnuserialization.Encodinguserialization.PublicFormatabytesapublic_bytesu_EllipticCurvePublicKey.public_bytesDasignatureadataasignature_algorithmareturnabytespuec.EllipticCurveSignatureAlgorithmaNoneaverifyu_EllipticCurvePublicKey.verifyucryptography\hazmat\backends\openssl\ec.pyu<module cryptography.hazmat.backends.openssl.ec>Ta__class__TaselfaotherTaselfabackendaec_key_cdataaevp_pkeyasnTabackendaec_cdataapointagroupTasignature_algorithmTabackendaec_keyagroupanidacurve_nameasnTabackendaprivate_keyadataamax_sizeasigbufasiglen_ptraresTabackendapublic_keyasignatureadataaresTaselfaformataconversionagroupapointabn_ctxabuflenabufaresTabackendaec_cdataTabackendasnTaselfTaselfaalgorithmapeer_public_keyTaselfaencodingaformataencryption_algorithmTaselfabnaprivate_valueTaselfaencodingaformatTaselfagroupacurve_nidapublic_ec_keyapointaresaevp_pkeyTaselfagroupapointabn_ctxabn_xabn_yareswxwyTaselfadataasignature_algorithmw_Taselfasignatureadataasignature_algorithmw_.cryptography.hazmat.backends.openssl.rsaa_salt_lengtha_MaxLengthacalculate_max_pss_salt_lengtha_DigestLengthadigest_sizea_AutoaRSAPrivateKeyuPSS salt length can only be set to AUTO when verifyinga_libaRSA_PSS_SALTLEN_AUTOaAsymmetricPaddinguPadding must be an instance of AsymmetricPadding.aPKCS1v15aRSA_PKCS1_PADDINGaOAEPaRSA_PKCS1_OAEP_PADDINGa_mgfaMGF1aUnsupportedAlgorithmuOnly MGF1 is supported by this backend.a_ReasonsaUNSUPPORTED_MGFarsa_padding_supporteduThis combination of padding and hash algorithm is not supported by this backend.aUNSUPPORTED_PADDINGanameuu is not supported by this backend.a_enc_dec_rsa_pkey_ctxabackendapaddinga_RSAPublicKeyaEVP_PKEY_encrypt_initaEVP_PKEY_encryptaEVP_PKEY_decrypt_initaEVP_PKEY_decryptaEVP_PKEY_CTX_newa_evp_pkeya_ffiaNULLaopenssl_assertagcaEVP_PKEY_CTX_freelaEVP_PKEY_CTX_set_rsa_paddinglaEVP_PKEY_sizea_evp_md_non_null_from_algorithma_algorithmaEVP_PKEY_CTX_set_rsa_mgf1_mdaEVP_PKEY_CTX_set_rsa_oaep_mda_labelaOPENSSL_mallocamemmoveaEVP_PKEY_CTX_set0_rsa_oaep_labelanewusize_t *uunsigned char[]abufferaERR_clear_erroruEncryption/decryption failed.uExpected provider of AsymmetricPadding.aPSSahashesaHashAlgorithmuExpected instance of hashes.HashAlgorithm.luDigest too large for key size. Use a larger key or different digest.aRSA_PKCS1_PSS_PADDINGa_rsa_sig_determine_paddinga_consume_errorsuUnable to sign/verify with this keyaEVP_PKEY_CTX_set_signature_mdu{} is not supported by this backend for RSA signing.aUNSUPPORTED_HASHu{} is not supported for the RSA signature operation.aEVP_PKEY_CTX_set_rsa_pss_saltlena_get_rsa_pss_salt_lengtha_rsa_sig_setupaEVP_PKEY_sign_initTusize_t *aEVP_PKEY_signuDigest or salt length too long for key size. Use a larger key or shorter salt length if you are specifying a PSS salt:nnnaEVP_PKEY_verify_initaEVP_PKEY_verifyaInvalidSignatureaEVP_PKEY_verify_recover_initaEVP_PKEY_verify_recoveraRSA_check_keyuInvalid private keyTuBIGNUM **aRSA_get0_factorsaBN_is_odda_backendarsa_cdataa_rsa_cdataa_blindedathreadingaLocka_blinding_lockaRSA_get0_keyaBN_num_bitsa_key_sizea__enter__a__exit__a_non_threadsafe_enable_blindingTnnnaRSA_blinding_ona_enable_blindingakey_sizelluCiphertext length must be equal to key size.a_enc_dec_rsaaRSAPublicKey_dupaRSA_freea_rsa_cdata_to_evp_pkeyaRSA_get0_crt_paramsaRSAPrivateNumbersa_bn_to_intaRSAPublicNumbersTwewnTwpwqwdadmp1admq1aiqmpapublic_numbersa_private_key_bytesa_calculate_digest_and_algorithmutoo many values to unpack (expected 2)a_rsa_sig_signaEVP_PKEY_cmpa_public_key_bytesa_rsa_sig_verifyaasym_utilsaPrehasheduPrehashed is only supported in the sign and verify methods. It cannot be used with recover_data_from_signature.a_rsa_sig_recovera__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.exceptionsTaInvalidSignatureaUnsupportedAlgorithma_Reasonsucryptography.hazmat.backends.openssl.utilsTa_calculate_digest_and_algorithmucryptography.hazmat.primitivesTahashesaserializationaserializationucryptography.hazmat.primitives.asymmetricTautilsautilsucryptography.hazmat.primitives.asymmetric.paddingTaMGF1aOAEPaPSSaAsymmetricPaddingaPKCS1v15a_Autoa_DigestLengtha_MaxLengthacalculate_max_pss_salt_lengthucryptography.hazmat.primitives.asymmetric.rsaTaRSAPrivateKeyaRSAPrivateNumbersaRSAPublicKeyaRSAPublicNumbersaRSAPublicKeyDabackendapssakeyahash_algorithmareturnaBackendaPSSutyping.Union[RSAPrivateKey, RSAPublicKey]uhashes.HashAlgorithmaintDabackendakeyadataapaddingareturnaBackendutyping.Union[_RSAPrivateKey, _RSAPublicKey]abytesaAsymmetricPaddingabytesDabackendakeyadataapadding_enumapaddingareturnaBackendutyping.Union[_RSAPrivateKey, _RSAPublicKey]abytesaintaAsymmetricPaddingabytesDabackendakeyapaddingaalgorithmareturnaBackendutyping.Union[_RSAPrivateKey, _RSAPublicKey]aAsymmetricPaddingutyping.Optional[hashes.HashAlgorithm]aintDabackendapaddingaalgorithmakeyainit_funcaBackendaAsymmetricPaddingutyping.Optional[hashes.HashAlgorithm]utyping.Union[_RSAPublicKey, _RSAPrivateKey]utyping.Callable[[typing.Any], int]Dabackendapaddingaalgorithmaprivate_keyadataareturnaBackendaAsymmetricPaddinguhashes.HashAlgorithma_RSAPrivateKeyabytespDabackendapaddingaalgorithmapublic_keyasignatureadataareturnaBackendaAsymmetricPaddinguhashes.HashAlgorithma_RSAPublicKeyabytespaNoneDabackendapaddingaalgorithmapublic_keyasignatureareturnaBackendaAsymmetricPaddingutyping.Optional[hashes.HashAlgorithm]a_RSAPublicKeyabytespa__prepare__a_RSAPrivateKeya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.backends.openssl.rsaa__module__a__qualname__a__annotations__aobjectaintDabackendaunsafe_skip_rsa_key_validationaBackendaboola__init__u_RSAPrivateKey.__init__DareturnaNoneu_RSAPrivateKey._enable_blindingu_RSAPrivateKey._non_threadsafe_enable_blindingapropertyDareturnaintu_RSAPrivateKey.key_sizeDaciphertextapaddingareturnabytesaAsymmetricPaddingabytesadecryptu_RSAPrivateKey.decryptDareturnaRSAPublicKeyapublic_keyu_RSAPrivateKey.public_keyDareturnaRSAPrivateNumbersaprivate_numbersu_RSAPrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnuserialization.Encodinguserialization.PrivateFormatuserialization.KeySerializationEncryptionabytesaprivate_bytesu_RSAPrivateKey.private_bytesDadataapaddingaalgorithmareturnabytesaAsymmetricPaddingutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]abytesasignu_RSAPrivateKey.signa__orig_bases__DabackendaBackendu_RSAPublicKey.__init__u_RSAPublicKey.key_sizeDaotherareturnaobjectaboola__eq__u_RSAPublicKey.__eq__DaplaintextapaddingareturnabytesaAsymmetricPaddingabytesaencryptu_RSAPublicKey.encryptDareturnaRSAPublicNumbersapublic_numbersu_RSAPublicKey.public_numbersDaencodingaformatareturnuserialization.Encodinguserialization.PublicFormatabytesapublic_bytesu_RSAPublicKey.public_bytesDasignatureadataapaddingaalgorithmareturnabytespaAsymmetricPaddingutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]aNoneaverifyu_RSAPublicKey.verifyDasignatureapaddingaalgorithmareturnabytesaAsymmetricPaddingutyping.Optional[hashes.HashAlgorithm]abytesarecover_data_from_signatureu_RSAPublicKey.recover_data_from_signatureucryptography\hazmat\backends\openssl\rsa.pyu<module cryptography.hazmat.backends.openssl.rsa>Ta__class__TaselfaotherTaselfabackendarsa_cdataaevp_pkeywnTaselfabackendarsa_cdataaevp_pkeyaunsafe_skip_rsa_key_validationaresaerrorswpwqap_oddaq_oddwnTaselfTabackendakeyadataapaddingapadding_enumTabackendakeyadataapadding_enumapaddingainitacryptapkey_ctxaresabuf_sizeamgf1_mdaoaep_mdalabelptraoutlenabufaresbufTabackendapssakeyahash_algorithmasaltTaselfaresTabackendakeyapaddingaalgorithmapkey_sizeapadding_enumTabackendapaddingaalgorithmapublic_keyasignatureapkey_ctxamaxlenabufabuflenaresaresbufTabackendapaddingaalgorithmakeyainit_funcapadding_enumapkey_ctxaresaerrorsaevp_mdamgf1_mdT
abackendapaddingaalgorithmaprivate_keyadataapkey_ctxabuflenaresabufaerrorsTabackendapaddingaalgorithmapublic_keyasignatureadataapkey_ctxaresTaselfaciphertextapaddingakey_size_bytesTaselfaplaintextapaddingTaselfaencodingaformataencryption_algorithmTaselfwnwewdwpwqadmp1admq1aiqmpTaselfaencodingaformatTaselfactxaevp_pkeyTaselfwnweTaselfasignatureapaddingaalgorithmTaselfadataapaddingaalgorithmTaselfasignatureadataapaddingaalgorithm.cryptography.hazmat.backends.openssl.utilsN4a_libaEVP_PKEY_CTX_newa_ffiaNULLaopenssl_assertagcaEVP_PKEY_CTX_freeaEVP_PKEY_derive_initlaCryptography_HAS_EVP_PKEY_SET_PEER_EXaEVP_PKEY_derive_set_peer_exa_evp_pkeylaEVP_PKEY_derive_set_peeranewTusize_t *aEVP_PKEY_deriveuunsigned char[]a_consume_errorsuError computing shared key.abuffer:nnnaPrehashedahashesaHashaupdateafinalizea_algorithmaalgorithmadigest_sizeuThe provided data must be the same length as the hash algorithm's digest size.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.hazmat.primitivesTahashesucryptography.hazmat.primitives.asymmetric.utilsTaPrehashedDabackendareturnaBackendabytesa_evp_pkey_deriveDadataaalgorithmareturnabytesutyping.Union[Prehashed, hashes.HashAlgorithm]utyping.Tuple[bytes, hashes.HashAlgorithm]a_calculate_digest_and_algorithmucryptography\hazmat\backends\openssl\utils.pyu<module cryptography.hazmat.backends.openssl.utils>Tadataaalgorithmahash_ctxTabackendaevp_pkeyapeer_public_keyactxaresakeylenabufaerrorsu.cryptography.hazmat.bindingsa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\bindingsTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingabindingsTaNUITKA_PACKAGE_cryptography_hazmat_bindingsu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ucryptography\hazmat\bindings\__init__.pyu<module cryptography.hazmat.bindings>u.cryptography.hazmat.bindings.openssl._conditionalaSSL_CTX_set_cert_cbaSSL_set_cert_cbLaSSL_ST_BEFOREaSSL_ST_OKaSSL_ST_INITaSSL_ST_RENEGOTIATEaTLS_ST_BEFOREaTLS_ST_OKaEVP_PKEY_DHXaCryptography_CRYPTO_set_mem_functionsaX509_STORE_set_get_issueraEVP_PKEY_ED448aNID_ED448aNID_ED25519aEVP_PKEY_ED25519aNID_poly1305aEVP_PKEY_POLY1305aEVP_DigestFinalXOFaFIPS_mode_setaFIPS_modeaSSL_CTX_set1_sigalgs_listaSSL_CTX_use_psk_identity_hintaSSL_CTX_set_psk_server_callbackaSSL_CTX_set_psk_client_callbackLaSSL_CTX_set_psk_find_session_callbackaSSL_CTX_set_psk_use_session_callbackaCryptography_SSL_SESSION_newaSSL_CIPHER_findaSSL_SESSION_set1_master_keyaSSL_SESSION_set_cipheraSSL_SESSION_set_protocol_versionaSSL_CTX_add_client_custom_extaSSL_CTX_add_server_custom_extaSSL_extension_supportedLaSSL_VERIFY_POST_HANDSHAKEaSSL_CTX_set_ciphersuitesaSSL_verify_client_post_handshakeaSSL_CTX_set_post_handshake_authaSSL_set_post_handshake_authaSSL_SESSION_get_max_early_dataaSSL_write_early_dataaSSL_read_early_dataaSSL_CTX_set_max_early_dataLaEVP_PKEY_new_raw_private_keyaEVP_PKEY_new_raw_public_keyaEVP_PKEY_get_raw_private_keyaEVP_PKEY_get_raw_public_keyLaENGINE_by_idaENGINE_initaENGINE_finishaENGINE_get_default_RANDaENGINE_set_default_RANDaENGINE_unregister_RANDaENGINE_ctrl_cmdaENGINE_freeaENGINE_get_nameaENGINE_ctrl_cmd_stringaENGINE_load_builtin_enginesaENGINE_load_private_keyaENGINE_load_public_keyaSSL_CTX_set_client_cert_engineaSSL_get0_verified_chainaSSL_CTX_set_tlsext_use_srtpaSSL_set_tlsext_use_srtpaSSL_get_selected_srtp_profileLaOSSL_PROVIDER_loadaOSSL_PROVIDER_unloadaERR_LIB_PROVaPROV_R_WRONG_FINAL_BLOCK_LENGTHaPROV_R_BAD_DECRYPTaSSL_OP_NO_RENEGOTIATIONaDTLS_get_data_mtuaEVP_default_properties_is_fips_enabledaEVP_default_properties_enable_fipsLaSSL_OP_COOKIE_EXCHANGEaDTLSv1_listenaSSL_CTX_set_cookie_generate_cbaSSL_CTX_set_cookie_verify_cbLaSMIME_write_PKCS7aPEM_write_bio_PKCS7_streamaPKCS7_sign_add_signeraPKCS7_finalaPKCS7_verifyaSMIME_read_PKCS7aPKCS7_get0_signersaBN_FLG_CONSTTIMEaBN_set_flagsaBN_prime_checks_for_sizeaEVP_PKEY_set1_DHaEVP_CIPHER_fetchaEVP_CIPHER_freeaSSL_R_UNEXPECTED_EOF_WHILE_READINGaPKCS12_set_macaSSL_OP_IGNORE_UNEXPECTED_EOFaSSL_get_extms_supportaEVP_PKEY_derive_set_peer_exLaEVP_aead_chacha20_poly1305aEVP_AEAD_CTX_freeaEVP_AEAD_CTX_sealaEVP_AEAD_CTX_openaEVP_AEAD_max_overheadaCryptography_EVP_AEAD_CTX_newa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingDareturnutyping.List[str]acryptography_has_set_cert_cbacryptography_has_ssl_stacryptography_has_tls_stacryptography_has_evp_pkey_dhxacryptography_has_mem_functionsacryptography_has_x509_store_ctx_get_issueracryptography_has_ed448acryptography_has_ed25519acryptography_has_poly1305acryptography_has_evp_digestfinal_xofacryptography_has_fipsacryptography_has_ssl_sigalgsacryptography_has_pskacryptography_has_psk_tlsv13acryptography_has_custom_extacryptography_has_tlsv13_functionsacryptography_has_raw_keyacryptography_has_engineacryptography_has_verified_chainacryptography_has_srtpacryptography_has_providersacryptography_has_op_no_renegotiationacryptography_has_dtls_get_data_mtuacryptography_has_300_fipsacryptography_has_ssl_cookieacryptography_has_pkcs7_funcsacryptography_has_bn_flagsacryptography_has_evp_pkey_dhacryptography_has_300_evp_cipheracryptography_has_unexpected_eof_while_readingacryptography_has_pkcs12_set_macacryptography_has_ssl_op_ignore_unexpected_eofacryptography_has_get_extms_supportacryptography_has_evp_pkey_set_peer_exacryptography_has_evp_aeadaCryptography_HAS_SET_CERT_CBaCryptography_HAS_SSL_STaCryptography_HAS_TLS_STaCryptography_HAS_EVP_PKEY_DHXaCryptography_HAS_MEM_FUNCTIONSaCryptography_HAS_X509_STORE_CTX_GET_ISSUERaCryptography_HAS_ED448aCryptography_HAS_ED25519aCryptography_HAS_POLY1305aCryptography_HAS_FIPSaCryptography_HAS_SIGALGSaCryptography_HAS_PSKaCryptography_HAS_PSK_TLSv1_3aCryptography_HAS_CUSTOM_EXTaCryptography_HAS_TLSv1_3_FUNCTIONSaCryptography_HAS_RAW_KEYaCryptography_HAS_EVP_DIGESTFINAL_XOFaCryptography_HAS_ENGINEaCryptography_HAS_VERIFIED_CHAINaCryptography_HAS_SRTPaCryptography_HAS_PROVIDERSaCryptography_HAS_OP_NO_RENEGOTIATIONaCryptography_HAS_DTLS_GET_DATA_MTUaCryptography_HAS_300_FIPSaCryptography_HAS_SSL_COOKIEaCryptography_HAS_PKCS7_FUNCSaCryptography_HAS_BN_FLAGSaCryptography_HAS_EVP_PKEY_DHaCryptography_HAS_300_EVP_CIPHERaCryptography_HAS_UNEXPECTED_EOF_WHILE_READINGaCryptography_HAS_PKCS12_SET_MACaCryptography_HAS_SSL_OP_IGNORE_UNEXPECTED_EOFaCryptography_HAS_GET_EXTMS_SUPPORTaCryptography_HAS_EVP_PKEY_SET_PEER_EXaCryptography_HAS_EVP_AEADaCONDITIONAL_NAMESucryptography\hazmat\bindings\openssl\_conditional.pyu<module cryptography.hazmat.bindings.openssl._conditional>u.cryptography.hazmat.bindings.openssl.bindingwoaopensslacapture_error_stackaInternalErroruUnknown OpenSSL error. This error is commonly encountered when another library is not cleaning up the OpenSSL error stack. If you are using cryptography with another library that uses OpenSSL try disabling it before reporting a bug. Otherwise please file an issue at https://github.com/pyca/cryptography/issues with information on how to reproduce this. ({!r})uOpenSSL 3.0's legacy provider failed to load. This is a fatal error by default, but cryptography supports running without legacy algorithms by setting the environment variable CRYPTOGRAPHY_OPENSSL_NO_LEGACY. If you did not expect this error, you have likely made a mistake with your OpenSSL configuration.atypesaModuleTypeTaliba_original_libaitemsutoo many values to unpack (expected 2)aexcluded_namesaupdatea_ensure_ffi_initializeda_openssl_assertalibaCRYPTOGRAPHY_OPENSSL_300_OR_GREATERaOSSL_PROVIDER_loadaffiaNULLcbasea_base_providercfipsa_fips_provideraEVP_default_properties_enable_fipsla_init_locka__enter__a__exit__a_lib_loadedabuild_conditional_librarya_opensslaCONDITIONAL_NAMESaosaenvironagetTaCRYPTOGRAPHY_OPENSSL_NO_LEGACYclegacya_legacy_providera_legacy_provider_loadeda_legacy_provider_errorcdefaulta_default_providerTnnnastringaCRYPTOGRAPHY_PACKAGE_VERSIONaencodeTaasciiuThe version of cryptography does not match the loaded shared object. This can happen if you have multiple copies of cryptography installed in your Python path. Please try creating a new virtual environment to resolve this issue. Loaded python version: {}, shared object version: {}aOpenSSL_version_numaopenssl_versiona__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsasysathreadinglatypingawarningsacryptographyucryptography.exceptionsTaInternalErrorucryptography.hazmat.bindings._rustTa_opensslaopensslucryptography.hazmat.bindings.openssl._conditionalTaCONDITIONAL_NAMESTnDaokaerrorsareturnaboolutyping.Optional[typing.List[openssl.OpenSSLError]]aNoneDaloadedareturnaboolaNoneDalibaconditional_namesareturnutyping.Anyutyping.Dict[str, typing.Callable[[], typing.List[str]]]utyping.Anyucryptography.hazmat.bindings.openssl.bindinga__module__u
    OpenSSL API wrapper.
    aBindinga__qualname__a__annotations__utyping.ClassVaraLockutyping.AnyDareturnaNonea__init__uBinding.__init__a_enable_fipsuBinding._enable_fipsuBinding._ensure_ffi_initializedainit_static_locksuBinding.init_static_locksTDaversionareturnastraNonea_verify_package_versiona__version__TaPROCESSOR_ARCHITEW6432awarnuYou are using cryptography on a 32-bit Python on a 64-bit Windows Operating System. Cryptography will be significantly faster if you switch to using a 64-bit Python.aUserWarningDastacklevellucryptography\hazmat\bindings\openssl\binding.pyu<module cryptography.hazmat.bindings.openssl.binding>Ta__class__TaselfTaselfaresTaclsTaloadedTalibaokaerrorsTaversionaso_package_versionTalibaconditional_namesaconditional_libaexcluded_namesaconditionanames_cbaattru.cryptography.hazmat.bindings.openssla__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\bindings\opensslTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingubindings\opensslTaNUITKA_PACKAGE_cryptography_hazmat_bindingsu\not_existingaopensslTaNUITKA_PACKAGE_cryptography_hazmat_bindings_opensslu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ucryptography\hazmat\bindings\openssl\__init__.pyu<module cryptography.hazmat.bindings.openssl>u.cryptography.hazmatOa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existingahazmatTaNUITKA_PACKAGE_cryptography_hazmatu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography\hazmat\__init__.pyu<module cryptography.hazmat>u.cryptography.hazmat.primitives._asymmetric[!a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclametaclassaABCMetaa__prepare__TaAsymmetricPaddingTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives._asymmetrica__module__aAsymmetricPaddinga__qualname__apropertyaabstractmethodDareturnastru
        A string naming this padding (e.g. "PSS", "PKCS1").
        anameuAsymmetricPadding.nameTucryptography\hazmat\primitives\_asymmetric.pyu<module cryptography.hazmat.primitives._asymmetric>Ta__class__Taselfu.cryptography.hazmat.primitives._cipheralgorithm@2a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypingametaclassaABCMetaa__prepare__TaCipherAlgorithmTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives._cipheralgorithma__module__aCipherAlgorithma__qualname__apropertyaabstractmethodDareturnastru
        A string naming this mode (e.g. "AES", "Camellia").
        anameuCipherAlgorithm.nameDareturnutyping.FrozenSet[int]u
        Valid key sizes for this algorithm in bits
        akey_sizesuCipherAlgorithm.key_sizesDareturnaintu
        The size of the key being used as an integer in bits (e.g. 128, 256).
        akey_sizeuCipherAlgorithm.key_sizeTaBlockCipherAlgorithma__annotations__abytesakeyu
        The size of a block as an integer in bits (e.g. 64, 128).
        ablock_sizeuBlockCipherAlgorithm.block_sizea__orig_bases__ucryptography\hazmat\primitives\_cipheralgorithm.pyu<module cryptography.hazmat.primitives._cipheralgorithm>Ta__class__Taselfu.cryptography.hazmat.primitives._serializationraPrivateFormataOpenSSHaPKCS12uencryption_builder only supported with PrivateFormat.OpenSSH and PrivateFormat.PKCS12aKeySerializationEncryptionBuilderuPassword must be 1 or more bytes.apassworda_formata_kdf_roundsa_hmac_hasha_key_cert_algorithmukdf_rounds already setukdf_rounds must be an integerlukdf_rounds must be a positive integerTa_kdf_roundsa_hmac_hasha_key_cert_algorithmuhmac_hash only supported with PrivateFormat.PKCS12uhmac_hash already setukey_cert_algorithm only supported with PrivateFormat.PKCS12ukey_cert_algorithm already seta_KeySerializationEncryptionTakdf_roundsahmac_hashakey_cert_algorithma__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypingacryptographyTautilsautilsucryptography.hazmat.primitives.hashesTaHashAlgorithmaHashAlgorithmaEnuma__prepare__aPBESa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives._serializationa__module__a__qualname__uPBESv1 using SHA1 and 3-Key TripleDESaPBESv1SHA1And3KeyTripleDESCBCuPBESv2 using SHA256 PBKDF2 and AES256 CBCaPBESv2SHA256AndAES256CBCa__orig_bases__aEncodingaPEMaDERaRawuANSI X9.62aX962uS/MIMEaSMIMEaPKCS8aTraditionalOpenSSLDareturnaKeySerializationEncryptionBuilderaencryption_builderuPrivateFormat.encryption_builderaPublicFormatuX.509 subjectPublicKeyInfo with PKCS#1aSubjectPublicKeyInfouRaw PKCS#1aPKCS1uX9.62 Compressed PointaCompressedPointuX9.62 Uncompressed PointaUncompressedPointaParameterFormataPKCS3ametaclassaABCMetaTaKeySerializationEncryptionTaKeySerializationEncryptionTaBestAvailableEncryptionDapasswordabytesa__init__uBestAvailableEncryption.__init__aNoEncryptionDa_kdf_roundsa_hmac_hasha_key_cert_algorithmnnnDaformata_kdf_roundsa_hmac_hasha_key_cert_algorithmareturnaPrivateFormatutyping.Optional[int]utyping.Optional[HashAlgorithm]utyping.Optional[PBES]aNoneuKeySerializationEncryptionBuilder.__init__DaroundsareturnaintaKeySerializationEncryptionBuilderakdf_roundsuKeySerializationEncryptionBuilder.kdf_roundsDaalgorithmareturnaHashAlgorithmaKeySerializationEncryptionBuilderahmac_hashuKeySerializationEncryptionBuilder.hmac_hashDaalgorithmareturnaPBESaKeySerializationEncryptionBuilderakey_cert_algorithmuKeySerializationEncryptionBuilder.key_cert_algorithmDapasswordareturnabytesaKeySerializationEncryptionabuilduKeySerializationEncryptionBuilder.buildDaformatapasswordakdf_roundsahmac_hashakey_cert_algorithmaPrivateFormatabytesutyping.Optional[int]utyping.Optional[HashAlgorithm]utyping.Optional[PBES]u_KeySerializationEncryption.__init__ucryptography\hazmat\primitives\_serialization.pyu<module cryptography.hazmat.primitives._serialization>Ta__class__Taselfaformata_kdf_roundsa_hmac_hasha_key_cert_algorithmTaselfaformatapasswordakdf_roundsahmac_hashakey_cert_algorithmTaselfapasswordTaselfTaselfaalgorithmTaselfaroundsu.cryptography.hazmat.primitives.asymmetric8a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\primitives\asymmetricTaNUITKA_PACKAGE_cryptography_hazmatu\not_existinguprimitives\asymmetricTaNUITKA_PACKAGE_cryptography_hazmat_primitivesu\not_existingaasymmetricTaNUITKA_PACKAGE_cryptography_hazmat_primitives_asymmetricu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ucryptography\hazmat\primitives\asymmetric\__init__.pyu<module cryptography.hazmat.primitives.asymmetric>u.cryptography.hazmat.primitives.asymmetric.dhucryptography.hazmat.backends.openssl.backendTabackendlabackendagenerate_dh_parametersup and g must be integersuq must be integer or NoneluDH generator must be 2 or greaterabit_lengtharust_openssladhaMIN_MODULUS_SIZEup (modulus) must be at least uu-bita_pa_ga_qaDHParameterNumbersaload_dh_parameter_numbersuy must be an integer.uparameters must be an instance of DHParameterNumbers.a_ya_parameter_numbersaDHPublicNumbersaload_dh_public_numbersux must be an integer.upublic_numbers must be an instance of DHPublicNumbers.a_xa_public_numbersaDHPrivateNumbersaload_dh_private_numbersa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingucryptography.hazmat.bindings._rustTaopensslaopensslucryptography.hazmat.primitivesTa_serializationa_serializationTnDageneratorakey_sizeabackendareturnaintputyping.AnyaDHParametersagenerate_parametersucryptography.hazmat.primitives.asymmetric.dha__module__a__qualname__Dwpwgwqareturnaintputyping.Optional[int]aNonea__init__uDHParameterNumbers.__init__Daotherareturnaobjectaboola__eq__uDHParameterNumbers.__eq__Dabackendareturnutyping.AnyaDHParametersaparametersuDHParameterNumbers.parametersDareturnaintwpuDHParameterNumbers.pwguDHParameterNumbers.gDareturnutyping.Optional[int]wquDHParameterNumbers.qTDwyaparameter_numbersareturnaintaDHParameterNumbersaNoneuDHPublicNumbers.__init__uDHPublicNumbers.__eq__Dabackendareturnutyping.AnyaDHPublicKeyapublic_keyuDHPublicNumbers.public_keywyuDHPublicNumbers.yDareturnaDHParameterNumbersaparameter_numbersuDHPublicNumbers.parameter_numbersDwxapublic_numbersareturnaintaDHPublicNumbersaNoneuDHPrivateNumbers.__init__uDHPrivateNumbers.__eq__Dabackendareturnutyping.AnyaDHPrivateKeyaprivate_keyuDHPrivateNumbers.private_keyDareturnaDHPublicNumbersapublic_numbersuDHPrivateNumbers.public_numberswxuDHPrivateNumbers.xametaclassaABCMetaa__prepare__TaDHParametersTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>aDHParametersaabstractmethodDareturnaDHPrivateKeyu
        Generates and returns a DHPrivateKey.
        agenerate_private_keyuDHParameters.generate_private_keyDaencodingaformatareturnu_serialization.Encodingu_serialization.ParameterFormatabytesu
        Returns the parameters serialized as bytes.
        aparameter_bytesuDHParameters.parameter_bytesu
        Returns a DHParameterNumbers.
        uDHParameters.parameter_numbersaDHParametersWithSerializationaregisterTaDHPublicKeyTaDHPublicKeyapropertyu
        The bit length of the prime modulus.
        akey_sizeuDHPublicKey.key_sizeDareturnaDHParametersu
        The DHParameters object associated with this public key.
        uDHPublicKey.parametersu
        Returns a DHPublicNumbers.
        uDHPublicKey.public_numbersDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        Returns the key serialized as bytes.
        apublic_bytesuDHPublicKey.public_bytesu
        Checks equality.
        uDHPublicKey.__eq__aDHPublicKeyWithSerializationTaDHPrivateKeyTaDHPrivateKeyuDHPrivateKey.key_sizeDareturnaDHPublicKeyu
        The DHPublicKey associated with this private key.
        uDHPrivateKey.public_keyu
        The DHParameters object associated with this private key.
        uDHPrivateKey.parametersDapeer_public_keyareturnaDHPublicKeyabytesu
        Given peer's DHPublicKey, carry out the key exchange and
        return shared key as bytes.
        aexchangeuDHPrivateKey.exchangeDareturnaDHPrivateNumbersu
        Returns a DHPrivateNumbers.
        aprivate_numbersuDHPrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesaprivate_bytesuDHPrivateKey.private_bytesaDHPrivateKeyWithSerializationucryptography\hazmat\primitives\asymmetric\dh.pyu<module cryptography.hazmat.primitives.asymmetric.dh>Ta__class__TaselfaotherTaselfwpwgwqTaselfwxapublic_numbersTaselfwyaparameter_numbersTaselfapeer_public_keyTaselfTageneratorakey_sizeabackendaosslTaselfaencodingaformatTaselfabackendaosslTaselfaencodingaformataencryption_algorithm.cryptography.hazmat.primitives.asymmetric.dsauDSAParameterNumbers p, q, and g arguments must be integers.a_pa_qa_gucryptography.hazmat.backends.openssl.backendTabackendlabackendaload_dsa_parameter_numbersaDSAParameterNumberswpwqwgu<DSAParameterNumbers(p={self.p}, q={self.q}, g={self.g})>TaselfuDSAPublicNumbers y argument must be an integer.uparameter_numbers must be a DSAParameterNumbers instance.a_ya_parameter_numbersaload_dsa_public_numbersaDSAPublicNumberswyaparameter_numbersu<DSAPublicNumbers(y={self.y}, parameter_numbers={self.parameter_numbers})>uDSAPrivateNumbers x argument must be an integer.upublic_numbers must be a DSAPublicNumbers instance.a_public_numbersa_xaload_dsa_private_numbersaDSAPrivateNumberswxapublic_numbersagenerate_dsa_parametersagenerate_dsa_private_key_and_parametersabit_lengthLllllup must be exactly 1024, 2048, 3072, or 4096 bits longllluq must be exactly 160, 224, or 256 bits longlug, p don't satisfy 1 < g < p.a_check_dsa_parametersux must be > 0 and < q.apowuy must be equal to (g ** x % p).a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslucryptography.hazmat.primitivesTa_serializationahashesa_serializationahashesucryptography.hazmat.primitives.asymmetricTautilsautilsaasym_utilsametaclassaABCMetaa__prepare__TaDSAParametersTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.dsaa__module__aDSAParametersa__qualname__aabstractmethodDareturnaDSAPrivateKeyu
        Generates and returns a DSAPrivateKey.
        agenerate_private_keyuDSAParameters.generate_private_keyDareturnaDSAParameterNumbersu
        Returns a DSAParameterNumbers.
        uDSAParameters.parameter_numbersTaDSAParametersWithNumbersaregisteradsaTaDSAPrivateKeyTaDSAPrivateKeyapropertyDareturnaintu
        The bit length of the prime modulus.
        akey_sizeuDSAPrivateKey.key_sizeDareturnaDSAPublicKeyu
        The DSAPublicKey associated with this private key.
        apublic_keyuDSAPrivateKey.public_keyDareturnaDSAParametersu
        The DSAParameters object associated with this private key.
        aparametersuDSAPrivateKey.parametersDadataaalgorithmareturnabytesutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]abytesu
        Signs the data
        asignuDSAPrivateKey.signDareturnaDSAPrivateNumbersu
        Returns a DSAPrivateNumbers.
        aprivate_numbersuDSAPrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        Returns the key serialized as bytes.
        aprivate_bytesuDSAPrivateKey.private_bytesaDSAPrivateKeyWithSerializationTaDSAPublicKeyTaDSAPublicKeyuDSAPublicKey.key_sizeu
        The DSAParameters object associated with this public key.
        uDSAPublicKey.parametersDareturnaDSAPublicNumbersu
        Returns a DSAPublicNumbers.
        uDSAPublicKey.public_numbersDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesapublic_bytesuDSAPublicKey.public_bytesDasignatureadataaalgorithmareturnabytesputyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]aNoneu
        Verifies the signature of the data.
        averifyuDSAPublicKey.verifyDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uDSAPublicKey.__eq__aDSAPublicKeyWithSerializationDwpwqwgaintppa__init__uDSAParameterNumbers.__init__uDSAParameterNumbers.puDSAParameterNumbers.quDSAParameterNumbers.gTnDabackendareturnutyping.AnyaDSAParametersuDSAParameterNumbers.parametersuDSAParameterNumbers.__eq__Dareturnastra__repr__uDSAParameterNumbers.__repr__Dwyaparameter_numbersaintaDSAParameterNumbersuDSAPublicNumbers.__init__uDSAPublicNumbers.yuDSAPublicNumbers.parameter_numbersDabackendareturnutyping.AnyaDSAPublicKeyuDSAPublicNumbers.public_keyuDSAPublicNumbers.__eq__uDSAPublicNumbers.__repr__Dwxapublic_numbersaintaDSAPublicNumbersuDSAPrivateNumbers.__init__uDSAPrivateNumbers.xuDSAPrivateNumbers.public_numbersDabackendareturnutyping.AnyaDSAPrivateKeyaprivate_keyuDSAPrivateNumbers.private_keyuDSAPrivateNumbers.__eq__Dakey_sizeabackendareturnaintutyping.AnyaDSAParametersagenerate_parametersDakey_sizeabackendareturnaintutyping.AnyaDSAPrivateKeyDaparametersareturnaDSAParameterNumbersaNoneDanumbersareturnaDSAPrivateNumbersaNonea_check_dsa_private_numbersucryptography\hazmat\primitives\asymmetric\dsa.pyu<module cryptography.hazmat.primitives.asymmetric.dsa>Ta__class__TaselfaotherTaselfwpwqwgTaselfwxapublic_numbersTaselfwyaparameter_numbersTaparametersTanumbersaparametersTakey_sizeabackendaosslTaselfabackendaosslTaselfaencodingaformataencryption_algorithmTaselfaencodingaformatTaselfadataaalgorithmTaselfasignatureadataaalgorithmu.cryptography.hazmat.primitives.asymmetric.ecautilsa_check_bytesadataaEllipticCurveucurve must be an EllipticCurve instanceudata must not be an empty byte stringlllluUnsupported elliptic curve point typeucryptography.hazmat.backends.openssl.backendTabackendabackendaload_elliptic_curve_public_bytesa_algorithmagenerate_elliptic_curve_private_keyuprivate_value must be an integer type.uprivate_value must be a positive integer.ucurve must provide the EllipticCurve interface.aderive_elliptic_curve_private_keyux and y must be integers.a_ya_xa_curveaload_elliptic_curve_public_numbersaEllipticCurvePublicNumberswxwyacurveanameakey_sizeu<EllipticCurvePublicNumbers(curve={0.curve.name}, x={0.x}, y={0.y}>uprivate_value must be an integer.upublic_numbers must be an EllipticCurvePublicNumbers instance.a_private_valuea_public_numbersaload_elliptic_curve_private_numbersaEllipticCurvePrivateNumbersaprivate_valueapublic_numbersa_OID_TO_CURVEuThe provided object identifier has no matching elliptic curve classa__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsaabcatypingacryptographyTautilsucryptography.hazmat._oidTaObjectIdentifieraObjectIdentifierucryptography.hazmat.primitivesTa_serializationahashesa_serializationahashesucryptography.hazmat.primitives.asymmetricaasym_utilsucryptography.hazmat.primitives.asymmetric.eca__module__aEllipticCurveOIDa__qualname__Tu1.2.840.10045.3.1.1aSECP192R1Tu1.3.132.0.33aSECP224R1Tu1.3.132.0.10aSECP256K1Tu1.2.840.10045.3.1.7aSECP256R1Tu1.3.132.0.34aSECP384R1Tu1.3.132.0.35aSECP521R1Tu1.3.36.3.3.2.8.1.1.7aBRAINPOOLP256R1Tu1.3.36.3.3.2.8.1.1.11aBRAINPOOLP384R1Tu1.3.36.3.3.2.8.1.1.13aBRAINPOOLP512R1Tu1.3.132.0.1aSECT163K1Tu1.3.132.0.15aSECT163R2Tu1.3.132.0.26aSECT233K1Tu1.3.132.0.27aSECT233R1Tu1.3.132.0.16aSECT283K1Tu1.3.132.0.17aSECT283R1Tu1.3.132.0.36aSECT409K1Tu1.3.132.0.37aSECT409R1Tu1.3.132.0.38aSECT571K1Tu1.3.132.0.39aSECT571R1TametaclassaABCMetaa__prepare__TaEllipticCurveTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>apropertyaabstractmethodDareturnastru
        The name of the curve. e.g. secp256r1.
        uEllipticCurve.nameDareturnaintu
        Bit size of a secret scalar for the curve.
        uEllipticCurve.key_sizeTaEllipticCurveSignatureAlgorithmTaEllipticCurveSignatureAlgorithmDareturnutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]u
        The digest algorithm used with this signature.
        aalgorithmuEllipticCurveSignatureAlgorithm.algorithmTaEllipticCurvePrivateKeyTaEllipticCurvePrivateKeyDaalgorithmapeer_public_keyareturnaECDHaEllipticCurvePublicKeyabytesu
        Performs a key exchange operation using the provided algorithm with the
        provided peer's public key.
        aexchangeuEllipticCurvePrivateKey.exchangeDareturnaEllipticCurvePublicKeyu
        The EllipticCurvePublicKey for this private key.
        apublic_keyuEllipticCurvePrivateKey.public_keyDareturnaEllipticCurveu
        The EllipticCurve that this key is on.
        uEllipticCurvePrivateKey.curveuEllipticCurvePrivateKey.key_sizeDadataasignature_algorithmareturnabytesaEllipticCurveSignatureAlgorithmabytesu
        Signs the data
        asignuEllipticCurvePrivateKey.signDareturnaEllipticCurvePrivateNumbersu
        Returns an EllipticCurvePrivateNumbers.
        aprivate_numbersuEllipticCurvePrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        Returns the key serialized as bytes.
        aprivate_bytesuEllipticCurvePrivateKey.private_bytesaEllipticCurvePrivateKeyWithSerializationTaEllipticCurvePublicKeyTaEllipticCurvePublicKeyuEllipticCurvePublicKey.curveuEllipticCurvePublicKey.key_sizeDareturnaEllipticCurvePublicNumbersu
        Returns an EllipticCurvePublicNumbers.
        uEllipticCurvePublicKey.public_numbersDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesapublic_bytesuEllipticCurvePublicKey.public_bytesDasignatureadataasignature_algorithmareturnabytespaEllipticCurveSignatureAlgorithmaNoneu
        Verifies the signature of the data.
        averifyuEllipticCurvePublicKey.verifyaclassmethodDacurveadataareturnaEllipticCurveabytesaEllipticCurvePublicKeyafrom_encoded_pointuEllipticCurvePublicKey.from_encoded_pointDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uEllipticCurvePublicKey.__eq__aEllipticCurvePublicKeyWithSerializationasect571r1l:a__orig_bases__asect409r1lasect283r1lasect233r1lasect163r2lasect571k1l;asect409k1asect283k1asect233k1asect163k1asecp521r1lasecp384r1lasecp256r1lasecp256k1asecp224r1lasecp192r1laBrainpoolP256R1abrainpoolP256r1aBrainpoolP384R1abrainpoolP384r1aBrainpoolP512R1abrainpoolP512r1laprime192v1aprime256v1a_CURVE_TYPESutyping.Dict[str, typing.Type[EllipticCurve]]aECDSADaalgorithmutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]a__init__uECDSA.__init__uECDSA.algorithmTnDacurveabackendareturnaEllipticCurveutyping.AnyaEllipticCurvePrivateKeyagenerate_private_keyDaprivate_valueacurveabackendareturnaintaEllipticCurveutyping.AnyaEllipticCurvePrivateKeyaderive_private_keyDwxwyacurveaintpaEllipticCurveuEllipticCurvePublicNumbers.__init__Dabackendareturnutyping.AnyaEllipticCurvePublicKeyuEllipticCurvePublicNumbers.public_keyuEllipticCurvePublicNumbers.curveuEllipticCurvePublicNumbers.xuEllipticCurvePublicNumbers.yuEllipticCurvePublicNumbers.__eq__a__hash__uEllipticCurvePublicNumbers.__hash__a__repr__uEllipticCurvePublicNumbers.__repr__Daprivate_valueapublic_numbersaintaEllipticCurvePublicNumbersuEllipticCurvePrivateNumbers.__init__Dabackendareturnutyping.AnyaEllipticCurvePrivateKeyaprivate_keyuEllipticCurvePrivateNumbers.private_keyuEllipticCurvePrivateNumbers.private_valueuEllipticCurvePrivateNumbers.public_numbersuEllipticCurvePrivateNumbers.__eq__uEllipticCurvePrivateNumbers.__hash__aECDHDaoidareturnaObjectIdentifierutyping.Type[EllipticCurve]aget_curve_for_oiducryptography\hazmat\primitives\asymmetric\ec.pyu<module cryptography.hazmat.primitives.asymmetric.ec>Ta__class__TaselfaotherTaselfTaselfaalgorithmTaselfaprivate_valueapublic_numbersTaselfwxwyacurveTaprivate_valueacurveabackendaosslTaselfaalgorithmapeer_public_keyTaclsacurveadataabackendTacurveabackendaosslTaoidTaselfaencodingaformataencryption_algorithmTaselfabackendaosslTaselfaencodingaformatTaselfadataasignature_algorithmTaselfasignatureadataasignature_algorithmu.cryptography.hazmat.primitives.asymmetric.ed25519
eucryptography.hazmat.backends.openssl.backendTabackendlabackendaed25519_supportedaUnsupportedAlgorithmued25519 is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_PUBLIC_KEY_ALGORITHMaed25519_load_public_bytesaed25519_generate_keyaed25519_load_private_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslucryptography.hazmat.primitivesTa_serializationa_serializationametaclassaABCMetaa__prepare__TaEd25519PublicKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.ed25519a__module__aEd25519PublicKeya__qualname__aclassmethodDadataareturnabytesaEd25519PublicKeyafrom_public_bytesuEd25519PublicKey.from_public_bytesaabstractmethodDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        The serialized bytes of the public key.
        apublic_bytesuEd25519PublicKey.public_bytesDareturnabytesu
        The raw bytes of the public key.
        Equivalent to public_bytes(Raw, Raw).
        apublic_bytes_rawuEd25519PublicKey.public_bytes_rawDasignatureadataareturnabytespaNoneu
        Verify the signature.
        averifyuEd25519PublicKey.verifyDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uEd25519PublicKey.__eq__Taed25519aregisterTaEd25519PrivateKeyTaEd25519PrivateKeyDareturnaEd25519PrivateKeyagenerateuEd25519PrivateKey.generateDadataareturnabytesaEd25519PrivateKeyafrom_private_bytesuEd25519PrivateKey.from_private_bytesDareturnaEd25519PublicKeyu
        The Ed25519PublicKey derived from the private key.
        apublic_keyuEd25519PrivateKey.public_keyDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        The serialized bytes of the private key.
        aprivate_bytesuEd25519PrivateKey.private_bytesu
        The raw bytes of the private key.
        Equivalent to private_bytes(Raw, Raw, NoEncryption()).
        aprivate_bytes_rawuEd25519PrivateKey.private_bytes_rawDadataareturnabytespu
        Signs the data.
        asignuEd25519PrivateKey.signax25519ucryptography\hazmat\primitives\asymmetric\ed25519.pyu<module cryptography.hazmat.primitives.asymmetric.ed25519>Ta__class__TaselfaotherTaclsadataabackendTaclsabackendTaselfaencodingaformataencryption_algorithmTaselfTaselfaencodingaformatTaselfadataTaselfasignatureadatau.cryptography.hazmat.primitives.asymmetric.ed448
eucryptography.hazmat.backends.openssl.backendTabackendlabackendaed448_supportedaUnsupportedAlgorithmued448 is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_PUBLIC_KEY_ALGORITHMaed448_load_public_bytesaed448_generate_keyaed448_load_private_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslucryptography.hazmat.primitivesTa_serializationa_serializationametaclassaABCMetaa__prepare__TaEd448PublicKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.ed448a__module__aEd448PublicKeya__qualname__aclassmethodDadataareturnabytesaEd448PublicKeyafrom_public_bytesuEd448PublicKey.from_public_bytesaabstractmethodDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        The serialized bytes of the public key.
        apublic_bytesuEd448PublicKey.public_bytesDareturnabytesu
        The raw bytes of the public key.
        Equivalent to public_bytes(Raw, Raw).
        apublic_bytes_rawuEd448PublicKey.public_bytes_rawDasignatureadataareturnabytespaNoneu
        Verify the signature.
        averifyuEd448PublicKey.verifyDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uEd448PublicKey.__eq__Taed448aregisterTaEd448PrivateKeyTaEd448PrivateKeyDareturnaEd448PrivateKeyagenerateuEd448PrivateKey.generateDadataareturnabytesaEd448PrivateKeyafrom_private_bytesuEd448PrivateKey.from_private_bytesDareturnaEd448PublicKeyu
        The Ed448PublicKey derived from the private key.
        apublic_keyuEd448PrivateKey.public_keyDadataareturnabytespu
        Signs the data.
        asignuEd448PrivateKey.signDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        The serialized bytes of the private key.
        aprivate_bytesuEd448PrivateKey.private_bytesu
        The raw bytes of the private key.
        Equivalent to private_bytes(Raw, Raw, NoEncryption()).
        aprivate_bytes_rawuEd448PrivateKey.private_bytes_rawax448ucryptography\hazmat\primitives\asymmetric\ed448.pyu<module cryptography.hazmat.primitives.asymmetric.ed448>Ta__class__TaselfaotherTaclsadataabackendTaclsabackendTaselfaencodingaformataencryption_algorithmTaselfTaselfaencodingaformatTaselfadataTaselfasignatureadatau.cryptography.hazmat.primitives.asymmetric.padding4Va_mgfa_MaxLengtha_Autoa_DigestLengthusalt_length must be an integer, MAX_LENGTH, DIGEST_LENGTH, or AUTOlusalt_length must be zero or greater.a_salt_lengthahashesaHashAlgorithmuExpected instance of hashes.HashAlgorithm.a_algorithma_labelarsaaRSAPrivateKeyaRSAPublicKeyukey must be an RSA public or private keyakey_sizelladigest_sizela__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingucryptography.hazmat.primitivesTahashesucryptography.hazmat.primitives._asymmetricTaAsymmetricPaddingaAsymmetricPaddingucryptography.hazmat.primitives.asymmetricTarsaa__prepare__aPKCS1v15a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.paddinga__module__a__qualname__uEMSA-PKCS1-v1_5anamea__orig_bases__uSentinel value for `MAX_LENGTH`.TuSentinel value for `AUTO`.uSentinel value for `DIGEST_LENGTH`.aPSSa__annotations__aMAX_LENGTHaAUTOaDIGEST_LENGTHuEMSA-PSSutyping.Union[int, _MaxLength, _Auto, _DigestLength]Damgfasalt_lengthareturnaMGFutyping.Union[int, _MaxLength, _Auto, _DigestLength]aNonea__init__uPSS.__init__aOAEPuEME-OAEPDamgfaalgorithmalabelaMGFuhashes.HashAlgorithmutyping.Optional[bytes]uOAEP.__init__ametaclassaABCMetaTaMGFTaMGFuhashes.HashAlgorithmaMGF1Daalgorithmuhashes.HashAlgorithmuMGF1.__init__Dakeyahash_algorithmareturnutyping.Union[rsa.RSAPrivateKey, rsa.RSAPublicKey]uhashes.HashAlgorithmaintacalculate_max_pss_salt_lengthucryptography\hazmat\primitives\asymmetric\padding.pyu<module cryptography.hazmat.primitives.asymmetric.padding>Ta__class__TaselfaalgorithmTaselfamgfaalgorithmalabelTaselfamgfasalt_lengthTakeyahash_algorithmaemlenasalt_lengthu.cryptography.hazmat.primitives.asymmetric.rsaucryptography.hazmat.backends.openssl.backendTabackendlabackenda_verify_rsa_parametersagenerate_rsa_private_keyTllupublic_exponent must be either 3 (for legacy compatibility) or 65537. Almost everyone should choose 65537 here!lukey_size must be at least 512-bits.lumodulus must be >= 3.up must be < modulus.uq must be < modulus.udmp1 must be < modulus.udmq1 must be < modulus.uiqmp must be < modulus.uprivate_exponent must be < modulus.upublic_exponent must be >= 3 and < modulus.lupublic_exponent must be odd.udmp1 must be odd.udmq1 must be odd.up*q must equal modulus.un must be >= 3.ue must be >= 3 and < n.ue must be odd.Tllutoo many values to unpack (expected 2)wbwaax1ax2utoo many values to unpack (expected 4)u
    Modular Multiplicative Inverse. Returns x such that: (x*e) mod m == 1
    a_modinvu
    Compute the CRT (q ** -1) % p value from RSA primes p and q.
    u
    Compute the CRT private_exponent % (p - 1) value from the RSA
    private_exponent (d) and p.
    u
    Compute the CRT private_exponent % (q - 1) value from the RSA
    private_exponent (d) and q.
    wtlaspotteda_MAX_RECOVERY_ATTEMPTSwkapowwnagcduUnable to compute factors p and q from exponent d.wpasortedDareversetu
    Compute factors p and q from the private exponent d. We assume that n has
    no more than two factors. This function is adapted from code in PyCrypto.
    uRSAPrivateNumbers p, q, d, dmp1, dmq1, iqmp arguments must all be an integers.aRSAPublicNumbersuRSAPrivateNumbers public_numbers must be an RSAPublicNumbers instance.a_pa_qa_da_dmp1a_dmq1a_iqmpa_public_numbersaload_rsa_private_numbersaRSAPrivateNumberswqwdadmp1admq1aiqmpapublic_numbersuRSAPublicNumbers arguments must be integers.a_ea_naload_rsa_public_numbersu<RSAPublicNumbers(e={0.e}, n={0.n})>wea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingamathTagcducryptography.hazmat.primitivesTa_serializationahashesa_serializationahashesucryptography.hazmat.primitives._asymmetricTaAsymmetricPaddingaAsymmetricPaddingucryptography.hazmat.primitives.asymmetricTautilsautilsaasym_utilsametaclassaABCMetaa__prepare__TaRSAPrivateKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.rsaa__module__aRSAPrivateKeya__qualname__aabstractmethodDaciphertextapaddingareturnabytesaAsymmetricPaddingabytesu
        Decrypts the provided ciphertext.
        adecryptuRSAPrivateKey.decryptapropertyDareturnaintu
        The bit length of the public modulus.
        akey_sizeuRSAPrivateKey.key_sizeDareturnaRSAPublicKeyu
        The RSAPublicKey associated with this private key.
        apublic_keyuRSAPrivateKey.public_keyDadataapaddingaalgorithmareturnabytesaAsymmetricPaddingutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]abytesu
        Signs the data.
        asignuRSAPrivateKey.signDareturnaRSAPrivateNumbersu
        Returns an RSAPrivateNumbers.
        aprivate_numbersuRSAPrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        Returns the key serialized as bytes.
        aprivate_bytesuRSAPrivateKey.private_bytesTaRSAPrivateKeyWithSerializationTaRSAPublicKeyTaRSAPublicKeyDaplaintextapaddingareturnabytesaAsymmetricPaddingabytesu
        Encrypts the given plaintext.
        aencryptuRSAPublicKey.encryptuRSAPublicKey.key_sizeDareturnaRSAPublicNumbersu
        Returns an RSAPublicNumbers
        uRSAPublicKey.public_numbersDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesapublic_bytesuRSAPublicKey.public_bytesDasignatureadataapaddingaalgorithmareturnabytespaAsymmetricPaddingutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]aNoneu
        Verifies the signature of the data.
        averifyuRSAPublicKey.verifyDasignatureapaddingaalgorithmareturnabytesaAsymmetricPaddingutyping.Optional[hashes.HashAlgorithm]abytesu
        Recovers the original data from the signature.
        arecover_data_from_signatureuRSAPublicKey.recover_data_from_signatureDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uRSAPublicKey.__eq__aRSAPublicKeyWithSerializationTnDapublic_exponentakey_sizeabackendareturnaintputyping.AnyaRSAPrivateKeyagenerate_private_keyDapublic_exponentakey_sizeareturnaintpaNoneDwpwqaprivate_exponentadmp1admq1aiqmpapublic_exponentamodulusareturnaintpppppppaNonea_check_private_key_componentsDwewnareturnaintpaNonea_check_public_key_componentsDwewmareturnaintppDwpwqareturnaintpparsa_crt_iqmpDaprivate_exponentwpareturnaintpparsa_crt_dmp1Daprivate_exponentwqareturnaintpparsa_crt_dmq1lDwnwewdareturnaintpputyping.Tuple[int, int]arsa_recover_prime_factorsDwpwqwdadmp1admq1aiqmpapublic_numbersaintpppppaRSAPublicNumbersa__init__uRSAPrivateNumbers.__init__uRSAPrivateNumbers.puRSAPrivateNumbers.quRSAPrivateNumbers.duRSAPrivateNumbers.dmp1uRSAPrivateNumbers.dmq1uRSAPrivateNumbers.iqmpuRSAPrivateNumbers.public_numbersDaunsafe_skip_rsa_key_validationFDabackendaunsafe_skip_rsa_key_validationareturnutyping.AnyaboolaRSAPrivateKeyaprivate_keyuRSAPrivateNumbers.private_keyuRSAPrivateNumbers.__eq__a__hash__uRSAPrivateNumbers.__hash__DwewnaintpuRSAPublicNumbers.__init__uRSAPublicNumbers.euRSAPublicNumbers.nDabackendareturnutyping.AnyaRSAPublicKeyuRSAPublicNumbers.public_keyDareturnastra__repr__uRSAPublicNumbers.__repr__uRSAPublicNumbers.__eq__uRSAPublicNumbers.__hash__ucryptography\hazmat\primitives\asymmetric\rsa.pyu<module cryptography.hazmat.primitives.asymmetric.rsa>Ta__class__TaselfaotherTaselfTaselfwewnTaselfwpwqwdadmp1admq1aiqmpapublic_numbersTwpwqaprivate_exponentadmp1admq1aiqmpapublic_exponentamodulusTwewnTwewmax1ax2wawbwqwraxnTapublic_exponentakey_sizeTaselfaciphertextapaddingTaselfaplaintextapaddingTapublic_exponentakey_sizeabackendaosslTaselfaencodingaformataencryption_algorithmTaselfabackendaunsafe_skip_rsa_key_validationaosslTaselfaencodingaformatTaselfabackendaosslTaselfasignatureapaddingaalgorithmTaprivate_exponentwpTaprivate_exponentwqTwpwqTwnwewdaktotwtaspottedwawkacandwpwqwrTaselfadataapaddingaalgorithmTaselfasignatureadataapaddingaalgorithmu.cryptography.hazmat.primitives.asymmetric.types^Aa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingacryptographyTautilslautilsucryptography.hazmat.primitives.asymmetricTadhadsaaecaed448aed25519arsaax448ax25519adhadsaaecaed448aed25519arsaax448ax25519aUnionaDHPublicKeyaDSAPublicKeyaRSAPublicKeyaEllipticCurvePublicKeyaEd25519PublicKeyaEd448PublicKeyaX25519PublicKeyaX448PublicKeyaPublicKeyTypesaPUBLIC_KEY_TYPESadeprecateducryptography.hazmat.primitives.asymmetric.typesuUse PublicKeyTypes insteadaDeprecatedIn40DanameaPUBLIC_KEY_TYPESaDHPrivateKeyaEd25519PrivateKeyaEd448PrivateKeyaRSAPrivateKeyaDSAPrivateKeyaEllipticCurvePrivateKeyaX25519PrivateKeyaX448PrivateKeyaPrivateKeyTypesaPRIVATE_KEY_TYPESuUse PrivateKeyTypes insteadDanameaPRIVATE_KEY_TYPESaCertificateIssuerPrivateKeyTypesaCERTIFICATE_PRIVATE_KEY_TYPESuUse CertificateIssuerPrivateKeyTypes insteadDanameaCERTIFICATE_PRIVATE_KEY_TYPESaCertificateIssuerPublicKeyTypesaCERTIFICATE_ISSUER_PUBLIC_KEY_TYPESuUse CertificateIssuerPublicKeyTypes insteadDanameaCERTIFICATE_ISSUER_PUBLIC_KEY_TYPESaCertificatePublicKeyTypesaCERTIFICATE_PUBLIC_KEY_TYPESuUse CertificatePublicKeyTypes insteadDanameaCERTIFICATE_PUBLIC_KEY_TYPESucryptography\hazmat\primitives\asymmetric\types.pyu<module cryptography.hazmat.primitives.asymmetric.types>u.cryptography.hazmat.primitives.asymmetric.utils%ahashesaHashAlgorithmuExpected instance of HashAlgorithm.a_algorithmadigest_sizea_digest_sizea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucryptography.hazmat.bindings._rustTaasn1laasn1ucryptography.hazmat.primitivesTahashesadecode_dss_signatureaencode_dss_signatureucryptography.hazmat.primitives.asymmetric.utilsa__module__aPrehasheda__qualname__Daalgorithmuhashes.HashAlgorithma__init__uPrehashed.__init__DareturnaintuPrehashed.digest_sizeTucryptography\hazmat\primitives\asymmetric\utils.pyu<module cryptography.hazmat.primitives.asymmetric.utils>Ta__class__TaselfaalgorithmTaselfu.cryptography.hazmat.primitives.asymmetric.x25519
_ucryptography.hazmat.backends.openssl.backendTabackendlabackendax25519_supportedaUnsupportedAlgorithmuX25519 is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_EXCHANGE_ALGORITHMax25519_load_public_bytesax25519_generate_keyax25519_load_private_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslucryptography.hazmat.primitivesTa_serializationa_serializationametaclassaABCMetaa__prepare__TaX25519PublicKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.x25519a__module__aX25519PublicKeya__qualname__aclassmethodDadataareturnabytesaX25519PublicKeyafrom_public_bytesuX25519PublicKey.from_public_bytesaabstractmethodDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        The serialized bytes of the public key.
        apublic_bytesuX25519PublicKey.public_bytesDareturnabytesu
        The raw bytes of the public key.
        Equivalent to public_bytes(Raw, Raw).
        apublic_bytes_rawuX25519PublicKey.public_bytes_rawDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uX25519PublicKey.__eq__Tax25519aregisterTaX25519PrivateKeyTaX25519PrivateKeyDareturnaX25519PrivateKeyagenerateuX25519PrivateKey.generateDadataareturnabytesaX25519PrivateKeyafrom_private_bytesuX25519PrivateKey.from_private_bytesDareturnaX25519PublicKeyu
        Returns the public key assosciated with this private key
        apublic_keyuX25519PrivateKey.public_keyDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        The serialized bytes of the private key.
        aprivate_bytesuX25519PrivateKey.private_bytesu
        The raw bytes of the private key.
        Equivalent to private_bytes(Raw, Raw, NoEncryption()).
        aprivate_bytes_rawuX25519PrivateKey.private_bytes_rawDapeer_public_keyareturnaX25519PublicKeyabytesu
        Performs a key exchange operation using the provided peer's public key.
        aexchangeuX25519PrivateKey.exchangeucryptography\hazmat\primitives\asymmetric\x25519.pyu<module cryptography.hazmat.primitives.asymmetric.x25519>Ta__class__TaselfaotherTaselfapeer_public_keyTaclsadataabackendTaclsabackendTaselfaencodingaformataencryption_algorithmTaselfTaselfaencodingaformatu.cryptography.hazmat.primitives.asymmetric.x448b
_ucryptography.hazmat.backends.openssl.backendTabackendlabackendax448_supportedaUnsupportedAlgorithmuX448 is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_EXCHANGE_ALGORITHMax448_load_public_bytesax448_generate_keyax448_load_private_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslucryptography.hazmat.primitivesTa_serializationa_serializationametaclassaABCMetaa__prepare__TaX448PublicKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.x448a__module__aX448PublicKeya__qualname__aclassmethodDadataareturnabytesaX448PublicKeyafrom_public_bytesuX448PublicKey.from_public_bytesaabstractmethodDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        The serialized bytes of the public key.
        apublic_bytesuX448PublicKey.public_bytesDareturnabytesu
        The raw bytes of the public key.
        Equivalent to public_bytes(Raw, Raw).
        apublic_bytes_rawuX448PublicKey.public_bytes_rawDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uX448PublicKey.__eq__Tax448aregisterTaX448PrivateKeyTaX448PrivateKeyDareturnaX448PrivateKeyagenerateuX448PrivateKey.generateDadataareturnabytesaX448PrivateKeyafrom_private_bytesuX448PrivateKey.from_private_bytesDareturnaX448PublicKeyu
        Returns the public key associated with this private key
        apublic_keyuX448PrivateKey.public_keyDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        The serialized bytes of the private key.
        aprivate_bytesuX448PrivateKey.private_bytesu
        The raw bytes of the private key.
        Equivalent to private_bytes(Raw, Raw, NoEncryption()).
        aprivate_bytes_rawuX448PrivateKey.private_bytes_rawDapeer_public_keyareturnaX448PublicKeyabytesu
        Performs a key exchange operation using the provided peer's public key.
        aexchangeuX448PrivateKey.exchangeucryptography\hazmat\primitives\asymmetric\x448.pyu<module cryptography.hazmat.primitives.asymmetric.x448>Ta__class__TaselfaotherTaselfapeer_public_keyTaclsadataabackendTaclsabackendTaselfaencodingaformataencryption_algorithmTaselfTaselfaencodingaformatu.cryptography.hazmat.primitives.ciphers.aead+
abackendaaead_cipher_supportedaexceptionsaUnsupportedAlgorithmuChaCha20Poly1305 is not supported by this version of OpenSSLa_ReasonsaUNSUPPORTED_CIPHERautilsa_check_byteslikeakeyuChaCha20Poly1305 key must be 32 bytes.a_keyaFixedPoola_create_fna_poolaosaurandomTl aaeada_aead_create_ctxca_MAX_SIZEuData or associated data too long. Max 2**31 - 1 bytesa_check_paramsaassociated_dataaacquirea__enter__a__exit__a_encryptlTnnna_decryptanonceadatauNonce must be 12 bytesTlll uAESCCM key must be 128, 192, or 256 bits.utag_length must be an integerTllll
llluInvalid tag_lengtha_tag_lengthuAESCCM is not supported by this version of OpenSSLubit_length must be an integerTlllubit_length must be 128, 192, or 256la_validate_lengthsluData too long for nonceuNonce must be between 7 and 13 bytesuAESGCM key must be 128, 192, or 256 bits.uNonce must be between 8 and 128 bytesuAESOCB3 key must be 128, 192, or 256 bits.uOCB3 is not supported by this version of OpenSSLuNonce must be between 12 and 15 bytesTl l0l@uAESSIV key must be 256, 384, or 512 bits.uAES-SIV is not supported by this version of OpenSSLTlllubit_length must be 256, 384, or 512aselfu<genexpr>uAESSIV.encrypt.<locals>.<genexpr>udata must not be zero lengthuassociated_data must be a list of bytes-like objects or Noneuassociated_data elementsa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingacryptographyTaexceptionsautilslucryptography.hazmat.backends.opensslTaaeaducryptography.hazmat.backends.openssl.backendTabackenducryptography.hazmat.bindings._rustTaFixedPoolucryptography.hazmat.primitives.ciphers.aeada__module__aChaCha20Poly1305a__qualname__qDakeyabytesa__init__uChaCha20Poly1305.__init__Dareturnabytesagenerate_keyuChaCha20Poly1305.generate_keyuChaCha20Poly1305._create_fnDanonceadataaassociated_dataareturnabytesputyping.Optional[bytes]abytesaencryptuChaCha20Poly1305.encryptadecryptuChaCha20Poly1305.decryptDanonceadataaassociated_dataareturnabytesppaNoneuChaCha20Poly1305._check_paramsTaAESCCMTlDakeyatag_lengthabytesaintuAESCCM.__init__Dabit_lengthareturnaintabytesuAESCCM.generate_keyuAESCCM.encryptuAESCCM.decryptDanonceadata_lenareturnabytesaintaNoneuAESCCM._validate_lengthsuAESCCM._check_paramsaAESGCMuAESGCM.__init__uAESGCM.generate_keyuAESGCM.encryptuAESGCM.decryptuAESGCM._check_paramsaAESOCB3uAESOCB3.__init__uAESOCB3.generate_keyuAESOCB3.encryptuAESOCB3.decryptuAESOCB3._check_paramsaAESSIVuAESSIV.__init__uAESSIV.generate_keyDadataaassociated_dataareturnabytesutyping.Optional[typing.List[bytes]]abytesuAESSIV.encryptuAESSIV.decryptDadataaassociated_dataareturnabytesutyping.List[bytes]aNoneuAESSIV._check_paramsucryptography\hazmat\primitives\ciphers\aead.pyTa.0aadaselfu<module cryptography.hazmat.primitives.ciphers.aead>TaselfakeyTaselfakeyatag_lengthTaselfadataaassociated_datawxTaselfanonceadataaassociated_dataTaselfTaselfanonceadata_lenal_valTaselfadataaassociated_dataTaselfanonceadataaassociated_dataactxTaclsTaclsabit_lengthu.cryptography.hazmat.primitives.ciphers.algorithmszautilsa_check_byteslikeakeylakey_sizesuInvalid key size ({}) for {}.anamea_verify_key_size:nlnanonceunonce must be 128-bits (16 bytes)a_noncea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsacryptographyTautilslucryptography.hazmat.primitives.ciphersTaBlockCipherAlgorithmaCipherAlgorithmaBlockCipherAlgorithmaCipherAlgorithmDaalgorithmakeyareturnaCipherAlgorithmabytespa__prepare__aAESa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.ciphers.algorithmsa__module__a__qualname__lablock_sizeafrozensetLllllPllllDakeyabytesa__init__uAES.__init__apropertyDareturnaintakey_sizeuAES.key_sizea__orig_bases__aAES128PluAES128.__init__aAES256lPluAES256.__init__aCamelliaacamellialPllluCamellia.__init__uCamellia.key_sizeaTripleDESu3DESl@Pl@lluTripleDES.__init__uTripleDES.key_sizeaBlowfisharangeTl ll;l lluBlowfish.__init__uBlowfish.key_sizea_BlowfishInternaladeprecateduBlowfish has been deprecatedaDeprecatedIn37DanameaBlowfishaCAST5Tl(ll;l(lluCAST5.__init__uCAST5.key_sizea_CAST5InternaluCAST5 has been deprecatedDanameaCAST5aARC4aRC4Ll(l8l@lPllllPl@lllll(lPl8uARC4.__init__uARC4.key_sizeaIDEAuIDEA.__init__uIDEA.key_sizea_IDEAInternaluIDEA has been deprecatedDanameaIDEAaSEEDuSEED.__init__uSEED.key_sizea_SEEDInternaluSEED has been deprecatedDanameaSEEDaChaCha20DakeyanonceabytespuChaCha20.__init__DareturnabytesuChaCha20.nonceuChaCha20.key_sizeaSM4uSM4.__init__uSM4.key_sizeucryptography\hazmat\primitives\ciphers\algorithms.pyu<module cryptography.hazmat.primitives.ciphers.algorithms>Ta__class__TaselfakeyTaselfakeyanonceTaalgorithmakeyTaselfu.cryptography.hazmat.primitives.ciphers.baseaCipherAlgorithmuExpected interface of CipherAlgorithm.amodesaModeavalidate_for_algorithmaalgorithmamodeaModeWithAuthenticationTagataguAuthentication tag must be None when encrypting.ucryptography.hazmat.backends.openssl.backendTabackendlabackendacreate_symmetric_encryption_ctxa_wrap_ctxDaencrypttacreate_symmetric_decryption_ctxDaencryptFa_AEADEncryptionContexta_AEADDecryptionContexta_CipherContexta_ctxaAlreadyFinalizedTuContext was already finalized.aupdateaupdate_intoafinalizea_bytes_processeda_aad_bytes_processeda_taga_updateda_modea_MAX_ENCRYPTED_BYTESu{} has a maximum encrypted byte limit of {}anamea_check_limitaAlreadyUpdatedTuUpdate has been called on this context.a_MAX_AAD_BYTESu{} has a maximum AAD byte limit of {}aauthenticate_additional_dataafinalize_with_tagaNotYetFinalizedTuYou must finalize encryption before getting the tag.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingucryptography.exceptionsTaAlreadyFinalizedaAlreadyUpdatedaNotYetFinalizeducryptography.hazmat.primitives._cipheralgorithmTaCipherAlgorithmucryptography.hazmat.primitives.ciphersTamodesametaclassaABCMetaa__prepare__TaCipherContextTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.ciphers.basea__module__aCipherContexta__qualname__aabstractmethodDadataareturnabytespu
        Processes the provided bytes through the cipher and returns the results
        as bytes.
        uCipherContext.updateDadataabufareturnabytespaintu
        Processes the provided bytes and writes the resulting data into the
        provided buffer. Returns the number of bytes written.
        uCipherContext.update_intoDareturnabytesu
        Returns the results of processing the final block as bytes.
        uCipherContext.finalizeTaAEADCipherContextDadataareturnabytesaNoneu
        Authenticates the provided bytes.
        uAEADCipherContext.authenticate_additional_dataa__orig_bases__aAEADDecryptionContextDatagareturnabytespu
        Returns the results of processing the final block as bytes and allows
        delayed passing of the authentication tag.
        uAEADDecryptionContext.finalize_with_tagaAEADEncryptionContextapropertyu
        Returns tag bytes. This is only available after encryption is
        finalized.
        uAEADEncryptionContext.tagaTypeVaraOptionalTaModeTaboundacovariantaGenericaCipherTnDaalgorithmamodeabackendareturnaCipherAlgorithmaModeutyping.AnyaNonea__init__uCipher.__init__aoverloadDaselfareturnuCipher[modes.ModeWithAuthenticationTag]aAEADEncryptionContextaencryptoruCipher.encryptorDaselfareturna_CIPHER_TYPEaCipherContextDaselfareturnuCipher[modes.ModeWithAuthenticationTag]aAEADDecryptionContextadecryptoruCipher.decryptorDactxaencryptareturna_BackendCipherContextaboolutyping.Union[AEADEncryptionContext, AEADDecryptionContext, CipherContext]uCipher._wrap_ctxaUnionaModeWithNonceaModeWithTweakaECBaModeWithInitializationVectora_CIPHER_TYPEa__annotations__utyping.Optional[_BackendCipherContext]Dactxareturna_BackendCipherContextaNoneu_CipherContext.__init__u_CipherContext.updateu_CipherContext.update_intou_CipherContext.finalizea_AEADCipherContextutyping.Optional[bytes]u_AEADCipherContext.__init__Dadata_sizeareturnaintaNoneu_AEADCipherContext._check_limitu_AEADCipherContext.updateu_AEADCipherContext.update_intou_AEADCipherContext.finalizeu_AEADCipherContext.authenticate_additional_datau_AEADDecryptionContext.finalize_with_tagu_AEADEncryptionContext.tagucryptography\hazmat\primitives\ciphers\base.pyu<module cryptography.hazmat.primitives.ciphers.base>Ta__class__TaselfaalgorithmamodeabackendTaselfactxTaselfadata_sizeTaselfactxaencryptTaselfadataTaselfTaselfabackendactxTaselfatagTaselfatagadataTaselfadataabufu.cryptography.hazmat.primitives.ciphers&&a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\primitives\ciphersTaNUITKA_PACKAGE_cryptography_hazmatu\not_existinguprimitives\ciphersTaNUITKA_PACKAGE_cryptography_hazmat_primitivesu\not_existingaciphersTaNUITKA_PACKAGE_cryptography_hazmat_primitives_ciphersu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.hazmat.primitives._cipheralgorithmTaBlockCipherAlgorithmaCipherAlgorithmaBlockCipherAlgorithmaCipherAlgorithmucryptography.hazmat.primitives.ciphers.baseTaAEADCipherContextaAEADDecryptionContextaAEADEncryptionContextaCipheraCipherContextaAEADCipherContextaAEADDecryptionContextaAEADEncryptionContextaCipheraCipherContextLaCipheraCipherAlgorithmaBlockCipherAlgorithmaCipherContextaAEADCipherContextaAEADDecryptionContextaAEADEncryptionContexta__all__ucryptography\hazmat\primitives\ciphers\__init__.pyu<module cryptography.hazmat.primitives.ciphers>u.cryptography.hazmat.primitives.ciphers.modesakey_sizelanameaAESuOnly 128, 192, and 256 bit keys are allowed for this AES modeainitialization_vectorlablock_sizeuInvalid IV size ({}) for {}.aBlockCipherAlgorithmaUnsupportedAlgorithmuu requires a block cipher algorithma_ReasonsaUNSUPPORTED_CIPHERuInvalid nonce size (u) for w.a_check_aes_key_lengtha_check_iv_lengthautilsa_check_byteslikea_initialization_vectoratweakutweak must be 128-bits (16 bytes)a_tweakaalgorithmsaAES128aAES256uThe AES128 and AES256 classes do not support XTS, please use the standard AES class instead.TlluThe XTS specification requires a 256-bit key for AES-128-XTS and 512-bit key for AES-256-XTSanoncea_noncea_check_nonce_lengthuinitialization_vector must be between 8 and 128 bytes (64 and 1024 bits).a_check_bytesataglumin_tag_length must be >= 4uAuthentication tag must be {} bytes or longer.a_taga_min_tag_lengthuGCM requires a block cipher algorithmuAuthentication tag cannot be more than {} bytes.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypingacryptographyTautilsucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.primitives._cipheralgorithmTaBlockCipherAlgorithmaCipherAlgorithmaCipherAlgorithmucryptography.hazmat.primitives.ciphersTaalgorithmsametaclassaABCMetaa__prepare__TaModeTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.ciphers.modesa__module__aModea__qualname__apropertyaabstractmethodDareturnastru
        A string naming this mode (e.g. "ECB", "CBC").
        uMode.nameDaalgorithmareturnaCipherAlgorithmaNoneu
        Checks that all the necessary invariants of this (mode, algorithm)
        combination are met.
        avalidate_for_algorithmuMode.validate_for_algorithmTaModeWithInitializationVectorDareturnabytesu
        The value of the initialization vector for this mode as bytes.
        uModeWithInitializationVector.initialization_vectora__orig_bases__aModeWithTweaku
        The value of the tweak for this mode as bytes.
        uModeWithTweak.tweakaModeWithNonceu
        The value of the nonce for this mode as bytes.
        uModeWithNonce.nonceaModeWithAuthenticationTagDareturnutyping.Optional[bytes]u
        The value of the tag supplied to the constructor of this mode.
        uModeWithAuthenticationTag.tagDaselfaalgorithmareturnaModeaCipherAlgorithmaNoneDaselfaalgorithmareturnaModeWithInitializationVectoraBlockCipherAlgorithmaNoneDanonceanameaalgorithmareturnabytesastraCipherAlgorithmaNoneDaselfaalgorithmareturnaModeWithInitializationVectoraCipherAlgorithmaNonea_check_iv_and_key_lengthaCBCDainitialization_vectorabytesa__init__uCBC.__init__uCBC.initialization_vectoraXTSDatweakabytesuXTS.__init__uXTS.tweakuXTS.validate_for_algorithmaECBaOFBuOFB.__init__uOFB.initialization_vectoraCFBuCFB.__init__uCFB.initialization_vectoraCFB8uCFB8.__init__uCFB8.initialization_vectoraCTRDanonceabytesuCTR.__init__uCTR.nonceuCTR.validate_for_algorithmaGCMqa_MAX_ENCRYPTED_BYTESq a_MAX_AAD_BYTESTnlDainitialization_vectoratagamin_tag_lengthabytesutyping.Optional[bytes]aintuGCM.__init__uGCM.taguGCM.initialization_vectoruGCM.validate_for_algorithmucryptography\hazmat\primitives\ciphers\modes.pyu<module cryptography.hazmat.primitives.ciphers.modes>Ta__class__Taselfainitialization_vectorTaselfainitialization_vectoratagamin_tag_lengthTaselfanonceTaselfatweakTaselfaalgorithmTanonceanameaalgorithmTaselfTaselfaalgorithmablock_size_bytes.cryptography.hazmat.primitivesa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\primitivesTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingaprimitivesTaNUITKA_PACKAGE_cryptography_hazmat_primitivesu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ucryptography\hazmat\primitives\__init__.pyu<module cryptography.hazmat.primitives>u.cryptography.hazmat.primitives.constant_timeua and b must be bytes.ahmacacompare_digesta__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationslDwawbareturnabytespaboolabytes_equcryptography\hazmat\primitives\constant_time.pyu<module cryptography.hazmat.primitives.constant_time>Twawbu.cryptography.hazmat.primitives.hashes}
udigest_size must be an integerludigest_size must be a positive integera_digest_sizel@uDigest size must be 64l uDigest size must be 32a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypingucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslLaHashAlgorithmaHashContextaHashaExtendableOutputFunctionaSHA1aSHA512_224aSHA512_256aSHA224aSHA256aSHA384aSHA512aSHA3_224aSHA3_256aSHA3_384aSHA3_512aSHAKE128aSHAKE256aMD5aBLAKE2baBLAKE2saSM3a__all__ametaclassaABCMetaa__prepare__TaHashAlgorithmTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.hashesa__module__aHashAlgorithma__qualname__apropertyaabstractmethodDareturnastru
        A string naming this algorithm (e.g. "sha256", "md5").
        anameuHashAlgorithm.nameDareturnaintu
        The size of the resulting digest in bytes.
        adigest_sizeuHashAlgorithm.digest_sizeDareturnutyping.Optional[int]u
        The internal block size of the hash function, or None if the hash
        function does not use blocks internally (e.g. SHA3).
        ablock_sizeuHashAlgorithm.block_sizeTTaHashContextTaHashContextDareturnaHashAlgorithmu
        A HashAlgorithm that will be used by this context.
        aalgorithmuHashContext.algorithmDadataareturnabytesaNoneu
        Processes the provided bytes through the hash.
        aupdateuHashContext.updateDareturnabytesu
        Finalizes the hash context and returns the hash digest as bytes.
        afinalizeuHashContext.finalizeDareturnaHashContextu
        Return a HashContext that is a copy of the current context.
        acopyuHashContext.copyahashesaHasharegisterTaExtendableOutputFunctionTu
    An interface for extendable output functions.
    aExtendableOutputFunctionaSHA1asha1la__orig_bases__aSHA512_224usha512-224llaSHA512_256usha512-256aSHA224asha224aSHA256asha256aSHA384asha384l0aSHA512asha512aSHA3_224usha3-224aSHA3_256usha3-256aSHA3_384usha3-384aSHA3_512usha3-512aSHAKE128ashake128Dadigest_sizeainta__init__uSHAKE128.__init__uSHAKE128.digest_sizeaSHAKE256ashake256uSHAKE256.__init__uSHAKE256.digest_sizeaMD5amd5laBLAKE2bablake2ba_max_digest_sizea_min_digest_sizeuBLAKE2b.__init__uBLAKE2b.digest_sizeaBLAKE2sablake2suBLAKE2s.__init__uBLAKE2s.digest_sizeaSM3asm3ucryptography\hazmat\primitives\hashes.pyu<module cryptography.hazmat.primitives.hashes>Ta__class__Taselfadigest_sizeTaselfTaselfadatau.cryptography.hazmat.primitives.serialization.base#ucryptography.hazmat.backends.openssl.backendTabackendlabackendaload_pem_private_keyaload_pem_public_keyaload_pem_parametersaload_der_private_keyaload_der_public_keyaload_der_parametersa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.hazmat.primitives.asymmetricTadhadhucryptography.hazmat.primitives.asymmetric.typesTaPrivateKeyTypesaPublicKeyTypesaPrivateKeyTypesaPublicKeyTypesTnDaunsafe_skip_rsa_key_validationFDadataapasswordabackendaunsafe_skip_rsa_key_validationareturnabytesutyping.Optional[bytes]utyping.AnyaboolaPrivateKeyTypesDadataabackendareturnabytesutyping.AnyaPublicKeyTypesDadataabackendareturnabytesutyping.Anyudh.DHParametersucryptography\hazmat\primitives\serialization\base.pyu<module cryptography.hazmat.primitives.serialization.base>TadataabackendaosslTadataapasswordabackendaunsafe_skip_rsa_key_validationaosslu.cryptography.hazmat.primitives.serialization9a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\primitives\serializationTaNUITKA_PACKAGE_cryptography_hazmatu\not_existinguprimitives\serializationTaNUITKA_PACKAGE_cryptography_hazmat_primitivesu\not_existingaserializationTaNUITKA_PACKAGE_cryptography_hazmat_primitives_serializationu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.hazmat.primitives._serializationTaBestAvailableEncryptionaEncodingaKeySerializationEncryptionaNoEncryptionaParameterFormataPrivateFormataPublicFormata_KeySerializationEncryptionaBestAvailableEncryptionaEncodingaKeySerializationEncryptionaNoEncryptionaParameterFormataPrivateFormataPublicFormata_KeySerializationEncryptionucryptography.hazmat.primitives.serialization.baseTaload_der_parametersaload_der_private_keyaload_der_public_keyaload_pem_parametersaload_pem_private_keyaload_pem_public_keyaload_der_parametersaload_der_private_keyaload_der_public_keyaload_pem_parametersaload_pem_private_keyaload_pem_public_keyucryptography.hazmat.primitives.serialization.sshT
aSSHCertificateaSSHCertificateBuilderaSSHCertificateTypeaSSHCertPrivateKeyTypesaSSHCertPublicKeyTypesaSSHPrivateKeyTypesaSSHPublicKeyTypesaload_ssh_private_keyaload_ssh_public_identityaload_ssh_public_keyaSSHCertificateaSSHCertificateBuilderaSSHCertificateTypeaSSHCertPrivateKeyTypesaSSHCertPublicKeyTypesaSSHPrivateKeyTypesaSSHPublicKeyTypesaload_ssh_private_keyaload_ssh_public_identityaload_ssh_public_keyLaload_der_parametersaload_der_private_keyaload_der_public_keyaload_pem_parametersaload_pem_private_keyaload_pem_public_keyaload_ssh_private_keyaload_ssh_public_identityaload_ssh_public_keyaEncodingaPrivateFormataPublicFormataParameterFormataKeySerializationEncryptionaBestAvailableEncryptionaNoEncryptiona_KeySerializationEncryptionaSSHCertificateBuilderaSSHCertificateaSSHCertificateTypeaSSHCertPublicKeyTypesaSSHCertPrivateKeyTypesaSSHPrivateKeyTypesaSSHPublicKeyTypesa__all__ucryptography\hazmat\primitives\serialization\__init__.pyu<module cryptography.hazmat.primitives.serialization>u.cryptography.hazmat.primitives.serialization.pkcs12zax509aCertificateuExpecting x509.Certificate objectufriendly_name must be bytes or Nonea_certa_friendly_nameaPKCS12Certificateacertificateafriendly_nameu<PKCS12Certificate({}, friendly_name={!r})>arsaaRSAPrivateKeyadsaaDSAPrivateKeyaecaEllipticCurvePrivateKeyaed25519aEd25519PrivateKeyaed448aEd448PrivateKeyuKey must be RSA, DSA, EllipticCurve, ED25519, or ED448 private key, or None.ucert must be a PKCS12Certificate object or Noneuall values in additional_certs must be PKCS12Certificate objectsa_keya_additional_certsu<genexpr>uPKCS12KeyAndCertificates.__init__.<locals>.<genexpr>aPKCS12KeyAndCertificatesakeyacertaadditional_certsu<PKCS12KeyAndCertificates(key={}, cert={}, additional_certs={})>ucryptography.hazmat.backends.openssl.backendTabackendlabackendaload_key_and_certificates_from_pkcs12aload_pkcs12ucert must be a certificate or Noneuall values in cas must be certificatesaserializationaKeySerializationEncryptionuKey encryption algorithm must be a KeySerializationEncryption instanceacasuYou must supply at least one of key, cert, or casaserialize_key_and_certificates_to_pkcs12userialize_key_and_certificates.<locals>.<genexpr>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingacryptographyTax509ucryptography.hazmat.primitivesTaserializationucryptography.hazmat.primitives._serializationTaPBESaPBESucryptography.hazmat.primitives.asymmetricTadsaaecaed448aed25519arsaucryptography.hazmat.primitives.asymmetric.typesTaPrivateKeyTypesaPrivateKeyTypesLaPBESaPKCS12PrivateKeyTypesaPKCS12CertificateaPKCS12KeyAndCertificatesaload_key_and_certificatesaload_pkcs12aserialize_key_and_certificatesa__all__aUnionaPKCS12PrivateKeyTypesucryptography.hazmat.primitives.serialization.pkcs12a__module__a__qualname__Dacertafriendly_nameux509.Certificateutyping.Optional[bytes]a__init__uPKCS12Certificate.__init__Dareturnutyping.Optional[bytes]uPKCS12Certificate.friendly_nameDareturnux509.CertificateuPKCS12Certificate.certificateDaotherareturnaobjectaboola__eq__uPKCS12Certificate.__eq__Dareturnainta__hash__uPKCS12Certificate.__hash__Dareturnastra__repr__uPKCS12Certificate.__repr__TDakeyacertaadditional_certsutyping.Optional[PrivateKeyTypes]utyping.Optional[PKCS12Certificate]utyping.List[PKCS12Certificate]uPKCS12KeyAndCertificates.__init__Dareturnutyping.Optional[PrivateKeyTypes]uPKCS12KeyAndCertificates.keyDareturnutyping.Optional[PKCS12Certificate]uPKCS12KeyAndCertificates.certDareturnutyping.List[PKCS12Certificate]uPKCS12KeyAndCertificates.additional_certsuPKCS12KeyAndCertificates.__eq__uPKCS12KeyAndCertificates.__hash__uPKCS12KeyAndCertificates.__repr__TnDadataapasswordabackendareturnabytesutyping.Optional[bytes]utyping.Anyutyping.Tuple[typing.Optional[PrivateKeyTypes], typing.Optional[x509.Certificate], typing.List[x509.Certificate]]aload_key_and_certificatesDadataapasswordabackendareturnabytesutyping.Optional[bytes]utyping.AnyaPKCS12KeyAndCertificatesa_PKCS12CATypesDanameakeyacertacasaencryption_algorithmareturnutyping.Optional[bytes]utyping.Optional[PKCS12PrivateKeyTypes]utyping.Optional[x509.Certificate]utyping.Optional[typing.Iterable[_PKCS12CATypes]]userialization.KeySerializationEncryptionabytesaserialize_key_and_certificatesucryptography\hazmat\primitives\serialization\pkcs12.pyTa.0aadd_certTa.0avalu<module cryptography.hazmat.primitives.serialization.pkcs12>Ta__class__TaselfaotherTaselfTaselfacertafriendly_nameTaselfakeyacertaadditional_certsTaselfafmtTadataapasswordabackendaosslTanameakeyacertacasaencryption_algorithmabackendu.cryptography.hazmat.primitives.serialization.sshNKaUnsupportedAlgorithmTuNeed bcrypt moduleaecaEllipticCurvePrivateKeya_ecdsa_key_typeapublic_keyaEllipticCurvePublicKeyarsaaRSAPrivateKeyaRSAPublicKeya_SSH_RSAadsaaDSAPrivateKeyaDSAPublicKeya_SSH_DSAaed25519aEd25519PrivateKeyaEd25519PublicKeya_SSH_ED25519uUnsupported key typeacurveanamea_ECDSA_KEY_TYPEuUnsupported curve for ssh private key: uuReturn SSH key_type and curve_name for private key.ca_base64_encodeluCorrupt data: missing paddinguRequire data to be full blocksuCorrupt data: unparsed datauAll data should have been parsed.uKey is password-protected.a_SSH_CIPHERSa_bcrypt_kdfakey_lenaiv_lenaCipheraalgamodeuGenerate key + iv and return cipher.uInvalid dataafrom_bytes:nlnDabyteorderabig:lnnaUint32:nln:lnnaUint64a_get_u32utoo many values to unpack (expected 2)uBytes with u32 length prefixa_get_sshstrlabiguBig integer.unegative mpint not allowedabit_lengthlautilsaint_to_bytesuStorage format for signed bigint.aflistaextendaappenduAdd plain bytesato_bytesTlabigTalengthabyteorderuBig-endian uint32TlabiguBig-endian uint64TObytesOmemoryviewObytearrayaput_u32asizeuBytes prefixed with u32 lengthaput_sshstra_to_mpintuBig-endian bigint prefixed with u32 lengthalenuCurrent number of bytesaposadstbufuWrite into bytearrayarenderatobytesuReturn as bytesa_get_mpintuRSA public fieldsaget_publicaRSAPublicNumbersuMake RSA public key from data.uCorrupt data: rsa field mismatcharsa_crt_dmp1arsa_crt_dmq1aRSAPrivateNumbersaprivate_keyuMake RSA private key from data.apublic_numbersaput_mpintwewnuWrite RSA public keyaprivate_numberswdaiqmpwpwquWrite RSA private keyuDSA public fieldsutoo many values to unpack (expected 4)aDSAParameterNumbersaDSAPublicNumbersa_validateuMake DSA public key from data.uCorrupt data: dsa field mismatchaDSAPrivateNumbersuMake DSA private key from data.aparameter_numberswgwyuWrite DSA public keyaencode_publicwxuWrite DSA private keyluSSH supports only 1024 bit DSA keysassh_curve_nameuCurve name mismatchluNeed uncompressed pointuECDSA public fieldsafrom_encoded_pointuMake ECDSA public key from data.uCorrupt data: ecdsa field mismatchaderive_private_keyuMake ECDSA private key from data.apublic_bytesaEncodingaX962aPublicFormataUncompressedPointuWrite ECDSA public keyaprivate_valueuWrite ECDSA private keyuEd25519 public fieldsutoo many values to unpack (expected 1)afrom_public_bytesuMake Ed25519 public key from data.:nl n:l nnuCorrupt data: ed25519 field mismatchafrom_private_bytesuMake Ed25519 private key from data.aRawuWrite Ed25519 public keyaprivate_bytesaPrivateFormataNoEncryptiona_FragListuWrite Ed25519 private keya_KEY_FORMATSuUnsupported key type: uReturn valid format or throw errora_check_byteslikeadataa_check_bytesapassworda_PEM_RCasearchuNot OpenSSH private key formatastartTlaendabinasciiaa2b_base64astartswitha_SK_MAGICluOnly one key supporteda_lookup_kformata_check_emptya_NONEuUnsupported cipher: a_BCRYPTuUnsupported KDF: ablock_lenatag_lenais_aeaduCorrupt data: invalid tag length for ciphera_check_block_sizea_init_cipheradecryptoraupdateaAEADDecryptionContextafinalize_with_tagatagafinalizeaedatauCorrupt data: broken checksumuCorrupt data: key type mismatchaload_privatea_PADDINGuCorrupt data: invalid paddingawarningsawarnuSSH DSA keys are deprecated and will be removed in a future release.aDeprecatedIn40DastacklevelluLoad private key from OpenSSH custom encoding.uSSH DSA key support is deprecated and will be removed in a future releaseDastacklevella_get_ssh_key_typea_DEFAULT_CIPHERa_DEFAULT_ROUNDSa_KeySerializationEncryptiona_kdf_roundsaencryption_algorithmaosaurandomTlTlaencode_privateTcaput_rawaciphernameaencryptoraupdate_intoa_ssh_pem_encodeuSerialize private key with OpenSSH custom encoding.a_noncea_public_keya_serialaSSHCertificateTypea_typeuInvalid certificate typea_key_ida_valid_principalsa_valid_aftera_valid_beforea_critical_optionsa_extensionsa_sig_typea_sig_keya_inner_sig_typea_signaturea_cert_key_typea_cert_bodya_tbs_cert_bodyatypingacastaSSHCertPublicKeyTypesaload_publicd ab2a_base64DanewlineFasignature_keyaverifyaasym_utilsaencode_dss_signaturea_get_ec_hash_algaECDSAahashesaSHA1a_SSH_RSA_SHA256aSHA256a_SSH_RSA_SHA512aSHA512apaddingaPKCS1v15aSECP256R1aSECP384R1aSHA384aSECP521R1a_SSH_PUBKEY_RCamatchuInvalid line formatagroupTlaendswitha_CERT_SUFFIXakey_typeTuDSA keys aren't supported in SSH certificatesaErroruInvalid formatarestuInvalid key formata_get_u64aprincipalsavalid_principalsa_parse_exts_optsTuDSA signatures aren't supported in SSH certificatesacert_bodyuSignature key type does not matchaSSHCertificateanoncea_load_ssh_public_identityaexts_optsaresultuDuplicate namealast_nameuFields not lexically sorteduThis certificate has an incorrect encoding for critical options or extensions. This will be an exception in cryptography 42aDeprecatedIn41aextrauUnexpected extra data after valueavalueDa_legacy_dsa_allowedtastripuOne-line public key format for OpenSSHa_valid_for_all_principalsupublic_key already setaSSHCertificateBuilderT
a_public_keya_seriala_typea_key_ida_valid_principalsa_valid_for_all_principalsa_valid_beforea_valid_aftera_critical_optionsa_extensionsuserial must be an integerg+userial must be between 0 and 2**64userial already setutype must be an SSHCertificateTypeutype already setukey_id must be bytesukey_id already setuPrincipals can't be set because the cert is valid for all principalsuprincipals must be a list of bytes and can't be emptyuvalid_principals already seta_SSHKEY_CERT_MAX_PRINCIPALSuReached or exceeded the maximum number of valid_principalsu<genexpr>uSSHCertificateBuilder.valid_principals.<locals>.<genexpr>uvalid_principals already set, can't set valid_for_all_principalsuvalid_for_all_principals already setTOintOfloatuvalid_before must be an int or floatuvalid_before must [0, 2**64)uvalid_before already setuvalid_after must be an int or floatuvalid_after must [0, 2**64)uvalid_after already setuname and value must be bytesuDuplicate critical option nameuDuplicate extension nameuUnsupported private key typeupublic_key must be setutype must be setuvalid_principals must be set if valid_for_all_principals is Falseuvalid_before must be setuvalid_after must be setuvalid_after must be earlier than valid_beforeasortu<lambda>uSSHCertificateBuilder.sign.<locals>.<lambda>TakeyTl aput_u64afprincipalsafcritafextasignadecode_dss_signatureaload_ssh_public_identitya__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsaenumareabase64TaencodebytesaencodebytesadataclassesTadataclassadataclassacryptographyTautilsucryptography.exceptionsTaUnsupportedAlgorithmucryptography.hazmat.primitivesTahashesucryptography.hazmat.primitives.asymmetricTadsaaecaed25519apaddingarsaucryptography.hazmat.primitives.ciphersTaAEADDecryptionContextaCipheraalgorithmsamodesaalgorithmsamodesucryptography.hazmat.primitives.serializationTaEncodingaKeySerializationEncryptionaNoEncryptionaPrivateFormataPublicFormata_KeySerializationEncryptionaKeySerializationEncryptionabcryptTakdfakdfa_bcrypt_supportedTFDapasswordasaltadesired_key_bytesaroundsaignore_few_roundsareturnabytespaintpaboolabytescssh-ed25519cssh-rsacssh-dsscecdsa-sha2-nistp256a_ECDSA_NISTP256cecdsa-sha2-nistp384a_ECDSA_NISTP384cecdsa-sha2-nistp521a_ECDSA_NISTP521c-cert-v01@openssh.comcrsa-sha2-256crsa-sha2-512acompileTc\A(\S+)[ \t]+(\S+)bopenssh-key-v1c-----BEGIN OPENSSH PRIVATE KEY-----a_SK_STARTc-----END OPENSSH PRIVATE KEY-----a_SK_ENDcbcryptcnonecaes256-ctrlc(.*?)aDOTALLB

ucryptography.hazmat.primitives.serialization.ssha__module__a_SSHCiphera__qualname__utyping.Type[algorithms.AES]aintutyping.Union[typing.Type[modes.CTR], typing.Type[modes.CBC], typing.Type[modes.GCM]]utyping.Optional[int]aboolTaAESl aCTRTaalgakey_lenamodeablock_lenaiv_lenatag_lenais_aeadcaes256-cbcaCBCcaes256-gcm@openssh.comaGCMlutyping.Dict[bytes, _SSHCipher]asecp256r1asecp384r1asecp521r1Dakeyareturnutyping.Union[SSHPrivateKeyTypes, SSHPublicKeyTypes]abytesDapublic_keyareturnuec.EllipticCurvePublicKeyabytesd
DadataaprefixasuffixareturnabytespppDadataablock_lenareturnabytesaintaNoneDadataareturnabytesaNoneDaciphernameapasswordasaltaroundsareturnabytesutyping.Optional[bytes]abytesaintuCipher[typing.Union[modes.CBC, modes.CTR, modes.GCM]]Dadataareturnamemoryviewutyping.Tuple[int, memoryview]Dadataareturnamemoryviewutyping.Tuple[memoryview, memoryview]DavalareturnaintabytesuBuild recursive structure without data copy.utyping.List[bytes]TnDainitareturnutyping.Optional[typing.List[bytes]]aNonea__init__u_FragList.__init__DavalareturnabytesaNoneu_FragList.put_rawDavalareturnaintaNoneu_FragList.put_u32u_FragList.put_u64Davalareturnutyping.Union[bytes, _FragList]aNoneu_FragList.put_sshstru_FragList.put_mpintDareturnaintu_FragList.sizeTlDadstbufaposareturnamemoryviewaintpu_FragList.renderDareturnabytesu_FragList.tobytesuFormat for RSA keys.

    Public:
        mpint e, n
    Private:
        mpint n, e, d, iqmp, p, q
    a_SSHFormatRSADadataamemoryviewu_SSHFormatRSA.get_publicDadataareturnamemoryviewutyping.Tuple[rsa.RSAPublicKey, memoryview]u_SSHFormatRSA.load_publicDadataareturnamemoryviewutyping.Tuple[rsa.RSAPrivateKey, memoryview]u_SSHFormatRSA.load_privateDapublic_keyaf_pubareturnursa.RSAPublicKeya_FragListaNoneu_SSHFormatRSA.encode_publicDaprivate_keyaf_privareturnursa.RSAPrivateKeya_FragListaNoneu_SSHFormatRSA.encode_privateuFormat for DSA keys.

    Public:
        mpint p, q, g, y
    Private:
        mpint p, q, g, y, x
    a_SSHFormatDSADadataareturnamemoryviewutyping.Tuple[typing.Tuple, memoryview]u_SSHFormatDSA.get_publicDadataareturnamemoryviewutyping.Tuple[dsa.DSAPublicKey, memoryview]u_SSHFormatDSA.load_publicDadataareturnamemoryviewutyping.Tuple[dsa.DSAPrivateKey, memoryview]u_SSHFormatDSA.load_privateDapublic_keyaf_pubareturnudsa.DSAPublicKeya_FragListaNoneu_SSHFormatDSA.encode_publicDaprivate_keyaf_privareturnudsa.DSAPrivateKeya_FragListaNoneu_SSHFormatDSA.encode_privateDapublic_numbersareturnudsa.DSAPublicNumbersaNoneu_SSHFormatDSA._validateuFormat for ECDSA keys.

    Public:
        str curve
        bytes point
    Private:
        str curve
        bytes point
        mpint secret
    a_SSHFormatECDSADassh_curve_nameacurveabytesuec.EllipticCurveu_SSHFormatECDSA.__init__u_SSHFormatECDSA.get_publicDadataareturnamemoryviewutyping.Tuple[ec.EllipticCurvePublicKey, memoryview]u_SSHFormatECDSA.load_publicDadataareturnamemoryviewutyping.Tuple[ec.EllipticCurvePrivateKey, memoryview]u_SSHFormatECDSA.load_privateDapublic_keyaf_pubareturnuec.EllipticCurvePublicKeya_FragListaNoneu_SSHFormatECDSA.encode_publicDaprivate_keyaf_privareturnuec.EllipticCurvePrivateKeya_FragListaNoneu_SSHFormatECDSA.encode_privateuFormat for Ed25519 keys.

    Public:
        bytes point
    Private:
        bytes point
        bytes secret_and_point
    a_SSHFormatEd25519u_SSHFormatEd25519.get_publicDadataareturnamemoryviewutyping.Tuple[ed25519.Ed25519PublicKey, memoryview]u_SSHFormatEd25519.load_publicDadataareturnamemoryviewutyping.Tuple[ed25519.Ed25519PrivateKey, memoryview]u_SSHFormatEd25519.load_privateDapublic_keyaf_pubareturnued25519.Ed25519PublicKeya_FragListaNoneu_SSHFormatEd25519.encode_publicDaprivate_keyaf_privareturnued25519.Ed25519PrivateKeya_FragListaNoneu_SSHFormatEd25519.encode_privatecnistp256cnistp384cnistp521Dakey_typeabytesaUnionaSSHPrivateKeyTypesDadataapasswordabackendareturnabytesutyping.Optional[bytes]utyping.AnyaSSHPrivateKeyTypesaload_ssh_private_keyDaprivate_keyapasswordaencryption_algorithmareturnaSSHPrivateKeyTypesabytesaKeySerializationEncryptionabytesa_serialize_ssh_private_keyaSSHPublicKeyTypesaEnuma__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>aUSERlaHOSTa__orig_bases__Da_noncea_public_keya_seriala_cctypea_key_ida_valid_principalsa_valid_aftera_valid_beforea_critical_optionsa_extensionsa_sig_typea_sig_keya_inner_sig_typea_signaturea_tbs_cert_bodya_cert_key_typea_cert_bodyamemoryviewaSSHPublicKeyTypesaintpamemoryviewutyping.List[bytes]aintputyping.Dict[bytes, bytes]utyping.Dict[bytes, bytes]amemoryviewppppabytesamemoryviewuSSHCertificate.__init__uSSHCertificate.nonceDareturnaSSHCertPublicKeyTypesuSSHCertificate.public_keyaserialuSSHCertificate.serialDareturnaSSHCertificateTypeatypeuSSHCertificate.typeakey_iduSSHCertificate.key_idDareturnutyping.List[bytes]uSSHCertificate.valid_principalsavalid_beforeuSSHCertificate.valid_beforeavalid_afteruSSHCertificate.valid_afterDareturnutyping.Dict[bytes, bytes]acritical_optionsuSSHCertificate.critical_optionsaextensionsuSSHCertificate.extensionsuSSHCertificate.signature_keyuSSHCertificate.public_bytesDareturnaNoneaverify_cert_signatureuSSHCertificate.verify_cert_signatureDacurveareturnuec.EllipticCurveuhashes.HashAlgorithmDadataareturnabytesutyping.Union[SSHCertificate, SSHPublicKeyTypes]Daexts_optsareturnamemoryviewutyping.Dict[bytes, bytes]Dadataabackendareturnabytesutyping.AnyaSSHPublicKeyTypesaload_ssh_public_keyDapublic_keyareturnaSSHPublicKeyTypesabytesaserialize_ssh_public_keyaSSHCertPrivateKeyTypeslD
a_public_keya_seriala_typea_key_ida_valid_principalsa_valid_for_all_principalsa_valid_beforea_valid_aftera_critical_optionsa_extensionsutyping.Optional[SSHCertPublicKeyTypes]utyping.Optional[int]utyping.Optional[SSHCertificateType]utyping.Optional[bytes]utyping.List[bytes]aboolutyping.Optional[int]utyping.Optional[int]utyping.List[typing.Tuple[bytes, bytes]]utyping.List[typing.Tuple[bytes, bytes]]uSSHCertificateBuilder.__init__Dapublic_keyareturnaSSHCertPublicKeyTypesaSSHCertificateBuilderuSSHCertificateBuilder.public_keyDaserialareturnaintaSSHCertificateBuilderuSSHCertificateBuilder.serialDatypeareturnaSSHCertificateTypeaSSHCertificateBuilderuSSHCertificateBuilder.typeDakey_idareturnabytesaSSHCertificateBuilderuSSHCertificateBuilder.key_idDavalid_principalsareturnutyping.List[bytes]aSSHCertificateBuilderuSSHCertificateBuilder.valid_principalsavalid_for_all_principalsuSSHCertificateBuilder.valid_for_all_principalsDavalid_beforeareturnutyping.Union[int, float]aSSHCertificateBuilderuSSHCertificateBuilder.valid_beforeDavalid_afterareturnutyping.Union[int, float]aSSHCertificateBuilderuSSHCertificateBuilder.valid_afterDanameavalueareturnabytespaSSHCertificateBuilderaadd_critical_optionuSSHCertificateBuilder.add_critical_optionaadd_extensionuSSHCertificateBuilder.add_extensionDaprivate_keyareturnaSSHCertPrivateKeyTypesaSSHCertificateuSSHCertificateBuilder.signucryptography\hazmat\primitives\serialization\ssh.pyTa.0wxTwxu<module cryptography.hazmat.primitives.serialization.ssh>Ta__class__Taselfa_noncea_public_keya_seriala_cctypea_key_ida_valid_principalsa_valid_aftera_valid_beforea_critical_optionsa_extensionsa_sig_typea_sig_keya_inner_sig_typea_signaturea_tbs_cert_bodya_cert_key_typea_cert_bodyTaselfa_public_keya_seriala_typea_key_ida_valid_principalsa_valid_for_all_principalsa_valid_beforea_valid_aftera_critical_optionsa_extensionsTaselfainitTaselfassh_curve_nameacurveTapasswordasaltadesired_key_bytesaroundsaignore_few_roundsTadataablock_lenTadataTapublic_keyacurveTacurveTadataavalTakeyakey_typeTadatawnTaciphernameapasswordasaltaroundsaciphaseedT"adataa_legacy_dsa_allowedwmakey_typeaorig_key_typeakey_bodyawith_certakformatarestacert_bodyainner_key_typeanonceapublic_keyaserialacctypeakey_idaprincipalsavalid_principalsaprincipalavalid_afteravalid_beforeacrit_optionsacritical_optionsaextsaextensionsw_asig_key_rawasig_typeasig_keyatbs_cert_bodyasignature_rawainner_sig_typeasig_restasignatureTakey_typeTaexts_optsaresultabnamealast_nameanameavalueaextraTaprivate_keyapasswordaencryption_algorithmakey_typeakformataf_kdfoptionsaciphernameablklenakdfnamearoundsasaltaciphankeysacheckvalacommentaf_public_keyaf_secretsaf_mainaslenamlenabufaofsTadataaprefixasuffixTavalanbytesTaselfapublic_numbersaparameter_numbersTaselfanameavalueTaselfTaselfaprivate_keyaf_privTaselfaprivate_keyaf_privaprivate_numbersapublic_numbersTaselfaprivate_keyaf_privapublic_keyaprivate_numbersTaselfaprivate_keyaf_privapublic_keyaraw_private_keyaraw_public_keyaf_keypairTaselfapublic_keyaf_pubapointTaselfapublic_keyaf_pubapublic_numbersaparameter_numbersTaselfapublic_keyaf_pubapubnTaselfapublic_keyaf_pubaraw_public_keyTaselfadataacurveapointTaselfadatawewnTaselfadatawpwqwgwyTaselfadataapointTaselfakey_idTaselfadataapubfieldsacurve_nameapointasecretaprivate_keyTaselfadataapubfieldswnwewdaiqmpwpwqadmp1admq1apublic_numbersaprivate_numbersaprivate_keyTaselfadataapubfieldswpwqwgwywxaparameter_numbersapublic_numbersaprivate_numbersaprivate_keyTaselfadataapubfieldsapointakeypairasecretapoint2aprivate_keyTaselfadataacurve_nameapointapublic_keyTaselfadatawewnapublic_numbersapublic_keyTaselfadatawpwqwgwyaparameter_numbersapublic_numbersapublic_keyTaselfadataapointapublic_keyTadataapasswordabackendwmap1ap2aciphernameakdfnameakdfoptionsankeysapubdataapub_key_typeakformatapubfieldsaciphername_bytesablklenatag_lenaedataatagasaltakbufaroundsaciphadecack1ack2akey_typeaprivate_keyacommentTadataabackendapublic_keyacert_or_keyTaselfapublic_keyTaselfavalTaselfadstbufaposafragaflenastartTaselfaserialTapublic_keyakey_typeakformataf_pubapubTaselfaprivate_keyaserialakey_idakey_typeacert_prefixanonceakformatwfafprincipalswpafcritanameavalueafoptvalafextafextvalaca_typeacaformatacafasignatureafsigahash_algwrwsafsigblobacert_dataTaselfasigformatasignature_keyasigkey_restTaselfabufTaselfatypeTaselfavalid_afterTaselfavalid_beforeTaselfavalid_principalsTaselfasignature_keywradatawsacomputed_sigahash_alg.cryptography.utils3zuu must be bytesu must be bytes-likeato_bytesabit_lengthlllabigucryptography.hazmat.bindings._rustTa_opensslla_opensslaffiafrom_bufferacastauintptr_tavalueamessageawarning_classa__class__a__init__a__name__a_modulea_DeprecatedValueawarningsawarnDastacklevelladelattrasysamodulesa_ModuleWithDeprecationsa_cached_Dainstanceaobjectainnerucached_property.<locals>.inneracached_nameasentinelafuncw<w.a_name_u: a_value_w>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaenumatypesatypingaUserWarninga__prepare__aCryptographyDeprecationWarninga__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ucryptography.utilsa__module__a__qualname__a__orig_bases__aDeprecatedIn36aDeprecatedIn37aDeprecatedIn40aDeprecatedIn41DanameavalueareturnastrabytesaNonea_check_bytesa_check_byteslikeTnDaintegeralengthareturnaintutyping.Optional[int]abytesaint_to_bytesDaobjareturnutyping.Anyutyping.Tuple[typing.Any, int]a_extract_buffer_lengthTEExceptionaInterfaceNotImplementedDavalueamessageaobjectastru_DeprecatedValue.__init__TaModuleTypeDamoduleutypes.ModuleTypeu_ModuleWithDeprecations.__init__Daattrareturnastraobjecta__getattr__u_ModuleWithDeprecations.__getattr__DaattravalueareturnastraobjectaNonea__setattr__u_ModuleWithDeprecations.__setattr__DaattrareturnastraNonea__delattr__u_ModuleWithDeprecations.__delattr__Dareturnutyping.Sequence[str]a__dir__u_ModuleWithDeprecations.__dir__Davalueamodule_nameamessageawarning_classanameareturnaobjectastrputyping.Type[Warning]utyping.Optional[str]a_DeprecatedValueadeprecatedDafuncareturnutyping.Callableapropertyacached_propertyaEnumDareturnastra__repr__uEnum.__repr__a__str__uEnum.__str__ucryptography\utils.pyu<module cryptography.utils>Ta__class__TaselfaattraobjTaselfTaselfamodulea__class__Taselfavalueamessageawarning_classTaselfaattravalueTanameavalueTaobja_opensslabufTafuncacached_nameasentinelainnerTavalueamodule_nameamessageawarning_classanameamoduleadvTainstanceacachearesultacached_nameasentinelafuncTacached_nameafuncasentinelTaintegeralength.cryptography.x509.baseHa__class__a__init__aoidaextensionuThis extension has already been set.utoo many values to unpack (expected 3)uThis attribute has already been set.atzinfoautcoffsetadatetimeatimedeltaareplaceTnTatzinfouNormalizes a datetime to a naive datetime in UTC.

    time -- datetime to normalize. Assumed to be in UTC if not timezone
            aware.
    a_oida_valuea_typeu<Attribute(oid=uu, value=avalueu)>aAttributea_attributesu<Attributes(aAttributeNotFounduNo u attribute was foundaparsed_versiona_serial_numbera_revocation_datea_extensionsarust_x509aload_pem_x509_certificateaload_pem_x509_certificatesaload_der_x509_certificateaload_pem_x509_csraload_der_x509_csraload_pem_x509_crlaload_der_x509_crla_subject_nameu
        Creates an empty X.509 certificate request (v1).
        aNameuExpecting x509.Name object.uThe subject name may only be set once.aCertificateSigningRequestBuilderu
        Sets the certificate requestor's distinguished name.
        aExtensionTypeuextension must be an ExtensionTypeaExtensiona_reject_duplicate_extensionu
        Adds an X.509 extension to the certificate request.
        aObjectIdentifieruoid must be an ObjectIdentifieruvalue must be bytesa_ASN1Typeutag must be _ASN1Typea_reject_duplicate_attributeu
        Adds an X.509 attribute with an OID and associated value.
        uA CertificateSigningRequest must have a subjectacreate_x509_csru
        Signs the request using the requestor's private key.
        aVersionav3a_versiona_issuer_namea_public_keya_not_valid_beforea_not_valid_afteruThe issuer name may only be set once.aCertificateBuilderu
        Sets the CA's distinguished name.
        u
        Sets the requestor's distinguished name.
        adsaaDSAPublicKeyarsaaRSAPublicKeyaecaEllipticCurvePublicKeyaed25519aEd25519PublicKeyaed448aEd448PublicKeyax25519aX25519PublicKeyax448aX448PublicKeyuExpecting one of DSAPublicKey, RSAPublicKey, EllipticCurvePublicKey, Ed25519PublicKey, Ed448PublicKey, X25519PublicKey, or X448PublicKey.uThe public key may only be set once.u
        Sets the requestor's public key (as found in the signing request).
        uSerial number must be of integral type.uThe serial number may only be set once.luThe serial number should be positive.abit_lengthluThe serial number should not be more than 159 bits.u
        Sets the certificate serial number.
        uExpecting datetime object.uThe not valid before may only be set once.a_convert_to_naive_utc_timea_EARLIEST_UTC_TIMEuThe not valid before date must be on or after 1950 January 1).uThe not valid before date must be before the not valid after date.u
        Sets the certificate activation time.
        uThe not valid after may only be set once.uThe not valid after date must be on or after 1950 January 1.uThe not valid after date must be after the not valid before date.u
        Sets the certificate expiration time.
        u
        Adds an X.509 extension to the certificate.
        uA certificate must have a subject nameuA certificate must have an issuer nameuA certificate must have a serial numberuA certificate must have a not valid before timeuA certificate must have a not valid after timeuA certificate must have a public keyapaddingaPSSaPKCS1v15uPadding must be PSS or PKCS1v15aRSAPrivateKeyuPadding is only supported for RSA keysacreate_x509_certificateu
        Signs the certificate using the CA's private key.
        a_last_updatea_next_updatea_revoked_certificatesaCertificateRevocationListBuilderuLast update may only be set once.uThe last update date must be on or after 1950 January 1.uThe last update date must be before the next update date.uThe next update date must be after the last update date.u
        Adds an X.509 extension to the certificate revocation list.
        aRevokedCertificateuMust be an instance of RevokedCertificateu
        Adds a revoked certificate to the CRL.
        uA CRL must have an issuer nameuA CRL must have a last update timeuA CRL must have a next update timeacreate_x509_crluThe serial number should be positiveaRevokedCertificateBuilderuThe revocation date may only be set once.uThe revocation date must be on or after 1950 January 1.uA revoked certificate must have a serial numberuA revoked certificate must have a revocation datea_RawRevokedCertificateaExtensionsafrom_bytesaosaurandomTlabigla__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingacryptographyTautilsautilsucryptography.hazmat.bindings._rustTax509ax509ucryptography.hazmat.primitivesTahashesaserializationahashesaserializationucryptography.hazmat.primitives.asymmetricTadsaaecaed448aed25519apaddingarsaax448ax25519ucryptography.hazmat.primitives.asymmetric.typesTaCertificateIssuerPrivateKeyTypesaCertificateIssuerPublicKeyTypesaCertificatePublicKeyTypesaCertificateIssuerPrivateKeyTypesaCertificateIssuerPublicKeyTypesaCertificatePublicKeyTypesucryptography.x509.extensionsTaExtensionaExtensionsaExtensionTypea_make_sequence_methodsa_make_sequence_methodsucryptography.x509.nameTaNamea_ASN1Typeucryptography.x509.oidTaObjectIdentifierTllpaUnionaSHA224aSHA256aSHA384aSHA512aSHA3_224aSHA3_256aSHA3_384aSHA3_512a_AllowedHashTypesTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.basea__module__a__qualname__DamsgaoidareturnastraObjectIdentifieraNoneuAttributeNotFound.__init__a__orig_bases__DaextensionaextensionsareturnuExtension[ExtensionType]utyping.List[Extension[ExtensionType]]aNoneDaoidaattributesareturnaObjectIdentifierutyping.List[typing.Tuple[ObjectIdentifier, bytes, typing.Optional[int]]]aNoneDatimeareturnudatetime.datetimeudatetime.datetimeaUTF8StringDaoidavaluea_typeareturnaObjectIdentifierabytesaintaNoneuAttribute.__init__DareturnaObjectIdentifieruAttribute.oidDareturnabytesuAttribute.valueDareturnastra__repr__uAttribute.__repr__Daotherareturnaobjectaboola__eq__uAttribute.__eq__Dareturnainta__hash__uAttribute.__hash__TaAttributesDaattributesareturnutyping.Iterable[Attribute]aNoneuAttributes.__init__Ta_attributesa__len__a__iter__uAttributes.__repr__DaoidareturnaObjectIdentifieraAttributeaget_attribute_for_oiduAttributes.get_attribute_for_oidaEnumav1laInvalidVersionDamsgaparsed_versionareturnastraintaNoneuInvalidVersion.__init__ametaclassaABCMetaTaCertificateTaCertificateaabstractmethodDaalgorithmareturnuhashes.HashAlgorithmabytesu
        Returns bytes using digest passed.
        afingerprintuCertificate.fingerprintapropertyu
        Returns certificate serial number
        aserial_numberuCertificate.serial_numberDareturnaVersionu
        Returns the certificate version
        aversionuCertificate.versionDareturnaCertificatePublicKeyTypesu
        Returns the public key
        apublic_keyuCertificate.public_keyDareturnudatetime.datetimeu
        Not before time (represented as UTC datetime)
        anot_valid_beforeuCertificate.not_valid_beforeu
        Not after time (represented as UTC datetime)
        anot_valid_afteruCertificate.not_valid_afterDareturnaNameu
        Returns the issuer name object.
        aissueruCertificate.issueru
        Returns the subject name object.
        asubjectuCertificate.subjectDareturnutyping.Optional[hashes.HashAlgorithm]u
        Returns a HashAlgorithm corresponding to the type of the digest signed
        in the certificate.
        asignature_hash_algorithmuCertificate.signature_hash_algorithmu
        Returns the ObjectIdentifier of the signature algorithm.
        asignature_algorithm_oiduCertificate.signature_algorithm_oidDareturnutyping.Union[None, padding.PSS, padding.PKCS1v15, ec.ECDSA]u
        Returns the signature algorithm parameters.
        asignature_algorithm_parametersuCertificate.signature_algorithm_parametersDareturnaExtensionsu
        Returns an Extensions object.
        aextensionsuCertificate.extensionsu
        Returns the signature bytes.
        asignatureuCertificate.signatureu
        Returns the tbsCertificate payload bytes as defined in RFC 5280.
        atbs_certificate_bytesuCertificate.tbs_certificate_bytesu
        Returns the tbsCertificate payload bytes with the SCT list extension
        stripped.
        atbs_precertificate_bytesuCertificate.tbs_precertificate_bytesu
        Checks equality.
        uCertificate.__eq__u
        Computes a hash.
        uCertificate.__hash__Daencodingareturnuserialization.Encodingabytesu
        Serializes the certificate to PEM or DER format.
        apublic_bytesuCertificate.public_bytesDaissuerareturnaCertificateaNoneu
        This method verifies that certificate issuer name matches the
        issuer subject name and that the certificate is signed by the
        issuer's private key. No other validation is performed.
        averify_directly_issued_byuCertificate.verify_directly_issued_byaregisterTaRevokedCertificateTu
        Returns the serial number of the revoked certificate.
        uRevokedCertificate.serial_numberu
        Returns the date of when this certificate was revoked.
        arevocation_dateuRevokedCertificate.revocation_dateu
        Returns an Extensions object containing a list of Revoked extensions.
        uRevokedCertificate.extensionsDaserial_numberarevocation_dateaextensionsaintudatetime.datetimeaExtensionsu_RawRevokedCertificate.__init__u_RawRevokedCertificate.serial_numberu_RawRevokedCertificate.revocation_dateu_RawRevokedCertificate.extensionsTaCertificateRevocationListTaCertificateRevocationListu
        Serializes the CRL to PEM or DER format.
        uCertificateRevocationList.public_bytesuCertificateRevocationList.fingerprintDaserial_numberareturnaintutyping.Optional[RevokedCertificate]u
        Returns an instance of RevokedCertificate or None if the serial_number
        is not in the CRL.
        aget_revoked_certificate_by_serial_numberuCertificateRevocationList.get_revoked_certificate_by_serial_numberuCertificateRevocationList.signature_hash_algorithmuCertificateRevocationList.signature_algorithm_oidu
        Returns the X509Name with the issuer of this CRL.
        uCertificateRevocationList.issuerDareturnutyping.Optional[datetime.datetime]u
        Returns the date of next update for this CRL.
        anext_updateuCertificateRevocationList.next_updateu
        Returns the date of last update for this CRL.
        alast_updateuCertificateRevocationList.last_updateu
        Returns an Extensions object containing a list of CRL extensions.
        uCertificateRevocationList.extensionsuCertificateRevocationList.signatureu
        Returns the tbsCertList payload bytes as defined in RFC 5280.
        atbs_certlist_bytesuCertificateRevocationList.tbs_certlist_bytesuCertificateRevocationList.__eq__u
        Number of revoked certificates in the CRL.
        uCertificateRevocationList.__len__aoverloadDaidxareturnaintaRevokedCertificateuCertificateRevocationList.__getitem__Daidxareturnasliceutyping.List[RevokedCertificate]Daidxareturnutyping.Union[int, slice]utyping.Union[RevokedCertificate, typing.List[RevokedCertificate]]u
        Returns a revoked certificate (or slice of revoked certificates).
        Dareturnutyping.Iterator[RevokedCertificate]u
        Iterator over the revoked certificates
        uCertificateRevocationList.__iter__Dapublic_keyareturnaCertificateIssuerPublicKeyTypesaboolu
        Verifies signature of revocation list against given public key.
        ais_signature_validuCertificateRevocationList.is_signature_validTaCertificateSigningRequestTaCertificateSigningRequestuCertificateSigningRequest.__eq__uCertificateSigningRequest.__hash__uCertificateSigningRequest.public_keyuCertificateSigningRequest.subjectuCertificateSigningRequest.signature_hash_algorithmuCertificateSigningRequest.signature_algorithm_oidu
        Returns the extensions in the signing request.
        uCertificateSigningRequest.extensionsDareturnaAttributesu
        Returns an Attributes object.
        aattributesuCertificateSigningRequest.attributesu
        Encodes the request to PEM or DER format.
        uCertificateSigningRequest.public_bytesuCertificateSigningRequest.signatureu
        Returns the PKCS#10 CertificationRequestInfo bytes as defined in RFC
        2986.
        atbs_certrequest_bytesuCertificateSigningRequest.tbs_certrequest_bytesDareturnaboolu
        Verifies signature of signing request.
        uCertificateSigningRequest.is_signature_validDaoidareturnaObjectIdentifierabytesu
        Get the attribute value for a given OID.
        uCertificateSigningRequest.get_attribute_for_oidDadataabackendareturnabytesutyping.AnyaCertificateDadataareturnabytesutyping.List[Certificate]Dadataabackendareturnabytesutyping.AnyaCertificateSigningRequestDadataabackendareturnabytesutyping.AnyaCertificateRevocationListDasubject_nameaextensionsaattributesutyping.Optional[Name]utyping.List[Extension[ExtensionType]]utyping.List[typing.Tuple[ObjectIdentifier, bytes, typing.Optional[int]]]uCertificateSigningRequestBuilder.__init__DanameareturnaNameaCertificateSigningRequestBuilderasubject_nameuCertificateSigningRequestBuilder.subject_nameDaextvalacriticalareturnaExtensionTypeaboolaCertificateSigningRequestBuilderaadd_extensionuCertificateSigningRequestBuilder.add_extensionDa_tagnDaoidavaluea_tagareturnaObjectIdentifierabytesutyping.Optional[_ASN1Type]aCertificateSigningRequestBuilderaadd_attributeuCertificateSigningRequestBuilder.add_attributeDaprivate_keyaalgorithmabackendareturnaCertificateIssuerPrivateKeyTypesutyping.Optional[_AllowedHashTypes]utyping.AnyaCertificateSigningRequestasignuCertificateSigningRequestBuilder.signa__annotations__utyping.List[Extension[ExtensionType]]Daissuer_nameasubject_nameapublic_keyaserial_numberanot_valid_beforeanot_valid_afteraextensionsareturnutyping.Optional[Name]utyping.Optional[Name]utyping.Optional[CertificatePublicKeyTypes]utyping.Optional[int]utyping.Optional[datetime.datetime]utyping.Optional[datetime.datetime]utyping.List[Extension[ExtensionType]]aNoneuCertificateBuilder.__init__DanameareturnaNameaCertificateBuilderaissuer_nameuCertificateBuilder.issuer_nameuCertificateBuilder.subject_nameDakeyareturnaCertificatePublicKeyTypesaCertificateBuilderuCertificateBuilder.public_keyDanumberareturnaintaCertificateBuilderuCertificateBuilder.serial_numberDatimeareturnudatetime.datetimeaCertificateBuilderuCertificateBuilder.not_valid_beforeuCertificateBuilder.not_valid_afterDaextvalacriticalareturnaExtensionTypeaboolaCertificateBuilderuCertificateBuilder.add_extensionDarsa_paddingnDaprivate_keyaalgorithmabackendarsa_paddingareturnaCertificateIssuerPrivateKeyTypesutyping.Optional[_AllowedHashTypes]utyping.Anyutyping.Optional[typing.Union[padding.PSS, padding.PKCS1v15]]aCertificateuCertificateBuilder.signutyping.List[RevokedCertificate]Daissuer_namealast_updateanext_updateaextensionsarevoked_certificatesutyping.Optional[Name]utyping.Optional[datetime.datetime]utyping.Optional[datetime.datetime]utyping.List[Extension[ExtensionType]]utyping.List[RevokedCertificate]uCertificateRevocationListBuilder.__init__Daissuer_nameareturnaNameaCertificateRevocationListBuilderuCertificateRevocationListBuilder.issuer_nameDalast_updateareturnudatetime.datetimeaCertificateRevocationListBuilderuCertificateRevocationListBuilder.last_updateDanext_updateareturnudatetime.datetimeaCertificateRevocationListBuilderuCertificateRevocationListBuilder.next_updateDaextvalacriticalareturnaExtensionTypeaboolaCertificateRevocationListBuilderuCertificateRevocationListBuilder.add_extensionDarevoked_certificateareturnaRevokedCertificateaCertificateRevocationListBuilderaadd_revoked_certificateuCertificateRevocationListBuilder.add_revoked_certificateDaprivate_keyaalgorithmabackendareturnaCertificateIssuerPrivateKeyTypesutyping.Optional[_AllowedHashTypes]utyping.AnyaCertificateRevocationListuCertificateRevocationListBuilder.signDaserial_numberarevocation_dateaextensionsutyping.Optional[int]utyping.Optional[datetime.datetime]utyping.List[Extension[ExtensionType]]uRevokedCertificateBuilder.__init__DanumberareturnaintaRevokedCertificateBuilderuRevokedCertificateBuilder.serial_numberDatimeareturnudatetime.datetimeaRevokedCertificateBuilderuRevokedCertificateBuilder.revocation_dateDaextvalacriticalareturnaExtensionTypeaboolaRevokedCertificateBuilderuRevokedCertificateBuilder.add_extensionDabackendareturnutyping.AnyaRevokedCertificateabuilduRevokedCertificateBuilder.buildarandom_serial_numberucryptography\x509\base.pyu<module cryptography.x509.base>Ta__class__TaselfaotherTaselfaidxTaselfTaselfaattributesTaselfaissuer_namealast_updateanext_updateaextensionsarevoked_certificatesTaselfaissuer_nameasubject_nameapublic_keyaserial_numberanot_valid_beforeanot_valid_afteraextensionsTaselfamsgaoida__class__Taselfamsgaparsed_versiona__class__Taselfaoidavaluea_typeTaselfaserial_numberarevocation_dateaextensionsTaselfasubject_nameaextensionsaattributesTatimeaoffsetTaoidaattributesaattr_oidw_TaextensionaextensionsweTaselfaoidavaluea_tagatagTaselfaextvalacriticalaextensionTaselfarevoked_certificateTaselfabackendTaselfaalgorithmTaselfaoidTaselfaoidaattrTaselfaserial_numberTaselfapublic_keyTaselfaissuer_nameTaselfanameTaselfalast_updateTadataabackendTadataTaselfanext_updateTaselfatimeTaselfaencodingTaselfakeyTaselfanumberTaselfaprivate_keyaalgorithmabackendTaselfaprivate_keyaalgorithmabackendarsa_paddingTaselfaissuer.cryptography.x509.certificate_transparencyXa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcladatetimeacryptographyTautilsautilsucryptography.hazmat.bindings._rustTax509ax509arust_x509ucryptography.hazmat.primitives.hashesTaHashAlgorithmaHashAlgorithmaEnuma__prepare__aLogEntryTypea__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.certificate_transparencya__module__a__qualname__aX509_CERTIFICATElaPRE_CERTIFICATEa__orig_bases__aVersionav1aSignatureAlgorithmu
    Signature algorithms that are valid for SCTs.

    These are exactly the same as SignatureAlgorithm in RFC 5246 (TLS 1.2).

    See: <https://datatracker.ietf.org/doc/html/rfc5246#section-7.4.1.4.1>
    aANONYMOUSaRSAlaDSAlaECDSAametaclassaABCMetaTaSignedCertificateTimestampTaSignedCertificateTimestampapropertyaabstractmethodDareturnaVersionu
        Returns the SCT version.
        aversionuSignedCertificateTimestamp.versionDareturnabytesu
        Returns an identifier indicating which log this SCT is for.
        alog_iduSignedCertificateTimestamp.log_idDareturnudatetime.datetimeu
        Returns the timestamp for this SCT.
        atimestampuSignedCertificateTimestamp.timestampDareturnaLogEntryTypeu
        Returns whether this is an SCT for a certificate or pre-certificate.
        aentry_typeuSignedCertificateTimestamp.entry_typeDareturnaHashAlgorithmu
        Returns the hash algorithm used for the SCT's signature.
        asignature_hash_algorithmuSignedCertificateTimestamp.signature_hash_algorithmDareturnaSignatureAlgorithmu
        Returns the signing algorithm used for the SCT's signature.
        asignature_algorithmuSignedCertificateTimestamp.signature_algorithmu
        Returns the signature for this SCT.
        asignatureuSignedCertificateTimestamp.signatureu
        Returns the raw bytes of any extensions for this SCT.
        aextension_bytesuSignedCertificateTimestamp.extension_bytesTaregisteraSctucryptography\x509\certificate_transparency.pyu<module cryptography.x509.certificate_transparency>Ta__class__Taselfu.cryptography.x509,a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existingax509TaNUITKA_PACKAGE_cryptography_x509u\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.x509Tacertificate_transparencyacertificate_transparencyucryptography.x509.baseTaAttributeaAttributeNotFoundaAttributesaCertificateaCertificateBuilderaCertificateRevocationListaCertificateRevocationListBuilderaCertificateSigningRequestaCertificateSigningRequestBuilderaInvalidVersionaRevokedCertificateaRevokedCertificateBuilderaVersionaload_der_x509_certificateaload_der_x509_crlaload_der_x509_csraload_pem_x509_certificateaload_pem_x509_certificatesaload_pem_x509_crlaload_pem_x509_csrarandom_serial_numberaAttributeaAttributeNotFoundaAttributesaCertificateaCertificateBuilderaCertificateRevocationListaCertificateRevocationListBuilderaCertificateSigningRequestaCertificateSigningRequestBuilderaInvalidVersionaRevokedCertificateaRevokedCertificateBuilderaVersionaload_der_x509_certificateaload_der_x509_crlaload_der_x509_csraload_pem_x509_certificateaload_pem_x509_certificatesaload_pem_x509_crlaload_pem_x509_csrarandom_serial_numberucryptography.x509.extensionsT+aAccessDescriptionaAuthorityInformationAccessaAuthorityKeyIdentifieraBasicConstraintsaCertificateIssueraCertificatePoliciesaCRLDistributionPointsaCRLNumberaCRLReasonaDeltaCRLIndicatoraDistributionPointaDuplicateExtensionaExtendedKeyUsageaExtensionaExtensionNotFoundaExtensionsaExtensionTypeaFreshestCRLaGeneralNamesaInhibitAnyPolicyaInvalidityDateaIssuerAlternativeNameaIssuingDistributionPointaKeyUsageaMSCertificateTemplateaNameConstraintsaNoticeReferenceaOCSPAcceptableResponsesaOCSPNoCheckaOCSPNonceaPolicyConstraintsaPolicyInformationaPrecertificateSignedCertificateTimestampsaPrecertPoisonaReasonFlagsaSignedCertificateTimestampsaSubjectAlternativeNameaSubjectInformationAccessaSubjectKeyIdentifieraTLSFeatureaTLSFeatureTypeaUnrecognizedExtensionaUserNoticeaAccessDescriptionaAuthorityInformationAccessaAuthorityKeyIdentifieraBasicConstraintsaCertificateIssueraCertificatePoliciesaCRLDistributionPointsaCRLNumberaCRLReasonaDeltaCRLIndicatoraDistributionPointaDuplicateExtensionaExtendedKeyUsageaExtensionaExtensionNotFoundaExtensionsaExtensionTypeaFreshestCRLaGeneralNamesaInhibitAnyPolicyaInvalidityDateaIssuerAlternativeNameaIssuingDistributionPointaKeyUsageaMSCertificateTemplateaNameConstraintsaNoticeReferenceaOCSPAcceptableResponsesaOCSPNoCheckaOCSPNonceaPolicyConstraintsaPolicyInformationaPrecertificateSignedCertificateTimestampsaPrecertPoisonaReasonFlagsaSignedCertificateTimestampsaSubjectAlternativeNameaSubjectInformationAccessaSubjectKeyIdentifieraTLSFeatureaTLSFeatureTypeaUnrecognizedExtensionaUserNoticeucryptography.x509.general_nameTaDirectoryNameaDNSNameaGeneralNameaIPAddressaOtherNameaRegisteredIDaRFC822NameaUniformResourceIdentifieraUnsupportedGeneralNameTypeaDirectoryNameaDNSNameaGeneralNameaIPAddressaOtherNameaRegisteredIDaRFC822NameaUniformResourceIdentifieraUnsupportedGeneralNameTypeucryptography.x509.nameTaNameaNameAttributeaRelativeDistinguishedNameaNameaNameAttributeaRelativeDistinguishedNameucryptography.x509.oidTaAuthorityInformationAccessOIDaCertificatePoliciesOIDaCRLEntryExtensionOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaObjectIdentifieraSignatureAlgorithmOIDaAuthorityInformationAccessOIDaCertificatePoliciesOIDaCRLEntryExtensionOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaObjectIdentifieraSignatureAlgorithmOIDaAUTHORITY_INFORMATION_ACCESSaOID_AUTHORITY_INFORMATION_ACCESSaAUTHORITY_KEY_IDENTIFIERaOID_AUTHORITY_KEY_IDENTIFIERaBASIC_CONSTRAINTSaOID_BASIC_CONSTRAINTSaCERTIFICATE_POLICIESaOID_CERTIFICATE_POLICIESaCRL_DISTRIBUTION_POINTSaOID_CRL_DISTRIBUTION_POINTSaEXTENDED_KEY_USAGEaOID_EXTENDED_KEY_USAGEaFRESHEST_CRLaOID_FRESHEST_CRLaINHIBIT_ANY_POLICYaOID_INHIBIT_ANY_POLICYaISSUER_ALTERNATIVE_NAMEaOID_ISSUER_ALTERNATIVE_NAMEaKEY_USAGEaOID_KEY_USAGEaNAME_CONSTRAINTSaOID_NAME_CONSTRAINTSaOCSP_NO_CHECKaOID_OCSP_NO_CHECKaPOLICY_CONSTRAINTSaOID_POLICY_CONSTRAINTSaPOLICY_MAPPINGSaOID_POLICY_MAPPINGSaSUBJECT_ALTERNATIVE_NAMEaOID_SUBJECT_ALTERNATIVE_NAMEaSUBJECT_DIRECTORY_ATTRIBUTESaOID_SUBJECT_DIRECTORY_ATTRIBUTESaSUBJECT_INFORMATION_ACCESSaOID_SUBJECT_INFORMATION_ACCESSaSUBJECT_KEY_IDENTIFIERaOID_SUBJECT_KEY_IDENTIFIERaDSA_WITH_SHA1aOID_DSA_WITH_SHA1aDSA_WITH_SHA224aOID_DSA_WITH_SHA224aDSA_WITH_SHA256aOID_DSA_WITH_SHA256aECDSA_WITH_SHA1aOID_ECDSA_WITH_SHA1aECDSA_WITH_SHA224aOID_ECDSA_WITH_SHA224aECDSA_WITH_SHA256aOID_ECDSA_WITH_SHA256aECDSA_WITH_SHA384aOID_ECDSA_WITH_SHA384aECDSA_WITH_SHA512aOID_ECDSA_WITH_SHA512aRSA_WITH_MD5aOID_RSA_WITH_MD5aRSA_WITH_SHA1aOID_RSA_WITH_SHA1aRSA_WITH_SHA224aOID_RSA_WITH_SHA224aRSA_WITH_SHA256aOID_RSA_WITH_SHA256aRSA_WITH_SHA384aOID_RSA_WITH_SHA384aRSA_WITH_SHA512aOID_RSA_WITH_SHA512aRSASSA_PSSaOID_RSASSA_PSSaCOMMON_NAMEaOID_COMMON_NAMEaCOUNTRY_NAMEaOID_COUNTRY_NAMEaDOMAIN_COMPONENTaOID_DOMAIN_COMPONENTaDN_QUALIFIERaOID_DN_QUALIFIERaEMAIL_ADDRESSaOID_EMAIL_ADDRESSaGENERATION_QUALIFIERaOID_GENERATION_QUALIFIERaGIVEN_NAMEaOID_GIVEN_NAMEaLOCALITY_NAMEaOID_LOCALITY_NAMEaORGANIZATIONAL_UNIT_NAMEaOID_ORGANIZATIONAL_UNIT_NAMEaORGANIZATION_NAMEaOID_ORGANIZATION_NAMEaPSEUDONYMaOID_PSEUDONYMaSERIAL_NUMBERaOID_SERIAL_NUMBERaSTATE_OR_PROVINCE_NAMEaOID_STATE_OR_PROVINCE_NAMEaSURNAMEaOID_SURNAMEaTITLEaOID_TITLEaCLIENT_AUTHaOID_CLIENT_AUTHaCODE_SIGNINGaOID_CODE_SIGNINGaEMAIL_PROTECTIONaOID_EMAIL_PROTECTIONaOCSP_SIGNINGaOID_OCSP_SIGNINGaSERVER_AUTHaOID_SERVER_AUTHaTIME_STAMPINGaOID_TIME_STAMPINGaANY_POLICYaOID_ANY_POLICYaCPS_QUALIFIERaOID_CPS_QUALIFIERaCPS_USER_NOTICEaOID_CPS_USER_NOTICEaCERTIFICATE_ISSUERaOID_CERTIFICATE_ISSUERaCRL_REASONaOID_CRL_REASONaINVALIDITY_DATEaOID_INVALIDITY_DATEaCA_ISSUERSaOID_CA_ISSUERSaOCSPaOID_OCSPLRacertificate_transparencyaload_pem_x509_certificateaload_pem_x509_certificatesaload_der_x509_certificateaload_pem_x509_csraload_der_x509_csraload_pem_x509_crlaload_der_x509_crlarandom_serial_numberaAttributeaAttributeNotFoundaAttributesaInvalidVersionaDeltaCRLIndicatoraDuplicateExtensionaExtensionNotFoundaUnsupportedGeneralNameTypeaNameAttributeaNameaRelativeDistinguishedNameaObjectIdentifieraExtensionTypeaExtensionsaExtensionaExtendedKeyUsageaFreshestCRLaIssuingDistributionPointaTLSFeatureaTLSFeatureTypeaOCSPAcceptableResponsesaOCSPNoCheckaBasicConstraintsaCRLNumberaKeyUsageaAuthorityInformationAccessaSubjectInformationAccessaAccessDescriptionaCertificatePoliciesaPolicyInformationaUserNoticeaNoticeReferenceaSubjectKeyIdentifieraNameConstraintsaCRLDistributionPointsaDistributionPointaReasonFlagsaInhibitAnyPolicyaSubjectAlternativeNameaIssuerAlternativeNameaAuthorityKeyIdentifieraGeneralNamesaGeneralNameaRFC822NameaDNSNameaUniformResourceIdentifieraRegisteredIDaDirectoryNameaIPAddressaOtherNameaCertificateaCertificateRevocationListaCertificateRevocationListBuilderaCertificateSigningRequestaRevokedCertificateaRevokedCertificateBuilderaCertificateSigningRequestBuilderaCertificateBuilderaVersionaOID_CA_ISSUERSaOID_OCSPaCertificateIssueraCRLReasonaInvalidityDateaUnrecognizedExtensionaPolicyConstraintsaPrecertificateSignedCertificateTimestampsaPrecertPoisonaOCSPNonceaSignedCertificateTimestampsaSignatureAlgorithmOIDaNameOIDaMSCertificateTemplatea__all__ucryptography\x509\__init__.pyu<module cryptography.x509>u.cryptography.x509.extensionslDaRSAPublicKeyapublic_bytesaserializationaEncodingaDERaPublicFormataPKCS1aEllipticCurvePublicKeyaX962aUncompressedPointaSubjectPublicKeyInfoaasn1aparse_spki_for_dataahashlibasha1adigestDareturnaintalen_methodu_make_sequence_methods.<locals>.len_methodaiter_methodu_make_sequence_methods.<locals>.iter_methodagetitem_methodu_make_sequence_methods.<locals>.getitem_methodafield_namea__class__a__init__aoidupublic_bytes is not implemented for extension type {!r}u
        Serializes the extension type to DER.
        a_extensionsaExtensionNotFounduNo uu extension was foundaUnrecognizedExtensionuUnrecognizedExtension can't be used with get_extension_for_class because more than one instance of the class may be present.avalueu<Extensions(u)>ucrl_number must be an integera_crl_numberaCRLNumberacrl_numberu<CRLNumber(arust_x509aencode_extension_valueuauthority_cert_issuer and authority_cert_serial_number must both be present or both Noneuauthority_cert_issuer must be a list of GeneralName objectsuauthority_cert_serial_number must be an integera_key_identifieraauthority_cert_issuera_authority_cert_issuera_authority_cert_serial_numberaGeneralNameu<genexpr>uAuthorityKeyIdentifier.__init__.<locals>.<genexpr>a_key_identifier_from_public_keyTakey_identifieraauthority_cert_issueraauthority_cert_serial_numberu<AuthorityKeyIdentifier(key_identifier={0.key_identifier!r}, authority_cert_issuer={0.authority_cert_issuer}, authority_cert_serial_number={0.authority_cert_serial_number})>aAuthorityKeyIdentifierakey_identifieraauthority_cert_serial_numbera_digestu<SubjectKeyIdentifier(digest=aSubjectKeyIdentifieraconstant_timeabytes_equEvery item in the descriptions list must be an AccessDescriptiona_descriptionsaAccessDescriptionuAuthorityInformationAccess.__init__.<locals>.<genexpr>u<AuthorityInformationAccess(aAuthorityInformationAccessuSubjectInformationAccess.__init__.<locals>.<genexpr>u<SubjectInformationAccess(aSubjectInformationAccessaObjectIdentifieruaccess_method must be an ObjectIdentifieruaccess_location must be a GeneralNamea_access_methoda_access_locationu<AccessDescription(access_method={0.access_method}, access_location={0.access_location})>aaccess_methodaaccess_locationuca must be a boolean valueupath_length must be None when ca is Falselupath_length must be a non-negative integer or Nonea_caa_path_lengthu<BasicConstraints(ca={0.ca}, path_length={0.path_length})>aBasicConstraintsacaapath_lengthaDeltaCRLIndicatoru<DeltaCRLIndicator(crl_number=udistribution_points must be a list of DistributionPoint objectsa_distribution_pointsaDistributionPointuCRLDistributionPoints.__init__.<locals>.<genexpr>u<CRLDistributionPoints(aCRLDistributionPointsuFreshestCRL.__init__.<locals>.<genexpr>u<FreshestCRL(aFreshestCRLuYou cannot provide both full_name and relative_name, at least one must be None.uEither full_name, relative_name or crl_issuer must be provided.ufull_name must be a list of GeneralName objectsaRelativeDistinguishedNameurelative_name must be a RelativeDistinguishedNameucrl_issuer must be None or a list of general namesureasons must be None or frozenset of ReasonFlagsareasonsaReasonFlagsaunspecifiedaremove_from_crluunspecified and remove_from_crl are not valid reasons in a DistributionPointafull_namea_full_namea_relative_namea_reasonsacrl_issuera_crl_issueruDistributionPoint.__init__.<locals>.<genexpr>u<DistributionPoint(full_name={0.full_name}, relative_name={0.relative_name}, reasons={0.reasons}, crl_issuer={0.crl_issuer})>arelative_nameurequire_explicit_policy must be a non-negative integer or Noneuinhibit_policy_mapping must be a non-negative integer or NoneuAt least one of require_explicit_policy and inhibit_policy_mapping must not be Nonea_require_explicit_policya_inhibit_policy_mappingu<PolicyConstraints(require_explicit_policy={0.require_explicit_policy}, inhibit_policy_mapping={0.inhibit_policy_mapping})>aPolicyConstraintsarequire_explicit_policyainhibit_policy_mappinguEvery item in the policies list must be a PolicyInformationa_policiesaPolicyInformationuCertificatePolicies.__init__.<locals>.<genexpr>u<CertificatePolicies(aCertificatePoliciesupolicy_identifier must be an ObjectIdentifiera_policy_identifierupolicy_qualifiers must be a list of strings and/or UserNotice objects or Noneapolicy_qualifiersa_policy_qualifiersaUserNoticeuPolicyInformation.__init__.<locals>.<genexpr>u<PolicyInformation(policy_identifier={0.policy_identifier}, policy_qualifiers={0.policy_qualifiers})>apolicy_identifieraNoticeReferenceunotice_reference must be None or a NoticeReferencea_notice_referencea_explicit_textu<UserNotice(notice_reference={0.notice_reference}, explicit_text={0.explicit_text!r})>anotice_referenceaexplicit_texta_organizationunotice_numbers must be a list of integersa_notice_numbersuNoticeReference.__init__.<locals>.<genexpr>u<NoticeReference(organization={0.organization!r}, notice_numbers={0.notice_numbers})>aorganizationanotice_numbersuEvery item in the usages list must be an ObjectIdentifiera_usagesuExtendedKeyUsage.__init__.<locals>.<genexpr>u<ExtendedKeyUsage(aExtendedKeyUsageaOCSPNoCheckaPrecertPoisonufeatures must be a list of elements from the TLSFeatureType enuma_featuresaTLSFeatureTypeuTLSFeature.__init__.<locals>.<genexpr>u<TLSFeature(features=aTLSFeatureuskip_certs must be an integeruskip_certs must be a non-negative integera_skip_certsu<InhibitAnyPolicy(skip_certs=askip_certsaInhibitAnyPolicyuencipher_only and decipher_only can only be true when key_agreement is truea_digital_signaturea_content_commitmenta_key_enciphermenta_data_enciphermenta_key_agreementa_key_cert_signa_crl_signa_encipher_onlya_decipher_onlyakey_agreementuencipher_only is undefined unless key_agreement is trueudecipher_only is undefined unless key_agreement is trueaencipher_onlyadecipher_onlyu<KeyUsage(digital_signature={0.digital_signature}, content_commitment={0.content_commitment}, key_encipherment={0.key_encipherment}, data_encipherment={0.data_encipherment}, key_agreement={0.key_agreement}, key_cert_sign={0.key_cert_sign}, crl_sign={0.crl_sign}, encipher_only={1}, decipher_only={2})>aKeyUsageadigital_signatureacontent_commitmentakey_enciphermentadata_enciphermentakey_cert_signacrl_signupermitted_subtrees must be a non-empty list or Noneupermitted_subtrees must be a list of GeneralName objects or Nonea_validate_treeuexcluded_subtrees must be a non-empty list or Noneuexcluded_subtrees must be a list of GeneralName objects or Noneaselfapermitted_subtreesaexcluded_subtreesuAt least one of permitted_subtrees and excluded_subtrees must not be Nonea_permitted_subtreesa_excluded_subtreesuNameConstraints.__init__.<locals>.<genexpr>aNameConstraintsa_validate_ip_namea_validate_dns_nameuIPAddress name constraints must be an IPv4Network or IPv6Network objectaIPAddressaipaddressaIPv4NetworkaIPv6NetworkuNameConstraints._validate_ip_name.<locals>.<genexpr>uDNSName name constraints must not contain the '*' wildcard characteraDNSNamew*uNameConstraints._validate_dns_name.<locals>.<genexpr>u<NameConstraints(permitted_subtrees={0.permitted_subtrees}, excluded_subtrees={0.excluded_subtrees})>uoid argument must be an ObjectIdentifier instance.ucritical must be a boolean valuea_oida_criticala_valueu<Extension(oid={0.oid}, critical={0.critical}, value={0.value})>aExtensionacriticaluEvery item in the general_names list must be an object conforming to the GeneralName interfacea_general_namesuGeneralNames.__init__.<locals>.<genexpr>aOtherNameatypeuGeneralNames.get_values_for_type.<locals>.<genexpr>u<GeneralNames(aGeneralNamesaget_values_for_typeu<SubjectAlternativeName(aSubjectAlternativeNameu<IssuerAlternativeName(aIssuerAlternativeNameu<CertificateIssuer(aCertificateIssuerureason must be an element from ReasonFlagsa_reasonu<CRLReason(reason=aCRLReasonareasonadatetimeuinvalidity_date must be a datetime.datetimea_invalidity_dateu<InvalidityDate(invalidity_date={})>aInvalidityDateainvalidity_dateuEvery item in the signed_certificate_timestamps list must be a SignedCertificateTimestampa_signed_certificate_timestampsaSignedCertificateTimestampuPrecertificateSignedCertificateTimestamps.__init__.<locals>.<genexpr>u<PrecertificateSignedCertificateTimestamps({})>aPrecertificateSignedCertificateTimestampsuSignedCertificateTimestamps.__init__.<locals>.<genexpr>u<SignedCertificateTimestamps(aSignedCertificateTimestampsunonce must be bytesa_nonceaOCSPNonceanonceu<OCSPNonce(nonce=uAll responses must be ObjectIdentifiersa_responsesuOCSPAcceptableResponses.__init__.<locals>.<genexpr>aOCSPAcceptableResponsesu<OCSPAcceptableResponses(responses=uonly_some_reasons must be None or frozenset of ReasonFlagsaonly_some_reasonsuunspecified and remove_from_crl are not valid reasons in an IssuingDistributionPointuonly_contains_user_certs, only_contains_ca_certs, indirect_crl and only_contains_attribute_certs must all be boolean.uOnly one of the following can be set to True: only_contains_user_certs, only_contains_ca_certs, indirect_crl, only_contains_attribute_certsuCannot create empty extension: if only_contains_user_certs, only_contains_ca_certs, indirect_crl, and only_contains_attribute_certs are all False, then either full_name, relative_name, or only_some_reasons must have a value.a_only_contains_user_certsa_only_contains_ca_certsa_indirect_crla_only_contains_attribute_certsa_only_some_reasonsuIssuingDistributionPoint.__init__.<locals>.<genexpr>u<IssuingDistributionPoint(full_name={0.full_name}, relative_name={0.relative_name}, only_contains_user_certs={0.only_contains_user_certs}, only_contains_ca_certs={0.only_contains_ca_certs}, only_some_reasons={0.only_some_reasons}, indirect_crl={0.indirect_crl}, only_contains_attribute_certs={0.only_contains_attribute_certs})>aIssuingDistributionPointaonly_contains_user_certsaonly_contains_ca_certsaindirect_crlaonly_contains_attribute_certsuoid must be an ObjectIdentifiera_template_idumajor_version and minor_version must be integers or Nonea_major_versiona_minor_versionu<MSCertificateTemplate(template_id=atemplate_idu, major_version=amajor_versionu, minor_version=aminor_versionaMSCertificateTemplateu<UnrecognizedExtension(oid={0.oid}, value={0.value!r})>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingacryptographyTautilsautilsucryptography.hazmat.bindings._rustTaasn1Tax509ax509ucryptography.hazmat.primitivesTaconstant_timeaserializationucryptography.hazmat.primitives.asymmetric.ecTaEllipticCurvePublicKeyucryptography.hazmat.primitives.asymmetric.rsaTaRSAPublicKeyucryptography.hazmat.primitives.asymmetric.typesTaCertificateIssuerPublicKeyTypesaCertificatePublicKeyTypesaCertificateIssuerPublicKeyTypesaCertificatePublicKeyTypesucryptography.x509.certificate_transparencyTaSignedCertificateTimestampucryptography.x509.general_nameTaDirectoryNameaDNSNameaGeneralNameaIPAddressaOtherNameaRegisteredIDaRFC822NameaUniformResourceIdentifiera_IPAddressTypesaDirectoryNameaRegisteredIDaRFC822NameaUniformResourceIdentifiera_IPAddressTypesucryptography.x509.nameTaNameaRelativeDistinguishedNameaNameucryptography.x509.oidTaCRLEntryExtensionOIDaExtensionOIDaObjectIdentifieraOCSPExtensionOIDaCRLEntryExtensionOIDaExtensionOIDaOCSPExtensionOIDaTypeVarTaExtensionTypeVaraExtensionTypetTaboundacovariantaExtensionTypeVarDapublic_keyareturnaCertificatePublicKeyTypesabytesDafield_nameastra_make_sequence_methodsTEExceptiona__prepare__aDuplicateExtensiona__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.extensionsa__module__a__qualname__DamsgaoidareturnastraObjectIdentifieraNoneuDuplicateExtension.__init__a__orig_bases__uExtensionNotFound.__init__ametaclassaABCMetaTaExtensionTypeTaExtensionTypea__annotations__utyping.ClassVar[ObjectIdentifier]DareturnabytesuExtensionType.public_bytesTaExtensionsDaextensionsareturnutyping.Iterable[Extension[ExtensionType]]aNoneuExtensions.__init__DaoidareturnaObjectIdentifieruExtension[ExtensionType]aget_extension_for_oiduExtensions.get_extension_for_oidDaextclassareturnutyping.Type[ExtensionTypeVar]uExtension[ExtensionTypeVar]aget_extension_for_classuExtensions.get_extension_for_classTa_extensionsutoo many values to unpack (expected 3)a__len__a__iter__Dareturnastra__repr__uExtensions.__repr__aCRL_NUMBERDacrl_numberareturnaintaNoneuCRLNumber.__init__Daotherareturnaobjectaboola__eq__uCRLNumber.__eq__a__hash__uCRLNumber.__hash__uCRLNumber.__repr__apropertyuCRLNumber.crl_numberuCRLNumber.public_bytesaAUTHORITY_KEY_IDENTIFIERDakey_identifieraauthority_cert_issueraauthority_cert_serial_numberareturnutyping.Optional[bytes]utyping.Optional[typing.Iterable[GeneralName]]utyping.Optional[int]aNoneuAuthorityKeyIdentifier.__init__aclassmethodDapublic_keyareturnaCertificateIssuerPublicKeyTypesaAuthorityKeyIdentifierafrom_issuer_public_keyuAuthorityKeyIdentifier.from_issuer_public_keyDaskiareturnaSubjectKeyIdentifieraAuthorityKeyIdentifierafrom_issuer_subject_key_identifieruAuthorityKeyIdentifier.from_issuer_subject_key_identifieruAuthorityKeyIdentifier.__repr__uAuthorityKeyIdentifier.__eq__uAuthorityKeyIdentifier.__hash__Dareturnutyping.Optional[bytes]uAuthorityKeyIdentifier.key_identifierDareturnutyping.Optional[typing.List[GeneralName]]uAuthorityKeyIdentifier.authority_cert_issuerDareturnutyping.Optional[int]uAuthorityKeyIdentifier.authority_cert_serial_numberuAuthorityKeyIdentifier.public_bytesaSUBJECT_KEY_IDENTIFIERDadigestareturnabytesaNoneuSubjectKeyIdentifier.__init__Dapublic_keyareturnaCertificatePublicKeyTypesaSubjectKeyIdentifierafrom_public_keyuSubjectKeyIdentifier.from_public_keyuSubjectKeyIdentifier.digestuSubjectKeyIdentifier.key_identifieruSubjectKeyIdentifier.__repr__uSubjectKeyIdentifier.__eq__uSubjectKeyIdentifier.__hash__uSubjectKeyIdentifier.public_bytesaAUTHORITY_INFORMATION_ACCESSDadescriptionsareturnutyping.Iterable[AccessDescription]aNoneuAuthorityInformationAccess.__init__Ta_descriptionsuAuthorityInformationAccess.__repr__uAuthorityInformationAccess.__eq__uAuthorityInformationAccess.__hash__uAuthorityInformationAccess.public_bytesaSUBJECT_INFORMATION_ACCESSuSubjectInformationAccess.__init__uSubjectInformationAccess.__repr__uSubjectInformationAccess.__eq__uSubjectInformationAccess.__hash__uSubjectInformationAccess.public_bytesDaaccess_methodaaccess_locationareturnaObjectIdentifieraGeneralNameaNoneuAccessDescription.__init__uAccessDescription.__repr__uAccessDescription.__eq__uAccessDescription.__hash__DareturnaObjectIdentifieruAccessDescription.access_methodDareturnaGeneralNameuAccessDescription.access_locationaBASIC_CONSTRAINTSDacaapath_lengthareturnaboolutyping.Optional[int]aNoneuBasicConstraints.__init__DareturnabooluBasicConstraints.cauBasicConstraints.path_lengthuBasicConstraints.__repr__uBasicConstraints.__eq__uBasicConstraints.__hash__uBasicConstraints.public_bytesaDELTA_CRL_INDICATORuDeltaCRLIndicator.__init__uDeltaCRLIndicator.crl_numberuDeltaCRLIndicator.__eq__uDeltaCRLIndicator.__hash__uDeltaCRLIndicator.__repr__uDeltaCRLIndicator.public_bytesaCRL_DISTRIBUTION_POINTSDadistribution_pointsareturnutyping.Iterable[DistributionPoint]aNoneuCRLDistributionPoints.__init__Ta_distribution_pointsuCRLDistributionPoints.__repr__uCRLDistributionPoints.__eq__uCRLDistributionPoints.__hash__uCRLDistributionPoints.public_bytesaFRESHEST_CRLuFreshestCRL.__init__uFreshestCRL.__repr__uFreshestCRL.__eq__uFreshestCRL.__hash__uFreshestCRL.public_bytesDafull_namearelative_nameareasonsacrl_issuerareturnutyping.Optional[typing.Iterable[GeneralName]]utyping.Optional[RelativeDistinguishedName]utyping.Optional[typing.FrozenSet[ReasonFlags]]utyping.Optional[typing.Iterable[GeneralName]]aNoneuDistributionPoint.__init__uDistributionPoint.__repr__uDistributionPoint.__eq__uDistributionPoint.__hash__uDistributionPoint.full_nameDareturnutyping.Optional[RelativeDistinguishedName]uDistributionPoint.relative_nameDareturnutyping.Optional[typing.FrozenSet[ReasonFlags]]uDistributionPoint.reasonsuDistributionPoint.crl_issueraEnumakeyCompromiseakey_compromiseacACompromiseaca_compromiseaaffiliationChangedaaffiliation_changedasupersededacessationOfOperationacessation_of_operationacertificateHoldacertificate_holdaprivilegeWithdrawnaprivilege_withdrawnaaACompromiseaaa_compromisearemoveFromCRLlllllllla_REASON_BIT_MAPPINGa_CRLREASONFLAGSaPOLICY_CONSTRAINTSDarequire_explicit_policyainhibit_policy_mappingareturnutyping.Optional[int]utyping.Optional[int]aNoneuPolicyConstraints.__init__uPolicyConstraints.__repr__uPolicyConstraints.__eq__uPolicyConstraints.__hash__uPolicyConstraints.require_explicit_policyuPolicyConstraints.inhibit_policy_mappinguPolicyConstraints.public_bytesaCERTIFICATE_POLICIESDapoliciesareturnutyping.Iterable[PolicyInformation]aNoneuCertificatePolicies.__init__Ta_policiesuCertificatePolicies.__repr__uCertificatePolicies.__eq__uCertificatePolicies.__hash__uCertificatePolicies.public_bytesDapolicy_identifierapolicy_qualifiersareturnaObjectIdentifierutyping.Optional[typing.Iterable[typing.Union[str, UserNotice]]]aNoneuPolicyInformation.__init__uPolicyInformation.__repr__uPolicyInformation.__eq__uPolicyInformation.__hash__uPolicyInformation.policy_identifierDareturnutyping.Optional[typing.List[typing.Union[str, UserNotice]]]uPolicyInformation.policy_qualifiersDanotice_referenceaexplicit_textareturnutyping.Optional[NoticeReference]utyping.Optional[str]aNoneuUserNotice.__init__uUserNotice.__repr__uUserNotice.__eq__uUserNotice.__hash__Dareturnutyping.Optional[NoticeReference]uUserNotice.notice_referenceDareturnutyping.Optional[str]uUserNotice.explicit_textDaorganizationanotice_numbersareturnutyping.Optional[str]utyping.Iterable[int]aNoneuNoticeReference.__init__uNoticeReference.__repr__uNoticeReference.__eq__uNoticeReference.__hash__uNoticeReference.organizationDareturnutyping.List[int]uNoticeReference.notice_numbersaEXTENDED_KEY_USAGEDausagesareturnutyping.Iterable[ObjectIdentifier]aNoneuExtendedKeyUsage.__init__Ta_usagesuExtendedKeyUsage.__repr__uExtendedKeyUsage.__eq__uExtendedKeyUsage.__hash__uExtendedKeyUsage.public_bytesaOCSP_NO_CHECKuOCSPNoCheck.__eq__uOCSPNoCheck.__hash__u<OCSPNoCheck()>uOCSPNoCheck.__repr__uOCSPNoCheck.public_bytesaPRECERT_POISONuPrecertPoison.__eq__uPrecertPoison.__hash__u<PrecertPoison()>uPrecertPoison.__repr__uPrecertPoison.public_bytesaTLS_FEATUREDafeaturesareturnutyping.Iterable[TLSFeatureType]aNoneuTLSFeature.__init__Ta_featuresuTLSFeature.__repr__uTLSFeature.__eq__uTLSFeature.__hash__uTLSFeature.public_bytesastatus_requestlastatus_request_v2a_TLS_FEATURE_TYPE_TO_ENUMaINHIBIT_ANY_POLICYDaskip_certsareturnaintaNoneuInhibitAnyPolicy.__init__uInhibitAnyPolicy.__repr__uInhibitAnyPolicy.__eq__uInhibitAnyPolicy.__hash__uInhibitAnyPolicy.skip_certsuInhibitAnyPolicy.public_bytesaKEY_USAGED
adigital_signatureacontent_commitmentakey_enciphermentadata_enciphermentakey_agreementakey_cert_signacrl_signaencipher_onlyadecipher_onlyareturnaboolppppppppaNoneuKeyUsage.__init__uKeyUsage.digital_signatureuKeyUsage.content_commitmentuKeyUsage.key_enciphermentuKeyUsage.data_enciphermentuKeyUsage.key_agreementuKeyUsage.key_cert_signuKeyUsage.crl_signuKeyUsage.encipher_onlyuKeyUsage.decipher_onlyuKeyUsage.__repr__uKeyUsage.__eq__uKeyUsage.__hash__uKeyUsage.public_bytesaNAME_CONSTRAINTSDapermitted_subtreesaexcluded_subtreesareturnutyping.Optional[typing.Iterable[GeneralName]]utyping.Optional[typing.Iterable[GeneralName]]aNoneuNameConstraints.__init__uNameConstraints.__eq__Datreeareturnutyping.Iterable[GeneralName]aNoneuNameConstraints._validate_treeuNameConstraints._validate_ip_nameuNameConstraints._validate_dns_nameuNameConstraints.__repr__uNameConstraints.__hash__uNameConstraints.permitted_subtreesuNameConstraints.excluded_subtreesuNameConstraints.public_bytesaGenericDaoidacriticalavalueareturnaObjectIdentifieraboolaExtensionTypeVaraNoneuExtension.__init__uExtension.oiduExtension.criticalDareturnaExtensionTypeVaruExtension.valueuExtension.__repr__uExtension.__eq__uExtension.__hash__Dageneral_namesareturnutyping.Iterable[GeneralName]aNoneuGeneralNames.__init__Ta_general_namesaoverloadDatypeareturnutyping.Union[typing.Type[DNSName], typing.Type[UniformResourceIdentifier], typing.Type[RFC822Name]]utyping.List[str]uGeneralNames.get_values_for_typeDatypeareturnutyping.Type[DirectoryName]utyping.List[Name]Datypeareturnutyping.Type[RegisteredID]utyping.List[ObjectIdentifier]Datypeareturnutyping.Type[IPAddress]utyping.List[_IPAddressTypes]Datypeareturnutyping.Type[OtherName]utyping.List[OtherName]Datypeareturnutyping.Union[typing.Type[DNSName], typing.Type[DirectoryName], typing.Type[IPAddress], typing.Type[OtherName], typing.Type[RFC822Name], typing.Type[RegisteredID], typing.Type[UniformResourceIdentifier]]utyping.Union[typing.List[_IPAddressTypes], typing.List[str], typing.List[OtherName], typing.List[Name], typing.List[ObjectIdentifier]]uGeneralNames.__repr__uGeneralNames.__eq__uGeneralNames.__hash__aSUBJECT_ALTERNATIVE_NAMEuSubjectAlternativeName.__init__uSubjectAlternativeName.get_values_for_typeuSubjectAlternativeName.__repr__uSubjectAlternativeName.__eq__uSubjectAlternativeName.__hash__uSubjectAlternativeName.public_bytesaISSUER_ALTERNATIVE_NAMEuIssuerAlternativeName.__init__uIssuerAlternativeName.get_values_for_typeuIssuerAlternativeName.__repr__uIssuerAlternativeName.__eq__uIssuerAlternativeName.__hash__uIssuerAlternativeName.public_bytesaCERTIFICATE_ISSUERuCertificateIssuer.__init__uCertificateIssuer.get_values_for_typeuCertificateIssuer.__repr__uCertificateIssuer.__eq__uCertificateIssuer.__hash__uCertificateIssuer.public_bytesaCRL_REASONDareasonareturnaReasonFlagsaNoneuCRLReason.__init__uCRLReason.__repr__uCRLReason.__eq__uCRLReason.__hash__DareturnaReasonFlagsuCRLReason.reasonuCRLReason.public_bytesaINVALIDITY_DATEDainvalidity_dateareturnudatetime.datetimeaNoneuInvalidityDate.__init__uInvalidityDate.__repr__uInvalidityDate.__eq__uInvalidityDate.__hash__Dareturnudatetime.datetimeuInvalidityDate.invalidity_dateuInvalidityDate.public_bytesaPRECERT_SIGNED_CERTIFICATE_TIMESTAMPSDasigned_certificate_timestampsareturnutyping.Iterable[SignedCertificateTimestamp]aNoneuPrecertificateSignedCertificateTimestamps.__init__Ta_signed_certificate_timestampsuPrecertificateSignedCertificateTimestamps.__repr__uPrecertificateSignedCertificateTimestamps.__hash__uPrecertificateSignedCertificateTimestamps.__eq__uPrecertificateSignedCertificateTimestamps.public_bytesaSIGNED_CERTIFICATE_TIMESTAMPSuSignedCertificateTimestamps.__init__uSignedCertificateTimestamps.__repr__uSignedCertificateTimestamps.__hash__uSignedCertificateTimestamps.__eq__uSignedCertificateTimestamps.public_bytesaNONCEDanonceareturnabytesaNoneuOCSPNonce.__init__uOCSPNonce.__eq__uOCSPNonce.__hash__uOCSPNonce.__repr__uOCSPNonce.nonceuOCSPNonce.public_bytesaACCEPTABLE_RESPONSESDaresponsesareturnutyping.Iterable[ObjectIdentifier]aNoneuOCSPAcceptableResponses.__init__uOCSPAcceptableResponses.__eq__uOCSPAcceptableResponses.__hash__uOCSPAcceptableResponses.__repr__Dareturnutyping.Iterator[ObjectIdentifier]uOCSPAcceptableResponses.__iter__uOCSPAcceptableResponses.public_bytesaISSUING_DISTRIBUTION_POINTDafull_namearelative_nameaonly_contains_user_certsaonly_contains_ca_certsaonly_some_reasonsaindirect_crlaonly_contains_attribute_certsareturnutyping.Optional[typing.Iterable[GeneralName]]utyping.Optional[RelativeDistinguishedName]aboolputyping.Optional[typing.FrozenSet[ReasonFlags]]aboolpaNoneuIssuingDistributionPoint.__init__uIssuingDistributionPoint.__repr__uIssuingDistributionPoint.__eq__uIssuingDistributionPoint.__hash__uIssuingDistributionPoint.full_nameuIssuingDistributionPoint.relative_nameuIssuingDistributionPoint.only_contains_user_certsuIssuingDistributionPoint.only_contains_ca_certsuIssuingDistributionPoint.only_some_reasonsuIssuingDistributionPoint.indirect_crluIssuingDistributionPoint.only_contains_attribute_certsuIssuingDistributionPoint.public_bytesaMS_CERTIFICATE_TEMPLATEDatemplate_idamajor_versionaminor_versionareturnaObjectIdentifierutyping.Optional[int]utyping.Optional[int]aNoneuMSCertificateTemplate.__init__uMSCertificateTemplate.template_iduMSCertificateTemplate.major_versionuMSCertificateTemplate.minor_versionuMSCertificateTemplate.__repr__uMSCertificateTemplate.__eq__uMSCertificateTemplate.__hash__uMSCertificateTemplate.public_bytesDaoidavalueareturnaObjectIdentifierabytesaNoneuUnrecognizedExtension.__init__uUnrecognizedExtension.oiduUnrecognizedExtension.valueuUnrecognizedExtension.__repr__uUnrecognizedExtension.__eq__uUnrecognizedExtension.__hash__uUnrecognizedExtension.public_bytesucryptography\x509\extensions.pyTa.0wiatypeTa.0anameTa.0wrTa.0asctTa.0wxu<module cryptography.x509.extensions>Ta__class__TaselfaotherTaselfTaselfaaciTaselfafnacrl_issuerTaselfapqTaselfapsaesTaselfaaccess_methodaaccess_locationTaselfacaapath_lengthTaselfacrl_numberTaselfadescriptionsTaselfadigestT
aselfadigital_signatureacontent_commitmentakey_enciphermentadata_enciphermentakey_agreementakey_cert_signacrl_signaencipher_onlyadecipher_onlyTaselfadistribution_pointsTaselfaextensionsTaselfafeaturesTaselfafull_namearelative_nameaonly_contains_user_certsaonly_contains_ca_certsaonly_some_reasonsaindirect_crlaonly_contains_attribute_certsacrl_constraintsTaselfafull_namearelative_nameareasonsacrl_issuerTaselfageneral_namesTaselfainvalidity_dateTaselfakey_identifieraauthority_cert_issueraauthority_cert_serial_numberTaselfamsgaoida__class__TaselfanonceTaselfanotice_referenceaexplicit_textTaselfaoidacriticalavalueTaselfaoidavalueTaselfaorganizationanotice_numbersTaselfapermitted_subtreesaexcluded_subtreesTaselfapoliciesTaselfapolicy_identifierapolicy_qualifiersTaselfareasonTaselfarequire_explicit_policyainhibit_policy_mappingTaselfaresponsesTaselfasigned_certificate_timestampsTaselfaskip_certsTaselfatemplate_idamajor_versionaminor_versionTaselfausagesTaselfaencipher_onlyadecipher_onlyTapublic_keyadataaserializedTafield_namealen_methodaiter_methodagetitem_methodTaselfatreeTaclsapublic_keyadigestTaclsaskiTaclsapublic_keyTaselfaextclassaextTaselfaoidaextTaselfatypeTaselfatypeaobjsTaselfaidxafield_nameTafield_nameTaselfafield_name.cryptography.x509.general_name
aencodeTaasciiuRFC822Name values should be passed as an A-label string. This means unicode characters should be encoded via a library like idna.uvalue must be stringaparseaddrutoo many values to unpack (expected 2)uInvalid rfc822name valuea_valuea__new__u<RFC822Name(value=avalueuu)>aRFC822NameuDNSName values should be passed as an A-label string. This means unicode characters should be encoded via a library like idna.u<DNSName(value=aDNSNameuURI values should be passed as an A-label string. This means unicode characters should be encoded via a library like idna.u<UniformResourceIdentifier(value=aUniformResourceIdentifieraNameuvalue must be a Nameu<DirectoryName(value=aDirectoryNameaObjectIdentifieruvalue must be an ObjectIdentifieru<RegisteredID(value=aRegisteredIDaipaddressaIPv4AddressaIPv6AddressaIPv4NetworkaIPv6Networkuvalue must be an instance of ipaddress.IPv4Address, ipaddress.IPv6Address, ipaddress.IPv4Network, or ipaddress.IPv6Networkapackedanetwork_addressanetmasku<IPAddress(value=aIPAddressutype_id must be an ObjectIdentifieruvalue must be a binary stringa_type_idu<OtherName(type_id={}, value={!r})>atype_idaOtherNamea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypinguemail.utilsTaparseaddrucryptography.x509.nameTaNameucryptography.x509.oidTaObjectIdentifieraUniona_IPAddressTypesTEExceptiona__prepare__aUnsupportedGeneralNameTypea__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.general_namea__module__a__qualname__a__orig_bases__ametaclassaABCMetaTaGeneralNameTaGeneralNameapropertyaabstractmethodDareturnutyping.Anyu
        Return the value of the object
        uGeneralName.valueTDavalueareturnastraNonea__init__uRFC822Name.__init__DareturnastruRFC822Name.valueaclassmethodDavalueareturnastraRFC822Namea_init_without_validationuRFC822Name._init_without_validationa__repr__uRFC822Name.__repr__Daotherareturnaobjectaboola__eq__uRFC822Name.__eq__Dareturnainta__hash__uRFC822Name.__hash__uDNSName.__init__uDNSName.valueDavalueareturnastraDNSNameuDNSName._init_without_validationuDNSName.__repr__uDNSName.__eq__uDNSName.__hash__uUniformResourceIdentifier.__init__uUniformResourceIdentifier.valueDavalueareturnastraUniformResourceIdentifieruUniformResourceIdentifier._init_without_validationuUniformResourceIdentifier.__repr__uUniformResourceIdentifier.__eq__uUniformResourceIdentifier.__hash__DavalueareturnaNameaNoneuDirectoryName.__init__DareturnaNameuDirectoryName.valueuDirectoryName.__repr__uDirectoryName.__eq__uDirectoryName.__hash__DavalueareturnaObjectIdentifieraNoneuRegisteredID.__init__DareturnaObjectIdentifieruRegisteredID.valueuRegisteredID.__repr__uRegisteredID.__eq__uRegisteredID.__hash__Davalueareturna_IPAddressTypesaNoneuIPAddress.__init__Dareturna_IPAddressTypesuIPAddress.valueDareturnabytesa_packeduIPAddress._packeduIPAddress.__repr__uIPAddress.__eq__uIPAddress.__hash__Datype_idavalueareturnaObjectIdentifierabytesaNoneuOtherName.__init__uOtherName.type_iduOtherName.valueuOtherName.__repr__uOtherName.__eq__uOtherName.__hash__ucryptography\x509\general_name.pyu<module cryptography.x509.general_name>Ta__class__TaselfaotherTaselfTaselfatype_idavalueTaselfavalueTaselfavalueanameaaddressTaclsavalueainstance.cryptography.x509.nameEuw#abinasciiahexlifyadecodeTautf8areplaceTw\u\\Tw"u\"Tw+u\+Tw,u\,Tw;u\;Tw<u\<Tw>u\>Twu\00lTw#w w\lw :nlnu\ uEscape special characters in RFC4514 Distinguished Name value.asubu_unescape_dn_value.<locals>.suba_RFC4514NameParsera_PAIR_REagroupTllaObjectIdentifieruoid argument must be an ObjectIdentifier instance.a_ASN1TypeaBitStringaNameOIDaX500_UNIQUE_IDENTIFIERuoid must be X500_UNIQUE_IDENTIFIER for BitString type.uvalue must be bytes for BitStringuvalue argument must be a straCOUNTRY_NAMEaJURISDICTION_COUNTRY_NAMEaencodeuCountry name must be a 2 character country codeawarningsawarnuCountry names should be two characters, but the attribute is {} characters in length.Dastacklevella_NAMEOID_DEFAULT_TYPEagetaUTF8Stringu_type must be from the _ASN1Type enumaoida_oidavaluea_valuea_typea_NAMEOID_TO_NAMEadotted_stringu
        The short attribute name (for example "CN") if available,
        otherwise the OID dotted string.
        arfc4514_attribute_namew=a_escape_dn_valueu
        Format as RFC4514 Distinguished Name string.

        Use short attribute name if available, otherwise fall back to OID
        dotted string.
        aNameAttributeu<NameAttribute(oid={0.oid}, value={0.value!r})>ua relative distinguished name cannot be emptyuattributes must be an iterable of NameAttributea_attributesa_attribute_setuduplicate attributes are not allowedu<genexpr>uRelativeDistinguishedName.__init__.<locals>.<genexpr>w+u
        Format as RFC4514 Distinguished Name string.

        Within each RDN, attributes are joined by '+', although that is rarely
        used in certificates.
        arfc4514_stringaattr_name_overridesuRelativeDistinguishedName.rfc4514_string.<locals>.<genexpr>aRelativeDistinguishedNameu<RelativeDistinguishedName(u)>atypingacastaListuattributes must be a list of NameAttribute or a list RelativeDistinguishedNameuName.__init__.<locals>.<genexpr>aparsew,u
        Format as RFC4514 Distinguished Name string.
        For example 'CN=foobar.com,O=Foo Corp,C=US'

        An X.509 name is a two-level structure: a list of sets of attributes.
        Each list element is separated by ',' and within each list element, set
        elements are separated by '+'. The latter is almost never used in
        real world certificates. According to RFC4514 section 2.1 the
        RDNSequence must be reversed when converting to string representation.
        uName.rfc4514_string.<locals>.<genexpr>arust_x509aencode_name_bytesaNameaselfa__iter__uName.__iter__uName.__len__.<locals>.<genexpr>u<Name(uName.__repr__.<locals>.<genexpr>a_dataa_idxa_attr_name_overridesa_has_dataa_peeklamatchTaposa_parse_rdna_read_charTw,ardnsaappendu
        Parses the `data` string and converts it to a Name.

        According to RFC4514 section 2.1 the RDNSequence must be
        reversed when converting to string representation. So, when
        we parse it, we need to reverse again to get the RDNs on the
        correct order.
        a_parse_naTw+anasa_read_rea_OID_REa_DESCR_REa_NAME_TO_NAMEOIDaoid_valueTw=a_HEXSTRING_REaunhexlify:lnna_STRING_REa_unescape_dn_valuea__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsareasysacryptographyTautilsautilsucryptography.hazmat.bindings._rustTax509ax509ucryptography.x509.oidTaNameOIDaObjectIdentifieraEnuma__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.namea__module__a__qualname__llaOctetStringllaNumericStringlaPrintableStringlaT61StringlaIA5StringlaUTCTimelaGeneralizedTimelaVisibleStringlaUniversalStringlaBMPStringa__orig_bases__a_ASN1_TYPE_TO_ENUMaSERIAL_NUMBERaDN_QUALIFIERaEMAIL_ADDRESSaDOMAIN_COMPONENTutyping.Dict[ObjectIdentifier, _ASN1Type]aMappinga_OidNameMapa_NameOidMapaCOMMON_NAMEaCNaLOCALITY_NAMEwLaSTATE_OR_PROVINCE_NAMEaSTaORGANIZATION_NAMEwOaORGANIZATIONAL_UNIT_NAMEaOUwCaSTREET_ADDRESSaSTREETaDCaUSER_IDaUIDaitemsutoo many values to unpack (expected 2)Davalareturnutyping.Union[str, bytes]astrDavalareturnastrpTnDa_validatetDaoidavaluea_typea_validateareturnaObjectIdentifierutyping.Union[str, bytes]utyping.Optional[_ASN1Type]aboolaNonea__init__uNameAttribute.__init__DareturnaObjectIdentifieruNameAttribute.oidDareturnutyping.Union[str, bytes]uNameAttribute.valueDareturnastruNameAttribute.rfc4514_attribute_nameDaattr_name_overridesareturnutyping.Optional[_OidNameMap]astruNameAttribute.rfc4514_stringDaotherareturnaobjectaboola__eq__uNameAttribute.__eq__Dareturnainta__hash__uNameAttribute.__hash__a__repr__uNameAttribute.__repr__TDaattributesutyping.Iterable[NameAttribute]uRelativeDistinguishedName.__init__DaoidareturnaObjectIdentifierutyping.List[NameAttribute]aget_attributes_for_oiduRelativeDistinguishedName.get_attributes_for_oiduRelativeDistinguishedName.rfc4514_stringuRelativeDistinguishedName.__eq__uRelativeDistinguishedName.__hash__Dareturnutyping.Iterator[NameAttribute]uRelativeDistinguishedName.__iter__a__len__uRelativeDistinguishedName.__len__uRelativeDistinguishedName.__repr__aoverloadDaattributesareturnutyping.Iterable[NameAttribute]aNoneuName.__init__Daattributesareturnutyping.Iterable[RelativeDistinguishedName]aNoneDaattributesareturnutyping.Iterable[typing.Union[NameAttribute, RelativeDistinguishedName]]aNoneDadataaattr_name_overridesareturnastrutyping.Optional[_NameOidMap]aNameafrom_rfc4514_stringuName.from_rfc4514_stringuName.rfc4514_stringuName.get_attributes_for_oidDareturnutyping.List[RelativeDistinguishedName]uName.rdnsDabackendareturnutyping.Anyabytesapublic_bytesuName.public_bytesuName.__eq__uName.__hash__uName.__len__uName.__repr__acompileTu(0|([1-9]\d*))(\.(0|([1-9]\d*)))+Tu[a-zA-Z][a-zA-Z\d-]*u\\([\\ #=\"\+,;<>]|[\da-zA-Z]{2})a_PAIRu[\x01-\x1f\x21\x24-\x2A\x2D-\x3A\x3D\x3F-\x5B\x5D-\x7F]a_LUTF1u[\x01-\x21\x23-\x2A\x2D-\x3A\x3D\x3F-\x5B\x5D-\x7F]a_SUTF1u[\x01-\x1F\x21\x23-\x2A\x2D-\x3A\x3D\x3F-\x5B\x5D-\x7F]a_TUTF1u[\x80-amaxunicodew]a_UTFMBw|a_LEADCHARa_STRINGCHARa_TRAILCHARu
        (
            (u)
            (
                (u)*
                (u)
            )?
        )?
        aVERBOSETu#([\da-zA-Z]{2})+Dadataaattr_name_overridesareturnastra_NameOidMapaNoneu_RFC4514NameParser.__init__Dareturnaboolu_RFC4514NameParser._has_dataDareturnutyping.Optional[str]u_RFC4514NameParser._peekDachareturnastraNoneu_RFC4514NameParser._read_charu_RFC4514NameParser._read_reDareturnaNameu_RFC4514NameParser.parseDareturnaRelativeDistinguishedNameu_RFC4514NameParser._parse_rdnDareturnaNameAttributeu_RFC4514NameParser._parse_naucryptography\x509\name.pyTa.0aattrTa.0aattraattr_name_overridesTa.0ardnTa.0wxu<module cryptography.x509.name>Ta__class__TaselfaotherTaselfTaselfaattributesTaselfadataaattr_name_overridesTaselfaoidavaluea_typea_validateac_lenTaselfardnaavaTaselfardnsTavalTaselfaoid_valueanameaoidavaluearaw_valueTaselfanasTaselfachTaselfapatamatchavalTavalasubTaclsadataaattr_name_overridesTaselfaoidTaselfabackendTaselfaattr_name_overridesTaselfaattr_name_overridesaattr_nameTwmaval.cryptography.x509.oidZa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucryptography.hazmat._oidTaAttributeOIDaAuthorityInformationAccessOIDaCertificatePoliciesOIDaCRLEntryExtensionOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaObjectIdentifieraOCSPExtensionOIDaSignatureAlgorithmOIDaSubjectInformationAccessOIDlaAttributeOIDaAuthorityInformationAccessOIDaCertificatePoliciesOIDaCRLEntryExtensionOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaObjectIdentifieraOCSPExtensionOIDaSignatureAlgorithmOIDaSubjectInformationAccessOIDLaAttributeOIDaAuthorityInformationAccessOIDaCRLEntryExtensionOIDaCertificatePoliciesOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaOCSPExtensionOIDaObjectIdentifieraSignatureAlgorithmOIDaSubjectInformationAccessOIDa__all__ucryptography\x509\oid.pyu<module cryptography.x509.oid>u.idna.a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_idnau\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__apackage_dataTa__version__la__version__acoreTaIDNABidiErroraIDNAErroraInvalidCodepointaInvalidCodepointContextaalabelacheck_bidiacheck_hyphen_okacheck_initial_combineracheck_labelacheck_nfcadecodeaencodeaulabelauts46_remapavalid_contextjavalid_contextoavalid_label_lengthavalid_string_lengthaIDNABidiErroraIDNAErroraInvalidCodepointaInvalidCodepointContextaalabelacheck_bidiacheck_hyphen_okacheck_initial_combineracheck_labelacheck_nfcadecodeaencodeaulabelauts46_remapavalid_contextjavalid_contextoavalid_label_lengthavalid_string_lengthaintrangesTaintranges_containaintranges_containLaIDNABidiErroraIDNAErroraInvalidCodepointaInvalidCodepointContextaalabelacheck_bidiacheck_hyphen_okacheck_initial_combineracheck_labelacheck_nfcadecodeaencodeaintranges_containaulabelauts46_remapavalid_contextjavalid_contextoavalid_label_lengthavalid_string_lengtha__all__uidna\__init__.pyu<module idna>u.idna.core#aunicodedataacombininglanameuUnknown character in unicodedataaintranges_containaidnadataascriptsaencodeTapunycodeuU+{:04X}lllutoo many values to unpack (expected 2)abidirectionaluaIDNABidiErroruUnknown directionality in label {} at position {}wRaALaANabidi_labelwLuFirst codepoint in label {} must be directionality L, R or ALL
wRaALaANaENaESaCSaETaONaBNaNSMuInvalid direction for codepoint at position {} in a right-to-left labelLwRaALaENaANaNSMaENanumber_typeTuCan not mix numeral types in a right-to-left labelLwLaENaESaCSaETaONaBNaNSMuInvalid direction for codepoint at position {} in a left-to-right labelavalid_endingTuLabel ends with illegal codepoint directionalityacategorywMaIDNAErrorTuLabel begins with an illegal combining character:llnu--TuLabel has disallowed hyphens in 3rd and 4th positionw-lTuLabel must not start or end with a hyphenanormalizeaNFCTuLabel must be in Normalization Form Cl a_combining_classa_virama_combining_classaposajoining_typesagetlTlLlDlRl
 lalabellllua_is_scriptaGreekllaHebrewl0u・aHiraganaaKatakanaaHanl`lillTObytesObytearrayadecodeTuutf-8TuEmpty Labelacheck_nfcacheck_hyphen_okacheck_initial_combineracodepoint_classesaPVALIDaCONTEXTJavalid_contextjaInvalidCodepointContextuJoiner {} not allowed at position {} in {}a_unotuUnknown codepoint adjacent to joiner {} at position {} in {}aCONTEXTOavalid_contextouCodepoint {} not allowed at position {} in {}aInvalidCodepointuCodepoint {} at position {} of {} not allowedacheck_bidiTaasciiaulabelavalid_label_lengthTuLabel too longTuNo Inputacheck_labela_punycodea_alabel_prefixalowerastartswithTuMalformed A-label, no Punycode eligible content foundTuA-label must not end with a hyphenTuInvalid A-labelauts46dataTauts46datalabisectabisect_leftwZlwVwDw3aoutputwIacode_pointuRe-map the characters in the string according to UTS46 processing.Tushould pass a unicode string to the function rather than a byte string.auts46_remapasplitTw.a_unicode_dots_reTuEmpty domainaalabelaresultaappendTuEmpty labelTcd.avalid_string_lengthTuDomain too longTuInvalid ASCII in A-labelTuw.a__doc__a__file__a__spec__aoriginahas_locationa__cached__TaidnadataareaUnionaOptionalaintrangesTaintranges_containlcxn--acompileTu[.。．｡]TEUnicodeErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uidna.corea__module__u Base exception for all IDNA-encoding related problems a__qualname__a__orig_bases__u Exception when bidirectional requirements are not satisfied u Exception when a disallowed or unallocated codepoint is used u Exception when the codepoint is not valid in the context it is used DacpareturnOintpDacpascriptareturnOstrpOboolDwsareturnOstrObytesDwsareturnOintOstrTObytesOstrareturnatrailing_dotTFDalabelacheck_ltrareturnOstrOboolpDalabelareturnOstrOboolDalabelareturnOstrnDalabelaposareturnOstrOintOboolDalabelaposaexceptionareturnOstrOintOboolpTOstrObytesObytearrayDalabelareturnOstrObytesTtFDadomainastd3_rulesatransitionalareturnOstrOboolpOstrTFpppwsastrictauts46astd3_rulesatransitionalTFppuidna\core.pyu<module idna.core>TacpwvTacpascriptTwsTalabelalabel_bytesTalabelacheck_ltrabidi_labelaidxacpadirectionartlavalid_endinganumber_typeTalabelTalabelaposacpacp_valueTwsastrictauts46astd3_rulesatrailing_dotaresultalabelsalabelTwsastrictauts46astd3_rulesatransitionalatrailing_dotaresultalabelsalabelTadomainastd3_rulesatransitionalauts46dataaoutputaposacharacode_pointauts46rowastatusareplacementTalabelaposacp_valueaokwiajoining_typeTalabelaposaexceptionacp_valueacpTalabelatrailing_dot.idna.idnadataDa__doc__a__file__a__spec__aoriginahas_locationa__cached__u15.0.0a__version__DaGreekaHanaHebrewaHiraganaaKatakanaT$qtpqxuq~zqqqqqqqqq+&qb]qkfqqqqF qNHqXPqZYq\[q^]q~_qqqqqqqq'!&!qfeq@qqFTq..q..q//q00q00q*0!0q<080qM4qNqnqpqooqooqq:q@q qqqKq#PTqqqq7q=8q?>qB@qECqPFTq0A0q00q q32qSPqTq00q10q21q22qX33qpfqqqqqqq# qVUqhdascriptsD<lllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlnlolqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/lMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllll@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXl`lalblcldlelflglhliljlplqlrlsltlulvlwlxlylzl{l|l}l~lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
ll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlllllllllllllllllllllllllllllllllllllllllll l
 l/ lf lg lh li l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsl
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
llllllllllllllllllllllllll
l
l
l
l
l
l
l
l
l
l

l
l
l

l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l!
l"
l#
l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElQlRlSlTlplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClKlUppppppplDlUlRppplDlRlDlRlDpppplRppplDpppppppppppplClDpppppplRlDppplRpplUlRpplDppppppppppppppplRppppppppppppppppplDppppppppppppppppppppppppppppppppppppplRlDplRpppppppplDlRlDlRlDplRpplUlRplDppplTlRlDpplRpppplDppplRlDpppppppplRlDlRlDlRlDplRplDpppppppppplRpplDpppppppppppppplRplDppplRlDlRplDpplRplDpppppppppppppppppppppppppppppppppppppplClRlDpppplRplDlRlDppppppppplRlDlRpplDlUlDppplUlRlDlRpppppppppppppppppppplCpplDlUplDpppplRlUplDppppppppplRpplUlRlDplRplDppppplRlDpppppppppppppplUplDlClUlDpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplUpppplTplDpppppppppppppppppppppppppppppppppplUlClUpppplDppppppppppppppppppppppppppppppppppppppppppppppppplLlUlDpppplRlUlRlUlRplUplLlRpppplDppplLlDpppplRlDpplRlUplRlDppplRlDlRlDlRpplDpplRlDplRlDlRplDlRpppplDplUlLlDpppppppppppppppppppppppppppppppplRlDppplRlDpppppppppppppppplUlDpplRlDppplRplDpppppppppppplUlDplRpplUlDlRplDplRlDplUlDlRplDlUppplRlDlLlUplDppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplTajoining_typesDaPVALIDaCONTEXTJaCONTEXTOTq.-q:0q{aqqqqqqq
qq
qqqqqqqqq q"!q$#q&%q('q*)q,+q.-q0/q21q65q97q;:q=<q?>qCBqEDqGFqIHqLKqNMqPOqRQqTSqVUqXWqZYq\[q^]q`_qbaqdcqfeqhgqjiqlkqnmqpoqrqqtsqvuqxwq{zq}|q~qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qq
qqqqqqqqq q"!q$#q&%q('q*)q,+q.-q0/q21q:3q=<qA?qCBqHGqJIqLKqNMqOqqqqq@qCBqOFqpPqrqqtsqxwq~{qqqqqqqqqqqqqqqqqqq`0qbaqdcqfeqhgqjiqlkqnmqpoqrqqtsqvuqxwqzyq|{q~}qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qq
qqqqqqqqq q"!q$#q&%q('q*)q,+q.-q0/qZYq`qqqqqqqqqq@ q`AqunqyqqqqqKqMqqq.q\@qk`qpqqqXqd`qpfqqqqqqqqqqqqqqqqq

q

q

q)

q1
*
q3
2
q6
5
q:
8
q=
<
qC
>
qI
G
qN
K
qR
Q
q]
\
qv
f
q

q

q

q

q

q

q

q

q

q

q

q

q

q
qq
qq)q1*q42q:5qE<qIGqNKqXUqd_qpfqrqqqqqqqqqqqqqqqqqq
qq)q:*qE<qIFqNJqWUq[Xq^]qd`qpfqqqqqqqqqqqqqqq


q

qE

qI
F
qO
J
qX
T
qd
_
qp
f
q
z
q

q

q

q

q

q

q

q

q

q

q

q

q3q;4qO@qZPqqqqqqqqqqqqqqqq* q65q87q:9qC>qHDqMIqRNqWSq\Xqi]qmjqsqqutqzqqqqqqqqqqqJqPqqqIqNJqWPqYXq^Zq`qqqqqqqqqq[q`]qqqmqoqqqqq5qT@qm`qqnqtrqqqqqqqy qqqq, q<0qnFqupqqqqq_ q}`qqqqqqMqZPqtkqq8qJ@q~Mqqq,q0/q<;qONqxkqyqqqqqq
qq
qqqqqqqqq q"!q$#q&%q('q*)q,+q.-q0/q21q43q65q87q:9q<;q>=q@?qBAqDCqFEqHGqJIqLKqNMqPOqRQqTSqVUqXWqZYq\[q^]q`_qbaqdcqfeqhgqjiqlkqnmqpoqrqqtsqvuqxwqzyq|{q~}qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq( q80qF@qXPqh`qqpqsrqutqwvqyxq{zq}|qqqqqqqqqO!N!q!!q`,0,qb,a,qg,e,qi,h,qk,j,qm,l,qr,q,qu,s,q|,v,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q&--q(-'-q.---qh-0-q--q--q--q--q--q--q--q--q--q.-q0./.q00q.0*0q=0<0q0A0q00q00q00q00q011q11q21qM4qNqФq
q,qBAqDCqFEqHGqJIqLKqNMqPOqRQqTSqVUqXWqZYq\[q^]q`_qbaqdcqfeqhgqjiqlkqpmq~tqqqqqqqqqqqqqqqqqq q$#q&%q('q*)q,+q.-q2/q43q65q87q:9q<;q>=q@?qBAqDCqFEqHGqJIqLKqNMqPOqRQqTSqVUqXWqZYq\[q^]q`_qbaqdcqfeqhgqjiqlkqnmqpoqyqq{zq}|qqqqqqqqqqqqqqqqqqqqqqqqqqq§qħçqɧȧq˧ʧqҧѧqԧӧq֧էqاקqڧ٧qqq(q-,qt@qƨqڨШqqq.qT0qqکϩqq7qN@qZPqw`qêzqު۪qqqqqq' q/(q[0qi`qqqqqqqq q"!q%#q*'qq0 qtsqq'
q;(q><qN?q^Pqqqqqq qA-qJBq{Pqqqq(qqq(qd0qqqqq7qV@qh`qqqqqq6
q97q=<qV?qw`qqqqq: qqq

q

q

q

q6

q;
8
q@
?
q}
`
q

q

q

q6qV@qs`qqIqq(

q:
0
qqqqq('qQ0qpqqqGqvfqqqqq5q@6qHDqtPqwvqqqqqq8qB>qqqqqqqqq
qq)q1*q42q:5qE;qIGqNKqQPqXWqd]qmfqupqKqZPqb^qqqqqqqAqEDqZPqqqq,q:0qG@q;qqq
qqq6q97qD;qZPqqqqq?qHGqPqqqq7
qA8qZPqrqqqq
q7q;:q><qH?qZPqf`qigqjqqqqqq;qC>qZPqq# qD%$q//q040qV4@4qGFDq9jhq_j@jqjj`jqjpjqjjqjjqjjq7kkqDk@kqZkPkqxkckqk}kqn`nqKooqoOoqooqooqooqooqpq֌qqqqq#q32qSPqVUqhdqpqkq}pqqqq.qG0q7qm;qvuqqqqq+%qqq"q%#q+&qn0qq-q>0qJ@qONqqqqqqqqqqL"qZPqq:q@q qqKq#PTq  Tqqvuqqj`qq00acodepoint_classesuidna\idnadata.pyu<module idna.idnadata>u.idna.intranges*asortedllalast_writearangesaappenda_encode_rangeluRepresent a list of integers as a sequence of ranges:
    ((start_0, end_0), (start_1, end_1), ...), such that the original
    integers are exactly those x such that start_i <= x < end_i for some i.

    Ranges are encoded as single integers (start << 32 | end), not as tuples.
    l qabisectabisect_lefta_decode_rangeutoo many values to unpack (expected 2)aposuDetermine if `int_` falls into one of the ranges in `ranges`.u
Given a list of integers, made up of (hopefully) a small number of long runs
of consecutive integers, compute a representation of the form
((start1, end1), (start2, end2) ...). Then answer the question "was x present
in the original list?" in time O(log(# runs)).
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aListaTuplealist_areturnTOintQaintranges_from_listDastartaendareturnOintppwrTOintpaint_aintranges_containuidna\intranges.pyu<module idna.intranges>TwrTastartaendTaint_arangesatuple_aposaleftarightw_Talist_asorted_listarangesalast_writewiacurrent_rangeu.idna.package_dataa__doc__a__file__a__spec__aoriginahas_locationa__cached__u3.4a__version__uidna\package_data.pyu<module idna.package_data>u.idna.uts46dataLdTlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tl
w3Tlw3Tlw3Tl
w3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tl w3Tl!w3Tl"w3Tl#w3Tl$w3Tl%w3Tl&w3Tl'w3Tl(w3Tl)w3Tl*w3Tl+w3Tl,w3Tl-wVTl.wVTl/w3Tl0wVTl1wVTl2wVTl3wVTl4wVTl5wVTl6wVTl7wVTl8wVTl9wVTl:w3Tl;w3Tl<w3Tl=w3Tl>w3Tl?w3Tl@w3TlAwMwaTlBwMwbTlCwMwcTlDwMwdTlEwMweTlFwMwfTlGwMwgTlHwMwhTlIwMwiTlJwMwjTlKwMwkTlLwMwlTlMwMwmTlNwMwnTlOwMwoTlPwMwpTlQwMwqTlRwMwrTlSwMwsTlTwMwtTlUwMwuTlVwMwvTlWwMwwTlXwMwxTlYwMwyTlZwMwzTl[w3Tl\w3Tl]w3Tl^w3Tl_w3Tl`w3TlawVTlbwVTlcwVLdTldwVTlewVTlfwVTlgwVTlhwVTliwVTljwVTlkwVTllwVTlmwVTlnwVTlowVTlpwVTlqwVTlrwVTlswVTltwVTluwVTlvwVTlwwVTlxwVTlywVTlzwVTl{w3Tl|w3Tl}w3Tl~w3Tlw3TlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlw3w TlwVTlwVTlwVTlwVTlwVTlwVTlwVTlw3u ̈TlwVTlwMwaTlwVTlwVTlwITlwVTlw3u ̄TlwVTlwVTlwMw2TlwMw3Tlw3u ́TlwMuμTlwVTlwVTlw3u ̧TlwMw1TlwMwoTlwVTlwMu1⁄4TlwMu1⁄2TlwMu3⁄4TlwVTlwMuàTlwMuáTlwMuâTlwMuãTlwMuäTlwMuåTlwMuæTlwMuçLdTlwMuèTlwMuéTlwMuêTlwMuëTlwMuìTlwMuíTlwMuîTlwMuïTlwMuðTlwMuñTlwMuòTlwMuóTlwMuôTlwMuõTlwMuöTlwVTlwMuøTlwMuùTlwMuúTlwMuûTlwMuüTlwMuýTlwMuþTlwDassTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwMuāTlwVTlwMuăTlwVTlwMuąTlwVTlwMućTlwVTlwMuĉTlwVTl
wMuċTlwVTlwMučTl
wVTlwMuďTlwVTlwMuđTlwVTlwMuēTlwVTlwMuĕTlwVTlwMuėTlwVTlwMuęTlwVTlwMuěTlwVTlwMuĝTlwVTlwMuğTlwVTl wMuġTl!wVTl"wMuģTl#wVTl$wMuĥTl%wVTl&wMuħTl'wVTl(wMuĩTl)wVTl*wMuīTl+wVLdTl,wMuĭTl-wVTl.wMuįTl/wVTl0wMui̇Tl1wVTl2wMaijTl4wMuĵTl5wVTl6wMuķTl7wVTl9wMuĺTl:wVTl;wMuļTl<wVTl=wMuľTl>wVTl?wMul·TlAwMułTlBwVTlCwMuńTlDwVTlEwMuņTlFwVTlGwMuňTlHwVTlIwMuʼnTlJwMuŋTlKwVTlLwMuōTlMwVTlNwMuŏTlOwVTlPwMuőTlQwVTlRwMuœTlSwVTlTwMuŕTlUwVTlVwMuŗTlWwVTlXwMuřTlYwVTlZwMuśTl[wVTl\wMuŝTl]wVTl^wMuşTl_wVTl`wMušTlawVTlbwMuţTlcwVTldwMuťTlewVTlfwMuŧTlgwVTlhwMuũTliwVTljwMuūTlkwVTllwMuŭTlmwVTlnwMuůTlowVTlpwMuűTlqwVTlrwMuųTlswVTltwMuŵTluwVTlvwMuŷTlwwVTlxwMuÿTlywMuźTlzwVTl{wMużTl|wVTl}wMužTl~wVTlwMwsTlwVTlwMuɓTlwMuƃTlwVTlwMuƅTlwVTlwMuɔTlwMuƈTlwVTlwMuɖTlwMuɗTlwMuƌTlwVTlwMuǝTlwMuəTlwMuɛTlwMuƒTlwVTlwMuɠLdTlwMuɣTlwVTlwMuɩTlwMuɨTlwMuƙTlwVTlwMuɯTlwMuɲTlwVTlwMuɵTlwMuơTlwVTlwMuƣTlwVTlwMuƥTlwVTlwMuʀTlwMuƨTlwVTlwMuʃTlwVTlwMuƭTlwVTlwMuʈTlwMuưTlwVTlwMuʊTlwMuʋTlwMuƴTlwVTlwMuƶTlwVTlwMuʒTlwMuƹTlwVTlwMuƽTlwVTlwMudžTlwMaljTlwManjTlwMuǎTlwVTlwMuǐTlwVTlwMuǒTlwVTlwMuǔTlwVTlwMuǖTlwVTlwMuǘTlwVTlwMuǚTlwVTlwMuǜTlwVTlwMuǟTlwVTlwMuǡTlwVTlwMuǣTlwVTlwMuǥTlwVTlwMuǧTlwVTlwMuǩTlwVTlwMuǫTlwVTlwMuǭTlwVTlwMuǯTlwVTlwMadzTlwMuǵTlwVTlwMuƕTlwMuƿTlwMuǹTlwVTlwMuǻTlwVTlwMuǽTlwVTlwMuǿTlwVTlwMuȁTlwVTlwMuȃTlwVTlwMuȅTlwVTlwMuȇTlwVTlwMuȉTlwVTl
wMuȋTlwVTlwMuȍLdTl
wVTlwMuȏTlwVTlwMuȑTlwVTlwMuȓTlwVTlwMuȕTlwVTlwMuȗTlwVTlwMușTlwVTlwMuțTlwVTlwMuȝTlwVTlwMuȟTlwVTl wMuƞTl!wVTl"wMuȣTl#wVTl$wMuȥTl%wVTl&wMuȧTl'wVTl(wMuȩTl)wVTl*wMuȫTl+wVTl,wMuȭTl-wVTl.wMuȯTl/wVTl0wMuȱTl1wVTl2wMuȳTl3wVTl:wMuⱥTl;wMuȼTl<wVTl=wMuƚTl>wMuⱦTl?wVTlAwMuɂTlBwVTlCwMuƀTlDwMuʉTlEwMuʌTlFwMuɇTlGwVTlHwMuɉTlIwVTlJwMuɋTlKwVTlLwMuɍTlMwVTlNwMuɏTlOwVTlwMwhTlwMuɦTlwMwjTlwMwrTlwMuɹTlwMuɻTlwMuʁTlwMwwTlwMwyTlwVTlw3u ̆Tlw3u ̇Tlw3u ̊Tlw3u ̨Tlw3u ̃Tlw3u ̋TlwVTlwMuɣTlwMwlTlwMwsTlwMwxTlwMuʕTlwVTl@wMùTlAwMúTlBwVTlCwMu̓TlDwMǘTlEwMuιTlFwVTlOwITlPwVTlpwMuͱTlqwVTlrwMuͳTlswVTltwMuʹTluwVTlvwMuͷTlwwVLdTlxwXTlzw3u ιTl{wVTl~w3w;TlwMuϳTlwXTlw3u ́Tlw3u ̈́TlwMuάTlwMu·TlwMuέTlwMuήTlwMuίTlwXTlwMuόTlwXTlwMuύTlwMuώTlwVTlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwXTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMuϊTlwMuϋTlwVTlwDuσTlwVTlwMuϗTlwMuβTlwMuθTlwMuυTlwMuύTlwMuϋTlwMuφTlwMuπTlwVTlwMuϙTlwVTlwMuϛTlwVTlwMuϝTlwVTlwMuϟTlwVTlwMuϡTlwVTlwMuϣTlwVTlwMuϥTlwVTlwMuϧTlwVTlwMuϩTlwVTlwMuϫTlwVTlwMuϭTlwVTlwMuϯTlwVTlwMuκTlwMuρTlwMuσTlwVTlwMuθTlwMuεTlwVTlwMuϸTlwVTlwMuσTlwMuϻTlwVTlwMuͻTlwMuͼTlwMuͽTlwMuѐTlwMuёTlwMuђLdTlwMuѓTlwMuєTlwMuѕTlwMuіTlwMuїTlwMuјTlwMuљTl
wMuњTlwMuћTlwMuќTl
wMuѝTlwMuўTlwMuџTlwMuаTlwMuбTlwMuвTlwMuгTlwMuдTlwMuеTlwMuжTlwMuзTlwMuиTlwMuйTlwMuкTlwMuлTlwMuмTlwMuнTlwMuоTlwMuпTl wMuрTl!wMuсTl"wMuтTl#wMuуTl$wMuфTl%wMuхTl&wMuцTl'wMuчTl(wMuшTl)wMuщTl*wMuъTl+wMuыTl,wMuьTl-wMuэTl.wMuюTl/wMuяTl0wVTl`wMuѡTlawVTlbwMuѣTlcwVTldwMuѥTlewVTlfwMuѧTlgwVTlhwMuѩTliwVTljwMuѫTlkwVTllwMuѭTlmwVTlnwMuѯTlowVTlpwMuѱTlqwVTlrwMuѳTlswVTltwMuѵTluwVTlvwMuѷTlwwVTlxwMuѹTlywVTlzwMuѻTl{wVTl|wMuѽTl}wVTl~wMuѿTlwVTlwMuҁTlwVTlwMuҋTlwVTlwMuҍTlwVTlwMuҏTlwVTlwMuґTlwVTlwMuғTlwVTlwMuҕTlwVTlwMuҗTlwVTlwMuҙTlwVTlwMuқTlwVTlwMuҝTlwVLdTlwMuҟTlwVTlwMuҡTlwVTlwMuңTlwVTlwMuҥTlwVTlwMuҧTlwVTlwMuҩTlwVTlwMuҫTlwVTlwMuҭTlwVTlwMuүTlwVTlwMuұTlwVTlwMuҳTlwVTlwMuҵTlwVTlwMuҷTlwVTlwMuҹTlwVTlwMuһTlwVTlwMuҽTlwVTlwMuҿTlwVTlwXTlwMuӂTlwVTlwMuӄTlwVTlwMuӆTlwVTlwMuӈTlwVTlwMuӊTlwVTlwMuӌTlwVTlwMuӎTlwVTlwMuӑTlwVTlwMuӓTlwVTlwMuӕTlwVTlwMuӗTlwVTlwMuәTlwVTlwMuӛTlwVTlwMuӝTlwVTlwMuӟTlwVTlwMuӡTlwVTlwMuӣTlwVTlwMuӥTlwVTlwMuӧTlwVTlwMuөTlwVTlwMuӫTlwVTlwMuӭTlwVTlwMuӯTlwVTlwMuӱTlwVTlwMuӳTlwVTlwMuӵTlwVTlwMuӷTlwVTlwMuӹTlwVTlwMuӻTlwVTlwMuӽTlwVTlwMuӿTlwVTlwMuԁTlwVTlwMuԃLdTlwVTlwMuԅTlwVTlwMuԇTlwVTlwMuԉTlwVTl
wMuԋTlwVTlwMuԍTl
wVTlwMuԏTlwVTlwMuԑTlwVTlwMuԓTlwVTlwMuԕTlwVTlwMuԗTlwVTlwMuԙTlwVTlwMuԛTlwVTlwMuԝTlwVTlwMuԟTlwVTl wMuԡTl!wVTl"wMuԣTl#wVTl$wMuԥTl%wVTl&wMuԧTl'wVTl(wMuԩTl)wVTl*wMuԫTl+wVTl,wMuԭTl-wVTl.wMuԯTl/wVTl0wXTl1wMuաTl2wMuբTl3wMuգTl4wMuդTl5wMuեTl6wMuզTl7wMuէTl8wMuըTl9wMuթTl:wMuժTl;wMuիTl<wMuլTl=wMuխTl>wMuծTl?wMuկTl@wMuհTlAwMuձTlBwMuղTlCwMuճTlDwMuմTlEwMuյTlFwMuնTlGwMuշTlHwMuոTlIwMuչTlJwMuպTlKwMuջTlLwMuռTlMwMuսTlNwMuվTlOwMuտTlPwMuրTlQwMuցTlRwMuւTlSwMuփTlTwMuքTlUwMuօTlVwMuֆTlWwXTlYwVTlwMuեւTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVLdTluwMuاٴTlvwMuوٴTlwwMuۇٴTlxwMuيٴTlywVTlwXTlwVTlwXTlwVTlKwXTlMwVTlwXTlwVTlwXTlwVTl.wXTl0wVTl?wXTl@wVTl\wXTl^wVTl_wXTl`wVTlkwXTlpwVTlwXTlwVTlwXTlwVTlXwMuक़TlYwMuख़TlZwMuग़Tl[wMuज़Tl\wMuड़Tl]wMuढ़Tl^wMuफ़Tl_wMuय़Tl`wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMuড়TlwMuঢ়TlwXTlwMuয়TlwVTlwXTlwVTlwXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl)
wXTl*
wVTl1
wXTl2
wVTl3
wMuਲ਼Tl4
wXTl5
wVTl6
wMuਸ਼Tl7
wXTl8
wVTl:
wXTl<
wVTl=
wXTl>
wVTlC
wXTlG
wVTlI
wXTlK
wVTlN
wXTlQ
wVTlR
wXTlY
wMuਖ਼TlZ
wMuਗ਼Tl[
wMuਜ਼Tl\
wVTl]
wXLdTl^
wMuਫ਼Tl_
wXTlf
wVTlw
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTlwXTlwVTlwXTlwVTl
wXTlwVTlwXTlwVTl)wXTl*wVTl1wXTl2wVTl4wXTl5wVTl:wXTl<wVTlEwXTlGwVTlIwXTlKwVTlNwXTlUwVTlXwXTl\wMuଡ଼Tl]wMuଢ଼Tl^wXTl_wVTldwXTlfwVTlxwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl
wXTlwVTlwXTlwVTl)wXTl*wVLdTl:wXTl<wVTlEwXTlFwVTlIwXTlJwVTlNwXTlUwVTlWwXTlXwVTl[wXTl]wVTl^wXTl`wVTldwXTlfwVTlpwXTlwwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTl
wVTl

wXTl
wVTl
wXTl
wVTlE
wXTlF
wVTlI
wXTlJ
wVTlP
wXTlT
wVTld
wXTlf
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTlwVTl3wMuําTl4wVTl;wXTl?wVTl\wXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwMuໍາTlwVLdTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMuຫນTlwMuຫມTlwVTlwXTlwVTlwMu་Tl
wVTlCwMuགྷTlDwVTlHwXTlIwVTlMwMuཌྷTlNwVTlRwMuདྷTlSwVTlWwMuབྷTlXwVTl\wMuཛྷTl]wVTliwMuཀྵTljwVTlmwXTlqwVTlswMuཱིTltwVTluwMuཱུTlvwMuྲྀTlwwMuྲཱྀTlxwMuླྀTlywMuླཱྀTlzwVTlwMuཱྀTlwVTlwMuྒྷTlwVTlwXTlwVTlwMuྜྷTlwVTlwMuྡྷTlwVTlwMuྦྷTlwVTlwMuྫྷTlwVTlwMuྐྵTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMuⴧTlwXTlwMuⴭTlwXTlwVTlwMuნTlwVTl_wXTlawVTlIwXTlJwVTlNwXTlPwVTlWwXTlXwVTlYwXTlZwVTl^wXTl`wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVLdTlwXTlwVTl[wXTl]wVTl}wXTlwVTlwXTlwVTlwXTlwMuᏰTlwMuᏱTlwMuᏲTlwMuᏳTlwMuᏴTlwMuᏵTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl7wXTl@wVTlTwXTl`wVTlmwXTlnwVTlqwXTlrwVTltwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwITlwXTlwITlwVTlwXTl wVTlywXTlwVTlwXTlwVTlwXTlwVTlwXTl wVTl,wXTl0wVTl<wXTl@wVTlAwXTlDwVTlnwXTlpwVTluwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl_wXTl`wVTl}wXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlMwXTlPwVTlwXTlwVTlwXTlwVTl8wXTl;wVTlJwXTlMwVTlwMuвLdTlwMuдTlwMuоTlwMuсTlwMuтTlwMuъTlwMuѣTlwMuꙋTlwXTlwMuაTlwMuბTlwMuგTlwMuდTlwMuეTlwMuვTlwMuზTlwMuთTlwMuიTlwMuკTlwMuლTlwMuმTlwMuნTlwMuოTlwMuპTlwMuჟTlwMuრTlwMuსTlwMuტTlwMuუTlwMuფTlwMuქTlwMuღTlwMuყTlwMuშTlwMuჩTlwMuცTlwMuძTlwMuწTlwMuჭTlwMuხTlwMuჯTlwMuჰTlwMuჱTlwMuჲTlwMuჳTlwMuჴTlwMuჵTlwMuჶTlwMuჷTlwMuჸTlwMuჹTlwMuჺTlwXTlwMuჽTlwMuჾTlwMuჿTlwVTlwXTlwVTlwXTlwVTl,wMwaTl-wMuæTl.wMwbTl/wVTl0wMwdTl1wMweTl2wMuǝTl3wMwgTl4wMwhTl5wMwiTl6wMwjTl7wMwkTl8wMwlTl9wMwmTl:wMwnTl;wVTl<wMwoTl=wMuȣTl>wMwpTl?wMwrTl@wMwtTlAwMwuTlBwMwwTlCwMwaTlDwMuɐTlEwMuɑTlFwMuᴂTlGwMwbTlHwMwdTlIwMweTlJwMuəTlKwMuɛTlLwMuɜTlMwMwgTlNwVTlOwMwkTlPwMwmTlQwMuŋTlRwMwoTlSwMuɔLdTlTwMuᴖTlUwMuᴗTlVwMwpTlWwMwtTlXwMwuTlYwMuᴝTlZwMuɯTl[wMwvTl\wMuᴥTl]wMuβTl^wMuγTl_wMuδTl`wMuφTlawMuχTlbwMwiTlcwMwrTldwMwuTlewMwvTlfwMuβTlgwMuγTlhwMuρTliwMuφTljwMuχTlkwVTlxwMuнTlywVTlwMuɒTlwMwcTlwMuɕTlwMuðTlwMuɜTlwMwfTlwMuɟTlwMuɡTlwMuɥTlwMuɨTlwMuɩTlwMuɪTlwMuᵻTlwMuʝTlwMuɭTlwMuᶅTlwMuʟTlwMuɱTlwMuɰTlwMuɲTlwMuɳTlwMuɴTlwMuɵTlwMuɸTlwMuʂTlwMuʃTlwMuƫTlwMuʉTlwMuʊTlwMuᴜTlwMuʋTlwMuʌTlwMwzTlwMuʐTlwMuʑTlwMuʒTlwMuθTlwVTlwMuḁTlwVTlwMuḃTlwVTlwMuḅTlwVTlwMuḇTlwVTlwMuḉTlwVTl
wMuḋTlwVTlwMuḍTl
wVTlwMuḏTlwVTlwMuḑTlwVTlwMuḓTlwVTlwMuḕTlwVTlwMuḗTlwVTlwMuḙTlwVTlwMuḛTlwVTlwMuḝTlwVTlwMuḟTlwVTl wMuḡTl!wVTl"wMuḣTl#wVLdTl$wMuḥTl%wVTl&wMuḧTl'wVTl(wMuḩTl)wVTl*wMuḫTl+wVTl,wMuḭTl-wVTl.wMuḯTl/wVTl0wMuḱTl1wVTl2wMuḳTl3wVTl4wMuḵTl5wVTl6wMuḷTl7wVTl8wMuḹTl9wVTl:wMuḻTl;wVTl<wMuḽTl=wVTl>wMuḿTl?wVTl@wMuṁTlAwVTlBwMuṃTlCwVTlDwMuṅTlEwVTlFwMuṇTlGwVTlHwMuṉTlIwVTlJwMuṋTlKwVTlLwMuṍTlMwVTlNwMuṏTlOwVTlPwMuṑTlQwVTlRwMuṓTlSwVTlTwMuṕTlUwVTlVwMuṗTlWwVTlXwMuṙTlYwVTlZwMuṛTl[wVTl\wMuṝTl]wVTl^wMuṟTl_wVTl`wMuṡTlawVTlbwMuṣTlcwVTldwMuṥTlewVTlfwMuṧTlgwVTlhwMuṩTliwVTljwMuṫTlkwVTllwMuṭTlmwVTlnwMuṯTlowVTlpwMuṱTlqwVTlrwMuṳTlswVTltwMuṵTluwVTlvwMuṷTlwwVTlxwMuṹTlywVTlzwMuṻTl{wVTl|wMuṽTl}wVTl~wMuṿTlwVTlwMuẁTlwVTlwMuẃTlwVTlwMuẅTlwVTlwMuẇTlwVLdTlwMuẉTlwVTlwMuẋTlwVTlwMuẍTlwVTlwMuẏTlwVTlwMuẑTlwVTlwMuẓTlwVTlwMuẕTlwVTlwMuaʾTlwMuṡTlwVTlwMassTlwVTlwMuạTlwVTlwMuảTlwVTlwMuấTlwVTlwMuầTlwVTlwMuẩTlwVTlwMuẫTlwVTlwMuậTlwVTlwMuắTlwVTlwMuằTlwVTlwMuẳTlwVTlwMuẵTlwVTlwMuặTlwVTlwMuẹTlwVTlwMuẻTlwVTlwMuẽTlwVTlwMuếTlwVTlwMuềTlwVTlwMuểTlwVTlwMuễTlwVTlwMuệTlwVTlwMuỉTlwVTlwMuịTlwVTlwMuọTlwVTlwMuỏTlwVTlwMuốTlwVTlwMuồTlwVTlwMuổTlwVTlwMuỗTlwVTlwMuộTlwVTlwMuớTlwVTlwMuờTlwVTlwMuởTlwVTlwMuỡTlwVTlwMuợTlwVTlwMuụTlwVTlwMuủTlwVTlwMuứTlwVTlwMuừTlwVTlwMuửTlwVTlwMuữTlwVTlwMuựLdTlwVTlwMuỳTlwVTlwMuỵTlwVTlwMuỷTlwVTlwMuỹTlwVTlwMuỻTlwVTlwMuỽTlwVTlwMuỿTlwVTlwMuἀTlwMuἁTl
wMuἂTlwMuἃTlwMuἄTl
wMuἅTlwMuἆTlwMuἇTlwVTlwXTlwMuἐTlwMuἑTlwMuἒTlwMuἓTlwMuἔTlwMuἕTlwXTl wVTl(wMuἠTl)wMuἡTl*wMuἢTl+wMuἣTl,wMuἤTl-wMuἥTl.wMuἦTl/wMuἧTl0wVTl8wMuἰTl9wMuἱTl:wMuἲTl;wMuἳTl<wMuἴTl=wMuἵTl>wMuἶTl?wMuἷTl@wVTlFwXTlHwMuὀTlIwMuὁTlJwMuὂTlKwMuὃTlLwMuὄTlMwMuὅTlNwXTlPwVTlXwXTlYwMuὑTlZwXTl[wMuὓTl\wXTl]wMuὕTl^wXTl_wMuὗTl`wVTlhwMuὠTliwMuὡTljwMuὢTlkwMuὣTllwMuὤTlmwMuὥTlnwMuὦTlowMuὧTlpwVTlqwMuάTlrwVTlswMuέTltwVTluwMuήTlvwVTlwwMuίTlxwVTlywMuόTlzwVTl{wMuύTl|wVTl}wMuώTl~wXTlwMuἀιTlwMuἁιTlwMuἂιTlwMuἃιTlwMuἄιTlwMuἅιTlwMuἆιTlwMuἇιLdTlwMuἀιTlwMuἁιTlwMuἂιTlwMuἃιTlwMuἄιTlwMuἅιTlwMuἆιTlwMuἇιTlwMuἠιTlwMuἡιTlwMuἢιTlwMuἣιTlwMuἤιTlwMuἥιTlwMuἦιTlwMuἧιTlwMuἠιTlwMuἡιTlwMuἢιTlwMuἣιTlwMuἤιTlwMuἥιTlwMuἦιTlwMuἧιTlwMuὠιTlwMuὡιTlwMuὢιTlwMuὣιTlwMuὤιTlwMuὥιTlwMuὦιTlwMuὧιTlwMuὠιTlwMuὡιTlwMuὢιTlwMuὣιTlwMuὤιTlwMuὥιTlwMuὦιTlwMuὧιTlwVTlwMuὰιTlwMuαιTlwMuάιTlwXTlwVTlwMuᾶιTlwMuᾰTlwMuᾱTlwMuὰTlwMuάTlwMuαιTlw3u ̓TlwMuιTlw3u ̓Tlw3u ͂Tlw3u ̈͂TlwMuὴιTlwMuηιTlwMuήιTlwXTlwVTlwMuῆιTlwMuὲTlwMuέTlwMuὴTlwMuήTlwMuηιTlw3u ̓̀Tlw3u ̓́Tlw3u ̓͂TlwVTlwMuΐTlwXTlwVTlwMuῐTlwMuῑTlwMuὶTlwMuίTlwXTlw3u ̔̀Tlw3u ̔́Tlw3u ̔͂TlwVTlwMuΰTlwVTlwMuῠTlwMuῡTlwMuὺTlwMuύTlwMuῥTlw3u ̈̀Tlw3u ̈́Tlw3w`TlwXTlwMuὼιTlwMuωιTlwMuώιTlwXTlwVLdTlwMuῶιTlwMuὸTlwMuόTlwMuὼTlwMuώTlwMuωιTlw3u ́Tlw3u ̔TlwXTl w3w Tl wITl wDuTl wXTl wVTl wMu‐Tl wVTl w3u ̳Tl wVTl$ wXTl' wVTl( wXTl/ w3w Tl0 wVTl3 wMu′′Tl4 wMu′′′Tl5 wVTl6 wMu‵‵Tl7 wMu‵‵‵Tl8 wVTl< w3u!!Tl= wVTl> w3u ̅Tl? wVTlG w3u??TlH w3u?!TlI w3u!?TlJ wVTlW wMu′′′′TlX wVTl_ w3w Tl` wITla wXTld wITle wXTlp wMw0Tlq wMwiTlr wXTlt wMw4Tlu wMw5Tlv wMw6Tlw wMw7Tlx wMw8Tly wMw9Tlz w3w+Tl{ wMu−Tl| w3w=Tl} w3w(Tl~ w3w)Tl wMwnTl wMw0Tl wMw1Tl wMw2Tl wMw3Tl wMw4Tl wMw5Tl wMw6Tl wMw7Tl wMw8Tl wMw9Tl w3w+Tl wMu−Tl w3w=Tl w3w(Tl w3w)Tl wXTl wMwaTl wMweTl wMwoTl wMwxTl wMuəTl wMwhTl wMwkTl wMwlTl wMwmTl wMwnTl wMwpTl wMwsTl wMwtTl wXTl wVTl wMarsTl wVTl wXTl wVTl wXTl!w3ua/cTl!w3ua/sTl!wMwcTl!wMu°cTl!wVLdTl!w3uc/oTl!w3uc/uTl!wMuɛTl!wVTl!wMu°fTl
!wMwgTl!wMwhTl!wMuħTl!wMwiTl!wMwlTl!wVTl!wMwnTl!wManoTl!wVTl!wMwpTl!wMwqTl!wMwrTl!wVTl !wMasmTl!!wMatelTl"!wMatmTl#!wVTl$!wMwzTl%!wVTl&!wMuωTl'!wVTl(!wMwzTl)!wVTl*!wMwkTl+!wMuåTl,!wMwbTl-!wMwcTl.!wVTl/!wMweTl1!wMwfTl2!wXTl3!wMwmTl4!wMwoTl5!wMuאTl6!wMuבTl7!wMuגTl8!wMuדTl9!wMwiTl:!wVTl;!wMafaxTl<!wMuπTl=!wMuγTl?!wMuπTl@!wMu∑TlA!wVTlE!wMwdTlG!wMweTlH!wMwiTlI!wMwjTlJ!wVTlP!wMu1⁄7TlQ!wMu1⁄9TlR!wMu1⁄10TlS!wMu1⁄3TlT!wMu2⁄3TlU!wMu1⁄5TlV!wMu2⁄5TlW!wMu3⁄5TlX!wMu4⁄5TlY!wMu1⁄6TlZ!wMu5⁄6Tl[!wMu1⁄8Tl\!wMu3⁄8Tl]!wMu5⁄8Tl^!wMu7⁄8Tl_!wMu1⁄Tl`!wMwiTla!wMaiiTlb!wMaiiiTlc!wMaivTld!wMwvTle!wMaviTlf!wMaviiTlg!wMaviiiTlh!wMaixTli!wMwxTlj!wMaxiTlk!wMaxiiTll!wMwlTlm!wMwcTln!wMwdTlo!wMwmTlp!wMwiTlq!wMaiiTlr!wMaiiiTls!wMaivTlt!wMwvTlu!wMaviTlv!wMaviiTlw!wMaviiiTlx!wMaixTly!wMwxTlz!wMaxiTl{!wMaxiiTl|!wMwlLdTl}!wMwcTl~!wMwdTl!wMwmTl!wVTl!wXTl!wVTl!wMu0⁄3Tl!wVTl!wXTl!wVTl,"wMu∫∫Tl-"wMu∫∫∫Tl."wVTl/"wMu∮∮Tl0"wMu∮∮∮Tl1"wVTl`"w3Tla"wVTln"w3Tlp"wVTl)#wMu〈Tl*#wMu〉Tl+#wVTl'$wXTl@$wVTlK$wXTl`$wMw1Tla$wMw2Tlb$wMw3Tlc$wMw4Tld$wMw5Tle$wMw6Tlf$wMw7Tlg$wMw8Tlh$wMw9Tli$wMu10Tlj$wMu11Tlk$wMu12Tll$wMu13Tlm$wMu14Tln$wMu15Tlo$wMu16Tlp$wMu17Tlq$wMu18Tlr$wMu19Tls$wMu20Tlt$w3u(1)Tlu$w3u(2)Tlv$w3u(3)Tlw$w3u(4)Tlx$w3u(5)Tly$w3u(6)Tlz$w3u(7)Tl{$w3u(8)Tl|$w3u(9)Tl}$w3u(10)Tl~$w3u(11)Tl$w3u(12)Tl$w3u(13)Tl$w3u(14)Tl$w3u(15)Tl$w3u(16)Tl$w3u(17)Tl$w3u(18)Tl$w3u(19)Tl$w3u(20)Tl$wXTl$w3u(a)Tl$w3u(b)Tl$w3u(c)Tl$w3u(d)Tl$w3u(e)Tl$w3u(f)Tl$w3u(g)Tl$w3u(h)Tl$w3u(i)Tl$w3u(j)Tl$w3u(k)Tl$w3u(l)Tl$w3u(m)Tl$w3u(n)Tl$w3u(o)Tl$w3u(p)Tl$w3u(q)Tl$w3u(r)Tl$w3u(s)Tl$w3u(t)Tl$w3u(u)Tl$w3u(v)Tl$w3u(w)Tl$w3u(x)Tl$w3u(y)Tl$w3u(z)Tl$wMwaTl$wMwbTl$wMwcTl$wMwdTl$wMweTl$wMwfTl$wMwgLdTl$wMwhTl$wMwiTl$wMwjTl$wMwkTl$wMwlTl$wMwmTl$wMwnTl$wMwoTl$wMwpTl$wMwqTl$wMwrTl$wMwsTl$wMwtTl$wMwuTl$wMwvTl$wMwwTl$wMwxTl$wMwyTl$wMwzTl$wMwaTl$wMwbTl$wMwcTl$wMwdTl$wMweTl$wMwfTl$wMwgTl$wMwhTl$wMwiTl$wMwjTl$wMwkTl$wMwlTl$wMwmTl$wMwnTl$wMwoTl$wMwpTl$wMwqTl$wMwrTl$wMwsTl$wMwtTl$wMwuTl$wMwvTl$wMwwTl$wMwxTl$wMwyTl$wMwzTl$wMw0Tl$wVTl*wMu∫∫∫∫Tl
*wVTlt*w3u::=Tlu*w3u==Tlv*w3u===Tlw*wVTl*wMu⫝̸Tl*wVTlt+wXTlv+wVTl+wXTl+wVTl,wMuⰰTl,wMuⰱTl,wMuⰲTl,wMuⰳTl,wMuⰴTl,wMuⰵTl,wMuⰶTl,wMuⰷTl,wMuⰸTl,wMuⰹTl
,wMuⰺTl,wMuⰻTl,wMuⰼTl
,wMuⰽTl,wMuⰾTl,wMuⰿTl,wMuⱀTl,wMuⱁTl,wMuⱂTl,wMuⱃTl,wMuⱄTl,wMuⱅTl,wMuⱆTl,wMuⱇTl,wMuⱈTl,wMuⱉTl,wMuⱊTl,wMuⱋTl,wMuⱌTl,wMuⱍTl,wMuⱎTl,wMuⱏTl ,wMuⱐTl!,wMuⱑTl",wMuⱒTl#,wMuⱓTl$,wMuⱔTl%,wMuⱕTl&,wMuⱖTl',wMuⱗTl(,wMuⱘLdTl),wMuⱙTl*,wMuⱚTl+,wMuⱛTl,,wMuⱜTl-,wMuⱝTl.,wMuⱞTl/,wMuⱟTl0,wVTl`,wMuⱡTla,wVTlb,wMuɫTlc,wMuᵽTld,wMuɽTle,wVTlg,wMuⱨTlh,wVTli,wMuⱪTlj,wVTlk,wMuⱬTll,wVTlm,wMuɑTln,wMuɱTlo,wMuɐTlp,wMuɒTlq,wVTlr,wMuⱳTls,wVTlu,wMuⱶTlv,wVTl|,wMwjTl},wMwvTl~,wMuȿTl,wMuɀTl,wMuⲁTl,wVTl,wMuⲃTl,wVTl,wMuⲅTl,wVTl,wMuⲇTl,wVTl,wMuⲉTl,wVTl,wMuⲋTl,wVTl,wMuⲍTl,wVTl,wMuⲏTl,wVTl,wMuⲑTl,wVTl,wMuⲓTl,wVTl,wMuⲕTl,wVTl,wMuⲗTl,wVTl,wMuⲙTl,wVTl,wMuⲛTl,wVTl,wMuⲝTl,wVTl,wMuⲟTl,wVTl,wMuⲡTl,wVTl,wMuⲣTl,wVTl,wMuⲥTl,wVTl,wMuⲧTl,wVTl,wMuⲩTl,wVTl,wMuⲫTl,wVTl,wMuⲭTl,wVTl,wMuⲯTl,wVTl,wMuⲱTl,wVTl,wMuⲳTl,wVTl,wMuⲵTl,wVTl,wMuⲷTl,wVTl,wMuⲹTl,wVTl,wMuⲻTl,wVTl,wMuⲽTl,wVTl,wMuⲿTl,wVTl,wMuⳁTl,wVTl,wMuⳃLdTl,wVTl,wMuⳅTl,wVTl,wMuⳇTl,wVTl,wMuⳉTl,wVTl,wMuⳋTl,wVTl,wMuⳍTl,wVTl,wMuⳏTl,wVTl,wMuⳑTl,wVTl,wMuⳓTl,wVTl,wMuⳕTl,wVTl,wMuⳗTl,wVTl,wMuⳙTl,wVTl,wMuⳛTl,wVTl,wMuⳝTl,wVTl,wMuⳟTl,wVTl,wMuⳡTl,wVTl,wMuⳣTl,wVTl,wMuⳬTl,wVTl,wMuⳮTl,wVTl,wMuⳳTl,wVTl,wXTl,wVTl&-wXTl'-wVTl(-wXTl--wVTl.-wXTl0-wVTlh-wXTlo-wMuⵡTlp-wVTlq-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl^.wXTl.wVTl.wXTl.wVTl.wMu母Tl.wVTl.wMu龟Tl.wXTl/wMu一Tl/wMu丨Tl/wMu丶Tl/wMu丿Tl/wMu乙Tl/wMu亅Tl/wMu二Tl/wMu亠Tl/wMu人Tl/wMu儿Tl
/wMu入Tl/wMu八Tl/wMu冂Tl
/wMu冖Tl/wMu冫Tl/wMu几Tl/wMu凵Tl/wMu刀Tl/wMu力Tl/wMu勹Tl/wMu匕Tl/wMu匚LdTl/wMu匸Tl/wMu十Tl/wMu卜Tl/wMu卩Tl/wMu厂Tl/wMu厶Tl/wMu又Tl/wMu口Tl/wMu囗Tl/wMu土Tl /wMu士Tl!/wMu夂Tl"/wMu夊Tl#/wMu夕Tl$/wMu大Tl%/wMu女Tl&/wMu子Tl'/wMu宀Tl(/wMu寸Tl)/wMu小Tl*/wMu尢Tl+/wMu尸Tl,/wMu屮Tl-/wMu山Tl./wMu巛Tl//wMu工Tl0/wMu己Tl1/wMu巾Tl2/wMu干Tl3/wMu幺Tl4/wMu广Tl5/wMu廴Tl6/wMu廾Tl7/wMu弋Tl8/wMu弓Tl9/wMu彐Tl:/wMu彡Tl;/wMu彳Tl</wMu心Tl=/wMu戈Tl>/wMu戶Tl?/wMu手Tl@/wMu支TlA/wMu攴TlB/wMu文TlC/wMu斗TlD/wMu斤TlE/wMu方TlF/wMu无TlG/wMu日TlH/wMu曰TlI/wMu月TlJ/wMu木TlK/wMu欠TlL/wMu止TlM/wMu歹TlN/wMu殳TlO/wMu毋TlP/wMu比TlQ/wMu毛TlR/wMu氏TlS/wMu气TlT/wMu水TlU/wMu火TlV/wMu爪TlW/wMu父TlX/wMu爻TlY/wMu爿TlZ/wMu片Tl[/wMu牙Tl\/wMu牛Tl]/wMu犬Tl^/wMu玄Tl_/wMu玉Tl`/wMu瓜Tla/wMu瓦Tlb/wMu甘Tlc/wMu生Tld/wMu用Tle/wMu田Tlf/wMu疋Tlg/wMu疒Tlh/wMu癶Tli/wMu白Tlj/wMu皮Tlk/wMu皿Tll/wMu目Tlm/wMu矛Tln/wMu矢Tlo/wMu石Tlp/wMu示Tlq/wMu禸Tlr/wMu禾Tls/wMu穴Tlt/wMu立Tlu/wMu竹Tlv/wMu米Tlw/wMu糸Tlx/wMu缶Tly/wMu网LdTlz/wMu羊Tl{/wMu羽Tl|/wMu老Tl}/wMu而Tl~/wMu耒Tl/wMu耳Tl/wMu聿Tl/wMu肉Tl/wMu臣Tl/wMu自Tl/wMu至Tl/wMu臼Tl/wMu舌Tl/wMu舛Tl/wMu舟Tl/wMu艮Tl/wMu色Tl/wMu艸Tl/wMu虍Tl/wMu虫Tl/wMu血Tl/wMu行Tl/wMu衣Tl/wMu襾Tl/wMu見Tl/wMu角Tl/wMu言Tl/wMu谷Tl/wMu豆Tl/wMu豕Tl/wMu豸Tl/wMu貝Tl/wMu赤Tl/wMu走Tl/wMu足Tl/wMu身Tl/wMu車Tl/wMu辛Tl/wMu辰Tl/wMu辵Tl/wMu邑Tl/wMu酉Tl/wMu釆Tl/wMu里Tl/wMu金Tl/wMu長Tl/wMu門Tl/wMu阜Tl/wMu隶Tl/wMu隹Tl/wMu雨Tl/wMu靑Tl/wMu非Tl/wMu面Tl/wMu革Tl/wMu韋Tl/wMu韭Tl/wMu音Tl/wMu頁Tl/wMu風Tl/wMu飛Tl/wMu食Tl/wMu首Tl/wMu香Tl/wMu馬Tl/wMu骨Tl/wMu高Tl/wMu髟Tl/wMu鬥Tl/wMu鬯Tl/wMu鬲Tl/wMu鬼Tl/wMu魚Tl/wMu鳥Tl/wMu鹵Tl/wMu鹿Tl/wMu麥Tl/wMu麻Tl/wMu黃Tl/wMu黍Tl/wMu黑Tl/wMu黹Tl/wMu黽Tl/wMu鼎Tl/wMu鼓Tl/wMu鼠Tl/wMu鼻Tl/wMu齊Tl/wMu齒Tl/wMu龍Tl/wMu龜Tl/wMu龠Tl/wXTl0w3w Tl0wVTl0wMw.Tl0wVTl60wMu〒Tl70wVTl80wMu十LdTl90wMu卄Tl:0wMu卅Tl;0wVTl@0wXTlA0wVTl0wXTl0wVTl0w3u ゙Tl0w3u ゚Tl0wVTl0wMuよりTl0wVTl0wMuコトTl1wXTl1wVTl01wXTl11wMuᄀTl21wMuᄁTl31wMuᆪTl41wMuᄂTl51wMuᆬTl61wMuᆭTl71wMuᄃTl81wMuᄄTl91wMuᄅTl:1wMuᆰTl;1wMuᆱTl<1wMuᆲTl=1wMuᆳTl>1wMuᆴTl?1wMuᆵTl@1wMuᄚTlA1wMuᄆTlB1wMuᄇTlC1wMuᄈTlD1wMuᄡTlE1wMuᄉTlF1wMuᄊTlG1wMuᄋTlH1wMuᄌTlI1wMuᄍTlJ1wMuᄎTlK1wMuᄏTlL1wMuᄐTlM1wMuᄑTlN1wMuᄒTlO1wMuᅡTlP1wMuᅢTlQ1wMuᅣTlR1wMuᅤTlS1wMuᅥTlT1wMuᅦTlU1wMuᅧTlV1wMuᅨTlW1wMuᅩTlX1wMuᅪTlY1wMuᅫTlZ1wMuᅬTl[1wMuᅭTl\1wMuᅮTl]1wMuᅯTl^1wMuᅰTl_1wMuᅱTl`1wMuᅲTla1wMuᅳTlb1wMuᅴTlc1wMuᅵTld1wXTle1wMuᄔTlf1wMuᄕTlg1wMuᇇTlh1wMuᇈTli1wMuᇌTlj1wMuᇎTlk1wMuᇓTll1wMuᇗTlm1wMuᇙTln1wMuᄜTlo1wMuᇝTlp1wMuᇟTlq1wMuᄝTlr1wMuᄞTls1wMuᄠTlt1wMuᄢTlu1wMuᄣTlv1wMuᄧTlw1wMuᄩTlx1wMuᄫTly1wMuᄬTlz1wMuᄭTl{1wMuᄮTl|1wMuᄯTl}1wMuᄲTl~1wMuᄶTl1wMuᅀTl1wMuᅇTl1wMuᅌTl1wMuᇱTl1wMuᇲTl1wMuᅗLdTl1wMuᅘTl1wMuᅙTl1wMuᆄTl1wMuᆅTl1wMuᆈTl1wMuᆑTl1wMuᆒTl1wMuᆔTl1wMuᆞTl1wMuᆡTl1wXTl1wVTl1wMu一Tl1wMu二Tl1wMu三Tl1wMu四Tl1wMu上Tl1wMu中Tl1wMu下Tl1wMu甲Tl1wMu乙Tl1wMu丙Tl1wMu丁Tl1wMu天Tl1wMu地Tl1wMu人Tl1wVTl1wXTl1wVTl2w3u(ᄀ)Tl2w3u(ᄂ)Tl2w3u(ᄃ)Tl2w3u(ᄅ)Tl2w3u(ᄆ)Tl2w3u(ᄇ)Tl2w3u(ᄉ)Tl2w3u(ᄋ)Tl2w3u(ᄌ)Tl2w3u(ᄎ)Tl
2w3u(ᄏ)Tl2w3u(ᄐ)Tl2w3u(ᄑ)Tl
2w3u(ᄒ)Tl2w3u(가)Tl2w3u(나)Tl2w3u(다)Tl2w3u(라)Tl2w3u(마)Tl2w3u(바)Tl2w3u(사)Tl2w3u(아)Tl2w3u(자)Tl2w3u(차)Tl2w3u(카)Tl2w3u(타)Tl2w3u(파)Tl2w3u(하)Tl2w3u(주)Tl2w3u(오전)Tl2w3u(오후)Tl2wXTl 2w3u(一)Tl!2w3u(二)Tl"2w3u(三)Tl#2w3u(四)Tl$2w3u(五)Tl%2w3u(六)Tl&2w3u(七)Tl'2w3u(八)Tl(2w3u(九)Tl)2w3u(十)Tl*2w3u(月)Tl+2w3u(火)Tl,2w3u(水)Tl-2w3u(木)Tl.2w3u(金)Tl/2w3u(土)Tl02w3u(日)Tl12w3u(株)Tl22w3u(有)Tl32w3u(社)Tl42w3u(名)Tl52w3u(特)Tl62w3u(財)Tl72w3u(祝)Tl82w3u(労)Tl92w3u(代)Tl:2w3u(呼)Tl;2w3u(学)Tl<2w3u(監)Tl=2w3u(企)Tl>2w3u(資)Tl?2w3u(協)Tl@2w3u(祭)TlA2w3u(休)TlB2w3u(自)TlC2w3u(至)TlD2wMu問TlE2wMu幼TlF2wMu文LdTlG2wMu箏TlH2wVTlP2wMapteTlQ2wMu21TlR2wMu22TlS2wMu23TlT2wMu24TlU2wMu25TlV2wMu26TlW2wMu27TlX2wMu28TlY2wMu29TlZ2wMu30Tl[2wMu31Tl\2wMu32Tl]2wMu33Tl^2wMu34Tl_2wMu35Tl`2wMuᄀTla2wMuᄂTlb2wMuᄃTlc2wMuᄅTld2wMuᄆTle2wMuᄇTlf2wMuᄉTlg2wMuᄋTlh2wMuᄌTli2wMuᄎTlj2wMuᄏTlk2wMuᄐTll2wMuᄑTlm2wMuᄒTln2wMu가Tlo2wMu나Tlp2wMu다Tlq2wMu라Tlr2wMu마Tls2wMu바Tlt2wMu사Tlu2wMu아Tlv2wMu자Tlw2wMu차Tlx2wMu카Tly2wMu타Tlz2wMu파Tl{2wMu하Tl|2wMu참고Tl}2wMu주의Tl~2wMu우Tl2wVTl2wMu一Tl2wMu二Tl2wMu三Tl2wMu四Tl2wMu五Tl2wMu六Tl2wMu七Tl2wMu八Tl2wMu九Tl2wMu十Tl2wMu月Tl2wMu火Tl2wMu水Tl2wMu木Tl2wMu金Tl2wMu土Tl2wMu日Tl2wMu株Tl2wMu有Tl2wMu社Tl2wMu名Tl2wMu特Tl2wMu財Tl2wMu祝Tl2wMu労Tl2wMu秘Tl2wMu男Tl2wMu女Tl2wMu適Tl2wMu優Tl2wMu印Tl2wMu注Tl2wMu項Tl2wMu休Tl2wMu写Tl2wMu正Tl2wMu上Tl2wMu中Tl2wMu下Tl2wMu左Tl2wMu右Tl2wMu医Tl2wMu宗Tl2wMu学Tl2wMu監Tl2wMu企Tl2wMu資Tl2wMu協Tl2wMu夜Tl2wMu36LdTl2wMu37Tl2wMu38Tl2wMu39Tl2wMu40Tl2wMu41Tl2wMu42Tl2wMu43Tl2wMu44Tl2wMu45Tl2wMu46Tl2wMu47Tl2wMu48Tl2wMu49Tl2wMu50Tl2wMu1月Tl2wMu2月Tl2wMu3月Tl2wMu4月Tl2wMu5月Tl2wMu6月Tl2wMu7月Tl2wMu8月Tl2wMu9月Tl2wMu10月Tl2wMu11月Tl2wMu12月Tl2wMahgTl2wMaergTl2wMaevTl2wMaltdTl2wMuアTl2wMuイTl2wMuウTl2wMuエTl2wMuオTl2wMuカTl2wMuキTl2wMuクTl2wMuケTl2wMuコTl2wMuサTl2wMuシTl2wMuスTl2wMuセTl2wMuソTl2wMuタTl2wMuチTl2wMuツTl2wMuテTl2wMuトTl2wMuナTl2wMuニTl2wMuヌTl2wMuネTl2wMuノTl2wMuハTl2wMuヒTl2wMuフTl2wMuヘTl2wMuホTl2wMuマTl2wMuミTl2wMuムTl2wMuメTl2wMuモTl2wMuヤTl2wMuユTl2wMuヨTl2wMuラTl2wMuリTl2wMuルTl2wMuレTl2wMuロTl2wMuワTl2wMuヰTl2wMuヱTl2wMuヲTl2wMu令和Tl3wMuアパートTl3wMuアルファTl3wMuアンペアTl3wMuアールTl3wMuイニングTl3wMuインチTl3wMuウォンTl3wMuエスクードTl3wMuエーカーTl3wMuオンスTl
3wMuオームTl3wMuカイリTl3wMuカラットTl
3wMuカロリーTl3wMuガロンTl3wMuガンマTl3wMuギガTl3wMuギニーTl3wMuキュリーTl3wMuギルダーTl3wMuキロTl3wMuキログラムLdTl3wMuキロメートルTl3wMuキロワットTl3wMuグラムTl3wMuグラムトンTl3wMuクルゼイロTl3wMuクローネTl3wMuケースTl3wMuコルナTl3wMuコーポTl3wMuサイクルTl 3wMuサンチームTl!3wMuシリングTl"3wMuセンチTl#3wMuセントTl$3wMuダースTl%3wMuデシTl&3wMuドルTl'3wMuトンTl(3wMuナノTl)3wMuノットTl*3wMuハイツTl+3wMuパーセントTl,3wMuパーツTl-3wMuバーレルTl.3wMuピアストルTl/3wMuピクルTl03wMuピコTl13wMuビルTl23wMuファラッドTl33wMuフィートTl43wMuブッシェルTl53wMuフランTl63wMuヘクタールTl73wMuペソTl83wMuペニヒTl93wMuヘルツTl:3wMuペンスTl;3wMuページTl<3wMuベータTl=3wMuポイントTl>3wMuボルトTl?3wMuホンTl@3wMuポンドTlA3wMuホールTlB3wMuホーンTlC3wMuマイクロTlD3wMuマイルTlE3wMuマッハTlF3wMuマルクTlG3wMuマンションTlH3wMuミクロンTlI3wMuミリTlJ3wMuミリバールTlK3wMuメガTlL3wMuメガトンTlM3wMuメートルTlN3wMuヤードTlO3wMuヤールTlP3wMuユアンTlQ3wMuリットルTlR3wMuリラTlS3wMuルピーTlT3wMuルーブルTlU3wMuレムTlV3wMuレントゲンTlW3wMuワットTlX3wMu0点TlY3wMu1点TlZ3wMu2点Tl[3wMu3点Tl\3wMu4点Tl]3wMu5点Tl^3wMu6点Tl_3wMu7点Tl`3wMu8点Tla3wMu9点Tlb3wMu10点Tlc3wMu11点Tld3wMu12点Tle3wMu13点Tlf3wMu14点Tlg3wMu15点Tlh3wMu16点Tli3wMu17点Tlj3wMu18点Tlk3wMu19点Tll3wMu20点Tlm3wMu21点Tln3wMu22点Tlo3wMu23点Tlp3wMu24点Tlq3wMahpaTlr3wMadaTls3wMaauTlt3wMabarTlu3wMaovTlv3wMapcTlw3wMadmTlx3wMadm2Tly3wMadm3LdTlz3wMaiuTl{3wMu平成Tl|3wMu昭和Tl}3wMu大正Tl~3wMu明治Tl3wMu株式会社Tl3wMapaTl3wManaTl3wMuμaTl3wMamaTl3wMakaTl3wMakbTl3wMambTl3wMagbTl3wMacalTl3wMakcalTl3wMapfTl3wManfTl3wMuμfTl3wMuμgTl3wMamgTl3wMakgTl3wMahzTl3wMakhzTl3wMamhzTl3wMaghzTl3wMathzTl3wMuμlTl3wMamlTl3wMadlTl3wMaklTl3wMafmTl3wManmTl3wMuμmTl3wMammTl3wMacmTl3wMakmTl3wMamm2Tl3wMacm2Tl3wMam2Tl3wMakm2Tl3wMamm3Tl3wMacm3Tl3wMam3Tl3wMakm3Tl3wMum∕sTl3wMum∕s2Tl3wMapaTl3wMakpaTl3wMampaTl3wMagpaTl3wMaradTl3wMurad∕sTl3wMurad∕s2Tl3wMapsTl3wMansTl3wMuμsTl3wMamsTl3wMapvTl3wManvTl3wMuμvTl3wMamvTl3wMakvTl3wMamvTl3wMapwTl3wManwTl3wMuμwTl3wMamwTl3wMakwTl3wMamwTl3wMukωTl3wMumωTl3wXTl3wMabqTl3wMaccTl3wMacdTl3wMuc∕kgTl3wXTl3wMadbTl3wMagyTl3wMahaTl3wMahpTl3wMainTl3wMakkTl3wMakmTl3wMaktTl3wMalmTl3wMalnTl3wMalogTl3wMalxTl3wMambTl3wMamilTl3wMamolTl3wMaphTl3wXTl3wMappmTl3wMaprTl3wMasrTl3wMasvTl3wMawbLdTl3wMuv∕mTl3wMua∕mTl3wMu1日Tl3wMu2日Tl3wMu3日Tl3wMu4日Tl3wMu5日Tl3wMu6日Tl3wMu7日Tl3wMu8日Tl3wMu9日Tl3wMu10日Tl3wMu11日Tl3wMu12日Tl3wMu13日Tl3wMu14日Tl3wMu15日Tl3wMu16日Tl3wMu17日Tl3wMu18日Tl3wMu19日Tl3wMu20日Tl3wMu21日Tl3wMu22日Tl3wMu23日Tl3wMu24日Tl3wMu25日Tl3wMu26日Tl3wMu27日Tl3wMu28日Tl3wMu29日Tl3wMu30日Tl3wMu31日Tl3wMagalTl4wVTlwXTlwVTlǤwXTlФwVTl,wXTl@wMuꙁTlAwVTlBwMuꙃTlCwVTlDwMuꙅTlEwVTlFwMuꙇTlGwVTlHwMuꙉTlIwVTlJwMuꙋTlKwVTlLwMuꙍTlMwVTlNwMuꙏTlOwVTlPwMuꙑTlQwVTlRwMuꙓTlSwVTlTwMuꙕTlUwVTlVwMuꙗTlWwVTlXwMuꙙTlYwVTlZwMuꙛTl[wVTl\wMuꙝTl]wVTl^wMuꙟTl_wVTl`wMuꙡTlawVTlbwMuꙣTlcwVTldwMuꙥTlewVTlfwMuꙧTlgwVTlhwMuꙩTliwVTljwMuꙫTlkwVTllwMuꙭTlmwVTlwMuꚁTlwVTlwMuꚃTlwVTlwMuꚅTlwVTlwMuꚇTlwVTlwMuꚉTlwVTlwMuꚋTlwVTlwMuꚍTlwVLdTlwMuꚏTlwVTlwMuꚑTlwVTlwMuꚓTlwVTlwMuꚕTlwVTlwMuꚗTlwVTlwMuꚙTlwVTlwMuꚛTlwVTlwMuъTlwMuьTlwVTlwXTlwVTl"wMuꜣTl#wVTl$wMuꜥTl%wVTl&wMuꜧTl'wVTl(wMuꜩTl)wVTl*wMuꜫTl+wVTl,wMuꜭTl-wVTl.wMuꜯTl/wVTl2wMuꜳTl3wVTl4wMuꜵTl5wVTl6wMuꜷTl7wVTl8wMuꜹTl9wVTl:wMuꜻTl;wVTl<wMuꜽTl=wVTl>wMuꜿTl?wVTl@wMuꝁTlAwVTlBwMuꝃTlCwVTlDwMuꝅTlEwVTlFwMuꝇTlGwVTlHwMuꝉTlIwVTlJwMuꝋTlKwVTlLwMuꝍTlMwVTlNwMuꝏTlOwVTlPwMuꝑTlQwVTlRwMuꝓTlSwVTlTwMuꝕTlUwVTlVwMuꝗTlWwVTlXwMuꝙTlYwVTlZwMuꝛTl[wVTl\wMuꝝTl]wVTl^wMuꝟTl_wVTl`wMuꝡTlawVTlbwMuꝣTlcwVTldwMuꝥTlewVTlfwMuꝧTlgwVTlhwMuꝩTliwVTljwMuꝫTlkwVTllwMuꝭTlmwVTlnwMuꝯTlowVTlpwMuꝯTlqwVTlywMuꝺTlzwVTl{wMuꝼLdTl|wVTl}wMuᵹTl~wMuꝿTlwVTlwMuꞁTlwVTlwMuꞃTlwVTlwMuꞅTlwVTlwMuꞇTlwVTlwMuꞌTlwVTlwMuɥTlwVTlwMuꞑTlwVTlwMuꞓTlwVTlwMuꞗTlwVTlwMuꞙTlwVTlwMuꞛTlwVTlwMuꞝTlwVTlwMuꞟTlwVTlwMuꞡTlwVTlwMuꞣTlwVTlwMuꞥTlwVTlwMuꞧTlwVTlwMuꞩTlwVTlwMuɦTlwMuɜTlwMuɡTlwMuɬTlwMuɪTlwVTlwMuʞTlwMuʇTlwMuʝTlwMuꭓTlwMuꞵTlwVTlwMuꞷTlwVTlwMuꞹTlwVTlwMuꞻTlwVTlwMuꞽTlwVTlwMuꞿTlwVTlwMuꟁTlwVTl§wMuꟃTlçwVTlħwMuꞔTlŧwMuʂTlƧwMuᶎTlǧwMuꟈTlȧwVTlɧwMuꟊTlʧwVTl˧wXTlЧwMuꟑTlѧwVTlҧwXTlӧwVTlԧwXTlէwVTl֧wMuꟗTlקwVTlاwMuꟙTl٧wVTlڧwXTlwMwcTlwMwfTlwMwqTlwMuꟶTlwVTlwMuħTlwMuœTlwVTl-wXTl0wVTl:wXTl@wVTlxwXTlwVTlƨwXLdTlΨwVTlڨwXTlwVTlTwXTl_wVTl}wXTlwVTlΩwXTlϩwVTlکwXTlީwVTlwXTlwVTl7wXTl@wVTlNwXTlPwVTlZwXTl\wVTlêwXTl۪wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTl wVTl'wXTl(wVTl/wXTl0wVTl\wMuꜧTl]wMuꬷTl^wMuɫTl_wMuꭒTl`wVTliwMuʍTljwVTllwXTlpwMuᎠTlqwMuᎡTlrwMuᎢTlswMuᎣTltwMuᎤTluwMuᎥTlvwMuᎦTlwwMuᎧTlxwMuᎨTlywMuᎩTlzwMuᎪTl{wMuᎫTl|wMuᎬTl}wMuᎭTl~wMuᎮTlwMuᎯTlwMuᎰTlwMuᎱTlwMuᎲTlwMuᎳTlwMuᎴTlwMuᎵTlwMuᎶTlwMuᎷTlwMuᎸTlwMuᎹTlwMuᎺTlwMuᎻTlwMuᎼTlwMuᎽTlwMuᎾTlwMuᎿTlwMuᏀTlwMuᏁTlwMuᏂTlwMuᏃTlwMuᏄTlwMuᏅTlwMuᏆTlwMuᏇTlwMuᏈTlwMuᏉTlwMuᏊTlwMuᏋTlwMuᏌTlwMuᏍTlwMuᏎTlwMuᏏTlwMuᏐTlwMuᏑTlwMuᏒTlwMuᏓTlwMuᏔTlwMuᏕTlwMuᏖTlwMuᏗTlwMuᏘTlwMuᏙTlwMuᏚLdTlwMuᏛTlwMuᏜTlwMuᏝTlwMuᏞTlwMuᏟTlwMuᏠTlwMuᏡTlwMuᏢTlwMuᏣTlwMuᏤTlwMuᏥTlwMuᏦTlwMuᏧTlwMuᏨTlwMuᏩTlwMuᏪTlwMuᏫTlwMuᏬTlwMuᏭTlwMuᏮTlwMuᏯTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMu豈TlwMu更TlwMu車TlwMu賈TlwMu滑TlwMu串TlwMu句TlwMu龜TlwMu契Tl
wMu金TlwMu喇TlwMu奈Tl
wMu懶TlwMu癩TlwMu羅TlwMu蘿TlwMu螺TlwMu裸TlwMu邏TlwMu樂TlwMu洛TlwMu烙TlwMu珞TlwMu落TlwMu酪TlwMu駱TlwMu亂TlwMu卵TlwMu欄TlwMu爛TlwMu蘭Tl wMu鸞Tl!wMu嵐Tl"wMu濫Tl#wMu藍Tl$wMu襤Tl%wMu拉Tl&wMu臘Tl'wMu蠟Tl(wMu廊Tl)wMu朗Tl*wMu浪Tl+wMu狼Tl,wMu郎Tl-wMu來Tl.wMu冷Tl/wMu勞Tl0wMu擄Tl1wMu櫓Tl2wMu爐Tl3wMu盧Tl4wMu老Tl5wMu蘆Tl6wMu虜Tl7wMu路Tl8wMu露Tl9wMu魯Tl:wMu鷺Tl;wMu碌Tl<wMu祿Tl=wMu綠Tl>wMu菉Tl?wMu錄Tl@wMu鹿TlAwMu論TlBwMu壟TlCwMu弄TlDwMu籠TlEwMu聾LdTlFwMu牢TlGwMu磊TlHwMu賂TlIwMu雷TlJwMu壘TlKwMu屢TlLwMu樓TlMwMu淚TlNwMu漏TlOwMu累TlPwMu縷TlQwMu陋TlRwMu勒TlSwMu肋TlTwMu凜TlUwMu凌TlVwMu稜TlWwMu綾TlXwMu菱TlYwMu陵TlZwMu讀Tl[wMu拏Tl\wMu樂Tl]wMu諾Tl^wMu丹Tl_wMu寧Tl`wMu怒TlawMu率TlbwMu異TlcwMu北TldwMu磻TlewMu便TlfwMu復TlgwMu不TlhwMu泌TliwMu數TljwMu索TlkwMu參TllwMu塞TlmwMu省TlnwMu葉TlowMu說TlpwMu殺TlqwMu辰TlrwMu沈TlswMu拾TltwMu若TluwMu掠TlvwMu略TlwwMu亮TlxwMu兩TlywMu凉TlzwMu梁Tl{wMu糧Tl|wMu良Tl}wMu諒Tl~wMu量TlwMu勵TlwMu呂TlwMu女TlwMu廬TlwMu旅TlwMu濾TlwMu礪TlwMu閭TlwMu驪TlwMu麗TlwMu黎TlwMu力TlwMu曆TlwMu歷TlwMu轢TlwMu年TlwMu憐TlwMu戀TlwMu撚TlwMu漣TlwMu煉TlwMu璉TlwMu秊TlwMu練TlwMu聯TlwMu輦TlwMu蓮TlwMu連TlwMu鍊TlwMu列TlwMu劣TlwMu咽TlwMu烈TlwMu裂TlwMu說TlwMu廉TlwMu念TlwMu捻TlwMu殮TlwMu簾TlwMu獵TlwMu令TlwMu囹LdTlwMu寧TlwMu嶺TlwMu怜TlwMu玲TlwMu瑩TlwMu羚TlwMu聆TlwMu鈴TlwMu零TlwMu靈TlwMu領TlwMu例TlwMu禮TlwMu醴TlwMu隸TlwMu惡TlwMu了TlwMu僚TlwMu寮TlwMu尿TlwMu料TlwMu樂TlwMu燎TlwMu療TlwMu蓼TlwMu遼TlwMu龍TlwMu暈TlwMu阮TlwMu劉TlwMu杻TlwMu柳TlwMu流TlwMu溜TlwMu琉TlwMu留TlwMu硫TlwMu紐TlwMu類TlwMu六TlwMu戮TlwMu陸TlwMu倫TlwMu崙TlwMu淪TlwMu輪TlwMu律TlwMu慄TlwMu栗TlwMu率TlwMu隆TlwMu利TlwMu吏TlwMu履TlwMu易TlwMu李TlwMu梨TlwMu泥TlwMu理TlwMu痢TlwMu罹TlwMu裏TlwMu裡TlwMu里TlwMu離TlwMu匿TlwMu溺TlwMu吝TlwMu燐TlwMu璘TlwMu藺TlwMu隣TlwMu鱗TlwMu麟TlwMu林TlwMu淋TlwMu臨TlwMu立TlwMu笠TlwMu粒TlwMu狀TlwMu炙TlwMu識TlwMu什TlwMu茶TlwMu刺TlwMu切TlwMu度TlwMu拓TlwMu糖TlwMu宅TlwMu洞TlwMu暴TlwMu輻TlwMu行TlwMu降Tl
wMu見TlwMu廓TlwMu兀Tl
wMu嗀LdTlwVTlwMu塚TlwVTlwMu晴TlwVTlwMu凞TlwMu猪TlwMu益TlwMu礼TlwMu神TlwMu祥TlwMu福TlwMu靖TlwMu精TlwMu羽TlwVTl wMu蘒Tl!wVTl"wMu諸Tl#wVTl%wMu逸Tl&wMu都Tl'wVTl*wMu飯Tl+wMu飼Tl,wMu館Tl-wMu鶴Tl.wMu郞Tl/wMu隷Tl0wMu侮Tl1wMu僧Tl2wMu免Tl3wMu勉Tl4wMu勤Tl5wMu卑Tl6wMu喝Tl7wMu嘆Tl8wMu器Tl9wMu塀Tl:wMu墨Tl;wMu層Tl<wMu屮Tl=wMu悔Tl>wMu慨Tl?wMu憎Tl@wMu懲TlAwMu敏TlBwMu既TlCwMu暑TlDwMu梅TlEwMu海TlFwMu渚TlGwMu漢TlHwMu煮TlIwMu爫TlJwMu琢TlKwMu碑TlLwMu社TlMwMu祉TlNwMu祈TlOwMu祐TlPwMu祖TlQwMu祝TlRwMu禍TlSwMu禎TlTwMu穀TlUwMu突TlVwMu節TlWwMu練TlXwMu縉TlYwMu繁TlZwMu署Tl[wMu者Tl\wMu臭Tl]wMu艹Tl_wMu著Tl`wMu褐TlawMu視TlbwMu謁TlcwMu謹TldwMu賓TlewMu贈TlfwMu辶TlgwMu逸TlhwMu難TliwMu響TljwMu頻TlkwMu恵TllwMu𤋮TlmwMu舘TlnwXTlpwMu並TlqwMu况TlrwMu全TlswMu侀TltwMu充TluwMu冀TlvwMu勇TlwwMu勺TlxwMu喝LdTlywMu啕TlzwMu喙Tl{wMu嗢Tl|wMu塚Tl}wMu墳Tl~wMu奄TlwMu奔TlwMu婢TlwMu嬨TlwMu廒TlwMu廙TlwMu彩TlwMu徭TlwMu惘TlwMu慎TlwMu愈TlwMu憎TlwMu慠TlwMu懲TlwMu戴TlwMu揄TlwMu搜TlwMu摒TlwMu敖TlwMu晴TlwMu朗TlwMu望TlwMu杖TlwMu歹TlwMu殺TlwMu流TlwMu滛TlwMu滋TlwMu漢TlwMu瀞TlwMu煮TlwMu瞧TlwMu爵TlwMu犯TlwMu猪TlwMu瑱TlwMu甆TlwMu画TlwMu瘝TlwMu瘟TlwMu益TlwMu盛TlwMu直TlwMu睊TlwMu着TlwMu磌TlwMu窱TlwMu節TlwMu类TlwMu絛TlwMu練TlwMu缾TlwMu者TlwMu荒TlwMu華TlwMu蝹TlwMu襁TlwMu覆TlwMu視TlwMu調TlwMu諸TlwMu請TlwMu謁TlwMu諾TlwMu諭TlwMu謹TlwMu變TlwMu贈TlwMu輸TlwMu遲TlwMu醙TlwMu鉶TlwMu陼TlwMu難TlwMu靖TlwMu韛TlwMu響TlwMu頋TlwMu頻TlwMu鬒TlwMu龜TlwMu𢡊TlwMu𢡄TlwMu𣏕TlwMu㮝TlwMu䀘TlwMu䀹TlwMu𥉉TlwMu𥳐TlwMu𧻓TlwMu齃TlwMu龎TlwXTlwMaffTlwMafiLdTlwMaflTlwMaffiTlwMafflTlwMastTlwXTlwMuմնTlwMuմեTlwMuմիTlwMuվնTlwMuմխTlwXTlwMuיִTlwVTlwMuײַTl wMuעTl!wMuאTl"wMuדTl#wMuהTl$wMuכTl%wMuלTl&wMuםTl'wMuרTl(wMuתTl)w3w+Tl*wMuשׁTl+wMuשׂTl,wMuשּׁTl-wMuשּׂTl.wMuאַTl/wMuאָTl0wMuאּTl1wMuבּTl2wMuגּTl3wMuדּTl4wMuהּTl5wMuוּTl6wMuזּTl7wXTl8wMuטּTl9wMuיּTl:wMuךּTl;wMuכּTl<wMuלּTl=wXTl>wMuמּTl?wXTl@wMuנּTlAwMuסּTlBwXTlCwMuףּTlDwMuפּTlEwXTlFwMuצּTlGwMuקּTlHwMuרּTlIwMuשּTlJwMuתּTlKwMuוֹTlLwMuבֿTlMwMuכֿTlNwMuפֿTlOwMuאלTlPwMuٱTlRwMuٻTlVwMuپTlZwMuڀTl^wMuٺTlbwMuٿTlfwMuٹTljwMuڤTlnwMuڦTlrwMuڄTlvwMuڃTlzwMuچTl~wMuڇTlwMuڍTlwMuڌTlwMuڎTlwMuڈTlwMuژTlwMuڑTlwMuکTlwMuگTlwMuڳTlwMuڱTlwMuںTlwMuڻTlwMuۀTlwMuہTlwMuھTlwMuےTlwMuۓTlwVTlwXTlwMuڭTlwMuۇTlwMuۆTlwMuۈTlwMuۇٴTlwMuۋLdTlwMuۅTlwMuۉTlwMuېTlwMuىTlwMuئاTlwMuئەTlwMuئوTlwMuئۇTlwMuئۆTlwMuئۈTlwMuئېTlwMuئىTlwMuیTlwMuئجTlwMuئحTlwMuئمTlwMuئىTlwMuئيTlwMuبجTlwMuبحTlwMuبخTlwMuبمTlwMuبىTl
wMuبيTlwMuتجTlwMuتحTl
wMuتخTlwMuتمTlwMuتىTlwMuتيTlwMuثجTlwMuثمTlwMuثىTlwMuثيTlwMuجحTlwMuجمTlwMuحجTlwMuحمTlwMuخجTlwMuخحTlwMuخمTlwMuسجTlwMuسحTlwMuسخTlwMuسمTl wMuصحTl!wMuصمTl"wMuضجTl#wMuضحTl$wMuضخTl%wMuضمTl&wMuطحTl'wMuطمTl(wMuظمTl)wMuعجTl*wMuعمTl+wMuغجTl,wMuغمTl-wMuفجTl.wMuفحTl/wMuفخTl0wMuفمTl1wMuفىTl2wMuفيTl3wMuقحTl4wMuقمTl5wMuقىTl6wMuقيTl7wMuكاTl8wMuكجTl9wMuكحTl:wMuكخTl;wMuكلTl<wMuكمTl=wMuكىTl>wMuكيTl?wMuلجTl@wMuلحTlAwMuلخTlBwMuلمTlCwMuلىTlDwMuليTlEwMuمجTlFwMuمحTlGwMuمخTlHwMuممTlIwMuمىTlJwMuميTlKwMuنجTlLwMuنحTlMwMuنخTlNwMuنمTlOwMuنىTlPwMuنيTlQwMuهجTlRwMuهمTlSwMuهىTlTwMuهيTlUwMuيجTlVwMuيحLdTlWwMuيخTlXwMuيمTlYwMuيىTlZwMuييTl[wMuذٰTl\wMuرٰTl]wMuىٰTl^w3u ٌّTl_w3u ٍّTl`w3u َّTlaw3u ُّTlbw3u ِّTlcw3u ّٰTldwMuئرTlewMuئزTlfwMuئمTlgwMuئنTlhwMuئىTliwMuئيTljwMuبرTlkwMuبزTllwMuبمTlmwMuبنTlnwMuبىTlowMuبيTlpwMuترTlqwMuتزTlrwMuتمTlswMuتنTltwMuتىTluwMuتيTlvwMuثرTlwwMuثزTlxwMuثمTlywMuثنTlzwMuثىTl{wMuثيTl|wMuفىTl}wMuفيTl~wMuقىTlwMuقيTlwMuكاTlwMuكلTlwMuكمTlwMuكىTlwMuكيTlwMuلمTlwMuلىTlwMuليTlwMuماTlwMuممTlwMuنرTlwMuنزTlwMuنمTlwMuننTlwMuنىTlwMuنيTlwMuىٰTlwMuيرTlwMuيزTlwMuيمTlwMuينTlwMuيىTlwMuييTlwMuئجTlwMuئحTlwMuئخTlwMuئمTlwMuئهTlwMuبجTlwMuبحTlwMuبخTlwMuبمTlwMuبهTlwMuتجTlwMuتحTlwMuتخTlwMuتمTlwMuتهTlwMuثمTlwMuجحTlwMuجمTlwMuحجTlwMuحمTlwMuخجTlwMuخمTlwMuسجTlwMuسحTlwMuسخTlwMuسمTlwMuصحTlwMuصخTlwMuصمTlwMuضجTlwMuضحTlwMuضخTlwMuضمTlwMuطحTlwMuظمTlwMuعجLdTlwMuعمTlwMuغجTlwMuغمTlwMuفجTlwMuفحTlwMuفخTlwMuفمTlwMuقحTlwMuقمTlwMuكجTlwMuكحTlwMuكخTlwMuكلTlwMuكمTlwMuلجTlwMuلحTlwMuلخTlwMuلمTlwMuلهTlwMuمجTlwMuمحTlwMuمخTlwMuممTlwMuنجTlwMuنحTlwMuنخTlwMuنمTlwMuنهTlwMuهجTlwMuهمTlwMuهٰTlwMuيجTlwMuيحTlwMuيخTlwMuيمTlwMuيهTlwMuئمTlwMuئهTlwMuبمTlwMuبهTlwMuتمTlwMuتهTlwMuثمTlwMuثهTlwMuسمTlwMuسهTlwMuشمTlwMuشهTlwMuكلTlwMuكمTlwMuلمTlwMuنمTlwMuنهTlwMuيمTlwMuيهTlwMuـَّTlwMuـُّTlwMuـِّTlwMuطىTlwMuطيTlwMuعىTlwMuعيTlwMuغىTlwMuغيTlwMuسىTlwMuسيTlwMuشىTlwMuشيTlwMuحىTlwMuحيTlwMuجىTlwMuجيTlwMuخىTlwMuخيTlwMuصىTlwMuصيTlwMuضىTlwMuضيTlwMuشجTl
wMuشحTlwMuشخTlwMuشمTl
wMuشرTlwMuسرTlwMuصرTlwMuضرTlwMuطىTlwMuطيTlwMuعىTlwMuعيTlwMuغىTlwMuغيTlwMuسىTlwMuسيTlwMuشىTlwMuشيTlwMuحىTlwMuحيTlwMuجىTlwMuجيLdTlwMuخىTl wMuخيTl!wMuصىTl"wMuصيTl#wMuضىTl$wMuضيTl%wMuشجTl&wMuشحTl'wMuشخTl(wMuشمTl)wMuشرTl*wMuسرTl+wMuصرTl,wMuضرTl-wMuشجTl.wMuشحTl/wMuشخTl0wMuشمTl1wMuسهTl2wMuشهTl3wMuطمTl4wMuسجTl5wMuسحTl6wMuسخTl7wMuشجTl8wMuشحTl9wMuشخTl:wMuطمTl;wMuظمTl<wMuاًTl>wVTlPwMuتجمTlQwMuتحجTlSwMuتحمTlTwMuتخمTlUwMuتمجTlVwMuتمحTlWwMuتمخTlXwMuجمحTlZwMuحميTl[wMuحمىTl\wMuسحجTl]wMuسجحTl^wMuسجىTl_wMuسمحTlawMuسمجTlbwMuسممTldwMuصححTlfwMuصممTlgwMuشحمTliwMuشجيTljwMuشمخTllwMuشممTlnwMuضحىTlowMuضخمTlqwMuطمحTlswMuطممTltwMuطميTluwMuعجمTlvwMuعممTlxwMuعمىTlywMuغممTlzwMuغميTl{wMuغمىTl|wMuفخمTl~wMuقمحTlwMuقممTlwMuلحمTlwMuلحيTlwMuلحىTlwMuلججTlwMuلخمTlwMuلمحTlwMuمحجTlwMuمحمTlwMuمحيTlwMuمجحTlwMuمجمTlwMuمخجTlwMuمخمTlwXTlwMuمجخTlwMuهمجTlwMuهممTlwMuنحمTlwMuنحىTlwMuنجمTlwMuنجىTlwMuنميTlwMuنمىTlwMuيممTlwMuبخيTlwMuتجيTlwMuتجىTlwMuتخيTlwMuتخىTlwMuتميTlwMuتمىTlwMuجميTlwMuجحىLdTlwMuجمىTlwMuسخىTlwMuصحيTlwMuشحيTlwMuضحيTlwMuلجيTlwMuلميTlwMuيحيTlwMuيجيTlwMuيميTlwMuمميTlwMuقميTlwMuنحيTlwMuقمحTlwMuلحمTlwMuعميTlwMuكميTlwMuنجحTlwMuمخيTlwMuلجمTlwMuكممTlwMuلجمTlwMuنجحTlwMuجحيTlwMuحجيTlwMuمجيTlwMuفميTlwMuبحيTlwMuكممTlwMuعجمTlwMuصممTlwMuسخيTlwMuنجيTlwXTlwVTlwXTlwMuصلےTlwMuقلےTlwMuاللهTlwMuاكبرTlwMuمحمدTlwMuصلعمTlwMuرسولTlwMuعليهTlwMuوسلمTlwMuصلىTlw3uصلى الله عليه وسلمTlw3uجل جلالهTlwMuریالTlwVTlwITlw3w,TlwMu、TlwXTlw3w:Tlw3w;Tlw3w!Tlw3w?TlwMu〖TlwMu〗TlwXTl wVTl0wXTl1wMu—Tl2wMu–Tl3w3w_Tl5w3w(Tl6w3w)Tl7w3w{Tl8w3w}Tl9wMu〔Tl:wMu〕Tl;wMu【Tl<wMu】Tl=wMu《Tl>wMu》Tl?wMu〈Tl@wMu〉TlAwMu「TlBwMu」TlCwMu『TlDwMu』TlEwVTlGw3w[TlHw3w]TlIw3u ̅TlMw3w_TlPw3w,TlQwMu、TlRwXTlTw3w;TlUw3w:TlVw3w?TlWw3w!TlXwMu—TlYw3w(TlZw3w)Tl[w3w{Tl\w3w}Tl]wMu〔LdTl^wMu〕Tl_w3w#Tl`w3w&Tlaw3w*Tlbw3w+TlcwMw-Tldw3w<Tlew3w>Tlfw3w=TlgwXTlhw3w\Tliw3w$Tljw3w%Tlkw3w@TllwXTlpw3u ًTlqwMuـًTlrw3u ٌTlswVTltw3u ٍTluwXTlvw3u َTlwwMuـَTlxw3u ُTlywMuـُTlzw3u ِTl{wMuـِTl|w3u ّTl}wMuـّTl~w3u ْTlwMuـْTlwMuءTlwMuآTlwMuأTlwMuؤTlwMuإTlwMuئTlwMuاTlwMuبTlwMuةTlwMuتTlwMuثTlwMuجTlwMuحTlwMuخTlwMuدTlwMuذTlwMuرTlwMuزTlwMuسTlwMuشTlwMuصTlwMuضTlwMuطTlwMuظTlwMuعTlwMuغTlwMuفTlwMuقTlwMuكTlwMuلTlwMuمTlwMuنTlwMuهTlwMuوTlwMuىTlwMuيTlwMuلآTlwMuلأTlwMuلإTlwMuلاTlwXTlwITlwXTlw3w!Tlw3w"Tlw3w#Tlw3w$Tlw3w%Tlw3w&Tlw3w'Tlw3w(Tlw3w)Tl
w3w*Tlw3w+Tlw3w,Tl
wMw-TlwMw.Tlw3w/TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9Tlw3w:LdTlw3w;Tlw3w<Tlw3w=Tlw3w>Tlw3w?Tl w3w@Tl!wMwaTl"wMwbTl#wMwcTl$wMwdTl%wMweTl&wMwfTl'wMwgTl(wMwhTl)wMwiTl*wMwjTl+wMwkTl,wMwlTl-wMwmTl.wMwnTl/wMwoTl0wMwpTl1wMwqTl2wMwrTl3wMwsTl4wMwtTl5wMwuTl6wMwvTl7wMwwTl8wMwxTl9wMwyTl:wMwzTl;w3w[Tl<w3w\Tl=w3w]Tl>w3w^Tl?w3w_Tl@w3w`TlAwMwaTlBwMwbTlCwMwcTlDwMwdTlEwMweTlFwMwfTlGwMwgTlHwMwhTlIwMwiTlJwMwjTlKwMwkTlLwMwlTlMwMwmTlNwMwnTlOwMwoTlPwMwpTlQwMwqTlRwMwrTlSwMwsTlTwMwtTlUwMwuTlVwMwvTlWwMwwTlXwMwxTlYwMwyTlZwMwzTl[w3w{Tl\w3w|Tl]w3w}Tl^w3w~Tl_wMu⦅Tl`wMu⦆TlawMw.TlbwMu「TlcwMu」TldwMu、TlewMu・TlfwMuヲTlgwMuァTlhwMuィTliwMuゥTljwMuェTlkwMuォTllwMuャTlmwMuュTlnwMuョTlowMuッTlpwMuーTlqwMuアTlrwMuイTlswMuウTltwMuエTluwMuオTlvwMuカTlwwMuキTlxwMuクTlywMuケTlzwMuコTl{wMuサTl|wMuシTl}wMuスTl~wMuセLdTlwMuソTlwMuタTlwMuチTlwMuツTlwMuテTlwMuトTlwMuナTlwMuニTlwMuヌTlwMuネTlwMuノTlwMuハTlwMuヒTlwMuフTlwMuヘTlwMuホTlwMuマTlwMuミTlwMuムTlwMuメTlwMuモTlwMuヤTlwMuユTlwMuヨTlwMuラTlwMuリTlwMuルTlwMuレTlwMuロTlwMuワTlwMuンTlwMu゙TlwMu゚TlwXTlwMuᄀTlwMuᄁTlwMuᆪTlwMuᄂTlwMuᆬTlwMuᆭTlwMuᄃTlwMuᄄTlwMuᄅTlwMuᆰTlwMuᆱTlwMuᆲTlwMuᆳTlwMuᆴTlwMuᆵTlwMuᄚTlwMuᄆTlwMuᄇTlwMuᄈTlwMuᄡTlwMuᄉTlwMuᄊTlwMuᄋTlwMuᄌTlwMuᄍTlwMuᄎTlwMuᄏTlwMuᄐTlwMuᄑTlwMuᄒTlwXTlwMuᅡTlwMuᅢTlwMuᅣTlwMuᅤTlwMuᅥTlwMuᅦTlwXTlwMuᅧTlwMuᅨTlwMuᅩTlwMuᅪTlwMuᅫTlwMuᅬTlwXTlwMuᅭTlwMuᅮTlwMuᅯTlwMuᅰTlwMuᅱTlwMuᅲTlwXTlwMuᅳTlwMuᅴTlwMuᅵTlwXTlwMu¢TlwMu£TlwMu¬Tlw3u ̄TlwMu¦TlwMu¥TlwMu₩TlwXTlwMu│TlwMu←LdTlwMu↑TlwMu→TlwMu↓TlwMu■TlwMu○TlwXTlwVTlwXTl
wVTl'wXTl(wVTl;wXTl<wVTl>wXTl?wVTlNwXTlPwVTl^wXTlwVTlwXTlwVTlwXTlwVTl4wXTl7wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl$wXTl-wVTlKwXTlPwVTl{wXTlwVTlwXTlwVTlwXTlwVTlwXTlwMu𐐨TlwMu𐐩TlwMu𐐪TlwMu𐐫TlwMu𐐬TlwMu𐐭TlwMu𐐮TlwMu𐐯TlwMu𐐰TlwMu𐐱Tl
wMu𐐲TlwMu𐐳TlwMu𐐴Tl
wMu𐐵TlwMu𐐶TlwMu𐐷TlwMu𐐸TlwMu𐐹TlwMu𐐺TlwMu𐐻TlwMu𐐼TlwMu𐐽TlwMu𐐾TlwMu𐐿TlwMu𐑀TlwMu𐑁TlwMu𐑂TlwMu𐑃TlwMu𐑄TlwMu𐑅TlwMu𐑆TlwMu𐑇Tl wMu𐑈Tl!wMu𐑉Tl"wMu𐑊Tl#wMu𐑋Tl$wMu𐑌Tl%wMu𐑍Tl&wMu𐑎Tl'wMu𐑏Tl(wVTlwXTlwVTlwXTlwMu𐓘TlwMu𐓙TlwMu𐓚TlwMu𐓛TlwMu𐓜TlwMu𐓝LdTlwMu𐓞TlwMu𐓟TlwMu𐓠TlwMu𐓡TlwMu𐓢TlwMu𐓣TlwMu𐓤TlwMu𐓥TlwMu𐓦TlwMu𐓧TlwMu𐓨TlwMu𐓩TlwMu𐓪TlwMu𐓫TlwMu𐓬TlwMu𐓭TlwMu𐓮TlwMu𐓯TlwMu𐓰TlwMu𐓱TlwMu𐓲TlwMu𐓳TlwMu𐓴TlwMu𐓵TlwMu𐓶TlwMu𐓷TlwMu𐓸TlwMu𐓹TlwMu𐓺TlwMu𐓻TlwXTlwVTlwXTlwVTl(wXTl0wVTldwXTlowVTlpwMu𐖗TlqwMu𐖘TlrwMu𐖙TlswMu𐖚TltwMu𐖛TluwMu𐖜TlvwMu𐖝TlwwMu𐖞TlxwMu𐖟TlywMu𐖠TlzwMu𐖡Tl{wXTl|wMu𐖣Tl}wMu𐖤Tl~wMu𐖥TlwMu𐖦TlwMu𐖧TlwMu𐖨TlwMu𐖩TlwMu𐖪TlwMu𐖫TlwMu𐖬TlwMu𐖭TlwMu𐖮TlwMu𐖯TlwMu𐖰TlwMu𐖱TlwXTlwMu𐖳TlwMu𐖴TlwMu𐖵TlwMu𐖶TlwMu𐖷TlwMu𐖸TlwMu𐖹TlwXTlwMu𐖻TlwMu𐖼TlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl7wXTl@wVTlVwXTl`wVTlhwXTlwVTlwMuːTlwMuˑTlwMuæTlwMuʙTlwMuɓTlwXTlwMuʣTlwMuꭦLdTlwMuʥTlwMuʤTlwMuɖTlwMuɗTlwMuᶑTlwMuɘTlwMuɞTlwMuʩTlwMuɤTlwMuɢTlwMuɠTlwMuʛTlwMuħTlwMuʜTlwMuɧTlwMuʄTlwMuʪTlwMuʫTlwMuɬTlwMu𝼄TlwMuꞎTlwMuɮTlwMu𝼅TlwMuʎTlwMu𝼆TlwMuøTlwMuɶTlwMuɷTlwMwqTlwMuɺTlwMu𝼈TlwMuɽTlwMuɾTlwMuʀTlwMuʨTlwMuʦTlwMuꭧTlwMuʧTlwMuʈTlwMuⱱTlwXTlwMuʏTlwMuʡTlwMuʢTlwMuʘTlwMuǀTlwMuǁTlwMuǂTlwMu𝼊TlwMu𝼞TlwXTlwVTlwXTlwVTlwXTl
wVTl6wXTl7wVTl9wXTl<wVTl=wXTl?wVTlVwXTlWwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl:wXTl?wVTl@wXTlwVTlwXTlwVTlwXTlwVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl6
wXTl8
wVTl;
wXTl?
wVTlI
wXTlP
wVTlY
wXTl`
wVTl
wXTl
wVLdTl
wXTl
wVTl
wXTlwVTl6wXTl9wVTlVwXTlXwVTlswXTlxwVTlwXTlwVTlwXTlwVTlwXTlwVTlIwXTlwMu𐳀TlwMu𐳁TlwMu𐳂TlwMu𐳃TlwMu𐳄TlwMu𐳅TlwMu𐳆TlwMu𐳇TlwMu𐳈TlwMu𐳉TlwMu𐳊TlwMu𐳋TlwMu𐳌TlwMu𐳍TlwMu𐳎TlwMu𐳏TlwMu𐳐TlwMu𐳑TlwMu𐳒TlwMu𐳓TlwMu𐳔TlwMu𐳕TlwMu𐳖TlwMu𐳗TlwMu𐳘TlwMu𐳙TlwMu𐳚TlwMu𐳛TlwMu𐳜TlwMu𐳝TlwMu𐳞TlwMu𐳟TlwMu𐳠TlwMu𐳡TlwMu𐳢TlwMu𐳣TlwMu𐳤TlwMu𐳥TlwMu𐳦TlwMu𐳧TlwMu𐳨TlwMu𐳩TlwMu𐳪TlwMu𐳫TlwMu𐳬TlwMu𐳭TlwMu𐳮TlwMu𐳯TlwMu𐳰TlwMu𐳱TlwMu𐳲TlwXTlwVTlwXTlwVTl(
wXTl0
wVTl:
wXTl`wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl(wXTl0wVTlZwXTlpwVTlwXTlwVTlwXTlwVTlwXTlwVTlNwXTlRwVTlvwXTlwVTlwXTlwVLdTlwXTlwVTlwXTlwVTlwXTlwVTl5wXTl6wVTlHwXTlPwVTlwwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlBwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl
wXTlwVTlwXTlwVTl)wXTl*wVTl1wXTl2wVTl4wXTl5wVTl:wXTl;wVTlEwXTlGwVTlIwXTlKwVTlNwXTlPwVTlQwXTlWwVTlXwXTl]wVTldwXTlfwVTlmwXTlpwVTluwXTlwVTl\wXTl]wVTlbwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlEwXTlPwVTlZwXTl`wVTlmwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl,wXTl0wVTlGwXTlwVTl<wXTlwMu𑣀TlwMu𑣁TlwMu𑣂TlwMu𑣃TlwMu𑣄TlwMu𑣅TlwMu𑣆LdTlwMu𑣇TlwMu𑣈TlwMu𑣉TlwMu𑣊TlwMu𑣋TlwMu𑣌TlwMu𑣍TlwMu𑣎TlwMu𑣏TlwMu𑣐TlwMu𑣑TlwMu𑣒TlwMu𑣓TlwMu𑣔TlwMu𑣕TlwMu𑣖TlwMu𑣗TlwMu𑣘TlwMu𑣙TlwMu𑣚TlwMu𑣛TlwMu𑣜TlwMu𑣝TlwMu𑣞TlwMu𑣟TlwVTlwXTlwVTlwXTlwVTl
wXTlwVTlwXTlwVTlwXTlwVTl6wXTl7wVTl9wXTl;wVTlGwXTlPwVTlZwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlHwXTlPwVTlwXTlwVTlwXTlwVTl
wXTlwVTlwXTl
wVTl7wXTl8wVTlFwXTlPwVTlmwXTlpwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl
wXTlwVTl7wXTl:wVTl;wXTl<wVTl>wXTl?wVTlHwXTlPwVTlZwXTl`wVTlfwXTlgwVTliwXTljwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVLdTlwXTlwVTl;wXTl>wVTlZwXTlwVTlwXTlwVTlwXTlwVTl#wXTl$wVTlo$wXTlp$wVTlu$wXTl$wVTlD%wXTl/wVTl/wXTl0wVTl04wXTl@4wVTlV4wXTlDwVTlGFwXTlhwVTl9jwXTl@jwVTl_jwXTl`jwVTljjwXTlnjwVTljwXTljwVTljwXTljwVTljwXTljwVTljwXTlkwVTlFkwXTlPkwVTlZkwXTl[kwVTlbkwXTlckwVTlxkwXTl}kwVTlkwXTl@nwMu𖹠TlAnwMu𖹡TlBnwMu𖹢TlCnwMu𖹣TlDnwMu𖹤TlEnwMu𖹥TlFnwMu𖹦TlGnwMu𖹧TlHnwMu𖹨TlInwMu𖹩TlJnwMu𖹪TlKnwMu𖹫TlLnwMu𖹬TlMnwMu𖹭TlNnwMu𖹮TlOnwMu𖹯TlPnwMu𖹰TlQnwMu𖹱TlRnwMu𖹲TlSnwMu𖹳TlTnwMu𖹴TlUnwMu𖹵TlVnwMu𖹶TlWnwMu𖹷TlXnwMu𖹸TlYnwMu𖹹TlZnwMu𖹺Tl[nwMu𖹻Tl\nwMu𖹼Tl]nwMu𖹽Tl^nwMu𖹾Tl_nwMu𖹿Tl`nwVTlnwXTlowVTlKowXTlOowVTlowXTlowVTlowXTlowVTlowXTlowVTlowXTlpwVTlwXTlwVTl֌wXTlwVTlwXTlwVLdTlwXTlwVTlwXTlwVTlwXTlwVTl#wXTl2wVTl3wXTlPwVTlSwXTlUwVTlVwXTldwVTlhwXTlpwVTlwXTlwVTlkwXTlpwVTl}wXTlwVTlwXTlwVTlwXTlwVTlwITlwXTlwVTl.wXTl0wVTlGwXTlPwVTlwXTlwVTlwXTlwVTl'wXTl)wVTl^wMu𝅗𝅥Tl_wMu𝅘𝅥Tl`wMu𝅘𝅥𝅮TlawMu𝅘𝅥𝅯TlbwMu𝅘𝅥𝅰TlcwMu𝅘𝅥𝅱TldwMu𝅘𝅥𝅲TlewVTlswXTl{wVTlwMu𝆹𝅥TlwMu𝆺𝅥TlwMu𝆹𝅥𝅮TlwMu𝆺𝅥𝅮TlwMu𝆹𝅥𝅯TlwMu𝆺𝅥𝅯TlwVTlwXTlwVTlFwXTlwVTlwXTlwVTlwXTlwVTlWwXTl`wVTlywXTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTl
wMwkTlwMwlTlwMwmTl
wMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTl wMwgLdTl!wMwhTl"wMwiTl#wMwjTl$wMwkTl%wMwlTl&wMwmTl'wMwnTl(wMwoTl)wMwpTl*wMwqTl+wMwrTl,wMwsTl-wMwtTl.wMwuTl/wMwvTl0wMwwTl1wMwxTl2wMwyTl3wMwzTl4wMwaTl5wMwbTl6wMwcTl7wMwdTl8wMweTl9wMwfTl:wMwgTl;wMwhTl<wMwiTl=wMwjTl>wMwkTl?wMwlTl@wMwmTlAwMwnTlBwMwoTlCwMwpTlDwMwqTlEwMwrTlFwMwsTlGwMwtTlHwMwuTlIwMwvTlJwMwwTlKwMwxTlLwMwyTlMwMwzTlNwMwaTlOwMwbTlPwMwcTlQwMwdTlRwMweTlSwMwfTlTwMwgTlUwXTlVwMwiTlWwMwjTlXwMwkTlYwMwlTlZwMwmTl[wMwnTl\wMwoTl]wMwpTl^wMwqTl_wMwrTl`wMwsTlawMwtTlbwMwuTlcwMwvTldwMwwTlewMwxTlfwMwyTlgwMwzTlhwMwaTliwMwbTljwMwcTlkwMwdTllwMweTlmwMwfTlnwMwgTlowMwhTlpwMwiTlqwMwjTlrwMwkTlswMwlTltwMwmTluwMwnTlvwMwoTlwwMwpTlxwMwqTlywMwrTlzwMwsTl{wMwtTl|wMwuTl}wMwvTl~wMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcLdTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwXTlwMwcTlwMwdTlwXTlwMwgTlwXTlwMwjTlwMwkTlwXTlwMwnTlwMwoTlwMwpTlwMwqTlwXTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwXTlwMwfTlwXTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwXTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbLdTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwXTlwMwdTlwMweTlwMwfTl
wMwgTlwXTl
wMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwXTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwXTlwMwaTlwMwbTl wMwcTl!wMwdTl"wMweTl#wMwfTl$wMwgTl%wMwhTl&wMwiTl'wMwjTl(wMwkTl)wMwlTl*wMwmTl+wMwnTl,wMwoTl-wMwpTl.wMwqTl/wMwrTl0wMwsTl1wMwtTl2wMwuTl3wMwvTl4wMwwTl5wMwxTl6wMwyTl7wMwzTl8wMwaTl9wMwbTl:wXTl;wMwdTl<wMweTl=wMwfTl>wMwgTl?wXTl@wMwiTlAwMwjTlBwMwkTlCwMwlTlDwMwmTlEwXTlFwMwoTlGwXTlJwMwsTlKwMwtTlLwMwuTlMwMwvTlNwMwwTlOwMwxTlPwMwyTlQwXTlRwMwaLdTlSwMwbTlTwMwcTlUwMwdTlVwMweTlWwMwfTlXwMwgTlYwMwhTlZwMwiTl[wMwjTl\wMwkTl]wMwlTl^wMwmTl_wMwnTl`wMwoTlawMwpTlbwMwqTlcwMwrTldwMwsTlewMwtTlfwMwuTlgwMwvTlhwMwwTliwMwxTljwMwyTlkwMwzTllwMwaTlmwMwbTlnwMwcTlowMwdTlpwMweTlqwMwfTlrwMwgTlswMwhTltwMwiTluwMwjTlvwMwkTlwwMwlTlxwMwmTlywMwnTlzwMwoTl{wMwpTl|wMwqTl}wMwrTl~wMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwLdTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTl
wMwcTlwMwdTlwMweTl
wMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsLdTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTl wMwyTl!wMwzTl"wMwaTl#wMwbTl$wMwcTl%wMwdTl&wMweTl'wMwfTl(wMwgTl)wMwhTl*wMwiTl+wMwjTl,wMwkTl-wMwlTl.wMwmTl/wMwnTl0wMwoTl1wMwpTl2wMwqTl3wMwrTl4wMwsTl5wMwtTl6wMwuTl7wMwvTl8wMwwTl9wMwxTl:wMwyTl;wMwzTl<wMwaTl=wMwbTl>wMwcTl?wMwdTl@wMweTlAwMwfTlBwMwgTlCwMwhTlDwMwiTlEwMwjTlFwMwkTlGwMwlTlHwMwmTlIwMwnTlJwMwoTlKwMwpTlLwMwqTlMwMwrTlNwMwsTlOwMwtTlPwMwuTlQwMwvTlRwMwwTlSwMwxTlTwMwyTlUwMwzTlVwMwaTlWwMwbTlXwMwcTlYwMwdTlZwMweTl[wMwfTl\wMwgTl]wMwhTl^wMwiTl_wMwjTl`wMwkTlawMwlTlbwMwmTlcwMwnTldwMwoTlewMwpTlfwMwqTlgwMwrTlhwMwsTliwMwtTljwMwuTlkwMwvTllwMwwTlmwMwxTlnwMwyTlowMwzTlpwMwaTlqwMwbTlrwMwcTlswMwdTltwMweTluwMwfTlvwMwgTlwwMwhTlxwMwiTlywMwjTlzwMwkTl{wMwlTl|wMwmTl}wMwnTl~wMwoLdTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMuıTlwMuȷTlwXTlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuθTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∇TlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∂TlwMuεTlwMuθTlwMuκTlwMuφTlwMuρTlwMuπTlwMuαTlwMuβTlwMuγLdTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuθTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∇TlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTl
wMuοTlwMuπTlwMuρTl
wMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∂TlwMuεTlwMuθTlwMuκTlwMuφTlwMuρTlwMuπTlwMuαTlwMuβTlwMuγTlwMuδTl wMuεTl!wMuζTl"wMuηTl#wMuθTl$wMuιTl%wMuκTl&wMuλTl'wMuμTl(wMuνTl)wMuξTl*wMuοTl+wMuπTl,wMuρTl-wMuθTl.wMuσTl/wMuτTl0wMuυTl1wMuφTl2wMuχTl3wMuψTl4wMuωTl5wMu∇Tl6wMuαTl7wMuβTl8wMuγTl9wMuδTl:wMuεTl;wMuζTl<wMuηTl=wMuθTl>wMuιTl?wMuκTl@wMuλTlAwMuμTlBwMuνTlCwMuξTlDwMuοTlEwMuπTlFwMuρTlGwMuσTlIwMuτTlJwMuυLdTlKwMuφTlLwMuχTlMwMuψTlNwMuωTlOwMu∂TlPwMuεTlQwMuθTlRwMuκTlSwMuφTlTwMuρTlUwMuπTlVwMuαTlWwMuβTlXwMuγTlYwMuδTlZwMuεTl[wMuζTl\wMuηTl]wMuθTl^wMuιTl_wMuκTl`wMuλTlawMuμTlbwMuνTlcwMuξTldwMuοTlewMuπTlfwMuρTlgwMuθTlhwMuσTliwMuτTljwMuυTlkwMuφTllwMuχTlmwMuψTlnwMuωTlowMu∇TlpwMuαTlqwMuβTlrwMuγTlswMuδTltwMuεTluwMuζTlvwMuηTlwwMuθTlxwMuιTlywMuκTlzwMuλTl{wMuμTl|wMuνTl}wMuξTl~wMuοTlwMuπTlwMuρTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∂TlwMuεTlwMuθTlwMuκTlwMuφTlwMuρTlwMuπTlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuθTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∇TlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζLdTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∂TlwMuεTlwMuθTlwMuκTlwMuφTlwMuρTlwMuπTlwMuϝTlwXTlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTl%wVTl+wXTlwVTlwXTlwVTlwXTlwVTl"wXTl#wVTl%wXTl&wVTl+wXTl0wMuаTl1wMuбTl2wMuвLdTl3wMuгTl4wMuдTl5wMuеTl6wMuжTl7wMuзTl8wMuиTl9wMuкTl:wMuлTl;wMuмTl<wMuоTl=wMuпTl>wMuрTl?wMuсTl@wMuтTlAwMuуTlBwMuфTlCwMuхTlDwMuцTlEwMuчTlFwMuшTlGwMuыTlHwMuэTlIwMuюTlJwMuꚉTlKwMuәTlLwMuіTlMwMuјTlNwMuөTlOwMuүTlPwMuӏTlQwMuаTlRwMuбTlSwMuвTlTwMuгTlUwMuдTlVwMuеTlWwMuжTlXwMuзTlYwMuиTlZwMuкTl[wMuлTl\wMuоTl]wMuпTl^wMuсTl_wMuуTl`wMuфTlawMuхTlbwMuцTlcwMuчTldwMuшTlewMuъTlfwMuыTlgwMuґTlhwMuіTliwMuѕTljwMuџTlkwMuҫTllwMuꙑTlmwMuұTlnwXTlwVTlwXTlwVTl-wXTl0wVTl>wXTl@wVTlJwXTlNwVTlPwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMu𞤢TlwMu𞤣TlwMu𞤤TlwMu𞤥TlwMu𞤦TlwMu𞤧TlwMu𞤨TlwMu𞤩TlwMu𞤪TlwMu𞤫LdTl
wMu𞤬TlwMu𞤭TlwMu𞤮Tl
wMu𞤯TlwMu𞤰TlwMu𞤱TlwMu𞤲TlwMu𞤳TlwMu𞤴TlwMu𞤵TlwMu𞤶TlwMu𞤷TlwMu𞤸TlwMu𞤹TlwMu𞤺TlwMu𞤻TlwMu𞤼TlwMu𞤽TlwMu𞤾TlwMu𞤿TlwMu𞥀TlwMu𞥁Tl wMu𞥂Tl!wMu𞥃Tl"wVTlLwXTlPwVTlZwXTl^wVTl`wXTlqwVTlwXTlwVTl>wXTlwMuاTlwMuبTlwMuجTlwMuدTlwXTlwMuوTlwMuزTlwMuحTlwMuطTlwMuيTl
wMuكTlwMuلTlwMuمTl
wMuنTlwMuسTlwMuعTlwMuفTlwMuصTlwMuقTlwMuرTlwMuشTlwMuتTlwMuثTlwMuخTlwMuذTlwMuضTlwMuظTlwMuغTlwMuٮTlwMuںTlwMuڡTlwMuٯTl wXTl!wMuبTl"wMuجTl#wXTl$wMuهTl%wXTl'wMuحTl(wXTl)wMuيTl*wMuكTl+wMuلTl,wMuمTl-wMuنTl.wMuسTl/wMuعTl0wMuفTl1wMuصTl2wMuقTl3wXTl4wMuشTl5wMuتTl6wMuثTl7wMuخTl8wXTl9wMuضTl:wXTl;wMuغTl<wXTlBwMuجTlCwXTlGwMuحTlHwXTlIwMuيTlJwXLdTlKwMuلTlLwXTlMwMuنTlNwMuسTlOwMuعTlPwXTlQwMuصTlRwMuقTlSwXTlTwMuشTlUwXTlWwMuخTlXwXTlYwMuضTlZwXTl[wMuغTl\wXTl]wMuںTl^wXTl_wMuٯTl`wXTlawMuبTlbwMuجTlcwXTldwMuهTlewXTlgwMuحTlhwMuطTliwMuيTljwMuكTlkwXTllwMuمTlmwMuنTlnwMuسTlowMuعTlpwMuفTlqwMuصTlrwMuقTlswXTltwMuشTluwMuتTlvwMuثTlwwMuخTlxwXTlywMuضTlzwMuظTl{wMuغTl|wMuٮTl}wXTl~wMuڡTlwXTlwMuاTlwMuبTlwMuجTlwMuدTlwMuهTlwMuوTlwMuزTlwMuحTlwMuطTlwMuيTlwXTlwMuلTlwMuمTlwMuنTlwMuسTlwMuعTlwMuفTlwMuصTlwMuقTlwMuرTlwMuشTlwMuتTlwMuثTlwMuخTlwMuذTlwMuضTlwMuظTlwMuغTlwXTlwMuبTlwMuجTlwMuدTlwXTlwMuوTlwMuزTlwMuحTlwMuطTlwMuيTlwXTlwMuلTlwMuمTlwMuنTlwMuسTlwMuعTlwMuفTlwMuصTlwMuقTlwMuرTlwMuشLdTlwMuتTlwMuثTlwMuخTlwMuذTlwMuضTlwMuظTlwMuغTlwXTlwVTlwXTlwVTl,wXTl0wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlw3u0,Tlw3u1,Tlw3u2,Tlw3u3,Tlw3u4,Tlw3u5,Tlw3u6,Tlw3u7,Tlw3u8,Tl
w3u9,TlwVTlw3u(a)Tlw3u(b)Tlw3u(c)Tlw3u(d)Tlw3u(e)Tlw3u(f)Tlw3u(g)Tlw3u(h)Tlw3u(i)Tlw3u(j)Tlw3u(k)Tlw3u(l)Tlw3u(m)Tlw3u(n)Tlw3u(o)Tlw3u(p)Tl w3u(q)Tl!w3u(r)Tl"w3u(s)Tl#w3u(t)Tl$w3u(u)Tl%w3u(v)Tl&w3u(w)Tl'w3u(x)Tl(w3u(y)Tl)w3u(z)Tl*wMu〔s〕Tl+wMwcTl,wMwrTl-wMacdTl.wMawzTl/wVTl0wMwaTl1wMwbTl2wMwcTl3wMwdTl4wMweTl5wMwfTl6wMwgTl7wMwhTl8wMwiTl9wMwjTl:wMwkTl;wMwlTl<wMwmTl=wMwnTl>wMwoTl?wMwpTl@wMwqTlAwMwrTlBwMwsTlCwMwtTlDwMwuTlEwMwvTlFwMwwTlGwMwxTlHwMwyTlIwMwzTlJwMahvTlKwMamvTlLwMasdTlMwMassTlNwMappvTlOwMawcTlPwVTljwMamcTlkwMamdLdTllwMamrTlmwVTlwMadjTlwVTlwXTlwVTlwMuほかTlwMuココTlwMuサTlwXTlwMu手TlwMu字TlwMu双TlwMuデTlwMu二TlwMu多TlwMu解TlwMu天TlwMu交TlwMu映TlwMu無TlwMu料TlwMu前TlwMu後TlwMu再TlwMu新Tl wMu初Tl!wMu終Tl"wMu生Tl#wMu販Tl$wMu声Tl%wMu吹Tl&wMu演Tl'wMu投Tl(wMu捕Tl)wMu一Tl*wMu三Tl+wMu遊Tl,wMu左Tl-wMu中Tl.wMu右Tl/wMu指Tl0wMu走Tl1wMu打Tl2wMu禁Tl3wMu空Tl4wMu合Tl5wMu満Tl6wMu有Tl7wMu月Tl8wMu申Tl9wMu割Tl:wMu営Tl;wMu配Tl<wXTl@wMu〔本〕TlAwMu〔三〕TlBwMu〔二〕TlCwMu〔安〕TlDwMu〔点〕TlEwMu〔打〕TlFwMu〔盗〕TlGwMu〔勝〕TlHwMu〔敗〕TlIwXTlPwMu得TlQwMu可TlRwXTl`wVTlfwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwwXTl{wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlHwXTlPwVTlZwXTl`wVTlwXTlwVTlwXTlwVTlwXTlwVTlTwXTl`wVTlnwXLdTlpwVTl}wXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwXTlwVTlwXTlwVTl:wXTl@wVTlwXTl wVTlwXTlwVTlwXTlwMu丽TlwMu丸TlwMu乁TlwMu𠄢TlwMu你TlwMu侮TlwMu侻TlwMu倂TlwMu偺TlwMu備Tl
wMu僧TlwMu像TlwMu㒞Tl
wMu𠘺TlwMu免TlwMu兔TlwMu兤TlwMu具TlwMu𠔜TlwMu㒹TlwMu內TlwMu再TlwMu𠕋TlwMu冗TlwMu冤TlwMu仌TlwMu冬TlwMu况TlwMu𩇟TlwMu凵TlwMu刃TlwMu㓟Tl wMu刻Tl!wMu剆Tl"wMu割Tl#wMu剷Tl$wMu㔕Tl%wMu勇Tl&wMu勉Tl'wMu勤Tl(wMu勺Tl)wMu包Tl*wMu匆Tl+wMu北Tl,wMu卉Tl-wMu卑Tl.wMu博Tl/wMu即Tl0wMu卽Tl1wMu卿Tl4wMu𠨬Tl5wMu灰Tl6wMu及Tl7wMu叟Tl8wMu𠭣Tl9wMu叫Tl:wMu叱Tl;wMu吆Tl<wMu咞Tl=wMu吸Tl>wMu呈LdTl?wMu周Tl@wMu咢TlAwMu哶TlBwMu唐TlCwMu啓TlDwMu啣TlEwMu善TlGwMu喙TlHwMu喫TlIwMu喳TlJwMu嗂TlKwMu圖TlLwMu嘆TlMwMu圗TlNwMu噑TlOwMu噴TlPwMu切TlQwMu壮TlRwMu城TlSwMu埴TlTwMu堍TlUwMu型TlVwMu堲TlWwMu報TlXwMu墬TlYwMu𡓤TlZwMu売Tl[wMu壷Tl\wMu夆Tl]wMu多Tl^wMu夢Tl_wMu奢Tl`wMu𡚨TlawMu𡛪TlbwMu姬TlcwMu娛TldwMu娧TlewMu姘TlfwMu婦TlgwMu㛮TlhwXTliwMu嬈TljwMu嬾TllwMu𡧈TlmwMu寃TlnwMu寘TlowMu寧TlpwMu寳TlqwMu𡬘TlrwMu寿TlswMu将TltwXTluwMu尢TlvwMu㞁TlwwMu屠TlxwMu屮TlywMu峀TlzwMu岍Tl{wMu𡷤Tl|wMu嵃Tl}wMu𡷦Tl~wMu嵮TlwMu嵫TlwMu嵼TlwMu巡TlwMu巢TlwMu㠯TlwMu巽TlwMu帨TlwMu帽TlwMu幩TlwMu㡢TlwMu𢆃TlwMu㡼TlwMu庰TlwMu庳TlwMu庶TlwMu廊TlwMu𪎒TlwMu廾TlwMu𢌱TlwMu舁TlwMu弢TlwMu㣇TlwMu𣊸TlwMu𦇚TlwMu形TlwMu彫TlwMu㣣TlwMu徚TlwMu忍TlwMu志TlwMu忹TlwMu悁TlwMu㤺TlwMu㤜TlwMu悔TlwMu𢛔TlwMu惇TlwMu慈LdTlwMu慌TlwMu慎TlwMu慌TlwMu慺TlwMu憎TlwMu憲TlwMu憤TlwMu憯TlwMu懞TlwMu懲TlwMu懶TlwMu成TlwMu戛TlwMu扝TlwMu抱TlwMu拔TlwMu捐TlwMu𢬌TlwMu挽TlwMu拼TlwMu捨TlwMu掃TlwMu揤TlwMu𢯱TlwMu搢TlwMu揅TlwMu掩TlwMu㨮TlwMu摩TlwMu摾TlwMu撝TlwMu摷TlwMu㩬TlwMu敏TlwMu敬TlwMu𣀊TlwMu旣TlwMu書TlwMu晉TlwMu㬙TlwMu暑TlwMu㬈TlwMu㫤TlwMu冒TlwMu冕TlwMu最TlwMu暜TlwMu肭TlwMu䏙TlwMu朗TlwMu望TlwMu朡TlwMu杞TlwMu杓TlwMu𣏃TlwMu㭉TlwMu柺TlwMu枅TlwMu桒TlwMu梅TlwMu𣑭TlwMu梎TlwMu栟TlwMu椔TlwMu㮝TlwMu楂TlwMu榣TlwMu槪TlwMu檨TlwMu𣚣TlwMu櫛TlwMu㰘TlwMu次TlwMu𣢧TlwMu歔TlwMu㱎TlwMu歲TlwMu殟TlwMu殺TlwMu殻TlwMu𣪍TlwMu𡴋TlwMu𣫺TlwMu汎TlwMu𣲼TlwMu沿TlwMu泍TlwMu汧TlwMu洖TlwMu派TlwMu海TlwMu流TlwMu浩TlwMu浸TlwMu涅TlwMu𣴞TlwMu洴TlwMu港TlwMu湮Tl
wMu㴳LdTlwMu滋TlwMu滇Tl
wMu𣻑TlwMu淹TlwMu潮TlwMu𣽞TlwMu𣾎TlwMu濆TlwMu瀹TlwMu瀞TlwMu瀛TlwMu㶖TlwMu灊TlwMu災TlwMu灷TlwMu炭TlwMu𠔥TlwMu煅TlwMu𤉣TlwMu熜TlwXTl wMu爨Tl!wMu爵Tl"wMu牐Tl#wMu𤘈Tl$wMu犀Tl%wMu犕Tl&wMu𤜵Tl'wMu𤠔Tl(wMu獺Tl)wMu王Tl*wMu㺬Tl+wMu玥Tl,wMu㺸Tl.wMu瑇Tl/wMu瑜Tl0wMu瑱Tl1wMu璅Tl2wMu瓊Tl3wMu㼛Tl4wMu甤Tl5wMu𤰶Tl6wMu甾Tl7wMu𤲒Tl8wMu異Tl9wMu𢆟Tl:wMu瘐Tl;wMu𤾡Tl<wMu𤾸Tl=wMu𥁄Tl>wMu㿼Tl?wMu䀈Tl@wMu直TlAwMu𥃳TlBwMu𥃲TlCwMu𥄙TlDwMu𥄳TlEwMu眞TlFwMu真TlHwMu睊TlIwMu䀹TlJwMu瞋TlKwMu䁆TlLwMu䂖TlMwMu𥐝TlNwMu硎TlOwMu碌TlPwMu磌TlQwMu䃣TlRwMu𥘦TlSwMu祖TlTwMu𥚚TlUwMu𥛅TlVwMu福TlWwMu秫TlXwMu䄯TlYwMu穀TlZwMu穊Tl[wMu穏Tl\wMu𥥼Tl]wMu𥪧Tl_wXTl`wMu䈂TlawMu𥮫TlbwMu篆TlcwMu築TldwMu䈧TlewMu𥲀TlfwMu糒TlgwMu䊠TlhwMu糨TliwMu糣TljwMu紀TlkwMu𥾆TllwMu絣TlmwMu䌁TlnwMu緇TlowMu縂TlpwMu繅TlqwMu䌴LdTlrwMu𦈨TlswMu𦉇TltwMu䍙TluwMu𦋙TlvwMu罺TlwwMu𦌾TlxwMu羕TlywMu翺TlzwMu者Tl{wMu𦓚Tl|wMu𦔣Tl}wMu聠Tl~wMu𦖨TlwMu聰TlwMu𣍟TlwMu䏕TlwMu育TlwMu脃TlwMu䐋TlwMu脾TlwMu媵TlwMu𦞧TlwMu𦞵TlwMu𣎓TlwMu𣎜TlwMu舁TlwMu舄TlwMu辞TlwMu䑫TlwMu芑TlwMu芋TlwMu芝TlwMu劳TlwMu花TlwMu芳TlwMu芽TlwMu苦TlwMu𦬼TlwMu若TlwMu茝TlwMu荣TlwMu莭TlwMu茣TlwMu莽TlwMu菧TlwMu著TlwMu荓TlwMu菊TlwMu菌TlwMu菜TlwMu𦰶TlwMu𦵫TlwMu𦳕TlwMu䔫TlwMu蓱TlwMu蓳TlwMu蔖TlwMu𧏊TlwMu蕤TlwMu𦼬TlwMu䕝TlwMu䕡TlwMu𦾱TlwMu𧃒TlwMu䕫TlwMu虐TlwMu虜TlwMu虧TlwMu虩TlwMu蚩TlwMu蚈TlwMu蜎TlwMu蛢TlwMu蝹TlwMu蜨TlwMu蝫TlwMu螆TlwXTlwMu蟡TlwMu蠁TlwMu䗹TlwMu衠TlwMu衣TlwMu𧙧TlwMu裗TlwMu裞TlwMu䘵TlwMu裺TlwMu㒻TlwMu𧢮TlwMu𧥦TlwMu䚾TlwMu䛇TlwMu誠TlwMu諭TlwMu變TlwMu豕TlwMu𧲨TlwMu貫TlwMu賁LNTlwMu贛TlwMu起TlwMu𧼯TlwMu𠠄TlwMu跋TlwMu趼TlwMu跰TlwMu𠣞TlwMu軔TlwMu輸TlwMu𨗒TlwMu𨗭TlwMu邔TlwMu郱TlwMu鄑TlwMu𨜮TlwMu鄛TlwMu鈸TlwMu鋗TlwMu鋘TlwMu鉼TlwMu鏹TlwMu鐕TlwMu𨯺TlwMu開TlwMu䦕TlwMu閷TlwMu𨵷TlwMu䧦TlwMu雃TlwMu嶲TlwMu霣TlwMu𩅅TlwMu𩈚TlwMu䩮TlwMu䩶TlwMu韠TlwMu𩐊TlwMu䪲TlwMu𩒖TlwMu頋TlwMu頩TlwMu𩖶TlwMu飢TlwMu䬳TlwMu餩TlwMu馧TlwMu駂TlwMu駾TlwMu䯎TlwMu𩬰Tl
wMu鬒TlwMu鱀TlwMu鳽Tl
wMu䳎TlwMu䳭TlwMu鵧TlwMu𪃎TlwMu䳸TlwMu𪄅TlwMu𪈎TlwMu𪊑TlwMu麻TlwMu䵖TlwMu黹TlwMu黾TlwMu鼅TlwMu鼏TlwMu鼖TlwMu鼻TlwMu𪘀TlwXTlwVTlKwXTlPwVTl#wXTlwITlwXa__doc__a__file__a__spec__aoriginahas_locationa__cached__aListlaTupleaUnionu15.0.0a__version__areturnTOintOstrTOintOstrpa_seg_0a_seg_1a_seg_2a_seg_3a_seg_4a_seg_5a_seg_6a_seg_7a_seg_8a_seg_9a_seg_10a_seg_11a_seg_12a_seg_13a_seg_14a_seg_15a_seg_16a_seg_17a_seg_18a_seg_19a_seg_20a_seg_21a_seg_22a_seg_23a_seg_24a_seg_25a_seg_26a_seg_27a_seg_28a_seg_29a_seg_30a_seg_31a_seg_32a_seg_33a_seg_34a_seg_35a_seg_36a_seg_37a_seg_38a_seg_39a_seg_40a_seg_41a_seg_42a_seg_43a_seg_44a_seg_45a_seg_46a_seg_47a_seg_48a_seg_49a_seg_50a_seg_51a_seg_52a_seg_53a_seg_54a_seg_55a_seg_56a_seg_57a_seg_58a_seg_59a_seg_60a_seg_61a_seg_62a_seg_63a_seg_64a_seg_65a_seg_66a_seg_67a_seg_68a_seg_69a_seg_70a_seg_71a_seg_72a_seg_73a_seg_74a_seg_75a_seg_76a_seg_77a_seg_78a_seg_79a_seg_80a_seg_81auts46datauidna\uts46data.pyu<module idna.uts46data>u.pyasn1.codec.berla__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existingucodec\berTaNUITKA_PACKAGE_pyasn1_codecu\not_existingaberTaNUITKA_PACKAGE_pyasn1_codec_beru\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__upyasn1\codec\ber\__init__.pyu<module pyasn1.codec.ber>u.pyasn1.codec.ber.decoderwBaerroraPyAsn1ErroruSingleItemDecoder not implemented for %suDecode value with fixed byte length.

        The decoder is allowed to consume as many bytes as necessary.
        uIndefinite length mode decoder not implemented for %suDecode value with undefined length.

        The decoder is allowed to consume as many bytes as necessary.
        aasn1ObjectaoptionsareadFromStreamasubstratealengthasubstrateCollectoruAbstractSimplePayloadDecoder.substrateCollectoranativeaprotoComponentacloneTatagSetanoValueasubstrateFunaselfa_createComponentaasn1SpecatagSetuadecodeFunavalueDecoderuRawPayloadDecoder.valueDecoderDaallowEootaeooaendOfOctetsaindefLenValueDecoderuRawPayloadDecoder.indefLenValueDecoderlatagFormatatagatagFormatSimpleTuSimple tag format expectedaSubstrateUnderrunErrorachunkafrom_bytesDasignedtuIntegerPayloadDecoder.valueDecoderaIntegerPayloadDecoderlTuEmpty BIT STRING substrateaisEndOfStreamatrailingBitsluTrailing bits overflow %safromOctetStringTainternalFormatapaddingasupportConstructedFormuConstructed encoding form prohibited at %sa__name__aLOGTuassembling constructed serializationanullDainternalFormattatellacurrent_positionaoct2intacomponent:lnnabitStringTainternalFormataprependapaddinguBitStringPayloadDecoder.valueDecoderaallowEoouBitStringPayloadDecoder.indefLenValueDecoderaoriginal_positionaheaderuOctetStringPayloadDecoder.valueDecoderuOctetStringPayloadDecoder.indefLenValueDecoderuUnexpected %d-octet substrate for NulluNullPayloadDecoder.valueDecoderTuEmpty substrateaocts2intsTaindexlaoidanextSubIdasubIdluShort substrate for sub-OID past %sTuInvalid octet 0x80 in OID encodingl'Tll(lOlPluMalformed first OID octet: %suObjectIdentifierPayloadDecoder.valueDecoderZTuIncomplete floating-point valueTudecoding binary encoded REALllutoo many values to unpack (expected 2)TuReal exponent screwedlaeowelTuIllegal Real basewpl@Tudecoding infinite REALu-infainflTudecoding character encoded REALl
uUnknown NR (tag %s)TuBad character Real syntaxuUnknown encoding (tag %s)uRealPayloadDecoder.valueDecoderacomponentsaappendacomponentTypesaaddaprotoRecordComponentaprotoSequenceComponentaTagSetabaseTagasuperTagsuguessed %r container type (pass `asn1Spec` to guide the decoder)asetComponentByPositionDaverifyConstraintsamatchTagsamatchConstraintsFppa_decodeComponentsSchemalessuConstructedPayloadDecoderBase._decodeComponentsSchemalessatagFormatConstructedTuConstructed tag format expectedTacontextuUnused trailing %d octets encountered: %satrailingadebugahexdumpacleara_passAsn1ObjectatypeIdaunivaSequenceaSetacomponentTypeahasOptionalOrDefaultudecoding %sdeterministic %s type %r chosen by type IDunon-aSETanamedTypesatagMapUniqueaidxaisOptionalaisDefaultedagetTagMapNearPositionuExcessive components decoded at %ragetPositionByTypeaeffectiveTagSetagetPositionNearTypeaseenIndicesuseen component indices %sarequiredComponentsaissubsetuASN.1 object %s has uninitialized componentsahasOpenTypesagetaopenTypesTuuser-specified open types map:aitemsu%s -> %rTadecodeOpenTypesFaopenTypeagetComponentByPositionaisValueagetComponentByNameanameudefault open types map of component "%s.%s" governed by component "%s.%s":ufailed to resolve open type by governing value %ruresolved open type %r by governing value %raSetOfaSequenceOfaasSeekableStreamacontainerValueaasOctetsaisInconsistentudecoding type %r chosen by given `asn1Spec`uConstructedPayloadDecoderBase.valueDecoderuConstructedPayloadDecoderBase.indefLenValueDecoderudecoding %s as explicitly tagged CHOICEacomponentTagMapudecoding %s as untagged CHOICEastateudecoded component %s, effective tag set %sasetComponentByTypeDaverifyConstraintsamatchTagsamatchConstraintsainnerFlagFpppuChoicePayloadDecoder.valueDecoderudecoding %s as %stagged CHOICEuexplicitly aunuChoicePayloadDecoder.indefLenValueDecoderatagmapaTagMapatagMapamarkedPositionaseekaosaSEEK_SETapeekIntoStreamudecoding as untagged ANY, substrate %suAnyPayloadDecoder.valueDecoderTudecoding as tagged ANYudecoding as untagged ANY, header substrate %suAnyPayloadDecoder.indefLenValueDecodera_MISSINGaTAG_MAPa_tagMapaTYPE_MAPa_typeMapa_tagCachea_tagSetCacheapopTaallowEooFudecoder called at scope %s with state %d, working with up to %s octets of substrate: %sascopeasupportIndefLengthaeoo_candidateaEOO_SENTINELTuend-of-octets sentinel foundlaSEEK_CURastStopastDecodeTagafirstByteatagCachel laintegerByteTuShort octet stream on long tag decodingalengthOctetIdxatagIdaTagTatagClassatagFormatatagIdatagSetCacheafirstOctetalastTagastDecodeLengthutag decoded into %s, decoding lengthaencodedLengthu%s<%s at %sTuIndefinite length encoding not supported by this codecastGetValueDecoderuvalue length decoded into %dastGetValueDecoderByTagastGetValueDecoderByAsn1SpecastDecodeValue:nlnastTryAsExplicitTagucodec %s chosen by a built-in type, decoding %su<none>avalueuas explicit tagapushaconcreteDecoderw?Tucandidate ASN.1 spec is a map of:apresentTypesu  %s -> %saskipTypesTubut neither of: unew candidate ASN.1 spec is %s, chosen by %saprettyPrintTypeucandidate ASN.1 spec is %sachosenSpecuvalue decoder chosen for an ambiguous type by type ID %suvalue decoder chosen by base %sucodec %s chosen by ASN.1 spec, decoding %sTarecursiveFlagtu<lambda>uSingleItemDecoder.__call__.<locals>.<lambda>uRead %s bytes instead of expected %s.ucodec %s yields type %s, value:
%s
...abaseaAsn1ItemaprettyPrintatagClassatagClassUniversalarawPayloadDecoderadefaultErrorStateucodec %s chosen, decoding %suas failureastDumpRawValueadefaultRawDecoderucodec %s chosen, decoding valueastErrorConditionu%s not in asn1Spec: %rudecoder left scope %s, call completeda__call__uSingleItemDecoder.__call__aSINGLE_ITEM_DECODERa_singleItemDecodera_substratea_asn1Speca_optionsa__iter__uStreamingDecoder.__iter__aSTREAMING_DECODERTuShort substrate on inputaEndOfStreamErroruTurns BER/CER/DER octet stream into an ASN.1 object.

        Takes BER/CER/DER octet-stream in form of :py:class:`bytes` (Python 3)
        or :py:class:`str` (Python 2) and decode it into an ASN.1 object
        (e.g. :py:class:`~pyasn1.type.base.PyAsn1Item` derivative) which
        may be a scalar or an arbitrary nested structure.

        Parameters
        ----------
        substrate: :py:class:`bytes` (Python 3) or :py:class:`str` (Python 2)
            BER/CER/DER octet-stream to parse

        Keyword Args
        ------------
        asn1Spec: :py:class:`~pyasn1.type.base.PyAsn1Item`
            A pyasn1 type object (:py:class:`~pyasn1.type.base.PyAsn1Item`
            derivative) to act as a template guiding the decoder.
            Depending on the ASN.1 structure being decoded, `asn1Spec` may or
            may not be required. Most common reason for it to require is that
            ASN.1 structure is encoded in *IMPLICIT* tagging mode.

        Returns
        -------
        : :py:class:`tuple`
            A tuple of :py:class:`~pyasn1.type.base.PyAsn1Item` object
            recovered from BER/CER/DER substrate and the unprocessed trailing
            portion of the `substrate` (may be empty)

        Raises
        ------
        : :py:class:`~pyasn1.error.PyAsn1Error`
            :py:class:`~pyasn1.error.SubstrateUnderrunError` on insufficient
            input or :py:class:`~pyasn1.error.PyAsn1Error` on decoding error.

        Examples
        --------
        Decode BER/CER/DER serialisation without ASN.1 schema

        .. code-block:: pycon

           >>> s, unprocessed = decode(b'0')
           >>> str(s)
           SequenceOf:
            1 2 3

        Decode BER/CER/DER serialisation with ASN.1 schema

        .. code-block:: pycon

           >>> seq = SequenceOf(componentType=Integer())
           >>> s, unprocessed = decode(
                b'0', asn1Spec=seq)
           >>> str(s)
           SequenceOf:
            1 2 3

        a__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1TadebugTaerrorupyasn1.codec.berTaeooupyasn1.codec.streamingTaasSeekableStreamTaisEndOfStreamTapeekIntoStreamTareadFromStreamupyasn1.compatTa_MISSINGupyasn1.compat.integerTafrom_bytesupyasn1.compat.octetsTaoct2intaocts2intsaints2octsanullaints2octsupyasn1.errorTaPyAsn1Errorupyasn1.typeTabaseTacharacharTatagTatagmapTaunivTausefulausefulaStreamingDecoderaDecoderadecodea__all__aregisterLoggeeaDEBUG_DECODERTupyasn1.codec.ber.decoderTaflagsTOobjecta__prepare__aAbstractPayloadDecodera__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.codec.ber.decodera__module__a__qualname__TnnnnnuAbstractPayloadDecoder.valueDecoderuAbstractPayloadDecoder.indefLenValueDecoderastaticmethoduAbstractPayloadDecoder._passAsn1Objecta__orig_bases__aAbstractSimplePayloadDecoderuAbstractSimplePayloadDecoder._createComponentaRawPayloadDecoderaAnyTuaIntegeraBooleanPayloadDecoderaBooleanuBooleanPayloadDecoder._createComponentaBitStringPayloadDecoderaBitStringTTaOctetStringPayloadDecoderaOctetStringaNullPayloadDecoderaNullaObjectIdentifierPayloadDecoderaObjectIdentifieraRealPayloadDecoderaRealaAbstractConstructedPayloadDecoderaConstructedPayloadDecoderBasea_getComponentTagMapuConstructedPayloadDecoderBase._getComponentTagMapa_getComponentPositionByTypeuConstructedPayloadDecoderBase._getComponentPositionByTypeTnnnaSequenceOrSequenceOfPayloadDecoderaSequencePayloadDecoderaSequenceOfPayloadDecoderaSetOrSetOfPayloadDecoderaSetPayloadDecoderaSetOfPayloadDecoderaChoicePayloadDecoderaChoiceaAnyPayloadDecoderaUTF8StringPayloadDecoderaUTF8StringaNumericStringPayloadDecoderaNumericStringaPrintableStringPayloadDecoderaPrintableStringaTeletexStringPayloadDecoderaTeletexStringaVideotexStringPayloadDecoderaVideotexStringaIA5StringPayloadDecoderaIA5StringaGraphicStringPayloadDecoderaGraphicStringaVisibleStringPayloadDecoderaVisibleStringaGeneralStringPayloadDecoderaGeneralStringaUniversalStringPayloadDecoderaUniversalStringaBMPStringPayloadDecoderaBMPStringaObjectDescriptorPayloadDecoderaObjectDescriptoraGeneralizedTimePayloadDecoderaGeneralizedTimeaUTCTimePayloadDecoderaUTCTimeaEnumeratedatypeMapavaluesatypeDecoder;ll
lutoo many values to unpack (expected 10)TTlpaSingleItemDecodera__init__uSingleItemDecoder.__init__uCreate an iterator that turns BER/CER/DER byte stream into ASN.1 objects.

    On each iteration, consume whatever BER/CER/DER serialization is
    available in the `substrate` stream-like object and turns it into
    one or more, possibly nested, ASN.1 objects.

    Parameters
    ----------
    substrate: :py:class:`file`, :py:class:`io.BytesIO`
        BER/CER/DER serialization in form of a byte stream

    Keyword Args
    ------------
    asn1Spec: :py:class:`~pyasn1.type.base.PyAsn1Item`
        A pyasn1 type object to act as a template guiding the decoder.
        Depending on the ASN.1 structure being decoded, `asn1Spec` may
        or may not be required. One of the reasons why `asn1Spec` may
        me required is that ASN.1 structure is encoded in the *IMPLICIT*
        tagging mode.

    Yields
    ------
    : :py:class:`~pyasn1.type.base.PyAsn1Item`, :py:class:`~pyasn1.error.SubstrateUnderrunError`
        Decoded ASN.1 object (possibly, nested) or
        :py:class:`~pyasn1.error.SubstrateUnderrunError` object indicating
        insufficient BER/CER/DER serialization on input to fully recover ASN.1
        objects from it.

        In the latter case the caller is advised to ensure some more data in
        the input stream, then call the iterator again. The decoder will resume
        the decoding process using the newly arrived data.

        The `context` property of :py:class:`~pyasn1.error.SubstrateUnderrunError`
        object might hold a reference to the partially populated ASN.1 object
        being reconstructed.

    Raises
    ------
    ~pyasn1.error.PyAsn1Error, ~pyasn1.error.EndOfStreamError
        `PyAsn1Error` on deserialization error, `EndOfStreamError` on
         premature stream closure.

    Examples
    --------
    Decode BER serialisation without ASN.1 schema

    .. code-block:: pycon

        >>> stream = io.BytesIO(
        ...    b'0')
        >>>
        >>> for asn1Object in StreamingDecoder(stream):
        ...     print(asn1Object)
        >>>
        SequenceOf:
         1 2 3

    Decode BER serialisation with ASN.1 schema

    .. code-block:: pycon

        >>> stream = io.BytesIO(
        ...    b'0')
        >>>
        >>> schema = SequenceOf(componentType=Integer())
        >>>
        >>> decoder = StreamingDecoder(stream, asn1Spec=schema)
        >>> for asn1Object in decoder:
        ...     print(asn1Object)
        >>>
        SequenceOf:
         1 2 3
    TnuStreamingDecoder.__init__uCreate a BER decoder object.

    Parse BER/CER/DER octet-stream into one, possibly nested, ASN.1 object.
    aclassmethoduDecoder.__call__upyasn1\codec\ber\decoder.pyTwawbwcu<module pyasn1.codec.ber.decoder>Ta__class__Taclsasubstrateaasn1SpecaoptionsastreamingDecoderaasn1ObjectatailT#aselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaallowEooaeoo_candidateatagMapatypeMapatagCacheatagSetCacheavalueaisShortTagafirstByteafirstOctetalastTagaintegerTagatagClassatagFormatatagIdalengthOctetIdxaintegerByteasizeaencodedLengthalengthOctetaconcreteDecoderachosenSpecwvabaseTagSetaoriginal_positionabytesReadTaselfasubstrateaasn1SpecaoptionsTaselfatagMapatypeMapaignoredTaselfaasn1ObjectachunkTaselfaasn1SpecatagSetavalueaoptionsT
aselfasubstrateatagSetadecodeFunalengthaoptionsaasn1ObjectacomponentsacomponentTypesaoriginal_positionacomponentaprotoComponentaidxTaselfaasn1ObjectatagSetaidxTaselfaasn1ObjectaidxTaasn1ObjectaoptionsTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkabitStringacomponentatrailingBitsT
aselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkaheaderacomponentTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkaisTaggedaiteratoracomponentaeffectiveTagSetTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkanamedTypesaisSetTypeaisDeterministicaseenIndicesaidxacomponentaopenTypeswkwvanamedTypeagoverningValueaopenTypeacontainerValueaposacontainerElementastreamainconsistencyacomponentTypeTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkavalueTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaisTaggedachunkafullPositionacurrentPositionaasn1ObjectacomponentTaasn1ObjectasubstratealengthaoptionsachunkT
aselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkacomponentaeffectiveTagSetTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1Objectachunkaheaderaoriginal_positionacomponentTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkatrailingBitsavalueabitStringacurrent_positionacomponentTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsachunkacomponentTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsachunkafownaeowewbwpasfavalueTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsachunkaoidaindexasubstrateLenasubIdanextSubIdTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsachunkavalueT
aselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaisUntaggedafullPositionacurrentPositionachunkTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaoriginal_positionaasn1ObjectachunkatrailinganamedTypesaisSetTypeaisDeterministicaseenIndicesaidxacomponentTypeacomponentaopenTypeswkwvanamedTypeagoverningValueaopenTypeacontainerValueaposacontainerElementastreamainconsistency.pyasn1.codec.ber.eoo'a_instancea__new__a__doc__a__file__a__spec__aoriginahas_locationa__cached__upyasn1.typeTabaselabaseTatagatagaendOfOctetsa__all__aSimpleAsn1Typea__prepare__aEndOfOctetsa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.codec.ber.eooa__module__a__qualname__adefaultValueainitTagSetaTagatagClassUniversalatagFormatSimpleatagSetuEndOfOctets.__new__a__orig_bases__upyasn1\codec\ber\eoo.pyu<module pyasn1.codec.ber.eoo>Ta__class__Taclsaargsakwargsu.pyasn1.codec.cerla__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existingucodec\cerTaNUITKA_PACKAGE_pyasn1_codecu\not_existingacerTaNUITKA_PACKAGE_pyasn1_codec_ceru\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__upyasn1\codec\cer\__init__.pyu<module pyasn1.codec.cer>u.pyasn1.codec.cer.decoderPalengthlaerroraPyAsn1ErrorTuNot single-octet Boolean payloadareadFromStreamasubstrateaoptionsaSubstrateUnderrunErroraoct2intachunklluUnexpected Boolean payload: %saselfa_createComponentaasn1SpecatagSetavalueDecoderuBooleanPayloadDecoder.valueDecodera__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1Taerrorupyasn1.codec.streamingTareadFromStreamupyasn1.codec.berTadecoderadecoderupyasn1.compat.octetsTaoct2intupyasn1.typeTaunivaunivadecodeaStreamingDecodera__all__aAbstractSimplePayloadDecodera__prepare__aBooleanPayloadDecodera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.codec.cer.decodera__module__a__qualname__aBooleanTlaprotoComponentTnnnnna__orig_bases__aBitStringPayloadDecoderaOctetStringPayloadDecoderaRealPayloadDecoderaTAG_MAPacopyaupdateaBitStringaOctetStringaRealaTYPE_MAPatagMapatypeMapavaluesatypeDecoderatypeIdaSingleItemDecoderaSINGLE_ITEM_DECODERaDecoderaSTREAMING_DECODERupyasn1\codec\cer\decoder.pyu<module pyasn1.codec.cer.decoder>Ta__class__Taselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsachunkabyteavalueu.pyasn1.codec&a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existingacodecTaNUITKA_PACKAGE_pyasn1_codecu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__upyasn1\codec\__init__.pyu<module pyasn1.codec>u.pyasn1.codec.derla__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existingucodec\derTaNUITKA_PACKAGE_pyasn1_codecu\not_existingaderTaNUITKA_PACKAGE_pyasn1_codec_deru\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__upyasn1\codec\der\__init__.pyu<module pyasn1.codec.der>u.pyasn1.codec.der.decoder4a__doc__a__file__a__spec__aoriginahas_locationa__cached__upyasn1.codec.cerTadecoderladecoderupyasn1.typeTaunivaunivadecodeaStreamingDecodera__all__aBitStringPayloadDecodera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.codec.der.decodera__module__a__qualname__asupportConstructedForma__orig_bases__aOctetStringPayloadDecoderaRealPayloadDecoderaTAG_MAPacopyaupdateaBitStringatagSetaOctetStringaRealaTYPE_MAPatagMapatypeMapavaluesatypeDecoderaprotoComponentatypeIdaSingleItemDecoderasupportIndefLengthaSINGLE_ITEM_DECODERaDecoderaSTREAMING_DECODERupyasn1\codec\der\decoder.pyu<module pyasn1.codec.der.decoder>Ta__class__u.pyasn1.codec.streaming`a_rawaBytesIOa_cachela_markedPositionareadaseekaosaSEEK_CURlwnawritearead_from_cacheuPosition where the currently processed element starts.

        This is used for back-tracking in SingleItemDecoder.__call__
        and (indefLen)ValueDecoder and should not be used for other purposes.
        The client is not supposed to ever seek before this position.
        atellaioaDEFAULT_BUFFER_SIZEaunivaOctetStringaasOctetsa_PY2afileaBufferedReaderaseekableaCachingStreamWrapperaerroraUnsupportedSubstrateErroruCannot convert asubstratea__name__u to a seekable bit stream.uConvert object to seekable byte-stream.

    Parameters
    ----------
    substrate: :py:class:`bytes` or :py:class:`io.IOBase` or :py:class:`univ.OctetString`

    Returns
    -------
    : :py:class:`io.IOBase`

    Raises
    ------
    : :py:class:`~pyasn1.error.PyAsn1Error`
        If the supplied substrate cannot be converted to a seekable stream.
    uCheck whether we have reached the end of a stream.

    Although it is more effective to read and catch exceptions, this
    function

    Parameters
    ----------
    substrate: :py:class:`IOBase`
        Stream to check

    Returns
    -------
    : :py:class:`bool`
    aSEEK_ENDaSEEK_SETTlaisEndOfStreamuPeek into stream.

    Parameters
    ----------
    substrate: :py:class:`IOBase`
        Stream to read from.

    size: :py:class:`int`
        How many bytes to peek (-1 = all available)

    Returns
    -------
    : :py:class:`bytes` or :py:class:`str`
        The return type depends on Python major version
    apeekasizeareadFromStreamapeekIntoStreamuRead from the stream.

    Parameters
    ----------
    substrate: :py:class:`IOBase`
        Stream to read from.

    Keyword parameters
    ------------------
    size: :py:class:`int`
        How many bytes to read (-1 = all available)

    context: :py:class:`dict`
        Opaque caller context will be attached to exception objects created
        by this function.

    Yields
    ------
    : :py:class:`bytes` or :py:class:`str` or :py:class:`SubstrateUnderrunError`
        Read data or :py:class:`~pyasn1.error.SubstrateUnderrunError`
        object if no `size` bytes is readily available in the stream. The
        data type depends on Python major version

    Raises
    ------
    : :py:class:`~pyasn1.error.EndOfStreamError`
        Input stream is exhausted
    aSubstrateUnderrunErroracontextTacontextaEndOfStreamErrora__doc__a__file__a__spec__aoriginahas_locationa__cached__asysapyasn1Taerrorupyasn1.typeTaunivaIOBasea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.codec.streaminga__module__uWrapper around non-seekable streams.

    Note that the implementation is tied to the decoder,
    not checking for dangerous arguments for the sake
    of performance.

    The read bytes are kept in an internal cache until
    setting _markedPosition which may reset the cache.
    a__qualname__a__init__uCachingStreamWrapper.__init__uCachingStreamWrapper.peekuCachingStreamWrapper.seekableuCachingStreamWrapper.seekTluCachingStreamWrapper.readapropertyamarkedPositionuCachingStreamWrapper.markedPositionasetteruCachingStreamWrapper.tella__orig_bases__aasSeekableStreamTlnupyasn1\codec\streaming.pyu<module pyasn1.codec.streaming>Ta__class__TaselfarawTasubstrateTasubstrateacparesultareceivedTaselfTaselfavalueTaselfwnaresultTasubstrateasizeareceivedacurrent_positionachunkTaselfwnaread_from_cachearead_from_rawTasubstrateasizeacontextareceivedTaselfwnawhenceu.pyasn1.compat4a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existingacompatTaNUITKA_PACKAGE_pyasn1_compatu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__a_MISSINGupyasn1\compat\__init__.pyu<module pyasn1.compat>u.pyasn1.compat.integer"afrom_bytesabigTasignedamaxabit_lengthllalengthlato_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaplatformupyasn1.compat.octetsTaoct2intanullaensureStringaoct2intanullaensureStringapython_implementationaimplementationTFTFlabitLengthupyasn1\compat\integer.pyu<module pyasn1.compat.integer>TanumberTaoctetsasignedTavalueasignedalengthu.pyasn1.compat.octetsN uaint2octaoct2intaunicodeaints2octsaencodeTuiso-8859-1adecodea__doc__a__file__a__spec__aoriginahas_locationa__cached__aversion_infollachru<lambda>anullaordaocts2intsastr2octsaocts2straisOctetsTypeaisStringTypeaensureStringcupyasn1\compat\octets.pyTwsTwxu<module pyasn1.compat.octets>.pyasn1a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__u0.5.0a__version__upyasn1\__init__.pyu<module pyasn1>u.pyasn1.debugN{aloggingagetLoggerTapyasn1asetLevelaDEBUGaStreamHandleraFormatterTu%(asctime)s %(name)s: %(message)sasetFormatteraaddHandlera_Printer__loggeradebugaDEBUG_NONEa_flagsaloggerNameaPrinteraNullHandlerTaloggerahandlera_printeraprinteradefaultPrinterurunning pyasn1 %s, debug flags %sa__version__u, lTw!w~:lnnaselfaFLAG_MAPaerroraPyAsn1Errorubad debug flag %sudebug category '%s' %sadisabledaenabledulogger %s, flags %xa_LOGaLOGGEE_MAPaitemsutoo many values to unpack (expected 2)asysamodulesasetLoggerw aocts2intsu%s%.2Xlu
%.5d: ua_listw.aappendapopa__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1Ta__version__Taerrorupyasn1.compat.octetsTaocts2intsaDebugahexdumpa__all__laDEBUG_ENCODERlaDEBUG_DECODERlaDEBUG_ALLanoneaencoderadecoderaallTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.debuga__module__a__qualname__Tnnna__init__uPrinter.__init__a__call__uPrinter.__call__u<python logging>a__str__uPrinter.__str__a__orig_bases__uDebug.__init__uDebug.__str__uDebug.__call__a__and__uDebug.__and__a__rand__uDebug.__rand__aLOGaregisterLoggeeaScopeuScope.__init__uScope.__str__apushuScope.pushuScope.popascopeupyasn1\debug.pyu<module pyasn1.debug>Ta__class__TaselfaflagTaselfamsgTaselfTaselfaflagsaoptionsaflagainverseTaselfaloggerahandleraformatterTaoctetsTaselfatokenTamoduleanameaflagsTauserLoggeramoduleanameaflags.pyasn1.error34a_argsa_kwargsagetacontextuReturn exception context

        When exception object is created, the caller can supply some opaque
        context for the upper layers to better understand the cause of the
        exception.

        Returns
        -------
        : :py:class:`dict`
            Dict holding context specific data
        a__init__aargsaPyAsn1Errora__doc__a__file__a__spec__aoriginahas_locationa__cached__TEExceptionla__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.errora__module__uBase pyasn1 exception

    `PyAsn1Error` is the base exception class (based on
    :class:`Exception`) that represents all possible ASN.1 related
    errors.

    Parameters
    ----------
    args:
        Opaque positional parameters

    Keyword Args
    ------------
    kwargs:
        Opaque keyword parameters

    a__qualname__uPyAsn1Error.__init__apropertyuPyAsn1Error.contexta__orig_bases__aValueConstraintErroruASN.1 type constraints violation exception

    The `ValueConstraintError` exception indicates an ASN.1 value
    constraint violation.

    It might happen on value object instantiation (for scalar types) or on
    serialization (for constructed types).
    aSubstrateUnderrunErroruASN.1 data structure deserialization error

    The `SubstrateUnderrunError` exception indicates insufficient serialised
    data on input of a de-serialization codec.
    aEndOfStreamErroruASN.1 data structure deserialization error

    The `EndOfStreamError` exception indicates the condition of the input
    stream has been closed.
    aUnsupportedSubstrateErroruUnsupported substrate type to parse as ASN.1 data.aPyAsn1UnicodeErroruUnicode text processing error

    The `PyAsn1UnicodeError` exception is a base class for errors relating to
    unicode text de/serialization.

    Apart from inheriting from :class:`PyAsn1Error`, it also inherits from
    :class:`UnicodeError` to help the caller catching unicode-related errors.
    TnuPyAsn1UnicodeError.__init__aPyAsn1UnicodeDecodeErroruUnicode text decoding error

    The `PyAsn1UnicodeDecodeError` exception represents a failure to
    deserialize unicode text.

    Apart from inheriting from :class:`PyAsn1UnicodeError`, it also inherits
    from :class:`UnicodeDecodeError` to help the caller catching unicode-related
    errors.
    aPyAsn1UnicodeEncodeErroruUnicode text encoding error

    The `PyAsn1UnicodeEncodeError` exception represents a failure to
    serialize unicode text.

    Apart from inheriting from :class:`PyAsn1UnicodeError`, it also inherits
    from :class:`UnicodeEncodeError` to help the caller catching
    unicode-related errors.
    upyasn1\error.pyu<module pyasn1.error>Ta__class__TaselfaargsakwargsTaselfamessageaunicode_errorTaselfu.pyasn1.type.base5aAsn1Itema_typeCounteratagSetasubtypeSpecaupdatea_readOnlylw_aerroraPyAsn1Erroruread-only instance attribute "%s"aselfaprettyPrintuFor |ASN.1| type is equivalent to *tagSet*
        atagmapaTagMapuReturn a :class:`~pyasn1.type.tagmap.TagMap` object mapping ASN.1 tags to ASN.1 objects within callee object.
        aotheruExamine |ASN.1| type for equality with other ASN.1 type.

        ASN.1 tags (:py:mod:`~pyasn1.type.tag`) and constraints
        (:py:mod:`~pyasn1.type.constraint`) are examined when carrying
        out ASN.1 types comparison.

        Python class inheritance relationship is NOT considered.

        Parameters
        ----------
        other: a pyasn1 type object
            Class instance representing ASN.1 type.

        Returns
        -------
        : :class:`bool`
            :obj:`True` if *other* is |ASN.1| type,
            :obj:`False` otherwise.
        aisSuperTagSetOfaisSuperTypeOfuExamine |ASN.1| type for subtype relationship with other ASN.1 type.

        ASN.1 tags (:py:mod:`~pyasn1.type.tag`) and constraints
        (:py:mod:`~pyasn1.type.constraint`) are examined when carrying
        out ASN.1 types comparison.

        Python class inheritance relationship is NOT considered.

        Parameters
        ----------
            other: a pyasn1 type object
                Class instance representing ASN.1 type.

        Returns
        -------
            : :class:`bool`
                :obj:`True` if *other* is a subtype of |ASN.1| type,
                :obj:`False` otherwise.
        anoValueaeffectiveTagSetatagMapaisValuea_instanceagetPluguNoValue.__new__.<locals>.getPlugTOstrOintOlistOdictaclsaskipMethodsastartswithTa__aendswithacallableanamea__new__apluguNoValue.__new__.<locals>.getPlug.<locals>.pluguAttempted "%s" operation on ASN.1 schema objectuAttribute %s not presentu<%s object>a__name__aAsn1Typea__init__adefaultValueaprettyInasysaexc_infoutoo many values to unpack (expected 3)u%s at %savaluea_valueu%s %s objectaschemaareadOnlyaitemsutoo many values to unpack (expected 2)arepresentationu, %s %s:nlnu...:lnnu, payload [%s]u<%s>uIndicate that |ASN.1| object represents ASN.1 value.

        If *isValue* is :obj:`False` then this object represents just
        ASN.1 schema.

        If *isValue* is :obj:`True` then, in addition to its ASN.1 schema
        features, this object can also be used like a Python built-in object
        (e.g. :class:`int`, :class:`str`, :class:`dict` etc.).

        Returns
        -------
        : :class:`bool`
            :obj:`False` if object represents just ASN.1 schema.
            :obj:`True` if object represents ASN.1 schema and can be used as a normal value.

        Note
        ----
        There is an important distinction between PyASN1 schema and value objects.
        The PyASN1 schema objects can only participate in ASN.1 schema-related
        operations (e.g. defining or testing the structure of the data). Most
        obvious uses of ASN.1 schema is to guide serialisation codecs whilst
        encoding/decoding serialised ASN.1 contents.

        The PyASN1 value objects can **additionally** participate in many operations
        involving regular Python objects (e.g. arithmetic, comprehension etc).
        acopyuCreate a modified version of |ASN.1| schema or value object.

        The `clone()` method accepts the same set arguments as |ASN.1|
        class takes on instantiation except that all arguments
        of the `clone()` method are optional.

        Whatever arguments are supplied, they are used to create a copy
        of `self` taking precedence over the ones used to instantiate `self`.

        Note
        ----
        Due to the immutable nature of the |ASN.1| object, if no arguments
        are supplied, no new |ASN.1| object will be created and `self` will
        be returned instead.
        aimplicitTagatagImplicitlyapopTaexplicitTagnatagExplicitlyainitializersuCreate a specialization of |ASN.1| schema or value object.

        The subtype relationship between ASN.1 types has no correlation with
        subtype relationship between Python types. ASN.1 type is mainly identified
        by its tag(s) (:py:class:`~pyasn1.type.tag.TagSet`) and value range
        constraints (:py:class:`~pyasn1.type.constraint.ConstraintsIntersection`).
        These ASN.1 type properties are implemented as |ASN.1| attributes.

        The `subtype()` method accepts the same set arguments as |ASN.1|
        class takes on instantiation except that all parameters
        of the `subtype()` method are optional.

        With the exception of the arguments described below, the rest of
        supplied arguments they are used to create a copy of `self` taking
        precedence over the ones used to instantiate `self`.

        The following arguments to `subtype()` create a ASN.1 subtype out of
        |ASN.1| type:

        Other Parameters
        ----------------
        implicitTag: :py:class:`~pyasn1.type.tag.Tag`
            Implicitly apply given ASN.1 tag object to `self`'s
            :py:class:`~pyasn1.type.tag.TagSet`, then use the result as
            new object's ASN.1 tag(s).

        explicitTag: :py:class:`~pyasn1.type.tag.Tag`
            Explicitly apply given ASN.1 tag object to `self`'s
            :py:class:`~pyasn1.type.tag.TagSet`, then use the result as
            new object's ASN.1 tag(s).

        subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
            Add ASN.1 constraints object to one of the `self`'s, then
            use the result as new object's ASN.1 constraints.

        Returns
        -------
        :
            new instance of |ASN.1| schema or value object

        Note
        ----
        Due to the immutable nature of the |ASN.1| object, if no arguments
        are supplied, no new |ASN.1| object will be created and `self` will
        be returned instead.
        aprettyOutu%s -> %sacomponentTypeasizeSpeca_moveSizeSpecu, %s=%racomponentsu, TuMethod not implementedacloneValueFlaga_cloneComponentValuesacloneuCreate a modified version of |ASN.1| schema object.

        The `clone()` method accepts the same set arguments as |ASN.1|
        class takes on instantiation except that all arguments
        of the `clone()` method are optional.

        Whatever arguments are supplied, they are used to create a copy
        of `self` taking precedence over the ones used to instantiate `self`.

        Possible values of `self` are never copied over thus `clone()` can
        only create a new schema object.

        Returns
        -------
        :
            new instance of |ASN.1| type/value

        Note
        ----
        Due to the mutable nature of the |ASN.1| object, even if no arguments
        are supplied, a new |ASN.1| object will be created and returned.
        TaimplicitTagnuCreate a specialization of |ASN.1| schema object.

        The `subtype()` method accepts the same set arguments as |ASN.1|
        class takes on instantiation except that all parameters
        of the `subtype()` method are optional.

        With the exception of the arguments described below, the rest of
        supplied arguments they are used to create a copy of `self` taking
        precedence over the ones used to instantiate `self`.

        The following arguments to `subtype()` create a ASN.1 subtype out of
        |ASN.1| type.

        Other Parameters
        ----------------
        implicitTag: :py:class:`~pyasn1.type.tag.Tag`
            Implicitly apply given ASN.1 tag object to `self`'s
            :py:class:`~pyasn1.type.tag.TagSet`, then use the result as
            new object's ASN.1 tag(s).

        explicitTag: :py:class:`~pyasn1.type.tag.Tag`
            Explicitly apply given ASN.1 tag object to `self`'s
            :py:class:`~pyasn1.type.tag.TagSet`, then use the result as
            new object's ASN.1 tag(s).

        subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
            Add ASN.1 constraints object to one of the `self`'s, then
            use the result as new object's ASN.1 constraints.


        Returns
        -------
        :
            new instance of |ASN.1| type/value

        Note
        ----
        Due to the mutable nature of the |ASN.1| object, even if no arguments
        are supplied, a new |ASN.1| object will be created and returned.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1Taerrorupyasn1.typeTaconstraintaconstraintTatagatagTatagmapLaAsn1ItemaAsn1TypeaSimpleAsn1TypeaConstructedAsn1Typea__all__TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.basea__module__a__qualname__aclassmethodTlagetTypeIduAsn1Item.getTypeIda__orig_bases__uBase class for all classes representing ASN.1 types.

    In the user code, |ASN.1| class is normally used only for telling
    ASN.1 objects from others.

    Note
    ----
    For as long as ASN.1 is concerned, a way to compare ASN.1 types
    is to use :meth:`isSameTypeWith` and :meth:`isSuperTypeOf` methods.
    aTagSetaConstraintsIntersectionatypeIduAsn1Type.__init__a__setattr__uAsn1Type.__setattr__a__str__uAsn1Type.__str__apropertyuAsn1Type.readOnlyuAsn1Type.effectiveTagSetuAsn1Type.tagMapTtpaisSameTypeWithuAsn1Type.isSameTypeWithuAsn1Type.isSuperTypeOfastaticmethodaisNoValueuAsn1Type.isNoValueTluAsn1Type.prettyPrintagetTagSetuAsn1Type.getTagSetagetEffectiveTagSetuAsn1Type.getEffectiveTagSetagetTagMapuAsn1Type.getTagMapagetSubtypeSpecuAsn1Type.getSubtypeSpecahasValueuAsn1Type.hasValueaAsn1ItemBaseaNoValueuCreate a singleton instance of NoValue class.

    The *NoValue* sentinel object represents an instance of ASN.1 schema
    object as opposed to ASN.1 value object.

    Only ASN.1 schema-related operations can be performed on ASN.1
    schema objects.

    Warning
    -------
    Any operation attempted on the *noValue* object will raise the
    *PyAsn1Error* exception.
    Sa__slots__a__setattr__a__new__a__getinitargs__a__sizeof__a__qualname__a__objclass__a__setstate__aim_classa__getnewargs__a__reduce__a__getstate__a__init__a__getattribute__a__del__a__repr__a__delattr__a__getattr__a__class__a__reduce_ex__uNoValue.__new__a__getattr__uNoValue.__getattr__a__repr__uNoValue.__repr__aSimpleAsn1TypeuBase class for all simple classes representing ASN.1 types.

    ASN.1 distinguishes types by their ability to hold other objects.
    Scalar types are known as *simple* in ASN.1.

    In the user code, |ASN.1| class is normally used only for telling
    ASN.1 objects from others.

    Note
    ----
    For as long as ASN.1 is concerned, a way to compare ASN.1 types
    is to use :meth:`isSameTypeWith` and :meth:`isSuperTypeOf` methods.
    uSimpleAsn1Type.__init__uSimpleAsn1Type.__repr__a__eq__uSimpleAsn1Type.__eq__a__ne__uSimpleAsn1Type.__ne__a__lt__uSimpleAsn1Type.__lt__a__le__uSimpleAsn1Type.__le__a__gt__uSimpleAsn1Type.__gt__a__ge__uSimpleAsn1Type.__ge__a__bool__uSimpleAsn1Type.__bool__a__hash__uSimpleAsn1Type.__hash__uSimpleAsn1Type.isValueuSimpleAsn1Type.cloneasubtypeuSimpleAsn1Type.subtypeuSimpleAsn1Type.prettyInuSimpleAsn1Type.prettyOutuSimpleAsn1Type.prettyPrintaprettyPrintTypeuSimpleAsn1Type.prettyPrintTypeaAbstractSimpleAsn1ItemaConstructedAsn1TypeuBase class for all constructed classes representing ASN.1 types.

    ASN.1 distinguishes types by their ability to hold other objects.
    Those "nesting" types are known as *constructed* in ASN.1.

    In the user code, |ASN.1| class is normally used only for telling
    ASN.1 objects from others.

    Note
    ----
    For as long as ASN.1 is concerned, a way to compare ASN.1 types
    is to use :meth:`isSameTypeWith` and :meth:`isSuperTypeOf` methods.
    astrictConstraintsuConstructedAsn1Type.__init__uConstructedAsn1Type._moveSizeSpecuConstructedAsn1Type.__repr__uConstructedAsn1Type.__eq__uConstructedAsn1Type.__ne__uConstructedAsn1Type.__lt__uConstructedAsn1Type.__le__uConstructedAsn1Type.__gt__uConstructedAsn1Type.__ge__uConstructedAsn1Type.__bool__uConstructedAsn1Type.componentsuConstructedAsn1Type._cloneComponentValuesuConstructedAsn1Type.cloneuConstructedAsn1Type.subtypeagetComponentByPositionuConstructedAsn1Type.getComponentByPositionTtasetComponentByPositionuConstructedAsn1Type.setComponentByPositionasetComponentsuConstructedAsn1Type.setComponentsasetDefaultComponentsuConstructedAsn1Type.setDefaultComponentsagetComponentTypeuConstructedAsn1Type.getComponentTypeaverifySizeSpecuConstructedAsn1Type.verifySizeSpecaAbstractConstructedAsn1Itemupyasn1\type\base.pyu<module pyasn1.type.base>Ta__class__TaselfTaselfaotherTaselfaattrTaselfakwargsareadOnlyTaselfavalueakwargsaexTypeaexValueaexTbTaclsagetPlugaop_namesanameTaselfarepresentationaattravalueTaselfanameavalueTaselfamyCloneacloneValueFlagTaselfakwargsasizeSpecasubtypeSpecTaselfakwargsacloneValueFlagainitializersacloneTaselfavalueakwargsainitializersTaselfaidxTanameaplugTaclsaincrementTavaluesavalueTaselfaotheramatchTagsamatchConstraintsTaselfaargsakwanameTanameTaselfavalueTaselfascopeTaselfaidxavalueaverifyConstraintsTaselfaargsakwargsaidxavaluewkTaselfakwargsainitializersacloneValueFlagaimplicitTagaexplicitTagaargaoptionacloneTaselfavalueakwargsainitializersaimplicitTagaexplicitTagaargaoptionu.pyasn1.type.char~na_valueaencodeaencodingasysaexc_infolaerroraPyAsn1UnicodeEncodeErroruCan't encode string '%s' with codec %sadecodeTOtupleOlistaprettyInaunivaOctetStringaasOctetsTEUnicodeDecodeErrorELookupErroraPyAsn1UnicodeDecodeErroruCan't decode string '%s' with codec %savalueaselfaprettyOutaAbstractCharacterStringa__str__a__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1Taerrorlupyasn1.typeTatagatagTaunivL
aNumericStringaPrintableStringaTeletexStringaT61StringaVideotexStringaIA5StringaGraphicStringaVisibleStringaISO646StringaGeneralStringaUniversalStringaBMPStringaUTF8Stringa__all__aNoValueanoValuea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.type.chara__module__uCreates |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`,
    its objects are immutable and duck-type Python 2 :class:`str` or Python 3
    :class:`bytes`. When used in octet-stream context, |ASN.1| type assumes
    "|encoding|" encoding.

    Keyword Args
    ------------
    value: :class:`unicode`, :class:`str`, :class:`bytes` or |ASN.1| object
        :class:`unicode` object (Python 2) or :class:`str` (Python 3),
        alternatively :class:`str` (Python 2) or :class:`bytes` (Python 3)
        representing octet-stream of serialised unicode string
        (note `encoding` parameter) or |ASN.1| class instance.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    encoding: :py:class:`str`
        Unicode codec ID to encode/decode :class:`unicode` (Python 2) or
        :class:`str` (Python 3) the payload when |ASN.1| object is used
        in octet-stream context.

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.
    a__qualname__uAbstractCharacterString.__str__a__bytes__uAbstractCharacterString.__bytes__uAbstractCharacterString.prettyInTtuAbstractCharacterString.asOctetsaasNumbersuAbstractCharacterString.asNumbersuAbstractCharacterString.prettyOutTlaprettyPrintuAbstractCharacterString.prettyPrinta__reversed__uAbstractCharacterString.__reversed__a__orig_bases__aNumericStringatagSetatagImplicitlyaTagatagClassUniversalatagFormatSimpleluus-asciiagetTypeIdatypeIdaPrintableStringlaTeletexStringluiso-8859-1aT61StringaVideotexStringlaIA5StringlaGraphicStringlaVisibleStringlaISO646StringaGeneralStringlaUniversalStringluutf-32-beaBMPStringluutf-16-beaUTF8Stringluutf-8upyasn1\type\char.pyu<module pyasn1.type.char>Ta__class__TaselfaexcTaselfTaselfapaddingTaselfavalueaexcTaselfavalueTaselfascopeavalueu.pyasn1.type"a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existingatypeTaNUITKA_PACKAGE_pyasn1_typeu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__upyasn1\type\__init__.pyu<module pyasn1.type>u.pyasn1.type.constraintAa_valueMapa_setValuesa__name__a_valuesa_AbstractConstraint__hasha_testValueaerroraValueConstraintErroru%s failed at: %rasysaexc_infolu%s objectu, consts %su, u<%s>agetValueMapa_setadifferenceaunionaAbstractConstraintavalueaidxaselfastartastopaPyAsn1Erroru%s: bad constraint valuesutoo many values to unpack (expected 2)u%s: screwed constraint values (start > stop): %s > %saissupersetTu<must be present>TuNo arguments expectedTuComponent is not present:Tu<must be absent>uComponent is not absent: %rageta_InnerTypeConstraint__singleTypeConstrainta_InnerTypeConstraint__multipleTypeConstraintaABSENTllaaddaupdateuall of %s failed for "%s"a__doc__a__file__a__spec__aoriginahas_locationa__cached__upyasn1.typeTaerrorLaSingleValueConstraintaContainedSubtypeConstraintaValueRangeConstraintaValueSizeConstraintaPermittedAlphabetConstraintaInnerTypeConstraintaConstraintsExclusionaConstraintsIntersectionaConstraintsUniona__all__TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.constrainta__module__a__qualname__a__init__uAbstractConstraint.__init__Tna__call__uAbstractConstraint.__call__a__repr__uAbstractConstraint.__repr__a__eq__uAbstractConstraint.__eq__a__ne__uAbstractConstraint.__ne__a__lt__uAbstractConstraint.__lt__a__le__uAbstractConstraint.__le__a__gt__uAbstractConstraint.__gt__a__ge__uAbstractConstraint.__ge__a__bool__uAbstractConstraint.__bool__a__hash__uAbstractConstraint.__hash__uAbstractConstraint._setValuesuAbstractConstraint._testValueuAbstractConstraint.getValueMapaisSuperTypeOfuAbstractConstraint.isSuperTypeOfaisSubTypeOfuAbstractConstraint.isSubTypeOfa__orig_bases__aSingleValueConstraintuCreate a SingleValueConstraint object.

    The SingleValueConstraint satisfies any value that
    is present in the set of permitted values.

    Objects of this type are iterable (emitting constraint values) and
    can act as operands for some arithmetic operations e.g. addition
    and subtraction. The latter can be used for combining multiple
    SingleValueConstraint objects into one.

    The SingleValueConstraint object can be applied to
    any ASN.1 type.

    Parameters
    ----------
    *values: :class:`int`
        Full set of values permitted by this constraint object.

    Examples
    --------
    .. code-block:: python

        class DivisorOfSix(Integer):
            '''
            ASN.1 specification:

            Divisor-Of-6 ::= INTEGER (1 | 2 | 3 | 6)
            '''
            subtypeSpec = SingleValueConstraint(1, 2, 3, 6)

        # this will succeed
        divisor_of_six = DivisorOfSix(1)

        # this will raise ValueConstraintError
        divisor_of_six = DivisorOfSix(7)
    uSingleValueConstraint._setValuesuSingleValueConstraint._testValuea__contains__uSingleValueConstraint.__contains__a__iter__uSingleValueConstraint.__iter__a__sub__uSingleValueConstraint.__sub__a__add__uSingleValueConstraint.__add__aContainedSubtypeConstraintuCreate a ContainedSubtypeConstraint object.

    The ContainedSubtypeConstraint satisfies any value that
    is present in the set of permitted values and also
    satisfies included constraints.

    The ContainedSubtypeConstraint object can be applied to
    any ASN.1 type.

    Parameters
    ----------
    *values:
        Full set of values and constraint objects permitted
        by this constraint object.

    Examples
    --------
    .. code-block:: python

        class DivisorOfEighteen(Integer):
            '''
            ASN.1 specification:

            Divisors-of-18 ::= INTEGER (INCLUDES Divisors-of-6 | 9 | 18)
            '''
            subtypeSpec = ContainedSubtypeConstraint(
                SingleValueConstraint(1, 2, 3, 6), 9, 18
            )

        # this will succeed
        divisor_of_eighteen = DivisorOfEighteen(9)

        # this will raise ValueConstraintError
        divisor_of_eighteen = DivisorOfEighteen(10)
    uContainedSubtypeConstraint._testValueaValueRangeConstraintuCreate a ValueRangeConstraint object.

    The ValueRangeConstraint satisfies any value that
    falls in the range of permitted values.

    The ValueRangeConstraint object can only be applied
    to :class:`~pyasn1.type.univ.Integer` and
    :class:`~pyasn1.type.univ.Real` types.

    Parameters
    ----------
    start: :class:`int`
        Minimum permitted value in the range (inclusive)

    end: :class:`int`
        Maximum permitted value in the range (inclusive)

    Examples
    --------
    .. code-block:: python

        class TeenAgeYears(Integer):
            '''
            ASN.1 specification:

            TeenAgeYears ::= INTEGER (13 .. 19)
            '''
            subtypeSpec = ValueRangeConstraint(13, 19)

        # this will succeed
        teen_year = TeenAgeYears(18)

        # this will raise ValueConstraintError
        teen_year = TeenAgeYears(20)
    uValueRangeConstraint._testValueuValueRangeConstraint._setValuesaValueSizeConstraintuCreate a ValueSizeConstraint object.

    The ValueSizeConstraint satisfies any value for
    as long as its size falls within the range of
    permitted sizes.

    The ValueSizeConstraint object can be applied
    to :class:`~pyasn1.type.univ.BitString`,
    :class:`~pyasn1.type.univ.OctetString` (including
    all :ref:`character ASN.1 types <type.char>`),
    :class:`~pyasn1.type.univ.SequenceOf`
    and :class:`~pyasn1.type.univ.SetOf` types.

    Parameters
    ----------
    minimum: :class:`int`
        Minimum permitted size of the value (inclusive)

    maximum: :class:`int`
        Maximum permitted size of the value (inclusive)

    Examples
    --------
    .. code-block:: python

        class BaseballTeamRoster(SetOf):
            '''
            ASN.1 specification:

            BaseballTeamRoster ::= SET SIZE (1..25) OF PlayerNames
            '''
            componentType = PlayerNames()
            subtypeSpec = ValueSizeConstraint(1, 25)

        # this will succeed
        team = BaseballTeamRoster()
        team.extend(['Jan', 'Matej'])
        encode(team)

        # this will raise ValueConstraintError
        team = BaseballTeamRoster()
        team.extend(['Jan'] * 26)
        encode(team)

    Note
    ----
    Whenever ValueSizeConstraint is applied to mutable types
    (e.g. :class:`~pyasn1.type.univ.SequenceOf`,
    :class:`~pyasn1.type.univ.SetOf`), constraint
    validation only happens at the serialisation phase rather
    than schema instantiation phase (as it is with immutable
    types).
    uValueSizeConstraint._testValueaPermittedAlphabetConstraintuCreate a PermittedAlphabetConstraint object.

    The PermittedAlphabetConstraint satisfies any character
    string for as long as all its characters are present in
    the set of permitted characters.

    Objects of this type are iterable (emitting constraint values) and
    can act as operands for some arithmetic operations e.g. addition
    and subtraction.

    The PermittedAlphabetConstraint object can only be applied
    to the :ref:`character ASN.1 types <type.char>` such as
    :class:`~pyasn1.type.char.IA5String`.

    Parameters
    ----------
    *alphabet: :class:`str`
        Full set of characters permitted by this constraint object.

    Example
    -------
    .. code-block:: python

        class BooleanValue(IA5String):
            '''
            ASN.1 specification:

            BooleanValue ::= IA5String (FROM ('T' | 'F'))
            '''
            subtypeSpec = PermittedAlphabetConstraint('T', 'F')

        # this will succeed
        truth = BooleanValue('T')
        truth = BooleanValue('TF')

        # this will raise ValueConstraintError
        garbage = BooleanValue('TAF')

    ASN.1 `FROM ... EXCEPT ...` clause can be modelled by combining multiple
    PermittedAlphabetConstraint objects into one:

    Example
    -------
    .. code-block:: python

        class Lipogramme(IA5String):
            '''
            ASN.1 specification:

            Lipogramme ::=
                IA5String (FROM (ALL EXCEPT ("e"|"E")))
            '''
            subtypeSpec = (
                PermittedAlphabetConstraint(*string.printable) -
                PermittedAlphabetConstraint('e', 'E')
            )

        # this will succeed
        lipogramme = Lipogramme('A work of fiction?')

        # this will raise ValueConstraintError
        lipogramme = Lipogramme('Eel')

    Note
    ----
    Although `ConstraintsExclusion` object could seemingly be used for this
    purpose, practically, for it to work, it needs to represent its operand
    constraints as sets and intersect one with the other. That would require
    the insight into the constraint values (and their types) that are otherwise
    hidden inside the constraint object.

    Therefore it's more practical to model `EXCEPT` clause at
    `PermittedAlphabetConstraint` level instead.
    uPermittedAlphabetConstraint._setValuesuPermittedAlphabetConstraint._testValueaComponentPresentConstraintuCreate a ComponentPresentConstraint object.

    The ComponentPresentConstraint is only satisfied when the value
    is not `None`.

    The ComponentPresentConstraint object is typically used with
    `WithComponentsConstraint`.

    Examples
    --------
    .. code-block:: python

        present = ComponentPresentConstraint()

        # this will succeed
        present('whatever')

        # this will raise ValueConstraintError
        present(None)
    uComponentPresentConstraint._setValuesuComponentPresentConstraint._testValueaComponentAbsentConstraintuCreate a ComponentAbsentConstraint object.

    The ComponentAbsentConstraint is only satisfied when the value
    is `None`.

    The ComponentAbsentConstraint object is typically used with
    `WithComponentsConstraint`.

    Examples
    --------
    .. code-block:: python

        absent = ComponentAbsentConstraint()

        # this will succeed
        absent(None)

        # this will raise ValueConstraintError
        absent('whatever')
    uComponentAbsentConstraint._setValuesuComponentAbsentConstraint._testValueaWithComponentsConstraintuCreate a WithComponentsConstraint object.

    The `WithComponentsConstraint` satisfies any mapping object that has
    constrained fields present or absent, what is indicated by
    `ComponentPresentConstraint` and `ComponentAbsentConstraint`
    objects respectively.

    The `WithComponentsConstraint` object is typically applied
    to  :class:`~pyasn1.type.univ.Set` or
    :class:`~pyasn1.type.univ.Sequence` types.

    Parameters
    ----------
    *fields: :class:`tuple`
        Zero or more tuples of (`field`, `constraint`) indicating constrained
        fields.

    Notes
    -----
    On top of the primary use of `WithComponentsConstraint` (ensuring presence
    or absence of particular components of a :class:`~pyasn1.type.univ.Set` or
    :class:`~pyasn1.type.univ.Sequence`), it is also possible to pass any other
    constraint objects or their combinations. In case of scalar fields, these
    constraints will be verified in addition to the constraints belonging to
    scalar components themselves. However, formally, these additional
    constraints do not change the type of these ASN.1 objects.

    Examples
    --------

    .. code-block:: python

        class Item(Sequence):  #  Set is similar
            '''
            ASN.1 specification:

            Item ::= SEQUENCE {
                id    INTEGER OPTIONAL,
                name  OCTET STRING OPTIONAL
            } WITH COMPONENTS id PRESENT, name ABSENT | id ABSENT, name PRESENT
            '''
            componentType = NamedTypes(
                OptionalNamedType('id', Integer()),
                OptionalNamedType('name', OctetString())
            )
            withComponents = ConstraintsUnion(
                WithComponentsConstraint(
                    ('id', ComponentPresentConstraint()),
                    ('name', ComponentAbsentConstraint())
                ),
                WithComponentsConstraint(
                    ('id', ComponentAbsentConstraint()),
                    ('name', ComponentPresentConstraint())
                )
            )

        item = Item()

        # This will succeed
        item['id'] = 1

        # This will succeed
        item.reset()
        item['name'] = 'John'

        # This will fail (on encoding)
        item.reset()
        descr['id'] = 1
        descr['name'] = 'John'
    uWithComponentsConstraint._testValueuWithComponentsConstraint._setValuesaInnerTypeConstraintuValue must satisfy the type and presence constraintsuInnerTypeConstraint._testValueuInnerTypeConstraint._setValuesaConstraintsExclusionuCreate a ConstraintsExclusion logic operator object.

    The ConstraintsExclusion logic operator succeeds when the
    value does *not* satisfy the operand constraint.

    The ConstraintsExclusion object can be applied to
    any constraint and logic operator object.

    Parameters
    ----------
    *constraints:
        Constraint or logic operator objects.

    Examples
    --------
    .. code-block:: python

        class LuckyNumber(Integer):
            subtypeSpec = ConstraintsExclusion(
                SingleValueConstraint(13)
            )

        # this will succeed
        luckyNumber = LuckyNumber(12)

        # this will raise ValueConstraintError
        luckyNumber = LuckyNumber(13)

    Note
    ----
    The `FROM ... EXCEPT ...` ASN.1 clause should be modeled by combining
    constraint objects into one. See `PermittedAlphabetConstraint` for more
    information.
    uConstraintsExclusion._testValueuConstraintsExclusion._setValuesaAbstractConstraintSetuAbstractConstraintSet.__getitem__uAbstractConstraintSet.__iter__uAbstractConstraintSet.__add__a__radd__uAbstractConstraintSet.__radd__a__len__uAbstractConstraintSet.__len__uAbstractConstraintSet._setValuesaConstraintsIntersectionuCreate a ConstraintsIntersection logic operator object.

    The ConstraintsIntersection logic operator only succeeds
    if *all* its operands succeed.

    The ConstraintsIntersection object can be applied to
    any constraint and logic operator objects.

    The ConstraintsIntersection object duck-types the immutable
    container object like Python :py:class:`tuple`.

    Parameters
    ----------
    *constraints:
        Constraint or logic operator objects.

    Examples
    --------
    .. code-block:: python

        class CapitalAndSmall(IA5String):
            '''
            ASN.1 specification:

            CapitalAndSmall ::=
                IA5String (FROM ("A".."Z"|"a".."z"))
            '''
            subtypeSpec = ConstraintsIntersection(
                PermittedAlphabetConstraint('A', 'Z'),
                PermittedAlphabetConstraint('a', 'z')
            )

        # this will succeed
        capital_and_small = CapitalAndSmall('Hello')

        # this will raise ValueConstraintError
        capital_and_small = CapitalAndSmall('hello')
    uConstraintsIntersection._testValueaConstraintsUnionuCreate a ConstraintsUnion logic operator object.

    The ConstraintsUnion logic operator succeeds if
    *at least* a single operand succeeds.

    The ConstraintsUnion object can be applied to
    any constraint and logic operator objects.

    The ConstraintsUnion object duck-types the immutable
    container object like Python :py:class:`tuple`.

    Parameters
    ----------
    *constraints:
        Constraint or logic operator objects.

    Examples
    --------
    .. code-block:: python

        class CapitalOrSmall(IA5String):
            '''
            ASN.1 specification:

            CapitalOrSmall ::=
                IA5String (FROM ("A".."Z") | FROM ("a".."z"))
            '''
            subtypeSpec = ConstraintsUnion(
                PermittedAlphabetConstraint('A', 'Z'),
                PermittedAlphabetConstraint('a', 'z')
            )

        # this will succeed
        capital_or_small = CapitalAndSmall('Hello')

        # this will raise ValueConstraintError
        capital_or_small = CapitalOrSmall('hello!')
    uConstraintsUnion._testValueupyasn1\type\constraint.pyu<module pyasn1.type.constraint>Ta__class__TaselfaconstraintTaselfavalueTaselfTaselfavalueaidxTaselfaitemTaselfaotherTaselfaidxTaselfavaluesTaselfarepresentationTaselfavaluesaconstraintTaselfavalueswvTaselfavalueaidxaconstraintTaselfavalueaidxaconstraintastatusTaselfavalueaidxafieldaconstraintTaselfavalueaidxavalueSizeTaselfaotherConstraintu.pyasn1.type.error\a__doc__a__file__a__spec__aoriginahas_locationa__cached__upyasn1.errorTaPyAsn1ErrorlaPyAsn1Errora__prepare__aValueConstraintErrora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.type.errora__module__a__qualname__a__orig_bases__upyasn1\type\error.pyu<module pyasn1.type.error>u.pyasn1.type.namedtypec)a_NamedType__namea_NamedType__typea_NamedType__nameAndTypea_NamedType__openTypeu%s=%ranameaasn1ObjectaopenTypeu, open type %ru<%s object, type %s>a__name__a_NamedTypes__namedTypesa_NamedTypes__namedTypesLena_NamedTypes__computeMinTagSeta_NamedTypes__minTagSeta_NamedTypes__computeNameToPosMapa_NamedTypes__nameToPosMapa_NamedTypes__computeTagToPosMapa_NamedTypes__tagToPosMapaterminala_NamedTypes__computeAmbiguousTypesa_NamedTypes__ambiguousTypesa_NamedTypes__computeTagMapsTtTauniquea_NamedTypes__uniqueTagMapTFa_NamedTypes__nonUniqueTagMapaanyaisDefaultedaisOptionala_NamedTypes__hasOptionalOrDefaulta_NamedTypes__hasOpenTypesutoo many values to unpack (expected 2)a_NamedTypes__requiredComponentsa_NamedTypes__keysa_NamedTypes__valuesa_NamedTypes__itemsu, u%ru<%s object, types %s>lu<genexpr>uNamedTypes.__iter__.<locals>.<genexpr>a_PostponedError__errorMsgaerroraPyAsn1ErroratagMapaNamedTypesaPostponedErrorapresentTypesatagToPosMapuDuplicate component tag %s at %saidxanameToPosMapuDuplicate component name %s at %sTapartialAmbiguousTypesaselfaambiguousTypesDaterminaltTuType position out of rangeuReturn ASN.1 type object by its position in fields set.

        Parameters
        ----------
        idx: :py:class:`int`
            Field index

        Returns
        -------
        :
            ASN.1 type

        Raises
        ------
        ~pyasn1.error.PyAsn1Error
            If given position is out of fields range
        uType %s not founduReturn field position by its ASN.1 type.

        Parameters
        ----------
        tagSet: :class:`~pysnmp.type.tag.TagSet`
            ASN.1 tag set distinguishing one ASN.1 type from others.

        Returns
        -------
        : :py:class:`int`
            ASN.1 type position in fields set

        Raises
        ------
        ~pyasn1.error.PyAsn1Error
            If *tagSet* is not present or ASN.1 types are not unique within callee *NamedTypes*
        uReturn field name by its position in fields set.

        Parameters
        ----------
        idx: :py:class:`idx`
            Field index

        Returns
        -------
        : :py:class:`str`
            Field name

        Raises
        ------
        ~pyasn1.error.PyAsn1Error
            If given field name is not present in callee *NamedTypes*
        uName %s not founduReturn field position by filed name.

        Parameters
        ----------
        name: :py:class:`str`
            Field name

        Returns
        -------
        : :py:class:`int`
            Field position in fields set

        Raises
        ------
        ~pyasn1.error.PyAsn1Error
            If *name* is not present or not unique within callee *NamedTypes*
        uReturn ASN.1 types that are allowed at or past given field position.

        Some ASN.1 serialisation allow for skipping optional and defaulted fields.
        Some constructed ASN.1 types allow reordering of the fields. When recovering
        such objects it may be important to know which types can possibly be
        present at any given position in the field sets.

        Parameters
        ----------
        idx: :py:class:`int`
            Field index

        Returns
        -------
        : :class:`~pyasn1.type.tagmap.TagMap`
            Map if ASN.1 types allowed at given field position

        Raises
        ------
        ~pyasn1.error.PyAsn1Error
            If given position is out of fields range
        agetPositionByTypeuReturn the closest field position where given ASN.1 type is allowed.

        Some ASN.1 serialisation allow for skipping optional and defaulted fields.
        Some constructed ASN.1 types allow reordering of the fields. When recovering
        such objects it may be important to know at which field position, in field set,
        given *tagSet* is allowed at or past *idx* position.

        Parameters
        ----------
        tagSet: :class:`~pyasn1.type.tag.TagSet`
           ASN.1 type which field position to look up

        idx: :py:class:`int`
            Field position at or past which to perform ASN.1 type look up

        Returns
        -------
        : :py:class:`int`
            Field position in fields set

        Raises
        ------
        ~pyasn1.error.PyAsn1Error
            If *tagSet* is not present or not unique within callee *NamedTypes*
            or *idx* is out of fields range
        aminTagSetatagSetatagaTagSetuReturn the minimal TagSet among ASN.1 type in callee *NamedTypes*.

        Some ASN.1 types/serialisation protocols require ASN.1 types to be
        arranged based on their numerical tag value. The *minTagSet* property
        returns that.

        Returns
        -------
        : :class:`~pyasn1.type.tagset.TagSet`
            Minimal TagSet among ASN.1 types in callee *NamedTypes*
        uNon-unique tagSet %s of %s at %sanamedTypeaskipTypesaupdateadefaultTypeuDuplicate default ASN.1 type at %satagmapaTagMapuReturn a *TagMap* object from tags and types recursively.

        Return a :class:`~pyasn1.type.tagmap.TagMap` object by
        combining tags from *TagMap* objects of children types and
        associating them with their immediate child type.

        Example
        -------
        .. code-block:: python

           OuterType ::= CHOICE {
               innerType INTEGER
           }

        Calling *.tagMap* on *OuterType* will yield a map like this:

        .. code-block:: python

           Integer.tagSet -> Choice
        uReturn a *TagMap* object from unique tags and types recursively.

        Return a :class:`~pyasn1.type.tagmap.TagMap` object by
        combining tags from *TagMap* objects of children types and
        associating them with their immediate child type.

        Example
        -------
        .. code-block:: python

           OuterType ::= CHOICE {
               innerType INTEGER
           }

        Calling *.tagMapUnique* on *OuterType* will yield a map like this:

        .. code-block:: python

           Integer.tagSet -> Choice

        Note
        ----

        Duplicate *TagSet* objects found in the tree of children
        types would cause error.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysapyasn1Taerrorupyasn1.typeTatagTatagmapLaNamedTypeaOptionalNamedTypeaDefaultedNamedTypeaNamedTypesa__all__u<lambda>TOobjecta__prepare__aNamedTypea__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.namedtypea__module__uCreate named field object for a constructed ASN.1 type.

    The |NamedType| object represents a single name and ASN.1 type of a constructed ASN.1 type.

    |NamedType| objects are immutable and duck-type Python :class:`tuple` objects
    holding *name* and *asn1Object* components.

    Parameters
    ----------
    name: :py:class:`str`
        Field name

    asn1Object:
        ASN.1 type object
    a__qualname__Tna__init__uNamedType.__init__a__repr__uNamedType.__repr__a__eq__uNamedType.__eq__a__ne__uNamedType.__ne__a__lt__uNamedType.__lt__a__le__uNamedType.__le__a__gt__uNamedType.__gt__a__ge__uNamedType.__ge__a__hash__uNamedType.__hash__uNamedType.__getitem__a__iter__uNamedType.__iter__apropertyuNamedType.nameuNamedType.asn1ObjectuNamedType.openTypeagetNameuNamedType.getNameagetTypeuNamedType.getTypea__orig_bases__aOptionalNamedTypeaDefaultedNamedTypeuCreate a collection of named fields for a constructed ASN.1 type.

    The NamedTypes object represents a collection of named fields of a constructed ASN.1 type.

    *NamedTypes* objects are immutable and duck-type Python :class:`dict` objects
    holding *name* as keys and ASN.1 type object as values.

    Parameters
    ----------
    *namedTypes: :class:`~pyasn1.type.namedtype.NamedType`

    Examples
    --------

    .. code-block:: python

        class Description(Sequence):
            '''
            ASN.1 specification:

            Description ::= SEQUENCE {
                surname    IA5String,
                first-name IA5String OPTIONAL,
                age        INTEGER DEFAULT 40
            }
            '''
            componentType = NamedTypes(
                NamedType('surname', IA5String()),
                OptionalNamedType('first-name', IA5String()),
                DefaultedNamedType('age', Integer(40))
            )

        descr = Description()
        descr['surname'] = 'Smith'
        descr['first-name'] = 'John'
    uNamedTypes.__init__uNamedTypes.__repr__uNamedTypes.__eq__uNamedTypes.__ne__uNamedTypes.__lt__uNamedTypes.__le__uNamedTypes.__gt__uNamedTypes.__ge__uNamedTypes.__hash__uNamedTypes.__getitem__a__contains__uNamedTypes.__contains__uNamedTypes.__iter__a__bool__uNamedTypes.__bool__a__len__uNamedTypes.__len__avaluesuNamedTypes.valuesakeysuNamedTypes.keysaitemsuNamedTypes.itemsacloneuNamedTypes.cloneaobjectuNamedTypes.PostponedErroruNamedTypes.PostponedError.__init__uNamedTypes.PostponedError.__getitem__a__computeTagToPosMapuNamedTypes.__computeTagToPosMapa__computeNameToPosMapuNamedTypes.__computeNameToPosMapa__computeAmbiguousTypesuNamedTypes.__computeAmbiguousTypesagetTypeByPositionuNamedTypes.getTypeByPositionuNamedTypes.getPositionByTypeagetNameByPositionuNamedTypes.getNameByPositionagetPositionByNameuNamedTypes.getPositionByNameagetTagMapNearPositionuNamedTypes.getTagMapNearPositionagetPositionNearTypeuNamedTypes.getPositionNearTypea__computeMinTagSetuNamedTypes.__computeMinTagSetuNamedTypes.minTagSeta__computeTagMapsuNamedTypes.__computeTagMapsuNamedTypes.tagMapatagMapUniqueuNamedTypes.tagMapUniqueahasOptionalOrDefaultuNamedTypes.hasOptionalOrDefaultahasOpenTypesuNamedTypes.hasOpenTypesanamedTypesuNamedTypes.namedTypesarequiredComponentsuNamedTypes.requiredComponentsupyasn1\type\namedtype.pyTa.0wxTwxu<module pyasn1.type.namedtype>Ta__class__TaselfTaselfaambiguousTypesapartialAmbiguousTypesaidxanamedTypeTaselfaminTagSetanamedTypeaasn1ObjectatagSetTaselfanameToPosMapaidxanamedTypeTaselfauniqueapresentTypesaskipTypesadefaultTypeanamedTypeatagMapatagSetTaselfatagToPosMapaidxanamedTypeatagMapa_tagSetTaselfakeyTaselfaotherTaselfaidxTaselfaitemTaselfaerrorMsgTaselfanameaasn1ObjectaopenTypeTaselfanamedTypesakwargsTaselfarepresentationTaselfanameTaselfatagSetTaselfatagSetaidxu.pyasn1.type.namedvalea_NamedValues__namesa_NamedValues__numbersTOtupleOlistutoo many values to unpack (expected 2)aerroraPyAsn1ErroruNot a proper attribute-value pair %raanonymousNamesaappendaselfuDuplicate name %suDuplicate number  %s=%samaxllanumberu, aitemsu%s=%d:nl nu...:lnnu<%s object, enums %s>a__name__arepresentationuNamedValues.itemsuUnknown bit identifier(s): %sadifferencea__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1TaerroraNamedValuesa__all__TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.namedvala__module__uCreate named values object.

    The |NamedValues| object represents a collection of string names
    associated with numeric IDs. These objects are used for giving
    names to otherwise numerical values.

    |NamedValues| objects are immutable and duck-type Python
    :class:`dict` object mapping ID to name and vice-versa.

    Parameters
    ----------
    *args: variable number of two-element :py:class:`tuple`

        name: :py:class:`str`
            Value label

        value: :py:class:`int`
            Numeric value

    Keyword Args
    ------------
    name: :py:class:`str`
        Value label

    value: :py:class:`int`
        Numeric value

    Examples
    --------

    .. code-block:: pycon

        >>> nv = NamedValues('a', 'b', ('c', 0), d=1)
        >>> nv
        >>> {'c': 0, 'd': 1, 'a': 2, 'b': 3}
        >>> nv[0]
        'c'
        >>> nv['a']
        2
    a__qualname__a__init__uNamedValues.__init__a__repr__uNamedValues.__repr__a__eq__uNamedValues.__eq__a__ne__uNamedValues.__ne__a__lt__uNamedValues.__lt__a__le__uNamedValues.__le__a__gt__uNamedValues.__gt__a__ge__uNamedValues.__ge__a__hash__uNamedValues.__hash__uNamedValues.__getitem__a__len__uNamedValues.__len__a__contains__uNamedValues.__contains__a__iter__uNamedValues.__iter__avaluesuNamedValues.valuesakeysuNamedValues.keysa__add__uNamedValues.__add__acloneuNamedValues.cloneagetNameuNamedValues.getNameagetValueuNamedValues.getValueagetValuesuNamedValues.getValuesa__orig_bases__upyasn1\type\namedval.pyu<module pyasn1.type.namedval>Ta__class__TaselfanamedValuesTaselfakeyTaselfaotherTaselfTaselfaargsakwargsaanonymousNamesanamedValueanameanumberTaselfarepresentationTaselfaargsakwargsanewTaselfavalueTaselfanameTaselfanamesu.pyasn1.type.tag[laerroraPyAsn1ErroruNegative tag ID (%s) not alloweda_Tag__tagClassa_Tag__tagFormata_Tag__tagIda_Tag__tagClassIda_Tag__hashu[%s:%s:%s]u<%s object, tag %s>a__name__llaselfa__iter__uTag.__iter__atagClassatagFormatatagIduASN.1 tag class

        Returns
        -------
        : :py:class:`int`
            Tag class
        uASN.1 tag format

        Returns
        -------
        : :py:class:`int`
            Tag format
        uASN.1 tag ID

        Returns
        -------
        : :py:class:`int`
            Tag ID
        a_TagSet__baseTaga_TagSet__superTagsa_TagSet__superTagsClassIda_TagSet__lenOfSuperTagsa_TagSet__hashw-u%s:%s:%sutags auntaggedu<%s object, %s>uReturn base ASN.1 tag

        Returns
        -------
        : :class:`~pyasn1.type.tag.Tag`
            Base tag of this *TagSet*
        uReturn ASN.1 tags

        Returns
        -------
        : :py:class:`tuple`
            Tuple of :class:`~pyasn1.type.tag.Tag` objects that this *TagSet* contains
        atagClassUniversalTuCan't tag with UNIVERSAL class tagatagFormatConstructedaTagasuperTaguReturn explicitly tagged *TagSet*

        Create a new *TagSet* representing callee *TagSet* explicitly tagged
        with passed tag(s). With explicit tagging mode, new tags are appended
        to existing tag(s).

        Parameters
        ----------
        superTag: :class:`~pyasn1.type.tag.Tag`
            *Tag* object to tag this *TagSet*

        Returns
        -------
        : :class:`~pyasn1.type.tag.TagSet`
            New *TagSet* object
        l:nlnuReturn implicitly tagged *TagSet*

        Create a new *TagSet* representing callee *TagSet* implicitly tagged
        with passed tag(s). With implicit tagging mode, new tag(s) replace the
        last existing tag.

        Parameters
        ----------
        superTag: :class:`~pyasn1.type.tag.Tag`
            *Tag* object to tag this *TagSet*

        Returns
        -------
        : :class:`~pyasn1.type.tag.TagSet`
            New *TagSet* object
        uTest type relationship against given *TagSet*

        The callee is considered to be a supertype of given *TagSet*
        tag-wise if all tags in *TagSet* are present in the callee and
        they are in the same order.

        Parameters
        ----------
        tagSet: :class:`~pyasn1.type.tag.TagSet`
            *TagSet* object to evaluate against the callee

        Returns
        -------
        : :py:class:`bool`
            :obj:`True` if callee is a supertype of *tagSet*
        aTagSeta__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1TaerrorLatagClassUniversalatagClassApplicationatagClassContextatagClassPrivateatagFormatSimpleatagFormatConstructedatagCategoryImplicitatagCategoryExplicitatagCategoryUntaggedaTagaTagSeta__all__l@atagClassApplicationlatagClassContextlatagClassPrivateatagFormatSimplel atagCategoryImplicitatagCategoryExplicitlatagCategoryUntaggedTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.taga__module__uCreate ASN.1 tag

    Represents ASN.1 tag that can be attached to a ASN.1 type to make
    types distinguishable from each other.

    *Tag* objects are immutable and duck-type Python :class:`tuple` objects
    holding three integer components of a tag.

    Parameters
    ----------
    tagClass: :py:class:`int`
        Tag *class* value

    tagFormat: :py:class:`int`
        Tag *format* value

    tagId: :py:class:`int`
        Tag ID value
    a__qualname__a__init__uTag.__init__a__repr__uTag.__repr__a__eq__uTag.__eq__a__ne__uTag.__ne__a__lt__uTag.__lt__a__le__uTag.__le__a__gt__uTag.__gt__a__ge__uTag.__ge__a__hash__uTag.__hash__uTag.__getitem__a__and__uTag.__and__a__or__uTag.__or__apropertyuTag.tagClassuTag.tagFormatuTag.tagIda__orig_bases__uCreate a collection of ASN.1 tags

    Represents a combination of :class:`~pyasn1.type.tag.Tag` objects
    that can be attached to a ASN.1 type to make types distinguishable
    from each other.

    *TagSet* objects are immutable and duck-type Python :class:`tuple` objects
    holding arbitrary number of :class:`~pyasn1.type.tag.Tag` objects.

    Parameters
    ----------
    baseTag: :class:`~pyasn1.type.tag.Tag`
        Base *Tag* object. This tag survives IMPLICIT tagging.

    *superTags: :class:`~pyasn1.type.tag.Tag`
        Additional *Tag* objects taking part in subtyping.

    Examples
    --------
    .. code-block:: python

        class OrderNumber(NumericString):
            '''
            ASN.1 specification

            Order-number ::=
                [APPLICATION 5] IMPLICIT NumericString
            '''
            tagSet = NumericString.tagSet.tagImplicitly(
                Tag(tagClassApplication, tagFormatSimple, 5)
            )

        orderNumber = OrderNumber('1234')
    TTuTagSet.__init__uTagSet.__repr__a__add__uTagSet.__add__a__radd__uTagSet.__radd__uTagSet.__getitem__uTagSet.__eq__uTagSet.__ne__uTagSet.__lt__uTagSet.__le__uTagSet.__gt__uTagSet.__ge__uTagSet.__hash__a__len__uTagSet.__len__abaseTaguTagSet.baseTagasuperTagsuTagSet.superTagsatagExplicitlyuTagSet.tagExplicitlyatagImplicitlyuTagSet.tagImplicitlyaisSuperTagSetOfuTagSet.isSuperTagSetOfagetBaseTaguTagSet.getBaseTagainitTagSetupyasn1\type\tag.pyu<module pyasn1.type.tag>Ta__class__TaselfasuperTagTaselfaotherTagTaselfaotherTaselfwiTaselfaidxTaselfTaselfabaseTagasuperTagsTaselfatagClassatagFormatatagIdTaselfarepresentationTatagTaselfatagSetu.pyasn1.type.tagmapCa_TagMap__presentTypesa_TagMap__skipTypesa_TagMap__defaultTypeaerroraPyAsn1ErrorTuKey in negative mapu%s objecta__name__u, present %su, skip %su, default %su<%s>uReturn *TagSet* to ASN.1 type map present in callee *TagMap*uReturn *TagSet* collection unconditionally absent in callee *TagMap*uReturn default ASN.1 type being returned for any missing *TagSet*apresentTypesaskipTypesadefaultTypea__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1TaerrorlaTagMapa__all__TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.tagmapa__module__uMap *TagSet* objects to ASN.1 types

    Create an object mapping *TagSet* object to ASN.1 type.

    *TagMap* objects are immutable and duck-type read-only Python
    :class:`dict` objects holding *TagSet* objects as keys and ASN.1
    type objects as values.

    Parameters
    ----------
    presentTypes: :py:class:`dict`
        Map of :class:`~pyasn1.type.tag.TagSet` to ASN.1 objects considered
        as being unconditionally present in the *TagMap*.

    skipTypes: :py:class:`dict`
        A collection of :class:`~pyasn1.type.tag.TagSet` objects considered
        as absent in the *TagMap* even when *defaultType* is present.

    defaultType: ASN.1 type object
        An ASN.1 type object callee *TagMap* returns for any *TagSet* key not present
        in *presentTypes* (unless given key is present in *skipTypes*).
    a__qualname__Tnnna__init__uTagMap.__init__a__contains__uTagMap.__contains__uTagMap.__getitem__a__iter__uTagMap.__iter__a__repr__uTagMap.__repr__apropertyuTagMap.presentTypesuTagMap.skipTypesuTagMap.defaultTypeagetPosMapuTagMap.getPosMapagetNegMapuTagMap.getNegMapagetDefuTagMap.getDefa__orig_bases__upyasn1\type\tagmap.pyu<module pyasn1.type.tagmap>Ta__class__TaselfatagSetTaselfapresentTypesaskipTypesadefaultTypeTaselfTaselfarepresentationu.pyasn1.type.univanamedValuesabaseaSimpleAsn1Typea__init__aselfakwargsaclonea_valueapowaRealaroundamathaflooraceilatruncaerroraPyAsn1ErroruCan't coerce %r into integer: %sasysaexc_infolabitLengthamaxaintegerlaleadingZeroBitsasetBitLengthanoValueafromBinaryStringabinValueDainternalFormattafromHexStringapopTahexValueadefaultBinValueadefaultHexValueaasBinaryaprettyInaindicesubit index out of rangealengtha__iter__uBitString.__iter__aSizedIntegeravalueabitStringaoctetsaocts2intsaasOctetsuGet |ASN.1| value as a sequence of 8-bit integers.

        If |ASN.1| object length is not a multiple of 8, result
        will be left-padded with zeros.
        ato_bytesTalengthuGet |ASN.1| value as a sequence of octets.

        If |ASN.1| object length is not a multiple of 8, result
        will be left-padded with zeros.
        uGet |ASN.1| value as a single integer value.
        :lnnw0uGet |ASN.1| value as a text string of bits.
        llu%s.fromHexString() error: %sa__name__uCreate a |ASN.1| object initialized from the hex string.

        Parameters
        ----------
        value: :class:`str`
            Text string like 'DEADBEEF'
        lu%s.fromBinaryString() error: %suCreate a |ASN.1| object initialized from a string of '0' and '1'.

        Parameters
        ----------
        value: :class:`str`
            Text string like '1010111'
        afrom_bytesluCreate a |ASN.1| object initialized from a string.

        Parameters
        ----------
        value: :class:`str` (Py2) or :class:`bytes` (Py3)
            Text string like '\\x01\\xff' (Py2) or b'\\x01\\xff' (Py3)
        aisStringTypeTlw':lnnu'B:llnu'HuBad BIT STRING value notation %saisdigitasplitTw,astripuunknown bit name(s) in %ranumberarightmostPositionastartswithTu0xTu0bTOtupleOlistuw1aBitStringaintTypesuBad BitString initializer type '%s'aencodingaencodeaPyAsn1UnicodeEncodeErroruCan't encode string '%s' with '%s' codecaOctetStringadecodeaPyAsn1UnicodeDecodeErroruCan't decode string '%s' with '%s' codec at '%s'aprettyOutaasNumbersl l~u0xa__str__u%.2xu<genexpr>uOctetString.prettyPrint.<locals>.<genexpr>abitNolwraappendabyteTw0w1uNon-binary OCTET STRING initializer %saints2octswpastr2octsTuaindexuIndicate if this |ASN.1| object is a prefix of other |ASN.1| object.

        Parameters
        ----------
        other: |ASN.1| object
            |ASN.1| object

        Returns
        -------
        : :class:`bool`
            :obj:`True` if this |ASN.1| object is a parent (e.g. prefix) of the other |ASN.1| object
            or :obj:`False` otherwise.
        aObjectIdentifierw-uMalformed Object ID %s at %s: %sTw.TEValueErrorETypeErroruMalformed Object ID %s at %sw.utoo many values to unpack (expected 3)wml
weanumericTypesuLame Real value syntax: %sa_infTll
uProhibited base for Real value: %sa_Real__normalizeBase10uBad real value syntax: %su<overflow>a_plusInfuIndicate PLUS-INFINITY object value

        Returns
        -------
        : :class:`bool`
            :obj:`True` if calling object represents plus infinity
            or :obj:`False` otherwise.

        a_minusInfuIndicate MINUS-INFINITY object value

        Returns
        -------
        : :class:`bool`
            :obj:`True` if calling object represents minus infinity
            or :obj:`False` otherwise.
        TuInvalid infinite value operationaisPlusInfaisMinusInfaisInfTacomponentTypeatagSetasubtypeSpecutoo many values to unpack (expected 2)TuConflicting positional and keyword params!acomponentTypea_componentValuesaConstructedAsn1TypeagetComponentByPositionasetComponentByPositionavaluesaitemsareverseasortedTakeyareverseuSequenceOfAndSetOfBase.__iter__amyCloneacloneValueFlagTacloneValueFlagadefaultainstantiateTuSequenceOf/SetOf index is out of rangeaisValueacomponentValueuReturn |ASN.1| type component value by position.

        Equivalent to Python sequence subscription operation (e.g. `[]`).

        Parameters
        ----------
        idx : :class:`int`
            Component index (zero-based). Must either refer to an existing
            component or to N+1 component (if *componentType* is set). In the latter
            case a new component type gets instantiated and appended to the |ASN.1|
            sequence.

        Keyword Args
        ------------
        default: :class:`object`
            If set and requested component is a schema object, return the `default`
            object instead of the requested component.

        instantiate: :class:`bool`
            If :obj:`True` (default), inner component will be automatically instantiated.
            If :obj:`False` either existing component or the :class:`NoValue` object will be
            returned.

        Returns
        -------
        : :py:class:`~pyasn1.type.base.PyAsn1Item`
            Instantiate |ASN.1| component type or return existing component value

        Examples
        --------

        .. code-block:: python

            # can also be SetOf
            class MySequenceOf(SequenceOf):
                componentType = OctetString()

            s = MySequenceOf()

            # returns component #0 with `.isValue` property False
            s.getComponentByPosition(0)

            # returns None
            s.getComponentByPosition(0, default=None)

            s.clear()

            # returns noValue
            s.getComponentByPosition(0, instantiate=False)

            # sets component #0 to OctetString() ASN.1 schema
            # object and returns it
            s.getComponentByPosition(0, instantiate=True)

            # sets component #0 to ASN.1 value object
            s.setComponentByPosition(0, 'ABCD')

            # returns OctetString('ABCD') value object
            s.getComponentByPosition(0, instantiate=False)

            s.clear()

            # returns noValue
            s.getComponentByPosition(0, instantiate=False)
        astartIdxaverifyConstraintsamatchTagsamatchConstraintsagetTuComponent type not definedaAsn1ItemTavalueuNon-ASN.1 value %r and undefined component type at %rastrictConstraintsaisSameTypeWithaisSuperTypeOfatypeIdaAnyuComponent value is tag-incompatible: %r vs %ruAssign |ASN.1| type component by position.

        Equivalent to Python sequence item assignment operation (e.g. `[]`)
        or list.append() (when idx == len(self)).

        Parameters
        ----------
        idx: :class:`int`
            Component index (zero-based). Must either refer to existing
            component or to N+1 component. In the latter case a new component
            type gets instantiated (if *componentType* is set, or given ASN.1
            object is taken otherwise) and appended to the |ASN.1| sequence.

        Keyword Args
        ------------
        value: :class:`object` or :py:class:`~pyasn1.type.base.PyAsn1Item` derivative
            A Python value to initialize |ASN.1| component with (if *componentType* is set)
            or ASN.1 value object to assign to |ASN.1| component.
            If `value` is not given, schema object will be set as a component.

        verifyConstraints: :class:`bool`
             If :obj:`False`, skip constraints validation

        matchTags: :class:`bool`
             If :obj:`False`, skip component tags matching

        matchConstraints: :class:`bool`
             If :obj:`False`, skip component constraints matching

        Returns
        -------
        self

        Raises
        ------
        ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
            On constraint violation or bad initializer
        IndexError
            When idx > len(self)
        atagMapuRemove all components and become an empty |ASN.1| value object.

        Has the same effect on |ASN.1| object as it does on :class:`list`
        built-in.
        uRemove all components and become a |ASN.1| schema object.

        See :meth:`isValue` property for more information on the
        distinction between value and schema objects.
        u:
arepresentationw ascopeu<empty>aprettyPrintu%s -> %s {
atagSetaprettyPrintTypew
w}uIndicate that |ASN.1| object represents ASN.1 value.

        If *isValue* is :obj:`False` then this object represents just ASN.1 schema.

        If *isValue* is :obj:`True` then, in addition to its ASN.1 schema features,
        this object can also be used like a Python built-in object
        (e.g. :class:`int`, :class:`str`, :class:`dict` etc.).

        Returns
        -------
        : :class:`bool`
            :obj:`False` if object represents just ASN.1 schema.
            :obj:`True` if object represents ASN.1 schema and can be used as a normal value.

        Note
        ----
        There is an important distinction between PyASN1 schema and value objects.
        The PyASN1 schema objects can only participate in ASN.1 schema-related
        operations (e.g. defining or testing the structure of the data). Most
        obvious uses of ASN.1 schema is to guide serialisation codecs whilst
        encoding/decoding serialised ASN.1 contents.

        The PyASN1 value objects can **additionally** participate in many operations
        involving regular Python objects (e.g. arithmetic, comprehension etc).
        asubtypeSpecamappinguRun necessary checks to ensure |ASN.1| object consistency.

        Default action is to verify |ASN.1| object against constraints imposed
        by `subtypeSpec`.

        Raises
        ------
        :py:class:`~pyasn1.error.PyAsn1tError` on any inconsistencies found
        a_keyToIdxMapa_idxToKeyMapuSequenceAndSetBase.DynamicNames.__iter__.<locals>.<genexpr>TuType position out of rangeuName %s not foundufield-%da_componentTypeLenaDynamicNamesa_dynamicNamesagetComponentByNameasetComponentByNameuSequenceAndSetBase.valuesanameuSequenceAndSetBase.itemsuRemove all components and become an empty |ASN.1| value object.

        Has the same effect on |ASN.1| object as it does on :class:`dict`
        built-in.
        agetPositionByNameTadefaultainstantiateuReturns |ASN.1| type component by name.

        Equivalent to Python :class:`dict` subscription operation (e.g. `[]`).

        Parameters
        ----------
        name: :class:`str`
            |ASN.1| type component name

        Keyword Args
        ------------
        default: :class:`object`
            If set and requested component is a schema object, return the `default`
            object instead of the requested component.

        instantiate: :class:`bool`
            If :obj:`True` (default), inner component will be automatically
            instantiated.
            If :obj:`False` either existing component or the :class:`NoValue`
            object will be returned.

        Returns
        -------
        : :py:class:`~pyasn1.type.base.PyAsn1Item`
            Instantiate |ASN.1| component type or return existing
            component value
        uAssign |ASN.1| type component by name.

        Equivalent to Python :class:`dict` item assignment operation (e.g. `[]`).

        Parameters
        ----------
        name: :class:`str`
            |ASN.1| type component name

        Keyword Args
        ------------
        value: :class:`object` or :py:class:`~pyasn1.type.base.PyAsn1Item` derivative
            A Python value to initialize |ASN.1| component with (if *componentType* is set)
            or ASN.1 value object to assign to |ASN.1| component.
            If `value` is not given, schema object will be set as a component.

        verifyConstraints: :class:`bool`
             If :obj:`False`, skip constraints validation

        matchTags: :class:`bool`
             If :obj:`False`, skip component tags matching

        matchConstraints: :class:`bool`
             If :obj:`False`, skip component constraints matching

        Returns
        -------
        self
        aidxuReturns |ASN.1| type component by index.

        Equivalent to Python sequence subscription operation (e.g. `[]`).

        Parameters
        ----------
        idx: :class:`int`
            Component index (zero-based). Must either refer to an existing
            component or (if *componentType* is set) new ASN.1 schema object gets
            instantiated.

        Keyword Args
        ------------
        default: :class:`object`
            If set and requested component is a schema object, return the `default`
            object instead of the requested component.

        instantiate: :class:`bool`
            If :obj:`True` (default), inner component will be automatically
            instantiated.
            If :obj:`False` either existing component or the :class:`NoValue`
            object will be returned.

        Returns
        -------
        : :py:class:`~pyasn1.type.base.PyAsn1Item`
            a PyASN1 object

        Examples
        --------

        .. code-block:: python

            # can also be Set
            class MySequence(Sequence):
                componentType = NamedTypes(
                    NamedType('id', OctetString())
                )

            s = MySequence()

            # returns component #0 with `.isValue` property False
            s.getComponentByPosition(0)

            # returns None
            s.getComponentByPosition(0, default=None)

            s.clear()

            # returns noValue
            s.getComponentByPosition(0, instantiate=False)

            # sets component #0 to OctetString() ASN.1 schema
            # object and returns it
            s.getComponentByPosition(0, instantiate=True)

            # sets component #0 to ASN.1 value object
            s.setComponentByPosition(0, 'ABCD')

            # returns OctetString('ABCD') value object
            s.getComponentByPosition(0, instantiate=False)

            s.clear()

            # returns noValue
            s.getComponentByPosition(0, instantiate=False)
        Tucomponent index out of rangeacomponentTypeLenagetTypeByPositionaisDefaultedu%s can cast only scalar valuesu%s undefined component typeasubComponentTypeaopenTypeaaddFieldTuComponent index out of rangeacomponentValuesuAssign |ASN.1| type component by position.

        Equivalent to Python sequence item assignment operation (e.g. `[]`).

        Parameters
        ----------
        idx : :class:`int`
            Component index (zero-based). Must either refer to existing
            component (if *componentType* is set) or to N+1 component
            otherwise. In the latter case a new component of given ASN.1
            type gets instantiated and appended to |ASN.1| sequence.

        Keyword Args
        ------------
        value: :class:`object` or :py:class:`~pyasn1.type.base.PyAsn1Item` derivative
            A Python value to initialize |ASN.1| component with (if *componentType* is set)
            or ASN.1 value object to assign to |ASN.1| component.
            If `value` is not given, schema object will be set as a component.

        verifyConstraints : :class:`bool`
             If :obj:`False`, skip constraints validation

        matchTags: :class:`bool`
             If :obj:`False`, skip component tags matching

        matchConstraints: :class:`bool`
             If :obj:`False`, skip component constraints matching

        Returns
        -------
        self
        anamedTypesaisOptionaluIndicate that |ASN.1| object represents ASN.1 value.

        If *isValue* is :obj:`False` then this object represents just ASN.1 schema.

        If *isValue* is :obj:`True` then, in addition to its ASN.1 schema features,
        this object can also be used like a Python built-in object (e.g.
        :class:`int`, :class:`str`, :class:`dict` etc.).

        Returns
        -------
        : :class:`bool`
            :obj:`False` if object represents just ASN.1 schema.
            :obj:`True` if object represents ASN.1 schema and can be used as a
            normal value.

        Note
        ----
        There is an important distinction between PyASN1 schema and value objects.
        The PyASN1 schema objects can only participate in ASN.1 schema-related
        operations (e.g. defining or testing the structure of the data). Most
        obvious uses of ASN.1 schema is to guide serialisation codecs whilst
        encoding/decoding serialised ASN.1 contents.

        The PyASN1 value objects can **additionally** participate in many operations
        involving regular Python objects (e.g. arithmetic, comprehension etc).

        It is sufficient for |ASN.1| objects to have all non-optional and non-defaulted
        components being value objects to be considered as a value objects as a whole.
        In other words, even having one or more optional components not turned into
        value objects, |ASN.1| object is still considered as a value object. Defaulted
        components are normally value objects by default.
        agetNameByPositionu%s=%s
uReturn an object representation string.

        Returns
        -------
        : :class:`str`
            Human-friendly object representation.
        u"%s"u%s = %s
agetTagMapNearPositionagetPositionNearTypeagetPositionByTypeaSetagetComponentTtTainnerFlaguReturns |ASN.1| type component by ASN.1 tag.

        Parameters
        ----------
        tagSet : :py:class:`~pyasn1.type.tag.TagSet`
            Object representing ASN.1 tags to identify one of
            |ASN.1| object component

        Keyword Args
        ------------
        default: :class:`object`
            If set and requested component is a schema object, return the `default`
            object instead of the requested component.

        instantiate: :class:`bool`
            If :obj:`True` (default), inner component will be automatically
            instantiated.
            If :obj:`False` either existing component or the :class:`noValue`
            object will be returned.

        Returns
        -------
        : :py:class:`~pyasn1.type.base.PyAsn1Item`
            a pyasn1 object
        asetComponentByTypeuAssign |ASN.1| type component by ASN.1 tag.

        Parameters
        ----------
        tagSet : :py:class:`~pyasn1.type.tag.TagSet`
            Object representing ASN.1 tags to identify one of
            |ASN.1| object component

        Keyword Args
        ------------
        value: :class:`object` or :py:class:`~pyasn1.type.base.PyAsn1Item` derivative
            A Python value to initialize |ASN.1| component with (if *componentType* is set)
            or ASN.1 value object to assign to |ASN.1| component.
            If `value` is not given, schema object will be set as a component.

        verifyConstraints : :class:`bool`
            If :obj:`False`, skip constraints validation

        matchTags: :class:`bool`
            If :obj:`False`, skip component tags matching

        matchConstraints: :class:`bool`
            If :obj:`False`, skip component constraints matching

        innerFlag: :class:`bool`
            If :obj:`True`, search for matching *tagSet* recursively.

        Returns
        -------
        self
        atagMapUniquea_currentIdxagetNameuChoice.__iter__uChoice.valuesakeysuChoice.keysuChoice.itemsTuComponent not chosenacomponentaChoiceaeffectiveTagSeta__doc__uAssign |ASN.1| type component by position.

        Equivalent to Python sequence item assignment operation (e.g. `[]`).

        Parameters
        ----------
        idx: :class:`int`
            Component index (zero-based). Must either refer to existing
            component or to N+1 component. In the latter case a new component
            type gets instantiated (if *componentType* is set, or given ASN.1
            object is taken otherwise) and appended to the |ASN.1| sequence.

        Keyword Args
        ------------
        value: :class:`object` or :py:class:`~pyasn1.type.base.PyAsn1Item` derivative
            A Python value to initialize |ASN.1| component with (if *componentType* is set)
            or ASN.1 value object to assign to |ASN.1| component. Once a new value is
            set to *idx* component, previous value is dropped.
            If `value` is not given, schema object will be set as a component.

        verifyConstraints : :class:`bool`
            If :obj:`False`, skip constraints validation

        matchTags: :class:`bool`
            If :obj:`False`, skip component tags matching

        matchConstraints: :class:`bool`
            If :obj:`False`, skip component constraints matching

        Returns
        -------
        self
        uReturn a :class:`~pyasn1.type.tag.TagSet` object of the currently initialized component or self (if |ASN.1| is tagged).afgetu"Return a :class:`~pyasn1.type.tagmap.TagMap` object mapping
            ASN.1 tags to ASN.1 objects contained within callee.
        uReturn currently assigned component of the |ASN.1| object.

        Returns
        -------
        : :py:class:`~pyasn1.type.base.PyAsn1Item`
            a PyASN1 object
        uReturn the name of currently assigned component of the |ASN.1| object.

        Returns
        -------
        : :py:class:`str`
            |ASN.1| component name
        uIndicate that |ASN.1| object represents ASN.1 value.

        If *isValue* is :obj:`False` then this object represents just ASN.1 schema.

        If *isValue* is :obj:`True` then, in addition to its ASN.1 schema features,
        this object can also be used like a Python built-in object (e.g.
        :class:`int`, :class:`str`, :class:`dict` etc.).

        Returns
        -------
        : :class:`bool`
            :obj:`False` if object represents just ASN.1 schema.
            :obj:`True` if object represents ASN.1 schema and can be used as a normal
            value.

        Note
        ----
        There is an important distinction between PyASN1 schema and value objects.
        The PyASN1 schema objects can only participate in ASN.1 schema-related
        operations (e.g. defining or testing the structure of the data). Most
        obvious uses of ASN.1 schema is to guide serialisation codecs whilst
        encoding/decoding serialised ASN.1 contents.

        The PyASN1 value objects can **additionally** participate in many operations
        involving regular Python objects (e.g. arithmetic, comprehension etc).
        aclearaminTagSeta_tagMapatagmapaTagMapaeooaendOfOctetsa__file__a__spec__aoriginahas_locationa__cached__apyasn1Taerrorupyasn1.codec.berTaeooupyasn1.compatTaintegerTaoctetsupyasn1.typeTabaseTaconstraintaconstraintTanamedtypeanamedtypeTanamedvalanamedvalTatagatagTatagmapaNoValueLaIntegeraBooleanaBitStringaOctetStringaNullaObjectIdentifieraRealaEnumeratedaSequenceOfAndSetOfBaseaSequenceOfaSetOfaSequenceAndSetBaseaSequenceaSetaChoiceaAnyaNoValueanoValuea__all__a__prepare__aIntegera__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.univa__module__uCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python :class:`int` objects.

    Keyword Args
    ------------
    value: :class:`int`, :class:`str` or |ASN.1| object
        Python :class:`int` or :class:`str` literal or |ASN.1| class
        instance. If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    namedValues: :py:class:`~pyasn1.type.namedval.NamedValues`
        Object representing non-default symbolic aliases for numbers

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------

    .. code-block:: python

        class ErrorCode(Integer):
            '''
            ASN.1 specification:

            ErrorCode ::=
                INTEGER { disk-full(1), no-disk(-1),
                          disk-not-formatted(2) }

            error ErrorCode ::= disk-full
            '''
            namedValues = NamedValues(
                ('disk-full', 1), ('no-disk', -1),
                ('disk-not-formatted', 2)
            )

        error = ErrorCode('disk-full')
    a__qualname__ainitTagSetaTagatagClassUniversalatagFormatSimpleaConstraintsIntersectionaNamedValuesagetTypeIduInteger.__init__a__and__uInteger.__and__a__rand__uInteger.__rand__a__or__uInteger.__or__a__ror__uInteger.__ror__a__xor__uInteger.__xor__a__rxor__uInteger.__rxor__a__lshift__uInteger.__lshift__a__rshift__uInteger.__rshift__a__add__uInteger.__add__a__radd__uInteger.__radd__a__sub__uInteger.__sub__a__rsub__uInteger.__rsub__a__mul__uInteger.__mul__a__rmul__uInteger.__rmul__a__mod__uInteger.__mod__a__rmod__uInteger.__rmod__Tna__pow__uInteger.__pow__a__rpow__uInteger.__rpow__a__floordiv__uInteger.__floordiv__a__rfloordiv__uInteger.__rfloordiv__a__truediv__uInteger.__truediv__a__rtruediv__uInteger.__rtruediv__a__divmod__uInteger.__divmod__a__rdivmod__uInteger.__rdivmod__a__hash__a__int__uInteger.__int__a__float__uInteger.__float__a__abs__uInteger.__abs__a__index__uInteger.__index__a__pos__uInteger.__pos__a__neg__uInteger.__neg__a__invert__uInteger.__invert__a__round__uInteger.__round__a__floor__uInteger.__floor__a__ceil__uInteger.__ceil__a__trunc__uInteger.__trunc__a__lt__uInteger.__lt__a__le__uInteger.__le__a__eq__uInteger.__eq__a__ne__uInteger.__ne__a__gt__uInteger.__gt__a__ge__uInteger.__ge__uInteger.prettyInuInteger.prettyOutagetNamedValuesuInteger.getNamedValuesa__orig_bases__aBooleanuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python :class:`int` objects.

    Keyword Args
    ------------
    value: :class:`int`, :class:`str` or |ASN.1| object
        Python :class:`int` or :class:`str` literal or |ASN.1| class
        instance. If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s).Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    namedValues: :py:class:`~pyasn1.type.namedval.NamedValues`
        Object representing non-default symbolic aliases for numbers

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class RoundResult(Boolean):
            '''
            ASN.1 specification:

            RoundResult ::= BOOLEAN

            ok RoundResult ::= TRUE
            ko RoundResult ::= FALSE
            '''
        ok = RoundResult(True)
        ko = RoundResult(False)
    aSingleValueConstraintTllTTaFalselTaTruelaSizedIntegerBaseuSizedInteger.setBitLengtha__len__uSizedInteger.__len__uCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type both Python :class:`tuple` (as a tuple
    of bits) and :class:`int` objects.

    Keyword Args
    ------------
    value: :class:`int`, :class:`str` or |ASN.1| object
        Python :class:`int` or :class:`str` literal representing binary
        or hexadecimal number or sequence of integer bits or |ASN.1| object.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    namedValues: :py:class:`~pyasn1.type.namedval.NamedValues`
        Object representing non-default symbolic aliases for numbers

    binValue: :py:class:`str`
        Binary string initializer to use instead of the *value*.
        Example: '10110011'.

    hexValue: :py:class:`str`
        Hexadecimal string initializer to use instead of the *value*.
        Example: 'DEADBEEF'.

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class Rights(BitString):
            '''
            ASN.1 specification:

            Rights ::= BIT STRING { user-read(0), user-write(1),
                                    group-read(2), group-write(3),
                                    other-read(4), other-write(5) }

            group1 Rights ::= { group-read, group-write }
            group2 Rights ::= '0011'B
            group3 Rights ::= '3'H
            '''
            namedValues = NamedValues(
                ('user-read', 0), ('user-write', 1),
                ('group-read', 2), ('group-write', 3),
                ('other-read', 4), ('other-write', 5)
            )

        group1 = Rights(('group-read', 'group-write'))
        group2 = Rights('0011')
        group3 = Rights(0x3)
    luBitString.__init__uBitString.__str__uBitString.__eq__uBitString.__ne__uBitString.__lt__uBitString.__le__uBitString.__gt__uBitString.__ge__uBitString.__len__uBitString.__getitem__a__reversed__uBitString.__reversed__uBitString.__add__uBitString.__radd__uBitString.__mul__uBitString.__rmul__uBitString.__lshift__uBitString.__rshift__uBitString.__int__uBitString.__float__uBitString.asNumbersuBitString.asOctetsaasIntegeruBitString.asIntegeruBitString.asBinaryaclassmethodTFnuBitString.fromHexStringuBitString.fromBinaryStringTFnlafromOctetStringuBitString.fromOctetStringuBitString.prettyInuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python 2 :class:`str` or
    Python 3 :class:`bytes`. When used in Unicode context, |ASN.1| type
    assumes "|encoding|" serialisation.

    Keyword Args
    ------------
    value: :class:`unicode`, :class:`str`, :class:`bytes` or |ASN.1| object
        class:`str` (Python 2) or :class:`bytes` (Python 3), alternatively
        class:`unicode` object (Python 2) or :class:`str` (Python 3)
        representing character string to be serialised into octets
        (note `encoding` parameter) or |ASN.1| object.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    encoding: :py:class:`str`
        Unicode codec ID to encode/decode :class:`unicode` (Python 2) or
        :class:`str` (Python 3) the payload when |ASN.1| object is used
        in text string context.

    binValue: :py:class:`str`
        Binary string initializer to use instead of the *value*.
        Example: '10110011'.

    hexValue: :py:class:`str`
        Hexadecimal string initializer to use instead of the *value*.
        Example: 'DEADBEEF'.

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class Icon(OctetString):
            '''
            ASN.1 specification:

            Icon ::= OCTET STRING

            icon1 Icon ::= '001100010011001000110011'B
            icon2 Icon ::= '313233'H
            '''
        icon1 = Icon.fromBinaryString('001100010011001000110011')
        icon2 = Icon.fromHexString('313233')
    uiso-8859-1uOctetString.__init__uOctetString.prettyInuOctetString.__str__a__bytes__uOctetString.__bytes__uOctetString.asOctetsuOctetString.asNumbersuOctetString.prettyOutuOctetString.prettyPrintastaticmethoduOctetString.fromBinaryStringuOctetString.fromHexStringuOctetString.__len__uOctetString.__getitem__uOctetString.__iter__a__contains__uOctetString.__contains__uOctetString.__add__uOctetString.__radd__uOctetString.__mul__uOctetString.__rmul__uOctetString.__int__uOctetString.__float__uOctetString.__reversed__aNulluCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python :class:`str` objects
    (always empty).

    Keyword Args
    ------------
    value: :class:`str` or |ASN.1| object
        Python empty :class:`str` literal or any object that evaluates to :obj:`False`
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class Ack(Null):
            '''
            ASN.1 specification:

            Ack ::= NULL
            '''
        ack = Ack('')
    luNull.prettyInTOintTOfloatuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python :class:`tuple` objects
    (tuple of non-negative integers).

    Keyword Args
    ------------
    value: :class:`tuple`, :class:`str` or |ASN.1| object
        Python sequence of :class:`int` or :class:`str` literal or |ASN.1| object.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class ID(ObjectIdentifier):
            '''
            ASN.1 specification:

            ID ::= OBJECT IDENTIFIER

            id-edims ID ::= { joint-iso-itu-t mhs-motif(6) edims(7) }
            id-bp ID ::= { id-edims 11 }
            '''
        id_edims = ID('2.6.7')
        id_bp = id_edims + (11,)
    luObjectIdentifier.__add__uObjectIdentifier.__radd__aasTupleuObjectIdentifier.asTupleuObjectIdentifier.__len__uObjectIdentifier.__getitem__uObjectIdentifier.__iter__uObjectIdentifier.__contains__uObjectIdentifier.indexaisPrefixOfuObjectIdentifier.isPrefixOfuObjectIdentifier.prettyInuObjectIdentifier.prettyOutuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python :class:`float` objects.
    Additionally, |ASN.1| objects behave like a :class:`tuple` in which case its
    elements are mantissa, base and exponent.

    Keyword Args
    ------------
    value: :class:`tuple`, :class:`float` or |ASN.1| object
        Python sequence of :class:`int` (representing mantissa, base and
        exponent) or :class:`float` instance or |ASN.1| object.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class Pi(Real):
            '''
            ASN.1 specification:

            Pi ::= REAL

            pi Pi ::= { mantissa 314159, base 10, exponent -5 }

            '''
        pi = Pi((314159, 10, -5))
    abinEncBaseafloatTainfZTu-infZaValueErrorTla__normalizeBase10uReal.__normalizeBase10uReal.prettyInuReal.prettyPrintapropertyuReal.isPlusInfuReal.isMinusInfuReal.isInfuReal.__add__uReal.__radd__uReal.__mul__uReal.__rmul__uReal.__sub__uReal.__rsub__uReal.__mod__uReal.__rmod__uReal.__pow__uReal.__rpow__uReal.__truediv__uReal.__rtruediv__uReal.__divmod__uReal.__rdivmod__uReal.__int__uReal.__float__uReal.__abs__uReal.__pos__uReal.__neg__uReal.__round__uReal.__floor__uReal.__ceil__uReal.__trunc__uReal.__lt__uReal.__le__uReal.__eq__uReal.__ne__uReal.__gt__uReal.__ge__a__bool__uReal.__bool__uReal.__getitem__aisPlusInfinityuReal.isPlusInfinityaisMinusInfinityuReal.isMinusInfinityaisInfinityuReal.isInfinityaEnumerateduCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python :class:`int` objects.

    Keyword Args
    ------------
    value: :class:`int`, :class:`str` or |ASN.1| object
        Python :class:`int` or :class:`str` literal or |ASN.1| object.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    namedValues: :py:class:`~pyasn1.type.namedval.NamedValues`
        Object representing non-default symbolic aliases for numbers

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------

    .. code-block:: python

        class RadioButton(Enumerated):
            '''
            ASN.1 specification:

            RadioButton ::= ENUMERATED { button1(0), button2(1),
                                         button3(2) }

            selected-by-default RadioButton ::= button1
            '''
            namedValues = NamedValues(
                ('button1', 0), ('button2', 1),
                ('button3', 2)
            )

        selected_by_default = RadioButton('button1')
    aSequenceOfAndSetOfBaseuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.ConstructedAsn1Type`,
    its objects are mutable and duck-type Python :class:`list` objects.

    Keyword Args
    ------------
    componentType : :py:class:`~pyasn1.type.base.PyAsn1Item` derivative
        A pyasn1 object representing ASN.1 type allowed within |ASN.1| type

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type can only occur on explicit
        `.isInconsistent` call.

    Examples
    --------

    .. code-block:: python

        class LotteryDraw(SequenceOf):  #  SetOf is similar
            '''
            ASN.1 specification:

            LotteryDraw ::= SEQUENCE OF INTEGER
            '''
            componentType = Integer()

        lotteryDraw = LotteryDraw()
        lotteryDraw.extend([123, 456, 789])
    uSequenceOfAndSetOfBase.__init__uSequenceOfAndSetOfBase.__getitem__a__setitem__uSequenceOfAndSetOfBase.__setitem__uSequenceOfAndSetOfBase.appendacountuSequenceOfAndSetOfBase.countaextenduSequenceOfAndSetOfBase.extendTlnuSequenceOfAndSetOfBase.indexuSequenceOfAndSetOfBase.reverseTnFasortuSequenceOfAndSetOfBase.sortuSequenceOfAndSetOfBase.__len__a_cloneComponentValuesuSequenceOfAndSetOfBase._cloneComponentValuesuSequenceOfAndSetOfBase.getComponentByPositionuSequenceOfAndSetOfBase.setComponentByPositionacomponentTagMapuSequenceOfAndSetOfBase.componentTagMapacomponentsuSequenceOfAndSetOfBase.componentsuSequenceOfAndSetOfBase.cleararesetuSequenceOfAndSetOfBase.resetuSequenceOfAndSetOfBase.prettyPrintuSequenceOfAndSetOfBase.prettyPrintTypeuSequenceOfAndSetOfBase.isValueaisInconsistentuSequenceOfAndSetOfBase.isInconsistentaSequenceOfatagFormatConstructedaSetOflaSequenceAndSetBaseuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.ConstructedAsn1Type`,
    its objects are mutable and duck-type Python :class:`dict` objects.

    Keyword Args
    ------------
    componentType: :py:class:`~pyasn1.type.namedtype.NamedType`
        Object holding named ASN.1 types allowed within this collection

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s).  Constraints
        verification for |ASN.1| type can only occur on explicit
        `.isInconsistent` call.

    Examples
    --------

    .. code-block:: python

        class Description(Sequence):  #  Set is similar
            '''
            ASN.1 specification:

            Description ::= SEQUENCE {
                surname    IA5String,
                first-name IA5String OPTIONAL,
                age        INTEGER DEFAULT 40
            }
            '''
            componentType = NamedTypes(
                NamedType('surname', IA5String()),
                OptionalNamedType('first-name', IA5String()),
                DefaultedNamedType('age', Integer(40))
            )

        descr = Description()
        descr['surname'] = 'Smith'
        descr['first-name'] = 'John'
    aNamedTypesaobjectuFields names/positions mapping for component-less objectsuSequenceAndSetBase.DynamicNamesuSequenceAndSetBase.DynamicNames.__init__uSequenceAndSetBase.DynamicNames.__len__uSequenceAndSetBase.DynamicNames.__contains__uSequenceAndSetBase.DynamicNames.__iter__uSequenceAndSetBase.DynamicNames.__getitem__uSequenceAndSetBase.DynamicNames.getNameByPositionuSequenceAndSetBase.DynamicNames.getPositionByNameuSequenceAndSetBase.DynamicNames.addFielduSequenceAndSetBase.__init__uSequenceAndSetBase.__getitem__uSequenceAndSetBase.__setitem__uSequenceAndSetBase.__contains__uSequenceAndSetBase.__len__uSequenceAndSetBase.__iter__uSequenceAndSetBase.keysaupdateuSequenceAndSetBase.updateuSequenceAndSetBase.clearuSequenceAndSetBase.resetuSequenceAndSetBase.componentsuSequenceAndSetBase._cloneComponentValuesuSequenceAndSetBase.getComponentByNameuSequenceAndSetBase.setComponentByNameuSequenceAndSetBase.getComponentByPositionuSequenceAndSetBase.setComponentByPositionuSequenceAndSetBase.isValueuSequenceAndSetBase.isInconsistentuSequenceAndSetBase.prettyPrintuSequenceAndSetBase.prettyPrintTypeasetDefaultComponentsuSequenceAndSetBase.setDefaultComponentsagetComponentTypeuSequenceAndSetBase.getComponentTypeuSequenceAndSetBase.getNameByPositionaSequenceagetComponentTagMapNearPositionuSequence.getComponentTagMapNearPositionagetComponentPositionNearTypeuSequence.getComponentPositionNearTypeTFuSet.getComponentagetComponentByTypeuSet.getComponentByTypeuSet.setComponentByTypeuSet.componentTagMapuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.ConstructedAsn1Type`,
    its objects are mutable and duck-type Python :class:`list` objects.

    Keyword Args
    ------------
    componentType: :py:class:`~pyasn1.type.namedtype.NamedType`
        Object holding named ASN.1 types allowed within this collection

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s).  Constraints
        verification for |ASN.1| type can only occur on explicit
        `.isInconsistent` call.

    Examples
    --------

    .. code-block:: python

        class Afters(Choice):
            '''
            ASN.1 specification:

            Afters ::= CHOICE {
                cheese  [0] IA5String,
                dessert [1] IA5String
            }
            '''
            componentType = NamedTypes(
                NamedType('cheese', IA5String().subtype(
                    implicitTag=Tag(tagClassContext, tagFormatSimple, 0)
                ),
                NamedType('dessert', IA5String().subtype(
                    implicitTag=Tag(tagClassContext, tagFormatSimple, 1)
                )
            )

        afters = Afters()
        afters['cheese'] = 'Mascarpone'
    aTagSetaValueSizeConstraintTlpuChoice.__eq__uChoice.__ne__uChoice.__lt__uChoice.__le__uChoice.__gt__uChoice.__ge__uChoice.__bool__uChoice.__len__uChoice.__contains__acheckConsistencyuChoice.checkConsistencyuChoice._cloneComponentValuesuChoice.getComponentByPositionuChoice.setComponentByPositionuChoice.effectiveTagSetuChoice.tagMapuChoice.getComponentuChoice.getNameuChoice.isValueuChoice.clearagetMinTagSetuChoice.getMinTagSetuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`,
    its objects are immutable and duck-type Python 2 :class:`str` or Python 3
    :class:`bytes`. When used in Unicode context, |ASN.1| type assumes
    "|encoding|" serialisation.

    Keyword Args
    ------------
    value: :class:`unicode`, :class:`str`, :class:`bytes` or |ASN.1| object
        :class:`str` (Python 2) or :class:`bytes` (Python 3), alternatively
        :class:`unicode` object (Python 2) or :class:`str` (Python 3)
        representing character string to be serialised into octets (note
        `encoding` parameter) or |ASN.1| object.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    encoding: :py:class:`str`
        Unicode codec ID to encode/decode :class:`unicode` (Python 2) or
        :class:`str` (Python 3) the payload when |ASN.1| object is used
        in text string context.

    binValue: :py:class:`str`
        Binary string initializer to use instead of the *value*.
        Example: '10110011'.

    hexValue: :py:class:`str`
        Hexadecimal string initializer to use instead of the *value*.
        Example: 'DEADBEEF'.

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class Error(Sequence):
            '''
            ASN.1 specification:

            Error ::= SEQUENCE {
                code      INTEGER,
                parameter ANY DEFINED BY code  -- Either INTEGER or REAL
            }
            '''
            componentType=NamedTypes(
                NamedType('code', Integer()),
                NamedType('parameter', Any(),
                          openType=OpenType('code', {1: Integer(),
                                                     2: Real()}))
            )

        error = Error()
        error['code'] = 1
        error['parameter'] = Integer(1234)
    uAny.tagMapupyasn1\type\univ.pyTa.0aidxaselfTa.0wxu<module pyasn1.type.univ>Ta__class__TaselfTaselfaotherTaselfavalueTaselfaitemTaselfakeyTaselfwiTaselfwialengthTaselfaidxTaselfaargsakwargsakeyavalueTaselfakwargsTaselfavalueakwargsTaselfalengthTaselfacountTaselfavalueabitStringTavaluewmwbweTaselfavalueamoduloTaselfwnwrTaselfaidxavalueTaselfaexcTaselfamyCloneacloneValueFlagacomponentatagSetTaselfamyCloneacloneValueFlagaidxacomponentValueTaselfavalueaposTaselfabinStringTaselfacomponentTaselfavaluesavalueTaclsavalueainternalFormataprependTavalueabitNoabytewrwvTavaluewrwpwvTaclsavalueainternalFormataprependapaddingTaselfainnerFlagTaselfainnerFlagwcTaselfanameadefaultainstantiateaidxTaselfaidxadefaultainstantiatea__doc__TaselfaidxadefaultainstantiateacomponentValueTaselfaidxadefaultainstantiateaindicesacomponentValueTaselfatagSetadefaultainstantiateainnerFlagacomponentValueTaselfatagSetaidxTaselfanameTaselfasuboidTaselfavalueastartastopaindicesavaluesTaselfamappingaidxavalueaexcTaselfamappingaidxavalueanameaexcTaselfaotherwlTaselfacomponentTypeaidxasubComponentTypeacomponentValueTaselfacomponentValueTaselfavalueweTaselfavalueaexcTaselfavalueanamesabitPositionsarightmostPositionanumberabitPositionTaselfavalueatupleOfIntsTaselfascopeTaselfascopearepresentationaidxacomponentValueTaselfascopeavalueanumberswxTaselfascopearepresentationTaselfascopearepresentationaidxacomponentTypeTaselfabitLengthTaselfanameavalueaverifyConstraintsamatchTagsamatchConstraintsaidxTaselfaidxavalueaverifyConstraintsamatchTagsamatchConstraintsacomponentTypeacomponentTypeLenacomponentValuesacurrentValueasubComponentTypeasubtypeCheckerTaselfaidxavalueaverifyConstraintsamatchTagsamatchConstraintsaindicesastartIdxasubIdxasubValueacomponentTypeacomponentValuesacurrentValueasubtypeCheckerTaselfaidxavalueaverifyConstraintsamatchTagsamatchConstraintsaoldIdxTaselfatagSetavalueaverifyConstraintsamatchTagsamatchConstraintsainnerFlagaidxacomponentTypeTaselfakeyareverseTaselfaiterValueamappingValuewkwv.pyasn1.type.usefuladatetimeatimedeltaTaminutesa_FixedOffset__offseta_FixedOffset__nameTlaendswithTwZaTimeMixInaUTC:nlnw-w+apartitionTw+utoo many values to unpack (expected 3)Tw-a_shortTZatzu00aerroraPyAsn1Errorumalformed time zone offset %s:nlnl<:lnnluunknown time specification %saFixedOffsetw?w.atextw,Tw.Tw,lubad sub-second time specification %saselfla_optionalMinutesa_yearsDigitslu0000lastrptimelu%Y%m%d%H%M%Su%y%m%d%H%M%Sumalformed datetime format %sareplaceTamicrosecondatzinfouCreate :py:class:`datetime.datetime` object from a |ASN.1| object.

        Returns
        -------
        :
            new instance of :py:class:`datetime.datetime` object
        astrftimea_hasSubsecondu.%damicrosecondautcoffsetasecondsu%.2d%.2dlwZuCreate |ASN.1| object from a :py:class:`datetime.datetime` object.

        Parameters
        ----------
        dt: :py:class:`datetime.datetime` object
            The `datetime.datetime` object to initialize the |ASN.1| object
            from

        Returns
        -------
        :
            new instance of |ASN.1| value
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1Taerrorupyasn1.typeTacharacharTatagatagTaunivaunivaObjectDescriptoraGeneralizedTimeaUTCTimea__all__aNoValueanoValueaGraphicStringa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.type.usefula__module__a__qualname__atagSetatagImplicitlyaTagatagClassUniversalatagFormatSimplelagetTypeIdatypeIda__orig_bases__TOobjectatzinfouFixed offset in minutes east from UTC.uTimeMixIn.FixedOffsetTlaUTCa__init__uTimeMixIn.FixedOffset.__init__uTimeMixIn.FixedOffset.utcoffsetatznameuTimeMixIn.FixedOffset.tznameadstuTimeMixIn.FixedOffset.dstapropertyaasDateTimeuTimeMixIn.asDateTimeaclassmethodafromDateTimeuTimeMixIn.fromDateTimeaVisibleStringlaVideotexStringllupyasn1\type\useful.pyu<module pyasn1.type.useful>Ta__class__TaselfaoffsetanameTaselfatextatzinfoaplusminusatzaminutesw_amsadtTaselfadtTaclsadtatextasecondsu.requests.__version__a__doc__a__file__a__spec__aoriginahas_locationa__cached__arequestsa__title__uPython HTTP for Humans.a__description__uhttps://requests.readthedocs.ioa__url__u2.31.0a__version__l1a__build__uKenneth Reitza__author__ume@kennethreitz.orga__author_email__uApache 2.0a__license__uCopyright Kenneth Reitza__copyright__u✨ 🍰 ✨a__cake__urequests\__version__.pyu<module requests.__version__>u.requests._internal_utilsp%abuiltin_stradecodeuGiven a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
    aencodeTaasciiuDetermine if unicode string only contains ASCII characters.

    :param str u_string: unicode string to check. Must be unicode
        and not Python 2 `str`.
    :rtype: bool
    u
requests._internal_utils
~~~~~~~~~~~~~~

Provides utility functions that are consumed internally by Requests
which depend on extremely few external helpers (such as compat)
a__doc__a__file__a__spec__aoriginahas_locationa__cached__arelacompatTabuiltin_strlacompileTc^[^:\s][^:\r\n]*$a_VALID_HEADER_NAME_RE_BYTETu^[^:\s][^:\r\n]*$a_VALID_HEADER_NAME_RE_STRTc^\S[^\r\n]*$|^$a_VALID_HEADER_VALUE_RE_BYTETu^\S[^\r\n]*$|^$a_VALID_HEADER_VALUE_RE_STRa_HEADER_VALIDATORS_STRa_HEADER_VALIDATORS_BYTEaHEADER_VALIDATORSato_native_stringaunicode_is_asciiurequests\_internal_utils.pyu<module requests._internal_utils>TastringaencodingaoutTau_stringu.requests.adapters9/aInvalidSchemaTuMissing dependencies for SOCKS support.a__class__a__init__uSends PreparedRequest object. Returns Response object.

        :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
        :param stream: (optional) Whether to stream the request content.
        :param timeout: (optional) How long to wait for the server to send
            data before giving up, as a float, or a :ref:`(connect timeout,
            read timeout) <timeouts>` tuple.
        :type timeout: float or tuple
        :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use
        :param cert: (optional) Any user-provided SSL certificate to be trusted.
        :param proxies: (optional) The proxies dictionary to apply to the request.
        uCleans up adapter specific items.aDEFAULT_RETRIESaRetryTlFTareadamax_retriesafrom_intaselfaconfigaproxy_managera_pool_connectionsa_pool_maxsizea_pool_blockainit_poolmanagerTablocka__attrs__aitemsutoo many values to unpack (expected 2)aPoolManageranum_poolsamaxsizeablockapoolmanageruInitializes a urllib3 PoolManager.

        This method should not be called from user code, and is only
        exposed for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param connections: The number of urllib3 connection pools to cache.
        :param maxsize: The maximum number of connections to save in the pool.
        :param block: Block when no free connections are available.
        :param pool_kwargs: Extra keyword arguments used to initialize the Pool Manager.
        alowerastartswithTasocksaget_auth_from_urlaSOCKSProxyManagerausernameapasswordaproxy_headersaproxy_from_urluReturn urllib3 ProxyManager for the given proxy.

        This method should not be called from user code, and is only
        exposed for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param proxy: The proxy to return a urllib3 ProxyManager for.
        :param proxy_kwargs: Extra keyword arguments used to configure the Proxy Manager.
        :returns: ProxyManager
        :rtype: urllib3.ProxyManager
        Tahttpsaextract_zipped_pathsaDEFAULT_CA_BUNDLE_PATHaosapathaexistsuCould not find a suitable TLS CA certificate bundle, invalid path: acert_locuaCERT_REQUIREDacert_reqsaisdiraca_certsaca_cert_diraCERT_NONEabasestringlaconnacert_filelakey_fileuCould not find the TLS certificate file, invalid path: uCould not find the TLS key file, invalid path: uVerify a SSL certificate. This method should not be called from user
        code, and is only exposed for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param conn: The urllib3 connection object associated with the cert.
        :param url: The requested URL.
        :param verify: Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use
        :param cert: The SSL certificate to verify.
        aResponseastatusastatus_codeaCaseInsensitiveDictaheadersaget_encoding_from_headersaencodingarawareasonaurladecodeTuutf-8aextract_cookies_to_jaracookiesarequestaconnectionuBuilds a :class:`Response <requests.Response>` object from a urllib3
        response. This should not be called from user code, and is only exposed
        for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`

        :param req: The :class:`PreparedRequest <PreparedRequest>` used to generate the response.
        :param resp: The urllib3 response object.
        :rtype: requests.Response
        aselect_proxyaprepend_scheme_if_neededahttpaparse_urlahostaInvalidProxyURLTuPlease check proxy URL. It is malformed and could be missing the host.aproxy_manager_foraconnection_from_urlaurlparseageturluReturns a urllib3 connection for the given URL. This should not be
        called from user code, and is only exposed for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param url: The URL to connect to.
        :param proxies: (optional) A Requests-style dictionary of proxies used on this request.
        :rtype: urllib3.ConnectionPool
        aclearavaluesuDisposes of any internal state.

        Currently, this closes the PoolManager and any active ProxyManager,
        which closes any pooled connections.
        aschemeahttpsapath_urlaurldefragauthuObtain the url to use when making the final request.

        If the message is being sent through a HTTP proxy, the full URL has to
        be used. Otherwise, we should only use the path portion of the URL.

        This should not be called from user code, and is only exposed for use
        when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
        :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs.
        :rtype: str
        a_basic_auth_struProxy-AuthorizationuReturns a dictionary of the headers to add to any request sent
        through a proxy. This works with urllib3 magic to ensure that they are
        correctly sent to the proxy, rather than in a tunnelled request if
        CONNECT is being used.

        This should not be called from user code, and is only exposed for use
        when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param proxy: The url of the proxy being used for this request.
        :rtype: dict
        aget_connectionaLocationValueErroraInvalidURLTarequestacert_verifyarequest_urlaadd_headersTastreamatimeoutaverifyacertaproxiesabodyuContent-LengthaTimeoutSauceTaconnectareaduInvalid timeout u. Pass a (connect, read) timeout tuple, or a single float to set both timeouts to the same value.aurlopenamethodatimeoutTamethodaurlabodyaheadersaredirectaassert_same_hostapreload_contentadecode_contentaretriesatimeoutachunkedaProtocolErroraConnectionErroraMaxRetryErroraConnectTimeoutErroraNewConnectionErroraConnectTimeoutaResponseErroraRetryErrora_ProxyErroraProxyErrora_SSLErroraSSLErroraClosedPoolErrora_HTTPErroraReadTimeoutErroraReadTimeouta_InvalidHeaderaInvalidHeaderabuild_responseuSends PreparedRequest object. Returns Response object.

        :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
        :param stream: (optional) Whether to stream the request content.
        :param timeout: (optional) How long to wait for the server to send
            data before giving up, as a float, or a :ref:`(connect timeout,
            read timeout) <timeouts>` tuple.
        :type timeout: float or tuple or urllib3 Timeout object
        :param verify: (optional) Either a boolean, in which case it controls whether
            we verify the server's TLS certificate, or a string, in which case it
            must be a path to a CA bundle to use
        :param cert: (optional) Any user-provided SSL certificate to be trusted.
        :param proxies: (optional) The proxies dictionary to apply to the request.
        :rtype: requests.Response
        u
requests.adapters
~~~~~~~~~~~~~~~~~

This module contains the transport adapters that Requests uses to define
and maintain connections.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uos.pathasocketuurllib3.exceptionsTaClosedPoolErroraConnectTimeoutErrorTaHTTPErroraHTTPErrorTaInvalidHeaderTaLocationValueErroraMaxRetryErroraNewConnectionErroraProtocolErrorTaProxyErrorTaReadTimeoutErroraResponseErrorTaSSLErroruurllib3.poolmanagerTaPoolManageraproxy_from_urluurllib3.utilTaTimeoutaTimeoutTaparse_urluurllib3.util.retryTaRetryaauthTa_basic_auth_stracompatTabasestringaurlparseTaextract_cookies_to_jaraexceptionsT
aConnectionErroraConnectTimeoutaInvalidHeaderaInvalidProxyURLaInvalidSchemaaInvalidURLaProxyErroraReadTimeoutaRetryErroraSSLErroramodelsTaResponseastructuresTaCaseInsensitiveDictautilsTaDEFAULT_CA_BUNDLE_PATHaextract_zipped_pathsaget_auth_from_urlaget_encoding_from_headersaprepend_scheme_if_neededaselect_proxyaurldefragauthuurllib3.contrib.socksTaSOCKSProxyManageraDEFAULT_POOLBLOCKl
aDEFAULT_POOLSIZEaDEFAULT_POOL_TIMEOUTurequests.adaptersa__module__uThe Base Transport AdapteraBaseAdaptera__qualname__uBaseAdapter.__init__TFntnnasenduBaseAdapter.sendacloseuBaseAdapter.closeTa__prepare__aHTTPAdaptera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uThe built-in HTTP Adapter for urllib3.

    Provides a general-case interface for Requests sessions to contact HTTP and
    HTTPS urls by implementing the Transport Adapter interface. This class will
    usually be created by the :class:`Session <Session>` class under the
    covers.

    :param pool_connections: The number of urllib3 connection pools to cache.
    :param pool_maxsize: The maximum number of connections to save in the pool.
    :param max_retries: The maximum number of retries each connection
        should attempt. Note, this applies only to failed DNS lookups, socket
        connections and connection timeouts, never to requests where data has
        made it to the server. By default, Requests does not retry failed
        connections. If you need granular control over the conditions under
        which we retry a request, import urllib3's ``Retry`` class and pass
        that instead.
    :param pool_block: Whether the connection pool should block for connections.

    Usage::

      >>> import requests
      >>> s = requests.Session()
      >>> a = requests.adapters.HTTPAdapter(max_retries=3)
      >>> s.mount('http://', a)
    Lamax_retriesaconfiga_pool_connectionsa_pool_maxsizea_pool_blockuHTTPAdapter.__init__a__getstate__uHTTPAdapter.__getstate__a__setstate__uHTTPAdapter.__setstate__uHTTPAdapter.init_poolmanageruHTTPAdapter.proxy_manager_foruHTTPAdapter.cert_verifyuHTTPAdapter.build_responseTnuHTTPAdapter.get_connectionuHTTPAdapter.closeuHTTPAdapter.request_urluAdd any headers needed by the connection. As of v2.0 this does
        nothing by default, but is left for overriding by users that subclass
        the :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        This should not be called from user code, and is only exposed for use
        when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param request: The :class:`PreparedRequest <PreparedRequest>` to add headers to.
        :param kwargs: The keyword arguments from the call to send().
        uHTTPAdapter.add_headersuHTTPAdapter.proxy_headersuHTTPAdapter.senda__orig_bases__urequests\adapters.pyu<module requests.adapters>Ta__class__TaargsakwargsTaselfTaselfa__class__Taselfapool_connectionsapool_maxsizeamax_retriesapool_blocka__class__TaselfastateaattravalueTaselfarequestakwargsTaselfareqaresparesponseTaselfaconnaurlaverifyacertacert_locTaselfaproxyTaselfaurlaproxiesaproxyaproxy_urlaproxy_manageraconnaparsedTaselfaconnectionsamaxsizeablockapool_kwargsTaselfaproxyaheadersausernameapasswordTaselfaproxyaproxy_kwargsamanagerausernameapasswordaproxy_headersTaselfarequestaproxiesaproxyaschemeais_proxied_http_requestausing_socks_proxyaproxy_schemeaurlTaselfarequestastreamatimeoutaverifyacertaproxiesTaselfarequestastreamatimeoutaverifyacertaproxiesaconnweaurlachunkedaconnectareadarespaerr.requests.api/asessionsaSessiona__enter__a__exit__arequestamethodaurlTnnnuConstructs and sends a :class:`Request <Request>`.

    :param method: method for the new :class:`Request` object: ``GET``, ``OPTIONS``, ``HEAD``, ``POST``, ``PUT``, ``PATCH``, or ``DELETE``.
    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary, list of tuples or bytes to send
        in the query string for the :class:`Request`.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.
    :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.
    :param files: (optional) Dictionary of ``'name': file-like-objects`` (or ``{'name': file-tuple}``) for multipart encoding upload.
        ``file-tuple`` can be a 2-tuple ``('filename', fileobj)``, 3-tuple ``('filename', fileobj, 'content_type')``
        or a 4-tuple ``('filename', fileobj, 'content_type', custom_headers)``, where ``'content-type'`` is a string
        defining the content type of the given file and ``custom_headers`` a dict-like object containing additional headers
        to add for the file.
    :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.
    :param timeout: (optional) How many seconds to wait for the server to send data
        before giving up, as a float, or a :ref:`(connect timeout, read
        timeout) <timeouts>` tuple.
    :type timeout: float or tuple
    :param allow_redirects: (optional) Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to ``True``.
    :type allow_redirects: bool
    :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.
    :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use. Defaults to ``True``.
    :param stream: (optional) if ``False``, the response content will be immediately downloaded.
    :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response

    Usage::

      >>> import requests
      >>> req = requests.request('GET', 'https://httpbin.org/get')
      >>> req
      <Response [200]>
    agetaparamsuSends a GET request.

    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary, list of tuples or bytes to send
        in the query string for the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    aoptionsuSends an OPTIONS request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    aallow_redirectsaheaduSends a HEAD request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes. If
        `allow_redirects` is not provided, it will be set to `False` (as
        opposed to the default :meth:`request` behavior).
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    apostadataajsonuSends a POST request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    aputuSends a PUT request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    apatchuSends a PATCH request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    adeleteuSends a DELETE request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    u
requests.api
~~~~~~~~~~~~

This module implements the Requests API.

:copyright: (c) 2012 by Kenneth Reitz.
:license: Apache2, see LICENSE for more details.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uTasessionsllTnTnnurequests\api.pyu<module requests.api>TaurlakwargsTaurlaparamsakwargsTaurladataakwargsTaurladataajsonakwargsTamethodaurlakwargsasession.requests.authQabasestringawarningsawarnuNon-string usernames will no longer be supported in Requests 3.0.0. Please convert the object you've passed in ({!r}) to a string or bytes object in the near future to avoid problems.aDeprecationWarningTacategoryastruNon-string passwords will no longer be supported in Requests 3.0.0. Please convert the object you've passed in ({!r}) to a string or bytes object in the near future to avoid problems.aencodeTalatin1uBasic ato_native_stringab64encoded:astripuReturns a Basic Auth string.uAuth hooks must be callable.ausernameapassworda_basic_auth_straheadersaAuthorizationuProxy-Authorizationathreadingalocala_thread_localainitualast_noncelanonce_countachalaposanum_401_callsarealmanonceagetTaqopTaalgorithmTaopaqueaMD5aupperuMD5-SESSamd5_utf8uHTTPDigestAuth.build_digest_header.<locals>.md5_utf8aSHAasha_utf8uHTTPDigestAuth.build_digest_header.<locals>.sha_utf8uSHA-256asha256_utf8uHTTPDigestAuth.build_digest_header.<locals>.sha256_utf8uSHA-512asha512_utf8uHTTPDigestAuth.build_digest_header.<locals>.sha512_utf8u<lambda>uHTTPDigestAuth.build_digest_header.<locals>.<lambda>aurlparseapathw/aqueryw?w:lu08xTuutf-8atimeactimeaosaurandomTlahashlibasha1ahexdigest:nlnaauthasplitTw,u:auth:uusername="u", realm="u", nonce="u", uri="u", response="w"u, opaque="aalgorithmu, algorithm="aqopu, qop="auth", nc=u, cnonce="uDigest u
        :rtype: str
        amd5asha256asha512ahash_utf8ais_redirectuReset num_401_calls counter on redirects.astatus_codellarequestabodyaseekTuwww-authenticateuadigestalowerlareacompileaIGNORECASETudigest Taflagsaparse_dict_headerasubDacountlacontentacloseacopyaextract_cookies_to_jara_cookiesarawaprepare_cookiesabuild_digest_headeramethodaurlaconnectionasendahistoryaappendu
        Takes the given response and tries digest-auth, if needed.

        :rtype: requests.Response
        ainit_per_thread_statewratellaregister_hookaresponseahandle_401ahandle_redirectu
requests.auth
~~~~~~~~~~~~~

This module contains the authentication handlers for Requests.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__abase64Tab64encodea_internal_utilsTato_native_stringacompatTabasestringastraurlparseacookiesTaextract_cookies_to_jarautilsTaparse_dict_headeruapplication/x-www-form-urlencodedaCONTENT_TYPE_FORM_URLENCODEDumultipart/form-dataaCONTENT_TYPE_MULTI_PARTurequests.autha__module__uBase class that all auth implementations derive fromaAuthBasea__qualname__a__call__uAuthBase.__call__Ta__prepare__aHTTPBasicAutha__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uAttaches HTTP Basic Authentication to the given Request object.a__init__uHTTPBasicAuth.__init__a__eq__uHTTPBasicAuth.__eq__a__ne__uHTTPBasicAuth.__ne__uHTTPBasicAuth.__call__a__orig_bases__aHTTPProxyAuthuAttaches HTTP Proxy Authentication to a given Request object.uHTTPProxyAuth.__call__aHTTPDigestAuthuAttaches HTTP Digest Authentication to the given Request object.uHTTPDigestAuth.__init__uHTTPDigestAuth.init_per_thread_stateuHTTPDigestAuth.build_digest_headeruHTTPDigestAuth.handle_redirectuHTTPDigestAuth.handle_401uHTTPDigestAuth.__call__uHTTPDigestAuth.__eq__uHTTPDigestAuth.__ne__urequests\auth.pyTwswdahash_utf8Tahash_utf8u<module requests.auth>Ta__class__TaselfwrTaselfaotherTaselfausernameapasswordTausernameapasswordaauthstrTaselfamethodaurlarealmanonceaqopaalgorithmaopaqueahash_utf8a_algorithmamd5_utf8asha_utf8asha256_utf8asha512_utf8aKDaentdigap_parsedapathaA1aA2aHA1aHA2ancvaluewsacnoncearespdiganoncebitabaseTaselfwrakwargsas_authapataprepa_rTaselfwrakwargsTaselfTwx.requests.certsu
requests.certs
~~~~~~~~~~~~~~

This module returns the preferred default CA certificate bundle. There is
only one — the one from the certifi package.

If you are packaging Requests, e.g., for a Linux distribution or a managed
environment, you can change the definition of where() to return a separately
packaged CA bundle.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__acertifiTawherelawhereurequests\certs.pyu<module requests.certs>u.requests.compatCu
requests.compat
~~~~~~~~~~~~~~~

This module previously handled import compatibility issues
between Python 2 and Python 3. It remains for backwards
compatibility until the next major version.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__achardetlacharset_normalizerasysa_verlais_py2lais_py3ahas_simplejsonasimplejsonajsonTaJSONDecodeErroraJSONDecodeErroracollectionsTaOrderedDictaOrderedDictucollections.abcTaCallableaMappingaMutableMappingaCallableaMappingaMutableMappingahttpTacookiejaracookiejaracookielibuhttp.cookiesTaMorselaMorselaStringIOuurllib.parseT
aquoteaquote_plusaunquoteaunquote_plusaurldefragaurlencodeaurljoinaurlparseaurlsplitaurlunparseaquoteaquote_plusaunquoteaunquote_plusaurldefragaurlencodeaurljoinaurlparseaurlsplitaurlunparseuurllib.requestTagetproxiesagetproxies_environmentaparse_http_listaproxy_bypassaproxy_bypass_environmentagetproxiesagetproxies_environmentaparse_http_listaproxy_bypassaproxy_bypass_environmentastrabuiltin_strabytesabasestringTOintOfloatanumeric_typesTOintainteger_typesurequests\compat.pyu<module requests.compat>u.requestsywasplitTw.adevaappendTw0utoo many values to unpack (expected 3)ll:nlnTlllTllpTllpTllpuYou need either charset_normalizer or chardet installedlluOld version of cryptography ({}) may cause slowdown.awarningsawarnaRequestsDependencyWarningu
Requests HTTP Library
~~~~~~~~~~~~~~~~~~~~~

Requests is an HTTP library, written in Python, for human beings.
Basic GET usage:

   >>> import requests
   >>> r = requests.get('https://www.python.org')
   >>> r.status_code
   200
   >>> b'Python is a programming language' in r.content
   True

... or POST:

   >>> payload = dict(key1='value1', key2='value2')
   >>> r = requests.post('https://httpbin.org/post', data=payload)
   >>> print(r.text)
   {
     ...
     "form": {
       "key1": "value1",
       "key2": "value2"
     },
     ...
   }

The other HTTP methods are supported - see `requests.api`. Full documentation
is at <https://requests.readthedocs.io>.

:copyright: (c) 2017 by Kenneth Reitz.
:license: Apache 2.0, see LICENSE for more details.
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_requestsu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aurllib3aexceptionsTaRequestsDependencyWarningacharset_normalizerTa__version__a__version__acharset_normalizer_versionachardetachardet_versionacheck_compatibilitya_check_cryptographyTEAssertionErrorEValueErroruurllib3 ({}) or chardet ({})/charset_normalizer ({}) doesn't match a supported version!asslaHAS_SNIuurllib3.contribTapyopensslapyopensslainject_into_urllib3acryptographyacryptography_versionuurllib3.exceptionsTaDependencyWarningaDependencyWarningasimplefilteraignorealoggingTaNullHandleraNullHandleruTapackagesautilsapackagesautilsT
a__author__a__author_email__a__build__a__cake__a__copyright__a__description__a__license__a__title__a__url__a__version__a__author__a__author_email__a__build__a__cake__a__copyright__a__description__a__license__a__title__a__url__aapiTadeleteagetaheadaoptionsapatchapostaputarequestadeleteaheadaoptionsapatchapostaputarequestT
aConnectionErroraConnectTimeoutaFileModeWarningaHTTPErroraJSONDecodeErroraReadTimeoutaRequestExceptionaTimeoutaTooManyRedirectsaURLRequiredaConnectionErroraConnectTimeoutaFileModeWarningaHTTPErroraJSONDecodeErroraReadTimeoutaRequestExceptionaTimeoutaTooManyRedirectsaURLRequiredamodelsTaPreparedRequestaRequestaResponseaPreparedRequestaRequestaResponseasessionsTaSessionasessionaSessionasessionastatus_codesTacodesacodesagetLoggerTarequestsaaddHandleradefaultDaappendturequests\__init__.pyu<module requests>Tacryptography_versionawarningTaurllib3_versionachardet_versionacharset_normalizer_versionamajoraminorapatch.requests.cookies+a_ra_new_headersaurlparseaurlaschemeatypeanetlocaget_hostaheadersagetTaHostato_native_stringaHostDaencodinguutf-8aurlunparseapathaparamsaqueryafragmentuCookie headers should be added with add_unredirected_header()ucookielib has no legitimate use for this method; add it back if you find one.ais_unverifiableaget_origin_req_hosta_headersuMake a MockResponse for `cookielib` to read.

        :param headers: a httplib.HTTPMessage or analogous carrying the headers
        agetheadersa_original_responseaMockRequestaMockResponsearesponseamsgaextract_cookiesuExtract the cookies from the response into a CookieJar.

    :param jar: cookielib.CookieJar (not necessarily a RequestsCookieJar)
    :param request: our own requests.Request object
    :param response: urllib3.HTTPResponse object
    aadd_cookie_headeraget_new_headersTaCookieu
    Produce an appropriate Cookie header string to be sent with `request`, or None.

    :rtype: str
    anameadomainaclearablesaappendutoo many values to unpack (expected 3)acookiejaraclearuUnsets a cookie by name, by default over all domains and paths.

    Wraps CookieJar.clear(), is O(n).
    a_find_no_duplicatesuDict-like get() that also supports optional domain and path args in
        order to resolve naming collisions from using one cookie jar over
        multiple domains.

        .. warning:: operation is O(n), not O(1).
        aremove_cookie_by_nameTadomainapathaMorselamorsel_to_cookieacreate_cookieaset_cookieuDict-like set() that also supports optional domain and path args in
        order to resolve naming collisions from using one cookie jar over
        multiple domains.
        uDict-like iterkeys() that returns an iterator of names of cookies
        from the jar.

        .. seealso:: itervalues() and iteritems().
        aselfaiterkeysuRequestsCookieJar.iterkeysuDict-like keys() that returns a list of names of cookies from the
        jar.

        .. seealso:: values() and items().
        uDict-like itervalues() that returns an iterator of values of cookies
        from the jar.

        .. seealso:: iterkeys() and iteritems().
        avalueaitervaluesuRequestsCookieJar.itervaluesuDict-like values() that returns a list of values of cookies from the
        jar.

        .. seealso:: keys() and items().
        uDict-like iteritems() that returns an iterator of name-value tuples
        from the jar.

        .. seealso:: iterkeys() and itervalues().
        aiteritemsuRequestsCookieJar.iteritemsuDict-like items() that returns a list of name-value tuples from the
        jar. Allows client-code to call ``dict(RequestsCookieJar)`` and get a
        vanilla python dict of key value pairs.

        .. seealso:: keys() and values().
        adomainsuUtility method to list all the domains in the jar.apathsuUtility method to list all the paths in the jar.uReturns True if there are multiple domains in the jar.
        Returns False otherwise.

        :rtype: bool
        acookieadictionaryuTakes as an argument an optional domain and path and returns a plain
        old Python dict of name-value pairs of cookies that meet the
        requirements.

        :rtype: dict
        a__class__a__contains__aCookieConflictErroruDict-like __getitem__() for compatibility with client code. Throws
        exception if there are more than one cookie with name. In that case,
        use the more explicit get() method instead.

        .. warning:: operation is O(n), not O(1).
        asetuDict-like __setitem__ for compatibility with client code. Throws
        exception if there is already a cookie of that name in the jar. In that
        case, use the more explicit set() method instead.
        uDeletes a cookie given a name. Wraps ``cookielib.CookieJar``'s
        ``remove_cookie_by_name()``.
        astartswithTw"aendswithareplaceTu\"uacookielibaCookieJaracopyaupdateuUpdates this jar with cookies from another CookieJar or dict-likeuname=uu, domain=u, path=uRequests uses this method internally to get cookie values.

        If there are conflicting cookies, _find arbitrarily chooses one.
        See _find_no_duplicates if you want an exception thrown if there are
        conflicting cookies.

        :param name: a string containing name of cookie
        :param domain: (optional) string containing domain of cookie
        :param path: (optional) string containing path of cookie
        :return: cookie.value
        atoReturnuThere are multiple cookies with name, uBoth ``__get_item__`` and ``get`` call this function: it's never
        used elsewhere in Requests.

        :param name: a string containing name of cookie
        :param domain: (optional) string containing domain of cookie
        :param path: (optional) string containing path of cookie
        :raises KeyError: if cookie is not found
        :raises CookieConflictError: if there are multiple cookies
            that match name and optionally domain and path
        :return: cookie.value
        apopTa_cookies_lockuUnlike a normal CookieJar, this class is pickleable.a_cookies_lockathreadingaRLockaRequestsCookieJaraset_policyaget_policyuReturn a copy of this RequestsCookieJar.a_policyuReturn the CookiePolicy instance used.anew_jaraversionlaportw/asecureaexpiresadiscardacommentacomment_urlarestDaHttpOnlynarfc2109ucreate_cookie() got unexpected keyword arguments: aport_specifiedadomain_specifiedTw.adomain_initial_dotapath_specifiedaCookieuMake a cookie from underspecified parameters.

    By default, the pair of `name` and `value` will be set for the domain ''
    and sent on every request (this is sometimes called a "supercookie").
    umax-ageatimeumax-age: u must be integeracalendaratimegmastrptimeu%a, %d-%b-%Y %H:%M:%S GMTakeyaHttpOnlyahttponlyT
acommentacomment_urladiscardadomainaexpiresanameapathaportarestarfc2109asecureavalueaversionuConvert a Morsel object into a Cookie containing the one k/v pair.uReturns a CookieJar from a key/value dictionary.

    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :param cookiejar: (optional) A cookiejar to add the cookies to.
    :param overwrite: (optional) If False, will not replace cookies
        already in the jar with new ones.
    :rtype: CookieJar
    uYou can only merge into CookieJaracookiejar_from_dictTacookiejaraoverwriteacookiesuAdd cookies to cookiejar and returns a merged CookieJar.

    :param cookiejar: CookieJar object to add the cookies to.
    :param cookies: Dictionary or CookieJar object to be added.
    :rtype: CookieJar
    u
requests.cookies
~~~~~~~~~~~~~~~~

Compatibility code to be able to use `cookielib.CookieJar` with requests.

requests.utils imports from here, so be careful with imports.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a_internal_utilsTato_native_stringlacompatTaMorselaMutableMappingacookielibaurlparseaurlunparseaMutableMappingadummy_threadingurequests.cookiesa__module__uWraps a `requests.Request` to mimic a `urllib2.Request`.

    The code in `cookielib.CookieJar` expects this interface in order to correctly
    manage cookie policies, i.e., determine whether a cookie can be set, given the
    domains of the request and the cookie.

    The original request object is read-only. The client is responsible for collecting
    the new headers via `get_new_headers()` and interpreting them appropriately. You
    probably want `get_cookie_header`, defined below.
    a__qualname__a__init__uMockRequest.__init__aget_typeuMockRequest.get_typeuMockRequest.get_hostuMockRequest.get_origin_req_hostaget_full_urluMockRequest.get_full_urluMockRequest.is_unverifiableahas_headeruMockRequest.has_headerTnaget_headeruMockRequest.get_headeraadd_headeruMockRequest.add_headeraadd_unredirected_headeruMockRequest.add_unredirected_headeruMockRequest.get_new_headersaunverifiableuMockRequest.unverifiableaorigin_req_hostuMockRequest.origin_req_hostahostuMockRequest.hostTuWraps a `httplib.HTTPMessage` to mimic a `urllib.addinfourl`.

    ...what? Basically, expose the parsed HTTP headers from the server response
    the way `cookielib` expects to see them.
    uMockResponse.__init__ainfouMockResponse.infouMockResponse.getheadersaextract_cookies_to_jaraget_cookie_headerTnnTERuntimeErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uThere are two cookies that meet the criteria specified in the cookie jar.
    Use .get and .set and include domain and path args in order to be more specific.
    a__orig_bases__uCompatibility class; is a cookielib.CookieJar, but exposes a dict
    interface.

    This is the CookieJar we create by default for requests and sessions that
    don't specify one, since some clients may expect response.cookies and
    session.cookies to support dict operations.

    Requests does not use the dict interface internally; it's just for
    compatibility with external client code. All requests code should work
    out of the box with externally provided instances of ``CookieJar``, e.g.
    ``LWPCookieJar`` and ``FileCookieJar``.

    Unlike a regular CookieJar, this class is pickleable.

    .. warning:: dictionary operations that are normally O(1) may be O(n).
    TnnnuRequestsCookieJar.getuRequestsCookieJar.setakeysuRequestsCookieJar.keysavaluesuRequestsCookieJar.valuesaitemsuRequestsCookieJar.itemsalist_domainsuRequestsCookieJar.list_domainsalist_pathsuRequestsCookieJar.list_pathsamultiple_domainsuRequestsCookieJar.multiple_domainsaget_dictuRequestsCookieJar.get_dictuRequestsCookieJar.__contains__uRequestsCookieJar.__getitem__a__setitem__uRequestsCookieJar.__setitem__a__delitem__uRequestsCookieJar.__delitem__uRequestsCookieJar.set_cookieuRequestsCookieJar.updatea_finduRequestsCookieJar._finduRequestsCookieJar._find_no_duplicatesa__getstate__uRequestsCookieJar.__getstate__a__setstate__uRequestsCookieJar.__setstate__uRequestsCookieJar.copyuRequestsCookieJar.get_policya_copy_cookie_jarTntamerge_cookiesurequests\cookies.pyu<module requests.cookies>Ta__class__Taselfanamea__class__TaselfanameTaselfastateTaselfaheadersTaselfarequestTaselfanameavalueTajaranew_jaracookieTaselfanameadomainapathacookieTaselfanameadomainapathatoReturnacookieTaselfakeyavalTacookie_dictacookiejaraoverwriteanames_from_jaranameTaselfanew_cjTanameavalueakwargsaresultabadargsTajararequestaresponseareqaresTaselfanameadefaultadomainapathTajararequestwrTaselfadomainapathadictionaryacookieTaselfahostaparsedTaselfanameadefaultTaselfTaselfacookieTaselfadomainsacookieTaselfapathsacookieTacookiejaracookiesacookie_in_jarTamorselaexpiresatime_templateTacookiejaranameadomainapathaclearablesacookieTaselfanameavalueakwargswcTaselfacookieaargsakwargsa__class__Taselfaotheracookiea__class__.requests.exceptions^aresponseapopTarequestnarequesta__class__a__init__uInitialize RequestException with `request` and `response` objects.aCompatJSONDecodeErroraInvalidJSONErroraargsu
        Construct the JSONDecodeError instance first with all
        args. Then use it's args to construct the IOError so that
        the json specific args aren't used as IOError specific args
        and the error message from JSONDecodeError is preserved.
        u
requests.exceptions
~~~~~~~~~~~~~~~~~~~

This module contains the set of Requests' exceptions.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uurllib3.exceptionsTaHTTPErrorlaHTTPErroraBaseHTTPErroracompatTaJSONDecodeErrorlaJSONDecodeErrorTEOSErrora__prepare__aRequestExceptiona__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests.exceptionsa__module__uThere was an ambiguous exception that occurred while handling your
    request.
    a__qualname__uRequestException.__init__a__orig_bases__uA JSON error occurred.uCouldn't decode the text into jsonuJSONDecodeError.__init__uAn HTTP error occurred.aConnectionErroruA Connection error occurred.aProxyErroruA proxy error occurred.aSSLErroruAn SSL error occurred.aTimeoutuThe request timed out.

    Catching this error will catch both
    :exc:`~requests.exceptions.ConnectTimeout` and
    :exc:`~requests.exceptions.ReadTimeout` errors.
    aConnectTimeoutuThe request timed out while trying to connect to the remote server.

    Requests that produced this error are safe to retry.
    aReadTimeoutuThe server did not send any data in the allotted amount of time.aURLRequireduA valid URL is required to make a request.aTooManyRedirectsuToo many redirects.aMissingSchemauThe URL scheme (e.g. http or https) is missing.aInvalidSchemauThe URL scheme provided is either invalid or unsupported.aInvalidURLuThe URL provided was somehow invalid.aInvalidHeaderuThe header value provided was somehow invalid.aInvalidProxyURLuThe proxy URL provided is invalid.aChunkedEncodingErroruThe server declared chunked encoding but sent an invalid chunk.aContentDecodingErroruFailed to decode response content.aStreamConsumedErroruThe content for this response was already consumed.aRetryErroruCustom retries logic failedaUnrewindableBodyErroruRequests encountered an error when trying to rewind a body.aWarningaRequestsWarninguBase warning for Requests.aDeprecationWarningaFileModeWarninguA file was opened in text mode, but Requests determined its binary length.aRequestsDependencyWarninguAn imported dependency doesn't match the expected version range.urequests\exceptions.pyu<module requests.exceptions>Ta__class__TaselfaargsakwargsTaselfaargsakwargsaresponsea__class__u.requests.hooksaHOOKSageta__call__ahook_datauDispatches a hook dictionary on a given piece of data.u
requests.hooks
~~~~~~~~~~~~~~

This module provides the capabilities for the Requests hooks system.

Available hooks:

``response``:
    The response generated from a Request.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aresponseadefault_hooksadispatch_hookurequests\hooks.pyu<module requests.hooks>Takeyahooksahook_dataakwargsahooka_hook_datau.requests.models7aurlsplitaurlapathw/aqueryw?uuBuild the path URL to use.TOstrObytesareada__iter__ato_key_val_listutoo many values to unpack (expected 2)abasestringaresultaappendwkaencodeTuutf-8aurlencodeDadoseqtuEncode parameters in a piece of data.

        Will successfully encode parameters when passed as a dict or a list of
        2-tuples. Order is retained if data is a list of 2-tuples but arbitrary
        if parameters are supplied as a dict.
        uFiles must be provided.uData must not be a string.anew_fieldsafieldadecodeTOtupleOlistutoo many values to unpack (expected 3)utoo many values to unpack (expected 4)aguess_filenameTOstrObytesObytearrayaRequestFieldTanameadataafilenameaheadersamake_multipartTacontent_typeaencode_multipart_formdatauBuild the body for a multipart/form-data request.

        Will successfully encode files when passed as a dict or a list of
        tuples. Order is retained if data is a list of tuples but arbitrary
        if parameters are supplied as a dict.
        The tuples may be 2-tuples (filename, fileobj), 3-tuples (filename, fileobj, contentype)
        or 4-tuples (filename, fileobj, contentype, custom_headers).
        ahooksuUnsupported event specified, with event name "w"aCallableaextenduProperly register a hook.u<genexpr>uRequestHooksMixin.register_hook.<locals>.<genexpr>aremoveuDeregister a previously registered hook.
        Returns True if the hook existed, False if not.
        adefault_hooksaitemsaselfaregister_hookTaeventahookamethodaheadersafilesadataajsonaparamsaauthacookiesu<Request [u]>aPreparedRequestaprepareT
amethodaurlaheadersafilesadataajsonaparamsaauthacookiesahooksuConstructs a :class:`PreparedRequest <PreparedRequest>` for transmission and returns it.a_cookiesabodya_body_positionaprepare_methodaprepare_urlaprepare_headersaprepare_cookiesaprepare_bodyaprepare_authaprepare_hooksuPrepares the entire request with the given parameters.u<PreparedRequest [acopya_copy_cookie_jarato_native_stringaupperuPrepares the given HTTP method.aidnalDauts46taIDNAErrorTautf8alstripw:alowerastartswithTahttpaparse_urlutoo many values to unpack (expected 7)aLocationParseErroraInvalidURLaargsaMissingSchemauInvalid URL u: No scheme supplied. Perhaps you meant https://u: No host suppliedaunicode_is_asciia_get_idna_encoded_hostTuURL has an invalid label.TTw*w.w@ahosta_encode_paramsw&arequote_uriaurlunparseuPrepares the given HTTP URL.aCaseInsensitiveDictacheck_header_validityuPrepares the given HTTP headers.uapplication/jsonacomplexjsonadumpsDaallow_nanFaInvalidJSONErrorTarequestaMappingasuper_lenaUnsupportedOperationatelluStreamed bodies and files are mutually exclusive.abuiltin_struContent-LengthachunkeduTransfer-Encodinga_encode_filesuapplication/x-www-form-urlencodedaprepare_content_lengthucontent-typeuContent-TypeuPrepares the given HTTP body data.TaGETaHEADagetTuContent-Lengthw0uPrepare Content-Length header based on request method and bodyaget_auth_from_urlaHTTPBasicAuthaupdateuPrepares the given HTTP auth data.acookielibaCookieJaracookiejar_from_dictaget_cookie_headeraCookieuPrepares the given HTTP cookie data.

        This function eventually generates a ``Cookie`` header from the
        given cookies using cookielib. Due to cookielib's design, the header
        will not be regenerated if it already exists, meaning this function
        can only be called once for the life of the
        :class:`PreparedRequest <PreparedRequest>` object. Any subsequent calls
        to ``prepare_cookies`` will have no actual effect, unless the "Cookie"
        header is removed beforehand.
        uPrepares the given hooks.a_contenta_content_consumeda_nextastatus_codearawaencodingahistoryareasonadatetimeatimedeltaTlaelapsedarequestacloseacontenta__attrs__u<Response [aokuReturns True if :attr:`status_code` is less than 400.

        This attribute checks if the status code of the response is between
        400 and 600 to see if there was a client error or a server error. If
        the status code, is between 200 and 400, this will return True. This
        is **not** a check to see if the response code is ``200 OK``.
        aiter_contentTluAllows you to use a response as an iterator.araise_for_statusaHTTPErroruReturns True if :attr:`status_code` is less than 400, False if not.

        This attribute checks if the status code of the response is between
        400 and 600 to see if there was a client error or a server error. If
        the status code is between 200 and 400, this will return True. This
        is **not** a check to see if the response code is ``200 OK``.
        alocationaREDIRECT_STATIuTrue if this Response is a well-formed HTTP redirect that could have
        been processed automatically (by :meth:`Session.resolve_redirects`).
        acodesamoved_permanentlyapermanent_redirectuTrue if this Response one of the permanent versions of redirect.uReturns a PreparedRequest for the next request in a redirect chain, if there is one.achardetadetectuThe apparent encoding, provided by the charset_normalizer or chardet libraries.agenerateuResponse.iter_content.<locals>.generateaStreamConsumedErroruchunk_size must be an int, it is instead a w.aiter_slicesastream_decode_response_unicodeuIterates over the response data.  When stream=True is set on the
        request, this avoids reading the content at once into memory for
        large responses.  The chunk size is the number of bytes it should
        read into memory.  This is not necessarily the length of each item
        returned as decoding can take place.

        chunk_size must be of type int or None. A value of None will
        function differently depending on the value of `stream`.
        stream=True will read data as it arrives in whatever size the
        chunks are received. If stream=False, data is returned as
        a single chunk.

        If decode_unicode is True, content will be decoded using the best
        available encoding based on the response.
        astreamachunk_sizeDadecode_contenttaProtocolErroraChunkedEncodingErroraDecodeErroraContentDecodingErroraReadTimeoutErroraConnectionErroraSSLErroraRequestsSSLErroruIterates over the response data, one line at a time.  When
        stream=True is set on the request, this avoids reading the
        content at once into memory for large responses.

        .. note:: This method is not reentrant safe.
        adecode_unicodeTachunk_sizeadecode_unicodeapendingadelimiterasplitasplitlineslachunkapopaiter_linesuResponse.iter_linesuThe content for this response was already consumedcaCONTENT_CHUNK_SIZEuContent of the response, in bytes.aapparent_encodingareplaceTELookupErrorETypeErroruContent of the response, in unicode.

        If Response.encoding is None, encoding will be guessed using
        ``charset_normalizer`` or ``chardet``.

        The encoding of the response content is determined based solely on HTTP
        headers, following RFC 2616 to the letter. If you can take advantage of
        non-HTTP knowledge to make a better guess at the encoding, you should
        set ``r.encoding`` appropriately before accessing this property.
        aguess_json_utfaloadsaJSONDecodeErroraRequestsJSONDecodeErroramsgadocaposatextuReturns the json-encoded content of a response, if any.

        :param \*\*kwargs: Optional arguments that ``json.loads`` takes.
        :raises requests.exceptions.JSONDecodeError: If the response body does not
            contain valid json.
        Talinkaparse_header_linksTarelTaurlaresolved_linksuReturns the parsed header links of the response, if any.Tuiso-8859-1llu Client Error: u for url: lXu Server Error: TaresponseuRaises :class:`HTTPError`, if one occurred.arelease_connuReleases the connection back to the pool. Once this method has been
        called the underlying ``raw`` object must not be accessed again.

        *Note: Should not normally need to be called explicitly.*
        u
requests.models
~~~~~~~~~~~~~~~

This module contains the primary objects that power Requests.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uencodings.idnaaencodingsuurllib3.exceptionsTaDecodeErroraLocationParseErroraProtocolErroraReadTimeoutErroraSSLErroruurllib3.fieldsTaRequestFielduurllib3.filepostTaencode_multipart_formdatauurllib3.utilTaparse_urla_internal_utilsTato_native_stringaunicode_is_asciilTaHTTPBasicAuthacompatTaCallableaJSONDecodeErroraMappingabasestringabuiltin_strachardetacookielibTajsonTaurlencodeaurlsplitaurlunparseTa_copy_cookie_jaracookiejar_from_dictaget_cookie_headeraexceptionsTaChunkedEncodingErroraConnectionErroraContentDecodingErroraHTTPErroraInvalidJSONErroraInvalidURLTaJSONDecodeErrorTaMissingSchemaTaSSLErrorTaStreamConsumedErrorTadefault_hooksastatus_codesTacodesastructuresTaCaseInsensitiveDictautilsT
acheck_header_validityaget_auth_from_urlaguess_filenameaguess_json_utfaiter_slicesaparse_header_linksarequote_uriastream_decode_response_unicodeasuper_lenato_key_val_listamovedafoundaotheratemporary_redirectlaDEFAULT_REDIRECT_LIMITl(laITER_CHUNK_SIZEurequests.modelsa__module__aRequestEncodingMixina__qualname__apath_urluRequestEncodingMixin.path_urluRequestEncodingMixin._encode_paramsuRequestEncodingMixin._encode_filesTaRequestHooksMixinuRequestHooksMixin.register_hookaderegister_hookuRequestHooksMixin.deregister_hooka__prepare__aRequesta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uA user-created :class:`Request <Request>` object.

    Used to prepare a :class:`PreparedRequest <PreparedRequest>`, which is sent to the server.

    :param method: HTTP method to use.
    :param url: URL to send.
    :param headers: dictionary of headers to send.
    :param files: dictionary of {filename: fileobject} files to multipart upload.
    :param data: the body to attach to the request. If a dictionary or
        list of tuples ``[(key, value)]`` is provided, form-encoding will
        take place.
    :param json: json for the body to attach to the request (if files or data is not specified).
    :param params: URL parameters to append to the URL. If a dictionary or
        list of tuples ``[(key, value)]`` is provided, form-encoding will
        take place.
    :param auth: Auth handler or (user, pass) tuple.
    :param cookies: dictionary or CookieJar of cookies to attach to this request.
    :param hooks: dictionary of callback hooks, for internal usage.

    Usage::

      >>> import requests
      >>> req = requests.Request('GET', 'https://httpbin.org/get')
      >>> req.prepare()
      <PreparedRequest [GET]>
    T
nnnnnnnnnna__init__uRequest.__init__a__repr__uRequest.__repr__uRequest.preparea__orig_bases__uThe fully mutable :class:`PreparedRequest <PreparedRequest>` object,
    containing the exact bytes that will be sent to the server.

    Instances are generated from a :class:`Request <Request>` object, and
    should not be instantiated manually; doing so may produce undesirable
    effects.

    Usage::

      >>> import requests
      >>> req = requests.Request('GET', 'https://httpbin.org/get')
      >>> r = req.prepare()
      >>> r
      <PreparedRequest [GET]>

      >>> s = requests.Session()
      >>> s.send(r)
      <Response [200]>
    uPreparedRequest.__init__uPreparedRequest.prepareuPreparedRequest.__repr__uPreparedRequest.copyuPreparedRequest.prepare_methodastaticmethoduPreparedRequest._get_idna_encoded_hostuPreparedRequest.prepare_urluPreparedRequest.prepare_headersTnuPreparedRequest.prepare_bodyuPreparedRequest.prepare_content_lengthTuuPreparedRequest.prepare_authuPreparedRequest.prepare_cookiesuPreparedRequest.prepare_hooksuThe :class:`Response <Response>` object, which contains a
    server's response to an HTTP request.
    aResponseL
a_contentastatus_codeaheadersaurlahistoryaencodingareasonacookiesaelapsedarequestuResponse.__init__a__enter__uResponse.__enter__a__exit__uResponse.__exit__a__getstate__uResponse.__getstate__a__setstate__uResponse.__setstate__uResponse.__repr__a__bool__uResponse.__bool__a__nonzero__uResponse.__nonzero__uResponse.__iter__uResponse.okais_redirectuResponse.is_redirectais_permanent_redirectuResponse.is_permanent_redirectanextuResponse.nextuResponse.apparent_encodingTlFuResponse.iter_contentuResponse.contentuResponse.textuResponse.jsonalinksuResponse.linksuResponse.raise_for_statusuResponse.closeurequests\models.pyTa.0whu<module requests.models>Ta__class__TaselfTaselfaargsT
aselfamethodaurlaheadersafilesadataaparamsaauthacookiesahooksajsonwkwvTaselfastateanameavalueTafilesadataanew_fieldsafieldsafieldavalwvwkaftafhafnafpafdataarfabodyacontent_typeTadataaresultwkavswvTahostaidnaTaselfarelease_connTaselfwpTaselfaeventahookTweachunkaselfachunk_sizeTachunk_sizeaselfTaselfachunk_sizeadecode_unicodeagenerateareused_chunksastream_chunksachunksTaselfachunk_sizeadecode_unicodeadelimiterapendingachunkalinesTaselfakwargsaencodingweTaselfaheaderaresolved_linksalinksalinkakeyTaselfaurlwpapathaqueryTaselfamethodaurlaheadersafilesadataaparamsaauthacookiesahooksajsonTaselfaauthaurlaurl_authwrTaselfadataafilesajsonabodyacontent_typeaveais_streamalengthTaselfabodyalengthTaselfacookiesacookie_headerTaselfaheadersaheaderanameavalueTaselfahooksaeventTaselfamethodT
aselfaurlaparamsaschemeaauthahostaportapathaqueryafragmentweanetlocaenc_paramsTaselfahttp_error_msgareasonTaselfacontentaencoding.requests.packages_a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysachardetlawarningsacharset_normalizerafilterwarningsTaignoreuTrying to detectacharset_normalizerTamoduleTaurllib3aidnaapackageamodulesamodastartswithuw.urequests.packages.a__name__atargetareplaceurequests\packages.pyu<module requests.packages>.requests.sessions36aMappingato_key_val_listaupdateaitemsutoo many values to unpack (expected 2)uDetermines appropriate setting for a given request, taking into account
    the explicit setting on that request, and the setting in the session. If a
    setting is a dictionary, they will be merged together using `dict_class`
    agetTaresponseasession_hooksamerge_settingarequest_hooksuProperly merges both requests and session hooks.

    This is necessary because when request_hooks == {'response': []}, the
    merge breaks Session hooks entirely.
    ais_redirectaheadersalocationaencodeTalatin1ato_native_stringautf8uReceives a Response. Returns a redirect URI or ``None``aurlparseahostnameaschemeahttpaportTlPnahttpsTlnaDEFAULT_PORTSuDecide whether Authorization header should be removed when redirectinguReceives a Response. Returns a generator of Responses or Requests.aselfaget_redirect_targetarespareqaurlafragmentacopyahistaappend:lnnahistoryacontentaChunkedEncodingErroraContentDecodingErrorarawareadTFTadecode_contentamax_redirectsaTooManyRedirectsuExceeded uu redirects.acloseastartswithTu//w:aprevious_fragmenta_replaceTafragmentaparsedageturlanetlocaurljoinarequote_uriarebuild_methodastatus_codeacodesatemporary_redirectapermanent_redirectTuContent-LengthuContent-TypeuTransfer-Encodingaprepared_requestapopabodyTaCookienaextract_cookies_to_jara_cookiesamerge_cookiesacookiesaprepare_cookiesarebuild_proxiesaproxiesarebuild_autha_body_positionuContent-LengthuTransfer-Encodingarewind_bodyayield_requestsasendastreamatimeoutaverifyacertaallow_redirectsaadapter_kwargsaresolve_redirectsuSessionRedirectMixin.resolve_redirectsaAuthorizationashould_strip_autharequestatrust_envaget_netrc_authaprepare_authuWhen being redirected we may want to strip authentication from the
        request to avoid leaking credentials. This method intelligently removes
        and reapplies authentication where possible to avoid credential loss.
        aresolve_proxiesuProxy-Authorizationaget_auth_from_urlTnnTahttpsa_basic_auth_struThis method re-evaluates the proxy configuration by considering the
        environment variables. If we are redirected to a URL covered by
        NO_PROXY, we strip the proxy configuration. Otherwise, we set missing
        proxy keys for this URL (in case they were stripped by a previous
        redirect).

        This method also replaces the Proxy-Authorization header where
        necessary.

        :rtype: dict
        amethodasee_otheraHEADaGETafoundamovedaPOSTuWhen being redirected we may want to change the method of the request
        based on certain specs or browser behavior.
        adefault_headersaauthadefault_hooksahooksaparamsaDEFAULT_REDIRECT_LIMITacookiejar_from_dictaOrderedDictaadaptersamountuhttps://aHTTPAdapteruhttp://acookielibaCookieJaraRequestsCookieJaraPreparedRequestaprepareaupperafilesadataajsonaCaseInsensitiveDictTadict_classamerge_hooksT
amethodaurlafilesadataajsonaheadersaparamsaauthacookiesahooksuConstructs a :class:`PreparedRequest <PreparedRequest>` for
        transmission and returns it. The :class:`PreparedRequest` has settings
        merged from the :class:`Request <Request>` instance and those of the
        :class:`Session`.

        :param request: :class:`Request` instance to prepare with this
            session's settings.
        :rtype: requests.PreparedRequest
        aRequestT
amethodaurlaheadersafilesadataajsonaparamsaauthacookiesahooksaprepare_requestamerge_environment_settingsuConstructs a :class:`Request <Request>`, prepares it and sends it.
        Returns :class:`Response <Response>` object.

        :param method: method for the new :class:`Request` object.
        :param url: URL for the new :class:`Request` object.
        :param params: (optional) Dictionary or bytes to be sent in the query
            string for the :class:`Request`.
        :param data: (optional) Dictionary, list of tuples, bytes, or file-like
            object to send in the body of the :class:`Request`.
        :param json: (optional) json to send in the body of the
            :class:`Request`.
        :param headers: (optional) Dictionary of HTTP Headers to send with the
            :class:`Request`.
        :param cookies: (optional) Dict or CookieJar object to send with the
            :class:`Request`.
        :param files: (optional) Dictionary of ``'filename': file-like-objects``
            for multipart encoding upload.
        :param auth: (optional) Auth tuple or callable to enable
            Basic/Digest/Custom HTTP Auth.
        :param timeout: (optional) How long to wait for the server to send
            data before giving up, as a float, or a :ref:`(connect timeout,
            read timeout) <timeouts>` tuple.
        :type timeout: float or tuple
        :param allow_redirects: (optional) Set to True by default.
        :type allow_redirects: bool
        :param proxies: (optional) Dictionary mapping protocol or protocol and
            hostname to the URL of the proxy.
        :param stream: (optional) whether to immediately download the response
            content. Defaults to ``False``.
        :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use. Defaults to ``True``. When set to
            ``False``, requests will accept any TLS certificate presented by
            the server, and will ignore hostname mismatches and/or expired
            certificates, which will make your application vulnerable to
            man-in-the-middle (MitM) attacks. Setting verify to ``False``
            may be useful during local development or testing.
        :param cert: (optional) if String, path to ssl client cert file (.pem).
            If Tuple, ('cert', 'key') pair.
        :rtype: requests.Response
        uSends a GET request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        aOPTIONSuSends a OPTIONS request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        uSends a HEAD request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        uSends a POST request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param data: (optional) Dictionary, list of tuples, bytes, or file-like
            object to send in the body of the :class:`Request`.
        :param json: (optional) json to send in the body of the :class:`Request`.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        aPUTuSends a PUT request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param data: (optional) Dictionary, list of tuples, bytes, or file-like
            object to send in the body of the :class:`Request`.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        aPATCHuSends a PATCH request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param data: (optional) Dictionary, list of tuples, bytes, or file-like
            object to send in the body of the :class:`Request`.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        aDELETEuSends a DELETE request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        asetdefaultuYou can only send PreparedRequests.Taallow_redirectstTastreamaget_adapterTaurlapreferred_clockatimedeltaTasecondsaelapsedadispatch_hookaresponseainsertlwrDayield_requeststa_nextuSend a given PreparedRequest.

        :rtype: requests.Response
        Tano_proxyaget_environ_proxiesaosaenvironTaREQUESTS_CA_BUNDLETaCURL_CA_BUNDLEu
        Check the environment and merge it with some settings.

        :rtype: dict
        aloweraInvalidSchemauNo connection adapters were found for u
        Returns the appropriate connection adapter for the given URL.

        :rtype: requests.adapters.BaseAdapter
        avaluesuCloses all adapters and as such the sessionuRegisters a connection adapter to a prefix.

        Adapters are sorted in descending order by prefix length.
        a__attrs__aSessionu
    Returns a :class:`Session` for context-management.

    .. deprecated:: 1.0.0

        This method has been deprecated since version 1.0.0 and is only kept for
        backwards compatibility. New code should use :class:`~requests.sessions.Session`
        to create a session. This may be removed at a future date.

    :rtype: Session
    u
requests.sessions
~~~~~~~~~~~~~~~~~

This module provides a Session object to manage and persist settings across
requests (cookies, auth, proxies).
a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysatimeacollectionsTaOrderedDictadatetimeTatimedeltaa_internal_utilsTato_native_stringlTaHTTPAdapterTa_basic_auth_stracompatTaMappingacookielibaurljoinaurlparseTaRequestsCookieJaracookiejar_from_dictaextract_cookies_to_jaramerge_cookiesaexceptionsTaChunkedEncodingErroraContentDecodingErroraInvalidSchemaaTooManyRedirectsTadefault_hooksadispatch_hookamodelsTaDEFAULT_REDIRECT_LIMITaREDIRECT_STATIaPreparedRequestaRequestaREDIRECT_STATIastatus_codesTacodesastructuresTaCaseInsensitiveDictautilsT
aDEFAULT_PORTSadefault_headersaget_auth_from_urlaget_environ_proxiesaget_netrc_autharequote_uriaresolve_proxiesarewind_bodyashould_bypass_proxiesato_key_val_listashould_bypass_proxiesaperf_counterurequests.sessionsa__module__aSessionRedirectMixina__qualname__uSessionRedirectMixin.get_redirect_targetuSessionRedirectMixin.should_strip_authTFntnnFuSessionRedirectMixin.rebuild_authuSessionRedirectMixin.rebuild_proxiesuSessionRedirectMixin.rebuild_methodTa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uA Requests session.

    Provides cookie persistence, connection-pooling, and configuration.

    Basic Usage::

      >>> import requests
      >>> s = requests.Session()
      >>> s.get('https://httpbin.org/get')
      <Response [200]>

    Or as a context manager::

      >>> with requests.Session() as s:
      ...     s.get('https://httpbin.org/get')
      <Response [200]>
    Laheadersacookiesaauthaproxiesahooksaparamsaverifyacertaadaptersastreamatrust_envamax_redirectsa__init__uSession.__init__a__enter__uSession.__enter__a__exit__uSession.__exit__uSession.prepare_requestTnnnnnnntnnnnnnuSession.requestuSession.getaoptionsuSession.optionsaheaduSession.headapostuSession.postTnaputuSession.putapatchuSession.patchadeleteuSession.deleteuSession.senduSession.merge_environment_settingsuSession.get_adapteruSession.closeuSession.mounta__getstate__uSession.__getstate__a__setstate__uSession.__setstate__a__orig_bases__asessionurequests\sessions.pyu<module requests.sessions>Ta__class__TaselfTaselfaargsTaselfastateTaselfastateaattravalueTaselfwvTaselfaurlakwargsTaselfaurlaprefixaadapterTaselfarespalocationT
aselfaurlaproxiesastreamaverifyacertano_proxyaenv_proxieswkwvTarequest_hooksasession_hooksadict_classTarequest_settingasession_settingadict_classamerged_settinganone_keysakeyTaselfaprefixaadapterakeys_to_moveakeyTaselfaurladataakwargsTaselfaurladataajsonakwargsTaselfarequestacookiesamerged_cookiesaauthwpTaselfaprepared_requestaresponseaheadersaurlanew_authTaselfaprepared_requestaresponseamethodTaselfaprepared_requestaproxiesaheadersaschemeanew_proxiesausernameapasswordTaselfamethodaurlaparamsadataaheadersacookiesafilesaauthatimeoutaallow_redirectsaproxiesahooksastreamaverifyacertajsonareqaprepasettingsasend_kwargsarespTaselfarespareqastreamatimeoutaverifyacertaproxiesayield_requestsaadapter_kwargsahistaurlaprevious_fragmentaprepared_requestaparsed_rurlaparsedapurged_headersaheaderaheadersarewindableT
aselfarequestakwargsaallow_redirectsastreamahooksaadapterastartwraelapsedarespagenahistoryTaselfaold_urlanew_urlaold_parsedanew_parsedachanged_portachanged_schemeadefault_port.requests.status_codes(a_codesaitemsutoo many values to unpack (expected 2)acodesastartswithTTw\w/aupperadocu_init.<locals>.doca__doc__w
asortedu, u* %d: %su``uu<genexpr>u_init.<locals>.doc.<locals>.<genexpr>u_init.<locals>.<genexpr>u
The ``codes`` object defines a mapping from common names for HTTP statuses
to their numerical codes, accessible either as attributes or as dictionary
items.

Example::

    >>> import requests
    >>> requests.codes['temporary_redirect']
    307
    >>> requests.codes.teapot
    418
    >>> requests.codes['\o/']
    200

Some codes have multiple names, and both upper- and lower-case versions of
the names are allowed. For example, ``codes.ok``, ``codes.OK``, and
``codes.okay`` all correspond to the HTTP status code 200.
a__file__a__spec__aoriginahas_locationa__cached__astructuresTaLookupDictlaLookupDictlDDldlelflglzlllllllllll,l-l.l/l0l1l2l3l4llllllllllllllllllllllllllllllllllllllllllllTacontinueTaswitching_protocolsTaprocessingTacheckpointTauri_too_longarequest_uri_too_longTaokaokayaall_okaall_okayaall_goodu\o/u✓TacreatedTaacceptedTanon_authoritative_infoanon_authoritative_informationTano_contentTareset_contentaresetTapartial_contentapartialTamulti_statusamultiple_statusamulti_statiamultiple_statiTaalready_reportedTaim_usedTamultiple_choicesTamoved_permanentlyamovedu\o-TafoundTasee_otheraotherTanot_modifiedTause_proxyTaswitch_proxyTatemporary_redirectatemporary_movedatemporaryTapermanent_redirectaresume_incompletearesumeTabad_requestabadTaunauthorizedTapayment_requiredapaymentTaforbiddenTanot_foundu-o-Tamethod_not_allowedanot_allowedTanot_acceptableTaproxy_authentication_requiredaproxy_authaproxy_authenticationTarequest_timeoutatimeoutTaconflictTagoneTalength_requiredTaprecondition_failedapreconditionTarequest_entity_too_largeTarequest_uri_too_largeTaunsupported_media_typeaunsupported_mediaamedia_typeTarequested_range_not_satisfiablearequested_rangearange_not_satisfiableTaexpectation_failedTaim_a_teapotateapotai_am_a_teapotTamisdirected_requestTaunprocessable_entityaunprocessableTalockedTafailed_dependencyadependencyTaunordered_collectionaunorderedTaupgrade_requiredaupgradeTaprecondition_requiredapreconditionTatoo_many_requestsatoo_manyTaheader_fields_too_largeafields_too_largeTano_responseanoneTaretry_witharetryTablocked_by_windows_parental_controlsaparental_controlsTaunavailable_for_legal_reasonsalegal_reasonsTaclient_closed_requestTainternal_server_erroraserver_erroru/o\u✗Tanot_implementedTabad_gatewayTaservice_unavailableaunavailableTagateway_timeoutTahttp_version_not_supportedahttp_versionTavariant_also_negotiatesTainsufficient_storageTabandwidth_limit_exceededabandwidthTanot_extendedTanetwork_authentication_requiredanetwork_authanetwork_authenticationTastatus_codesTanamea_initurequests\status_codes.pyTa.0acodeadocTa.0wnu<module requests.status_codes>TacodeatitlesatitleadocTacodeanames.requests.structuresRaOrderedDicta_storeaupdatealowerlavaluesutoo many values to unpack (expected 2)u<genexpr>uCaseInsensitiveDict.__iter__.<locals>.<genexpr>aitemsuLike iteritems(), but with all lowercase keys.uCaseInsensitiveDict.lower_items.<locals>.<genexpr>aMappingaCaseInsensitiveDictalower_itemsanamea__class__a__init__u<lookup 'uu'>agetu
requests.structures
~~~~~~~~~~~~~~~~~~~

Data structures that power Requests.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__acollectionsTaOrderedDictlacompatTaMappingaMutableMappingaMutableMappinga__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests.structuresa__module__uA case-insensitive ``dict``-like object.

    Implements all methods and operations of
    ``MutableMapping`` as well as dict's ``copy``. Also
    provides ``lower_items``.

    All keys are expected to be strings. The structure remembers the
    case of the last key to be set, and ``iter(instance)``,
    ``keys()``, ``items()``, ``iterkeys()``, and ``iteritems()``
    will contain case-sensitive keys. However, querying and contains
    testing is case insensitive::

        cid = CaseInsensitiveDict()
        cid['Accept'] = 'application/json'
        cid['aCCEPT'] == 'application/json'  # True
        list(cid) == ['Accept']  # True

    For example, ``headers['content-encoding']`` will return the
    value of a ``'Content-Encoding'`` response header, regardless
    of how the header name was originally stored.

    If the constructor, ``.update``, or equality comparison
    operations are given keys that have equal ``.lower()``s, the
    behavior is undefined.
    a__qualname__TnuCaseInsensitiveDict.__init__a__setitem__uCaseInsensitiveDict.__setitem__uCaseInsensitiveDict.__getitem__a__delitem__uCaseInsensitiveDict.__delitem__a__iter__uCaseInsensitiveDict.__iter__a__len__uCaseInsensitiveDict.__len__uCaseInsensitiveDict.lower_itemsa__eq__uCaseInsensitiveDict.__eq__acopyuCaseInsensitiveDict.copya__repr__uCaseInsensitiveDict.__repr__a__orig_bases__TOdictaLookupDictuDictionary lookup object.uLookupDict.__init__uLookupDict.__repr__uLookupDict.__getitem__uLookupDict.geturequests\structures.pyTa.0acasedkeyamappedvalueTa.0alowerkeyakeyvalu<module requests.structures>Ta__class__TaselfakeyTaselfaotherTaselfadataakwargsTaselfanamea__class__TaselfTaselfakeyavalueTaselfakeyadefault.requests.utils9awinreglaOpenKeyaHKEY_CURRENT_USERuSoftware\Microsoft\Windows\CurrentVersion\Internet SettingsaQueryValueExaProxyEnableaProxyOverrideTEOSErrorEValueErrorasplitTw;u<local>w.ahostareplaceTw.u\.Tw*u.*Tw?w.areamatchwIagetproxies_environmentaproxy_bypass_environmentaproxy_bypass_registryuReturn True, if the host should be bypassed.

        Checks proxy settings gathered from the environment, if specified,
        or the registry.
        aitemsuReturns an internal sequence dictionary update.a__len__alenafilenoaioaUnsupportedOperationaosafstatast_sizewbamodeawarningsawarnuRequests has determined the content-length for this request using the binary size of the file: however, the file has been opened in text mode (i.e. without the 'b' flag in the mode). This may lead to an incorrect content-length. In Requests 3.0, support will be removed for files in text mode.aFileModeWarningwoatellaseekatotal_lengthTllamaxaenvironagetTaNETRCaNETRC_FILESanetrcTaNetrcParseErroranetrcaNetrcParseErrorapathaexpanduseraexistsaurlparsed:astraasciianetlocaauthenticatorsllTEImportErrorEAttributeErroruReturns the Requests tuple auth for a given url from netrc.u~/uu<genexpr>uget_netrc_auth.<locals>.<genexpr>anameabasestringw<lw>uTries to guess the filename of the given object.utoo many values to unpack (expected 2)aarchivew/amemberazipfileais_zipfileaZipFileanamelistatempfileagettempdirajoinTw/aatomic_opena__enter__a__exit__awriteareadTnnnuReplace nonexistent paths that look like they refer to a member of a zip
    archive with the location of an extracted copy of the target, or else
    just return the provided path unchanged.
    uWrite a file to the disk in an atomic fashionamkstempadirnameafilenameTadirafdopenawbaremoveabytesucannot encode objects that are not 2-tuplesaOrderedDictuTake an object and test to see if it can be represented as a
    dictionary. Unless it can not be represented as such, return an
    OrderedDict, e.g.,

    ::

        >>> from_key_val_list([('key', 'val')])
        OrderedDict([('key', 'val')])
        >>> from_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples
        >>> from_key_val_list({'key': 'val'})
        OrderedDict([('key', 'val')])

    :rtype: OrderedDict
    aMappinguTake an object and test to see if it can be represented as a
    dictionary. If it can be, return a list of tuples, e.g.,

    ::

        >>> to_key_val_list([('key', 'val')])
        [('key', 'val')]
        >>> to_key_val_list({'key': 'val'})
        [('key', 'val')]
        >>> to_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples

    :rtype: list
    a_parse_list_header:lnn:nlnw"aunquote_header_value:llnaresultaappenduParse lists as described by RFC 2068 Section 2.

    In particular, parse comma-separated lists where the elements of
    the list may include quoted-strings.  A quoted-string could
    contain a comma.  A non-quoted string could have quotes in the
    middle.  Quotes are removed automatically after parsing.

    It basically works like :func:`parse_set_header` just that items
    may appear multiple times and case sensitivity is preserved.

    The return value is a standard :class:`list`:

    >>> parse_list_header('token, "quoted value"')
    ['token', 'quoted value']

    To create a header from the :class:`list` again, use the
    :func:`dump_header` function.

    :param value: a string with a list header.
    :return: :class:`list`
    :rtype: list
    w=Tw=luParse lists of key, value pairs as described by RFC 2068 Section 2 and
    convert them into a python dict:

    >>> d = parse_dict_header('foo="is a fish", bar="as well"')
    >>> type(d) is dict
    True
    >>> sorted(d.items())
    [('bar', 'as well'), ('foo', 'is a fish')]

    If there is no value for a key it will be `None`:

    >>> parse_dict_header('key_without_value')
    {'key_without_value': None}

    To create a header from the :class:`dict` again, use the
    :func:`dump_header` function.

    :param value: a string with a dict header.
    :return: :class:`dict`
    :rtype: dict
    :nlnu\\Tu\\w\Tu\"w"uUnquotes a header value.  (Reversal of :func:`quote_header_value`).
    This does not use the real unquoting but what browsers are actually
    using for quoting.

    :param value: the header value to unquote.
    :rtype: str
    avalueacookie_dictuReturns a key/value dictionary from a CookieJar.

    :param cj: CookieJar object to extract cookies from.
    :rtype: dict
    acookiejar_from_dictuReturns a CookieJar from a key/value dictionary.

    :param cj: CookieJar to insert cookies into.
    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :rtype: CookieJar
    uIn requests 3.0, get_encodings_from_content will be removed. For more information, please see the discussion on issue #2266. (This warning should only appear once.)aDeprecationWarningacompileTu<meta.*?charset=["\']*(.+?)["\'>]TaflagsTu<meta.*?content=["\']*;?charset=(.+?)["\'>]Tu^<\?xml.*?encoding=["\']*(.+?)["\'>]afindalluReturns encodings from given content string.

    :param content: bytestring to extract encodings from.
    astrip:lnnu"' afindTw=aitems_to_stripaparams_dictaloweruReturns content type and parameters from given header

    :param header: string
    :return: tuple containing content type and dictionary of
         parameters
    Tucontent-typea_parse_content_type_headeracharsetTu'"atextuISO-8859-1uapplication/jsonuutf-8uReturns encodings from given HTTP Header Dict.

    :param headers: dictionary to extract encoding from.
    :rtype: str
    uStream decodes an iterator.wraencodingaiteratoracodecsagetincrementaldecoderTareplaceTaerrorsadecoderadecodeTctTafinalastream_decode_response_unicodeuIterate over slices of a string.aslice_lengthastringaposaiter_slicesuIn requests 3.0, get_unicode_from_response will be removed. For more information, please see the discussion on issue #2266. (This warning should only appear once.)aget_encoding_from_headersaheadersacontentDaerrorsareplaceuReturns the requested content back in unicode.

    :param r: Response object to get unicode content from.

    Tried:

    1. charset from content-type
    2. fall back and replace all unicode characters

    :rtype: str
    Tw%aparts:llnaisalnumlaInvalidURLuInvalid percent-escape sequence: 'w'aUNRESERVED_SET:lnnw%uUn-escape any percent-escape sequences in a URI that are unreserved
    characters. This leaves all reserved, illegal and non-ASCII bytes encoded.

    :rtype: str
    aquoteaunquote_unreservedDasafeu!#$%&'()*+,/:;=?@[]~Dasafeu!#$&'()*+,/:;=?@[]~uRe-quote the given URI.

    This function passes the given URI through an unquote/quote cycle to
    ensure that it is fully and consistently quoted.

    :rtype: str
    astructaunpacku=Lasocketainet_atonadotted_netmaskuThis function allows you to check if an IP belongs to a network subnet

    Example: returns True if ip = 192.168.1.1 and net = 192.168.1.0/24
             returns False if ip = 192.168.1.1 and net = 192.168.100.0/24

    :rtype: bool
    ql ainet_ntoaapacku>IuConverts mask from /xx format to xxx.xxx.xxx.xxx

    Example: if mask is 24 function returns 255.255.255.0

    :rtype: str
    u
    :rtype: bool
    acountu
    Very simple check of the cidr format in no_proxy variable.

    :rtype: bool
    uSet the environment variable 'env_name' to 'value'

    Save previous value, yield, and then restore the previous value stored in
    the environment variable 'env_name'.

    If 'value' is None, do nothingaenv_nameaold_valueaset_environaget_proxyushould_bypass_proxies.<locals>.get_proxyTano_proxyahostnameano_proxyTw uTw,ais_ipv4_addressais_valid_cidraaddress_in_networkaparsedaportw:aendswithahost_with_portaproxy_bypassagaierrorabypassu
    Returns whether we should bypass proxies or not.

    :rtype: bool
    aupperushould_bypass_proxies.<locals>.<genexpr>ashould_bypass_proxiesagetproxiesu
    Return a dict of environment proxies.

    :rtype: dict
    aschemeTaallu://uall://aalluSelect a proxy for the url, if applicable.

    :param url: The url being for the request
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
    aurlacopyaget_environ_proxiesasetdefaultanew_proxiesuThis method takes proxy information from a request and configuration
    input to resolve a mapping of target proxies. This will consider settings
    such a NO_PROXY to strip proxy configurations.

    :param request: Request or PreparedRequest
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
    :param trust_env: Boolean declaring whether to trust environment configs

    :rtype: dict
    a__version__u
    Return a string representing the default user agent.

    :rtype: str
    aCaseInsensitiveDictuUser-Agentadefault_user_agentuAccept-EncodingaDEFAULT_ACCEPT_ENCODINGaAcceptu*/*aConnectionukeep-aliveu
    :rtype: requests.structures.CaseInsensitiveDict
    u '"u, *<Tw;lTu<> '"areplace_charsalinkalinksuReturn a list of parsed link headers proxies.

    i.e. Link: <http:/.../front.jpeg>; rel=front; type="image/jpeg",<http://.../back.jpeg>; rel=back;type="image/jpeg"

    :rtype: list
    :nlnaBOM_UTF32_LEaBOM_UTF32_BEuutf-32:nlnaBOM_UTF8uutf-8-sigaBOM_UTF16_LEaBOM_UTF16_BEuutf-16a_null:nnla_null2uutf-16-be:lnluutf-16-lela_null3uutf-32-beuutf-32-leu
    :rtype: str
    aparse_urlutoo many values to unpack (expected 7)w@aurlunparseuGiven a URL that may or may not have a scheme, prepend the given scheme.
    Does not replace a present scheme with the one provided as an argument.

    :rtype: str
    aunquoteausernameapasswordTEAttributeErrorETypeErrorTupuGiven a url with authentication components, extract them into a tuple of
    username,password.

    :rtype: (str,str)
    a_validate_header_partuVerifies that header parts don't contain leading whitespace
    reserved characters, or return characters.

    :param header: tuple, in the format (name, value).
    a_HEADER_VALIDATORS_STRa_HEADER_VALIDATORS_BYTEaInvalidHeaderuHeader part (u) from u must be of type str or bytes, not uInvalid leading whitespace, reserved character(s), or returncharacter(s) in header u: utoo many values to unpack (expected 6)arsplitTw@lu
    Given a url remove the fragment and the authentication part.

    :rtype: str
    abodya_body_positionainteger_typesaUnrewindableBodyErrorTuAn error occurred when rewinding request body for redirect.TuUnable to rewind request body for redirect.uMove file pointer back to its recorded starting position
    so it can be read again on redirect.
    u
requests.utils
~~~~~~~~~~~~~~

This module provides utility functions that are used within Requests
that are also useful for external consumption.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__acontextlibasysacollectionsTaOrderedDictuurllib3.utilTamake_headersaparse_urlamake_headersTacertsacertsTa__version__a_internal_utilsTa_HEADER_VALIDATORS_BYTEa_HEADER_VALIDATORS_STRaHEADER_VALIDATORSato_native_stringaHEADER_VALIDATORSato_native_stringacompatTaMappingabasestringabytesagetproxiesagetproxies_environmentainteger_typesTaparse_http_listaparse_http_listTaproxy_bypassaproxy_bypass_environmentaquoteastraunquoteaurlparseaurlunparseacookiesTacookiejar_from_dictaexceptionsTaFileModeWarningaInvalidHeaderaInvalidURLaUnrewindableBodyErrorastructuresTaCaseInsensitiveDictTu.netrca_netrcawhereaDEFAULT_CA_BUNDLE_PATHDahttpahttpslPlaDEFAULT_PORTSu, u,\s*TtTaaccept_encodinguaccept-encodingadict_to_sequenceasuper_lenTFaget_netrc_authaguess_filenameaextract_zipped_pathsacontextmanagerafrom_key_val_listato_key_val_listaparse_list_headeraparse_dict_headeradict_from_cookiejaraadd_dict_to_cookiejaraget_encodings_from_contentaget_unicode_from_responsePBwSwKwQwUwAwrwzw9wMwYwLwBw5waw8wvwowWwjw.w_wCw~w7wfwGwxwgwNwkw0w4wDwRwpwOwdwywJwXwnwEwHwbw2wFwmw6w1wIwTwZw3w-wqwuwswhwtwiwcwVwewwwlwParequote_uriTnaselect_proxyaresolve_proxiesTupython-requestsadefault_headersaparse_header_linkswaguess_json_utfaprepend_scheme_if_neededaget_auth_from_urlacheck_header_validityaurldefragautharewind_bodyurequests\utils.pyTa.0wfTa.0ahostu<module requests.utils>T
aheaderatokensacontent_typeaparamsaparams_dictaitems_to_stripaparamakeyavalueaindex_of_equalsTaheaderaheader_partaheader_validator_indexavalidatoraheader_kindTacjacookie_dictTaipanetaipaddranetaddrabitsanetmaskanetworkTafilenameatmp_descriptoratmp_nameatmp_handlerTaheaderanameavalueTanameTacjacookie_dictacookieTwdTamaskabitsTapathaarchiveamemberaprefixazip_fileatmpaextracted_pathafile_handlerTavalueTaurlaparsedaauthTaheadersacontent_typeaparamsTacontentacharset_reapragma_reaxml_reTaurlano_proxyTaurlaraise_errorsanetrc_fileanetrc_locationsaNetrcParseErroranetrcanetrc_pathwfalocariasplitstrahosta_netrcalogin_iTakeyTwratried_encodingsaencodingTaobjanameTadataasampleanullcountTastring_ipTastring_networkamaskTastringaslice_lengthaposTavaluearesultaitemanameTavaluealinksareplace_charsavalaurlaparamsalinkaparamakeyTavaluearesultaitemTaurlanew_schemeaparsedaschemeaauthahostaportapathaqueryafragmentanetlocTahostTahostawinregainternetSettingsaproxyEnableaproxyOverrideatestTauriasafe_with_percentasafe_without_percentTarequestaproxiesatrust_envaurlaschemeano_proxyanew_proxiesaenviron_proxiesaproxyTaprepared_requestabody_seekTaurlaproxiesaurlpartsaproxy_keysaproxyaproxy_keyTaenv_nameavalueavalue_changedaold_valueTaurlano_proxyaget_proxyano_proxy_argaparsedaproxy_ipahost_with_portahostabypassTaiteratorwradecoderachunkarvTwoatotal_lengthacurrent_positionafilenoTavalueais_filenameTauriapartswiwhwcTaurlaschemeanetlocapathaparamsaqueryafragment.urllib3._base_connectionW8a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypinguutil.connectionTa_TYPE_SOCKET_OPTIONSla_TYPE_SOCKET_OPTIONSluutil.timeoutTa_DEFAULT_TIMEOUTa_TYPE_TIMEOUTa_DEFAULT_TIMEOUTa_TYPE_TIMEOUTuutil.urlTaUrlaUrlaUnionaIOaAnyaIterablea_TYPE_BODYaNamedTuplea__prepare__aProxyConfiga__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3._base_connectiona__module__a__qualname__a__annotations__ussl.SSLContext | Noneassl_contextaboolause_forwarding_for_httpsuNone | str | Literal[False]aassert_hostnameustr | Noneaassert_fingerprinta__orig_bases__a_ResponseOptionsastrarequest_methodarequest_urlapreload_contentadecode_contentaenforce_content_lengthuurllib3\_base_connection.pyu<module urllib3._base_connection>Ta__class__u.urllib3._collectionsm aHTTPHeaderDictatypingaMappingacastTOstrpaIterableaTupleakeysa__getitem__aHasGettableStringKeysa__class__a__init__a_maxsizeadispose_funcaOrderedDicta_containeraRLockalocka__enter__a__exit__apopTnnnapopitemTFTalastutoo many values to unpack (expected 2)avalueuIteration over this class is unlikely to be threadsafe.avaluesaclearaselfa_headersaiteritemsaitema_has_value_for_headera_copy_fromaextendadecodeTulatin-1aloweru, :lnnasetdefaultaensure_can_construct_http_header_dictaitermergeda__eq__la__iter__uHTTPHeaderDict.__iter__laappenduAdds a (name, value) pair, doesn't overwrite the value if it already
        exists.

        If this is called with combine=True, instead of adding a new header value
        as a distinct item during iteration, this will instead append the value to
        any existing header value with a comma. If no existing header value exists
        for the key, then the value will simply be added, ignoring the combine parameter.

        >>> headers = HTTPHeaderDict(foo='bar')
        >>> headers.add('Foo', 'baz')
        >>> headers['foo']
        'bar, baz'
        >>> list(headers.items())
        [('foo', 'bar'), ('foo', 'baz')]
        >>> headers.add('foo', 'quz', combine=True)
        >>> list(headers.items())
        [('foo', 'bar, baz, quz')]
        uextend() takes at most 1 positional arguments (uu given)TaaddaitemsuGeneric import function for any type of header-like object.
        Adapted version of MutableMapping.update in order to insert items
        with self.add instead of self.__setitem__
        a_Sentinelanot_passeduReturns a list of all the values for the named field. Returns an
        empty list if the key doesn't exist.a__name__w(w)aotheragetlistuIterate over all header lines, including duplicate ones.uHTTPHeaderDict.iteritemsuIterate over all headers, merging duplicate ones together.uHTTPHeaderDict.itermergedaHTTPHeaderDictItemViewacopya__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsacollectionsTaOrderedDictaenumTaEnumaautoaEnumaautoathreadingTaRLockaRecentlyUsedContainera__all__aTypeVarTa_KTa_KTTa_VTa_VTTa_DTa_DTaUnionaValidHTTPHeaderSourcea__prepare__u%s.__prepare__() must return a mapping, not %su<metaclass>uurllib3._collectionsa__module__a__qualname__a__orig_bases__DapotentialareturnaobjectuValidHTTPHeaderSource | NoneaGenericaMutableMappingu
    Provides a thread-safe dict-like container which maintains up to
    ``maxsize`` keys while throwing away the least-recently-used keys beyond
    ``maxsize``.

    :param maxsize:
        Maximum number of recent elements to retain.

    :param dispose_func:
        Every time an item is evicted from the container,
        ``dispose_func(value)`` is called.  Callback which will get called
    a__annotations__utyping.OrderedDict[_KT, _VT]aintutyping.Callable[[_VT], None] | NoneTl
nDamaxsizeadispose_funcareturnaintutyping.Callable[[_VT], None] | NoneaNoneuRecentlyUsedContainer.__init__Dakeyareturna_KTa_VTuRecentlyUsedContainer.__getitem__Dakeyavalueareturna_KTa_VTaNonea__setitem__uRecentlyUsedContainer.__setitem__Dakeyareturna_KTaNonea__delitem__uRecentlyUsedContainer.__delitem__Dareturnainta__len__uRecentlyUsedContainer.__len__Dareturnutyping.NoReturnuRecentlyUsedContainer.__iter__DareturnaNoneuRecentlyUsedContainer.clearDareturnuset[_KT]uRecentlyUsedContainer.keysaSetu
    HTTPHeaderDict is unusual for a Mapping[str, str] in that it has two modes of
    address.

    If we directly try to get an item with a particular name, we will get a string
    back that is the concatenated version of all the values:

    >>> d['X-Header-Name']
    'Value1, Value2, Value3'

    However, if we iterate over an HTTPHeaderDict's items, we will optionally combine
    these values based on whether combine=True was called when building up the dictionary

    >>> d = HTTPHeaderDict({"A": "1", "B": "foo"})
    >>> d.add("A", "2", combine=True)
    >>> d.add("B", "bar")
    >>> list(d.items())
    [
        ('A', '1, 2'),
        ('B', 'foo'),
        ('B', 'bar'),
    ]

    This class conforms to the interface required by the MutableMapping ABC while
    also giving us the nonstandard iteration behavior we want; items with duplicate
    keys, ordered by time of first insertion.
    DaheadersareturnaHTTPHeaderDictaNoneuHTTPHeaderDictItemView.__init__uHTTPHeaderDictItemView.__len__Dareturnutyping.Iterator[tuple[str, str]]uHTTPHeaderDictItemView.__iter__Daitemareturnaobjectaboola__contains__uHTTPHeaderDictItemView.__contains__u
    :param headers:
        An iterable of field-value pairs. Must not contain multiple field names
        when compared case-insensitively.

    :param kwargs:
        Additional field-value pairs to pass in to ``dict.update``.

    A ``dict`` like container for storing HTTP Headers.

    Field names are stored and compared case-insensitively in compliance with
    RFC 7230. Iteration provides the first case-sensitive key seen for each
    case-insensitive pair.

    Using ``__setitem__`` syntax overwrites fields that compare equal
    case-insensitively in order to maintain ``dict``'s api. For fields that
    compare equal, instead create a new ``HTTPHeaderDict`` and use ``.add``
    in a loop.

    If multiple fields that are equal case-insensitively are passed to the
    constructor or ``.update``, the behavior is undefined and some will be
    lost.

    >>> headers = HTTPHeaderDict()
    >>> headers.add('Set-Cookie', 'foo=bar')
    >>> headers.add('set-cookie', 'baz=quxx')
    >>> headers['content-length'] = '7'
    >>> headers['SET-cookie']
    'foo=bar, baz=quxx'
    >>> headers['Content-Length']
    '7'
    utyping.MutableMapping[str, list[str]]TnDaheadersakwargsuValidHTTPHeaderSource | NoneastruHTTPHeaderDict.__init__DakeyavalareturnastrpaNoneuHTTPHeaderDict.__setitem__DakeyareturnastrpuHTTPHeaderDict.__getitem__DakeyareturnastraNoneuHTTPHeaderDict.__delitem__DakeyareturnaobjectabooluHTTPHeaderDict.__contains__TuDakeyadefaultareturnastrppuHTTPHeaderDict.setdefaultDaotherareturnaobjectabooluHTTPHeaderDict.__eq__a__ne__uHTTPHeaderDict.__ne__uHTTPHeaderDict.__len__Dareturnutyping.Iterator[str]adiscarduHTTPHeaderDict.discardDacombineFDakeyavalacombineareturnastrpaboolaNoneuHTTPHeaderDict.addDaargsakwargsareturnaValidHTTPHeaderSourceastraNoneuHTTPHeaderDict.extendaoverloadDakeyareturnastrulist[str]uHTTPHeaderDict.getlistDakeyadefaultareturnastra_DTulist[str] | _DTDakeyadefaultareturnastru_Sentinel | _DTulist[str] | _DTagetheadersagetallmatchingheadersaigetaget_allDareturnastra__repr__uHTTPHeaderDict.__repr__DaotherareturnaHTTPHeaderDictaNoneuHTTPHeaderDict._copy_fromDareturnaHTTPHeaderDictuHTTPHeaderDict.copyDareturnaHTTPHeaderDictItemViewuHTTPHeaderDict.itemsDaheader_nameapotential_valueareturnastrpabooluHTTPHeaderDict._has_value_for_headerDaotherareturnaobjectaHTTPHeaderDicta__ior__uHTTPHeaderDict.__ior__a__or__uHTTPHeaderDict.__or__a__ror__uHTTPHeaderDict.__ror__uurllib3\_collections.pyu<module urllib3._collections>Ta__class__Taselfaitemapassed_keyapassed_valTaselfakeyTaselfakeyavalueTaselfaotheramaybe_constructableaother_as_http_header_dictTaselfakeyaitemTaselfakeyavalTaselfaheadersTaselfaheadersakwargsa__class__Taselfamaxsizeadispose_funca__class__Taselfaotheramaybe_constructableTaselfTaselfavalsTaselfaotherTaselfaotheramaybe_constructablearesultTaselfakeyavalueaevicted_itemw_aevicted_valueTaselfaotherakeyavalTaselfaheader_nameapotential_valueTaselfakeyavalacombineakey_loweranew_valsavalsTaselfavaluesavalueTaselfacloneTapotentialTaselfaargsakwargsaotherakeyavalavalueTaselfakeyadefaultTaselfakeyadefaultavalsTaselfakeyavalsavalTaselfakeyadefaulta__class__.urllib3._request_methodsbaheadersuClasses extending RequestMethods must implement their own ``urlopen`` method.aupperurequest got values for both 'body' and 'json' parameters which are mutually exclusiveacopyucontent-typealowerakeysuapplication/jsonuContent-Typea_jsonadumpsDaseparatorsaensure_asciiTw,w:FaencodeTuutf-8abodyaselfa_encode_url_methodsarequest_encode_urlafieldsaurlopen_kwarequest_encode_bodyu
        Make a request using :meth:`urlopen` with the appropriate encoding of
        ``fields`` based on the ``method`` used.

        This is a convenience method that requires the least amount of manual
        effort. It can be used in most situations, while still having the
        option to drop down to more specific methods when necessary, such as
        :meth:`request_encode_url`, :meth:`request_encode_body`,
        or even the lowest level :meth:`urlopen`.
        w?aurlencodeaurlopenu
        Make a request using :meth:`urlopen` with the ``fields`` encoded in
        the url. This is useful for request methods like GET, HEAD, DELETE, etc.
        aHTTPHeaderDicturequest got values for both 'fields' and 'body', can only specify one.aencode_multipart_formdataTaboundaryutoo many values to unpack (expected 2)uapplication/x-www-form-urlencodedasetdefaultaextra_kwu
        Make a request using :meth:`urlopen` with the ``fields`` encoded in
        the body. This is useful for request methods like POST, PUT, PATCH, etc.

        When ``encode_multipart=True`` (default), then
        :func:`urllib3.encode_multipart_formdata` is used to encode
        the payload with the appropriate content type. Otherwise
        :func:`urllib.parse.urlencode` is used with the
        'application/x-www-form-urlencoded' content type.

        Multipart encoding must be used when posting files, and it's reasonably
        safe to use it in other times too. However, it may break request
        signing, such as with OAuth.

        Supports an optional ``fields`` parameter of key/value strings AND
        key/filetuple. A filetuple is a (filename, data, MIME type) tuple where
        the MIME type is optional. For example::

            fields = {
                'foo': 'bar',
                'fakefile': ('foofile.txt', 'contents of foofile'),
                'realfile': ('barfile.txt', open('realfile').read()),
                'typedfile': ('bazfile.bin', open('bazfile').read(),
                              'image/jpeg'),
                'nonamefile': 'contents of nonamefile field',
            }

        When uploading a file, providing a filename (the first parameter of the
        tuple) is optional but recommended to best mimic behavior of browsers.

        Note that if ``headers`` are supplied, the 'Content-Type' header will
        be overwritten because it depends on the dynamic random boundary string
        which is used to compose the body of the request. The random boundary
        string can be explicitly set with the ``multipart_boundary`` parameter.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsajsonlatypinguurllib.parseTaurlencodea_base_connectionTa_TYPE_BODYla_TYPE_BODYa_collectionsTaHTTPHeaderDictafilepostTa_TYPE_FIELDSaencode_multipart_formdataa_TYPE_FIELDSaresponseTaBaseHTTPResponseaBaseHTTPResponseaRequestMethodsa__all__aUnionaSequenceaTupleTOstrObytesaMappinga_TYPE_ENCODE_URL_FIELDSuurllib3._request_methodsa__module__u
    Convenience mixin for classes who implement a :meth:`urlopen` method, such
    as :class:`urllib3.HTTPConnectionPool` and
    :class:`urllib3.PoolManager`.

    Provides behavior for making common types of HTTP request methods and
    decides which type of request field encoding to use.

    Specifically,

    :meth:`.request_encode_url` is for sending requests whose fields are
    encoded in the URL (such as GET, HEAD, DELETE).

    :meth:`.request_encode_body` is for sending requests whose fields are
    encoded in the *body* of the request using multipart or www-form-urlencoded
    (such as for POST, PUT, PATCH).

    :meth:`.request` is for making any kind of request, it will look up the
    appropriate encoding format and use one of the above two methods to make
    the request.

    Initializer parameters:

    :param headers:
        Headers to include with all requests, unless other headers are given
        explicitly.
    a__qualname__SaDELETEaHEADaGETaOPTIONSTnDaheadersareturnutyping.Mapping[str, str] | NoneaNonea__init__uRequestMethods.__init__TnntnDamethodaurlabodyaheadersaencode_multipartamultipart_boundaryakwareturnastrpu_TYPE_BODY | Noneutyping.Mapping[str, str] | Noneaboolustr | Noneutyping.AnyaBaseHTTPResponseuRequestMethods.urlopenTnnnnDamethodaurlabodyafieldsaheadersajsonaurlopen_kwareturnastrpu_TYPE_BODY | Noneu_TYPE_FIELDS | Noneutyping.Mapping[str, str] | Noneutyping.Any | Noneutyping.AnyaBaseHTTPResponsearequestuRequestMethods.requestTnnDamethodaurlafieldsaheadersaurlopen_kwareturnastrpu_TYPE_ENCODE_URL_FIELDS | Noneutyping.Mapping[str, str] | NoneastraBaseHTTPResponseuRequestMethods.request_encode_urlDamethodaurlafieldsaheadersaencode_multipartamultipart_boundaryaurlopen_kwareturnastrpu_TYPE_FIELDS | Noneutyping.Mapping[str, str] | Noneaboolustr | NoneastraBaseHTTPResponseuRequestMethods.request_encode_bodyTuurllib3\_request_methods.pyu<module urllib3._request_methods>TaselfaheadersTaselfamethodaurlabodyafieldsaheadersajsonaurlopen_kwTaselfamethodaurlafieldsaheadersaencode_multipartamultipart_boundaryaurlopen_kwaextra_kwabodyacontent_typeTaselfamethodaurlafieldsaheadersaurlopen_kwaextra_kwTaselfamethodaurlabodyaheadersaencode_multipartamultipart_boundaryakwu.urllib3._versiona__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsu2.0.4a__version__uurllib3\_version.pyu<module urllib3._version>u.urllib3.connection&=a__class__a__init__aTimeoutaresolve_default_timeoutTahostaportatimeoutasource_addressablocksizeasocket_optionsaproxyaproxy_configa_has_connected_to_proxya_response_optionsa_tunnel_hosta_tunnel_porta_tunnel_schemea_dns_hostarstripTw.u
        Getter method to remove any trailing dots that indicate the hostname is an FQDN.

        In general, SSL certificates don't include the trailing dot indicating a
        fully-qualified domain name, and thus, they don't validate properly when
        checked against a domain name that includes the dot. In addition, some
        servers may not expect to receive the trailing dot when provided.

        However, the hostname with trailing dot is critical to DNS resolution; doing a
        lookup with the trailing dot will properly only resolve the appropriate FQDN,
        whereas a lookup without a trailing dot will search the system's search domain
        list. Thus, it's important to keep the original host around for use only in
        those cases where it's appropriate (i.e., when doing DNS lookup to establish the
        actual TCP connection across which we're going to send HTTP requests).
        u
        Setter for the `host` property.

        We assume that only urllib3 uses the _dns_host attribute; httplib itself
        only uses `host`, and it seems reasonable that other libraries follow suit.
        aconnectionacreate_connectionaportatimeoutasource_addressTasource_addressasocket_optionsasocketagaierroraNameResolutionErrorahostaSocketTimeoutaConnectTimeoutErroruConnection to uu timed out. (connect timeout=w)aNewConnectionErroruFailed to establish a new connection: a_HAS_SYS_AUDITasysaaudituhttp.client.connectuEstablish a socket connection and set nodelay settings on it.

        :return: New socket connection.
        TahttpahttpsuInvalid proxy scheme for tunneling: u, must be either 'http' or 'https'aset_tunnelTaportaheadersa_new_connasocka_tunnelawait_for_readDatimeoutZacloseais_verifiedaproxy_is_verifieda_CONTAINS_CONTROL_CHAR_REasearchuMethod cannot contain non-token characters u (found at least agroupaputrequestTaskip_hostaskip_accept_encodingaputheaderato_straloweraSKIPPABLE_HEADERSu', 'asortedatitleuurllib3.util.SKIP_HEADER only supports 'w'aSKIP_HEADERu<genexpr>uHTTPConnection.putheader.<locals>.<genexpr>asettimeouta_ResponseOptionsTarequest_methodarequest_urlapreload_contentadecode_contentaenforce_content_lengthuaccept-encodingTaskip_accept_encodingaskip_hostabody_to_chunksablocksizeTamethodablocksizeachunksacontent_lengthutransfer-encodingTuTransfer-Encodingachunkeducontent-lengthuContent-Lengthuuser-agentuUser-Agenta_get_default_user_agentaitemsutoo many values to unpack (expected 2)aselfaendheadersaencodeTuutf-8asendc%x
%b
Tc0

uHTTPConnection.request.<locals>.<genexpr>awarningsawarnaDeprecationWarninglTuHTTPConnection.request_chunked() is deprecated and will be removed in urllib3 v2.1.0. Instead use HTTPConnection.request(..., chunked=True).TacategoryastacklevelarequestTabodyaheadersachunkedu
        Alternative to the common request method, which sends the
        body with chunked encoding and not as one block
        aResponseNotReadyaresponseTaHTTPResponselaHTTPResponselagetresponseaassert_header_parsingamsgaHeaderParsingErroralogawarninguFailed to parse headers (url=%s): %sa_url_from_connectionarequest_urlDaexc_infotaHTTPHeaderDictastatusaversionareasonaresp_optionsapreload_contentadecode_contentaenforce_content_lengtharequest_methodTabodyaheadersastatusaversionareasonapreload_contentadecode_contentaoriginal_responseaenforce_content_lengtharequest_methodarequest_urlu
        Get the response from the server.

        If the HTTPConnection is in the correct state, returns an instance of HTTPResponse or of whatever object is returned by the response_class variable.

        If a request has not been sent or if a previous response has not be handled, ResponseNotReady is raised. If the HTTP response indicates that the connection should be closed, then it will be closed before the response is returned. When the connection is closed, the underlying socket is closed.
        Taportatimeoutasource_addressablocksizeasocket_optionsaproxyaproxy_configakey_fileacert_fileakey_passwordassl_contextaserver_hostnameaassert_hostnameaassert_fingerprintassl_versionassl_minimum_versionassl_maximum_versionaexpanduseraca_certsaca_cert_diraca_cert_dataaverify_modearesolve_cert_reqsTnacert_reqsTuHTTPSConnection.set_cert() is deprecated and will be removed in urllib3 v2.1.0. Instead provide the parameters to the HTTPSConnection constructor.u
        This method should only be called once, before the connection is used.
        ahttpsa_connect_tls_proxyadatetimeadateatodayaRECENT_DATEuSystem time is way off (before u). This will probably lead to SSL verification errorsaSystemTimeWarninga_ssl_wrap_socket_and_match_hostnameTasockacert_reqsassl_versionassl_minimum_versionassl_maximum_versionaca_certsaca_cert_diraca_cert_dataacert_fileakey_fileakey_passwordaserver_hostnameassl_contextatls_in_tlsaassert_hostnameaassert_fingerprintatypingacastaProxyConfigTacert_reqsassl_versionassl_minimum_versionassl_maximum_versionaca_certsaca_cert_diraca_cert_dataaserver_hostnameassl_contextaassert_hostnameaassert_fingerprintacert_fileakey_fileakey_passwordatls_in_tlsu
        Establish a TLS connection to the proxy using the provided SSL context.
        acreate_urllib3_contextaresolve_ssl_versionTassl_versionassl_minimum_versionassl_maximum_versionacert_reqsassl_aIS_PYOPENSSLaHAS_NEVER_CHECK_COMMON_NAMEacheck_hostnameaload_default_certsastripTu[]w%arfindTw%ais_ipaddressassl_wrap_socketT
asockakeyfileacertfileakey_passwordaca_certsaca_cert_diraca_cert_dataaserver_hostnameassl_contextatls_in_tlsa_assert_fingerprintagetpeercertTtTabinary_formasslaCERT_NONEahostname_checks_common_namea_match_hostnamea_WrappedAndVerifiedSocketassl_sockaCERT_REQUIREDTasocketais_verifieduLogic for constructing an SSLContext from all TLS parameters, passing
    that down into ssl_wrap_socket, and then doing certificate verification
    either via hostname or fingerprint. This function exists to guarantee
    that both proxies and targets have the same behavior when connecting via TLS.
    amatch_hostnameaasserted_hostnameaCertificateErroruCertificate did not match expected hostname: %s. Certificate: %sa_peer_certw areasplitu[^a-z]uwrong version numberuunknown protocolaProxyErroruUnable to connect to proxyu. Your proxy appears to only use HTTP and not HTTPS, try changing your proxy URL to be HTTP. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#https-proxy-error-http-proxya__cause__upython-urllib3/a__version__aHTTPSConnectionahttpaUrlTaschemeahostaportapathaurluReturns the URL from a given connection. This is mainly used for testing and logging.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaloggingaosuhttp.clientTaHTTPConnectionaHTTPConnectiona_HTTPConnectionTaHTTPExceptionaHTTPExceptionTaResponseNotReadyTatimeouta_collectionsTaHTTPHeaderDictuutil.responseTaassert_header_parsinguutil.timeoutTa_DEFAULT_TIMEOUTa_TYPE_TIMEOUTaTimeouta_DEFAULT_TIMEOUTa_TYPE_TIMEOUTuutil.utilTato_struutil.waitTawait_for_readaSSLErroraBaseSSLErrorTEImportErrorEAttributeErrorTEBaseExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.connectiona__module__a__qualname__a__orig_bases__a_base_connectionTa_TYPE_BODYa_TYPE_BODYTaProxyConfigTa_ResponseOptionsa_versionTa__version__aexceptionsTaConnectTimeoutErroraHeaderParsingErroraNameResolutionErroraNewConnectionErroraProxyErroraSystemTimeWarningautilTaSKIP_HEADERaSKIPPABLE_HEADERSaconnectionassl_uutil.requestTabody_to_chunksuutil.ssl_Taassert_fingerprintTacreate_urllib3_contextais_ipaddressaresolve_cert_reqsaresolve_ssl_versionassl_wrap_socketuutil.ssl_match_hostnameTaCertificateErroramatch_hostnameuutil.urlTaUrlaConnectionErroraBrokenPipeErroragetLoggerTuurllib3.connectionDahttpahttpslPlaport_by_schemeTllpacompileTu[^-!#$%&'*+.^_`|~0-9a-zA-Z]u
    Based on :class:`http.client.HTTPConnection` but provides an extra constructor
    backwards-compatibility layer between older and newer Pythons.

    Additional keyword parameters are used to configure attributes of the connection.
    Accepted parameters include:

    - ``source_address``: Set the source address for the current connection.
    - ``socket_options``: Set specific options on the underlying socket. If not specified, then
      defaults are loaded from ``HTTPConnection.default_socket_options`` which includes disabling
      Nagle's algorithm (sets TCP_NODELAY to 1) unless the connection is behind a proxy.

      For example, if you wish to enable TCP Keep Alive in addition to the defaults,
      you might pass:

      .. code-block:: python

         HTTPConnection.default_socket_options + [
             (socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1),
         ]

      Or you may want to disable the defaults by passing an empty list (e.g., ``[]``).
    a__annotations__adefault_portutyping.ClassVar[int]aIPPROTO_TCPaTCP_NODELAYadefault_socket_optionsutyping.ClassVar[connection._TYPE_SOCKET_OPTIONS]aboolubool | Noneaintutuple[str, int] | Noneuconnection._TYPE_SOCKET_OPTIONS | Noneu_ResponseOptions | Noneustr | Noneuint | Nonel Dahostaportatimeoutasource_addressablocksizeasocket_optionsaproxyaproxy_configareturnastruint | Nonea_TYPE_TIMEOUTutuple[str, int] | NoneaintuNone | connection._TYPE_SOCKET_OPTIONSuUrl | NoneuProxyConfig | NoneaNoneuHTTPConnection.__init__apropertyDareturnastruHTTPConnection.hostasetterDavalueareturnastraNoneDareturnusocket.socketuHTTPConnection._new_connTnnahttpDahostaportaheadersaschemeareturnastruint | Noneutyping.Mapping[str, str] | NoneastraNoneuHTTPConnection.set_tunnelDareturnaNoneaconnectuHTTPConnection.connectDareturnaboolais_closeduHTTPConnection.is_closedais_connecteduHTTPConnection.is_connectedahas_connected_to_proxyuHTTPConnection.has_connected_to_proxyuHTTPConnection.closeTFpDamethodaurlaskip_hostaskip_accept_encodingareturnastrpaboolpaNoneuHTTPConnection.putrequestDaheaderavaluesareturnastrpaNoneuHTTPConnection.putheaderTnnDachunkedapreload_contentadecode_contentaenforce_content_lengthFtppDamethodaurlabodyaheadersachunkedapreload_contentadecode_contentaenforce_content_lengthareturnastrpu_TYPE_BODY | Noneutyping.Mapping[str, str] | NoneaboolpppaNoneuHTTPConnection.requestDamethodaurlabodyaheadersareturnastrpu_TYPE_BODY | Noneutyping.Mapping[str, str] | NoneaNonearequest_chunkeduHTTPConnection.request_chunkedDareturnaHTTPResponseuHTTPConnection.getresponseu
    Many of the parameters to this constructor are passed to the underlying SSL
    socket by means of :py:func:`urllib3.util.ssl_wrap_socket`.
    uint | str | NoneuNone | str | bytesDahostaportatimeoutasource_addressablocksizeasocket_optionsaproxyaproxy_configacert_reqsaassert_hostnameaassert_fingerprintaserver_hostnameassl_contextaca_certsaca_cert_diraca_cert_dataassl_minimum_versionassl_maximum_versionassl_versionacert_fileakey_fileakey_passwordareturnastruint | Nonea_TYPE_TIMEOUTutuple[str, int] | NoneaintuNone | connection._TYPE_SOCKET_OPTIONSuUrl | NoneuProxyConfig | Noneuint | str | NoneuNone | str | Literal[False]ustr | Noneustr | Noneussl.SSLContext | Noneustr | Noneustr | NoneuNone | str | bytesuint | Noneuint | Noneuint | str | Noneustr | Noneustr | Noneustr | NoneaNoneuHTTPSConnection.__init__TnnnnnnnnnD
akey_fileacert_fileacert_reqsakey_passwordaca_certsaassert_hostnameaassert_fingerprintaca_cert_diraca_cert_dataareturnustr | Noneustr | Noneuint | str | Noneustr | Noneustr | NoneuNone | str | Literal[False]ustr | Noneustr | NoneuNone | str | bytesaNoneaset_certuHTTPSConnection.set_certuHTTPSConnection.connectDahostnameasockareturnastrusocket.socketussl.SSLSocketuHTTPSConnection._connect_tls_proxyaNamedTupleu
    Wrapped socket and whether the connection is
    verified after the TLS handshake
    ussl.SSLSocket | SSLTransportDatls_in_tlsFDasockacert_reqsassl_versionassl_minimum_versionassl_maximum_versionacert_fileakey_fileakey_passwordaca_certsaca_cert_diraca_cert_dataaassert_hostnameaassert_fingerprintaserver_hostnameassl_contextatls_in_tlsareturnusocket.socketuNone | str | intuNone | str | intuint | Noneuint | Noneustr | Noneustr | Noneustr | Noneustr | Noneustr | NoneuNone | str | bytesuNone | str | Literal[False]ustr | Noneustr | Noneussl.SSLContext | Noneaboola_WrappedAndVerifiedSocketTFDacertaasserted_hostnameahostname_checks_common_nameareturnu_TYPE_PEER_CERT_RET_DICT | NoneastraboolaNoneDaerraproxy_schemeareturnaExceptionustr | NoneaProxyErrora_wrap_proxy_erroruUsed to detect a failed ConnectionCls import.aDummyConnectionTaVerifiedHTTPSConnectionDaconnapathareturnuHTTPConnection | HTTPSConnectionustr | Noneastruurllib3\connection.pyTa.0wkTa.0wvTa__class__u<module urllib3.connection>T
aselfahostaportatimeoutasource_addressablocksizeasocket_optionsaproxyaproxy_configa__class__Taselfahostaportatimeoutasource_addressablocksizeasocket_optionsaproxyaproxy_configacert_reqsaassert_hostnameaassert_fingerprintaserver_hostnameassl_contextaca_certsaca_cert_diraca_cert_dataassl_minimum_versionassl_maximum_versionassl_versionacert_fileakey_fileakey_passworda__class__Taselfahostnameasockaproxy_configassl_contextasock_and_verifiedTacertaasserted_hostnameahostname_checks_common_nameastripped_hostnameweTaselfasockweTasockacert_reqsassl_versionassl_minimum_versionassl_maximum_versionacert_fileakey_fileakey_passwordaca_certsaca_cert_diraca_cert_dataaassert_hostnameaassert_fingerprintaserver_hostnameassl_contextatls_in_tlsacertadefault_ssl_contextacontextanormalizedassl_sockahostname_checks_common_nameTaconnapathaschemeTaerraproxy_schemeaerror_normalizedais_likely_http_proxyahttp_proxy_warninganew_errTaselfa__class__TaselfTaselfasockaserver_hostnameatls_in_tlsais_time_offasock_and_verifiedTaselfaresp_optionsaHTTPResponseahttplib_responseahpeaheadersaresponsea__class__TaselfavalueTaselfaheaderavaluesaskippable_headersa__class__Taselfamethodaurlaskip_hostaskip_accept_encodingamatcha__class__Taselfamethodaurlabodyaheadersachunkedapreload_contentadecode_contentaenforce_content_lengthaheader_keysaskip_accept_encodingaskip_hostachunks_and_clachunksacontent_lengthaheaderavalueachunkTaselfamethodaurlabodyaheadersT
aselfakey_fileacert_fileacert_reqsakey_passwordaca_certsaassert_hostnameaassert_fingerprintaca_cert_diraca_cert_dataTaselfahostaportaheadersaschemea__class__.urllib3.connectionpoolTkaLocationValueErrorTuNo host specified.a_normalize_hostaschemeTaschemeahostaportanormalize_hostalowera_tunnel_hosta__name__uu(host=u, port=w)acloseaConnectionPoola__init__aRequestMethodsaTimeoutafrom_floataRetryaDEFAULTatimeoutaretriesaQueueClsapoolablockaproxyaproxy_headersaproxy_configaselfaputTnlanum_connectionsanum_requestsaconn_kwasetdefaultasocket_optionsaweakrefafinalizea_close_pool_connectionslalogadebuguStarting new HTTP connection (%d): %s:%su80aConnectionClsaconnect_timeoutu
        Return a fresh :class:`HTTPConnection`.
        aClosedPoolErroruPool is closed.agetTablockatimeoutaqueueaEmptyaEmptyPoolErroruPool is empty and a new connection can't be opened due to blocking mode.ais_connection_droppeduResetting dropped connection: %saconna_new_connu
        Get a connection. Will return a pooled connection if one is available.

        If no connections are available and :prop:`.block` is ``False``, then a
        fresh connection is returned.

        :param timeout:
            Seconds to wait before giving up and raising
            :class:`urllib3.exceptions.EmptyPoolError` if the pool is empty and
            :prop:`.block` is ``True``.
        DablockFaFullaFullPoolErroruPool reached maximum size and no more connections are allowed.awarninguConnection pool is full, discarding connection: %s. Connection pool size: %saqsizeu
        Put a connection back into the pool.

        :param conn:
            Connection object for the current host and port as returned by
            :meth:`._new_conn` or :meth:`._get_conn`.

        If the pool is already full, the connection is closed and discarded
        because we exceeded maxsize. If connections are discarded frequently,
        then maxsize should be increased.

        If the pool is closed, then the connection will be closed and discarded.
        a_DEFAULT_TIMEOUTacloneuHelper that always returns a :class:`urllib3.util.Timeout`aSocketTimeoutaReadTimeoutErroruRead timed out. (read timeout=aerrnoa_blocking_errnosaerruIs the error actually a timeout? Will raise a ReadTimeout or passa_get_timeoutastart_connectaresolve_default_timeouta_validate_connaBaseSSLErrora_raise_timeoutTaerraurlatimeout_valueaNewConnectionErroraTimeoutErroraCertificateErroraSSLErrorahas_connected_to_proxya_wrap_proxy_errorarequestTabodyaheadersachunkedapreload_contentadecode_contentaenforce_content_lengthaBrokenPipeErroraEPROTOTYPEaread_timeoutais_closedaurlagetresponsea_connectiona_poolu%s://%s:%s "%s %s %s" %s %samethoda_http_vsn_strastatusalength_remainingu
        Perform a request on a given urllib connection object taken from our
        pool.

        :param conn:
            a connection from one of our connection pools

        :param method:
            HTTP request method (such as GET, POST, PUT, etc.)

        :param url:
            The URL to perform the request on.

        :param body:
            Data to send in the request body, either :class:`str`, :class:`bytes`,
            an iterable of :class:`str`/:class:`bytes`, or a file-like object.

        :param headers:
            Dictionary of custom headers to send, such as User-Agent,
            If-None-Match, etc. If None, pool headers are used. If provided,
            these headers completely replace any pool-specific headers.

        :param retries:
            Configure the number of retries to allow before raising a
            :class:`~urllib3.exceptions.MaxRetryError` exception.

            Pass ``None`` to retry until you receive a response. Pass a
            :class:`~urllib3.util.retry.Retry` object for fine-grained control
            over different types of retries.
            Pass an integer number to retry connection errors that many times,
            but no other types of errors. Pass zero to never retry.

            If ``False``, then retries are disabled and any exception is raised
            immediately. Also, instead of raising a MaxRetryError on redirects,
            the redirect response will be returned.

        :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.

        :param timeout:
            If specified, overrides the default timeout for this one
            request. It may be a float (in seconds) or an instance of
            :class:`urllib3.util.Timeout`.

        :param chunked:
            If True, urllib3 will send the body using chunked transfer
            encoding. Otherwise, urllib3 will send the body using the standard
            content-length form. Defaults to False.

        :param response_conn:
            Set this to ``None`` if you will handle releasing the connection or
            set the connection to have the response release it.

        :param preload_content:
          If True, the response's body will be preloaded during construction.

        :param decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.

        :param enforce_content_length:
            Enforce content length checking. Body returned by server must match
            value of Content-Length header, if present. Otherwise, raise error.
        utoo many values to unpack (expected 2)u
        Close all pooled connections and disable the pool.
        astartswithTw/aparse_urlunot enough values to unpack (expected at least 4, got %d)ahttpaport_by_schemeu
        Check if the given ``url`` is a member of the same host as this
        connection pool.
        aheadersafrom_intTaredirectadefaultais_same_hostaHostChangedErrorato_stra_encode_targetaconnection_requires_http_tunnelacopyaupdateaset_file_positiona_get_connTatimeouta_prepare_proxya_make_requestabodyachunkedaresponse_connapreload_contentadecode_contentaHTTPExceptionaProtocolErroraProxyErroruConnection aborted.aincrementasysaexc_infolTaerrora_poola_stacktraceasleepa_put_connuRetrying (%r) after connection broken by '%r': %saurlopenaredirectapool_timeoutarelease_connabody_posaresponseaget_redirect_locationl/aGETTaresponsea_poolaMaxRetryErroraraise_on_redirectadrain_connasleep_for_retryuRedirecting %s -> %saassert_same_hostTuRetry-Afterais_retryaraise_on_statusuRetry: %su
        Get a connection from the pool and perform an HTTP request. This is the
        lowest level call for making a request, so you'll need to specify all
        the raw details.

        .. note::

           More commonly, it's appropriate to use a convenience method
           such as :meth:`request`.

        .. note::

           `release_conn` will only behave as expected if
           `preload_content=False` because we want to make
           `preload_content=False` the default behaviour someday soon without
           breaking backwards compatibility.

        :param method:
            HTTP request method (such as GET, POST, PUT, etc.)

        :param url:
            The URL to perform the request on.

        :param body:
            Data to send in the request body, either :class:`str`, :class:`bytes`,
            an iterable of :class:`str`/:class:`bytes`, or a file-like object.

        :param headers:
            Dictionary of custom headers to send, such as User-Agent,
            If-None-Match, etc. If None, pool headers are used. If provided,
            these headers completely replace any pool-specific headers.

        :param retries:
            Configure the number of retries to allow before raising a
            :class:`~urllib3.exceptions.MaxRetryError` exception.

            Pass ``None`` to retry until you receive a response. Pass a
            :class:`~urllib3.util.retry.Retry` object for fine-grained control
            over different types of retries.
            Pass an integer number to retry connection errors that many times,
            but no other types of errors. Pass zero to never retry.

            If ``False``, then retries are disabled and any exception is raised
            immediately. Also, instead of raising a MaxRetryError on redirects,
            the redirect response will be returned.

        :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.

        :param redirect:
            If True, automatically handle redirects (status codes 301, 302,
            303, 307, 308). Each redirect counts as a retry. Disabling retries
            will disable redirect, too.

        :param assert_same_host:
            If ``True``, will make sure that the host of the pool requests is
            consistent else will raise HostChangedError. When ``False``, you can
            use the pool on an HTTP proxy and request foreign hosts.

        :param timeout:
            If specified, overrides the default timeout for this one
            request. It may be a float (in seconds) or an instance of
            :class:`urllib3.util.Timeout`.

        :param pool_timeout:
            If set and the pool is set to block=True, then this method will
            block for ``pool_timeout`` seconds and raise EmptyPoolError if no
            connection is available within the time period.

        :param bool preload_content:
            If True, the response's body will be preloaded into memory.

        :param bool decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.

        :param release_conn:
            If False, then the urlopen call will not release the connection
            back into the pool once a response is received (but will release if
            you read the entire contents of the response such as when
            `preload_content=True`). This is useful if you're not preloading
            the response's content immediately. You will need to call
            ``r.release_conn()`` on the response ``r`` to return the connection
            back into the pool. If None, it takes the value of ``preload_content``
            which defaults to ``True``.

        :param bool chunked:
            If True, urllib3 will send the body using chunked transfer
            encoding. Otherwise, urllib3 will send the body using the standard
            content-length form. Defaults to False.

        :param int body_pos:
            Position to seek to in file-like body in the event of a retry or
            redirect. Typically this won't need to be set because urllib3 will
            auto-populate the value when needed.
        a__class__akey_fileacert_fileacert_reqsakey_passwordaca_certsaca_cert_dirassl_versionassl_minimum_versionassl_maximum_versionaassert_hostnameaassert_fingerprintahttpsaset_tunnelTaschemeahostaportaheadersaconnectuEstablishes a tunnel connection through HTTP CONNECT.uStarting new HTTPS connection (%d): %s:%su443aDummyConnectionuCan't connect to HTTPS URL because the SSL module is not available.u
        Return a fresh :class:`urllib3.connection.HTTPConnection`.
        ais_verifiedawarningsawarnuUnverified HTTPS request is being made to host 'u'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warningsaInsecureRequestWarningu
        Called right before a request is made, after the socket is created.
        lPaHTTPSConnectionPoolaHTTPConnectionPoolu
    Given a url, return an :class:`.ConnectionPool` instance of its host.

    This is a shortcut for not having to parse out the scheme, host, and port
    of the url before creating an :class:`.ConnectionPool` instance.

    :param url:
        Absolute URL string that must include the scheme. Port is optional.

    :param \**kw:
        Passes additional parameters to the constructor of the appropriate
        :class:`.ConnectionPool`. Useful for specifying things like
        timeout, maxsize, headers, etc.

    Example::

        >>> conn = connection_from_url('http://google.com/')
        >>> r = conn.request('GET', '/')
    Tw[aendswithTw]:llnu
    Normalize hosts for comparisons and use with sockets.
    aUrlTaschemeahostaportapathuReturns the URL from a given connection pool. This is mainly used for testing and logging.TFTablockuDrains a queue of connections and closes each one.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaloggingatypingasocketaTracebackTypea_base_connectionTa_TYPE_BODYa_TYPE_BODYa_request_methodsTaRequestMethodsaconnectionTaBaseSSLErroraBrokenPipeErroraDummyConnectionaHTTPConnectionaHTTPExceptionaHTTPSConnectionaProxyConfiga_wrap_proxy_erroraHTTPConnectionaHTTPSConnectionaProxyConfigTaport_by_schemeaexceptionsT
aClosedPoolErroraEmptyPoolErroraFullPoolErroraHostChangedErroraInsecureRequestWarningaLocationValueErroraMaxRetryErroraNewConnectionErroraProtocolErroraProxyErroraReadTimeoutErroraSSLErroraTimeoutErrorTaBaseHTTPResponseaBaseHTTPResponseuutil.connectionTais_connection_droppeduutil.proxyTaconnection_requires_http_tunneluutil.requestTa_TYPE_BODY_POSITIONaset_file_positiona_TYPE_BODY_POSITIONuutil.retryTaRetryuutil.ssl_match_hostnameTaCertificateErroruutil.timeoutTa_DEFAULT_TIMEOUTa_TYPE_DEFAULTaTimeouta_TYPE_DEFAULTuutil.urlTaUrla_encode_targetTa_normalize_hostTaparse_urluutil.utilTato_stragetLoggerTuurllib3.connectionpoolaUniona_TYPE_TIMEOUTaTypeVarTa_SelfTa_SelfTuurllib3.connectionpoola__module__u
    Base class for all connection pools, such as
    :class:`.HTTPConnectionPool` and :class:`.HTTPSConnectionPool`.

    .. note::
       ConnectionPool.urlopen() does not normalize or percent-encode target URIs
       which is useful if your target server doesn't support percent-encoded
       target URIs.
    a__qualname__a__annotations__ustr | NoneaLifoQueueDahostaportareturnastruint | NoneaNoneuConnectionPool.__init__Dareturnastra__str__uConnectionPool.__str__Daselfareturna_SelfTpa__enter__uConnectionPool.__enter__Daexc_typeaexc_valaexc_tbareturnutype[BaseException] | NoneuBaseException | NoneuTracebackType | NoneuLiteral[False]a__exit__uConnectionPool.__exit__DareturnaNoneuConnectionPool.closeTaEAGAINaEWOULDBLOCKa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>u
    Thread-safe connection pool for one host.

    :param host:
        Host used for this HTTP Connection (e.g. "localhost"), passed into
        :class:`http.client.HTTPConnection`.

    :param port:
        Port used for this HTTP Connection (None is equivalent to 80), passed
        into :class:`http.client.HTTPConnection`.

    :param timeout:
        Socket timeout in seconds for each individual connection. This can
        be a float or integer, which sets the timeout for the HTTP request,
        or an instance of :class:`urllib3.util.Timeout` which gives you more
        fine-grained control over request timeouts. After the constructor has
        been parsed, this is always a `urllib3.util.Timeout` object.

    :param maxsize:
        Number of connections to save that can be reused. More than 1 is useful
        in multithreaded situations. If ``block`` is set to False, more
        connections will be created but they will not be saved once they've
        been used.

    :param block:
        If set to True, no more than ``maxsize`` connections will be used at
        a time. When no free connections are available, the call will block
        until a connection has been released. This is a useful side effect for
        particular multithreaded situations where one does not want to use more
        than maxsize connections per host to prevent flooding.

    :param headers:
        Headers to include with all requests, unless other headers are given
        explicitly.

    :param retries:
        Retry configuration to use by default with requests in this pool.

    :param _proxy:
        Parsed proxy URL, should not be used directly, instead, see
        :class:`urllib3.ProxyManager`

    :param _proxy_headers:
        A dictionary with proxy headers, should not be used directly,
        instead, see :class:`urllib3.ProxyManager`

    :param \**conn_kw:
        Additional parameters are used to create fresh :class:`urllib3.connection.HTTPConnection`,
        :class:`urllib3.connection.HTTPSConnection` instances.
    utype[BaseHTTPConnection] | type[BaseHTTPSConnection]Dahostaportatimeoutamaxsizeablockaheadersaretriesa_proxya_proxy_headersa_proxy_configaconn_kwastruint | Noneu_TYPE_TIMEOUT | Noneaintaboolutyping.Mapping[str, str] | NoneuRetry | bool | int | NoneuUrl | Noneutyping.Mapping[str, str] | NoneuProxyConfig | Noneutyping.AnyuHTTPConnectionPool.__init__DareturnaBaseHTTPConnectionuHTTPConnectionPool._new_connDatimeoutareturnufloat | NoneaBaseHTTPConnectionuHTTPConnectionPool._get_connDaconnareturnuBaseHTTPConnection | NoneaNoneuHTTPConnectionPool._put_connDaconnareturnaBaseHTTPConnectionaNoneuHTTPConnectionPool._validate_connuHTTPConnectionPool._prepare_proxyDatimeoutareturna_TYPE_TIMEOUTaTimeoutuHTTPConnectionPool._get_timeoutDaerraurlatimeout_valueareturnuBaseSSLError | OSError | SocketTimeoutastru_TYPE_TIMEOUT | NoneaNoneuHTTPConnectionPool._raise_timeoutD
aconnamethodaurlabodyaheadersaretriesatimeoutachunkedaresponse_connapreload_contentadecode_contentaenforce_content_lengthareturnaBaseHTTPConnectionastrpu_TYPE_BODY | Noneutyping.Mapping[str, str] | NoneuRetry | Nonea_TYPE_TIMEOUTabooluBaseHTTPConnection | NoneaboolppaBaseHTTPResponseuHTTPConnectionPool._make_requestuHTTPConnectionPool.closeDaurlareturnastrabooluHTTPConnectionPool.is_same_hostDamethodaurlabodyaheadersaretriesaredirectaassert_same_hostatimeoutapool_timeoutarelease_connachunkedabody_posapreload_contentadecode_contentaresponse_kwareturnastrpu_TYPE_BODY | Noneutyping.Mapping[str, str] | NoneuRetry | bool | int | Noneaboolpa_TYPE_TIMEOUTuint | Noneubool | Noneaboolu_TYPE_BODY_POSITION | Noneaboolputyping.AnyaBaseHTTPResponseuHTTPConnectionPool.urlopena__orig_bases__u
    Same as :class:`.HTTPConnectionPool`, but HTTPS.

    :class:`.HTTPSConnection` uses one of ``assert_fingerprint``,
    ``assert_hostname`` and ``host`` in this order to verify connections.
    If ``assert_hostname`` is False, no verification is done.

    The ``key_file``, ``cert_file``, ``cert_reqs``, ``ca_certs``,
    ``ca_cert_dir``, ``ssl_version``, ``key_password`` are only used if :mod:`ssl`
    is available and are fed into :meth:`urllib3.util.ssl_wrap_socket` to upgrade
    the connection socket into an SSL socket.
    utype[BaseHTTPSConnection]Dahostaportatimeoutamaxsizeablockaheadersaretriesa_proxya_proxy_headersakey_fileacert_fileacert_reqsakey_passwordaca_certsassl_versionassl_minimum_versionassl_maximum_versionaassert_hostnameaassert_fingerprintaca_cert_diraconn_kwareturnastruint | Noneu_TYPE_TIMEOUT | Noneaintaboolutyping.Mapping[str, str] | NoneuRetry | bool | int | NoneuUrl | Noneutyping.Mapping[str, str] | Noneustr | Noneustr | Noneuint | str | Noneustr | Noneustr | Noneuint | str | Noneussl.TLSVersion | Noneussl.TLSVersion | Noneustr | Literal[False] | Noneustr | Noneustr | Noneutyping.AnyaNoneuHTTPSConnectionPool.__init__DaconnareturnaHTTPSConnectionaNoneuHTTPSConnectionPool._prepare_proxyDareturnaBaseHTTPSConnectionuHTTPSConnectionPool._new_connuHTTPSConnectionPool._validate_connDaurlakwareturnastrutyping.AnyaHTTPConnectionPoolaconnection_from_urlaoverloadDahostaschemeareturnaNoneustr | NoneaNoneDahostaschemeareturnastrustr | NoneastrDahostaschemeareturnustr | Noneustr | Noneustr | NoneDapoolapathareturnuHTTPConnectionPool | HTTPSConnectionPoolustr | Noneastra_url_from_poolDapoolareturnuqueue.LifoQueue[typing.Any]aNoneuurllib3\connectionpool.pyu<module urllib3.connectionpool>Ta__class__TaselfTaselfaexc_typeaexc_valaexc_tbTaselfahostaportTaselfahostaportatimeoutamaxsizeablockaheadersaretriesa_proxya_proxy_headersa_proxy_configaconn_kww_apoolTaselfahostaportatimeoutamaxsizeablockaheadersaretriesa_proxya_proxy_headersakey_fileacert_fileacert_reqsakey_passwordaca_certsassl_versionassl_minimum_versionassl_maximum_versionaassert_hostnameaassert_fingerprintaca_cert_diraconn_kwa__class__TapoolaconnTaselfatimeoutaconnTaselfatimeoutTaselfaconnamethodaurlabodyaheadersaretriesatimeoutachunkedaresponse_connapreload_contentadecode_contentaenforce_content_lengthanew_eatimeout_objwearead_timeoutaresponseTaselfaactual_hostaactual_portTaselfaconnTahostaschemeTaselfaconnatunnel_schemeTaselfaerraurlatimeout_valueTapoolapathTaselfaconna__class__Taselfaold_poolTaurlakwaschemew_ahostaportTaselfaurlaschemew_ahostaportTaselfamethodaurlabodyaheadersaretriesaredirectaassert_same_hostatimeoutapool_timeoutarelease_connachunkedabody_posapreload_contentadecode_contentaresponse_kwanew_eaparsed_urladestination_schemeaconnarelease_this_connahttp_tunnel_requiredaerraclean_exitatimeout_objwearesponse_connaresponsearedirect_locationahas_retry_after.urllib3pwaloggingagetLoggerTaurllib3aStreamHandlerasetFormatteraFormatterTu%(asctime)s %(levelname)s %(message)saaddHandlerasetLeveladebugTuAdded a stderr logging handler to logger: %saurllib3u
    Helper for quickly adding a StreamHandler to the logger. Useful for
    debugging.

    Returns the handler after adding it.
    awarningsasimplefilteraignoreu
    Helper for quickly disabling all urllib3 warnings.
    a_DEFAULT_POOLarequestTabodyafieldsaheadersapreload_contentadecode_contentaredirectaretriesatimeoutajsonu
    A convenience, top-level request method. It uses a module-global ``PoolManager`` instance.
    Therefore, its side effects could be shared across dependencies relying on it.
    To avoid side effects create a new ``PoolManager`` instance and use it instead.
    The method does not accept low-level ``**urlopen_kw`` keyword arguments.
    u
Python HTTP library with thread-safe connection pooling, file post support, user friendly, and more
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_urllib3u\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsatypingTaNullHandleraNullHandleruTaexceptionslaexceptionsa_base_connectionTa_TYPE_BODYa_TYPE_BODYa_collectionsTaHTTPHeaderDictaHTTPHeaderDicta_versionTa__version__a__version__aconnectionpoolTaHTTPConnectionPoolaHTTPSConnectionPoolaconnection_from_urlaHTTPConnectionPoolaHTTPSConnectionPoolaconnection_from_urlafilepostTa_TYPE_FIELDSaencode_multipart_formdataa_TYPE_FIELDSaencode_multipart_formdataapoolmanagerTaPoolManageraProxyManageraproxy_from_urlaPoolManageraProxyManageraproxy_from_urlaresponseTaBaseHTTPResponseaHTTPResponseaBaseHTTPResponseaHTTPResponseuutil.requestTamake_headersamake_headersuutil.retryTaRetryaRetryuutil.timeoutTaTimeoutaTimeoutasslaOPENSSL_VERSIONastartswithTuOpenSSL awarnuurllib3 v2.0 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with u. See: https://github.com/urllib3/urllib3/issues/3020aNotOpenSSLWarningaOPENSSL_VERSION_INFOTlppu. See: https://github.com/urllib3/urllib3/issues/2168aurllib3_secure_extraaDeprecationWarninglTu'urllib3[secure]' extra is deprecated and will be removed in urllib3 v2.1.0. Read more in this issue: https://github.com/urllib3/urllib3/issues/2680TacategoryastackleveluAndrey Petrov (andrey.petrov@shazow.net)a__author__aMITa__license__TaHTTPConnectionPoolaHTTPHeaderDictaHTTPSConnectionPoolaPoolManageraProxyManageraHTTPResponseaRetryaTimeoutaadd_stderr_loggeraconnection_from_urladisable_warningsaencode_multipart_formdataamake_headersaproxy_from_urlarequestaBaseHTTPResponsea__all__aDEBUGDalevelareturnaintulogging.StreamHandler[typing.TextIO]aadd_stderr_loggeraalwaysaSecurityWarningDaappendtadefaultaInsecurePlatformWarningaHTTPWarningDacategoryareturnutype[Warning]aNoneadisable_warningsDabodyafieldsaheadersapreload_contentadecode_contentaredirectaretriesatimeoutajsonnnntppnlnDamethodaurlabodyafieldsaheadersapreload_contentadecode_contentaredirectaretriesatimeoutajsonareturnastrpu_TYPE_BODY | Noneu_TYPE_FIELDS | Noneutyping.Mapping[str, str] | Noneubool | Noneubool | Noneubool | NoneuRetry | bool | int | NoneuTimeout | float | int | Noneutyping.Any | NoneaBaseHTTPResponseuurllib3\__init__.pyu<module urllib3>TalevelaloggerahandlerTacategoryTamethodaurlabodyafieldsaheadersapreload_contentadecode_contentaredirectaretriesatimeoutajson.urllib3.contrib2a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_urllib3u\not_existingacontribTaNUITKA_PACKAGE_urllib3_contribu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__uurllib3\contrib\__init__.pyu<module urllib3.contrib>u.urllib3.contrib.pyopenssl%Ka_validate_dependencies_metaPyOpenSSLContextautilaSSLContextassl_aIS_PYOPENSSLuMonkey-patch urllib3 with PyOpenSSL-backed SSL-support.aorig_util_SSLContextuUndo monkey-patching by :func:`inject_into_urllib3`.ucryptography.x509.extensionsTaExtensionslaExtensionsaget_extension_for_classu'cryptography' module missing required functionality.  Try upgrading to v1.3.4 or newer.uOpenSSL.cryptoTaX509aX509a_x509u'pyOpenSSL' module missing required functionality. Try upgrading to v0.14 or newer.u
    Verifies that PyOpenSSL's package-level dependencies have been met.
    Throws `ImportError` if they are not met.
    Danameareturnastrubytes | Noneu
        Borrowed wholesale from the Python Cryptography Project. It turns out
        that we can't just safely call `idna.encode`: it can explode for
        wildcard names. This avoids that problem.
        aidna_encodeu_dnsname_to_stdlib.<locals>.idna_encodew:adecodeTuutf-8u
    Converts a dNSName SubjectAlternativeName field to the form used by the
    standard library on the given Python version.

    Cryptography produces a dNSName as a unicode string that was idna-decoded
    from ASCII bytes. We need to idna-encode that string to get it back, and
    then on Python 3 we also need to convert to unicode via UTF-8 (the stdlib
    uses PyUnicode_FromStringAndSize on it, which decodes via UTF-8).

    If the name cannot be idna-encoded then we return None signalling that
    the name given should be skipped.
    aidnaTu*.w.anameastartswithaencodeTaasciiacoreaIDNAErrorato_cryptographyaextensionsax509aSubjectAlternativeNameavalueaExtensionNotFoundaDuplicateExtensionaUnsupportedExtensionaUnsupportedGeneralNameTypealogawarninguA problem was encountered with the certificate that prevented urllib3 from finding the SubjectAlternativeName field. This can affect certificate validation. The error was %sa_dnsname_to_stdlibaget_values_for_typeaDNSNameaDNSaextendaIPAddressu
    Given an PyOpenSSL certificate, provides all the subject alternative names.
    uIP Addressu<genexpr>uget_subj_alt_name.<locals>.<genexpr>aconnectionasocketasuppress_ragged_eofsa_io_refsa_closedafilenolaclosearecvaOpenSSLaSSLaSysCallErroraargsTluUnexpected EOFcweaZeroReturnErroraget_shutdownaRECEIVED_SHUTDOWNaWantReadErrorawait_for_readagettimeoutatimeoutTuThe read operation timed outaErrorasslaSSLErroruread error: uarecv_intoasettimeoutaselfasendadataaWantWriteErrorawait_for_writeatotal_senta_send_until_doneaSSL_WRITE_BLOCKSIZEashutdowna_real_closeaget_peer_certificateacryptoadump_certificateaFILETYPE_ASN1asubjectacommonNameaget_subjectaCNasubjectAltNameaget_subj_alt_nameaget_protocol_version_namea_openssl_versionsaprotocolaContexta_ctxa_optionsacheck_hostnameaTLSVersionaMINIMUM_SUPPORTEDa_minimum_versionaMAXIMUM_SUPPORTEDa_maximum_versiona_set_ctx_optionsa_openssl_to_stdlib_verifyaget_verify_modeaset_verifya_stdlib_to_openssl_verifya_verify_callbackaset_default_verify_pathsaset_cipher_listaload_verify_locationsaBytesIOuunable to load trusted certificates: ause_certificate_chain_fileaset_passwd_cbu<lambda>uPyOpenSSLContext.load_cert_chain.<locals>.<lambda>ause_privatekey_fileuUnable to load certificate chain: apasswordato_bytesaasciiaset_alpn_protosaConnectionais_ipaddressaserver_hostnameaset_tlsext_host_nameacnxaset_connect_stateado_handshakeasockTuselect timed outubad handshake: aWrappedSocketaset_optionsa_openssl_to_ssl_minimum_versiona_openssl_to_ssl_maximum_versionu
Module for using pyOpenSSL as a TLS backend. This module was relevant before
the standard library ``ssl`` module supported SNI, but now that we've dropped
support for Python 2.7 all relevant Python versions support SNI so
**this module is no longer recommended**.

This needs the following packages installed:

* `pyOpenSSL`_ (tested with 16.0.0)
* `cryptography`_ (minimum 1.3.4, from pyopenssl)
* `idna`_ (minimum 2.0, from cryptography)

However, pyOpenSSL depends on cryptography, which depends on idna, so while we
use all three directly here we end up having relatively few packages required.

You can install them with the following command:

.. code-block:: bash

    $ python -m pip install pyopenssl cryptography idna

To activate certificate checking, call
:func:`~urllib3.contrib.pyopenssl.inject_into_urllib3` from your Python code
before you begin making HTTP requests. This can be done in a ``sitecustomize``
module, or at any other time before your application begins using ``urllib3``,
like this:

.. code-block:: python

    try:
        import urllib3.contrib.pyopenssl
        urllib3.contrib.pyopenssl.inject_into_urllib3()
    except ImportError:
        pass

.. _pyopenssl: https://www.pyopenssl.org
.. _cryptography: https://cryptography.io
.. _idna: https://github.com/kjd/idna
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsuOpenSSL.SSLacryptographyTax509ucryptography.x509TaUnsupportedExtensionTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.contrib.pyopenssla__module__a__qualname__a__orig_bases__aloggingatypingawarningsTasocketasocket_clsTatimeoutTautillawarnaDeprecationWarningTu'urllib3.contrib.pyopenssl' module is deprecated and will be removed in urllib3 v2.1.0. Read more in this issue: https://github.com/urllib3/urllib3/issues/2680Tacategoryastacklevelainject_into_urllib3aextract_from_urllib3a__all__aPROTOCOL_TLSaSSLv23_METHODaPROTOCOL_TLS_CLIENTaPROTOCOL_TLSv1aTLSv1_METHODaPROTOCOL_TLSv1_1aTLSv1_1_METHODaPROTOCOL_TLSv1_2aTLSv1_2_METHODaCERT_NONEaVERIFY_NONEaCERT_OPTIONALaVERIFY_PEERaCERT_REQUIREDaVERIFY_FAIL_IF_NO_PEER_CERTutoo many values to unpack (expected 2)aOP_NO_SSLv2aOP_NO_SSLv3a_OP_NO_SSLv2_OR_SSLv3aintaOP_NO_TLSv1a_OP_NO_TLSv1aOP_NO_TLSv1_1a_OP_NO_TLSv1_1aOP_NO_TLSv1_2a_OP_NO_TLSv1_2aOP_NO_TLSv1_3a_OP_NO_TLSv1_3aTLSv1aTLSv1_1aTLSv1_2aTLSv1_3udict[int, int]l@agetLoggerTuurllib3.contrib.pyopensslDareturnaNoneDanameareturnastrustr | NoneDapeer_certareturnaX509ulist[tuple[str, str]]uAPI-compatibility wrapper for Python OpenSSL's Connection-class.TtDaconnectionasocketasuppress_ragged_eofsareturnuOpenSSL.SSL.Connectionasocket_clsaboolaNonea__init__uWrappedSocket.__init__DareturnaintuWrappedSocket.filenoa_decref_socketiosuWrappedSocket._decref_socketiosDaargsakwargsareturnutyping.Anyutyping.AnyabytesuWrappedSocket.recvDaargsakwargsareturnutyping.Anyutyping.AnyaintuWrappedSocket.recv_intoDatimeoutareturnafloataNoneuWrappedSocket.settimeoutDadataareturnabytesaintuWrappedSocket._send_until_doneDadataareturnabytesaNoneasendalluWrappedSocket.sendalluWrappedSocket.shutdownuWrappedSocket.closeuWrappedSocket._real_closeTFDabinary_formareturnabooludict[str, list[typing.Any]] | NoneagetpeercertuWrappedSocket.getpeercertDareturnastraversionuWrappedSocket.versionTamakefileu
    I am a wrapper class for the PyOpenSSL ``Context`` object. I am responsible
    for translating the interface of the standard library ``SSLContext`` object
    to calls into PyOpenSSL.
    DaprotocolareturnaintaNoneuPyOpenSSLContext.__init__aoptionsuPyOpenSSLContext.optionsasetterDavalueareturnaintaNoneaverify_modeuPyOpenSSLContext.verify_modeDavalueareturnussl.VerifyModeaNoneuPyOpenSSLContext.set_default_verify_pathsDaciphersareturnubytes | straNoneaset_ciphersuPyOpenSSLContext.set_ciphersTnnnDacafileacapathacadataareturnustr | Noneustr | Noneubytes | NoneaNoneuPyOpenSSLContext.load_verify_locationsTnnDacertfileakeyfileapasswordareturnastrustr | Noneustr | NoneaNoneaload_cert_chainuPyOpenSSLContext.load_cert_chainDaprotocolsareturnulist[bytes | str]aNoneaset_alpn_protocolsuPyOpenSSLContext.set_alpn_protocolsTFtpnDasockaserver_sideado_handshake_on_connectasuppress_ragged_eofsaserver_hostnameareturnasocket_clsaboolppubytes | str | NoneaWrappedSocketawrap_socketuPyOpenSSLContext.wrap_socketuPyOpenSSLContext._set_ctx_optionsaminimum_versionuPyOpenSSLContext.minimum_versionDaminimum_versionareturnaintaNoneamaximum_versionuPyOpenSSLContext.maximum_versionDamaximum_versionareturnaintaNoneDacnxax509aerr_noaerr_depthareturn_codeareturnuOpenSSL.SSL.ConnectionaX509aintppabooluurllib3\contrib\pyopenssl.pyTa.0anameTw_apasswordTapasswordu<module urllib3.contrib.pyopenssl>Ta__class__Taselfaconnectionasocketasuppress_ragged_eofsTaselfaprotocolTaselfTanameaidna_encodeaencoded_nameTaselfadataweTaExtensionsaX509ax509Tacnxax509aerr_noaerr_depthareturn_codeTapeer_certacertaextweanamesTaselfabinary_formax509TanameaidnaaprefixTaselfacertfileakeyfileapasswordweTaselfacafileacapathacadataweTaselfamaximum_versionTaselfaminimum_versionTaselfavalueTaselfaargsakwargsadataweTaselfaargsakwargsweTaselfadataatotal_sentasentTaselfaprotocolsTaselfaciphersTaselfatimeoutTaselfasockaserver_sideado_handshake_on_connectasuppress_ragged_eofsaserver_hostnameacnxwe.urllib3.contrib.socks|a_socks_optionsa__class__a__init__asource_addressasocket_optionsaextra_kwasocksacreate_connectionahostaportaproxy_typeasocks_versionaproxy_addraproxy_hostaproxy_portaproxy_usernameausernameaproxy_passwordapasswordaproxy_rdnsardnsatimeoutaSocketTimeoutaConnectTimeoutErroruConnection to uu timed out. (connect timeout=w)aProxyErrorasocket_erraNewConnectionErroruFailed to establish a new connection: u
        Establish a new connection via the SOCKS proxy.
        aparse_urlaauthaparsedasplitTw:utoo many values to unpack (expected 2)aschemeasocks5aPROXY_TYPE_SOCKS5asocks5hasocks4aPROXY_TYPE_SOCKS4asocks4auUnable to determine SOCKS version from aproxy_urlaSOCKSProxyManagerapool_classes_by_schemeu
This module contains provisional support for SOCKS proxies from within
urllib3. This module supports SOCKS4, SOCKS4A (an extension of SOCKS4), and
SOCKS5. To enable its functionality, either install PySocks or install this
module with the ``socks`` extra.

The SOCKS implementation supports the full range of urllib3 features. It also
supports the following SOCKS features:

- SOCKS4A (``proxy_url='socks4a://...``)
- SOCKS4 (``proxy_url='socks4://...``)
- SOCKS5 with remote DNS (``proxy_url='socks5h://...``)
- SOCKS5 with local DNS (``proxy_url='socks5://...``)
- Usernames and passwords for the SOCKS proxy

.. note::
   It is recommended to use ``socks5h://`` or ``socks4a://`` schemes in
   your ``proxy_url`` to ensure that DNS resolution is done from the remote
   server instead of client-side when connecting to a domain name.

SOCKS4 supports IPv4 and domain names with the SOCKS4A extension. SOCKS5
supports IPv4, IPv6, and domain names.

When connecting to a SOCKS4 proxy the ``username`` portion of the ``proxy_url``
will be sent as the ``userid`` section of the SOCKS request:

.. code-block:: python

    proxy_url="socks4a://<userid>@proxy-host"

When connecting to a SOCKS5 proxy the ``username`` and ``password`` portion
of the ``proxy_url`` will be sent as the username/password to authenticate
with the proxy:

.. code-block:: python

    proxy_url="socks5h://<username>:<password>@proxy-host"

a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationslawarningsaexceptionsTaDependencyWarninglaDependencyWarningawarnuSOCKS support in urllib3 requires the installation of optional dependencies: specifically, PySocks.  For more information, see https://urllib3.readthedocs.io/en/latest/contrib.html#socks-proxiesatypingasocketTatimeoutaconnectionTaHTTPConnectionaHTTPSConnectionaHTTPConnectionaHTTPSConnectionaconnectionpoolTaHTTPConnectionPoolaHTTPSConnectionPoolaHTTPConnectionPoolaHTTPSConnectionPoolTaConnectTimeoutErroraNewConnectionErrorapoolmanagerTaPoolManageraPoolManageruutil.urlTaparse_urlasslaTypedDicta__prepare__a_TYPE_SOCKS_OPTIONSa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.contrib.socksa__module__a__qualname__a__annotations__aintustr | Noneaboola__orig_bases__aDictaAnyaSOCKSConnectionu
    A plain-text HTTP connection that connects via a SOCKS proxy.
    Da_socks_optionsaargsakwargsareturna_TYPE_SOCKS_OPTIONSutyping.Anyutyping.AnyaNoneuSOCKSConnection.__init__Dareturnusocks.socksocketa_new_connuSOCKSConnection._new_connaSOCKSHTTPSConnectionaSOCKSHTTPConnectionPoolaConnectionClsaSOCKSHTTPSConnectionPoolu
    A version of the urllib3 ProxyManager that routes connections via the
    defined SOCKS proxy.
    ahttpahttpsTnnl
nDaproxy_urlausernameapasswordanum_poolsaheadersaconnection_pool_kwastrustr | Noneustr | Noneaintutyping.Mapping[str, str] | Noneutyping.AnyuSOCKSProxyManager.__init__uurllib3\contrib\socks.pyu<module urllib3.contrib.socks>Ta__class__Taselfa_socks_optionsaargsakwargsa__class__T
aselfaproxy_urlausernameapasswordanum_poolsaheadersaconnection_pool_kwaparsedasplitasocks_versionardnsasocks_optionsa__class__Taselfaextra_kwaconnweaerror.urllib3.exceptionsaapoola__class__a__init__uu: Tnnaurlaoriginal_errorareasonuMax retries exceeded with url: u (Caused by w)uTried to open a foreign host with url: aretriesaconnawarningsawarnuThe 'pool' property is deprecated and will be removed in urllib3 v2.1.0. Use 'conn' instead.aDeprecationWarningDastacklevelluFailed to resolve 'u' (uFailed to parse: alocationuNot supported URL scheme aschemeapartialaexpecteduIncompleteRead(%i bytes read, %i more expected)atellalength_remainingaresponsealengthuInvalidChunkLength(got length %r, %i bytes read)alocalhostuProxy URL had no scheme, should start with http:// or https://uProxy URL had unsupported scheme u, should use http:// or https://aUnknownu, unparsed data: a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsasocketlatypinguemail.errorsTaMessageDefectaMessageDefectuhttp.clientTaIncompleteReadaIncompleteReadahttplib_IncompleteReadTEExceptiona__prepare__aHTTPErrora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.exceptionsa__module__uBase exception used by this module.a__qualname__a__orig_bases__aWarningaHTTPWarninguBase warning used by this module.aTupleaCallableTQOobjectTOobjectQa_TYPE_REDUCE_RESULTaPoolErroruBase exception for errors caused within a pool.DapoolamessageareturnaConnectionPoolastraNoneuPoolError.__init__Dareturna_TYPE_REDUCE_RESULTa__reduce__uPoolError.__reduce__aRequestErroruBase exception for PoolErrors that have associated URLs.DapoolaurlamessageareturnaConnectionPoolastrpaNoneuRequestError.__init__uRequestError.__reduce__aSSLErroruRaised when SSL certificate fails in an HTTPS connection.aProxyErroruRaised when the connection to a proxy fails.a__annotations__aExceptionDamessageaerrorareturnastraExceptionaNoneuProxyError.__init__aDecodeErroruRaised when automatic decoding based on Content-Type fails.aProtocolErroruRaised when something unexpected happens mid-request/response.aConnectionErroraMaxRetryErroruRaised when the maximum number of retries is exceeded.

    :param pool: The connection pool
    :type pool: :class:`~urllib3.connectionpool.HTTPConnectionPool`
    :param str url: The requested Url
    :param reason: The underlying error
    :type reason: :class:`Exception`

    TnDapoolaurlareasonareturnaConnectionPoolastruException | NoneaNoneuMaxRetryError.__init__aHostChangedErroruRaised when an existing pool gets a request for a foreign host.TlDapoolaurlaretriesareturnaConnectionPoolastruRetry | intaNoneuHostChangedError.__init__aTimeoutStateErroruRaised when passing an invalid state to a timeoutaTimeoutErroruRaised when a socket timeout error occurs.

    Catching this error will catch both :exc:`ReadTimeoutErrors
    <ReadTimeoutError>` and :exc:`ConnectTimeoutErrors <ConnectTimeoutError>`.
    aReadTimeoutErroruRaised when a socket timeout occurs while receiving data from a serveraConnectTimeoutErroruRaised when a socket timeout occurs while connecting to a serveraNewConnectionErroruRaised when we fail to establish a new connection. Usually ECONNREFUSED.DaconnamessageareturnaHTTPConnectionastraNoneuNewConnectionError.__init__apropertyDareturnaHTTPConnectionuNewConnectionError.poolaNameResolutionErroruRaised when host name resolution fails.DahostaconnareasonastraHTTPConnectionusocket.gaierroruNameResolutionError.__init__aEmptyPoolErroruRaised when a pool runs out of connections and no more are allowed.aFullPoolErroruRaised when we try to add a connection to a full pool in blocking mode.aClosedPoolErroruRaised when a request enters a pool after the pool has been closed.aLocationValueErroruRaised when there is something wrong with a given URL input.aLocationParseErroruRaised when get_host or similar fails to parse the URL input.DalocationareturnastraNoneuLocationParseError.__init__aURLSchemeUnknownuRaised when a URL input has an unsupported scheme.DaschemeastruURLSchemeUnknown.__init__aResponseErroruUsed as a container for an error reason supplied in a MaxRetryError.utoo many error responsesaGENERIC_ERRORutoo many {status_code} error responsesaSPECIFIC_ERRORaSecurityWarninguWarned when performing security reducing actionsaInsecureRequestWarninguWarned when making an unverified HTTPS request.aNotOpenSSLWarninguWarned when using unsupported SSL libraryaSystemTimeWarninguWarned when system time is suspected to be wrongaInsecurePlatformWarninguWarned when certain TLS/SSL configuration is not available on a platform.aDependencyWarningu
    Warned when an attempt is made to import a module with missing optional
    dependencies.
    aResponseNotChunkeduResponse needs to be chunked in order to read it as chunks.aBodyNotHttplibCompatibleu
    Body should be :class:`http.client.HTTPResponse` like
    (have an fp attribute which returns raw chunks) for read_chunked().
    u
    Response length doesn't match expected Content-Length

    Subclass of :class:`http.client.IncompleteRead` to allow int value
    for ``partial`` to avoid creating large objects on streamed reads.
    DapartialaexpectedareturnaintpaNoneuIncompleteRead.__init__Dareturnastra__repr__uIncompleteRead.__repr__aInvalidChunkLengthuInvalid chunk length in a chunked response.DaresponsealengthareturnaHTTPResponseabytesaNoneuInvalidChunkLength.__init__uInvalidChunkLength.__repr__aInvalidHeaderuThe header provided was somehow invalid.aProxySchemeUnknownuProxyManager does not support the supplied schemeDaschemeareturnustr | NoneaNoneuProxySchemeUnknown.__init__TEValueErroraProxySchemeUnsupporteduFetching HTTPS resources through HTTPS proxies is unsupportedaHeaderParsingErroruRaised by assert_header_parsing, but we convert it to a log.warning statement.Dadefectsaunparsed_dataareturnulist[MessageDefect]ubytes | str | NoneaNoneuHeaderParsingError.__init__aUnrewindableBodyErroruurllib3 encountered an error when trying to rewind a bodyuurllib3\exceptions.pyu<module urllib3.exceptions>Ta__class__Taselfaconnamessagea__class__Taselfadefectsaunparsed_dataamessagea__class__Taselfahostaconnareasonamessagea__class__Taselfalocationamessagea__class__Taselfamessageaerrora__class__TaselfapartialaexpectedTaselfapoolamessagea__class__Taselfapoolaurlamessagea__class__Taselfapoolaurlareasonamessagea__class__Taselfapoolaurlaretriesamessagea__class__TaselfaresponsealengthTaselfaschemeamessagea__class__Taself.urllib3.fields|amimetypesaguess_typelu
    Guess the "Content-Type" of a file.

    :param filename:
        The filename to guess the "Content-Type" of using :mod:`mimetypes`.
    :param default:
        If no "Content-Type" can be guessed, default to `default`.
    awarningsawarnu'format_header_param_rfc2231' is deprecated and will be removed in urllib3 v2.1.0. This is not valid for multipart/form-data header parameters.aDeprecationWarningDastacklevelladecodeTuutf-8u"\
uu="avaluew"aasciiTEUnicodeEncodeErrorEUnicodeDecodeErroraemailautilsaencode_rfc2231uutf-8u*=u
    Helper function to format and quote a single header parameter using the
    strategy defined in RFC 2231.

    Particularly useful for header parameters which might contain
    non-ASCII values, like file names. This follows
    `RFC 2388 Section 4.4 <https://tools.ietf.org/html/rfc2388#section-4.4>`_.

    :param name:
        The name of the parameter, a string expected to be ASCII only.
    :param value:
        The value of the parameter, provided as ``bytes`` or `str``.
    :returns:
        An RFC-2231-formatted unicode string.

    .. deprecated:: 2.0.0
        Will be removed in urllib3 v2.1.0. This is not valid for
        ``multipart/form-data`` header parameters.
    u<genexpr>uformat_header_param_rfc2231.<locals>.<genexpr>atranslateDl
l
l"u%0Au%0Du%22u
    Format and quote a single multipart header parameter.

    This follows the `WHATWG HTML Standard`_ as of 2021/06/10, matching
    the behavior of current browser and curl versions. Values are
    assumed to be UTF-8. The ``\n``, ``\r``, and ``"`` characters are
    percent encoded.

    .. _WHATWG HTML Standard:
        https://html.spec.whatwg.org/multipage/
        form-control-infrastructure.html#multipart-form-data

    :param name:
        The name of the parameter, an ASCII-only ``str``.
    :param value:
        The value of the parameter, a ``str`` or UTF-8 encoded
        ``bytes``.
    :returns:
        A string ``name="value"`` with the escaped value.

    .. versionchanged:: 2.0.0
        Matches the WHATWG HTML Standard as of 2021/06/10. Control
        characters are no longer percent encoded.

    .. versionchanged:: 2.0.0
        Renamed from ``format_header_param_html5`` and
        ``format_header_param``. The old names will be removed in
        urllib3 v2.1.0.
    u'format_header_param_html5' has been renamed to 'format_multipart_header_param'. The old name will be removed in urllib3 v2.1.0.aformat_multipart_header_paramu
    .. deprecated:: 2.0.0
        Renamed to :func:`format_multipart_header_param`. Will be
        removed in urllib3 v2.1.0.
    u'format_header_param' has been renamed to 'format_multipart_header_param'. The old name will be removed in urllib3 v2.1.0.a_namea_filenameadataaheadersuThe 'header_formatter' parameter is deprecated and will be removed in urllib3 v2.1.0.aheader_formatteratypingacastaTuplea_TYPE_FIELD_VALUEutoo many values to unpack (expected 3)utoo many values to unpack (expected 2)aguess_content_typeafilenameTafilenameaheader_formatteramake_multipartTacontent_typeu
        A :class:`~urllib3.fields.RequestField` factory from old-style tuple parameters.

        Supports constructing :class:`~urllib3.fields.RequestField` from
        parameter of key/value strings AND key/filetuple. A filetuple is a
        (filename, data, MIME type) tuple where the MIME type is optional.
        For example::

            'foo': 'bar',
            'fakefile': ('foofile.txt', 'contents of foofile'),
            'realfile': ('barfile.txt', open('realfile').read()),
            'typedfile': ('bazfile.bin', open('bazfile').read(), 'image/jpeg'),
            'nonamefile': 'contents of nonamefile field',

        Field names and filenames must be unicode.
        u
        Override this method to change how each multipart header
        parameter is formatted. By default, this calls
        :func:`format_multipart_header_param`.

        :param name:
            The name of the parameter, an ASCII-only ``str``.
        :param value:
            The value of the parameter, a ``str`` or UTF-8 encoded
            ``bytes``.

        :meta public:
        aitemsapartsaappendaselfa_render_partu; u
        Helper function to format and quote a single header.

        Useful for single headers that are composed of multiple items. E.g.,
        'Content-Disposition' fields.

        :param header_parts:
            A sequence of (k, v) tuples or a :class:`dict` of (k, v) to format
            as `k1="v1"; k2="v2"; ...`.
        uContent-DispositionuContent-TypeuContent-Locationagetalinesu: Tu
u
u
        Renders the headers for this request field.
        uform-dataa_render_partsanameu
        Makes this request field into a multipart request field.

        This method overrides "Content-Disposition", "Content-Type" and
        "Content-Location" headers to the request parameter.

        :param content_disposition:
            The 'Content-Disposition' of the request body. Defaults to 'form-data'
        :param content_type:
            The 'Content-Type' of the request body.
        :param content_location:
            The 'Content-Location' of the request body.

        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsuemail.utilsaUnionTOstrObytesa_TYPE_FIELD_VALUE_TUPLETuapplication/octet-streamDafilenameadefaultareturnustr | NoneastrpDanameavalueareturnastra_TYPE_FIELD_VALUEastraformat_header_param_rfc2231aformat_header_param_html5aformat_header_paramuurllib3.fieldsa__module__u
    A data container for request body parameters.

    :param name:
        The name of this request field. Must be unicode.
    :param data:
        The data/value body.
    :param filename:
        An optional filename of the request field. Must be unicode.
    :param headers:
        An optional dict-like object of headers to initially use for the field.

    .. versionchanged:: 2.0.0
        The ``header_formatter`` parameter is deprecated and will
        be removed in urllib3 v2.1.0.
    aRequestFielda__qualname__TnnnDanameadataafilenameaheadersaheader_formatterastra_TYPE_FIELD_VALUEustr | Noneutyping.Mapping[str, str] | Noneutyping.Callable[[str, _TYPE_FIELD_VALUE], str] | Nonea__init__uRequestField.__init__TnDafieldnameavalueaheader_formatterareturnastra_TYPE_FIELD_VALUE_TUPLEutyping.Callable[[str, _TYPE_FIELD_VALUE], str] | NoneaRequestFieldafrom_tuplesuRequestField.from_tuplesuRequestField._render_partDaheader_partsareturnudict[str, _TYPE_FIELD_VALUE | None] | typing.Sequence[tuple[str, _TYPE_FIELD_VALUE | None]]astruRequestField._render_partsDareturnastrarender_headersuRequestField.render_headersDacontent_dispositionacontent_typeacontent_locationareturnustr | Noneustr | Noneustr | NoneaNoneuRequestField.make_multipartTuurllib3\fields.pyTa.0achavalueu<module urllib3.fields>Taselfanameadataafilenameaheadersaheader_formatterawarningsTaselfanameavalueTaselfaheader_partsaiterableapartsanameavalueTanameavalueawarningsTanameavalueawarningsaresultTanameavalueTaclsafieldnameavalueaheader_formatterafilenameacontent_typeadataarequest_paramTafilenameadefaultTaselfacontent_dispositionacontent_typeacontent_locationTaselfalinesasort_keysasort_keyaheader_nameaheader_value.urllib3.filepost<abinasciiahexlifyaosaurandomTladecodeu
    Our embarrassingly-simple replacement for mimetools.choose_boundary.
    u
    Iterate over fields.

    Supports list of (k, v) tuples and dicts, and lists of
    :class:`~urllib3.fields.RequestField`.

    afieldsatypingaMappingaitemsaRequestFieldafrom_tuplesaiter_field_objectsaBytesIOachoose_boundaryabodyawriteu--uu
ulatin-1awriterarender_headersadataTc
u--
umultipart/form-data; boundary=agetvalueu
    Encode a dictionary of ``fields`` using the multipart/form-data MIME format.

    :param fields:
        Dictionary of fields or list of (key, :class:`~urllib3.fields.RequestField`).
        Values are processed by :func:`urllib3.fields.RequestField.from_tuples`.

    :param boundary:
        If not specified, then a random boundary will be generated using
        :func:`urllib3.filepost.choose_boundary`.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationslacodecsTa_TYPE_FIELD_VALUE_TUPLEaRequestFieldla_TYPE_FIELD_VALUE_TUPLEalookupTuutf-8laSequenceaUnionaTuplea_TYPE_FIELDS_SEQUENCEa_TYPE_FIELDSDareturnastrDafieldsareturna_TYPE_FIELDSutyping.Iterable[RequestField]TnDafieldsaboundaryareturna_TYPE_FIELDSustr | Noneutuple[bytes, str]aencode_multipart_formdatauurllib3\filepost.pyu<module urllib3.filepost>Tafieldsaboundaryabodyafieldadataacontent_typeTafieldsaiterableafield.urllib3.poolmanagere6,acopyaschemealowerahostTaheadersa_proxy_headersa_socks_optionsacontextaitemsagetTasocket_optionsasocket_optionsakeysapopakey_a_fieldsTakey_blocksizea_DEFAULT_BLOCKSIZEakey_blocksizeu
    Create a pool key out of a request context dictionary.

    According to RFC 3986, both the scheme and host are case-insensitive.
    Therefore, this function normalizes both before constructing the pool
    key for an HTTPS request. If you wish to change this behaviour, provide
    alternate callables to ``key_fn_by_scheme``.

    :param key_class:
        The class to use when constructing the key. This should be a namedtuple
        with the ``scheme`` and ``host`` keys at a minimum.
    :type  key_class: namedtuple
    :param request_context:
        A dictionary-like object that contain the context for a request.
    :type  request_context: dict

    :return: A namedtuple that can be used as a connection pool key.
    :rtype:  PoolKey
    a__class__a__init__aconnection_pool_kwaRecentlyUsedContainerapoolsapool_classes_by_schemeakey_fn_by_schemeaclearTablocksizeablocksizeTaschemeahostaportarequest_contextahttpaSSL_KEYWORDSu
        Create a new :class:`urllib3.connectionpool.ConnectionPool` based on host, port, scheme, and
        any additional pool keyword arguments.

        If ``request_context`` is provided, it is provided as keyword arguments
        to the pool class used. This method is used to actually create the
        connection pools handed out by :meth:`connection_from_url` and
        companion methods. It is intended to be overridden for customization.
        u
        Empty our store of pools and direct them all to close.

        This will not affect in-flight connections, but they will not be
        re-used after completion.
        aLocationValueErrorTuNo host specified.a_merge_pool_kwargsaport_by_schemelPaportaconnection_from_contextu
        Get a :class:`urllib3.connectionpool.ConnectionPool` based on the host, port, and scheme.

        If ``port`` isn't given, it will be derived from the ``scheme`` using
        ``urllib3.connectionpool.port_by_scheme``. If ``pool_kwargs`` is
        provided, it is merged with the instance's ``connection_pool_kw``
        variable and used to create the new connection pool, if one is
        needed.
        astrictawarningsawarnuThe 'strict' parameter is no longer needed on Python 3+. This will raise an error in urllib3 v2.1.0.aDeprecationWarningTastrictaURLSchemeUnknownaconnection_from_pool_keyTarequest_contextu
        Get a :class:`urllib3.connectionpool.ConnectionPool` based on the request context.

        ``request_context`` must at least contain the ``scheme`` key and its
        value must be a key in ``key_fn_by_scheme`` instance variable.
        alocka__enter__a__exit__a_new_poolTnnnapoolu
        Get a :class:`urllib3.connectionpool.ConnectionPool` based on the provided pool key.

        ``pool_key`` should be a namedtuple that only contains immutable
        objects. At a minimum it must have the ``scheme``, ``host``, and
        ``port`` fields.
        aparse_urlaconnection_from_hostTaportaschemeapool_kwargsu
        Similar to :func:`urllib3.connectionpool.connection_from_url`.

        If ``pool_kwargs`` is not provided and a new pool needs to be
        constructed, ``self.connection_pool_kw`` is used to initialize
        the :class:`urllib3.connectionpool.ConnectionPool`. If ``pool_kwargs``
        is provided, it is used instead. Note that if a new pool does not
        need to be created for the request, the provided ``pool_kwargs`` are
        not used.
        utoo many values to unpack (expected 2)abase_pool_kwargsu
        Merge a dictionary of override values for self.connection_pool_kw.

        This does not modify self.connection_pool_kw and returns a new dict.
        Any keys in the override dictionary with a value of ``None`` are
        removed from the merged dictionary.
        aproxyaconnection_requires_http_tunnelaproxy_configu
        Indicates if the proxy requires the complete destination URL in the
        request.  Normally this is only needed when not using an HTTP CONNECT
        tunnel.
        lTuURLs without a scheme (ie 'https://') are deprecated and will raise an error in a future version of urllib3. To avoid this DeprecationWarning ensure all URLs start with 'https://' or 'http://'. Read more in this issue: https://github.com/urllib3/urllib3/issues/2920TacategoryastacklevelTaportaschemeaassert_same_hostaredirectaheadersa_proxy_requires_url_absolute_formaurlopenarequest_uriaget_redirect_locationaresponseaurljoinastatusl/aGETTaretriesaRetryafrom_intTaredirectaremove_headers_on_redirectaconnais_same_hostaretriesanew_headersaincrementTaresponsea_poolaMaxRetryErroraraise_on_redirectadrain_connalogainfouRedirecting %s -> %saredirect_locationu
        Same as :meth:`urllib3.HTTPConnectionPool.urlopen`
        with custom cross-host redirect logic and only sends the request-uri
        portion of the ``url``.

        The given ``url`` parameter must be absolute, such that an appropriate
        :class:`urllib3.connectionpool.ConnectionPool` can be chosen for it.
        aHTTPConnectionPooluu://w:TahttpahttpsaProxySchemeUnknowna_replaceTaportaproxy_headersaproxy_ssl_contextaProxyConfiga_proxya_proxy_headersa_proxy_configahttpsTapool_kwargsDaAcceptu*/*anetlocaHostaheaders_u
        Sets headers needed by proxies: specifically, the Accept and Host
        headers. Only sets headers not provided by the user.
        a_set_proxy_headersakwuSame as HTTP(S)ConnectionPool.urlopen, ``url`` must be absolute.aProxyManageraproxy_urla__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsafunctoolsalogginglatypingaTracebackTypeuurllib.parseTaurljoina_collectionsTaRecentlyUsedContainerla_request_methodsTaRequestMethodsaRequestMethodsaconnectionTaProxyConfigaconnectionpoolTaHTTPConnectionPoolaHTTPSConnectionPoolaport_by_schemeaHTTPSConnectionPoolaexceptionsTaLocationValueErroraMaxRetryErroraProxySchemeUnknownaURLSchemeUnknownTaBaseHTTPResponseaBaseHTTPResponseuutil.connectionTa_TYPE_SOCKET_OPTIONSa_TYPE_SOCKET_OPTIONSuutil.proxyTaconnection_requires_http_tunneluutil.retryTaRetryuutil.timeoutTaTimeoutaTimeoutuutil.urlTaUrlaparse_urlaUrlaPoolManageraproxy_from_urla__all__agetLoggerTuurllib3.poolmanagerTakey_fileacert_fileacert_reqsaca_certsassl_versionassl_minimum_versionassl_maximum_versionaca_cert_dirassl_contextakey_passwordaserver_hostnamel@aTypeVarTa_SelfTa_SelfTaNamedTuplea__prepare__aPoolKeya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.poolmanagera__module__u
    All known keyword arguments that could be provided to the pool manager, its
    pools, or the underlying connections.

    All custom key schemes should include the fields in this key at a minimum.
    a__qualname__a__annotations__astrakey_schemeakey_hostuint | Noneakey_portuTimeout | float | int | Noneakey_timeoutuRetry | bool | int | Noneakey_retriesubool | Noneakey_blockutuple[str, int] | Noneakey_source_addressustr | Noneakey_key_fileakey_key_passwordakey_cert_fileakey_cert_reqsakey_ca_certsuint | str | Noneakey_ssl_versionussl.TLSVersion | Noneakey_ssl_minimum_versionakey_ssl_maximum_versionakey_ca_cert_dirussl.SSLContext | Noneakey_ssl_contextakey_maxsizeufrozenset[tuple[str, str]] | Noneakey_headersuUrl | Noneakey__proxyakey__proxy_headersuProxyConfig | Noneakey__proxy_configu_TYPE_SOCKET_OPTIONS | Noneakey_socket_optionsakey__socks_optionsubool | str | Noneakey_assert_hostnameakey_assert_fingerprintakey_server_hostnamea__orig_bases__Dakey_classarequest_contextareturnutype[PoolKey]udict[str, typing.Any]aPoolKeya_default_key_normalizerapartialu
    Allows for arbitrary requests while transparently keeping track of
    necessary connection pools for you.

    :param num_pools:
        Number of connection pools to cache before discarding the least
        recently used pool.

    :param headers:
        Headers to include with all requests, unless other headers are given
        explicitly.

    :param \**connection_pool_kw:
        Additional parameters are used to create fresh
        :class:`urllib3.connectionpool.ConnectionPool` instances.

    Example:

    .. code-block:: python

        import urllib3

        http = urllib3.PoolManager(num_pools=2)

        resp1 = http.request("GET", "https://google.com/")
        resp2 = http.request("GET", "https://google.com/mail")
        resp3 = http.request("GET", "https://yahoo.com/")

        print(len(http.pools))
        # 2

    Tl
nDanum_poolsaheadersaconnection_pool_kwareturnaintutyping.Mapping[str, str] | Noneutyping.AnyaNoneuPoolManager.__init__Daselfareturna_SelfTpuPoolManager.__enter__Daexc_typeaexc_valaexc_tbareturnutype[BaseException] | NoneuBaseException | NoneuTracebackType | NoneuLiteral[False]uPoolManager.__exit__TnDaschemeahostaportarequest_contextareturnastrpaintudict[str, typing.Any] | NoneaHTTPConnectionPooluPoolManager._new_poolDareturnaNoneuPoolManager.clearTnahttpnDahostaportaschemeapool_kwargsareturnustr | Noneuint | Noneustr | Noneudict[str, typing.Any] | NoneaHTTPConnectionPooluPoolManager.connection_from_hostDarequest_contextareturnudict[str, typing.Any]aHTTPConnectionPooluPoolManager.connection_from_contextDapool_keyarequest_contextareturnaPoolKeyudict[str, typing.Any]aHTTPConnectionPooluPoolManager.connection_from_pool_keyDaurlapool_kwargsareturnastrudict[str, typing.Any] | NoneaHTTPConnectionPoolaconnection_from_urluPoolManager.connection_from_urlDaoverrideareturnudict[str, typing.Any] | Noneudict[str, typing.Any]uPoolManager._merge_pool_kwargsDaparsed_urlareturnaUrlabooluPoolManager._proxy_requires_url_absolute_formTtDamethodaurlaredirectakwareturnastrpaboolutyping.AnyaBaseHTTPResponseuPoolManager.urlopenu
    Behaves just like :class:`PoolManager`, but sends all requests through
    the defined proxy, using the CONNECT method for HTTPS URLs.

    :param proxy_url:
        The URL of the proxy to be used.

    :param proxy_headers:
        A dictionary containing headers that will be sent to the proxy. In case
        of HTTP they are being sent with each request, while in the
        HTTPS/CONNECT case they are sent only once. Could be used for proxy
        authentication.

    :param proxy_ssl_context:
        The proxy SSL context is used to establish the TLS connection to the
        proxy when using HTTPS proxies.

    :param use_forwarding_for_https:
        (Defaults to False) If set to True will forward requests to the HTTPS
        proxy to be made on behalf of the client instead of creating a TLS
        tunnel via the CONNECT method. **Enabling this flag means that request
        and response headers and content will be visible from the HTTPS proxy**
        whereas tunneling keeps request and response headers and content
        private.  IP address, target hostname, SNI, and port are always visible
        to an HTTPS proxy even when this flag is disabled.

    :param proxy_assert_hostname:
        The hostname of the certificate to verify against.

    :param proxy_assert_fingerprint:
        The fingerprint of the certificate to verify against.

    Example:

    .. code-block:: python

        import urllib3

        proxy = urllib3.ProxyManager("https://localhost:3128/")

        resp1 = proxy.request("GET", "https://google.com/")
        resp2 = proxy.request("GET", "https://httpbin.org/")

        print(len(proxy.pools))
        # 1

        resp3 = proxy.request("GET", "https://httpbin.org/")
        resp4 = proxy.request("GET", "https://twitter.com/")

        print(len(proxy.pools))
        # 3

    Tl
nnnFnnD
aproxy_urlanum_poolsaheadersaproxy_headersaproxy_ssl_contextause_forwarding_for_httpsaproxy_assert_hostnameaproxy_assert_fingerprintaconnection_pool_kwareturnastraintutyping.Mapping[str, str] | Noneutyping.Mapping[str, str] | Noneussl.SSLContext | NoneabooluNone | str | Literal[False]ustr | Noneutyping.AnyaNoneuProxyManager.__init__uProxyManager.connection_from_hostDaurlaheadersareturnastrutyping.Mapping[str, str] | Noneutyping.Mapping[str, str]uProxyManager._set_proxy_headersuProxyManager.urlopenDaurlakwareturnastrutyping.AnyaProxyManageruurllib3\poolmanager.pyu<module urllib3.poolmanager>Ta__class__TaselfTaselfaexc_typeaexc_valaexc_tbTaselfanum_poolsaheadersaconnection_pool_kwa__class__Taselfaproxy_urlanum_poolsaheadersaproxy_headersaproxy_ssl_contextause_forwarding_for_httpsaproxy_assert_hostnameaproxy_assert_fingerprintaconnection_pool_kwastr_proxy_urlaproxyaporta__class__Takey_classarequest_contextacontextakeyasocket_optsafieldTaselfaoverrideabase_pool_kwargsakeyavalueTaselfaschemeahostaportarequest_contextapool_clsakeyakwTaselfaparsed_urlTaselfaurlaheadersaheaders_anetlocTaselfarequest_contextaschemeapool_key_constructorapool_keyTaselfahostaportaschemeapool_kwargsa__class__Taselfahostaportaschemeapool_kwargsarequest_contextTaselfapool_keyarequest_contextapoolaschemeahostaportTaselfaurlapool_kwargswuTaurlakwTaselfamethodaurlaredirectakwwuaconnaresponsearedirect_locationaretriesanew_headersaheaderTaselfamethodaurlaredirectakwwuaheadersa__class__.urllib3.response?a_first_tryca_dataazlibadecompressobja_objadecompressaerroraMAX_WBITSaflushlaGzipDecoderStateaFIRST_MEMBERa_stateBaSWALLOW_DATAaretaselfadataaOTHER_MEMBERSaunused_dataabrotliaDecompressoraprocessazstdaZstdDecompressoraeofadata_partsaappendaDecodeErrorTuZstandard data is incompleteasplitTw,a_get_decoderastripa_decoderslw,aMultiDecoderagzipaGzipDecoderabraBrotliDecoderaZstdDecoderaDeflateDecoderacollectionsadequeabuffera_sizeubuffer is emptyun should be > 0aBytesIOafetchedwnapopleftutoo many values to unpack (expected 2)awriteaappendleftagetvalueaHTTPHeaderDictaheadersastatusaversionareasonadecode_contenta_has_decoded_contenta_request_urlaretriesachunkedagetTutransfer-encodingualowera_decoderu<genexpr>uBaseHTTPResponse.__init__.<locals>.<genexpr>aREDIRECT_STATUSESTalocationu
        Should we redirect and where to?

        :returns: Truthy redirect location string if we got a redirect status
            code and valid location. ``None`` if redirect status and no
            location. ``False`` if not a redirect status code.
        adecodeTuutf-8a_jsonaloadsu
        Parses the body of the HTTP response as JSON.

        To use a custom JSON decoder pass the result of :attr:`HTTPResponse.data` to the decoder.

        This method can raise either `UnicodeDecodeError` or `json.JSONDecodeError`.

        Read more :ref:`here <json>`.
        a_retriesahistorylaredirect_locationaurlTucontent-encodinguaCONTENT_DECODERSu
        Set-up the _decoder attribute if necessary.
        uCalling read(decode_content=False) is not supported after read(decode_content=True) was called.aDECODER_ERROR_CLASSESuReceived response with content-encoding: %s, but failed to decode it.a_flush_decoderu
        Decode the data passed in and potentially flush the decoder.
        Tcu
        Flushes the decoder. Should only be called if the decoder is actually
        being used.
        areadawarningsawarnaDeprecationWarninglTuHTTPResponse.getheaders() is deprecated and will be removed in urllib3 v2.1.0. Instead access HTTPResponse.headers directly.TacategoryastacklevelTuHTTPResponse.getheader() is deprecated and will be removed in urllib3 v2.1.0. Instead use HTTPResponse.headers.get(name, default).a__class__a__init__Taheadersastatusaversionareasonadecode_contentarequest_urlaretriesaenforce_content_lengthaauto_closea_bodya_fpa_original_responsea_fp_bytes_readamsgTOstrObytesa_poola_connectionabodyachunk_lefta_init_lengthalength_remainingaBytesQueueBuffera_decoded_bufferTadecode_contenta_put_connaHTTPErroraBaseSSLErroraHTTPExceptionu
        Read and discard any remaining HTTP response data in the response connection.

        Unread data in the HTTPResponse connection blocks the connection from being released back to the pool.
        TtTacache_contentais_fp_closedu
        Obtain the number of bytes pulled over the wire so far. May differ from
        the amount of content returned by :meth:``urllib3.response.HTTPResponse.read``
        if bytes are encoded on the wire (e.g, compressed).
        Tucontent-lengthalogawarningTuReceived response with both Content-Length and Transfer-Encoding set. This is expressly forbidden by RFC 7230 sec 3.3.2. Ignoring Content-Length and attempting to process response as Transfer-Encoding: chunked.aInvalidHeaderuContent-Length contained multiple unmatching values (%s)apopTll0ldlaHEADu
        Set initial length value for Response content if available.
        u
        Catch low-level python exceptions, instead re-raising urllib3
        variants, so that low-level exceptions are not leaked in the
        high-level api.

        On exit, release the connection back to the pool.
        aSocketTimeoutaReadTimeoutErroruRead timed out.uread operation timed outaSSLErroraProtocolErroruConnection broken: uacloseaisclosedarelease_conna_error_catcheruHTTPResponse._error_catcherqautilaIS_SECURETRANSPORTaIS_PYOPENSSLqaamtaminamax_chunk_amtachunk_amtu
        Read a response with the thought that reading the number of bytes
        larger than can fit in a 32-bit int at a time via SSL in some
        known cases leads to an overflow error that has to be prevented
        if `amt` or `self.length_remaining` indicate that a problem may
        happen.

        The known cases:
          * 3.8 <= CPython < 3.9.7 because of a bug
            https://github.com/urllib3/urllib3/issues/2513#issuecomment-1152559900.
          * urllib3 injected with pyOpenSSL-backed SSL-support.
          * CPython < 3.10 only when `amt` does not fit 32-bit int.
        acloseda__enter__a__exit__a_fp_readaIncompleteReadTnnnu
        Reads `amt` of bytes from the socket.
        a_init_decodera_raw_reada_decodeaputaflush_decoderu
        Similar to :meth:`http.client.HTTPResponse.read`, but with two additional
        parameters: ``decode_content`` and ``cache_content``.

        :param amt:
            How much of the content to read. If specified, caching is skipped
            because it doesn't make sense to cache partial content as the full
            response.

        :param decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.

        :param cache_content:
            If True, will save the returned data such that the same result is
            returned despite of the state of the underlying file object. This
            is useful if you want the ``.data`` property to continue working
            after having ``.read()`` the file object. (Overridden if ``amt`` is
            set.)
        u
        A generator wrapper for the read() method. A call will block until
        ``amt`` bytes have been read from the connection or until the
        connection is closed.

        :param amt:
            How much of the content to read. The generator will return up to
            much data per iteration, but may return less. This is particularly
            likely when using compressed data. However, the empty string will
            never be returned.

        :param decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.
        asupports_chunked_readsaread_chunkedTaamtadecode_contentastreamuHTTPResponse.streamaioaIOBasea__get__uHTTPResponse has no file to get a fileno fromafilenouThe file-like object this HTTPResponse is wrapped around has no file descriptorafpu
        Checks if the underlying file-like object looks like a
        :class:`http.client.HTTPResponse` object. We do this by testing for
        the fp attribute. If it is present we assume it returns raw chunks as
        processed by read_chunked().
        areadlineTd;laInvalidChunkLengtha_safe_readTlu
        Similar to :meth:`HTTPResponse.read`, but with an additional
        parameter: ``decode_content``.

        :param amt:
            How much of the content to read. If specified, caching is skipped
            because it doesn't make sense to cache partial content as the full
            response.

        :param decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.
        aResponseNotChunkedTuResponse is not chunked. Header 'transfer-encoding: chunked' is missing.aBodyNotHttplibCompatibleTuBody should be http.client.HTTPResponse like. It should have have an fp attribute which returns raw chunks.ais_response_to_heada_update_chunk_lengtha_handle_chunkTadecode_contentaflush_decoderc
uHTTPResponse.read_chunkedu
        Returns the URL that was the source of this response.
        If the request that generated this response redirected, this method
        will return the final redirect location.
        d
Td
:llna__iter__uHTTPResponse.__iter__a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsajsonaloggingareasysatypingacontextlibTacontextmanageracontextmanageruhttp.clientTaHTTPMessageaHTTPMessagea_HttplibHTTPMessageTaHTTPResponseaHTTPResponsea_HttplibHTTPResponseasocketTatimeoutatimeoutabrotlicffiazstandardasearchu^([0-9]+)\.([0-9]+)a__version__agroupsa_zstd_versionTllTEAttributeErrorEImportErrorEValueErrorTautilla_base_connectionTa_TYPE_BODYa_TYPE_BODYa_collectionsTaHTTPHeaderDictaconnectionTaBaseSSLErroraHTTPConnectionaHTTPExceptionaHTTPConnectionaexceptionsT
aBodyNotHttplibCompatibleaDecodeErroraHTTPErroraIncompleteReadaInvalidChunkLengthaInvalidHeaderaProtocolErroraReadTimeoutErroraResponseNotChunkedaSSLErroruutil.responseTais_fp_closedais_response_to_headuutil.retryTaRetryaRetryagetLoggerTuurllib3.responseuurllib3.responsea__module__aContentDecodera__qualname__DadataareturnabytespuContentDecoder.decompressDareturnabytesuContentDecoder.flushTa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>DareturnaNoneuDeflateDecoder.__init__uDeflateDecoder.decompressuDeflateDecoder.flusha__orig_bases__uGzipDecoder.__init__uGzipDecoder.decompressuGzipDecoder.flushuBrotliDecoder.__init__uBrotliDecoder.flushuZstdDecoder.__init__uZstdDecoder.decompressuZstdDecoder.flushu
    From RFC7231:
        If one or more encodings have been applied to a representation, the
        sender that applied the encodings MUST generate a Content-Encoding
        header field that lists the content codings in the order in which
        they were applied.
    DamodesareturnastraNoneuMultiDecoder.__init__uMultiDecoder.flushuMultiDecoder.decompressDamodeareturnastraContentDecoderuMemory-efficient bytes buffer

    To return decoded data in read() and still follow the BufferedIOBase API, we need a
    buffer to always return the correct amount of bytes.

    This buffer should be filled using calls to put()

    Our maximum memory usage is determined by the sum of the size of:

     * self.buffer, which contains the full data
     * the largest chunk that we will copy in get()

    The worst case scenario is a single chunk, in which case we'll make a full copy of
    the data inside get().
    uBytesQueueBuffer.__init__Dareturnainta__len__uBytesQueueBuffer.__len__DadataareturnabytesaNoneuBytesQueueBuffer.putDwnareturnaintabytesuBytesQueueBuffer.getaBaseHTTPResponsea__annotations__adeflateLl-l.l/l3l4aIOErrorutuple[type[Exception], ...]aZstdErrorDaheadersaretriesnnDaheadersastatusaversionareasonadecode_contentarequest_urlaretriesareturnutyping.Mapping[str, str] | typing.Mapping[bytes, bytes] | Noneaintpustr | Noneaboolustr | NoneuRetry | NoneaNoneuBaseHTTPResponse.__init__Dareturnustr | None | Literal[False]aget_redirect_locationuBaseHTTPResponse.get_redirect_locationapropertyuBaseHTTPResponse.dataDareturnutyping.AnyuBaseHTTPResponse.jsonDareturnustr | NoneuBaseHTTPResponse.urlasetterDaurlareturnustr | NoneaNoneDareturnuHTTPConnection | NoneuBaseHTTPResponse.connectionDareturnuRetry | NoneuBaseHTTPResponse.retriesDaretriesareturnuRetry | NoneaNoneTlnDaamtadecode_contentareturnuint | Noneubool | Noneutyping.Iterator[bytes]uBaseHTTPResponse.streamTnnFDaamtadecode_contentacache_contentareturnuint | Noneubool | NoneaboolabytesuBaseHTTPResponse.readTnnuBaseHTTPResponse.read_chunkeduBaseHTTPResponse.release_connadrain_connuBaseHTTPResponse.drain_connuBaseHTTPResponse.closeuBaseHTTPResponse._init_decoderDadataadecode_contentaflush_decoderareturnabytesubool | NoneaboolabytesuBaseHTTPResponse._decodeuBaseHTTPResponse._flush_decoderDwbareturnabytearrayaintareadintouBaseHTTPResponse.readintoDareturnaHTTPHeaderDictagetheadersuBaseHTTPResponse.getheadersTnDanameadefaultareturnastrustr | Noneustr | NoneagetheaderuBaseHTTPResponse.getheaderainfouBaseHTTPResponse.infoageturluBaseHTTPResponse.geturlu
    HTTP Response container.

    Backwards-compatible with :class:`http.client.HTTPResponse` but the response ``body`` is
    loaded and decoded on-demand when the ``data`` property is accessed.  This
    class is also compatible with the Python standard library's :mod:`io`
    module, and can hence be treated as a readable object in the context of that
    framework.

    Extra parameters for behaviour not present in :class:`http.client.HTTPResponse`:

    :param preload_content:
        If True, the response's body will be preloaded during construction.

    :param decode_content:
        If True, will attempt to decode the body based on the
        'content-encoding' header.

    :param original_response:
        When this HTTPResponse wrapper is generated from an :class:`http.client.HTTPResponse`
        object, it's convenient to include the original for debug purposes. It's
        otherwise unused.

    :param retries:
        The retries contains the last :class:`~urllib3.util.retry.Retry` that
        was used during the request.

    :param enforce_content_length:
        Enforce content length checking. Body returned by server must match
        value of Content-Length header, if present. Otherwise, raise error.
    TunlpntpnnnnntnntDabodyaheadersastatusaversionareasonapreload_contentadecode_contentaoriginal_responseapoolaconnectionamsgaretriesaenforce_content_lengtharequest_methodarequest_urlaauto_closeareturna_TYPE_BODYutyping.Mapping[str, str] | typing.Mapping[bytes, bytes] | Noneaintpustr | Noneaboolpu_HttplibHTTPResponse | NoneuHTTPConnectionPool | NoneuHTTPConnection | Noneu_HttplibHTTPMessage | NoneuRetry | Noneaboolustr | Noneustr | NoneaboolaNoneuHTTPResponse.__init__uHTTPResponse.release_connuHTTPResponse.drain_connuHTTPResponse.datauHTTPResponse.connectionDareturnabooluHTTPResponse.isclosedatelluHTTPResponse.tellDarequest_methodareturnustr | Noneuint | NoneuHTTPResponse._init_lengthDareturnutyping.Generator[None, None, None]Daamtareturnuint | NoneabytesuHTTPResponse._fp_readuHTTPResponse._raw_readuHTTPResponse.readDaamtadecode_contentareturnuint | Noneubool | Noneutyping.Generator[bytes, None, None]areadableuHTTPResponse.readableuHTTPResponse.closeuHTTPResponse.closeduHTTPResponse.filenouHTTPResponse.flushuHTTPResponse.supports_chunked_readsuHTTPResponse._update_chunk_lengthuHTTPResponse._handle_chunkuHTTPResponse.urlDaurlareturnastraNoneDareturnutyping.Iterator[bytes]uurllib3\response.pyTa.0aencu<module urllib3.response>Ta__class__TaselfTaselfabodyaheadersastatusaversionareasonapreload_contentadecode_contentaoriginal_responseapoolaconnectionamsgaretriesaenforce_content_lengtharequest_methodarequest_urlaauto_closea__class__T
aselfaheadersastatusaversionareasonadecode_contentarequest_urlaretriesatr_encaencodingsTaselfamodesTaselfabufferachunkachunkswxTaselfadataadecode_contentaflush_decoderweacontent_encodingTaselfaclean_exitweTaselfaamtac_int_maxabufferamax_chunk_amtachunk_amtadataTamodeTaselfaamtareturned_chunkachunkavalueTaselfacontent_encodingaencodingsTaselfarequest_methodalengthacontent_lengthalengthsastatusTaselfaamtafp_closedadataTaselfalineTaselfadataTaselfadatawdTaselfadataadata_partsaunused_dataTaselfadataadecompressedTaselfadataaretaprevious_stateTaselfaretTaselfwnafetchedaretaremainingachunkachunk_lengthaleft_chunkaright_chunkTaselfanameadefaultTaselfaamtadecode_contentacache_contentTaselfaamtadecode_contentacache_contentadataaflush_decoderadecoded_dataTaselfaamtadecode_contentTaselfaamtadecode_contentachunkadecodedalineTaselfwbatempTaselfaretriesTaselfaamtadecode_contentadataTaselfaurl.urllib3.util.connectionqLais_connectedu
    Returns True if the connection is dropped and should be closed.
    :param conn: :class:`urllib3.connection.HTTPConnection` object.
    utoo many values to unpack (expected 2)astartswithTw[astripTu[]aallowed_gai_familyahostaencodeTaidnaaLocationParseErrorw'uu', label empty or too longasocketagetaddrinfoaSOCK_STREAMutoo many values to unpack (expected 5)a_set_socket_optionsasocket_optionsatimeouta_DEFAULT_TIMEOUTasettimeoutasource_addressabindaconnectasockacloseaerrugetaddrinfo returns an empty listuConnect to *address* and return the socket object.

    Convenience function.  Connect to *address* (a 2-tuple ``(host,
    port)``) and return the socket object.  Passing the optional
    *timeout* parameter will set the timeout on the socket instance
    before attempting to connect.  If no *timeout* is supplied, the
    global default timeout setting returned by :func:`socket.getdefaulttimeout`
    is used.  If *source_address* is set it must be a tuple of (host, port)
    for the socket to bind as a source address before making the connection.
    An host of '' or port 0 tells the OS to use the default.
    asetsockoptaAF_INETaHAS_IPV6aAF_UNSPECuThis function is designed to work in the context of
    getaddrinfo, where family=socket.AF_UNSPEC is the default and
    will perform a DNS search for both IPv6 and IPv4 records.ahas_ipv6aAF_INET6luReturns True if the system can bind an IPv6 address.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingaexceptionsTaLocationParseErrorlTa_DEFAULT_TIMEOUTa_TYPE_TIMEOUTla_TYPE_TIMEOUTaSequenceaTupleaUnionTOintObytesa_TYPE_SOCKET_OPTIONSDaconnareturnaBaseHTTPConnectionaboolais_connection_droppedDaaddressatimeoutasource_addressasocket_optionsareturnutuple[str, int]a_TYPE_TIMEOUTutuple[str, int] | Noneu_TYPE_SOCKET_OPTIONS | Noneusocket.socketacreate_connectionDasockaoptionsareturnusocket.socketu_TYPE_SOCKET_OPTIONS | NoneaNoneDareturnusocket.AddressFamilyDahostareturnastraboola_has_ipv6Tu::1uurllib3\util\connection.pyu<module urllib3.util.connection>Tahostasockahas_ipv6TasockaoptionsaoptTafamilyTaaddressatimeoutasource_addressasocket_optionsahostaportaerrafamilyaresaafasocktypeaprotoacanonnameasaasockw_Taconn.urllib3.utilM<a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_urllib3u\not_existingautilTaNUITKA_PACKAGE_urllib3_utilu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsaconnectionTais_connection_droppedlais_connection_droppedarequestTaSKIP_HEADERaSKIPPABLE_HEADERSamake_headersaSKIP_HEADERaSKIPPABLE_HEADERSamake_headersaresponseTais_fp_closedais_fp_closedaretryTaRetryaRetryassl_TaALPN_PROTOCOLSaIS_PYOPENSSLaIS_SECURETRANSPORTaSSLContextaassert_fingerprintacreate_urllib3_contextaresolve_cert_reqsaresolve_ssl_versionassl_wrap_socketaALPN_PROTOCOLSaIS_PYOPENSSLaIS_SECURETRANSPORTaSSLContextaassert_fingerprintacreate_urllib3_contextaresolve_cert_reqsaresolve_ssl_versionassl_wrap_socketatimeoutTaTimeoutaTimeoutaurlTaUrlaparse_urlaUrlaparse_urlawaitTawait_for_readawait_for_writeawait_for_readawait_for_writeTaIS_PYOPENSSLaIS_SECURETRANSPORTaSSLContextaALPN_PROTOCOLSaRetryaTimeoutaUrlaassert_fingerprintacreate_urllib3_contextais_connection_droppedais_fp_closedaparse_urlamake_headersaresolve_cert_reqsaresolve_ssl_versionassl_wrap_socketawait_for_readawait_for_writeaSKIP_HEADERaSKIPPABLE_HEADERSa__all__uurllib3\util\__init__.pyu<module urllib3.util>u.urllib3.util.proxyahttpaschemeahttpsause_forwarding_for_httpsu
    Returns True if the connection requires an HTTP CONNECT through the proxy.

    :param URL proxy_url:
        URL of the proxy.
    :param ProxyConfig proxy_config:
        Proxy configuration from poolmanager.py
    :param str destination_scheme:
        The scheme of the destination. (i.e https, http, etc)
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingaurlTaUrllaUrllTnnnDaproxy_urlaproxy_configadestination_schemeareturnuUrl | NoneuProxyConfig | Noneustr | Noneaboolaconnection_requires_http_tunneluurllib3\util\proxy.pyu<module urllib3.util.proxy>Taproxy_urlaproxy_configadestination_schemeu.urllib3.util.requestZww,aACCEPT_ENCODINGuaccept-encodingaheadersuuser-agentukeep-aliveaconnectionuBasic ab64encodeaencodeTulatin-1adecodeuaauthorizationuproxy-authorizationuno-cacheucache-controlu
    Shortcuts for generating request headers.

    :param keep_alive:
        If ``True``, adds 'connection: keep-alive' header.

    :param accept_encoding:
        Can be a boolean, list, or string.
        ``True`` translates to 'gzip,deflate'.  If either the ``brotli`` or
        ``brotlicffi`` package is installed 'gzip,deflate,br' is used instead.
        List will get joined by comma.
        String will be used as provided.

    :param user_agent:
        String representing the user-agent you want, such as
        "python-urllib3/0.6"

    :param basic_auth:
        Colon-separated username:password string for 'authorization: basic ...'
        auth header.

    :param proxy_basic_auth:
        Colon-separated username:password string for 'proxy-authorization: basic ...'
        auth header.

    :param disable_cache:
        If ``True``, adds 'cache-control: no-cache' header.

    Example:

    .. code-block:: python

        import urllib3

        print(urllib3.util.make_headers(keep_alive=True, user_agent="Batman/1.0"))
        # {'connection': 'keep-alive', 'user-agent': 'Batman/1.0'}
        print(urllib3.util.make_headers(accept_encoding=True))
        # {'accept-encoding': 'gzip,deflate'}
    arewind_bodyatella_FAILEDTELLaposu
    If a position is provided, move file to that point.
    Otherwise, we'll attempt to record a position for future use.
    aseekaUnrewindableBodyErrorTuAn error occurred when rewinding request body for redirect/retry.TuUnable to record file position for rewinding request body during a redirect/retry.ubody_pos must be of type integer, instead it was w.u
    Attempt to rewind body to a certain position.
    Primarily used for request redirects and retries.

    :param body:
        File-like object that supports seek.

    :param int pos:
        Position to seek to in file.
    auppera_METHODS_NOT_EXPECTING_BODYlTOstrObytesato_bytesareadDareturnutyping.Iterable[bytes]achunk_readableubody_to_chunks.<locals>.chunk_readableu'body' must be a bytes-like object, file-like object, or iterable. Instead was abodyamvanbytesaChunksAndContentLengthachunksacontent_lengthTachunksacontent_lengthuTakes the HTTP request method, body, and blocksize and
    transforms them into an iterable of chunks to pass to
    socket.sendall() and an optional 'Content-Length' header.

    A 'Content-Length' of 'None' indicates the length of the body
    can't be determined so should use 'Transfer-Encoding: chunked'
    for framing instead.
    aioaTextIOBaseablocksizeTuiso-8859-1a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsatypingabase64Tab64encodeaenumTaEnumaEnumaexceptionsTaUnrewindableBodyErrorlautilTato_byteslu@@@SKIP_HEADER@@@aSKIP_HEADERPahostuuser-agentuaccept-encodingaSKIPPABLE_HEADERSugzip,deflateabrotlicffia_unused_module_brotliabrotliu,brazstandarda_unused_module_zstdu,zstda__prepare__a_TYPE_FAILEDTELLa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.util.requesta__module__a__qualname__atokena__orig_bases__uFinal[_TYPE_FAILEDTELL]aUniona_TYPE_BODY_POSITIONSaGETaDELETEaHEADaTRACEaCONNECTaOPTIONSTnnnnnnDakeep_aliveaaccept_encodingauser_agentabasic_authaproxy_basic_authadisable_cacheareturnubool | Noneubool | list[str] | str | Noneustr | Noneustr | Noneustr | Noneubool | Noneudict[str, str]amake_headersDabodyaposareturnutyping.Anyu_TYPE_BODY_POSITION | Noneu_TYPE_BODY_POSITION | Noneaset_file_positionDabodyabody_posareturnutyping.IO[typing.AnyStr]a_TYPE_BODY_POSITIONaNoneaNamedTupleutyping.Iterable[bytes] | Noneuint | NoneDabodyamethodablocksizeareturnutyping.Any | NoneastraintaChunksAndContentLengthabody_to_chunksuurllib3\util\request.pyu<module urllib3.util.request>Ta__class__Tabodyamethodablocksizeachunksacontent_lengthachunk_readableamvTabodyablocksizeaencodeadatablockTablocksizeabodyTakeep_aliveaaccept_encodingauser_agentabasic_authaproxy_basic_authadisable_cacheaheadersTabodyabody_posabody_seekweTabodyapos.urllib3.util.response1aisclosedaclosedafpuUnable to determine whether fp is closed.u
    Checks whether a given file-like object is closed.

    :param obj:
        The file-like object to check.
    ahttplibaHTTPMessageuexpected httplib.Message, got uw.ais_multipartaget_payloadTObytesOstradefectsaStartBoundaryNotFoundDefectaMultipartInvariantViolationDefectaHeaderParsingErrorTadefectsaunparsed_datau
    Asserts whether all headers have been successfully parsed.
    Extracts encountered errors from the result of parsing headers.

    Only works on Python 3.

    :param http.client.HTTPMessage headers: Headers to verify.

    :raises urllib3.exceptions.HeaderParsingError:
        If parsing errors are found.
    a_methodaupperaHEADu
    Checks whether the request of a response has been a HEAD-request.

    :param http.client.HTTPResponse response:
        Response to check if the originating request
        used 'HEAD' as a method.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsuhttp.clientlaclientuemail.errorsTaMultipartInvariantViolationDefectaStartBoundaryNotFoundDefectaexceptionsTaHeaderParsingErrorlDaobjareturnaobjectaboolais_fp_closedDaheadersareturnuhttplib.HTTPMessageaNoneaassert_header_parsingDaresponseareturnuhttplib.HTTPResponseaboolais_response_to_headuurllib3\util\response.pyu<module urllib3.util.response>Taheadersaunparsed_dataapayloadadefectsTaobjTaresponseamethod_str.urllib3.util.retry-atotalaconnectareadastatusaotherlaredirectastatus_forcelistaallowed_methodsabackoff_factorabackoff_maxaraise_on_redirectaraise_on_statusTahistoryarespect_retry_after_headeraremove_headers_on_redirectabackoff_jitteraloweru<genexpr>uRetry.__init__.<locals>.<genexpr>aDEFAULTaRetryaclsTaredirectalogadebuguConverted retries value: %r -> %ruBackwards-compatibility for the old retries format.atakewhileu<lambda>uRetry.get_backoff_time.<locals>.<lambda>lZarandomamaxaminuFormula for computing the current backoff

        :rtype: float
        aredirect_locationareamatchu^\s*[0-9]+\s*$aemailautilsaparsedate_tzaInvalidHeaderuInvalid Retry-After header: uamktime_tzatimeaheadersagetTuRetry-Afteraparse_retry_afteruGet the value of Retry-After in seconds.aget_retry_afterasleepaget_backoff_timeasleep_for_retrya_sleep_backoffuSleep between retry attempts.

        This method will respect a server's ``Retry-After`` response header
        and sleep the duration of the time requested. If that is not present, it
        will use an exponential backoff. By default, the backoff factor is 0 and
        this method will return immediately.
        aProxyErroraoriginal_erroraConnectTimeoutErroruErrors when we're fairly sure that the server did not receive the
        request, so it should be safe to retry.
        aReadTimeoutErroraProtocolErroruErrors that occur after the request has been started, so we should
        assume that the server began processing it.
        aupperuChecks if a given HTTP method should be retried upon, depending if
        it is included in the allowed_methods
        a_is_method_retryableaRETRY_AFTER_STATUS_CODESuIs this method/status code retryable? (Based on allowlists and control
        variables such as the number of total retries to allow, whether to
        respect the Retry-After header, whether this header is present, and
        whether the returned status code is on the list of status codes to
        be retried upon on the presence of the aforementioned header)
        uAre we out of retries?areraiselaunknowna_is_connection_erroraerrora_is_read_erroraget_redirect_locationutoo many redirectsaresponseaResponseErroraGENERIC_ERRORaSPECIFIC_ERRORaformatTastatus_codeaRequestHistoryamethodanewTatotalaconnectareadaredirectastatusaotherahistoryais_exhaustedaMaxRetryErroruIncremented Retry for (url='%s'): %ruReturn a new Retry object with incremented retry counters.

        :param response: A response object, or None, if the server did not
            return a response.
        :type response: :class:`~urllib3.response.BaseHTTPResponse`
        :param Exception error: An error encountered during the request, or
            None if the response was received successfully.

        :return: A new ``Retry`` object.
        a__name__u(total=u, connect=u, read=u, redirect=u, status=w)a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaloggingatypingaitertoolsTatakewhileaTracebackTypeaexceptionsTaConnectTimeoutErroraInvalidHeaderaMaxRetryErroraProtocolErroraProxyErroraReadTimeoutErroraResponseErrorautilTareraiseagetLoggerTuurllib3.util.retryaNamedTuplea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uurllib3.util.retrya__module__a__qualname__a__annotations__ustr | NoneaurluException | Noneuint | Nonea__orig_bases__uRetry configuration.

    Each retry attempt will create a new Retry object with updated values, so
    they can be safely reused.

    Retries can be defined as a default for a pool:

    .. code-block:: python

        retries = Retry(connect=5, read=2, redirect=5)
        http = PoolManager(retries=retries)
        response = http.request("GET", "https://example.com/")

    Or per-request (which overrides the default for the pool):

    .. code-block:: python

        response = http.request("GET", "https://example.com/", retries=Retry(10))

    Retries can be disabled by passing ``False``:

    .. code-block:: python

        response = http.request("GET", "https://example.com/", retries=False)

    Errors will be wrapped in :class:`~urllib3.exceptions.MaxRetryError` unless
    retries are disabled, in which case the causing exception will be raised.

    :param int total:
        Total number of retries to allow. Takes precedence over other counts.

        Set to ``None`` to remove this constraint and fall back on other
        counts.

        Set to ``0`` to fail on the first retry.

        Set to ``False`` to disable and imply ``raise_on_redirect=False``.

    :param int connect:
        How many connection-related errors to retry on.

        These are errors raised before the request is sent to the remote server,
        which we assume has not triggered the server to process the request.

        Set to ``0`` to fail on the first retry of this type.

    :param int read:
        How many times to retry on read errors.

        These errors are raised after the request was sent to the server, so the
        request may have side-effects.

        Set to ``0`` to fail on the first retry of this type.

    :param int redirect:
        How many redirects to perform. Limit this to avoid infinite redirect
        loops.

        A redirect is a HTTP response with a status code 301, 302, 303, 307 or
        308.

        Set to ``0`` to fail on the first retry of this type.

        Set to ``False`` to disable and imply ``raise_on_redirect=False``.

    :param int status:
        How many times to retry on bad status codes.

        These are retries made on responses, where status code matches
        ``status_forcelist``.

        Set to ``0`` to fail on the first retry of this type.

    :param int other:
        How many times to retry on other errors.

        Other errors are errors that are not connect, read, redirect or status errors.
        These errors might be raised after the request was sent to the server, so the
        request might have side-effects.

        Set to ``0`` to fail on the first retry of this type.

        If ``total`` is not set, it's a good idea to set this to 0 to account
        for unexpected edge cases and avoid infinite retry loops.

    :param Collection allowed_methods:
        Set of uppercased HTTP method verbs that we should retry on.

        By default, we only retry on methods which are considered to be
        idempotent (multiple requests with the same parameters end with the
        same state). See :attr:`Retry.DEFAULT_ALLOWED_METHODS`.

        Set to a ``None`` value to retry on any verb.

    :param Collection status_forcelist:
        A set of integer HTTP status codes that we should force a retry on.
        A retry is initiated if the request method is in ``allowed_methods``
        and the response status code is in ``status_forcelist``.

        By default, this is disabled with ``None``.

    :param float backoff_factor:
        A backoff factor to apply between attempts after the second try
        (most errors are resolved immediately by a second try without a
        delay). urllib3 will sleep for::

            {backoff factor} * (2 ** ({number of previous retries}))

        seconds. If `backoff_jitter` is non-zero, this sleep is extended by::

            random.uniform(0, {backoff jitter})

        seconds. For example, if the backoff_factor is 0.1, then :func:`Retry.sleep` will
        sleep for [0.0s, 0.2s, 0.4s, 0.8s, ...] between retries. No backoff will ever
        be longer than `backoff_max`.

        By default, backoff is disabled (factor set to 0).

    :param bool raise_on_redirect: Whether, if the number of redirects is
        exhausted, to raise a MaxRetryError, or to return a response with a
        response code in the 3xx range.

    :param bool raise_on_status: Similar meaning to ``raise_on_redirect``:
        whether we should raise an exception, or return a response,
        if status falls in ``status_forcelist`` range and retries have
        been exhausted.

    :param tuple history: The history of the request encountered during
        each call to :meth:`~Retry.increment`. The list is in the order
        the requests occurred. Each list item is of class :class:`RequestHistory`.

    :param bool respect_retry_after_header:
        Whether to respect Retry-After header on status codes defined as
        :attr:`Retry.RETRY_AFTER_STATUS_CODES` or not.

    :param Collection remove_headers_on_redirect:
        Sequence of headers to remove from the request when a response
        indicating a redirect is returned before firing off the redirected
        request.
    PaGETaDELETEaPUTaHEADaTRACEaOPTIONSaDEFAULT_ALLOWED_METHODSPlllPaAuthorizationaDEFAULT_REMOVE_HEADERS_ON_REDIRECTlxaDEFAULT_BACKOFF_MAXutyping.ClassVar[Retry]l
Datotalaconnectareadaredirectastatusaotheraallowed_methodsastatus_forcelistabackoff_factorabackoff_maxaraise_on_redirectaraise_on_statusahistoryarespect_retry_after_headeraremove_headers_on_redirectabackoff_jitterareturnubool | int | Noneuint | Noneuint | Noneubool | int | Noneuint | Noneuint | Noneutyping.Collection[str] | Noneutyping.Collection[int] | Noneafloatpaboolputuple[RequestHistory, ...] | Noneaboolutyping.Collection[str]afloataNonea__init__uRetry.__init__Dakwareturnutyping.AnyaRetryuRetry.newTtnDaretriesaredirectadefaultareturnuRetry | bool | int | Noneubool | int | NoneuRetry | bool | int | NoneaRetryafrom_intuRetry.from_intDareturnafloatuRetry.get_backoff_timeDaretry_afterareturnastrafloatuRetry.parse_retry_afterDaresponseareturnaBaseHTTPResponseufloat | NoneuRetry.get_retry_afterDaresponseareturnaBaseHTTPResponseabooluRetry.sleep_for_retryDareturnaNoneuRetry._sleep_backoffTnDaresponseareturnuBaseHTTPResponse | NoneaNoneuRetry.sleepDaerrareturnaExceptionabooluRetry._is_connection_erroruRetry._is_read_errorDamethodareturnastrabooluRetry._is_method_retryableTFDamethodastatus_codeahas_retry_afterareturnastraintaboolpais_retryuRetry.is_retryDareturnabooluRetry.is_exhaustedTnnnnnnDamethodaurlaresponseaerrora_poola_stacktraceareturnustr | Noneustr | NoneuBaseHTTPResponse | NoneuException | NoneuConnectionPool | NoneuTracebackType | NoneaRetryaincrementuRetry.incrementDareturnastra__repr__uRetry.__repr__Tluurllib3\util\retry.pyTa.0whTwxu<module urllib3.util.retry>Ta__class__Taselfatotalaconnectareadaredirectastatusaotheraallowed_methodsastatus_forcelistabackoff_factorabackoff_maxaraise_on_redirectaraise_on_statusahistoryarespect_retry_after_headeraremove_headers_on_redirectabackoff_jitterTaselfTaselfaerrTaselfamethodTaselfabackoffTaclsaretriesaredirectadefaultanew_retriesTaselfaconsecutive_errors_lenabackoff_valueTaselfaresponsearetry_afterTaselfamethodaurlaresponseaerrora_poola_stacktraceatotalaconnectareadaredirectastatus_countaotheracauseastatusaredirect_locationaresponse_redirect_locationahistoryanew_retryareasonTaselfaretry_countsTaselfamethodastatus_codeahas_retry_afterTaselfakwaparamsTaselfaretry_afterasecondsaretry_date_tuplearetry_dateTaselfaresponseaslept.urllib3.util.ssl_#apypyTlllTllacpython:nlnllTlllTll
uReturn True for CPython 3.8.9+, 3.9.3+ or 3.10+ and PyPy 7.3.8+ where
    setting SSLContext.hostname_checks_common_name to False works.

    Outside of CPython and PyPy we don't know which implementations work
    or not so we conservatively use our hostname matching as we know that works
    on all implementations.

    https://github.com/urllib3/urllib3/issues/2192#issuecomment-821832963
    https://foss.heptapod.net/pypy/pypy/-/issues/3539
    astartswithTuOpenSSL qa_is_bpo_43522_fixedaSSLErrorTuNo certificate for the peer.areplaceTw:ualoweraHASHFUNC_MAPagetuFingerprint of invalid length: uaunhexlifyaencodeadigestahmacacompare_digestuFingerprints did not match. Expected "u", got "ahexw"u
    Checks if given fingerprint matches the supplied certificate.

    :param cert:
        Certificate as bytes object.
    :param fingerprint:
        Fingerprint as string of hexdigits, can be interspersed by colons.
    aCERT_REQUIREDasslaCERT_u
    Resolves the argument to a numeric constant, which can be passed to
    the wrap_socket function/method from the ssl module.
    Defaults to :data:`ssl.CERT_REQUIRED`.
    If given a string it is assumed to be the name of the constant in the
    :mod:`ssl` module or its abbreviation.
    (So you can specify `REQUIRED` instead of `CERT_REQUIRED`.
    If it's neither `None` nor a string we assume it is already the numeric
    constant which can directly be passed to wrap_socket.
    aPROTOCOL_TLSaPROTOCOL_atypingacastu
    like resolve_cert_reqs
    aSSLContextuCan't create an SSLContext object without an ssl moduleaPROTOCOL_TLS_CLIENTuCan't specify both 'ssl_version' and either 'ssl_minimum_version' or 'ssl_maximum_version'a_SSL_VERSION_TO_TLS_VERSIONaTLSVersionaMINIMUM_SUPPORTEDaMAXIMUM_SUPPORTEDawarningsawarnaDeprecationWarningTu'ssl_version' option is deprecated and will be removed in urllib3 v2.1.0. Instead use 'ssl_minimum_version'Tacategoryastacklevelaminimum_versionaTLSv1_2acontextamaximum_versionaset_cipherslaOP_NO_SSLv2aOP_NO_SSLv3aOP_NO_COMPRESSIONaOP_NO_TICKETaoptionsapost_handshake_authaIS_PYOPENSSLaverify_modeacheck_hostnameahostname_checks_common_nameakeylog_filenameaosaenvironTaSSLKEYLOGFILEuCreates and configures an :class:`ssl.SSLContext` instance for use with urllib3.

    :param ssl_version:
        The desired protocol version to use. This will default to
        PROTOCOL_SSLv23 which will negotiate the highest protocol that both
        the server and your installation of OpenSSL support.

        This parameter is deprecated instead use 'ssl_minimum_version'.
    :param ssl_minimum_version:
        The minimum version of TLS to be used. Use the 'ssl.TLSVersion' enum for specifying the value.
    :param ssl_maximum_version:
        The maximum version of TLS to be used. Use the 'ssl.TLSVersion' enum for specifying the value.
        Not recommended to set to anything other than 'ssl.TLSVersion.MAXIMUM_SUPPORTED' which is the
        default value.
    :param cert_reqs:
        Whether to require the certificate verification. This defaults to
        ``ssl.CERT_REQUIRED``.
    :param options:
        Specific OpenSSL options. These default to ``ssl.OP_NO_SSLv2``,
        ``ssl.OP_NO_SSLv3``, ``ssl.OP_NO_COMPRESSION``, and ``ssl.OP_NO_TICKET``.
    :param ciphers:
        Which cipher suites to allow the server to select. Defaults to either system configured
        ciphers if OpenSSL 1.1.1+, otherwise uses a secure default set of ciphers.
    :returns:
        Constructed SSLContext object with specified options
    :rtype: SSLContext
    acreate_urllib3_contextTaciphersaload_verify_locationsaload_default_certsa_is_key_file_encryptedTuClient private key is encrypted, password is requiredaload_cert_chainakeyfileaset_alpn_protocolsaALPN_PROTOCOLSa_ssl_wrap_socket_implu
    All arguments except for server_hostname, ssl_context, and ca_cert_dir have
    the same meaning as they do when using :func:`ssl.wrap_socket`.

    :param server_hostname:
        When SNI is supported, the expected hostname of the certificate
    :param ssl_context:
        A pre-made :class:`SSLContext` object. If none is provided, one will
        be created using :func:`create_urllib3_context`.
    :param ciphers:
        A string of ciphers we wish the client to support.
    :param ca_cert_dir:
        A directory containing CA certificates in multiple separate files, as
        supported by OpenSSL's -CApath flag or the capath argument to
        SSLContext.load_verify_locations().
    :param key_password:
        Optional password if the keyfile is encrypted.
    :param ca_cert_data:
        Optional string containing CA certificates in PEM format suitable for
        passing as the cadata parameter to SSLContext.load_verify_locations()
    :param tls_in_tls:
        Use SSLTransport to wrap the existing socket.
    adecodeTaasciia_IPV4_REamatcha_BRACELESS_IPV6_ADDRZ_REuDetects whether the hostname given is an IPv4 or IPv6 address.
    Also detects IPv6 addresses with Zone IDs.

    :param str hostname: Hostname to examine.
    :return: True if the hostname is an IP address, False otherwise.
    a__enter__a__exit__aENCRYPTEDTnnnuDetects if a key file is encrypted or not.aSSLTransportaProxySchemeUnsupportedTuTLS in TLS requires support for the 'ssl' modulea_validate_ssl_context_for_tls_in_tlsawrap_socketTaserver_hostnamea__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsasocketasysabinasciiTaunhexlifyahashlibTamd5asha1asha256amd5asha1asha256aexceptionsTaProxySchemeUnsupportedaSSLErroraurlTa_BRACELESS_IPV6_ADDRZ_REa_IPV4_RElaHAS_NEVER_CHECK_COMMON_NAMEaIS_SECURETRANSPORTuhttp/1.1aTupleTOintppOstrOinta_TYPE_VERSION_INFOl l(l@Daimplementation_nameaversion_infoapypy_version_infoareturnastra_TYPE_VERSION_INFOu_TYPE_VERSION_INFO | NoneaboolDaopenssl_versionaopenssl_version_numberaimplementation_nameaversion_infoapypy_version_infoareturnastraintastra_TYPE_VERSION_INFOu_TYPE_VERSION_INFO | Noneaboola_is_has_never_check_common_name_reliableudict[int, int]TaCERT_REQUIREDaHAS_NEVER_CHECK_COMMON_NAMEaOP_NO_COMPRESSIONaOP_NO_TICKETaOPENSSL_VERSIONaOPENSSL_VERSION_NUMBERaPROTOCOL_TLSaPROTOCOL_TLS_CLIENTaOP_NO_SSLv2aOP_NO_SSLv3aSSLContextaTLSVersionaOPENSSL_VERSIONaOPENSSL_VERSION_NUMBERaPROTOCOL_SSLv23aimplementationanameapypy_version_infoTaTLSv1aTLSv1_1aTLSv1_2aattrassltransportTaSSLTransportll@lllaUnionTa_TYPE_PEER_CERT_RET_DICTObytesna_TYPE_PEER_CERT_RETDacertafingerprintareturnubytes | NoneastraNoneaassert_fingerprintDacandidateareturnuNone | int | straVerifyModearesolve_cert_reqsDacandidateareturnuNone | int | straintaresolve_ssl_versionTnnnnnnDassl_versionacert_reqsaoptionsaciphersassl_minimum_versionassl_maximum_versionareturnuint | Noneuint | Noneuint | Noneustr | Noneuint | Noneuint | Noneussl.SSLContextaoverloadTQQQQQQQQQQQQDasockakeyfileacertfileacert_reqsaca_certsaserver_hostnameassl_versionaciphersassl_contextaca_cert_dirakey_passwordaca_cert_dataatls_in_tlsareturnusocket.socketustr | Noneustr | Noneuint | Noneustr | Noneustr | Noneuint | Noneustr | Noneussl.SSLContext | Noneustr | Noneustr | NoneuNone | str | bytesuLiteral[False]ussl.SSLSocketassl_wrap_socketDasockakeyfileacertfileacert_reqsaca_certsaserver_hostnameassl_versionaciphersassl_contextaca_cert_dirakey_passwordaca_cert_dataatls_in_tlsareturnusocket.socketustr | Noneustr | Noneuint | Noneustr | Noneustr | Noneuint | Noneustr | Noneussl.SSLContext | Noneustr | Noneustr | NoneuNone | str | bytesaboolussl.SSLSocket | SSLTransportTypeTnnnnnnnnnnnFDahostnameareturnustr | bytesaboolais_ipaddressDakey_fileareturnastraboolTnDasockassl_contextatls_in_tlsaserver_hostnameareturnusocket.socketussl.SSLContextaboolustr | Noneussl.SSLSocket | SSLTransportTypeuurllib3\util\ssl_.pyu<module urllib3.util.ssl_>Taimplementation_nameaversion_infoapypy_version_infoamajor_minoramicroTaopenssl_versionaopenssl_version_numberaimplementation_nameaversion_infoapypy_version_infoais_opensslais_openssl_issue_14579_fixedTakey_filewfalineTasockassl_contextatls_in_tlsaserver_hostnameTacertafingerprintadigest_lengthahashfuncafingerprint_bytesacert_digestTassl_versionacert_reqsaoptionsaciphersassl_minimum_versionassl_maximum_versionacontextasslkeylogfileTahostnameTacandidatearesT
asockakeyfileacertfileacert_reqsaca_certsaserver_hostnameassl_versionaciphersassl_contextaca_cert_dirakey_passwordaca_cert_dataatls_in_tlsTasockakeyfileacertfileacert_reqsaca_certsaserver_hostnameassl_versionaciphersassl_contextaca_cert_dirakey_passwordaca_cert_dataatls_in_tlsacontextweassl_sock.urllib3.util.ssl_match_hostname[asplitTw.l:lnnacountTw*aCertificateErrorutoo many wildcards in certificate DNS name: alowerw*u[^.]+astartswithTuxn--areaescapeareplaceTu\*u[^.]*apatsaappendacompileu\Au\.u\ZaIGNORECASEamatchahostnameuMatching according to RFC 6125, section 6.4.3

    http://tools.ietf.org/html/rfc6125#section-6.4.3
    aipaddressaip_addressarstripapackeduExact matching of IP addresses.

    RFC 9110 section 4.3.5: "A reference identity of IP-ID contains the decoded
    bytes of the IP address. An IP version 4 address is 4 octets, and an IP
    version 6 address is 16 octets. [...] A reference identity of type IP-ID
    matches if the address is identical to an iPAddress value of the
    subjectAltName extension of the certificate."
    uempty or no certificate, match_hostname needs a SSL socket or SSL context with either CERT_OPTIONAL or CERT_REQUIREDw%arfindTw%agetTasubjectAltNameTutoo many values to unpack (expected 2)aDNSahost_ipa_dnsname_matchadnsnamesavalueuIP Addressa_ipaddress_matchTasubjectTacommonNameuhostname %r doesn't match either of %su, arepruhostname uu doesn't match Tuno appropriate subjectAltName fields were founduVerify that *cert* (in decoded format as returned by
    SSLSocket.getpeercert()) matches the *hostname*.  RFC 2818 and RFC 6125
    rules are followed, but IP addresses are not accepted for *hostname*.

    CertificateError is raised on failure. On success, the function
    returns nothing.
    uThe match_hostname() function from Python 3.5, essential when using SSL.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingTaIPv4AddressaIPv6AddressaIPv4AddressaIPv6Addressu3.5.0.1a__version__TEValueErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.util.ssl_match_hostnamea__module__a__qualname__a__orig_bases__TlDadnahostnameamax_wildcardsareturnutyping.Anyastraintutyping.Match[str] | None | boolDaipnameahost_ipareturnastruIPv4Address | IPv6AddressaboolTFDacertahostnameahostname_checks_common_nameareturnu_TYPE_PEER_CERT_RET_DICT | NoneastraboolaNoneamatch_hostnameuurllib3\util\ssl_match_hostname.pyu<module urllib3.util.ssl_match_hostname>T
adnahostnameamax_wildcardsapatsapartsaleftmostaremainderawildcardsafragapatTaipnameahost_ipaipTacertahostnameahostname_checks_common_nameasanakeyavalueahost_ipadnsnamesasub.urllib3.util.ssltransportawrap_bioaProxySchemeUnsupportedTuTLS in TLS requires SSLContext.wrap_bio() which isn't available on non-native SSLContextu
        Raises a ProxySchemeUnsupported if the provided ssl_context can't be used
        for TLS in TLS.

        The only requirement is that the ssl_context provides the 'wrap_bio'
        methods.
        asslaMemoryBIOaincomingaoutgoingasuppress_ragged_eofsasocketTaserver_hostnameasslobja_ssl_io_loopado_handshakeu
        Create an SSLTransport around socket using the provided ssl_context.
        acloseafilenoa_wrap_ssl_readlunon-zero flags not allowed in calls to recvunon-zero flags not allowed in calls to recv_intoareadabufferunon-zero flags not allowed in calls to sendalla__enter__a__exit__acastTwBacountaselfasendTnnnunon-zero flags not allowed in calls to sendawriteSwwwbwruinvalid mode uu (only r, w, b allowed)wwwrwbaSocketIOa_io_refsllaioaDEFAULT_BUFFER_SIZEuunbuffered streams must be binaryaBufferedRWPairaBufferedReaderaBufferedWriteraTextIOWrapperamodeu
        Python's httpclient uses makefile and buffered io when reading HTTP
        messages and we need to support it.

        This is unfortunately a copy and paste of socket.py makefile with small
        changes to point to the socket directly.
        aunwrapagetpeercertaversionacipheraselected_alpn_protocolaselected_npn_protocolashared_ciphersacompressionasettimeoutagettimeouta_decref_socketiosaSSLErroraerrnoaSSL_ERROR_EOFashould_loopaarg1aarg2afuncaSSL_ERROR_WANT_READaSSL_ERROR_WANT_WRITEasendallarecvaSSL_BLOCKSIZEawrite_eofatypinga_ReturnValuearetuPerforms an I/O loop between incoming/outgoing and the socket.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaexceptionsTaProxySchemeUnsupportedlaTypeVarTa_SelfTaSSLTransportTabounda_SelfTaUnionTObytearrayOmemoryviewa_WriteBufferTa_ReturnValuel@uurllib3.util.ssltransporta__module__u
    The SSLTransport wraps an existing socket and establishes an SSL connection.

    Contrary to Python's implementation of SSLSocket, it allows you to chain
    multiple TLS connections together. It's particularly useful if you need to
    implement TLS within TLS.

    The class supports most of the socket API operations.
    aSSLTransporta__qualname__Dassl_contextareturnussl.SSLContextaNonea_validate_ssl_context_for_tls_in_tlsuSSLTransport._validate_ssl_context_for_tls_in_tlsTntDasocketassl_contextaserver_hostnameasuppress_ragged_eofsareturnusocket.socketussl.SSLContextustr | NoneaboolaNonea__init__uSSLTransport.__init__Daselfareturna_SelfTpuSSLTransport.__enter__Dw_areturnutyping.AnyaNoneuSSLTransport.__exit__DareturnaintuSSLTransport.filenoTlnDalenabufferareturnaintutyping.Any | Noneuint | bytesuSSLTransport.readTllDabuflenaflagsareturnaintpuint | bytesuSSLTransport.recvTnlDabufferanbytesaflagsareturna_WriteBufferuint | NoneaintuNone | int | bytesarecv_intouSSLTransport.recv_intoTlDadataaflagsareturnabytesaintaNoneuSSLTransport.sendallDadataaflagsareturnabytesaintpuSSLTransport.sendTnDaencodingaerrorsanewlinennnDamodeabufferingaencodingaerrorsanewlineareturnastruint | Noneustr | Noneustr | Noneustr | Noneutyping.BinaryIO | typing.TextIO | socket.SocketIOamakefileuSSLTransport.makefileDareturnaNoneuSSLTransport.unwrapuSSLTransport.closeaoverloadTQDabinary_formareturnuLiteral[False]u_TYPE_PEER_CERT_RET_DICT | NoneuSSLTransport.getpeercertDabinary_formareturnuLiteral[True]ubytes | NoneTFDabinary_formareturnaboola_TYPE_PEER_CERT_RETDareturnustr | NoneuSSLTransport.versionDareturnutuple[str, str, int] | NoneuSSLTransport.cipheruSSLTransport.selected_alpn_protocoluSSLTransport.selected_npn_protocolDareturnulist[tuple[str, str, int]] | NoneuSSLTransport.shared_ciphersuSSLTransport.compressionDavalueareturnufloat | NoneaNoneuSSLTransport.settimeoutDareturnufloat | NoneuSSLTransport.gettimeoutuSSLTransport._decref_socketiosDalenabufferareturnaintubytearray | Noneuint | bytesuSSLTransport._wrap_ssl_readDafuncareturnutyping.Callable[[], None]aNoneuSSLTransport._ssl_io_loopDafuncaarg1areturnutyping.Callable[[bytes], int]abytesaintDafuncaarg1aarg2areturnutyping.Callable[[int, bytearray | None], bytes]aintubytearray | NoneabytesTnnDafuncaarg1aarg2areturnutyping.Callable[..., _ReturnValue]uNone | bytes | intubytearray | Nonea_ReturnValueTuurllib3\util\ssltransport.pyu<module urllib3.util.ssltransport>Ta__class__TaselfTaselfw_Taselfasocketassl_contextaserver_hostnameasuppress_ragged_eofsTaselfafuncTaselfafuncaarg1Taselfafuncaarg1aarg2Taselfafuncaarg1aarg2ashould_looparetaerrnoweabufTassl_contextTaselfalenabufferweTaselfabinary_formT
aselfamodeabufferingaencodingaerrorsanewlineabufferawritingareadingabinaryarawmodearawatextTaselfalenabufferTaselfabuflenaflagsTaselfabufferanbytesaflagsTaselfadataaflagsTaselfadataaflagsacountaviewabyte_viewaamountwvTaselfavalue.urllib3.util.timeoutma_validate_timeoutaconnecta_connectareada_readatotala_start_connecta__name__uu(connect=u, read=u, total=w)a_DEFAULT_TIMEOUTagetdefaulttimeoutuTimeout cannot be a boolean value. It must be an int, float or None.TETypeErrorEValueErroruTimeout value %s was %s, but it must be an int, float or None.luAttempted to set %s timeout to %s, but the timeout cannot be set to a value less than or equal to 0.uCheck that a timeout attribute is valid.

        :param value: The timeout value to validate
        :param name: The name of the timeout attribute to validate. This is
            used to specify in error messages.
        :return: The validated and casted version of the given value.
        :raises ValueError: If it is a numeric value less than or equal to
            zero, or the type is not an integer, float, or None.
        aTimeoutTareadaconnectuCreate a new Timeout from a legacy timeout value.

        The timeout value used by httplib.py sets the same timeout on the
        connect(), and recv() socket requests. This creates a :class:`Timeout`
        object that sets the individual timeouts to the ``timeout`` value
        passed to this function.

        :param timeout: The legacy timeout value.
        :type timeout: integer, float, :attr:`urllib3.util.Timeout.DEFAULT_TIMEOUT`, or None
        :return: Timeout object
        :rtype: :class:`Timeout`
        TaconnectareadatotaluCreate a copy of the timeout object

        Timeout properties are stored per-pool but each request needs a fresh
        Timeout object to ensure each one has its own start/stop configured.

        :return: a copy of the timeout object
        :rtype: :class:`Timeout`
        aTimeoutStateErrorTuTimeout timer has already been started.atimeamonotonicuStart the timeout clock, used during a connect() attempt

        :raises urllib3.exceptions.TimeoutStateError: if you attempt
            to start a timer that has been started already.
        TuCan't get connect duration for timer that has not started.uGets the time elapsed since the call to :meth:`start_connect`.

        :return: Elapsed time in seconds.
        :rtype: float
        :raises urllib3.exceptions.TimeoutStateError: if you attempt
            to get duration for a timer that hasn't been started.
        aminuGet the value to use when setting a connection timeout.

        This will be a positive float or integer, the value None
        (never timeout), or the default system timeout.

        :return: Connect timeout.
        :rtype: int, float, :attr:`Timeout.DEFAULT_TIMEOUT` or None
        amaxaget_connect_durationaresolve_default_timeoutuGet the value for the read timeout.

        This assumes some time has elapsed in the connection timeout and
        computes the read timeout appropriately.

        If self.total is set, the read timeout is dependent on the amount of
        time taken by the connect timeout. If the connection time has not been
        established, a :exc:`~urllib3.exceptions.TimeoutStateError` will be
        raised.

        :return: Value to use for the read timeout.
        :rtype: int, float or None
        :raises urllib3.exceptions.TimeoutStateError: If :meth:`start_connect`
            has not yet been called on this object.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsatypingaenumTaEnumaEnumasocketTagetdefaulttimeoutaexceptionsTaTimeoutStateErrorla__prepare__a_TYPE_DEFAULTa__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uurllib3.util.timeouta__module__a__qualname__latokena__orig_bases__uFinal[_TYPE_DEFAULT]aOptionalaUniona_TYPE_TIMEOUTuTimeout configuration.

    Timeouts can be defined as a default for a pool:

    .. code-block:: python

        import urllib3

        timeout = urllib3.util.Timeout(connect=2.0, read=7.0)

        http = urllib3.PoolManager(timeout=timeout)

        resp = http.request("GET", "https://example.com/")

        print(resp.status)

    Or per-request (which overrides the default for the pool):

    .. code-block:: python

       response = http.request("GET", "https://example.com/", timeout=Timeout(10))

    Timeouts can be disabled by setting all the parameters to ``None``:

    .. code-block:: python

       no_timeout = Timeout(connect=None, read=None)
       response = http.request("GET", "https://example.com/", timeout=no_timeout)


    :param total:
        This combines the connect and read timeouts into one; the read timeout
        will be set to the time leftover from the connect attempt. In the
        event that both a connect timeout and a total are specified, or a read
        timeout and a total are specified, the shorter timeout will be applied.

        Defaults to None.

    :type total: int, float, or None

    :param connect:
        The maximum amount of time (in seconds) to wait for a connection
        attempt to a server to succeed. Omitting the parameter will default the
        connect timeout to the system default, probably `the global default
        timeout in socket.py
        <http://hg.python.org/cpython/file/603b4d593758/Lib/socket.py#l535>`_.
        None will set an infinite timeout for connection attempts.

    :type connect: int, float, or None

    :param read:
        The maximum amount of time (in seconds) to wait between consecutive
        read operations for a response from the server. Omitting the parameter
        will default the read timeout to the system default, probably `the
        global default timeout in socket.py
        <http://hg.python.org/cpython/file/603b4d593758/Lib/socket.py#l535>`_.
        None will set an infinite timeout.

    :type read: int, float, or None

    .. note::

        Many factors can affect the total amount of time for urllib3 to return
        an HTTP response.

        For example, Python's DNS resolver does not obey the timeout specified
        on the socket. Other factors that can affect total request time include
        high CPU load, high swap, the program running at a low priority level,
        or other behaviors.

        In addition, the read and total timeouts only measure the time between
        read operations on the socket connecting the client and the server,
        not the total amount of time for the request to return a complete
        response. For most requests, the timeout is raised because the server
        has not sent the first byte in the specified time. This is not always
        the case; if a server streams one byte every fifteen seconds, a timeout
        of 20 seconds will not trigger, even though the request will take
        several minutes to complete.

        If your goal is to cut off any request after a set amount of wall clock
        time, consider having a second "watcher" thread to cut off a slow
        request.
    aDEFAULT_TIMEOUTDatotalaconnectareadareturna_TYPE_TIMEOUTppaNonea__init__uTimeout.__init__Dareturnastra__repr__uTimeout.__repr__a__str__Datimeoutareturna_TYPE_TIMEOUTufloat | NoneuTimeout.resolve_default_timeoutDavalueanameareturna_TYPE_TIMEOUTastra_TYPE_TIMEOUTuTimeout._validate_timeoutDatimeoutareturna_TYPE_TIMEOUTaTimeoutafrom_floatuTimeout.from_floatDareturnaTimeoutacloneuTimeout.cloneDareturnafloatastart_connectuTimeout.start_connectuTimeout.get_connect_durationDareturna_TYPE_TIMEOUTaconnect_timeoutuTimeout.connect_timeoutDareturnufloat | Nonearead_timeoutuTimeout.read_timeoutTuurllib3\util\timeout.pyu<module urllib3.util.timeout>Ta__class__TaselfatotalaconnectareadTaselfTaclsavalueanameTaclsatimeoutTatimeout.urllib3.util.url_astartswithTw/w/apathalowera__class__a__new__ahostuFor backwards-compatibility with urlparse. We're nice like that.aqueryw?uAbsolute path including the query string.aauthanetlocuw@u
        Authority component as defined in RFC 3986 3.2.
        This includes userinfo (auth), host and port.

        i.e.
            userinfo@host:port
        aportw:u
        Network location including host and port.

        If you need the equivalent of urllib.parse's ``netloc``,
        use the ``authority`` property instead.
        utoo many values to unpack (expected 7)u://w#u
        Convert self into a url

        This function should more or less round-trip with :func:`.parse_url`. The
        returned url may not be exactly the same as the url inputted to
        :func:`.parse_url`, but it should be equivalent by the RFC (e.g., urls
        with a blank port will have : removed).

        Example:

        .. code-block:: python

            import urllib3

            U = urllib3.util.parse_url("https://google.com/mail/")

            print(U.url)
            # "https://google.com/mail/"

            print( urllib3.util.Url("https", "username:password",
                                    "host.com", 80, "/path", "query", "fragment"
                                    ).url
                )
            # "https://username:password@host.com:80/path?query#fragment"
        aurlato_stra_PERCENT_REasubnu<lambda>u_encode_invalid_chars.<locals>.<lambda>utoo many values to unpack (expected 2)aencodeTuutf-8asurrogatepassacountTd%Blld%ladecodeaencoded_componentabyteaextend:lnnazfillTlaupperuPercent-encodes a URI component without reapplying
    onto an already percent-encoded component.
    agroupTlasplitw.u..aoutputaappendapopainsertTluaendswithTTu/.u/..Tua_NORMALIZABLE_SCHEMESa_IPV6_ADDRZ_REamatcha_ZONE_ID_REasearchaspanTlTu%25u%25:lnn:lnna_encode_invalid_charsa_UNRESERVED_CHARSw%a_IPV4_REd.Tw.a_idna_encodeaasciiaisasciiaidnaaLocationParseErrorTuUnable to parse URL without the 'idna' moduleDastrictastd3_rulestpaIDNAErroruName 'u' is not a valid IDNA labelTaasciia_TARGET_REu is not a valid request URIagroupsa_PATH_CHARSa_QUERY_CHARSuPercent-encodes a request target so that there are no invalid characters

    Pre-condition for this function is that 'target' must start with '/'.
    If that is the case then _TARGET_RE will always produce a match.
    aUrla_SCHEME_REu//a_URI_REutoo many values to unpack (expected 5)aschemearpartitionTw@utoo many values to unpack (expected 3)a_HOST_PORT_REa_USERINFO_CHARSTnnnla_normalize_hosta_remove_path_dot_segmentsa_FRAGMENT_CHARSTEValueErrorEAttributeErroraport_intTaschemeaauthahostaportapathaqueryafragmentu
    Given a url, return a parsed :class:`.Url` namedtuple. Best-effort is
    performed to parse incomplete urls. Fields not provided will be None.
    This parser is RFC 3986 and RFC 6874 compliant.

    The parser logic and helper functions are based heavily on
    work done in the ``rfc3986`` module.

    :param str url: URL to parse into a :class:`.Url` namedtuple.

    Partly backwards-compatible with :mod:`urllib.parse`.

    Example:

    .. code-block:: python

        import urllib3

        print( urllib3.util.parse_url('http://google.com/mail/'))
        # Url(scheme='http', host='google.com', port=None, path='/mail/', ...)

        print( urllib3.util.parse_url('google.com:80'))
        # Url(scheme=None, host='google.com', port=80, path=None, ...)

        print( urllib3.util.parse_url('/foo?bar'))
        # Url(scheme=None, host=None, port=None, path='/foo', query='bar', ...)
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsareatypingaexceptionsTaLocationParseErrorlautilTato_strTahttpahttpsnacompileTu%[a-fA-F0-9]{2}Tu^(?:[a-zA-Z][a-zA-Z0-9+-]*:|/)u^(?:([a-zA-Z][a-zA-Z0-9+.-]*):)?(?://([^\\/?#]*))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?$aUNICODEaDOTALLu(?:[0-9]{1,3}\.){3}[0-9]{1,3}a_IPV4_PATu[0-9A-Fa-f]{1,4}a_HEX_PATu(?:{hex}:{hex}|{ipv4})Tahexaipv4a_LS32_PATahexals32a_subsLu(?:%(hex)s:){6}%(ls32)su::(?:%(hex)s:){5}%(ls32)su(?:%(hex)s)?::(?:%(hex)s:){4}%(ls32)su(?:(?:%(hex)s:)?%(hex)s)?::(?:%(hex)s:){3}%(ls32)su(?:(?:%(hex)s:){0,2}%(hex)s)?::(?:%(hex)s:){2}%(ls32)su(?:(?:%(hex)s:){0,3}%(hex)s)?::%(hex)s:%(ls32)su(?:(?:%(hex)s:){0,4}%(hex)s)?::%(ls32)su(?:(?:%(hex)s:){0,5}%(hex)s)?::%(hex)su(?:(?:%(hex)s:){0,6}%(hex)s)?::a_variationsuABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789._\-~a_UNRESERVED_PATu(?:w|w)a_IPV6_PATu(?:%25|%)(?:[u]|%[a-fA-F0-9]{2})+a_ZONE_ID_PATu\[u)?\]a_IPV6_ADDRZ_PATu(?:[^\[\]%:/?#]|%[a-fA-F0-9]{2})*a_REG_NAME_PATTu^(/[^?#]*)(?:\?([^#]*))?(?:#.*)?$w^w$a_IPV6_RE:llna_BRACELESS_IPV6_ADDRZ_REw(u)\]$u^(%s|%s|%s)(?::0*?(|0|[1-9][0-9]{0,4}))?$a_HOST_PORT_PATSBwSwKwQwUwAwrwzw9wMwYwLwBw5waw8wvwowWwjw.w_wCw~w7wfwGwxwgwNwkw0w4wDwRwpwOwdwywJwXwnwEwHwbw2wFwmw6w1wIwTwZw3w-wqwuwswhwtwiwcwVwewwwlwPSw'w;w+w,w)w(w!w=w*w&w$a_SUB_DELIM_CHARSSw:Sw/w@Sw?aNamedTupleaOptionalafragmenta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.util.urla__module__u
    Data structure for representing an HTTP URL. Used as a return value for
    :func:`parse_url`. Both the scheme and host are normalized as they are
    both case-insensitive according to RFC 3986.
    a__qualname__TnnnnnnnDaschemeaauthahostaportapathaqueryafragmentustr | Noneustr | Noneustr | Noneuint | Noneustr | Noneustr | Noneustr | NoneuUrl.__new__apropertyDareturnustr | NoneahostnameuUrl.hostnameDareturnastrarequest_uriuUrl.request_uriaauthorityuUrl.authorityuUrl.netlocuUrl.urla__str__uUrl.__str__a__orig_bases__aoverloadDacomponentaallowed_charsareturnastrutyping.Container[str]astrDacomponentaallowed_charsareturnaNoneutyping.Container[str]aNoneDacomponentaallowed_charsareturnustr | Noneutyping.Container[str]ustr | NoneDapathareturnastrpDahostaschemeareturnaNoneustr | NoneaNoneDahostaschemeareturnastrustr | NoneastrDahostaschemeareturnustr | Noneustr | Noneustr | NoneDanameareturnastrabytesDatargetareturnastrpa_encode_targetDaurlareturnastraUrlaparse_urluurllib3\util\url.pyTamatchu<module urllib3.util.url>Ta__class__Taclsaschemeaauthahostaportapathaqueryafragmenta__class__TaselfTacomponentaallowed_charsTacomponentaallowed_charsapercent_encodingsauri_bytesais_percent_encodedaencoded_componentwiabyteabyte_ordTatargetamatchapathaqueryaencoded_targetTanameaidnaTahostaschemeTahostaschemeais_ipv6amatchastartaendazone_idTapathasegmentsaoutputasegmentTaselfauserinfoanetlocTaurlaschemeaauthorityaauthahostaportaport_intapathaqueryafragmentasource_urlanormalize_uriw_ahost_portweTaselfauriTaselfaschemeaauthahostaportapathaqueryafragmentaurl.urllib3.util.utild unot expecting type a__name__uaencodeuutf-8astrictTaerrorsadecodea__traceback__awith_tracebacka__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingaTracebackTypelTnnDwxaencodingaerrorsareturnustr | bytesustr | Noneustr | Noneabytesato_bytesDwxaencodingaerrorsareturnustr | bytesustr | Noneustr | Noneastrato_strTnDatpavalueatbareturnutype[BaseException] | NoneaBaseExceptionuTracebackType | Noneutyping.NoReturnareraiseuurllib3\util\util.pyu<module urllib3.util.util>TatpavalueatbTwxaencodingaerrors.urllib3.util.wait4umust specify at least one of read=True, write=Trueasockapartialaselectarcheckawcheckutoo many values to unpack (expected 3)laPOLLINaPOLLOUTapollaregisterDwtareturnufloat | Noneulist[tuple[int, int]]ado_pollupoll_wait_for_socket.<locals>.do_polllapoll_objTlTEAttributeErrorEOSErrora_have_working_pollapoll_wait_for_socketawait_for_socketaselect_wait_for_socketTareadatimeoutuWaits for reading to be available on a given socket.
    Returns True if the socket is readable, or False if the timeout expired.
    TawriteatimeoutuWaits for writing to be available on a given socket.
    Returns True if the socket is readable, or False if the timeout expired.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsasocketawait_for_readawait_for_writea__all__TFpnDasockareadawriteatimeoutareturnusocket.socketaboolpufloat | NoneaboolDareturnaboolTnDasockatimeoutareturnusocket.socketufloat | Noneabooluurllib3\util\wait.pyu<module urllib3.util.wait>Tapoll_objTwtapoll_objTasockareadawriteatimeoutamaskapoll_objado_pollT
asockareadawriteatimeoutarcheckawcheckafnarreadyawreadyaxreadyTasockatimeoutTasockareadawriteatimeoutu.utils.admin,!a__doc__a__file__a__spec__aoriginahas_locationa__cached__awinregluutils.saveasaveuutils.statTastatastatvZ\TIZ@GCP]@\S5?YZG]GCAC^UFJXA]RF@VG\;9Q@_ZGC_^CD@SDZUB]CC@@WE5=?;eakspuHs9?g`outwsAst>893WW_\PShYWMCoW_VKHXJDzKGPG
<3YQ\XB@QDGpIBVK?;@TACF\APB@rKDQF:=UEXJFpJFQJhd92P
DVDJwAM\Dcn8>FRDArNCWD@VGArOG]Ai
d>>@TACF\IPRhicmxx~|qJ_R@VDAwNDQD:38243S]TQQPEHIBlGSCD@]ERX_D@C@]@\PZ\FPKDE^GR?=ZVI
@DRB]Y[Q]VJA?9?>DYFCuNFPDld82T\GZXWAV\WR^RX@QDGE_DW<=GTZ^XBAP@CE_FQl^m98IRAJvAAUDSEGUZSOTT4=58GFZRPGVADtKDUDRV[m\TOMlW^PJBPFEvKFRE<;@CyRYWGP??>8PREGq[SR
gnj~uxp?9hGVADtKDUDRV[m\TOMlW^PJBPFEvKFRE<;GG]XSM\IXFAqK@\@\PShYWMCoW_VKHXJDzKGPG:;W\DR:<CO~W_PM[H@t]TQ98E^nQUmTQYRCUWDXGAw@MPA]VQfZ]MDhTZTEDVDJwAM\D?9AXE@uKDRD
BQCDvKDS@cF]nU\lPS]]CWUj;<<;SXPVE@RKE43RVAPQ[EV\RRD@{\[_MQ?9AS\BVEArICQA\WQnY\K@iRPV@EWGApNBSB<9PTSUKDSFJQ\KDXX8:^VG@YY^
cbku{p~>=S\RU@@W@KTUVUDAYDAjYSZYROl<9GRCEAVWUQSGIXFA>893WW__PDhASYBUDRJFQVWhSWJ@CC>=FEO=:DP[LVO^\CPQcGRDOgP]FUwHFRDCZWXkRQKJA@id>8UOTWEC
9=DRYAV:8ESFEBYDQZF]?8<=]VRVJVPnB_ZAQG<;WZYYUPL_[WGbh?9FKM8:D\FKPVYKmXPM
N_]EWWxBRXyUIC[^DV_zzr`lwccjr|ejcgw`b~wggsbqikzQAL_Zd@\RKL^oncP]azdlkdWFDY[YD53T^LXG@^\ESUaBQ@I]^]yTN@QEBQX\Bj]QKlk<;Q_A_Z]QJPW@R\S\QVAVA
:8KW@F]\YD^\BRPrXG]{RMCS@K[]_DfXQO^\UPN?8:<CVKE]VZm^\@E]WAW^wEUY|WLCQDDPZVJf\]KGVDBPY]?:C@]@\PZ\V]CmGTZAWDSEBX^]oYUMe@]DzXYW4?GVAF@_FS_\MhNS_@QDTJEZX\o\RK`QDGE_DW?;\]ACXW\TUU@jAV\F]G\GA\VWjYVKzVGL{QZR::EU@DFVDWSRQEOBDoGUACA\JVYXJGZW\]DFSF\SZSAP@CE_FQ::ZTIRAJCWGTVY]MJ\EVS^P
V\T_]DB\Q]R
?;UY__TPD[_ZFV@C]XPO??ADRK[YT\FFQAYPTS:8CUEBOX@UBSDEA^CU=8Q\AMZYXU
]XC@YVTP53J?=;8@P]FSVt^^FSWKESBBX\^m[QL::>2B[]@Q^qU[KP{RNFRCG^XWFgR\N?98>SKTW@C
?=FRKA?;;;\P^WYU^__VSFY[[D98JGSMYQThDKFhQPZ^WnPYkqc>=DSASCQAQmCO@gSV\^WWY_VRQE\YZAaX_bp`9?awopvEaTEcopFEavcu5995232493294850772570477958997823543719637207727620074206382217934618721564227661113020457703864942aiOpvEoeaaeavocplZauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\admin.pyu<module utils.admin>.utils.browsers#H/a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosajsonlasqlite3ashutiluutils.decryptTaCryptUnprotectDataaCryptUnprotectDatauCrypto.CipherTaAESaAESabase64uutils.saveasaveuutils.geckoageckouutils.statTastatastatuutils.filesafilesvE^]I_JL\J;8[_D]JLZCZZ?9[XB[GECDY_CV>2]_CVGA@]AGZT=;VA]_FB^^D\WSJHFMQXBV@LzDKFGdYEEZA\PEpWMT==VK_U{A@FF]w[HPSB\YB\@Aupb=:\XFXA@ZUAV89ZXD\ALDDZ^A@WAWUKCYGS43QXBV@LLB[Z@PPT^ZRBQ\V[X=3VJWULB[^AALYBYXD]AFA@TE=:\XFXA@M@[_JSZ_PGRKWY_WA?9;=Q[UKA{^YRP]?3RWPnh\Y\AflGSUSXVCLCXBZGW[MDUQJC[GWG^QXPEU_MQ4?CT\UZ]@B\WAD5;K]UPFRE_
EXGY9<K]__AWQA@]CPWGAW88DVXUQJCPGP@VKHYCU@?8AUTWWXUPVYTS?<@TXPCQ[E\NRUCW?898TPRQG\^PBU\S:9GVG@F]^JCV^T[YDFJhLfbmtjMBKP^_HYM^OjGJDP[SJVRAD\HlCKJUT^VAF[@WGOdLMCUYR]SXWIiEKCPYPEU_MQOoW89>?99PTQBCbSA@AX@S58]\^mf[VQMim@T[SFPGTLFUE^X]]CXEAE]FVBY]PGFR_EWC_GFPD99@PXUKYEUAZBR?=J]YTGK]KXS[V
BFPK]PYS4?@\ZTBUAKOYBTCSFACZCT=?AVUSGZXQ@GY]AF[^SDFVYH?:JWT^T@YDBRG[A^CE\G===3W\PPG]^\EU\S>8GSCFF]R`PAPNGV_^BYGWOn]cDWEZY_UMJ\TSLA]JWW_SNmYeVFFN\CPNCR\_HYK@NY@VOh\zJYGCPFIFWXSRBZBERAIDI@\YSG\YV@LQ\@Nn\><:8:>[^QKBxLLZTP^T4<SPQjfZ_]BfjDUUVQ]ICFBSTMSWF]DAP@<:KQ^U\[CFAQ^AEG?8AUTWOXT@WNXZGS>;GSUSUBVGK]JP@]CA]J;:=?QWRSEYYQDVXU?9A]DDB]TzXGGCIC]]PPVEGMOdVoW^CVNDPY_GUZLPMk^{BWOKVKIAQ^^TB_BGWAOi\8;=:VYWD@pJQVZMvTAW99TVTml_Y[CkgC]]P_@[]VX[WTOE^GTMZ^ZiTZECX]@HZKWF[]ZmA]WBZG^PP@PTTGPED]QWY]XXP8>AW_PUB]\
VCP]5?EV]QYTX\XXXU::AW^RY\RBUFGTVPGTCC8?@\YS]\WX]Y]T\[P]YSZQ58A\^^\NB_APC\X[TLFPGQCYV^gUWFM^UMD[ASA[[[nIUTG;=FP_UZF^ZUC\G^TR@:><<V\TZL_^RBRYQ49KULMJ]PuG]VMCUYRTG\VIi_~QXPHGVTR]XXPNo[uWA]CB
IAW_PSSPJWCKLjWwQVYWSU]IEV]QY\VR]PYSDi^rHIYJYLZVXIGWT^UHE]@RF\]ZHm^~@XTRACGW__[F^WQANd^=9?8?9U[SDGdYKXB42\]_miZ_^AhjJV]R@B[DQLTVQ]GZFBY]PGFR_E8;@]XTLGYAA_5:DW[RFYL]SA[M^]53FPUUWYL[D
SWMVG4<CUYRG[XWGAP]@CZYVK@S^I8?>9\UWQG[^WDW[R=2@]LLD\UbG[B@TXP@B[Me^lQL_\IAQ^^BYDYQOo\v]A[E
NFS[UPWA\GDi[gZXQ@GY]A
IAW_PF^Y]ADY\FDeV?3?2[UWAEuXBYYZXW9<T\VggZW_FmmA]TPEUF[GFYDZAW[lVJLQA8?BU_TBRB_
HSDP<<K\ZTFC[
@K_<>K]TUB]FSXmZABUCG]ASXjSIDPF;=>>W\SQF\XWKU]V?8B]ECKWSl@TMAS_W@EYHe]aUBQLC\\^HRM^On\`]LYZrIAQANAQYWDZAW[lVJLQANe[>98>P_YCBq]]Y^WEY
92R\_jmP\QLfiEV]Q[TTVCKYDP]]KLRTFPF]OKSB98CPYPFF_FKY89CV^T]WZW\QUT;3JS^PE^XRFAX^AAYZUJDYUH>3EU\SPA]BAQG
WGY@@QA5>89W]VRF[^VER^Q?:KWLMKXPdEY
NJV]RLG\JlW~YU]MAW^RVY[UMiZpA]BAQGKFPZQVAWCAVKHi]g\YV@LQ\@IAVZQC]UWCLP[IDd[48524<VSUPPCjEK\W]Z\FGQMXVRTS?>@BZR[_WFjm=?8<QR\JERG]VKQCECBSF[
?=]QGAWJ^_@ES\EEXGY;3^\KT]^PWJ_^Q]@@88QRiGZUZYQQ^V\^VWAX@RW^T]Cv\TYMUB>;@JW^ZUSASDB]VRK8>ITA[UC@PD[OIT\ZSWEIdn<<]PYSYQTU52EC_V\YSUWXVVK8?J:>58@\FMJWBD\W^YRF83\YCR
4:@QFMJXkh98>888PPWWPAiPVWXWkBAVS\_VFCRLX]S_W:8@J^PPU]Fce4<?<^SV@DWM]RHPCLKCXBZ98W[GA_CY_DGPZJBRM]>9U]@UY[VRF[^U_KJ88^SUQPX@\CKUT]Y@\[\TWTRUB[@VQSPE\ARRUUFT@\[UZXWVJ
<:IKWS[UWKXFBS]UN:?BUFPVOBRF]OOS^\TPGKko5>YSZQVP[\42H>;9<J]GLD\BF]^QZUC8>WXFT
=?@VM@G]ni>95:<:WWTTSCmZUKFUJn]\@ESMZ4<Q\YTYfCP@^4:PP]ABYL^UM]AGATNAQD]HzXPU_gFRMP8>T[]W[mGULZPBHTFQOtWZW^`EVAR83\YYQVCHYGQWJ[GFKPKEUF[Ohi}_STYdGUG]4?VX^R^mBRB_
^KHPBQDne~W[XZeGPCP8?SUFU
=3@W@GJV8>?9BXDXZFR]UQZS_fETG[AU]Q]VZXPALTXKT?2V_CQW]::^]QU^gKBQDPXF]Z]_QQFT99TTFGVGkXVAQSAWP\WSWUSUWVSUmKLXBWm^DjTGLIGimP^TB@@L]\lRSKo?2XUAGWGm_PH
XWDGQAg_WJbn>?]PCGW@mXSN
{@IHEcWIJZF\QL|XBS^PDARGjRVH;3KULMJ][SAFQ@gSSI=?98>8QWREU]EjEF_]G]BRM]B@QAJ
<:AY@Aim5;;3ISLPfB_FEVA]iMX@=3@QCF[^QWHO@T@ZES@]nD]E;=PPFB_\@VS^^]WQFFVF_kL_@<<V[L]ABmPRRCZELSMB\F==[MAJY@VZUEBF[@88S@GEXAV@QQFMPBFPFJ5:T]AE]@Q\[DDJVJT\F[PXZ^:?WG_@ce59^YBGQA[[FZF
=?AAJ99\BWFXIHP\]J]JVSP^SP@MU==QJ[]FD
8>]J[EXEEV]QAVK<:E[OAYAF\W\\K]O4<?<SWZ_^GS==WKKS_]DQHYBXoAYB??BUA@DYF\OG?94?89WPRW]SCICFmQ[DX_RNS\MTR]L?2_E
ATYLVjm::HR@Z]SVNW\EPoh?>V\F_VFsvj[VD_VJpu`}wshutyYN;3]W[J@FFSWnGTDFR]FQPBT\SJAHGFSK^[S\;:WWV@MEEUTjEWD@PWPKLEGVQkCRKCj
oRRQXP]5;;3KWLMKXRVRELGAP]lAUEJ8:::4:\]^Z^WQYk\]OFQYAW88DGL:9CR_@QhmTVQ]VVGCR
<<WAQ]HM?<AT@CK[qQUC]52>3]TNW\EPooVQV^TUCCUE\JGQ_GWijSQ[]T]LM^
@:?BRDLBVlALS?8]ZCU98BPACE]uYXAV4?89>?PVUWTDlQ]]X_RAVYAUHPBQ88ZY]]ZTD
nd>;[RI
_]Gf[SAFQ@gSSIWUAVBTF\<:=?]U[AITA[PLZ@LCVIPS@SGSC\E|ULFYKRdiqV]SQ\E<=DVBC
ke52LJO
=?GY@@@W^IjFB_\@V^JRRAWBRB_OyQLE_JZjezWZYPWK;8ks|uv`]SXWY_CAj]RJHUF[PKC\FV@gEES[AlERQBF]]_UK@HAW]mNYUCWucxxVZVXXQE==SJQWDF5<@QFF;=>>U\GA\OX^@]E@:8DX^M]D\Flj8?49QUUZWQ_mV]AFTXGV?>\SXPM?8[WWB[XFT:?:?GKO?8CW[FQVVZGLCGjW[AW]TES^GVYRM?:VITPGA49QWVBY^@Q?9VX@]?9FAO
?=EP[@RpCMFM`^GBVD][LwXBSDU^M]=:VLP]DF4?WW\DQ_C\4288TZZRZTGXE@R^]{WWXPS@]CieBZCioFZFkhE\ChiKZBhhEY\DU?8><JWDMCXZWZYPWK53;8;9URSRPMlAUEJB_ETJZYKVIWFZPJWACUG>8AQCFBYEWGin4?_VJ
WVFm_RECWEkSWISWJ\HTFQ524<[ZP\[fCP@^4:PPkU\\]N\ZQSFWDTEX
8?_VR\]lEUG[
VIPS@SGSC\EkQaWJJUT\vYLX?<RYF\<>TW_ZWiBSF\PKWUAVBTF\H}_W\[sR@R98>3\R\KAQGZWK_DFDT]WQ_iIXL]?2GXBFok4?GKO?8G]CF
AP[GlGBT]FVYZTZ[kCRLX=9dpy|peYK\W^^fEJTLEW@\U_]g@Q\@QBTAGB^BTjCW[FQPSG\jVAVT@VWvc~^]T_YA58WAQ]HM?<ITCD=3=2R]JD_G]\@ZEG<:ITF@DZFWC_Dio><:8[_[P\UYi]T@GTFJD^FR==_V^QK=:[__DZ\GW><:8LKO;9HRJEE]@PRUSGMBGmVZFZ\UETEDD[A\X\L>9RL[W@L;3P^ZBP[ER=3]TEU
8>GJM>3GUKAGWCRv@@BLmWF@YGTTAsTAXAUEJB_ET=2QJPWEF8;P\VDX^FW?8><QSK]OckT[]AUEJB_ET;8DTBCGZGRDUCHQ\WeT@@B[AWB^GhoDXEleHPEJNWGVJWNmkUGXBF\A;38:J]LFKXBSGAOWDTC8>?9??VQSWUAjWBG[UQX^@WT@VEUG[SB\EAWA
?=YDBV_QY^Jbk?<>;\_^GITD_\HQKL@PIPUA]HWDXHcWQqS@T
8?AVBFon>2BEK
92JWNEERXGjFH_X@SSLRXC]HYGQKeWPvYLWav~pq`_Q]PARXF]tavxRFA[UZT\>8]JS]AB42GTDF83>;VWJAVA[\@WOE
=?TCC\RZTXAXEEV]QrFL_WY_^@\Alj@_OjdW@VEK]K;9<=KVEADWQBDVVQTT@4<?8?>V]^WUAkV\E[^[TUCWTERCUGP>3Q[D]T_PT@hk:8:>XPVKBXFP\N[EGBSNWX@TDWM]MYJDWJA?8G[E@oh<:LFK4?@]E@
CQUBoK@ZPM]TIZYJSBWGYJ}^FAVAHcr||slLRKQWFmDSLPDTVmF@YA^DQYjTNGQ@r`|tQ\D[X\R\C>8]JS]AB42GTDF83>;VWJAVA[\@WOE
=?QY@]X\YPAXEEV]Qw\O^]_RV@\Alj@_OjdG]Ni
e?<>;G\GDFXQ_@^U_Y\K>3;8?8PW^QUDjW@VV\FkVPBTFTV@QCY@Z8?PA]TXDPS@V@
li58R\AU]Lf[SEGTEj\PLQPGSITD_4:52[T[AHWDXQJZAAASKRTFSGR@[EcWQqTGR>2DXEDke<<LKO;9G_@C
L]^IiAC^]F]PKWUAVBTF\HfURqWCRavupvgRAZW_Q^Wm]]iTSEPU@A_KXL\]WmUWWBZTOE^GTMZ^Zi@PQESYJ\lWC_PWFm]VUBIE@WWP]Y]Y^RjWSWFVKGmZ]]ZV_]RUUva}PDRV^@gQQJUE5?SKRREC83HY@J;8?8R]AG]CX^GZAD99]M]SUAAY@ii58=2_TPYRV\j[\DZCTWUE=2]TYPK;=P]\FZXBW:>58BAH
8=\G_VWJTPW@JBAmW]C_]PXB^VVJX\L>9RL[W@L;3P^ZBP[ER=3]TEU
8>GJM>3YAUPUJzJLBMgVHKYFSPEsTCTWF\VSK==SHSPDF??P\[@Z]MU<:>8RD\]QAQX@\KWBFV_StGP]ZEwWKQE_NkeKYEiiJYGki@ZEolGZAliZG^[PGG[Dh
mA]Eik:>58K\L@@W[J\R[BPPEQD8?49<>R\SPUMoPQKGVDKPUA]HWDX?9]XCDZGOhe98>3\R\KAQGZWK_DFD^KZPE\IYAZDzQKMY@O
8=G_@C
ce>3BBI98E\C@G\XEl@DXZG]WHPSAVFVF_Ip[CL^D@jwt}zbCA]C\AUV@PFYCoZ_MVLZSAFkDQK_DoA]_Vs`{xEBYF>>VKVQCG=;BQKB;342TYAEZ@\WC[AJ==\[KLYBIUBCW[VcXCYADXDoeAVBnnA\Okm@]Dmo58=2JPFL@VQ_AB\CN8=8?49UQPRUCo[_WSURK]APUA]HWDXPA]BAQG
=?V\W__RK^Fon>2=;[UXADYFXTNPJLF_CZXEWFRE_HuZZR^PF]J
=3AZAFQTS_EMUNPUFT@QA]Ku\[XUU@XJUOQRKUAQGZOp\Y\_VFSAoL\F5?PZGP[UOTXFUGQMXEzW\R[S@YGmLUF@WZV^TY[RF@U4?Z
XA]][]VPKVCSX]48QTYZJV;3W@DW_]BW^KRTGWCSAZIw^_[XTD\@kGUD4?89V\@P\Y\_VFSYV\bJZ]MAebPY\ZZTE^j[RCkbS_YUTJ]Vd?8PZ]_XPB[FWGCQ]\p\V^XRA^Q\W[\QAYi]WZWiRW^]TXJ^iGJTkQ^X^ZTGRhPWMPoVT]U\eT@]EGWJ=:8>@QADB^WYXXYRJ_A>38?>9QQU_UEoTWQY\iGSDGO]B\B[XKPBXFPT@YDBRG83ITCDGVB\Kmo?8]UIjDSGZRTS[ZQRGkX]MBRM]QRFQCRLX=9]RKUU[ZY^]AmRWAg_D][lUU\PLfCP@^8:::QU]WK]AvY^U98BPACE]994?X\TQ^n@RFZQLVYAUHPBQDTZUP\KSE]X<=PUZYM_DIQLPVA_AFA^W__^oEUF[?>AQGMF\>38?_\_Y_ClVSFR
XD]\T^QPWgESMZDTYVXQ\WTCMSJ]YW?8HD_V\XW@mY]S\_C\D\ZT[SWJY\T\Z@l\QEQ?8TXF^__XXPVBK]^QUSAi_^P\YFn_^S_WFj
4:FFK5<U^VjCDVF]YYWY\T\Zh]^RBJBFWWcDWEZY_Ul;3V_TjGTFJD^FR[_^YVcVWU@KB@W\hWCCB[@Wh?>Q\Pf@FVA[U^V
WVQY]RRQXP]m\WV_Wf\TFX]VZiGEVCYTZP49]]ZiGAWF\YUS
SWPYZPPRBIEAi[\SZVkVRMTXVLVVSnE@W@\R[RiiUVRiLJ]G\X_]ck;9P^ToIQKKO\KRSW[SYTPW]WWj^[RX^oQTBVQ][kBRJFB\AQ>9RZ[m@YBENVJQ_]Z]]WTTGNEAf_^S_WjTVDXS]AS\QmDSKKA_BQonWZVn@QFFAXAPhi>3CSAADYEVDYB@]_RiYFAN]J\Z]QZ_l_ZFM]PYShUWSgMKVKXS_WV][YTUGGT
U[ViGRG@O[@WQPP\QQMDWZXU^ZcDQ\SuXKAgJW\dTA^@FRG>;U@[]CM?8QZ\@\_EU8?;=FWGLG[CTG@DWBUC>8?8><SWQ_WDgVSZRWjQV]SQ\ETRBREVA]<>T_V[Q]Kio?>?2\R\ABUAYUM\EC@UOPRJPERG]IP\W[XU@AC__CW?:K]OKmn<=BKL
::@WOE
@W^BjAEYXDUSLQU@]DSGQHV\\^]V@C@\ZFWarx}qd_WT\DX^M]ZY@EGTAQQNI\BNYKk]PLDWtf}u[_JjW]\Y\WG=:QJP\EA>?FVAD92?:_]JKYEZ_GXBF>;PVYY[WGYHFU^Qq\]^[QC_GnkF\OonG\DnnB^GhoDXEleJ^Abe4852ATC@E[Z\^__\F===3=2\]UQWFmSW[SYoRZ[Y^SGYGSQCPEWC[ZF]DJPG8>S_\Y_SA]D
co=2<<[_WKFSB[RM^FAJWM[TCR@XDPEH_XUWAGCTQBU?9GZADci?9GJI=9J^AJF\_HgJG^_GTSNWX@TDWM]MG\XS]K@HZ[FWeu|pwf[Q@C\QWCVuW\QVA\G_Puaw}`w~wpbrj}}\YCfZZ]R_YJRE}rgzp}YYCj@[QZUKw}[]HmV]WS[QB^GUY_[On@\TVSD]W>3]HRUCF?9IYFA4852QZGA^CP[E_NC52RZ[Y^SGYGP@@P[Rq[\SYSARG\DnnB^GhoDXEleZCYNJ]G?253CRABG[Q^[]TTB\C4:5259]STUQFg_SS[ZkZZAA]FLRQFPFVG\98[ZF@\AAho?8><QTWBIXL]\JQKMEPJUTDPEXGYIFUTSRCCITQG\?>@\EFjm=?FA@89@\AD
LW]HnEHUQAWTC[WASCPC]JEYXPTGJD\^D\`|zwqfFQLZUA@_D]FXDoVZCYGTUAGfC\@ZAkWRLUva}^YMmGXYQUKAQ\JPM[LT\\YGY@[Y>;U@[]CM?8BTAG8;=:R]AGZD\ZAWGB
>8Y_JMWGKSHH\XVeXD\CGVDjkBXGbeAVAioJWAkh>888BPACE][QGF\KL89>?99W]VWVFmUVU\]hPWE^T^W]JWSJWHYM^>;QVD_XYXQC
ke52>3]TWE@T@ZWM[GABVNTV@QCY@ZNIYTPVF@BTYEU?9J^AJid?2AEL49J\NE@WUHiCAY]FVSOWPCUETB_ND_YWW@FD_ZAQbuwqfqe}bdgqvrwm[Z\MWVLCA]STA\rUPS]vetk}|uftjw{]ZNmR\[]Gx~~pg}|}}Y]IfEYRPPG|v\_ImS\]YDGXYQUgXRTWOmI^Y[\E_WArgvfat`@[QZUgQ\;8UMWWCF?>DS@J8?>9U]@AY@^Z@_OB43EEL
8?ZXG]VZ_QQGA]BihC@Y\BIidH>2\^AWUWTVJYHIS\RuXBYYZXWFYNnjJ@TQLKoeB_BonQoWY\Pf_MVn?94?WJQVFC:>U]XGXY@R8?49GUCEK^\WDWZ]SVG?25<=:QQTUGSVjSB_BFSE@98RCEPRGY\AW]@^@XZcQHARXMYo48^YPP[TGEQXGPZCUWFQJW]b^]QU^YHFTQAUn???>V]DX^]FUkBRM]n99I><ESMZWBFWPCTom{F\GQcVVLOYA\jn}BQ@YeDQWXWon9?]XXP|C]BP>8E=2I52AUBQ
QI@\YLRnh}H]DQf[TGET@Qim@PGWtlk@SQUPio99YUUWvI]GS~j53H49B=2@QA\Y]WT]Q@EQWCRno|E\PeFZEYSHq@]E@SEnkaKWBuWMXdi?2]PYSuIY[hJZOWQK?2O?>H99HQEX^\UV^VDHVQLPin~]W_USnjpYEZZPjKbhjlFUE}QLYdo?8[SYP
v^E\YVkLa8?L>8C?:FSB[
[ZVX_PDF]TDVdd`ICF\[_ndkFED[]Yon`AQGtQATjk>2^P]VeGGCZQY<<E;8B>;IWFZTWUQ\TDBWSASlieCRFodaGXGiofFQA|QEQon><[STWeGPE8?J4:I98EPDX[\WRTUBC]TARodsT^Gp@]DER@khmAUJrXMYin52_U[\
zUVLzAVAAW@52H9?O>2@PD[_YTS[UHBTYEWne}JZPBG[ombFRG}REUje::VY[U|@W[@@\8?N8?J=9AWMQU][YUWBFWPCTomYTPDVleeK]J}WFSnh5<^TXSs[_VMT>?O?9C<<CPC]U\RUZXE@SQMQejf]@WZddcCUGvRFTnh=:[R^Pd^BPZ><L43M?<EQCX
TWPXZSBBPSLYhnr_\U[imeCPGsR@Rdh4?\S^Sy_Y_^42O;9h83>;S_BV]QMUlIWFZ[PD_]\A_lBTF\WPAiGA[UQXW@YZPRYUCC\QEQoju@VB]a_^EAXK]in{@YN\pD\FDPEiil@TF}TDVleqKWDW?2V\@\_\GYjAQD]P\AWY[FTjERG]_UEoC@]TZZRAXWQQTPFI]YASej{DZU^@Ziil@TF}TDVlezK_V[GY5<Q[@Z_]@\o@TA^PPF]^P@XlCT@[VUGmB@\P^^RG^_[PZXIHQSMSnjjPYQRMiejPZR\MrE_NC]JdolEW@pSLYjljS[VQM=?W[J[_ZLXjCRA\SYB\_[G^iGSC\_TBfIJZTP^]KZ]UR]VEGQTMRilBsVJu]\ZXjng@U\ddcCUGvRFTnh`GWY>2V]A\X]F^g@PD[P^E]Z]M_oHPBQU\FgHKYT__TD[ZVX_PDF]TDVdd~PU@]A[TLdjuTRQnogFWFuQDTij}PUV89PPB^]ZG_mCWCZQXJ^[PLUjBXFPUSGnGGXS\UVBZVVQ[QI@\YLRnhuWWQ\Uihq[@Z_QimeCPGsR@Rdhv[AZYV=;Q[DX_^AUm@YE^VZK]UQL[mFRE_R\GnDDVSY[UJTW[RUWBBVUFYihdZDT^P\mleFPDwUGYhneZCU_WQ=9?8QX[S[UK]SW^L]53AVFDBZKWBnm::YFMYT[^XAkm8>QUGUCmj>>QVZ^^RG_@jm>8_[D@W@Ibd5?\VA\Z\PSFbn<>^52>3R]JYRZ]\Q]@[XXE]jEWC[>2EUG[
_QXiCWCZi58[_VWM]EAVA_PAZB@EEQCX
52S_[@[]GP?>8;Z8?>9G@K><[Z]R[]KQVEhVXZ^PVBFXAX=3[WY[YPG^V\RF\
YPXP[\S]W@8?>9CDXT^X]m^Y\S48\_DDVSY[UQV\[\?8AB_S\ZRlZRUQZWYhZR^]lhWPZcFKV^\^\en:?UUC]59BG]R\]Uo[T[RWVXh[T^Vi>9:>AYN\AWEThVXZ^PVBUVZ[^UJHJ\__^WmZSU]=:S\ZR@TJUPlKZW_\MP\W[XU@BAYQ[[Qg\QUTP88:?@YKKDVDVAHYECGZFV@SPEo@TFE@\FWKBRM]CG[UZTUn^R_W><Y@FVTQTUEPBAXS\U_BRUCoXELW^ZUZABUFP@BZR[_Wj\UXT=?VRAQGSPBWAQRFhWJWTQEiZXJQABYLQ?<Q\CC_KI[PEF]@MQUDj\[@FZ@MAQD];=Q[D]T_PT@WY@\[[YVC^\LjVVEVTVWVEAVA_83ZW\R[S@YGT__^YSAYFVUDjWYXXYRJ_AITA[DA\^Y]Ul\S_V:8:>]MQ\BL4<WYWAYYE\=252UWWYWgFQD]ih?>8;QRP_\gDSGQTPWX\g@PD[TSCmPQ[Y_gADV_QYWJYHIRSBRiit\K]ZUTlkvPB]^WKejb@]R[T]Ellt\@QS^H8<_QQXVjERG]_UR[\mBSG^S]Fo_TURVgE@VTQT\EWCASTCThjnTDRB__@ddcKYT[^QAddcSGWGT[M=?8<^[@VW_Z[TV[[^oCSFZ;=FXMP]ZRbBWGYh:?YQW_LW@FSFZW@QEDCDSGZ9?Q\WA\]FP99>2_
?:5;LJ@?<ZZ_\Y\CT\BmUWWYWgU__^]W@ES@]=:VZ\X\Q@_]^VD[ZR\WW][QTE42DTAPJRGQiZZ_\Y\C[W\R_WA]ZRm^TYWo?>R[_\FTATVlAWR]_KQ]\]^WD]RRjWXUPdQ;8;9W_X[TQJSKP]]__YJ]CUVFjUQVZ_oWZY\^UASGCXA]ZVYh^P]Vo><P\AM]JA^ZBCZELVQBfRUT[VoPQKGVDKBUFP;:TZBX[\UWK]ZB]_ZUW@WVFmUVU\]hPWE^T^W]JESMZ53AUEJB_ETJHRJEE]@PAWUAkUVQ^]kEPCCBZDS@CY@ZZWYhZR^]l>8<<]AUWFG:?SV^LQVF\;8?8EQFPARDPmVG^GCPGGRG@O[@WJRFA[UZT\BQS@WE_]KF_JH]WB\U]Y\JT\^\XVG^J<>DDXDY\WfT@]EGWJZU^DS@AB]FQBVYXX]VKXW]^A]YQ]YEE_U[^^@[QVSYCRJ^\\PPEFYAHYPWU[AWY_VTJTVWP]]__YJ]C98>8AQCFBRDci?9UZFCYCBG\@VZXBVGKE_JUE42BW@B@QDTICTZREQDCN_J\CXEAE]FV5<@VF@@ZAQCFBRD>>awopvEaTEcopFEavcu7090888396222428860054232524510055673438423955335433801032223672748208169985292889626317575593146950aiOpvEoeaaeavocplEauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\browsers.pyu<module utils.browsers>.utils.clipperIa__doc__a__file__a__spec__aoriginahas_locationa__cached__asubprocesslarevP[IVEFK@UF@VR]AA9;Y^H]DAAR:8>>82\U_DR^]PFgSXZDHSF;8BX\_PcFCU;2AAH
;<IWJMRFBTBK^[WAGS[]Q]j\FCGGGHWG\F@[W]YU@wT_D[YTDV83HPKDRIT@ERRWTVV]LCQKRB_YVReC>2LUA@ATALU99]ASvVXEU9<5;WVE\AKSK
I93rZLWUZZ]PGW52[UGPSIX_]XIA

C@JITXUTESIFMNEjTZKihmSKyz~~ch
nLE99xYA\V_\][@U9<ufo@t]wqQS^`CrheqK_ADQazZWNU|Ekct}
ihRZXBq{~xdliKN;:dMWTZYKJXT43sog|krtqrqacyk}t~bmx{rwqznj|gdda}o{tqoenzq`bquAiqmSLymjIK>2kegLGH=3GU{uXZAv}XM^QpadBjVDZAPD^vYOw
@iEiXMsbhLO>2pXAW[_]]wYE\WUZ=?FIBQTPDY^@HFYWBCAZLAIOYVN@@SY\^EZ@kU^FP[\V[QJ\
DNHoRBkNI8:}T@YRSDQ5<jPKbYeFA~pdGLaVBb~Ry]tLDB
HOdiFhmmt}z}emU[YBlCN>;wr}[RY4;uxRrd{eY`D]X]v[gSKlnjPdR~st]Fl^
Ffpc
YCtkjMJ53|]UQR_ZVQ\TR?9pB
fBqZv_qGIbq]|A}xRrXbTXAbK`ErIDi
xxwfljIEnxpxzaiY]XIjLI5:pBZQB@Tpg}:>N~^tPxu{T\uwzPRF
gKhSSsv
eMK=?4?L5::9TWDXSEWGJKRUV@^XXUJWAGTCQFSX@
?9U[JXPXP[ZA\MD@E\^@hX==[RZPWRVR@\BK?>W@]Q_>>_VD]UQCPPKPTTO^^WWD]I[VQQeK4;WGQlBAV92E]HCMPKEDSB[XQ]TPYRXRK\DA5?:<_SWCT>>GMTDKYVSAGVQPS^lZECDCDPAWGRAK[\Y_dSBtU[HTWXESOMSAMJ5?:<UK[WFA>=BPFA5:awopvEaTEcopFEavcu9699723857629182241038265337723458809433215280434864965624059505350746046818073839531766279286897724aiOpvEoeaaeavocplauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\clipper.pyu<module utils.clipper>.utilsa__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_utilsu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__uutils\__init__.pyu<module utils>u.utils.core"a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosasubprocesslarequestsarandomTarandintarandintaWinDLLv]^A^@FVD?9PUE\KDCBSIA_UQFJ4;^UE^BGD\FMTAAF==_KYXEPXWXYYYC_DG@Y^R\WL;9UC^^VFIH\F[ZE\BAe[_vxt99<;?8R\QT\VPAXDVo^U_UXSAQ:2@SAC==AXBEZUXVwqzv}vq}pr}~~cbgadmobokmTQSQRTUY[^SX^_^BCDJCGEN@LI83S^B]PYCS[RUYTYVB[
99A\@BC\FAYZUPl@V[WY[CX]ZA^AA_[[Wn4:>:BS@@KWC]ME=99<4=\TTSY[\fXT\RFRC\
99@]DCGWFRGY@CY[DVFBVA[FRBB[HBB^_MCV@:;49=<PP_CR[@CCZBSfE]PVWQD\IWAYFRC\
99@]CCYMhl<9Q_Y]CQQFRBSEZ]ZWBF[F^no>3TUF\IPCP
je5;??__YTDXG\]@DRZKZQEPIYB[<;VWKQ[[PY[T[]WG99UPTPlIQGXQQEQEXMYWY_Q;3P_ZBAWG_ZCPZBUP^]oFTMP>;GVC@[FF]GF]EKRQFKK\E\oAUVUUYZQjIXE_^CDWM_[]\[GXM^QXZV>:UZF\;9@RFF\ASBAWZ\\BBSBQX\PVCXD[WP_U834;BV@CKYCWF@\C43;?<=USUSVDkCBYUP^]CEXL^_P^V=2GG\V\[WDY@[BB^_Mijzup|v49P_[][@A[PP[]4<AU@FBXbI5:@YM]ERD]?8BAV^\_\YPTV=<Lm>>;3\SYVMZBAWG_VH]@DEI@WV_Y\cn<9@RAFB[io<892V[DJVK_PCGT^CCBYR\U\je<:GJ^T\YUDnl:;U_FVY_]WJ_[\_A@<9[Q\CGSFYQ@]@EBBDVQ[_\cnVX]]VBIK^QQYTki:2AD\Q]_UGQFC\\\M83ERD]A@[^]_TjoT\U\PA@E^_Z\Sod<=IDZW^]S
]QYV_WZWVC<9M:8?;ATEG@XG@\_QYVJ=9==<3>:RQS^TCg]^CGZWTR8?DPB@BVCB[PUE@QPUU^fWCGCDE]]CLWTZW>:CW@MF]CWA]RQ\]]LDUBSDYXZTiCl]??8::3]SSPTBlGAQ\]Po_C=<ZC?:FEL=?ATBKRCF\KA@WVDQGDFGPGQX@ZROXJV8:_CBQ@U\WF]^B]]U\WTFAT:8XTTQ]XB5?\I??8:DVCAA^Z@;948\@UVCE>9EPGEGY;3:8>3\PUY@oA\
;>E]F
GC[GJ^QPFCZQSVZh^CGGAGC_AVKAPUZYUovVGe]QvW]WTAdBW@HhdhbT^WUM_JZ^gZ^fpQU\Pt\\XJLmlojA]P\[WYBR;9]UDVJ\UUZ]]FEWJ\E[STPiEATA^SU\oWETI_QUQ??ETBFEZdFFU;948K]BFA_uRYAU538=VRSWPCmZTSP]F?8@VMMG]o^oYiYe_j]hVkVh]lXnu_]GbEVRYWBCZP]\YF}_f[Hnm_n\4=?9]]SQYWU>:nXY|y}AE\Ec_VNa\_S^A`]]txX\@VUZtTEp\[A_T\b^\SZD?>awopvEaTEcopFEavcu4311226972398539030719306459917851034697812550799651716374304306392806598633113352089572753057221248aiOpvEoeaaeavocplauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\core.pyu<module utils.core>.utils.crypto+),a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosarelajsonabase64uCrypto.CipherTaAESaAESahashlibTapbkdf2_hmacapbkdf2_hmacuutils.coreacoreuutils.saveasaveuutils.statTastatastatv&]]BVFCW@>?Q_A\GFGP;3P]C]BMZDV[;?PTFZDGUXKQ4?WD\ZwGKAD[uZEQ]D[ZA]EFrpa<=_F\YZUKXY]QZ]C_JF@PRPQg[^T[?;ZXBWGALMY_AZ[BRTEZVDP;9\ZIWFALAXZ@EUCWQGERC\5<W@X\BF__FBCX@]XB[JDGGRG=9=2?>S^XGD}KGPVAX\[5?TVTfkYYPAijJSYPYXUQPQ>=EVY_XP_R\W^P?;KUYRZWQV9:F]^WESL]w_]W=3JSYPEEV^]YUx\YS9??;WP_WUVhASCZ@P^WDR@]5:KWXVIUC[EYFY>?;3T\RV]QiEKVP\ZVD\TRIG^PZ[S?;ET^QBE]PZYW
DA[S[X]=?99>9S_QKAs]UP
>2VTUmg\[_MfoAUURWT[PSM_@AGXL\JATW_GW@]=>AR]T\W^PWU^Q88CV\^QH[J@GRL[WIZFFHTA^43JPZSJBPW_EVMPJATW_GW@]?;=>4<WP_QTFhS@XEEVGAnGK[U]YW
8>__[SX[D]]E\J]_h^WVTZXI@WSDXm:3XFERRAVZCP_@ZEYZnP@D]WGTe;;?=TAZEBRKGlDTF\
o>9^VWV_dnsATD]fZPMNQAWlevBVOPwKVAFSAiklKQG}TEWokdg}wyx|oiuWUP^tJCWX@\]_jQG@\\SK99\]ZU[idu^\R^]iiuQK_^WleaCRKrTMXjicgxqxpei}YPVZpJEUZJ_\[kSEF^_UD>?SDHTT@Rld}DU@Xd\^GDTJWmozB]GT~a`FQ[XUkeyYVXUpNGPYJQ[[jPEBZYQG<:PBGUSCSmkvDVFTgWVACRAVloHWFQj@VQTVoimATAvYATje`a}vpxueizZZXZsKARWK]Z^fTBG^XSF=>^XRS[nmpV[TXPnh{XG[^VrVDYnheA\FwYGRidaaztqypee|\QQUuOMPXFPVXeVACPVSF8;\[ZW_mnnP\SWNoikPY]QKvG]CKUGhof@UA|S@QnexXPY_p@FT]F[W[e\MDZ\WJ:3_ZTXTim{ZTD[F]WDhesWR\djdARCsSBRingk{u}ywdly[PR_vHLWZC[VZ`]GG\VUB88d4:>8UVBEPKJiED\S^U]bh<<S]CVKYDF\JX\S@XEEVGAnGX@[88@A_^[XUAPWAV_WElE@WS\Z\JQ@_NGUETGVNEPDFGUQ@eihk88^YC][YDR[UTXP\HBZRZ_VC?>S\BA]GFiIK_U[\\QGIPXQIDZPZYRJc^h4?<<GWEEFWQZNKSCAhA@XT__P?;:399PPT_BTVlVKDV^K[[^A
>2PC\BA]GFiIK_U[\\
^PBj[KYBEVGDfHFZVPYT:<9?\NGPWK_^\Di;9pJ@]^F]\]~ULSYQAR`RT_VA[YZ\]P[\_TSUX[U_UPP[RVRWSURG^SZ[<<qABV[JQY_b][^SGeP[UQG^XXRV]WWW_[_WR__]\W[\TZ^BYZX\S[Z=9sMM\XF_\[lFPJVGfRDECZ@UyXXRR\JX_[]_U^U[V^S[Z[Q^SXRSW[R\^SVT_\Y>2w@APXJP_]~uECQw@MQS[BZVVMWFXZTTX\P^AS\WUVPPH_A[]P^]YT_WQ^UU88uKD]\GY]Wvw`tMFYV[FQVTBVKVQ\]]YREWTRWU[ZYP]X\T^ZSRWQPRYS];9wOFS]F[^YrAAZMTRVT^Z\TY]SQ\UY]UPW_S^_]ZY[YWVUR4>sMBV[DPWZx@E^VYB]VSE_F[PQY]V\SGQRCW]YGQ]T[Z]U\T\ZCXQQZ9:p@FT]F[W[|vu[^XZSRbWYU\B_VQS]Y^X_^T\]PTW_QR^XVSR[[XBQ[]Y88q@DPZ@Z\^l@[^~PZ\oR_Y]FQW[SS]VY_]RDSYUESWRU[[]\PXPP[SUZ>=sKA\VEX]Yt]_]WSBRcRXYW@[]UQ][V]WVWVRUW\TP\R\\[[TV^QXXXT4>sMBV[DPWZsTIN{_VP@EInW_Y\LRXR^PCYB]R[PY^P\XT@_WQ_^ZXV[TR^W>2w@APXJP_]~AQE]TbXUZPBPDR\_]VP]_TSEXUUZSQ^Q^WSXSGASQ^X<=uM@V]@Y\^yQFQ`RT_VATTZVW\I[@USTU_]_TVZ]R\SZR^TZZ^XV<<qABV[JQY_s[YSXPPfVUXV@V]V\[Z]RUTP[XBSVU_\P]R[\PC[VWQ_F>8pAMS[EZZYz\VMLfW_[S@^[RRZZVSX[^__]P\_RS]_ZQ_SWW^U^\P=9rKLV]FQ]_kWGZ_nQ_^UMSP[[\ZSR\P^VPQ[[S\SX^VR^\WYZ\X\Q;;pJERWGZ[[}a`udQ_\]FV[]QVZ\^TS\\^T^[\W\@\UZQ_WYVTFTZ;9pIBVYE]Z\vPBrEIaP^[TFS[Y\X_U[WYYSZZ^CP[@UW[_\VXWYYUHZ?;|HGW^J]_Y_bXUZPBSZVSQQXQ\UQ\P\SRU]R\_SVXP]PWBGT\<=uM@V]@Y\^c__[UCoR_Y]FYX^[SS]^T\]P_PT]F_UV_X_CWX_VR_YQ>=sKA\VEX]Yzwavj`XX_QA[XQ^]^ZZ[\XUUR^]C[UYVT_RURU^PSRT?:|ABPX@\XWrEPYUdVZXPFXR[SURZ\_Z[Y[P]^UUT^SPR[ZPYQXY^Y=2}KGPVAX\[gZXPWdS\UQDSWS^X][]ZRZ^^[XW_RPYX[RSV_S[XVPZ?=tOMQ]G\]Z{Q\Z^VoSX\WMPC]P^V^RSUPZRWQ[YV]RDQYUPZ[UV^TY42rN@P\BY[WvUW@T@fS[^SGW\]_WYSRY^SPZTQW_UYDXSUUY]\PRERY?2uA@UYJ\Y[z\GFT[PLMgXY]SGYAV[I]VYTYFR]^AWZTS]Q_UT^\]QR[YV>9wA@R]KZ\[eVG@YfBXMY\\nU\[\AW\_UWY[^[W@TPT]ZG^QP[[YY]F]YI_FA?=qK@P\GQ_[xV@_BeU\^\@WXSS\P^\WR^QZ]V[ZR]PSPQTU]R\\PWC5>sLAW_C]VXzW__eV^ZVAUVUVZ_V]PRC[V@PSQ]ZR]V\TXW]\P]_V5?|LDRWF_ZWo__eV@cT\UPE_Y\PU^SQQ\[U^]WGY\_B[RZT^_^_CS^V8>qHF\ZDZW]pKR\[t\ASz\ZW^MgVUYSATPZG^[\]_SXVQ^QP]YB]]V]_PRXQ^]YG?<qMFQVC\[]~RCPcQ^UQCZV]WC[PZ^P^IT]\SR^DSGT\QT_T[[\[Y9?qMFT^GPY]kBTWZyRKU[T[_^]UZZ[^]CRR\_@]ZV_ZSY\QR\U_\_TZQ8<uOMPXFPVXq\CzT]EnT]ZVCXZYIQX__STWZXTPP]QUYTTUWYV^XTVU\>9|LCVV@ZZVwtBHeYW@gR^\\@ZZ]ZU_\QQ__Y_TURQXW[ZSPSPXUX]QZ^<8wIC\Z@]Z\q@F\dQ_\]FWY^Y^RT[ZAC[YRR[_U]@W_[XU[RS[^T\;9pIBVYE]Z\dVZJX\K^eV]^RF[XS\UQZWPS@^S_QUY^T^SV@V_^V\W_RS>?vJD\ZC^V[pzy{SK`XTXPDU[F]V[X\QTQ[WT^W][TPXX]Z[^YTY_Q_92u@FQ^AP[Y}RWWJdT^TPA]Y^Q]U_U^Z\IIWSWXTRRTVPWUPR_U_WP=>wOEWYA_\[|qwcT^X]D[SU\H[ZSBIDSPTZ]PY^\R[VQ_V[WRRT\==sKARWK]Z^eS^GZQeP\X\BY^Y]]P\[_Y\\YGTZYRSQ[^ZZZQUQWR_[?3wIGP\K\ZXdVHrVL`XYZPM^[QP^QS[X_VYU\U^^W\YPPWVVV[XZXRY;9pJ@]^F]\]pIY\[eXX[VLVZWPVTERRTT[XTZXVVQ\RW[P\WXPXY\T=3wIDQWEZZWsKX_WeW_YWEZYUVPTSSW[TRZQUTPV_[]\P\T[\\]PWQ8<uOMPXFPVX|[Rr]MgXY]SG[_VQ[YR_^^^VP]AXUWFCWYVYXVUP^VU^>9wA@R]KZ\[}VTTbTZU\DWY_TZWQXPQ]UV_XIYYXV[XURPZRQ^Q[U>?rJBV[AXXWpTA\TQ[QUTRSYQYIRUQ\WU_Y]^Z^T[ETFSVXPT]^4?pOM]ZFYV[}XDPeSBCSVWY]U_]^Y_^^X\UPS]RY\[[\[EQ]CQR?>vMLW_@\]VtPMgR@T\ZX[^ZSV]QTG\ZR\]WY__Z^W\^S_TWUT_W<8o;988U][SXgUM@V]@Y\^Kid9=SW@CG]^\YSP^PBVCCRKFiEKVP\ZV:3UXDPJEUZJ_\[QXWOEWYA_\[A:3CQGX_ADVGPYZQ\CG]^\YSb@RFXi\MBPWJ_ZX\S4?_UVKASCYRJ_@AAGX@[?>QOG]]@\W\RQVgETBQ@RFX9:PHMP_EZXXTVUoDKYU\U]A@XW[[WmE@^QPXVh92QZVR_j]JEV[AQZ[EX@CW^]UOMPXFPVX;98=VVGSKCSZF[^^PXSPVW]mRIFR\EZZ\B
4>GGRGRT\mQHF\ZDZW]P@FT]F[W[XXTU?:JX@P@TA\QMD\[B_\YDTFYsKA\VEX]Yt^^S@RA@VZF[[V[U^VRKLV]FQ]_E@WS\Z\SMM\XF_\[P\8:4?<<WRPR@PRkZY_QJ?=WCEVPCXZA]^C]A\]kQHBPQFXj>2Q^_QAm43zZZQsMYW@DT@IQPBRnmuLVRFFj?=RDEVULQolvHWVACneQO\\F@OS]_PFdi43XIFQWGTil|M^RFDjhPJ^TAJPZW^[AX_?<Y@EPRGRnhuJVPB@doD\VV^DALTASSC\\9:h8=u\[Rw]UWMDFXPBGUSCSmk|XVWA@AUy`ph=2YBAWTFYelv^UZ@BBTzazejBW_YRMKhi8;m;9qX^RsEXT]PUH@QUGRdnUD]T]Th82RB@]UDVeeWAY^\TedxZSXYbB\EWSPnm\QOS_Q[dj:;j>>p\\WA\FPpXTTHBURASee}F^DPp_Pn43TAFWVBUhe{FYMQr^Ukm_B^BZQ]VRCRXYW@dl>9o:9v]TQ{PDP]YWsXKPXFERRAVlewXBPX_ZinsY@ZYZ[{YCWl?<Y@EPRGRnhr[MWXZVoowQFR\\\vZD\elDS\UQD]TB4<h8;s[UR{QXP\TTWCEVPCXnhzY[U]PVc?>PCEVYATonrPZQYZPjiXIFEGZE\^F_W;9XHFUSCPoipXYXZPQinwW_^]V@>:n>?vYU]q_PZ_ZPXIFQWGTilzZXX\Z_j=>VBFWTFPhiq[Q^ZYZooGR\TW@Cne>2o8<sXUQsXNTGI\UAQok\UMJb;9REBUVMUhdZTLKoo|\SY^gD]KUPVdoU\TWn^WVTZJM_ASW\:3n42tYXQuX\UGGVVuPA_SFCQSEVinqTUV@A\]sRCPi4>YEERXMQhlrUPUAKVXvW@]keOUY\\ABjoSSRTG]DkNW_Y\L?=l99p\_T}^QSFKAZREHVPGTje|\VQDKA]m83XEARRCWlh|ZVVMJC\nkFS[^SGFnm99n=9t\TW}FYVGTFI]QGSkepB]\KS@[b5>P@D]WGTnktF_WDV@_mkRQJGA]F]li>9d>2o<988_VBQ_UP^WUZU]E;9\W\DDTFYQA_@AJU^^SWO[EGESE_>>CLS@S]PhPW_WFQ^_QVTXS4:JWCSTEKYMjCXCTPXZPAEUUUFRAQqX]VeW_YWEDWZ^P^TYV>:>:58PUTPRPJJCAg_TGT_YF^IXC@E_KPOTCYM8<LFL
4?BQXMtJA\KUPARWS\W\PPBYEY@h@Q_Do=8HSB@B]JQIQ@AGVFT\[UZ]\CGS9?_PK
ITXQ_
iY_VRA^RCUFACWBQ@R\GrAFQC
<988[F{MDRJ[XEPUPPSVQTEVCXAiYBk83VWGTpHC\GPUKUQWU[]PUOUB_LhQYFPh5?XQCPZXxsf]P@SQLttezyppmvsyZC{ABTA<8IXR][m@]HARU@W[_TWZFNCLWTLSsJAWK8<@[X\XjM\NAGUY][oMPIBSSWZVTLBUWEC]EA\U_XKQ88S\@Am@UJM
H_R\VmEVMF5?Z[@NfASMMU\ENfLQMDbj;>YXKBnBXBF_P\TVDJkAWLLP\@JoLWLD_]YWn?;ZZJ[^UZWQJFYWZ[hM]LAk]W@CiDZAEde?=<8KQGAG\ZIAQ@PkmcPQFXjh^]PU]_ZVeR\Z_WWADQ
43POZ]DA
4?CU@LD]wWXT?=<8:8RVSURZ[WQj_QLQXU@X@RCKE[BVARM_G?;CTCUMoYA_W
wZXP43AE@9?BTG]DkSE\[[AX_[]WWFGVLXG88QKPV@G
58AVAM@_{]VP8<43PRAX@ZAfSEZX\Dv[[U8;BQMCA[vY_W:;?=@TCLF]QWWJIE@l^VDR]YA_BXGDDWAWDPFYFg_FYW=9?:4>TR_QGX[iXSGTZXK_@XFBA\ERG<:WKWABWEBmG@YU\^TTQAmVJ_BGVA@oCBWT]\W:959W\YV]GFkn?:OTCYMJhh:35>WYATFZEBUF_][JYFARCAhBD\S[]R99@REUl@YF\VE\O@VGcARAZhlo\[[]XQ[PYRX\WZS[YR_V_ZT[PWQCP]Z[nm93^WXACTFY\LZGAAKQCQlCRD[?>W\YV]GFXI@V\TGQA\jFTMQ8<>?S_KWY_SSF[_RVZWPKK<8TX[\G]G\\GGWZBVW^PU@9=>2TWGPPUU[^RY[\F83PSPZ[SP\UCCPB[Z^U:8FVTVH
@lOUB_LodifiijdLonleHlkeejH>?UQ@XVHS_Q^^SWDW^UQ@PZP\WY]WADT]AAZJA\UVZGSAWQ]:38<WYA[UAQY]WAP^__VV]^@STPJ]UGU92ETM^E@SHEPX]]RFSQBRIYWV\ijB\E]WPRDPEXMjA[[UVi?>5:EQF\LA
U]DGWZVLWAZ_SPLEOQF^DJ:3TXP[\[^ZKbh<<>=W_F@R@ULX\GSB^B@?;^_GCR@CD_JVY\DV@KD\G\A>?FUDQ\ZYQSlXRMYYTCRAW@DA[GVBXC_A5<^_AQF]K{[]V=9R\[FQ[@S43\UEP>?\^QTY]\ZKPBGT\SDVF<=4>YVUX[]ZPC
^]CFP^PLUGW_ZVLAX[STV^ZQC==4?P\XRYoh=3QYF__UYVXZVQX_YT_X\_PF<=V\ZR_QC@]\PI4>E]DXJUTZUZV[_V43I=38;FPFDBZPZ[XT;;awopvEaTEcopFEavcu4029473833582135285569903209407956599656357984509516376452104963598612712726352179434524805433303082aiOpvEoeaaeavocpl&auocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\crypto.pyu<module utils.crypto>.utils.decrypt#a__doc__a__file__a__spec__aoriginahas_locationa__cached__awindlllawintypesabyrefacdllaStructureaPOINTERac_charac_buffervWAZZWAHG]DP\E^CDEX_W[ZF_]E@CUFZ@EWTSVTT`LJBWLBCSgy{vdq`PgWXXJTjWDRQPC5:8<S[WFA}tfrnqyxqfEEMTGLCP=3hP^T]R@nn;=[TuRLY@XXBJGSAtc}dw9:ES|QAWe}}wawaPjT[UG5=l<:48UTUqREuWGPQ\ZThWLC4>USwYLVXXBUZ]Zo[GBPZpQMY:=GWuYDT
TY]VfZGGCWsR@T<=S@WWUKPhTBWWSAZQtTBV4=SVTT\@N[E@ZT[UCNPMVRWDHVtXLRVWuUCT5:A\\PUYXTA[R_{WTRUwGTTIPuPGV:;KVD@DY[BTT\F@YO;;>2\RRtCOFGbXBJ_@WUGwY@Q]]TELEEQSjSADPES[FFVEKS9?QLWSTCoP\TiUDWPVCV^VDNHMRVm[MDWK]VVRZ[EHFBVSiPADQA>2QBQSPCkR[EJ_EO
VmVLSTVCPYGFZAN_\_T_DK]AH;=SU\Rj_Yvsmuoptwt_]VQVTCOFGRRmZI@WEVE_^VEh\[9=WZ_UiP\@KZBJsr`tnutxq]P_UWFC^CNSCUW\AoPXCJVGK4>T]\ZgXALrrcwmz|{p>29:^SF]YQ]TVDIGBzGKCEf[GA[ATTLsRMPSHB\TS_XThX_w\^PZ@EWTV\]ZgS_GJWGMxY]Rv_ZW@QNEPSV[ZSg_@B88EV@@CYpVMuTEP[^^SlXCCawopvEaTEcopFEavcu1357345178739151109211376711631930567897229402886138874871663762804263384098377551475180560765249523aiOpvEoeaaeavocplauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\decrypt.pyu<module utils.decrypt>.utils.discord (a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosarelarequestsajsonabase64uutils.decryptTaCryptUnprotectDataaCryptUnprotectDatauCrypto.CipherTaAESaAESuutils.coreacorev_\A[EC[A=;_T@\FM@U93XZAYJ@A\HFSJGC4?]\E^BCR@Z]52\\HZBAPXAW92U@^]GB_[CRQZFODM_TF\BG{DLHEdVFC^@RTFpSDP;3VA[TqBMIEXuQDPVKZ[I\BMutf<:^\H\GGMAXTFV[@\SGWWAW<:>8UZVCFpPGU[KPwZU\E]@;?RTWhh[Z[DniCVX_^UTTRQG[APTZXXG_KXQYXLAZZTU_PCPP^^]]SKT]R[Z@]YZ\@V_SWQEULWGSQY9=CVX_\QY\
XYY]>3GTYWBB]A[RU]SNZSTWOHPQ@QCY^[XWC_GK4>CVX^@KTCQR^S?>JP^VWXCCY]PMAY49DTTUQY\RTK
VS]UWG>>ER\SVPXZ]WSERZXT_[_B<2AU]PU^UPY
\\VXZ5>Y_DYZ_UY[UEXZZW[A][L|^^V;<JS_VDPY[]FY^ZR:8QUFW
93JV\_DYZ_U{\V]<2]UZZ]Q[R[]YPGWYG}[VS5;BSUVVPZ
[XXD]DTRZ\e]mi_<2P\FQ48ER\SVP[xVXV>>BTXQF[YU_G[RP\=>@\UUXEQMTF_ELCFVUVT\GQV@VUCDP]\RDWBVBF]]WCYEPJG\S=;;3TVRRWDkTPDESJ_]J[RE\CQM]8;^T@L]GnSPIjDSMZVY@WAQGZijxVWWXgBXBV>>FXL^^DRYYSCESKoXQ@jBQ@QDVWZ\RP]WAESRF^8;Q^@TQW;=U[UXZlCGULS[KY_XXVVGS;3XSC@\ChZSA[X@S[UPR_ST_ZPYTjBLTDPoVAmWAMHGlkWXUEIEBQ]k]Q@k;9[TKETJiZTM
YSCESKoXQ@n
i4;YY@M\AiRVIrGH@CdVCG\L]VE|TDT_XAFQAkSVK=9BPBAKZYXGB\Dl[VM5<82UT^VT@hR\W@IAB\Tl@V^W^[PDTFY@P49UZSBjAQCYQYKPAYAXnnx\WY_bD\@WQRliZQOQZP[hj;9_S_^L^BGVF\UI_JD@UZUCkIPCY92KP@DG_ll5989^\\PG]GXQ@FUYAZYPCjFUM\93V^PFAFA]UnJSVTL
FT`A
G
c^mQabokk59KVCLY@kj<2>?WWGS]^\[ZRQ_WB
>8]PW[BUY_QS[\BFQBY[]SYKU]UPUZ]B@XBPU]Q
4?[Z_L\^@Q?3?8P]XBR^A[FQWZVQ@oCUL^WQZTEU_UVTZZ^E@_QJAVK@ZWWZFTETYW52_]@^ULPZY]DSV\XPXXZ\ZUKOCDVPgDP_TIR^ZCR\@
<<CSKATGXCF\]TXUEVY:;52BPGGUFXQ@FTZQBQBZ[_\MEKQELZG92C]BDCZEWGG\E;3=9P\STQZHGEiL[SVWVXZAIIAQUjE_\TV@UYFE]G[PM?8G]ZU]Akh;>_[DS]SAMHBP\nEW]T_^YQ\SCOIDVPfA][QWB
<<MAI8>A^SP^[SAQQTVQYRRPXWKMF@\PiMYXU]KFYQER`F@eSjS`hd?:Z@MZ_T[j

n89BUJXWRV
FY]R^ni;>[XAPSCvwg^TA]RGMP@[Q@psku|}|lqz~\B8;QUVFKIFWPl@WXW_U_GXPD]QUF@DBFRI_[YR5;USZBJDMPVo@VZR_\VZKJFMVTfA[ZP_k
h\]V^\P98FY]R^FUIDSZ]R\UAIC@]RjL^Z]X<>\HPQIA=>UV]DP[AT8;>?C]AEGZM]YQ]G59?;TVTQRDjTU]SSG^EVX
>>SP\QTB
iO?:^UTTGLR__49WTRR<2OI99XV]PFUK@X\D>>WXVP<<DK93WR[\
\HETCFDYWjVN][EK8>T]QT=?KO;3_PUSUGSZE_B\Bl?:UUXT4?MC>?ZSTWZFUYE]FSDh93V_U_<>OM4:YP[]\RDUJo]PBTY^@RC89TUSU?<KO;>VWX]TPF[NmGG@AYKDVF?:UUXT9;LN>2WS_QPCQEWDO8<P_QT<;II98\QY\
ZFQ_UPRXZV8>UTYR?3II<:WU[QTR\RZ[S<;T\PQ
?:LO59ZPXT
RVGQNPn\PFPX]IW@92VYWS

=9El<2;;TXSWZ@[WnVXXVDk5>QW]TUJjFTF
>?>2S_GPXVUQ]VPPTTWE::]P_]DRTWRSPPPRiT\PQm4?[XWQ\@oKPGRVU_VFlJ]FRTPU\iZRY]o<:::FS@LFX}_]Q\^SYRVTGhEWG
QUFWVXUPTEgF]@43><49T\SVPEoYXLAZRKZ_=?[R^K\\jC@S[^EXi@@DSd
>>CT@BE\~XBK_93\]^WRGW]bCD\^YLXkELAUl
8;@QGAJ]~ZFDY=?SXJQ4<CTLCC_y]ZW<<4:>>]PTS\EhS_TXQ]^JBVXUW<?ZZY_QVRB?3@JJ<:F\GFSHCVCGGQPLPBEAG
WS^PD@W]JV]BPRX\YDQOCJVBJt\PR^]TZ[THTHUP^AAVG@WVGYURVSDD
NuL@^[K]LXBZ_]AWZTVK^DX\=;;3_^ETQXTZW^_WB\F<?QSW]^U[\ShLJBTnWZ]X[MTPZ_Y]Sc\VGPT_Ui
:8UXZT]VTJ[Z\U\ZVFPGV\QAn[TBQ?3SZDU;>ZX]T__VG
V[\]_WW@DXHGPZ92SAPUIA<?HYFB5?=?@QGAJ]~\\SYSVPXZ]WSESYKTZ_]]]YPA98=;R\VS\AmQWZ^B_BKL\R\]E=3PST^M]A@je8:T]F@WXW_Z\BX[PXG9<Q]TZ\VVB:=GF@?:Q_U_YWRGWREgQ\_TQ[VKDZ_WW?>WNUR@A93[Y[LX_MS<;9=DAM88KVEKPEDPBDD_VAPAEHF
VPAQ[APP]\RB_ACG\FEyYSXVU\SGKJwDE\XE[NSDXYWMZYUZD[EWZ43^W]ZGXTKFQRQ[\AQK?;WZU\E]@KTHATVRu]DT]FVqRUVE]@GWCoDDTDVUUVdKVCbPXFRB^\Q]TGWJlBPGi[VnTWEo][BDXGSGS\@i[WWWVGDPKTX]X^YUGCSJkQTT[\dCSKoCQV]SnA[ZP_C]@nYNTEYGhKWAoVQ\lmiR^SAik9<VL[SEL<2Z_]@P[GU93<=JVMLAXRSZZA_AB==<2>?W]^VJTRjP[JQ]FW?;WG@QW@XVG\XEYA[VmYAA\WEPj:8ZVSRX_GTYG_J[VhU\UX_QIEPPAPj<2\\B[ZBQkBXFZc>8TFD]UBUjoTZG[YG\5<QAF]QGUheU^BUWF\PXWRO=3YCEWYLTihVPAQ[APHGP=9m8<93@YRS]Cmh5;<2QX@BQE^Y]]\AS[KUhAWL\>3]W__CW@CYL]]MYF@ABS@[>8WYZM]XLS>:]XRCMGCWPmD^]\^@UU@fTYRDADLV]fGYRV^EUE]==\YFDPFY\KS]Gm\Q@FSD\ULDX@^4>BZST_K@X\WZA]UPMIAmD[RTYSVWJJIMVRfG_RPZB]VBLVGX]A<2?3VJ\EBUAAiFVD]o;>UHFQYEPhkxBQ@QeVVGCXGWlhvARCWgLR[UVje_ZTXfE_EP_VioT]CTTQRih?8RBFRVDTjhvDSKWc\RLATJTmdyATFVulcEW[\Vhey]SUUdEYJU_Vee_SOV\]Whm==]WVQYnhvDQPaBZDWUNwD[NGSFehcJSAwULWid}^[W]gCX@UUUmjUUEQUQPlh:;ZVPQUmlp^WTYVddvYJZ]PaAanhfG]AuQGSjj{_VWXgB[KUQ\jo\VB]ZQZmm<;ZVSRXhebGDBV]SoejCCM]YRihdFTBuYGTodtZRYYf@]KSUQohTVDT\WPjj8<UYPQ_dmkBPChka@SBmjlCVFqSDUem{^UYX`MVAW^VleYQGP]TUmd>2^VQSXnmsV\BtE_BEQKhjaJQDrRDRhdzZ[P]eE^FVPWhn\T@\\WVei93UVPWUhmzCR^EM^iomKPCqQAUne~]WRX`F^BRUSjk\P@QUPThe4<]^[W]nhy_\SMQohlFWB}PCPjdxWPXUeM\BXRQmi]UATTWWod<2X\WY_njbXBV^heaEQKrXBRloxWUTTbLYCPSRknXWFTZ]Roh?:T\ZX_eiu\\V_kmm@PA|TEYily[QX^gG[JRUTlo^S@R\QThe93TYVY]mhuESBWc^PMGRF\inrFXGRtJ[O@\Kojl@UKpPAPlkhazuqtpdi|ZWSUa@\FYTWml_W@S[TWjh;>XWUTTmm}E^V]G]mjlCVFqSDUemadwrq|oju\SXYbA^BVV]oi_]NP]\Wli48\\QWZhemWZ]QNejjQ]P]NwJ^FKSCmhbDWFtPBXloig}v}utmjt[[RU`BVAQ^PhmYTFR]\Qio8;^[PUTonCuXJxSPPUjhlFWWjoe@QJqYEPdjafxq{xwmju_PUUaD[KPPTjdX]E\UWTeo8>Y\[YYihPQ@[@[^GnmuWUSjkeFSFpW@Xhjfau}tsdm}WUP]dC]FSWTje\VB\YVRhe<<U\SXYlkvW\R_]dirPG_XQnegAQA|RFPlofdxv|zqhjxVWWU`D\FYQPdm]]@T]PUkn=;\[ZP[dooPEWUWYeiaBPCsPLRiohg~~||pne~]WRX`F^BRUSjk\P@QUPThe;3i5<82SC[@DWFAoADVVZX\od<=^\KQDVDC\GX[RE^O@PAKgEPL]
8>C@^VZ^SE
U[KQS\@iID\VZX]EZC^OETCU@[ECTDCCXPAheje59S[CABXWQ_PQVAJZV\XWJ?>RGYCJQDGfDDVPZ\VYFE]_UFC^R^[Wo@PBQn4??:RZ]UVlK\TSA
n9;AdBeNIninCiCOmhnAjKI;>F[SYmcjFiLI<<FjkFeO
DemeDdNLikkFnN
H98n92>8PYEEW@Q_ZVDVA@UAGgFGWWXTS<>PVZVA_GAVE^Q@ZJM@IRDQ<?[Z^A]\LW?>>>P^\PEYGX_JBWYAHWAP<2T_C_Y_Q\\RP]RB5>WZCET_\][YTY[oGQU\J99]PW[BUY_QS[\BFQBY[]SYKU]UPUZ]B@XBPU]Q
4?QV\F]]A]>8<:ZY]DVZL^A]XAUC_VXZ\QWV]T]WV
CLRSKA_KF\V^XC]J]TU=?PXB[UMW^PZKSVZZ\WYTC]QWXYFQ\D4:M\[\[GTA@R_\XRL[]5?>>D\YSXDXPGB]]UMUB\YSSLKEW]T_G?>?:AQM@@^^TCnW[WWFWM@M\[\[GawopvEaTEcopFEavcu6114772420169034952049171684839936930954151071835388518505429224348321032667056494649469630348658118aiOpvEoeaaeavocplauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\discord.pyu<module utils.discord>.utils.files"#a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosareluutils.saveasaveuutils.statTastatastataconfigv' ^TF\DGWF98QZAZFFD\99[XGWKCDAYUEJYF]RCCWEU9=_CZ[L@\^@BFYAYXB_GDFLWM53_ZCXEEQ\VPYT>2;99?VTPDJ`_^ATPr[TR8>PVThgPYPEjoERU^VR]Q^Q]Y_^YRQKWKYBFHTFXCAUWYHWMP:9CV_^]UXPWW^S>;GW^PYR[[QWUS\C
[VPVVWTWUF=<G\XSVHXALESD]
UN\KBIYM^:9CV_^@@PTTAVM^BLPU^HVE]98?<4>WWS_KV[nFYTF[\59__WVU[JP\EYC]Vn\ZQQYQFE\WMYk:9SCHRQGR[F]_APD\XhYEDVYCPi?8;3DQTGUTFl42`YYGUTs_X\uA_FFWE[QwWX]EZXPV[djwA\OB\D\Tdmh;9ZVWR^kevG_NBXIQQdd@QBUWQ@<?l88k_THUSqZ[RZVSSAR^BPZ\EPHEPSLVnjYZ\PTJXQMmil42XAERUMUmnX[^PQBTVBidZXMWU_VEhPWQ\MXD@RE\Z5;VAEPSFWikT^WTVBXPCed\YM]S\UDl]GVfRGSP\ZA[R\BZ\\?:VGAPSGYdjY\[]REXPGjo]Y@ZQPRCjD@]PPXVA]KVY8:n=<gPYE^VvX^]c^K@P{\KJSYTREBYF@WRLWdmzPUAY@^^Ahnk\HEQTYKwWF\LVGemy_ZW[kDWJRWQljl4;TB@QSDTjeuPUE\DXW@nok]ICVP\Fq]B\MYCjo}WVU^dEZFSUSeh??d42`YYGUTs_X\w_U\WVA}PCEPVQ\JJVGAPSGYdjvXPX]_CejYPPTgFWEPRQnnh??Y@H\RDUhk|]P[QW@in_RSTaDZ@QRUji;3i5<fQ\GUSu__Tg[_YPYtQ@APY_\EJXFG]YDYlj`YSYX]ijn?9WEHRXLXkmg[TVW\ootYPUYkEXKWTSom98TGH]VMPkekY_VR\hleVCG^V_e@VFTUVlm88XFGWVCPjl`Z_XRXiiK@[ej>;XDCVTCYilj_PWY\ddWQ@QTRCQDem93S@ETWAYjk`^P_U^odU_]UQQ^FZV4<e8>dQTGUTsYUSqsi}S@CQY^TGETBCTPFYnl|sgidjkj98YAG]WGWhnqt`ihho8=k5:c]ZI]Pp]UQuY]Wb\^\TeLKw]UPXVADVRLWjor\Y]k^UZRjoo?2VHISXETedvQTVj]\ZRlhE\RPX@JQGDVBB@X^?:d>=`ZUF_Qs\TTyCS]gh{qWY_PWFeb{VIAQQMWdd|@Q^`c~tV_[SWMhij?2XHIRVGVody@V]nf}vZV_RZBojCCWS]^]D98e4;kQ^@XUpZ\Qb]WPVCbKKtV]\\WEHRXLXkmGZR\YGooo8?SHGUT@SonF_Y]XNmi|VUVUcLYGU;9R@AVYASilE]YRVOej{\TV]aGWDQTVdj8?SHGUT@SonF_Y]XNmic\EDPW^kG_FQQVlh<?l88k_THUSqZ[Rf\LW\p\U[RZQPJ`O@p\X]\TDBVWMUdepqxf||dkec>:XDEVRDPliux|czpjjeOZNhUCG]\Z=9l;9dXXD^WpPXV{MWVKrYY\XCR]QC[DT[@]K[[iEBWJE@_S[\Pkde[FYVCW^Z]XDooKSG@\[_BkeQR[Vmdc:;VDT[FPDXWcMKVBDBYUYXRl93liZ@VWK[U_R]CkmGWGL_^T@djTUXPKmkXUPYF_LFF@C98e4;kQ^@XUpZ\QwPW@QQGq_YT\LuQXUEXHIRVGVodVVRL^VFiib;9SBF]UGSkeSUXB_\JldYPS[EXGC]J^[4>o?:j_ZC[Rw]^Vu@@]XG]TY{]^\XGrU_]DSBF]UGSkeXYWSTKYVLdoUGCS]D]VUo4>QE@RTLWkoZXZWPJWVGodS@GP[LXVUjo[ZRJZG]^CnTWQ]CW@@_DWW<?e9:e]TDYWuY]Wf|TG^VXSG~WZVDSCHRQGRiiE[XC]U[TJih_[[miy[\SZFRTAkd^VTTilb5:PEFPX@TndF\TG^VXSGdjT[Ujk~^YTW@R^BloTY[VhiATPBWU[SAnHG[TQ[TFXAYW>8m;=e>:9:QVCE]TDYWY_K\_@YWC=<ZQ^GCYBXV@_@@FKXZIZVVIQF@BYCY?8\VE^TH\]^Q]^P\\PRKgLArT\[V=?B@SGWTWlKO@kTQUXYEZ[C]]ZSUR8>PWCP[GU]UYZ^R_ZWUFy\GFW]WT@K=?B@SGWTWlUS@GP[_TEEZ[C]]ZSUR8>PWCP[GU]UYZ^R_ZWUFsXYPA
<8ECRCPPVl_W]V@EZYEY]YX[V>;5?@SCRXEKPLoJWA\CQUC\QEGUU[IPA^G\_C\TUT[^S]\QUDEPUIZRYV\Q>2;:>9\SURGYShKYQZ\IV[]S^TFBDVRZ^PP<?KWRTWKoW_YXYQDmi4>W]JQ_ZYYP_[UVWR_R@
:;QPGZZ]XA_][Z[YQR][AF4>DX[T_@gP_[[_VCVIAPXPWZ]XYT5??:YPTSWKYU_XOnW]\S_U@5;F@SLPQPmUWTQ@eW[[VIuIJ_^Q_U@DFP;>4>88WUW_GSRjADPQ[42ZVXZmCYBXm>>pdiD@WPCTYT_UQ@OemFD\WZed59rjhIFZUAQ\^\^UFnlFDSTUje4<l98>2KWEQFld;9;9TWEEUFZPZ_T^VfGXE]
4<]V\CGXE]QA]FF@ASL]
88U^[TGYC_QEGP\GAVM^;9<2R\@QQURX[__[\K
52FSEUnBYAZ@TD^_QUS:9:=XQ@EU_]\QXYQ?<KRFQCR@DRWUEUOQjBRDY5??:UX]Q^VkBRL^HWG\TVXU_Tmd985=Q_VB@XB_]HQKGCSY]V]PfATB\88EXN\ERGGTZV[Y^UZ_iCUA]<=4<QS^]YFUDWE4=KDYLQPTiTQYRJe@\UX=;FQ@PWKJXOh@VATARNSCqRYPFeGSR\985=<?PWT^FRPjC]UR^CT]
42QD@RRDUZE\ZC[A__iTB@QSDTk82BR_RPCU_lHWD[RDEQYEVomlPXW_EPXvWER@\BikL]VMPil;=42YRX\DXJEW@QPJZCEAAW\PUBT]iEYBQ;=DUGFJX>>8?ER@VBie:;PPXVA
VD]\CMR^KD]TVWFQ[l@UCQ8<93V^@S[\PY[P\TSJ4<KWFVlHWG\ERUSTDR\gEUFPR[^S4>XSVEIYDPZCPYDCUA\nEW@Q?9_SZ\VP^_R
>9V[\L^_@Q?8;3JWA\KYHCUZT@QBRfATB\ol5?PTE\4<Z^U]YPTY]ED_GYG^G^WXRZ^P

4<BT@QJTBCU_VFSFPm@TD^5<42YU^__QFLPEMED_GYGWLCX[SA[AS^T\JETBME@PLXXUMoRRDUZD_]YWCESJAAG\FXCF]DMY^:=BVOS@RAHPZVDPCQmBWM\??:2FDXBX\TgUVCGUXTUFePZQ^FT_<8FSFPWGJW@gJWAVDPBW@~VKEVZRPJBbV]]RFSU8>?8;3PVTPJXUfEZH
42QD@RRDUZE\ZC[A__iTB@QSDTk82BXKhGP@ZQCC\WGUkeB\Nom8>?2AS@\Gle4=4;^_^WL_GFRD\\I\E@JA]KoASL]
88J\BBAY:;98UZTS@WBU_@BWXJ@]@hAT@Z;399_XKSYUSPV^Q_UG
;9JUCWl@PFPA]Hj@WAP__[V:=<>_US\TT\XWEDXL]C^MYKU[YR\Y]BBYM^YVQ_DV][\PXPJC\F[\W?:DVGQAYF@V]\@UCPgAVM^;9<2DET@SR]k^WFD]WP\CmYO=2CWEUVKCTOkJUCWCPD]FUFCS[_SKKcXI>2;:>9\SURGYShI_WQZ_?2SBF]UGS
VDT[FPDXWcYHCTUDWm9=YX][mCQEZQEBTTDWdeGFEG]Qno;:>9\S_XM\EAYA\]OXF@A[X]]mEVLQ<?JVDABX>:9=]_ZA@PFPWH\ADF[TQXfHXB_UQPWC^G@N^X<=GFYCTPVm[\G@W[P]Ka\T^_Y=2GVOTWFKULm@QGWn_Q\\oEQB]XUT\BYEGKUZn~QFF]_P\D@e]V_^_?8;399VPQ^EXSj@KYCVV>:\[TX]VGW]FX@W[iY]ST\WEHRXLXj>=^Y_^lCYB[T^TXZdid@WC^[bb|je>88=XSWYCWCHRD\SKYGCJXW]WkESGX5?G]BLJW;=>=UQZU@\GYQBC]_A^PQ[kBYCY98@SCRK
jh=3;=^\BV__U^WS_X\G?9AQCUiEYBQZR^YnDSGPUQZVmk;9;9\R]EDRF]QJSPCCX@RfHQLP
9:\TTJ]Y[V\\S5<UQZVGjP@T\E]QF@VQEFUDWiIUGZ:24=P\BQP]PiQAQ[]W[TPAoPJU=<QP[FHPCQVNZBLFAYATjDSF^T\[]fRATkeMC]JS[^PZW<?KX@R@VADW]\CRE]iCUA]___SlT@PmiAAWDW\\S^_4;8:KDYLQPTiE@ZaGY@VZcb}?2AQCUTJDXAfEVERBUDVKehxhCXMY]`c985=<?PWT^FRPjUYMCUT;=YC@PQBRVBSZO]G]]kSHEVQASh=<UX_YlGVE\W@CWYBRmk{WGB_T[QFdk8>GRDPDbl8:4<Q^^[D\CGXE]QA]FF@\SQ[m@TFX
;?EREA@]5<=9R\Y]B\E]QF@VQEXU[\iIUGZ:24=_YE^YT]YZPZ\QD<?BSNPm@TFX
XY_WgIWC[R[_];:>9^_RQ\Z^^]P]@W\\S^_P_VPZR5:BT@QJTBCU_VFSFPm@TD^5<42DCP@R\RoTRUS@wYECUSXVE98GSDSUA@TNgJVOTCX@RJR]QCuXEAZQWQA=;?288TPTSYZPgQKY[TRA98WVK]G[Ej^X[\EBLGQWYW\SVSJ_G]EQQURJB\F[X[UolGSDUUVW=;@G[X@>9QZ[DZ\XGElWQYQBAFQYWRZUSWZBTT[DJP^U]CAUD\WPUehCWHYSSP=?CC_QB<=4<^\XWKhUPGYFYIZDU^JEQYKXJ@YL[^__]9=]@T\N\@_[i`csghdv~pzrjvVK]D\C8?PZZVBgQ[QMZT[@A[@Y^KMSPC_JGXLXR\YZ;9VGW]FX@W[i`aug`dz~u}ks^WG^]XD@9?82TDRSZPPm^^]PGbi>88=WZBP^U]QVV]\S@oPRJZAYD9?VZ@AUEA_W]SDXCXAkTZTSC>2AT_JRV[_B_UQFPDL:3<?YPBQTPAU\FPUW[TP
88S@RZTUWl^__QFYAG\XW\BEUFP[Z]\;3\CUXEYFXWjcg|fe`|vx~}otPC]AWFP^_R98>2^YAS\TTPXPZ]]FkVWTDXQ\FE99S_KC\KDQ]P_UF]QYMBjP]UQ?9DP_KSPXZA]^VBU@G;99?]TETYSFUQAWR_^UT
4<VGWV[QQmUY]WKS@EW^QYFFXLQ]\^Y98^KQ\N^CZZicjqabgx~p{|hs\K[LWCPZ\Q<?;>@QGWT@BTKoFQ@PZPKMSZTCR@\U]UJ@QAUWW]Uh___S@~^]PGu@W[VV@<?awopvEaTEcopFEavcu7963631854287154226943257897915096798088304063047915649452301285205205065869896737714238603386345581aiOpvEoeaaeavocpl' auocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\files.pyu<module utils.files>.utils.gamesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aosajsonluP_A]GMXJ5:_]H]BBYKYY;;;3VR_RUDiZ[WQW@TQEiRVQVG_FE
??Z]WRPDR_@Gok?8PHISSDVXJUWF\FV\jTIFSXLQm58U_YSRDXTCfATDX
XDDVTCPen__]RT@TUBio[ULYP^VKkURRZAXFA]E__4=GGN4:\_XJ@WDPUNY@LE[XX\QEXWAo@WCZ98^^YWVAWSG]@Y]X[PUFYBWW[Y_]ZESVCnCTCQBW_QZ]_Y^CD^]DEYCE^^_ZBUKQUV;988S\EXTPZWYX_PWDSTMlQR[VB\DDn:3QUSWG^B[^XTUKSQMjQSUXGW@GhlPUPh?3CAO4>^\Y\ZBXVAGSABPWRB5:WUYW
WPV]L\Ei^^YWVAWSGgFVQZZVio_TYSo:<CD\JYRQUS\MXCm[P\RZCTVDfE]_]XWjjZQd?;I<?VMT\ID=?[YYBXXLW:3SOQ\D@8=BW@D:889F\CFD]Y]_TVFWTFJawopvEaTEcopFEavcu9212596798060820603867616927915006729442571635292126377253653749736394411546229760189720713579909054aiOpvEoeaaeavocplauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\games.pyu<module utils.games>.utils.gecko~,a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosasqlite3lupyasn1.codec.derTadecoderadecoderahashlibTasha1apbkdf2_hmacasha1apbkdf2_hmacuCrypto.CipherTaAESaDES3aAESaDES3abase64ashutilareabinasciiv1P_E]K@ZG83\[AYJAGA^QMR5:UD\X@LSBWT[PTWWUCZ\F_KLQQR\QV@88^G[Z[XE_UXW[ZC[JGK\Q@Z\]Wi\[XQ88_F\XvKLFEYv^DXWJ^_H_ABtscu|b:>]\D\ADZRBS
5=\YA\GGFCT\@R>3_ZI^GBD[ALZT5>YUG\BLKT><][I]GFVZ[UFZ\_<<5?tqmq}RjKSlMeIhLoKdKlAiLiKn@kJjOiNoLd@dO:3<9;>R\Tv\WALDAfrtegvuwY]@
ZIGS@]FUSNCQGZE
ZJESC:?P[EZ]G
w|e_PA\VM|}gz|t}hzsp_O88PTMT[\G\U@]RQJICBXEW?;FQEAA]UYGP;:42:?PTU`ztQUCS;=A_RKPU>:@^ULBQSMQQUAX;;FUFMKYKXR[PNT\UTJE9><>>9TT^uSSKAGAut`jppvSPM
Q@BRJ[APZJL]G^E
U@EVE48P\D]\Gypd^WO\WAwvf}zvtfrutXB>:RQMYRZE[WG\PWEKCMZJV;8A]LABVWQLVYVN48884>WPR^PBn]]LGUDZ[VA]oCWG]FFC:=XVInHRE^9;ESLAQE\EZPOieHEh\U=2P[DT\^\k]TYP\XYK[]CF\PEZQ@SlEWD]4;YWAT]XLT]ARAGWG\R^^VfXVTT?=SR@nCW@^]JCT@]_YXXWVGUmHXCZU__Pi^T_T<=:>AUEMA_[\AhEUE[89??V]SSWPVRRf]ZQ[YlPYGYFQOhWQLV><T\JlQUAXR]VXPU@]RQWTVQTEU[SQW^PVBPOlUWDX8>YPKg\PXXDnQWFVheheQKxPD]CJ;>[OU[JiUWLTlmidleRE|VBUAA<=WZCXTJQWKjPPGThhi
hVA|ZBRMB?=J]@EJY[]NfXW_OQPD[PF838<<<\PQTW[KNBLo_YT\XoQSEX\RMVJGUBR_@Q]ESJAVAQCPJMSD8<\RLY
sVSJNIElpsjmvpzXPMV_A^]GYD4=FRQRY[USV@Ujn=;Y_ST@PV\G[FEUSVZWQM^jTKCVGVILR\B\RKZ]BM^PITRU_VR
9:RRAWUXEVlXZG@P\WXXWe:?JP@B@]RVMP8<]_K]=2DQBL@[>?9?4?RTPRR@oY]@hTJ_^iWW[PKnIPC_<>SVH
vX[Q<9F]XDhBRM^^SKhCUL[gC^@:3EQGA[UPZDL^SHiHTC\L\ZBg@RB[;:88SV@B\XLVSVVYPWEAV_EmHT@_>3VC@D\F\V[BACWE><A@@>?VBFC]JRJ]SFBVcp~tze^@Q\ZDTUpbvuXQERQRFTo}qewPRFSD@CWA\5=FYNZAAF[GSSEUPZYQ53Q\ZPPUnDVX@A_Fcl;:CSFAOZFSmPQSTR@XDon52]TPYPS]]QPZPPKRTUWQR@SKJ@]JTlU[PU[?;P[URST\[ELDEl^VKV]V[SWWPU^WW^h@UTG5>XUV_WSFQP]TWf]SI[]RW[
ZCW@FA_GVZYRT_hIoH
;:[@FD]ASO\R@BWg}}{`YYpfyt[AJdA\BTMP;2D\B
QDKBXERT@P[__];:YKY@bh;8QFYNio4>]VYY^WRr|vk}u>9VPQWQQSRRZ^QS@WQ[\\]Q=2XXFBTDg^RM]RQJICBl^SIVTZ^SRPS_\RPTlBW\M:?ZXBAS@hXQAVILR@^EV\[SLTSFF\Fl^QL8<ZS\P\TPDCQFn_VJ5=^SKURKLQBg\VIc
n;>WAWVE@4?BYJD?2=9S@@BVCTX[BQ=;T[TY[BV??XAKSZVGPFR^DgCYL\5=>:AS@CK\Y\M>?9?4?RTPQRWBKHMhY]IFRLZ_TVV[XVU]k@R\E\WCM]Ej_TJQ8>W[^^G_F_^KLFHVJ\WV]jkodio99\PWTRXFYFPT
;:ZTALGGSJUYV]jkinoncikj
=8GWELCYz[_Q>9QQGEACSL^WTPlnbjbhmjheheoe

5?APBEG\w^YR9>XPJLEDPJY\SQihoohkllno

4?@]DFD]x_[W<3<=TVGCOoJY[AERKY]YQoohkllnoliceUCwTGULD><AZA[]FQ[C@SAUXS\kkhkkojllioi>:\PMn_P]Q[@BR@ZXXUnolicecmcnk
j<9;>\RRPOnZ][

?2ER@ACZ}__]>;;:[SFZ]QkGS@JAXKUd{u_T[RY[lCY[MYWJFP@f_VL83[WA
HRXRUiXXSRD_USAGTE_JXX\TK[SFZ]QkGS@JAXKUR]@JJgKU\LBWBWU@]\Kj^\Z8>83ydPlKiNPGVMX^UWhlclmdchonRAzQLP@D4<:3PQH\UJc
GXH_YURbhiiTGzZASEE:>=8CYWY[mE\ICuQPAIALrteozzt_TJQ\BPPFcp`4;J]@EJY@TVP_lBQNM??PXF\;;KRFMB]}ZXUawopvEaTEcopFEavcu9252943545956168574028972803635605219177441433018316098754135325285472396791562734838840873087913646aiOpvEoeaaeavocpl1auocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\gecko.pyu<module utils.gecko>.utils.information|#a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosawinreglasubprocessashutiluutils.saveasaveuutils.coreacorev^[A_KD]@=3]XGY@GBQ_JQP89YYI^DGFCQHKVP]AG?:\_AXJFKYCA_]49ZTC^JMG@YUA@SCVVD@U@S9=^\IYDEGLY\@TYCUQFP_KQ8=;8WSSV]@hFJC@\\iZ_SYAUXMZW\[@YXKFWY\S<3XV_[@YQM[_]ATXJVQS@h_TXRSC5:BCI=?[]PZJ\Y@^Z]CU`cz|H_W@mSZ_\VVVF[\UZ@CK\UMZ@SUMEF[QMZWAQLeX<8X^__G_RDP[[DSxhNZ@Ie_>;[ZT_G_PCQ]WKW{|jgytqKQ]CG\T^TJkV9<X\TWB]RF^Y_CUlgpexs~sJWGP]F]K^Xh@EVJIK\^[XWhBGT[M^EFPM[JVAboIlW=9]XP[EZPM_Y_A
UxeBWPFlSVYXVXVBUX[xfWQMURAA_\V\KSFQX\FTTLGK]J[^KVDh\=3^VU[D[UC^^WE^vZ^Rz^SXD\]]
OZDUVBVOUJi]93PWUW@YSD\]_DWvfdH^VEgZ[_YQWVEXZRTHFQS@YPTSM_WBUMe^?9_[^^JYVAZ_ZJSthl@IR]PVQPBnZ\^TR_\EYYZ`rf}f^Yk`_PRXrVXBC]^TUBURB^X]POT[GRBHX^AHj]43XY^]KUPB\Y_JWkuBUUGmV\\ZVVWAY^TZY[AGF]BCJACS\^UAG_MUYG^K@_VY]UQZZAIE[\CPhK^]QUdEqwj_>9YWT_A_TGXXYKRsxj}IU]DoW[D]Drpo^9?QZQZA]UMXY]B_rHBX[STFXXVAQ_EAW]UVWJ_\@m]^JFQ_^PWnVGH_]UW@^X_K?8WOUT@M
88CWFK<29=VAS]ZEHXM[X[[^APA][YBSEWEQz_^VF_UDP]^@AKEAR_ZYRX\UEGTGG[GU][QY@^WAQ^VG89=>]TPVPBl\PJX?:L@@<<C]MA@ZJFBA]FE^[W]E]kBDP^SqdlCYEQUACZ\Lhi4;SK[\IG?>K]ECGXvz989:]WVUPGnTXU^UXRTZU;;CGSEBD@P^S]
G@UF@\UPKBgctadaixxu~>2A@SBAGA^VTVUAsZP^@EKLVBF_ZWC@fgpec~laesgxfnxu}e5:DTC
AFRIFZTSA@VPT[_hZFDDLEP\QKQ\_T`@EPDLSKLDF\XWV@MRCLLD[ZVV=9ERLFFXFRD]SU^VWEGTBPB_QZQj@EPC\UZTm[A@@YE:2?35;RPP^VGfEPTLQGUJAY\\jXTN@@D:=E@K=:CS_E\A[]DP_iARGJfUUDSvIEVKJP\Vm_WIBCJbl;?VAPTHM?>GV[MV:;@WLEB]AW]E\=??9=3PPQUVBjQ_K@VY_UPfPFC]\URLPV]?:YBITXUTBXV]lP]BLXX^QT89GFO9=JUWlYRO
G\\AU^zGS\xSLFQZEPT|rtol}zurtftr{z}|udwtmopdpjmtZPK\BW_@nhgP\T\EFomtBJAQXBbREBPYXmngVY^@FVZ]=?Q\C[L@\]BQ^gFTGOzV_Vx]K@URmZRAbl;?^VF]^]WH[[CVY_VUYAYC;<X@E^ZSX@\XXBQ_JQPv^ATzSJGSTgR\J]\TPJ:2?3YID^]SXFY\\jXTNC_XFRPvFS_yWABVUh]TITBC\PWTC_]]82U\ECTX@lVSYWVRLmOY]CPPIC_PPPLP[\k[\KqZBG[YJzW[Q<3XVT\AC\XMjYW_V
89UB@Y[RVL[VVn_[EEX__\WV]CI^QJm[R\RjX:=TJQ]@D?=@XGF:<?9JQC@A^XAF_XVWGQVWlQ\GFQY^TSawopvEaTEcopFEavcu7610905230945762365818475304916315638993824205217829816561933931894240920325317783466477196612280032aiOpvEoeaaeavocplauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\information.pyu<module utils.information>.utils.injection%a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosarequestslabinasciiuCrypto.CipherTaAESaAESuCrypto.Util.PaddingTapadapadaconfigvPZI^CEWC4;]]H_AE@SCFVJMK42\[@ZAES^_YFW_Z:;^B[XqJHDCYr_H_]AYY@VGEypg<>_G]\wGMH@\gE_XiW]]\[^^TA^CG@XU9:Q]C^GFQ\]_P_428<[PJ
\Q[@eGRPTUFz\fWAY^X@bB]VTVKZdVE528>UQ_W_RFLDLXRK@QAB8?RXA[]Bq}c_PEPJG\JR]LP]R_U^__CGQs}bzypti{u{4:9:][WCMIAWUWQD[R@SZWKOIMEX][HET@D\I@U]RZV_\TLL_
pubSTZW]lDXBU?8DQECJYQP^UCZ\XPPL]]_LRXD]QJZAVPXXJV\P_\I]XUA\_WBA@GTQ;8>9]\^Q[\UVGEC[8>JUGJTEBSGEEP]GVKZZ_^QRPDPHX_^PWL]\Y;>93\WSRZEX^]gSV_@UVD@SAPVWL\VATPP^TTMAR5:9?DXBQ_BQVT@
kd8;][ZT^ZGQ]A[CYZoZVZTYXIG]PEPe=3V\]QWDAVKT\EDQZC]XRYY;9:;T]JRXZPTD^V__XT\GB5?]S]@T]CRPX_ZY]\E<;E]BW]GPXTJTF@P]U]XRYYmdTW]PRD<<4:PHHFbh?;<>UX@F[@\XMPTYPYA^EVVDPPXC=9_QU]F
\B]^BLQ]DG^LUZA[SThm:2^WGW]UPX_S]TQ@
?;PWRH@YVUXYW?9YEDEVAHUZQBWEQYB]PZelWQTPin\^P@X]Gok;>4?]TBZGW@Jcm>;88_VJYEF\]QAGB8>[T_[C[BHVL[ULYJABYED4?U[ZM_WLP834=W]\]C]E_ZJM\PJW@E<:Q^JR\^WXZP]]SK
59]_UXGV[JPlSWB]@[IiZVGPP_WZTU<>QSC^G^@BPHEQXWPH@TQ]QjdSQ@Z_FTfQTKSA[AkZZ@Tmh5>;>_ZG]RJZE^CYWPUK[G^EA?9YS__E^KDWG_]H]FFAUQD]@^F
59WV[FX_AP9299MKL43W@V_VSAXGVI_^QVI[DA]^WZV[VVC@WNB]D\XVRPWE]V[mR^ZAQV@:8XIT_W]CRE[@V]XTZTSKPX\UE]R]MDYACB
NInVm@RXWCOHC]WnUVXVZZiJQWV@HA@_]MGCZIeeWHH:3QH[UCE?<CPCB:;5?PSUAO^kWWFLTFhR]BUWE\
9:^ZXUQK^GQVBZE]_mUIF]XATd>2Y^\BBWF[\AQJLFVZ_UUC5?B[FP[GSZPW[\VKK][W^PP[UWETDF[KE\RWVE\RK_9:BHAWC]TP:;[\WDQ^MLM@F\E^PRQYDZETT\[V]JMXV^^^CH@IAD=9NQMPY@P]V^[U]G@ZPE^Q_Q
]Y[\]YZWRHP@C^FF]TY]CSWJS43^DC\FSP\WM]WL;:awopvEaTEcopFEavcu9791113809140803152623399898560531017185463718045228147641687839040951885414952114548437216449699559aiOpvEoeaaeavocplauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\injection.pyu<module utils.injection>.utils.mail+#a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosuutils.statTastatlastatuutils.saveasaveuutils.browsersabrowsersu^UCZCB]K8?Q@_ZD@P[DJLXLP^C]GGE@UM4>P\AWEDDAQYBAUORS@EUC\=2[^FYCMMFYTFPJ^EB\BDRGTE_OGPJF:2>?US__GTUmD_L_P\EUZK\49WUW[LW@Jlm8;L@M:3H@\P_]\@ZGXEKT@BWRMlS\U\_gDGWS^TVFYJHTA_ZXP_VDVWNPJ]WhSECRW@UdePB^QTGZ\C\i@\Q_XPJldm[M\T]GU[JU4:^[GEEWU\]S[VEE]V^UTG:=PYAZ]SCW@CPCFRTLmS\TR]lGWGFN_JV@FCVUQ^UEVFP:3YPV^CWFKSSTVDZMD^VM\]>9SLW\I@<;AYAG4=48\_TW]WRZ\M\DK<3CYBPFVNVj\WP^gVY^W^CJUZTXFWLJg[G[WSDV]K]<;BLS@V]VlZSGF\^_WAeQFVVUJW^@\awopvEaTEcopFEavcu7835169285572079149773989829332536644994911870515851824979237645908236619382085728121907934967084585aiOpvEoeaaeavocplHauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\mail.pyu<module utils.mail>.utils.save> a__doc__a__file__a__spec__aoriginahas_locationa__cached__ajsonlaosashutiluutils.coreacorevPUG]EM\BVW8<[ZD]GCZK;:]\GZGLJ\DF\U42YZH^GGAG]]AT_EUVDQZER:9=84:[PKSBUG^
^EWXF^D^YiYVVR_VEI\VFViijfRYBikdTNSVWD\VW[\KYDRgXQ9;ATAUGQG_ZDR]F[K_WjZ]WRZRGEUWCSmnna\XCokfXNRRVKPURZWGVCPg_T82;39;VP_Q^^L:>\QXCGVLZRO^@DARXB]FS@[:?B_GF\UA^CG\]PVJQFPMQ;8:>ZK]_U^GZWJQASAQ5:ZQ\GBTCXUK^DLADVAV@SMX5<E_GBY[CZF@P\@RAPIYCZ4>;;43QSTW@PVCPgW\XnS\GFX@Y43WZ_SQAGGQCXDGT[AXD@SMXB]F99WY[V
:8U\EP^\KUXV\[Q\QXY\SBG;3QW]QVEW]YSUECh^j58VV]\P\[QTD_DAVFZJPC>=_WWZBXGEVC]SH]BCF^YUP83^AZ[SYAQW^Q:=>:?3T\WESBVPXEHFVF^[P^\TZUQVAJMUTXUPSC8<S^[PK
RXGPD\WD@FPO]oE]PQT[CMASA_S\GNHSA_:9_^JT]_S^[P^^SC
;;DTO]hBVM\VFBV@Z]X\VRUBRETL^\S\W_W\S]C>=D@SPX^RUEQ[^PGVC[TZ]QXIMFPMQ8=AGA4>TFVUEWjV\[oW^EATARhCQFQ4;A^EC_]Q]E@UZ[PDSA\kFPMQ;8SHWTGA5<ERDG>><88=TRVVEJSLhDVEUJQOTKYR_]QZ]RR@DCSQ]^Q\G:?QVFBO\_\GSCRD5<MFH83XTXC@RC_[FS^ECD\<2W^^WFPXG\EWTLFEXO\jDWVPFAREFQ:?UXFRX^PYYU^[]A:=[PDCSQ]^Q\G

?=KWOQnBTMQ
WBCV@[[]\YUQ@RGYF]ZRY\__UU]D@CQQZ]RR@D@TlA^\ZPoJDZXMZEGUF]DPHD^G;3RYEWV^ZTh\SX\UZ[P:8Q]DP5<CRARgBTC_]JIPL^^\_]WPERBWD_ZS[[_Z_WRGDDRbGZXZ\jFHZY@XFHWM\API@XH:>P\EP^^^RfZW\\S_^R8=DEA89SKTYBWkRZ_hQXDAWFRiAVFZ4?FPCD]]VZHORX^PKQA]nERC\9;\I[SB@;9BVJG;;]ZCQ:?@VBVkASA_
\DHSA_]\Y\=3PSF\ERG_UV[Y_[ZU\KABVTZ[SPJW^EP^_UQn\TT\CA]>=CEN=8UCRSFPfT__hQPJAVOQiAXM]?=FQLLY[RZCN@BTDQAUlGVLZ:=PIURBB
:<IXFE?=98TOVPHB9;DRGB??::::WRQATARhP_]RY\BU][X_VDXV_S
;;PS_R[[X]\PQE
98CRA@JX4><8CVNTjCV@[WVCR@RC_kkqB]NC\CKjn><BEK==\@XR\^@JU@TfITBZ98]NSQAC82HQDK<?>=ATAUh@RC_FFYQRSV^S_W[P[REOF83VVW\[RJkPXWXY8=V[CVZW]PQ[[ZW_\QTF:>S\X\QWFhQ^]Q^[Y]_ZSU@XZS==;;_XE\VAVOQiAXM]CR[[YT]_PMB_43WDE]GQQZX[^U@hQQ\T[:9=84:]T^AUESlUG^ADWDGWBDE]G]FV@MWQ[[UGZXGRAZ\DCZJOUXB[TYXPB[VW[ZYC^@>>CVFVhGYF]
QQA\@XEPjouG^ADWDCkj:8GAN42VF_\P[GDTNSoDPC]5<PAZ]@C<?GQDC>=:2GRCAN_KUgP[ZRZ
:8WX@EXF@DXG]^\IUEBNVGRA
98AVFFOYKPnT\WXTERDGD[CVUE^\WkY=84:[RZVYAWDAA_ERnQ[\TU
:8FSDGEZESj^_^U][YKQUPMfPUV\TGASFDGXBWhQQ\T[:=>:PMB]RZZ_hSXXV^
:8U\EXMC]QPXZPWWGC[T\[[F;:UDFZ_PT\h^X[R[S@C_QY_[ZG\[Se_;899XP^S^WDC]T\UYlU^[XT43V@LYV]][jSQXXXZVJU_TAl_QRPT@RBCWT\[[hUY\X\4;5<[^FEYEKiV^XP[>9Q]EB_BPM_\\[FCXGA=>Y[FMVJIh^X[R[D\DYCQB^TVnW4;5<ZQ]SY^YDB^EKmSP[R_
4>\[FCXGAiV]_VYZ[CW^\Lo_]PQVE]^CC_ANh^[[V[:9=8\YEZ_YRSjW_YSZ
?8UXG\XEYU[WUP[VXC\YXVQK=>U]BWUWQSgW\]VXQXGY\\VSP@^[SmV?>><_QZUYUXE\YVTWlQ\WY[4?QWA^X^VQj^_WU]ZWBRVPGh\VUUWGSXO\YXVSlV[WQU<2;8UZ^]ZSD[hPXYS^:?QVFSVV^[SE_\YWWY[YPE^F;3UW^^^VFXkW[[V\UW]^ZVEXPLYUUoY<<:8XQ^PWQ\X^TYEYh_]XPU8=WZW]TUCYj_PVQ[PXFVVWAhXRQWREU\_YTQKZgP[ZRZ>=8;SVDUhT[[XY5=P^KVW@S[[TTJRoRXYTY;3TYCQlQ]]U]
TQASZG\[Se_;899XP^S^UPEVmSP[R_
4>WSGShSQXQX
VWD\VWAfQ]QS]CWP@QhV^^R[:2??_B\^BY@WkCWG_BWCDA^EVAMMGO:3Q\VXS\VQ
DCSF@\M\@VKBB\EPlRX\T[::]ERY@QD\oIPL^RBA^P^^ZCBICB:?\WVYV^ZUBA^BGQB\PGAV_Q\[gW\]VX9;X@VYKSCRhGRDZ[W@P@GOAATYQ]QP[T@M^
ACPMPQVFVjQ^[YZ9;YIQ_FXO]oGYE]\XAAXBNGOC@WWSVUQXUCGQAB^BTZ[FMZAJhSPVV^4>ZFWYATARjHWD\\YNZ]]T]JDOLC<8W[TXSZ^ULE^
DE\ESVYGYZ^VVmSP[R_83VDS_JT@WhDSA_R[^\XTJ]JEJA@89R^PXSQ\R
BGVOD[@VQXZZ[V@]oQ__V^8389>=Q\^H^IkDTJLYB??EXAE^YUWRQnSGZQQFRBTERDR@YJ^@ZSFRGVGX4:A\FBZ[C[C@SUTPDWBTM]>=@RMAD_JT@WGUF]J]A8?5<4>UWSJYFRgBL@hUWYX\VST_FYCKYVZV4:AUESlGTE^RVETGSF]kijADsST]Xme8<AEN5<VG_^]PJDYGPlGUG\??VOT]BA
:=FSG@;9:?EQASnGSF]YTT]hj43@@L
:?WEYZV\KKQA]nERC\9;RHPRGL8=AYEA99;9XBS^EPAWmEXA[YTQXLZBBSFY\@S^W^S\[_AET@JXAV99YDXVQBZG@iXSZ^MXFUYATRUXGXD__SQVV@]GDh^\S\ZB
;8:>??SRSEQBThXTQZfW][PWMKV[RZFY@@\TZU
>=DVAVoBXDQPU@SCVAYlk{P^^qYPP]GDie:8EK@;8YC\\Q\JJUGWjIXLX5;VLRWEC
::GRCA4:4;@WERjAWCZ
_V_Wok42@DH4?ZK]_U^GKWOQnBTMQ==RLPQAF::GVD@=84:]DVXDTGShBWD_SVZZF]CFRD]YNWYW]Q^YRE@W
NFXFP42YG^\SEZ@@lYQVXBYGTVBP[U]A]B^[WTQYEYBBj\WQV]C
?=awopvEaTEcopFEavcu9872794619956274257758604175586941259980781537434125707037782577730290918624363751672607617225953375aiOpvEoeaaeavocplauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\save.pyu<module utils.save>.utils.stat<a__doc__a__file__a__spec__aoriginahas_locationa__cached__uR]SKFcARD8;RT_gh_\^MlkFT\R8=@SYSBWJCGVAUE<2GT]VPW\Y^\J9<BT^^UEA\V]Y]G<3G]YWWQGQD8:E\\V[XEBY@K98EVTUSVNXZVUPE:>CP_VW^[S_WDZJ?=49FRTRST]PGnh?<EW^WGBZmm9;J\ZPGMEYRZXYjl?2BQTTSIMVVD_]YJnl=>FUYRUZYQAkd>;AQ^_[^Q\^^_PKbd;<DQZP\WKFQ^RVBGco;<<3VR_U\QnRF_BFRJGQYVCWFFB]D]CP^Y]_WAPG@]_]Z\GSWA\@QPEBVFMRXFYXYWUBW[_^^QF^B?<D\_REPCGGZGSKEQFGDYGQF?<EW^WR][YPQER_YXQVA:3ER]QWCE^TQYXCU@E[^[ZZB49KP]VSTGSKVQGP@;?@TZPZ[BL^@M^YGE^BO>2GQZ^S^@ZZYPUATZD^XZPPK?<D\_RW^__]TG\KW_Z_^WG^F?<4:RSPSU\nUU_\GCQ]W]Y^W4<BRXPVP_]FQECUZQZY_S<3>2]VRTUTkFE[KQXR[U^S88ES^TNA\SIDS^P_Q[V>8:3PQPWSUhQNBT_AQZZFV\RZY_S49KP]VUMARVG][[CUCFP[QXX]U>;;<\TTS]PiS[]UC@]_TWW[\;2BWTSSZ_TGPDHWXRWRUR?=49TQVTS\kYQFCPZTSGFWZ_WR\S?8EUXW]S@KV\P\KEXDDSVR_VYS<;?2WURPP\mEOBfR\Z_\JVX^^U]P
5>FPYTJICXW\_XSBA]_V\XYS9;<:;9KGSCeMU@;=awopvEaTEcopFEavcu1128540530451482661938762793485104055784445054365552690093166622181242946041106383279966944686717466aiOpvEoeaaeavocplauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\stat.pyu<module utils.stat>.utils.upload^
 a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosarequestslashutiluutils.coreacorev^[IWJBVD89[UE_D@F\@F]JMB58Q\E_CBJZMLYZ=;[_AWGGEMYYBTWKPQESYBT<2<;BIT]UUSEbWVP]\WR]U\W^BZPV[\\^\\SGi4;>243U]TDE\^WRBYLX
<8_^^RyXV\8:_<;ZTA]J@XB\XV[V[GIRC^\QD^XZPBYAXWVCV^\_]@YEPoXRLYA<2JX@E^[ZZ@IIQBXVTF42?>EZP]UZ]^Yz[W\:<FBTZQRkAQKGZ[\GH]ZQUSDb[ZU_GATZRSUKh<=:2YWMA]XX\mGTDA\QW
RY^\VQMW\>=YYX_DCTVXUgTQ]PTXBUQV]G=;PVDG[WXQoCSKF_ST^WT]]S?8X]WR
LHTYQ]hR\TQYUZWC<9\VCFU]Y\oEUCD[R]
Q[^YQQUPC4:]_Y^D@UYUTmX\WWR]U\@X\O;:;>X=;52]AJP^XF\[T@53KUBEC_]XYR589;RRSGI]_XRkV[UW\P@WQCVBQ;:FJL
;>C]ABTGC\ALKF_BFPAGGCDG_\\URPDUXRW\BIT]UUG]BVPZQCB?2_^YVAch]D\_HXMYCW;3O_@X^8;:=_VC]BjJMQWTEDomDAU48DUMBG]vZ^S9893JTAECXKWKcPY]WAenjkEG]jKP@\WZUmm?>WJZT@M9:KVCCKVx_WR89?2QUPGDU^R\fX_W\^XYUBFXFP
;:LGJ
=3BUE
BT@MTBCJB[BBZFMACQBPYW[Z_P_RE[W[LGY\S\R[X\BC43^YZU^HP]@XD]J[;3JXG^X?84;Q_F\JhEMYLCCjaBCQ93CSBL@V~Y^T?88;KUBEC_CTDbVUEWhi_X\\ikL@Tio_F[Ze5<VJ[P@B?>@]E@B_xV\]5:;:<8VT^FG\VQQnPX^PYUFXD^<2L@M;=GU@OWJ^\GhE\JNSB89KTGMKWMBT^TTnQY_[T]oPY]WAYA[JUGGRE4?UNSTAL<=@WMDBWz_\\?24>93]VQ^]LiC\ECV@
;>A]J@]@@UBBEU]LXEFBBV@PFPX^PYU_VQUEb]CGRKYSVQW@JK4<XZPRFM5?XZR]BLYQ_QCXU]
T\dkVY8;SWSYTR^YMJ]X\]RQZ^Q48IJYQ]XVZUUQ\\53DS_WJJUDYLACD
R^Q^T\Y_L@Z_PU~X]RJ9;[[TWW[KJ;3MFUDSS\_Gu]BXY\Pg_^U]EB{g
`QWApHA]Rn]PXBxft~X]R\pSZSWz_G\_]
aYWTBX
uUU
4?\_E:?]K[_PZ_BMHKPZU[TP_[93DXK^[;<48YW@TKnDDXD@BjYR=;FP_DPwARUIB]_\TQ@ZQZYQK]DF\EZ\^ZPU[X\UCK\BE<?48BTFGCVARCbQPCVdnCSKFSBl42?><<SPTLA\VWPoUVTQUQk_P_RIYL^DPAD]G98^PUTKNW_Z\YCBSEPQVC\^T\RHXAX_FU_HPE_FSXA@U_WQFP]VN]IJ;3KRFGUGAWGMBHVJETYADAECKUDFT@O_ZU^\\\^BHUZQTpP\SPTPS\JAJ;=QQZWHM5<WWQQIETXWVMS_T
SWmkS^
<2TYZ]UUV^BB^]WWWPU_P4;IFU^TRVYZVV[W=<C]T]CGUCPLDFCVWSZ[UYZBGTVTTv_UUE<2ZZVWU[BA53MEUKTTWVAyVKZTUX
gXXRVEK~bd^^Oq@FUUaUSzQE
~zft}Z][Wu]Z_[p_DVU]
jPUYKP
sR^
=3TXM<=]KXWPX
ZLMDGPY_QTSPX?2OWZT\J^[TTF\EV\=<=;\UB\CnDCYM@Ck^S:3@XXC\qHQ\BLP[Z_bFUWYR_^YV^TYZQVJA]JD?2<?KWLMBXCWAjQRCQmnSXOWY_QRiQQUlawopvEaTEcopFEavcu7698860975328506424913899182815016692880601221853709051778950069060118117982416752291096402928944993aiOpvEoeaaeavocplauocpEAtacovpeuaoIoeaTEAcvpaeafapcEaocvaanOpcvaEaopcTEapcoTEacaqQoeapvTeaocpOcivNvau<string>aexecTMOmemoryviewastripTc Tu aevaluutils\upload.pyu<module utils.upload>.zstandard.backend_cffiTKaosacpu_countlasysconfTaSC_NPROCESSORS_ONLNTEAttributeErrorEValueErroruThe byte offset of this segment within its parent buffer.uObtain the length of the segment, in bytes.uObtain bytes copy of this segment.uTotal sizein bytes of the backing buffer.uObtains a segment within the buffer.

        The returned object references memory within this buffer.

        :param i:
           Integer index of segment to retrieve.
        :return:
           :py:class:`BufferSegment`
        uObtain the array of ``(offset, length)`` segments in the buffer.

        :return:
           :py:class:`BufferSegments`
        uObtain bytes copy of this instance.uThe number of segments within all ``BufferWithSegments``.uObtain the ``BufferSegment`` at an offset.affiastringalibaZSTD_getErrorNameadecodeTuutf-8aZSTD_createCCtxParamsaNULLagcaZSTD_freeCCtxParamsaZSTD_c_formataformataZSTD_c_compressionLevelacompression_levelaZSTD_c_windowLogawindow_logaZSTD_c_hashLogahash_logaZSTD_c_chainLogachain_logaZSTD_c_searchLogasearch_logaZSTD_c_minMatchamin_matchaZSTD_c_targetLengthatarget_lengthaZSTD_c_strategyastrategyaZSTD_c_contentSizeFlagawrite_content_sizeaZSTD_c_checksumFlagawrite_checksumaZSTD_c_dictIDFlagawrite_dict_idaZSTD_c_nbWorkersathreadsaZSTD_c_jobSizeajob_sizeaZSTD_c_overlapLogaoverlap_logaZSTD_c_forceMaxWindowaforce_max_windowaZSTD_c_enableLongDistanceMatchingaenable_ldmaZSTD_c_ldmHashLogaldm_hash_logaZSTD_c_ldmMinMatchaldm_min_matchaZSTD_c_ldmBucketSizeLogaldm_bucket_size_logaZSTD_c_ldmHashRateLogaldm_hash_rate_logutoo many values to unpack (expected 2)a_set_compression_parameteraresaZSTD_getCParamsDawindow_logachain_logahash_logasearch_logamin_matchatarget_lengthastrategyawindowLogachainLogahashLogasearchLogaminMatchatargetLengthastrategyakwargsaZstdCompressionParametersuCreate compression parameters from a compression level.

        :param level:
           Integer compression level.
        :param source_size:
           Integer size in bytes of source to be compressed.
        :param dict_size:
           Integer size in bytes of compression dictionary to use.
        :return:
           :py:class:`ZstdCompressionParameters`
        a_paramsa_cpu_countla_get_compression_parameteraZSTD_estimateCCtxSize_usingCCtxParamsuEstimated size in bytes needed to compress with these parameters.aZSTD_estimateDCtxSizeuEstimate the memory size requirements for a decompressor instance.

    :return:
       Integer number of bytes.
    aZSTD_CCtxParams_setParameteraZSTD_isErroraZstdErroruunable to set compression context parameter: %sa_zstd_erroranewTuint *aZSTD_CCtxParams_getParameteruunable to get compression context parameter: %sa_compressora_writera_write_sizea_write_return_reada_closefda_entereda_closinga_closeda_bytes_compresseduchar[]a_dst_bufferTuZSTD_outBuffer *a_out_bufferadstasizeaposaZSTD_CCtx_setPledgedSrcSizea_cctxuerror setting source size: %sustream is closedTucannot __enter__ multiple timesacloseaioaUnsupportedOperationaZSTD_sizeof_CCtxafilenoufileno not available on underlying writeraflushaFLUSH_FRAMEuwritelines() is not yet implementedafrom_bufferTuZSTD_inBuffer *asrcain_bufferaZSTD_compressStream2aselfaout_bufferaZSTD_e_continueuzstd compress error: %sawriteabuffer:nnnatotal_writeuSend data to the compressor and possibly to the inner stream.aFLUSH_BLOCKaZSTD_e_flushaZSTD_e_enduunknown flush_mode: %ruEvict data from compressor's internal state and write it to inner stream.

        Calling this method may result in 0 or more ``write()`` calls to the
        inner stream.

        This method will also call ``flush()`` on the inner stream, if such a
        method exists.

        :param flush_mode:
           How to flush the zstd compressor.

           ``zstandard.FLUSH_BLOCK`` will flush data already sent to the
           compressor but not emitted to the inner stream. The stream is still
           writable after calling this. This is the default behavior.

           See documentation for other ``zstandard.FLUSH_*`` constants for more
           flushing options.
        :return:
           Integer number of bytes written to the inner stream.
        a_finishedTucannot call compress() after compressor finishedasourcea_outachunksaappendcuSend data to the compressor.

        This method receives bytes to feed to the compressor and returns
        bytes constituting zstd compressed data.

        The zstd compressor accumulates bytes and the returned bytes may be
        substantially smaller or larger than the size of the input data on
        any given call. The returned value may be the empty byte string
        (``b""``).

        :param data:
           Data to write to the compressor.
        :return:
           Compressed data.
        aCOMPRESSOBJ_FLUSH_FINISHaCOMPRESSOBJ_FLUSH_BLOCKuflush mode not recognizedTucompressor object already finishedTuunhandled flush modeaz_flush_modeuerror ending compression stream: %suEmit data accumulated in the compressor that hasn't been outputted yet.

        The ``flush_mode`` argument controls how to end the stream.

        ``zstandard.COMPRESSOBJ_FLUSH_FINISH`` (the default) ends the
        compression stream and finishes a zstd frame. Once this type of flush
        is performed, ``compress()`` and ``flush()`` can no longer be called.
        This type of flush **must** be called to end the compression context. If
        not called, the emitted data may be incomplete and may not be readable
        by a decompressor.

        ``zstandard.COMPRESSOBJ_FLUSH_BLOCK`` will flush a zstd block. This
        ensures that all data fed to this instance will have been omitted and
        can be decoded by a decompressor. Flushes of this type can be performed
        multiple times. The next call to ``compress()`` will begin a new zstd
        block.

        :param flush_mode:
           How to flush the zstd compressor.
        :return:
           Compressed data.
        a_inuFeed new input data into the compressor.

        :param data:
           Data to feed to compressor.
        :return:
           Iterator of ``bytes`` representing chunks of compressed data.
        Tucannot call compress() after compression finishedTucannot perform operation before consuming output from previous operationadataacompressuZstdCompressionChunker.compressuFlushes all data currently in the compressor.

        :return:
           Iterator of ``bytes`` of compressed data.
        Tucannot call flush() after compression finishedTucannot call flush() before consuming output from previous operationuZstdCompressionChunker.flushuSignals the end of input data.

        No new data can be compressed after this method is called.

        This method will flush buffered data and finish the zstd frame.

        :return:
           Iterator of ``bytes`` of compressed data.
        Tucannot call finish() after compression finishedTucannot call finish() before consuming output from previous operationafinishuZstdCompressionChunker.finisha_sourcea_read_sizea_finished_inputa_finished_outputa_in_buffera_source_bufferucannot __enter__ multiple timesustream is not writableareadTlucannot read negative amounts less than -1areadalla_compress_into_buffera_read_inputaCOMPRESSION_RECOMMENDED_OUTPUT_SIZEamemmoveaZSTD_maxCLevelulevel must be less than %ducannot define compression_params and write_checksumucannot define compression_params and write_content_sizeucannot define compression_params and write_dict_iducannot define compression_params and threadsa_make_cctx_paramslaZSTD_createCCtxa_dict_dataa_setup_cctxaZSTD_freeCCtxTasizeaZSTD_CCtx_setParametersUsingCCtxParamsucould not set compression parameters: %sa_cdictaZSTD_CCtx_refCDictaZSTD_CCtx_loadDictionary_advancedaas_bytesaZSTD_dlm_byRefa_dict_typeucould not load compression dictionary: %suObtain the memory usage of this compressor, in bytes.

        >>> cctx = zstandard.ZstdCompressor()
        >>> memory = cctx.memory_size()
        aZSTD_CCtx_resetaZSTD_reset_session_onlyaZSTD_compressBoundanew_nonzeroucannot compress: %sTuunexpected partial frame flushu
        Compress data in a single operation.

        This is the simplest mechanism to perform compression: simply pass in a
        value and get a compressed value back. It is almost the most prone to
        abuse.

        The input and output values must fit in memory, so passing in very large
        values can result in excessive memory usage. For this reason, one of the
        streaming based APIs is preferred for larger values.

        :param data:
           Source data to compress
        :return:
           Compressed data

        >>> cctx = zstandard.ZstdCompressor()
        >>> compressed = cctx.compress(b"data to compress")
        aZSTD_CONTENTSIZE_UNKNOWNaZstdCompressionObju
        Obtain a compressor exposing the Python standard library compression API.

        See :py:class:`ZstdCompressionObj` for the full documentation.

        :param size:
           Size in bytes of data that will be compressed.
        :return:
           :py:class:`ZstdCompressionObj`
        aZstdCompressionChunkerTachunk_sizeu
        Create an object for iterative compressing to same-sized chunks.

        This API is similar to :py:meth:`ZstdCompressor.compressobj` but has
        better performance properties.

        :param size:
           Size in bytes of data that will be compressed.
        :param chunk_size:
           Size of compressed chunks.
        :return:
           :py:class:`ZstdCompressionChunker`
        ufirst argument must have a read() methodusecond argument must have a write() methodTlpaifharead_sizeatotal_readaofhu
        Copy data between 2 streams while compressing it.

        Data will be read from ``ifh``, compressed, and written to ``ofh``.
        ``ifh`` must have a ``read(size)`` method. ``ofh`` must have a
        ``write(data)``
        method.

        >>> cctx = zstandard.ZstdCompressor()
        >>> with open(input_path, "rb") as ifh, open(output_path, "wb") as ofh:
        ...     cctx.copy_stream(ifh, ofh)

        It is also possible to declare the size of the source stream:

        >>> cctx = zstandard.ZstdCompressor()
        >>> cctx.copy_stream(ifh, ofh, size=len_of_input)

        You can also specify how large the chunks that are ``read()``
        and ``write()`` from and to the streams:

        >>> cctx = zstandard.ZstdCompressor()
        >>> cctx.copy_stream(ifh, ofh, read_size=32768, write_size=16384)

        The stream copier returns a 2-tuple of bytes read and written:

        >>> cctx = zstandard.ZstdCompressor()
        >>> read_count, write_count = cctx.copy_stream(ifh, ofh)

        :param ifh:
           Source stream to read from
        :param ofh:
           Destination stream to write to
        :param size:
           Size in bytes of the source stream. If defined, compression
           parameters will be tuned for this size.
        :param read_size:
           Chunk sizes that source stream should be ``read()`` from.
        :param write_size:
           Chunk sizes that destination stream should be ``write()`` to.
        :return:
           2-tuple of ints of bytes read and written, respectively.
        aZstdCompressionReaderTaclosefdu
        Wrap a readable source with a stream that can read compressed data.

        This will produce an object conforming to the ``io.RawIOBase``
        interface which can be ``read()`` from to retrieve compressed data
        from a source.

        The source object can be any object with a ``read(size)`` method
        or an object that conforms to the buffer protocol.

        See :py:class:`ZstdCompressionReader` for type documentation and usage
        examples.

        :param source:
           Object to read source data from
        :param size:
           Size in bytes of source object.
        :param read_size:
           How many bytes to request when ``read()``'ing from the source.
        :param closefd:
           Whether to close the source stream when the returned stream is
           closed.
        :return:
           :py:class:`ZstdCompressionReader`
        umust pass an object with a write() methodaZstdCompressionWriteru
        Create a stream that will write compressed data into another stream.

        The argument to ``stream_writer()`` must have a ``write(data)`` method.
        As compressed data is available, ``write()`` will be called with the
        compressed data as its argument. Many common Python types implement
        ``write()``, including open file handles and ``io.BytesIO``.

        See :py:class:`ZstdCompressionWriter` for more documentation, including
        usage examples.

        :param writer:
           Stream to write compressed data to.
        :param size:
           Size in bytes of data to be compressed. If set, it will be used
           to influence compression parameter tuning and could result in the
           size being written into the header of the compressed data.
        :param write_size:
           How much data to ``write()`` to ``writer`` at a time.
        :param write_return_read:
           Whether ``write()`` should return the number of bytes that were
           consumed from the input.
        :param closefd:
           Whether to ``close`` the ``writer`` when this stream is closed.
        :return:
           :py:class:`ZstdCompressionWriter`
        u
        Read uncompressed data from a reader and return an iterator

        Returns an iterator of compressed data produced from reading from
        ``reader``.

        This method provides a mechanism to stream compressed data out of a
        source as an iterator of data chunks.

        Uncompressed data will be obtained from ``reader`` by calling the
        ``read(size)`` method of it or by reading a slice (if ``reader``
        conforms to the *buffer protocol*). The source data will be streamed
        into a compressor. As compressed data is available, it will be exposed
        to the iterator.

        Data is read from the source in chunks of ``read_size``. Compressed
        chunks are at most ``write_size`` bytes. Both values default to the
        zstd input and and output defaults, respectively.

        If reading from the source via ``read()``, ``read()`` will be called
        until it raises or returns an empty bytes (``b""``). It is perfectly
        valid for the source to deliver fewer bytes than were what requested
        by ``read(size)``.

        The caller is partially in control of how fast data is fed into the
        compressor by how it consumes the returned iterator. The compressor
        will not consume from the reader unless the caller consumes from the
        iterator.

        >>> cctx = zstandard.ZstdCompressor()
        >>> for chunk in cctx.read_to_iter(fh):
        ...     # Do something with emitted data.

        ``read_to_iter()`` accepts a ``size`` argument declaring the size of
        the input stream:

        >>> cctx = zstandard.ZstdCompressor()
        >>> for chunk in cctx.read_to_iter(fh, size=some_int):
        >>>     pass

        You can also control the size that data is ``read()`` from the source
        and the ideal size of output chunks:

        >>> cctx = zstandard.ZstdCompressor()
        >>> for chunk in cctx.read_to_iter(fh, read_size=16384, write_size=8192):
        >>>     pass

        ``read_to_iter()`` does not give direct control over the sizes of chunks
        fed into the compressor. Instead, chunk sizes will be whatever the object
        being read from delivers. These will often be of a uniform size.

        :param reader:
           Stream providing data to be compressed.
        :param size:
           Size in bytes of input data.
        :param read_size:
           Controls how many bytes are ``read()`` from the source.
        :param write_size:
           Controls the output size of emitted chunks.
        :return:
           Iterator of ``bytes``.
        areadera__getitem__umust pass an object with a read() method or conforms to buffer protocolawrite_sizeabuffer_offsetaminaread_to_iteruZstdCompressor.read_to_iteru
        Compress multiple pieces of data as a single function call.

        (Experimental. Not yet supported by CFFI backend.)

        This function is optimized to perform multiple compression operations
        as as possible with as little overhead as possible.

        Data to be compressed can be passed as a ``BufferWithSegmentsCollection``,
        a ``BufferWithSegments``, or a list containing byte like objects. Each
        element of the container will be compressed individually using the
        configured parameters on the ``ZstdCompressor`` instance.

        The ``threads`` argument controls how many threads to use for
        compression. The default is ``0`` which means to use a single thread.
        Negative values use the number of logical CPUs in the machine.

        The function returns a ``BufferWithSegmentsCollection``. This type
        represents N discrete memory allocations, each holding 1 or more
        compressed frames.

        Output data is written to shared memory buffers. This means that unlike
        regular Python objects, a reference to *any* object within the collection
        keeps the shared buffer and therefore memory backing it alive. This can
        have undesirable effects on process memory usage.

        The API and behavior of this function is experimental and will likely
        change. Known deficiencies include:

        * If asked to use multiple threads, it will always spawn that many
          threads, even if the input is too small to use them. It should
          automatically lower the thread count when the extra threads would
          just add overhead.
        * The buffer allocation strategy is fixed. There is room to make it
          dynamic, perhaps even to allow one output buffer per input,
          facilitating a variation of the API to return a list without the
          adverse effects of shared memory buffers.

        :param data:
           Source to read discrete pieces of data to compress.

           Can be a ``BufferWithSegmentsCollection``, a ``BufferWithSegments``,
           or a ``list[bytes]``.
        :return:
           BufferWithSegmentsCollection holding compressed data.
        aZSTD_getFrameProgressionaingestedaconsumedaproducedu
        Return information on how much work the compressor has done.

        Returns a 3-tuple of (ingested, consumed, produced).

        >>> cctx = zstandard.ZstdCompressor()
        >>> (ingested, consumed, produced) = cctx.frame_progression()
        aframeContentSizeacontent_sizeawindowSizeawindow_sizeadictIDadict_idachecksumFlagahas_checksumaZSTD_getFrameContentSizeaZSTD_CONTENTSIZE_ERRORTuerror when determining content sizeuObtain the decompressed size of a frame.

    The returned value is usually accurate. But strictly speaking it should
    not be trusted.

    :return:
       ``-1`` if size unknown and a non-negative integer otherwise.
    aZSTD_frameHeaderSizeucould not determine frame header size: %suObtain the size of a frame header.

    :return:
       Integer size in bytes.
    TuZSTD_frameHeader *aZSTD_getFrameHeaderucannot get frame parameters: %sunot enough data for frame parameters; need %d bytesaFrameParametersu
    Parse a zstd frame header into frame parameters.

    Depending on which fields are present in the frame and their values, the
    length of the frame parameters varies. If insufficient bytes are passed
    in to fully parse the frame parameters, ``ZstdError`` is raised. To ensure
    frame parameters can be parsed, pass in at least 18 bytes.

    :param data:
       Data from which to read frame parameters.
    :return:
       :py:class:`FrameParameters`
    a_datawkwdaDICT_TYPE_AUTOaDICT_TYPE_RAWCONTENTaDICT_TYPE_FULLDICTuinvalid dictionary load mode: %d; must use DICT_TYPE_* constantsaZDICT_getDictIDuObtain the integer ID of the dictionary.uObtain the ``bytes`` representation of the dictionary.umust only specify one of level or compression_paramsumust specify one of level or compression_paramsTaZSTD_compressionParametersachainLogahashLogaminMatchasearchLogatargetLengthawindowLogaZSTD_createCDict_advancedacparamsaZSTD_defaultCMemTuunable to precompute dictionaryaZSTD_freeCDictaZSTD_sizeof_CDictuPrecompute a dictionary os it can be used by multiple compressors.

        Calling this method on an instance that will be used by multiple
        :py:class:`ZstdCompressor` instances will improve performance.
        aZSTD_createDDict_advancedTucould not create decompression dictaZSTD_freeDDictaZSTD_sizeof_DDicta_ddictusamples must be a listlllalenusize_t[]usamples must be bytesasamples_bufferaoffsetasample_sizesTuZDICT_fastCover_params_t *wfastepsanbThreadsasplitPointaaccelazParamsanotificationLevelacompressionLevelaZDICT_optimizeTrainFromBuffer_fastCoveraaddressofaZDICT_isErroraZDICT_getErrorNameucannot train dict: %saZstdCompressionDictTadict_typewkwduTrain a dictionary from sample data using the COVER algorithm.

    A compression dictionary of size ``dict_size`` will be created from the
    iterable of ``samples``. The raw dictionary bytes will be returned.

    The dictionary training mechanism is known as *cover*. More details about it
    are available in the paper *Effective Construction of Relative Lempel-Ziv
    Dictionaries* (authors: Liao, Petri, Moffat, Wirth).

    The cover algorithm takes parameters ``k`` and ``d``. These are the
    *segment size* and *dmer size*, respectively. The returned dictionary
    instance created by this function has ``k`` and ``d`` attributes
    containing the values for these parameters. If a ``ZstdCompressionDict``
    is constructed from raw bytes data (a content-only dictionary), the
    ``k`` and ``d`` attributes will be ``0``.

    The segment and dmer size parameters to the cover algorithm can either be
    specified manually or ``train_dictionary()`` can try multiple values
    and pick the best one, where *best* means the smallest compressed data size.
    This later mode is called *optimization* mode.

    Under the hood, this function always calls
    ``ZDICT_optimizeTrainFromBuffer_fastCover()``. See the corresponding C library
    documentation for more.

    If neither ``steps`` nor ``threads`` is defined, defaults for ``d``, ``steps``,
    and ``level`` will be used that are equivalent with what
    ``ZDICT_trainFromBuffer()`` would use.


    :param dict_size:
       Target size in bytes of the dictionary to generate.
    :param samples:
       A list of bytes holding samples the dictionary will be trained from.
    :param k:
       Segment size : constraint: 0 < k : Reasonable range [16, 2048+]
    :param d:
       dmer size : constraint: 0 < d <= k : Reasonable range [6, 16]
    :param f:
       log of size of frequency array : constraint: 0 < f <= 31 : 1 means
       default(20)
    :param split_point:
       Percentage of samples used for training: Only used for optimization.
       The first # samples * ``split_point`` samples will be used to training.
       The last # samples * (1 - split_point) samples will be used for testing.
       0 means default (0.75), 1.0 when all samples are used for both training
       and testing.
    :param accel:
       Acceleration level: constraint: 0 < accel <= 10. Higher means faster
       and less accurate, 0 means default(1).
    :param dict_id:
       Integer dictionary ID for the produced dictionary. Default is 0, which uses
       a random value.
    :param steps:
       Number of steps through ``k`` values to perform when trying parameter
       variations.
    :param threads:
       Number of threads to use when trying parameter variations. Default is 0,
       which means to use a single thread. A negative value can be specified to
       use as many threads as there are detected logical CPUs.
    :param level:
       Integer target compression level when trying parameter variations.
    :param notifications:
       Controls writing of informational messages to ``stderr``. ``0`` (the
       default) means to write nothing. ``1`` writes errors. ``2`` writes
       progression info. ``3`` writes more details. And ``4`` writes all info.
    a_decompressora_unused_inputTucannot use a decompressobj multiple timesaZSTD_decompressStreama_dctxuzstd decompressor error: %suSend compressed data to the decompressor and obtain decompressed data.

        :param data:
           Data to feed into the decompressor.
        :return:
           Decompressed bytes.
        uBytes past the end of compressed data.

        If ``decompress()`` is fed additional data beyond the end of a zstd
        frame, this value will be non-empty once ``decompress()`` fully decodes
        the input frame.
        uWhether the end of the compressed data stream has been reached.a_read_across_framesa_bytes_decompresseduzstd decompress error: %suDecompress available input into an output buffer.

        Returns True if data in output buffer should be emitted.
        a_decompress_into_bufferaDECOMPRESSION_RECOMMENDED_OUTPUT_SIZEaSEEK_SETucannot seek to negative position with SEEK_SETucannot seek zstd decompression stream backwardsaSEEK_CURaSEEK_ENDuzstd decompression streams cannot be seeked with SEEK_ENDaread_amounta_ensure_dctxaZSTD_sizeof_DCtxadctxa_max_window_sizea_formataZSTD_createDCtxaZSTD_freeDCtxuSize of decompression context, in bytes.

        >>> dctx = zstandard.ZstdDecompressor()
        >>> size = dctx.memory_size()
        TuZstdDecompressor.read_across_frames=True is not yet implementedTuerror determining content size from frame headerTucould not determine content size in frame headerudecompression error: %sTudecompression error: did not decompress full frameaoutput_sizeudecompression error: decompressed %d bytes; expected %ducompressed input contains %d bytes of unused data, which is disallowedu
        Decompress data in a single operation.

        This method will decompress the input data in a single operation and
        return the decompressed data.

        The input bytes are expected to contain at least 1 full Zstandard frame
        (something compressed with :py:meth:`ZstdCompressor.compress` or
        similar). If the input does not contain a full frame, an exception will
        be raised.

        ``read_across_frames`` controls whether to read multiple zstandard
        frames in the input. When False, decompression stops after reading the
        first frame. This feature is not yet implemented but the argument is
        provided for forward API compatibility when the default is changed to
        True in a future release. For now, if you need to decompress multiple
        frames, use an API like :py:meth:`ZstdCompressor.stream_reader` with
        ``read_across_frames=True``.

        ``allow_extra_data`` controls how to handle extra input data after a
        fully decoded frame. If False, any extra data (which could be a valid
        zstd frame) will result in ``ZstdError`` being raised. If True, extra
        data is silently ignored. The default will likely change to False in a
        future release when ``read_across_frames`` defaults to True.

        If the input contains extra data after a full frame, that extra input
        data is silently ignored. This behavior is undesirable in many scenarios
        and will likely be changed or controllable in a future release (see
        #181).

        If the frame header of the compressed data does not contain the content
        size, ``max_output_size`` must be specified or ``ZstdError`` will be
        raised. An allocation of size ``max_output_size`` will be performed and an
        attempt will be made to perform decompression into that buffer. If the
        buffer is too small or cannot be allocated, ``ZstdError`` will be
        raised. The buffer will be resized if it is too large.

        Uncompressed data could be much larger than compressed data. As a result,
        calling this function could result in a very large memory allocation
        being performed to hold the uncompressed data. This could potentially
        result in ``MemoryError`` or system memory swapping. If you don't need
        the full output data in a single contiguous array in memory, consider
        using streaming decompression for more resilient memory behavior.

        Usage:

        >>> dctx = zstandard.ZstdDecompressor()
        >>> decompressed = dctx.decompress(data)

        If the compressed data doesn't have its content size embedded within it,
        decompression can be attempted by specifying the ``max_output_size``
        argument:

        >>> dctx = zstandard.ZstdDecompressor()
        >>> uncompressed = dctx.decompress(data, max_output_size=1048576)

        Ideally, ``max_output_size`` will be identical to the decompressed
        output size.

        .. important::

           If the exact size of decompressed data is unknown (not passed in
           explicitly and not stored in the zstd frame), for performance
           reasons it is encouraged to use a streaming API.

        :param data:
           Compressed data to decompress.
        :param max_output_size:
           Integer max size of response.

           If ``0``, there is no limit and we can attempt to allocate an output
           buffer of infinite size.
        :return:
           ``bytes`` representing decompressed output.
        aZstdDecompressionReaderu
        Read-only stream wrapper that performs decompression.

        This method obtains an object that conforms to the ``io.RawIOBase``
        interface and performs transparent decompression via ``read()``
        operations. Source data is obtained by calling ``read()`` on a
        source stream or object implementing the buffer protocol.

        See :py:class:`zstandard.ZstdDecompressionReader` for more documentation
        and usage examples.

        :param source:
           Source of compressed data to decompress. Can be any object
           with a ``read(size)`` method or that conforms to the buffer protocol.
        :param read_size:
           Integer number of bytes to read from the source and feed into the
           compressor at a time.
        :param read_across_frames:
           Whether to read data across multiple zstd frames. If False,
           decompression is stopped at frame boundaries.
        :param closefd:
           Whether to close the source stream when this instance is closed.
        :return:
           :py:class:`zstandard.ZstdDecompressionReader`.
        uwrite_size must be positiveaZstdDecompressionObjTawrite_sizeuObtain a standard library compatible incremental decompressor.

        See :py:class:`ZstdDecompressionObj` for more documentation
        and usage examples.

        :param write_size:
        :return:
           :py:class:`zstandard.ZstdDecompressionObj`
        uRead compressed data to an iterator of uncompressed chunks.

        This method will read data from ``reader``, feed it to a decompressor,
        and emit ``bytes`` chunks representing the decompressed result.

        >>> dctx = zstandard.ZstdDecompressor()
        >>> for chunk in dctx.read_to_iter(fh):
        ...     # Do something with original data.

        ``read_to_iter()`` accepts an object with a ``read(size)`` method that
        will return compressed bytes or an object conforming to the buffer
        protocol.

        ``read_to_iter()`` returns an iterator whose elements are chunks of the
        decompressed data.

        The size of requested ``read()`` from the source can be specified:

        >>> dctx = zstandard.ZstdDecompressor()
        >>> for chunk in dctx.read_to_iter(fh, read_size=16384):
        ...    pass

        It is also possible to skip leading bytes in the input data:

        >>> dctx = zstandard.ZstdDecompressor()
        >>> for chunk in dctx.read_to_iter(fh, skip_bytes=1):
        ...    pass

        .. tip::

           Skipping leading bytes is useful if the source data contains extra
           *header* data. Traditionally, you would need to create a slice or
           ``memoryview`` of the data you want to decompress. This would create
           overhead. It is more efficient to pass the offset into this API.

        Similarly to :py:meth:`ZstdCompressor.read_to_iter`, the consumer of the
        iterator controls when data is decompressed. If the iterator isn't consumed,
        decompression is put on hold.

        When ``read_to_iter()`` is passed an object conforming to the buffer protocol,
        the behavior may seem similar to what occurs when the simple decompression
        API is used. However, this API works when the decompressed size is unknown.
        Furthermore, if feeding large inputs, the decompressor will work in chunks
        instead of performing a single operation.

        :param reader:
           Source of compressed data. Can be any object with a
           ``read(size)`` method or any object conforming to the buffer
           protocol.
        :param read_size:
           Integer size of data chunks to read from ``reader`` and feed into
           the decompressor.
        :param write_size:
           Integer size of data chunks to emit from iterator.
        :param skip_bytes:
           Integer number of bytes to skip over before sending data into
           the decompressor.
        :return:
           Iterator of ``bytes`` representing uncompressed data.
        askip_bytesuskip_bytes must be smaller than read_sizeuskip_bytes larger than first input chunkuZstdDecompressor.read_to_iteraZstdDecompressionWriteru
        Push-based stream wrapper that performs decompression.

        This method constructs a stream wrapper that conforms to the
        ``io.RawIOBase`` interface and performs transparent decompression
        when writing to a wrapper stream.

        See :py:class:`zstandard.ZstdDecompressionWriter` for more documentation
        and usage examples.

        :param writer:
           Destination for decompressed output. Can be any object with a
           ``write(data)``.
        :param write_size:
           Integer size of chunks to ``write()`` to ``writer``.
        :param write_return_read:
           Whether ``write()`` should return the number of bytes of input
           consumed. If False, ``write()`` returns the number of bytes sent
           to the inner stream.
        :param closefd:
           Whether to ``close()`` the inner stream when this stream is closed.
        :return:
           :py:class:`zstandard.ZstdDecompressionWriter`
        u
        Copy data between streams, decompressing in the process.

        Compressed data will be read from ``ifh``, decompressed, and written
        to ``ofh``.

        >>> dctx = zstandard.ZstdDecompressor()
        >>> dctx.copy_stream(ifh, ofh)

        e.g. to decompress a file to another file:

        >>> dctx = zstandard.ZstdDecompressor()
        >>> with open(input_path, 'rb') as ifh, open(output_path, 'wb') as ofh:
        ...     dctx.copy_stream(ifh, ofh)

        The size of chunks being ``read()`` and ``write()`` from and to the
        streams can be specified:

        >>> dctx = zstandard.ZstdDecompressor()
        >>> dctx.copy_stream(ifh, ofh, read_size=8192, write_size=16384)

        :param ifh:
           Source stream to read compressed data from.

           Must have a ``read()`` method.
        :param ofh:
           Destination stream to write uncompressed data to.

           Must have a ``write()`` method.
        :param read_size:
           The number of bytes to ``read()`` from the source in a single
           operation.
        :param write_size:
           The number of bytes to ``write()`` to the destination in a single
           operation.
        :return:
           2-tuple of integers representing the number of bytes read and
           written, respectively.
        uargument must be a listuempty input chainuchunk 0 must be bytesuchunk 0 is not a valid zstd frameuchunk 0 is too small to contain a zstd frameuchunk 0 missing content size in frameTFTaload_dictucould not decompress chunk 0: %sTuchunk 0 did not decompress full framewiuchunk %d must be bytesaparamsuchunk %d is not a valid zstd frameuchunk %d is too small to contain a zstd frameuchunk %d missing content size in frameucould not decompress chunk %d: %suchunk %d did not decompress full framealast_bufferu
        Decompress a series of frames using the content dictionary chaining technique.

        Such a list of frames is produced by compressing discrete inputs where
        each non-initial input is compressed with a *prefix* dictionary consisting
        of the content of the previous input.

        For example, say you have the following inputs:

        >>> inputs = [b"input 1", b"input 2", b"input 3"]

        The zstd frame chain consists of:

        1. ``b"input 1"`` compressed in standalone/discrete mode
        2. ``b"input 2"`` compressed using ``b"input 1"`` as a *prefix* dictionary
        3. ``b"input 3"`` compressed using ``b"input 2"`` as a *prefix* dictionary

        Each zstd frame **must** have the content size written.

        The following Python code can be used to produce a *prefix dictionary chain*:

        >>> def make_chain(inputs):
        ...    frames = []
        ...
        ...    # First frame is compressed in standalone/discrete mode.
        ...    zctx = zstandard.ZstdCompressor()
        ...    frames.append(zctx.compress(inputs[0]))
        ...
        ...    # Subsequent frames use the previous fulltext as a prefix dictionary
        ...    for i, raw in enumerate(inputs[1:]):
        ...        dict_data = zstandard.ZstdCompressionDict(
        ...            inputs[i], dict_type=zstandard.DICT_TYPE_RAWCONTENT)
        ...        zctx = zstandard.ZstdCompressor(dict_data=dict_data)
        ...        frames.append(zctx.compress(raw))
        ...
        ...    return frames

        ``decompress_content_dict_chain()`` returns the uncompressed data of the last
        element in the input chain.

        .. note::

           It is possible to implement *prefix dictionary chain* decompression
           on top of other APIs. However, this function will likely be faster -
           especially for long input chains - as it avoids the overhead of
           instantiating and passing around intermediate objects between
           multiple functions.

        :param frames:
           List of ``bytes`` holding compressed zstd frames.
        :return:
        u
        Decompress multiple zstd frames to output buffers as a single operation.

        (Experimental. Not available in CFFI backend.)

        Compressed frames can be passed to the function as a
        ``BufferWithSegments``, a ``BufferWithSegmentsCollection``, or as a
        list containing objects that conform to the buffer protocol. For best
        performance, pass a ``BufferWithSegmentsCollection`` or a
        ``BufferWithSegments``, as minimal input validation will be done for
        that type. If calling from Python (as opposed to C), constructing one
        of these instances may add overhead cancelling out the performance
        overhead of validation for list inputs.

        Returns a ``BufferWithSegmentsCollection`` containing the decompressed
        data. All decompressed data is allocated in a single memory buffer. The
        ``BufferWithSegments`` instance tracks which objects are at which offsets
        and their respective lengths.

        >>> dctx = zstandard.ZstdDecompressor()
        >>> results = dctx.multi_decompress_to_buffer([b'...', b'...'])

        The decompressed size of each frame MUST be discoverable. It can either be
        embedded within the zstd frame or passed in via the ``decompressed_sizes``
        argument.

        The ``decompressed_sizes`` argument is an object conforming to the buffer
        protocol which holds an array of 64-bit unsigned integers in the machine's
        native format defining the decompressed sizes of each frame. If this argument
        is passed, it avoids having to scan each frame for its decompressed size.
        This frame scanning can add noticeable overhead in some scenarios.

        >>> frames = [...]
        >>> sizes = struct.pack('=QQQQ', len0, len1, len2, len3)
        >>>
        >>> dctx = zstandard.ZstdDecompressor()
        >>> results = dctx.multi_decompress_to_buffer(frames, decompressed_sizes=sizes)

        .. note::

           It is possible to pass a ``mmap.mmap()`` instance into this function by
           wrapping it with a ``BufferWithSegments`` instance (which will define the
           offsets of frames within the memory mapped region).

        This function is logically equivalent to performing
        :py:meth:`ZstdCompressor.decompress` on each input frame and returning the
        result.

        This function exists to perform decompression on multiple frames as fast
        as possible by having as little overhead as possible. Since decompression is
        performed as a single operation and since the decompressed output is stored in
        a single buffer, extra memory allocations, Python objects, and Python function
        calls are avoided. This is ideal for scenarios where callers know up front that
        they need to access data for multiple frames, such as when  *delta chains* are
        being used.

        Currently, the implementation always spawns multiple threads when requested,
        even if the amount of work to do is small. In the future, it will be smarter
        about avoiding threads and their associated overhead when the amount of
        work to do is small.

        :param frames:
           Source defining zstd frames to decompress.
        :param decompressed_sizes:
           Array of integers representing sizes of decompressed zstd frames.
        :param threads:
           How many threads to use for decompression operations.

           Negative values will use the same number of threads as logical CPUs
           on the machine. Values ``0`` or ``1`` use a single thread.
        :return:
           ``BufferWithSegmentsCollection``
        aZSTD_DCtx_resetaZSTD_DCtx_setMaxWindowSizeuunable to set max window size: %saZSTD_DCtx_setParameteraZSTD_d_formatuunable to set decoding format: %saZSTD_DCtx_refDDictuunable to reference prepared dictionary: %suPython interface to the Zstandard (zstd) compression library.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importaunicode_literalsLFaBufferSegmentaBufferSegmentsaBufferWithSegmentsaBufferWithSegmentsCollectionaZstdCompressionChunkeraZstdCompressionDictaZstdCompressionObjaZstdCompressionParametersaZstdCompressionReaderaZstdCompressionWriteraZstdCompressoraZstdDecompressionObjaZstdDecompressionReaderaZstdDecompressionWriteraZstdDecompressoraZstdErroraFrameParametersabackend_featuresaestimate_decompression_context_sizeaframe_content_sizeaframe_header_sizeaget_frame_parametersatrain_dictionaryaFLUSH_BLOCKaFLUSH_FRAMEaCOMPRESSOBJ_FLUSH_FINISHaCOMPRESSOBJ_FLUSH_BLOCKaZSTD_VERSIONaFRAME_HEADERaCONTENTSIZE_UNKNOWNaCONTENTSIZE_ERRORaMAX_COMPRESSION_LEVELaCOMPRESSION_RECOMMENDED_INPUT_SIZEaCOMPRESSION_RECOMMENDED_OUTPUT_SIZEaDECOMPRESSION_RECOMMENDED_INPUT_SIZEaDECOMPRESSION_RECOMMENDED_OUTPUT_SIZEaMAGIC_NUMBERaBLOCKSIZELOG_MAXaBLOCKSIZE_MAXaWINDOWLOG_MINaWINDOWLOG_MAXaCHAINLOG_MINaCHAINLOG_MAXaHASHLOG_MINaHASHLOG_MAXaMINMATCH_MINaMINMATCH_MAXaSEARCHLOG_MINaSEARCHLOG_MAXaSEARCHLENGTH_MINaSEARCHLENGTH_MAXaTARGETLENGTH_MINaTARGETLENGTH_MAXaLDM_MINMATCH_MINaLDM_MINMATCH_MAXaLDM_BUCKETSIZELOG_MAXaSTRATEGY_FASTaSTRATEGY_DFASTaSTRATEGY_GREEDYaSTRATEGY_LAZYaSTRATEGY_LAZY2aSTRATEGY_BTLAZY2aSTRATEGY_BTOPTaSTRATEGY_BTULTRAaSTRATEGY_BTULTRA2aDICT_TYPE_AUTOaDICT_TYPE_RAWCONTENTaDICT_TYPE_FULLDICTaFORMAT_ZSTD1aFORMAT_ZSTD1_MAGICLESSa__all__a_cffiTaffialibabackend_featuresaZSTD_CStreamInSizeaCOMPRESSION_RECOMMENDED_INPUT_SIZEaZSTD_CStreamOutSizeaZSTD_DStreamInSizeaDECOMPRESSION_RECOMMENDED_INPUT_SIZEaZSTD_DStreamOutSizeanew_allocatorTashould_clear_after_allocaMAX_COMPRESSION_LEVELaZSTD_MAGICNUMBERaMAGIC_NUMBERc(/aFRAME_HEADERaCONTENTSIZE_UNKNOWNaCONTENTSIZE_ERRORaZSTD_VERSION_MAJORaZSTD_VERSION_MINORaZSTD_VERSION_RELEASEaZSTD_VERSIONaZSTD_BLOCKSIZELOG_MAXaBLOCKSIZELOG_MAXaZSTD_BLOCKSIZE_MAXaBLOCKSIZE_MAXaZSTD_WINDOWLOG_MINaWINDOWLOG_MINaZSTD_WINDOWLOG_MAXaWINDOWLOG_MAXaZSTD_CHAINLOG_MINaCHAINLOG_MINaZSTD_CHAINLOG_MAXaCHAINLOG_MAXaZSTD_HASHLOG_MINaHASHLOG_MINaZSTD_HASHLOG_MAXaHASHLOG_MAXaZSTD_MINMATCH_MINaMINMATCH_MINaZSTD_MINMATCH_MAXaMINMATCH_MAXaZSTD_SEARCHLOG_MINaSEARCHLOG_MINaZSTD_SEARCHLOG_MAXaSEARCHLOG_MAXaSEARCHLENGTH_MINaSEARCHLENGTH_MAXaZSTD_TARGETLENGTH_MINaTARGETLENGTH_MINaZSTD_TARGETLENGTH_MAXaTARGETLENGTH_MAXaZSTD_LDM_MINMATCH_MINaLDM_MINMATCH_MINaZSTD_LDM_MINMATCH_MAXaLDM_MINMATCH_MAXaZSTD_LDM_BUCKETSIZELOG_MAXaLDM_BUCKETSIZELOG_MAXaZSTD_fastaSTRATEGY_FASTaZSTD_dfastaSTRATEGY_DFASTaZSTD_greedyaSTRATEGY_GREEDYaZSTD_lazyaSTRATEGY_LAZYaZSTD_lazy2aSTRATEGY_LAZY2aZSTD_btlazy2aSTRATEGY_BTLAZY2aZSTD_btoptaSTRATEGY_BTOPTaZSTD_btultraaSTRATEGY_BTULTRAaZSTD_btultra2aSTRATEGY_BTULTRA2aZSTD_dct_autoaZSTD_dct_rawContentaZSTD_dct_fullDictaZSTD_f_zstd1aFORMAT_ZSTD1aZSTD_f_zstd1_magiclessaFORMAT_ZSTD1_MAGICLESSuzstandard.backend_cffia__module__uRepresents a segment within a ``BufferWithSegments``.

    This type is essentially a reference to N bytes within a
    ``BufferWithSegments``.

    The object conforms to the buffer protocol.
    aBufferSegmenta__qualname__uBufferSegment.offseta__len__uBufferSegment.__len__atobytesuBufferSegment.tobytesTuRepresents an array of ``(offset, length)`` integers.

    This type is effectively an index used by :py:class:`BufferWithSegments`.

    The array members are 64-bit unsigned integers using host/native bit order.

    Instances conform to the buffer protocol.
    aBufferSegmentsuA memory buffer containing N discrete items of known lengths.

    This type is essentially a fixed size memory address and an array
    of 2-tuples of ``(offset, length)`` 64-bit unsigned native-endian
    integers defining the byte offset and length of each segment within
    the buffer.

    Instances behave like containers.

    Instances also conform to the buffer protocol. So a reference to the
    backing bytes can be obtained via ``memoryview(o)``. A *copy* of the
    backing bytes can be obtained via ``.tobytes()``.

    This type exists to facilitate operations against N>1 items without
    the overhead of Python object creation and management. Used with
    APIs like :py:meth:`ZstdDecompressor.multi_decompress_to_buffer`, it
    is possible to decompress many objects in parallel without the GIL
    held, leading to even better performance.
    aBufferWithSegmentsuBufferWithSegments.sizeuBufferWithSegments.__len__uBufferWithSegments.__getitem__asegmentsuBufferWithSegments.segmentsuBufferWithSegments.tobytesuA virtual spanning view over multiple BufferWithSegments.

    Instances are constructed from 1 or more :py:class:`BufferWithSegments`
    instances. The resulting object behaves like an ordered sequence whose
    members are the segments within each ``BufferWithSegments``.

    If the object is composed of 2 ``BufferWithSegments`` instances with the
    first having 2 segments and the second have 3 segments, then ``b[0]``
    and ``b[1]`` access segments in the first object and ``b[2]``, ``b[3]``,
    and ``b[4]`` access segments from the second.
    aBufferWithSegmentsCollectionuBufferWithSegmentsCollection.__len__uBufferWithSegmentsCollection.__getitem__TEExceptiona__prepare__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>a__orig_bases__TOobjectuLow-level zstd compression parameters.

    This type represents a collection of parameters to control how zstd
    compression is performed.

    Instances can be constructed from raw parameters or derived from a
    base set of defaults specified from a compression level (recommended)
    via :py:meth:`ZstdCompressionParameters.from_level`.

    >>> # Derive compression settings for compression level 7.
    >>> params = zstandard.ZstdCompressionParameters.from_level(7)

    >>> # With an input size of 1MB
    >>> params = zstandard.ZstdCompressionParameters.from_level(7, source_size=1048576)

    Using ``from_level()``, it is also possible to override individual compression
    parameters or to define additional settings that aren't automatically derived.
    e.g.:

    >>> params = zstandard.ZstdCompressionParameters.from_level(4, window_log=10)
    >>> params = zstandard.ZstdCompressionParameters.from_level(5, threads=4)

    Or you can define low-level compression settings directly:

    >>> params = zstandard.ZstdCompressionParameters(window_log=12, enable_ldm=True)

    Once a ``ZstdCompressionParameters`` instance is obtained, it can be used to
    configure a compressor:

    >>> cctx = zstandard.ZstdCompressor(compression_params=params)

    Some of these are very low-level settings. It may help to consult the official
    zstandard documentation for their behavior. Look for the ``ZSTD_p_*`` constants
    in ``zstd.h`` (https://github.com/facebook/zstd/blob/dev/lib/zstd.h).
    astaticmethodafrom_leveluZstdCompressionParameters.from_levelTlppppppplllppllpppplla__init__uZstdCompressionParameters.__init__apropertyuZstdCompressionParameters.formatuZstdCompressionParameters.compression_leveluZstdCompressionParameters.window_loguZstdCompressionParameters.hash_loguZstdCompressionParameters.chain_loguZstdCompressionParameters.search_loguZstdCompressionParameters.min_matchuZstdCompressionParameters.target_lengthuZstdCompressionParameters.strategyuZstdCompressionParameters.write_content_sizeuZstdCompressionParameters.write_checksumuZstdCompressionParameters.write_dict_iduZstdCompressionParameters.job_sizeuZstdCompressionParameters.overlap_loguZstdCompressionParameters.force_max_windowuZstdCompressionParameters.enable_ldmuZstdCompressionParameters.ldm_hash_loguZstdCompressionParameters.ldm_min_matchuZstdCompressionParameters.ldm_bucket_size_loguZstdCompressionParameters.ldm_hash_rate_loguZstdCompressionParameters.threadsaestimated_compression_context_sizeuZstdCompressionParameters.estimated_compression_context_sizeaestimate_decompression_context_sizeuWritable compressing stream wrapper.

    ``ZstdCompressionWriter`` is a write-only stream interface for writing
    compressed data to another stream.

    This type conforms to the ``io.RawIOBase`` interface and should be usable
    by any type that operates against a *file-object* (``typing.BinaryIO``
    in Python type hinting speak). Only methods that involve writing will do
    useful things.

    As data is written to this stream (e.g. via ``write()``), that data
    is sent to the compressor. As compressed data becomes available from
    the compressor, it is sent to the underlying stream by calling its
    ``write()`` method.

    Both ``write()`` and ``flush()`` return the number of bytes written to the
    object's ``write()``. In many cases, small inputs do not accumulate enough
    data to cause a write and ``write()`` will return ``0``.

    Calling ``close()`` will mark the stream as closed and subsequent I/O
    operations will raise ``ValueError`` (per the documented behavior of
    ``io.RawIOBase``). ``close()`` will also call ``close()`` on the underlying
    stream if such a method exists and the instance was constructed with
    ``closefd=True``

    Instances are obtained by calling :py:meth:`ZstdCompressor.stream_writer`.

    Typically usage is as follows:

    >>> cctx = zstandard.ZstdCompressor(level=10)
    >>> compressor = cctx.stream_writer(fh)
    >>> compressor.write(b"chunk 0\n")
    >>> compressor.write(b"chunk 1\n")
    >>> compressor.flush()
    >>> # Receiver will be able to decode ``chunk 0\nchunk 1\n`` at this point.
    >>> # Receiver is also expecting more data in the zstd *frame*.
    >>>
    >>> compressor.write(b"chunk 2\n")
    >>> compressor.flush(zstandard.FLUSH_FRAME)
    >>> # Receiver will be able to decode ``chunk 0\nchunk 1\nchunk 2``.
    >>> # Receiver is expecting no more data, as the zstd frame is closed.
    >>> # Any future calls to ``write()`` at this point will construct a new
    >>> # zstd frame.

    Instances can be used as context managers. Exiting the context manager is
    the equivalent of calling ``close()``, which is equivalent to calling
    ``flush(zstandard.FLUSH_FRAME)``:

    >>> cctx = zstandard.ZstdCompressor(level=10)
    >>> with cctx.stream_writer(fh) as compressor:
    ...     compressor.write(b'chunk 0')
    ...     compressor.write(b'chunk 1')
    ...     ...

    .. important::

       If ``flush(FLUSH_FRAME)`` is not called, emitted data doesn't
       constitute a full zstd *frame* and consumers of this data may complain
       about malformed input. It is recommended to use instances as a context
       manager to ensure *frames* are properly finished.

    If the size of the data being fed to this streaming compressor is known,
    you can declare it before compression begins:

    >>> cctx = zstandard.ZstdCompressor()
    >>> with cctx.stream_writer(fh, size=data_len) as compressor:
    ...     compressor.write(chunk0)
    ...     compressor.write(chunk1)
    ...     ...

    Declaring the size of the source data allows compression parameters to
    be tuned. And if ``write_content_size`` is used, it also results in the
    content size being written into the frame header of the output data.

    The size of chunks being ``write()`` to the destination can be specified:

    >>> cctx = zstandard.ZstdCompressor()
    >>> with cctx.stream_writer(fh, write_size=32768) as compressor:
    ...     ...

    To see how much memory is being used by the streaming compressor:

    >>> cctx = zstandard.ZstdCompressor()
    >>> with cctx.stream_writer(fh) as compressor:
    ...     ...
    ...     byte_size = compressor.memory_size()

    Thte total number of bytes written so far are exposed via ``tell()``:

    >>> cctx = zstandard.ZstdCompressor()
    >>> with cctx.stream_writer(fh) as compressor:
    ...     ...
    ...     total_written = compressor.tell()

    ``stream_writer()`` accepts a ``write_return_read`` boolean argument to
    control the return value of ``write()``. When ``False`` (the default),
    ``write()`` returns the number of bytes that were ``write()``'en to the
    underlying object. When ``True``, ``write()`` returns the number of bytes
    read from the input that were subsequently written to the compressor.
    ``True`` is the *proper* behavior for ``write()`` as specified by the
    ``io.RawIOBase`` interface and will become the default value in a future
    release.
    TtuZstdCompressionWriter.__init__a__enter__uZstdCompressionWriter.__enter__a__exit__uZstdCompressionWriter.__exit__a__iter__uZstdCompressionWriter.__iter__a__next__uZstdCompressionWriter.__next__amemory_sizeuZstdCompressionWriter.memory_sizeuZstdCompressionWriter.filenouZstdCompressionWriter.closeacloseduZstdCompressionWriter.closedaisattyuZstdCompressionWriter.isattyareadableuZstdCompressionWriter.readableTlareadlineuZstdCompressionWriter.readlineareadlinesuZstdCompressionWriter.readlinesTnaseekuZstdCompressionWriter.seekaseekableuZstdCompressionWriter.seekableatruncateuZstdCompressionWriter.truncateawritableuZstdCompressionWriter.writableawritelinesuZstdCompressionWriter.writelinesuZstdCompressionWriter.readuZstdCompressionWriter.readallareadintouZstdCompressionWriter.readintouZstdCompressionWriter.writeuZstdCompressionWriter.flushatelluZstdCompressionWriter.telluA compressor conforming to the API in Python's standard library.

    This type implements an API similar to compression types in Python's
    standard library such as ``zlib.compressobj`` and ``bz2.BZ2Compressor``.
    This enables existing code targeting the standard library API to swap
    in this type to achieve zstd compression.

    .. important::

       The design of this API is not ideal for optimal performance.

       The reason performance is not optimal is because the API is limited to
       returning a single buffer holding compressed data. When compressing
       data, we don't know how much data will be emitted. So in order to
       capture all this data in a single buffer, we need to perform buffer
       reallocations and/or extra memory copies. This can add significant
       overhead depending on the size or nature of the compressed data how
       much your application calls this type.

       If performance is critical, consider an API like
       :py:meth:`ZstdCompressor.stream_reader`,
       :py:meth:`ZstdCompressor.stream_writer`,
       :py:meth:`ZstdCompressor.chunker`, or
       :py:meth:`ZstdCompressor.read_to_iter`, which result in less overhead
       managing buffers.

    Instances are obtained by calling :py:meth:`ZstdCompressor.compressobj`.

    Here is how this API should be used:

    >>> cctx = zstandard.ZstdCompressor()
    >>> cobj = cctx.compressobj()
    >>> data = cobj.compress(b"raw input 0")
    >>> data = cobj.compress(b"raw input 1")
    >>> data = cobj.flush()

    Or to flush blocks:

    >>> cctx.zstandard.ZstdCompressor()
    >>> cobj = cctx.compressobj()
    >>> data = cobj.compress(b"chunk in first block")
    >>> data = cobj.flush(zstandard.COMPRESSOBJ_FLUSH_BLOCK)
    >>> data = cobj.compress(b"chunk in second block")
    >>> data = cobj.flush()

    For best performance results, keep input chunks under 256KB. This avoids
    extra allocations for a large output object.

    It is possible to declare the input size of the data that will be fed
    into the compressor:

    >>> cctx = zstandard.ZstdCompressor()
    >>> cobj = cctx.compressobj(size=6)
    >>> data = cobj.compress(b"foobar")
    >>> data = cobj.flush()
    uZstdCompressionObj.compressuZstdCompressionObj.flushuCompress data to uniformly sized chunks.

    This type allows you to iteratively feed chunks of data into a compressor
    and produce output chunks of uniform size.

    ``compress()``, ``flush()``, and ``finish()`` all return an iterator of
    ``bytes`` instances holding compressed data. The iterator may be empty.
    Callers MUST iterate through all elements of the returned iterator before
    performing another operation on the object or else the compressor's
    internal state may become confused. This can result in an exception being
    raised or malformed data being emitted.

    All chunks emitted by ``compress()`` will have a length of the configured
    chunk size.

    ``flush()`` and ``finish()`` may return a final chunk smaller than
    the configured chunk size.

    Instances are obtained by calling :py:meth:`ZstdCompressor.chunker`.

    Here is how the API should be used:

    >>> cctx = zstandard.ZstdCompressor()
    >>> chunker = cctx.chunker(chunk_size=32768)
    >>>
    >>> with open(path, 'rb') as fh:
    ...     while True:
    ...         in_chunk = fh.read(32768)
    ...         if not in_chunk:
    ...             break
    ...
    ...         for out_chunk in chunker.compress(in_chunk):
    ...             # Do something with output chunk of size 32768.
    ...
    ...     for out_chunk in chunker.finish():
    ...         # Do something with output chunks that finalize the zstd frame.

    This compressor type is often a better alternative to
    :py:class:`ZstdCompressor.compressobj` because it has better performance
    properties.

    ``compressobj()`` will emit output data as it is available. This results
    in a *stream* of output chunks of varying sizes. The consistency of the
    output chunk size with ``chunker()`` is more appropriate for many usages,
    such as sending compressed data to a socket.

    ``compressobj()`` may also perform extra memory reallocations in order
    to dynamically adjust the sizes of the output chunks. Since ``chunker()``
    output chunks are all the same size (except for flushed or final chunks),
    there is less memory allocation/copying overhead.
    uZstdCompressionChunker.__init__uReadable compressing stream wrapper.

    ``ZstdCompressionReader`` is a read-only stream interface for obtaining
    compressed data from a source.

    This type conforms to the ``io.RawIOBase`` interface and should be usable
    by any type that operates against a *file-object* (``typing.BinaryIO``
    in Python type hinting speak).

    Instances are neither writable nor seekable (even if the underlying
    source is seekable). ``readline()`` and ``readlines()`` are not implemented
    because they don't make sense for compressed data. ``tell()`` returns the
    number of compressed bytes emitted so far.

    Instances are obtained by calling :py:meth:`ZstdCompressor.stream_reader`.

    In this example, we open a file for reading and then wrap that file
    handle with a stream from which compressed data can be ``read()``.

    >>> with open(path, 'rb') as fh:
    ...     cctx = zstandard.ZstdCompressor()
    ...     reader = cctx.stream_reader(fh)
    ...     while True:
    ...         chunk = reader.read(16384)
    ...         if not chunk:
    ...             break
    ...
    ...         # Do something with compressed chunk.

    Instances can also be used as context managers:

    >>> with open(path, 'rb') as fh:
    ...     cctx = zstandard.ZstdCompressor()
    ...     with cctx.stream_reader(fh) as reader:
    ...         while True:
    ...             chunk = reader.read(16384)
    ...             if not chunk:
    ...                 break
    ...
    ...             # Do something with compressed chunk.

    When the context manager exits or ``close()`` is called, the stream is
    closed, underlying resources are released, and future operations against
    the compression stream will fail.

    ``stream_reader()`` accepts a ``size`` argument specifying how large the
    input stream is. This is used to adjust compression parameters so they are
    tailored to the source size. e.g.

    >>> with open(path, 'rb') as fh:
    ...     cctx = zstandard.ZstdCompressor()
    ...     with cctx.stream_reader(fh, size=os.stat(path).st_size) as reader:
    ...         ...

    If the ``source`` is a stream, you can specify how large ``read()``
    requests to that stream should be via the ``read_size`` argument.
    It defaults to ``zstandard.COMPRESSION_RECOMMENDED_INPUT_SIZE``. e.g.

    >>> with open(path, 'rb') as fh:
    ...     cctx = zstandard.ZstdCompressor()
    ...     # Will perform fh.read(8192) when obtaining data to feed into the
    ...     # compressor.
    ...     with cctx.stream_reader(fh, read_size=8192) as reader:
    ...         ...
    uZstdCompressionReader.__init__uZstdCompressionReader.__enter__uZstdCompressionReader.__exit__uZstdCompressionReader.readableuZstdCompressionReader.writableuZstdCompressionReader.seekableuZstdCompressionReader.readlineuZstdCompressionReader.readlinesuZstdCompressionReader.writeuZstdCompressionReader.writelinesuZstdCompressionReader.isattyuZstdCompressionReader.flushuZstdCompressionReader.closeuZstdCompressionReader.closeduZstdCompressionReader.telluZstdCompressionReader.readalluZstdCompressionReader.__iter__uZstdCompressionReader.__next__anextuZstdCompressionReader._read_inputuZstdCompressionReader._compress_into_bufferuZstdCompressionReader.readaread1uZstdCompressionReader.read1uZstdCompressionReader.readintoareadinto1uZstdCompressionReader.readinto1aZstdCompressoru
    Create an object used to perform Zstandard compression.

    Each instance is essentially a wrapper around a ``ZSTD_CCtx`` from
    zstd's C API.

    An instance can compress data various ways. Instances can be used
    multiple times. Each compression operation will use the compression
    parameters defined at construction time.

    .. note:

       When using a compression dictionary and multiple compression
       operations are performed, the ``ZstdCompressionParameters`` derived
       from an integer compression ``level`` and the first compressed data's
       size will be reused for all subsequent operations. This may not be
       desirable if source data sizes vary significantly.

    ``compression_params`` is mutually exclusive with ``level``,
    ``write_checksum``, ``write_content_size``, ``write_dict_id``, and
    ``threads``.

    Assume that each ``ZstdCompressor`` instance can only handle a single
    logical compression operation at the same time. i.e. if you call a method
    like ``stream_reader()`` to obtain multiple objects derived from the same
    ``ZstdCompressor`` instance and attempt to use them simultaneously, errors
    will likely occur.

    If you need to perform multiple logical compression operations and you
    can't guarantee those operations are temporally non-overlapping, you need
    to obtain multiple ``ZstdCompressor`` instances.

    Unless specified otherwise, assume that no two methods of
    ``ZstdCompressor`` instances can be called from multiple Python
    threads simultaneously. In other words, assume instances are not thread safe
    unless stated otherwise.

    :param level:
       Integer compression level. Valid values are all negative integers
       through 22. Lower values generally yield faster operations with lower
       compression ratios. Higher values are generally slower but compress
       better. The default is 3, which is what the ``zstd`` CLI uses. Negative
       levels effectively engage ``--fast`` mode from the ``zstd`` CLI.
    :param dict_data:
       A ``ZstdCompressionDict`` to be used to compress with dictionary
        data.
    :param compression_params:
       A ``ZstdCompressionParameters`` instance defining low-level compression
       parameters. If defined, this will overwrite the ``level`` argument.
    :param write_checksum:
       If True, a 4 byte content checksum will be written with the compressed
       data, allowing the decompressor to perform content verification.
    :param write_content_size:
       If True (the default), the decompressed content size will be included
       in the header of the compressed data. This data will only be written if
       the compressor knows the size of the input data.
    :param write_dict_id:
       Determines whether the dictionary ID will be written into the compressed
       data. Defaults to True. Only adds content to the compressed data if
       a dictionary is being used.
    :param threads:
       Number of threads to use to compress data concurrently. When set,
       compression operations are performed on multiple threads. The default
       value (0) disables multi-threaded compression. A value of ``-1`` means
       to set the number of threads to the number of detected logical CPUs.
    TlnnnnnluZstdCompressor.__init__uZstdCompressor._setup_cctxuZstdCompressor.memory_sizeuZstdCompressor.compressacompressobjuZstdCompressor.compressobjachunkeruZstdCompressor.chunkeracopy_streamuZstdCompressor.copy_streamastream_readeruZstdCompressor.stream_readerastream_writeruZstdCompressor.stream_writeramulti_compress_to_bufferuZstdCompressor.multi_compress_to_bufferaframe_progressionuZstdCompressor.frame_progressionuInformation about a zstd frame.

    Instances have the following attributes:

    ``content_size``
       Integer size of original, uncompressed content. This will be ``0`` if the
       original content size isn't written to the frame (controlled with the
       ``write_content_size`` argument to ``ZstdCompressor``) or if the input
       content size was ``0``.

    ``window_size``
       Integer size of maximum back-reference distance in compressed data.

    ``dict_id``
       Integer of dictionary ID used for compression. ``0`` if no dictionary
       ID was used or if the dictionary ID was ``0``.

    ``has_checksum``
       Bool indicating whether a 4 byte content checksum is stored at the end
       of the frame.
    uFrameParameters.__init__aframe_content_sizeaframe_header_sizeaget_frame_parametersuRepresents a computed compression dictionary.

    Instances are obtained by calling :py:func:`train_dictionary` or by
    passing bytes obtained from another source into the constructor.

    Instances can be constructed from bytes:

    >>> dict_data = zstandard.ZstdCompressionDict(data)

    It is possible to construct a dictionary from *any* data. If the data
    doesn't begin with a magic header, it will be treated as a *prefix*
    dictionary. *Prefix* dictionaries allow compression operations to
    reference raw data within the dictionary.

    It is possible to force the use of *prefix* dictionaries or to require
    a dictionary header:

    >>> dict_data = zstandard.ZstdCompressionDict(data, dict_type=zstandard.DICT_TYPE_RAWCONTENT)
    >>> dict_data = zstandard.ZstdCompressionDict(data, dict_type=zstandard.DICT_TYPE_FULLDICT)

    You can see how many bytes are in the dictionary by calling ``len()``:

    >>> dict_data = zstandard.train_dictionary(size, samples)
    >>> dict_size = len(dict_data)  # will not be larger than ``size``

    Once you have a dictionary, you can pass it to the objects performing
    compression and decompression:

    >>> dict_data = zstandard.train_dictionary(131072, samples)
    >>> cctx = zstandard.ZstdCompressor(dict_data=dict_data)
    >>> for source_data in input_data:
    ...     compressed = cctx.compress(source_data)
    ...     # Do something with compressed data.
    ...
    >>> dctx = zstandard.ZstdDecompressor(dict_data=dict_data)
    >>> for compressed_data in input_data:
    ...     buffer = io.BytesIO()
    ...     with dctx.stream_writer(buffer) as decompressor:
    ...         decompressor.write(compressed_data)
    ...         # Do something with raw data in ``buffer``.

    Dictionaries have unique integer IDs. You can retrieve this ID via:

    >>> dict_id = zstandard.dictionary_id(dict_data)

    You can obtain the raw data in the dict (useful for persisting and constructing
    a ``ZstdCompressionDict`` later) via ``as_bytes()``:

    >>> dict_data = zstandard.train_dictionary(size, samples)
    >>> raw_data = dict_data.as_bytes()

    By default, when a ``ZstdCompressionDict`` is *attached* to a
    ``ZstdCompressor``, each ``ZstdCompressor`` performs work to prepare the
    dictionary for use. This is fine if only 1 compression operation is being
    performed or if the ``ZstdCompressor`` is being reused for multiple operations.
    But if multiple ``ZstdCompressor`` instances are being used with the dictionary,
    this can add overhead.

    It is possible to *precompute* the dictionary so it can readily be consumed
    by multiple ``ZstdCompressor`` instances:

    >>> d = zstandard.ZstdCompressionDict(data)
    >>> # Precompute for compression level 3.
    >>> d.precompute_compress(level=3)
    >>> # Precompute with specific compression parameters.
    >>> params = zstandard.ZstdCompressionParameters(...)
    >>> d.precompute_compress(compression_params=params)

    .. note::

       When a dictionary is precomputed, the compression parameters used to
       precompute the dictionary overwrite some of the compression parameters
       specified to ``ZstdCompressor``.

    :param data:
       Dictionary data.
    :param dict_type:
       Type of dictionary. One of the ``DICT_TYPE_*`` constants.
    uZstdCompressionDict.__init__uZstdCompressionDict.__len__uZstdCompressionDict.dict_iduZstdCompressionDict.as_bytesTlnaprecompute_compressuZstdCompressionDict.precompute_compressuZstdCompressionDict._ddictT
lppZlpppppatrain_dictionaryuA standard library API compatible decompressor.

    This type implements a compressor that conforms to the API by other
    decompressors in Python's standard library. e.g. ``zlib.decompressobj``
    or ``bz2.BZ2Decompressor``. This allows callers to use zstd compression
    while conforming to a similar API.

    Compressed data chunks are fed into ``decompress(data)`` and
    uncompressed output (or an empty bytes) is returned. Output from
    subsequent calls needs to be concatenated to reassemble the full
    decompressed byte sequence.

    Each instance is single use: once an input frame is decoded,
    ``decompress()`` can no longer be called.

    >>> dctx = zstandard.ZstdDecompressor()
    >>> dobj = dctx.decompressobj()
    >>> data = dobj.decompress(compressed_chunk_0)
    >>> data = dobj.decompress(compressed_chunk_1)

    By default, calls to ``decompress()`` write output data in chunks of size
    ``DECOMPRESSION_RECOMMENDED_OUTPUT_SIZE``. These chunks are concatenated
    before being returned to the caller. It is possible to define the size of
    these temporary chunks by passing ``write_size`` to ``decompressobj()``:

    >>> dctx = zstandard.ZstdDecompressor()
    >>> dobj = dctx.decompressobj(write_size=1048576)

    .. note::

       Because calls to ``decompress()`` may need to perform multiple
       memory (re)allocations, this streaming decompression API isn't as
       efficient as other APIs.
    uZstdDecompressionObj.__init__adecompressuZstdDecompressionObj.decompressTluEffectively a no-op.

        Implemented for compatibility with the standard library APIs.

        Safe to call at any time.

        :return:
           Empty bytes.
        uZstdDecompressionObj.flushaunused_datauZstdDecompressionObj.unused_datauData that has not yet been fed into the decompressor.aunconsumed_tailuZstdDecompressionObj.unconsumed_tailaeofuZstdDecompressionObj.eofuRead only decompressor that pull uncompressed data from another stream.

    This type provides a read-only stream interface for performing transparent
    decompression from another stream or data source. It conforms to the
    ``io.RawIOBase`` interface. Only methods relevant to reading are
    implemented.

    >>> with open(path, 'rb') as fh:
    >>> dctx = zstandard.ZstdDecompressor()
    >>> reader = dctx.stream_reader(fh)
    >>> while True:
    ...     chunk = reader.read(16384)
    ...     if not chunk:
    ...         break
    ...     # Do something with decompressed chunk.

    The stream can also be used as a context manager:

    >>> with open(path, 'rb') as fh:
    ...     dctx = zstandard.ZstdDecompressor()
    ...     with dctx.stream_reader(fh) as reader:
    ...         ...

    When used as a context manager, the stream is closed and the underlying
    resources are released when the context manager exits. Future operations
    against the stream will fail.

    The ``source`` argument to ``stream_reader()`` can be any object with a
    ``read(size)`` method or any object implementing the *buffer protocol*.

    If the ``source`` is a stream, you can specify how large ``read()`` requests
    to that stream should be via the ``read_size`` argument. It defaults to
    ``zstandard.DECOMPRESSION_RECOMMENDED_INPUT_SIZE``.:

    >>> with open(path, 'rb') as fh:
    ...     dctx = zstandard.ZstdDecompressor()
    ...     # Will perform fh.read(8192) when obtaining data for the decompressor.
    ...     with dctx.stream_reader(fh, read_size=8192) as reader:
    ...         ...

    Instances are *partially* seekable. Absolute and relative positions
    (``SEEK_SET`` and ``SEEK_CUR``) forward of the current position are
    allowed. Offsets behind the current read position and offsets relative
    to the end of stream are not allowed and will raise ``ValueError``
    if attempted.

    ``tell()`` returns the number of decompressed bytes read so far.

    Not all I/O methods are implemented. Notably missing is support for
    ``readline()``, ``readlines()``, and linewise iteration support. This is
    because streams operate on binary data - not text data. If you want to
    convert decompressed output to text, you can chain an ``io.TextIOWrapper``
    to the stream:

    >>> with open(path, 'rb') as fh:
    ...     dctx = zstandard.ZstdDecompressor()
    ...     stream_reader = dctx.stream_reader(fh)
    ...     text_stream = io.TextIOWrapper(stream_reader, encoding='utf-8')
    ...     for line in text_stream:
    ...         ...
    uZstdDecompressionReader.__init__uZstdDecompressionReader.__enter__uZstdDecompressionReader.__exit__uZstdDecompressionReader.readableuZstdDecompressionReader.writableuZstdDecompressionReader.seekableuZstdDecompressionReader.readlineuZstdDecompressionReader.readlinesuZstdDecompressionReader.writeuZstdDecompressionReader.writelinesuZstdDecompressionReader.isattyuZstdDecompressionReader.flushuZstdDecompressionReader.closeuZstdDecompressionReader.closeduZstdDecompressionReader.telluZstdDecompressionReader.readalluZstdDecompressionReader.__iter__uZstdDecompressionReader.__next__uZstdDecompressionReader._read_inputuZstdDecompressionReader._decompress_into_bufferuZstdDecompressionReader.readuZstdDecompressionReader.readintouZstdDecompressionReader.read1uZstdDecompressionReader.readinto1uZstdDecompressionReader.seeku
    Write-only stream wrapper that performs decompression.

    This type provides a writable stream that performs decompression and writes
    decompressed data to another stream.

    This type implements the ``io.RawIOBase`` interface. Only methods that
    involve writing will do useful things.

    Behavior is similar to :py:meth:`ZstdCompressor.stream_writer`: compressed
    data is sent to the decompressor by calling ``write(data)`` and decompressed
    output is written to the inner stream by calling its ``write(data)``
    method:

    >>> dctx = zstandard.ZstdDecompressor()
    >>> decompressor = dctx.stream_writer(fh)
    >>> # Will call fh.write() with uncompressed data.
    >>> decompressor.write(compressed_data)

    Instances can be used as context managers. However, context managers add no
    extra special behavior other than automatically calling ``close()`` when
    they exit.

    Calling ``close()`` will mark the stream as closed and subsequent I/O
    operations will raise ``ValueError`` (per the documented behavior of
    ``io.RawIOBase``). ``close()`` will also call ``close()`` on the
    underlying stream if such a method exists and the instance was created with
    ``closefd=True``.

    The size of chunks to ``write()`` to the destination can be specified:

    >>> dctx = zstandard.ZstdDecompressor()
    >>> with dctx.stream_writer(fh, write_size=16384) as decompressor:
    >>>    pass

    You can see how much memory is being used by the decompressor:

    >>> dctx = zstandard.ZstdDecompressor()
    >>> with dctx.stream_writer(fh) as decompressor:
    >>>    byte_size = decompressor.memory_size()

    ``stream_writer()`` accepts a ``write_return_read`` boolean argument to control
    the return value of ``write()``. When ``True`` (the default)``, ``write()``
    returns the number of bytes that were read from the input. When ``False``,
    ``write()`` returns the number of bytes that were ``write()`` to the inner
    stream.
    uZstdDecompressionWriter.__init__uZstdDecompressionWriter.__enter__uZstdDecompressionWriter.__exit__uZstdDecompressionWriter.__iter__uZstdDecompressionWriter.__next__uZstdDecompressionWriter.memory_sizeuZstdDecompressionWriter.closeuZstdDecompressionWriter.closeduZstdDecompressionWriter.filenouZstdDecompressionWriter.flushuZstdDecompressionWriter.isattyuZstdDecompressionWriter.readableuZstdDecompressionWriter.readlineuZstdDecompressionWriter.readlinesuZstdDecompressionWriter.seekuZstdDecompressionWriter.seekableuZstdDecompressionWriter.telluZstdDecompressionWriter.truncateuZstdDecompressionWriter.writableuZstdDecompressionWriter.writelinesuZstdDecompressionWriter.readuZstdDecompressionWriter.readalluZstdDecompressionWriter.readintouZstdDecompressionWriter.writeaZstdDecompressoru
    Context for performing zstandard decompression.

    Each instance is essentially a wrapper around a ``ZSTD_DCtx`` from zstd's
    C API.

    An instance can compress data various ways. Instances can be used multiple
    times.

    The interface of this class is very similar to
    :py:class:`zstandard.ZstdCompressor` (by design).

    Assume that each ``ZstdDecompressor`` instance can only handle a single
    logical compression operation at the same time. i.e. if you call a method
    like ``decompressobj()`` to obtain multiple objects derived from the same
    ``ZstdDecompressor`` instance and attempt to use them simultaneously, errors
    will likely occur.

    If you need to perform multiple logical decompression operations and you
    can't guarantee those operations are temporally non-overlapping, you need
    to obtain multiple ``ZstdDecompressor`` instances.

    Unless specified otherwise, assume that no two methods of
    ``ZstdDecompressor`` instances can be called from multiple Python
    threads simultaneously. In other words, assume instances are not thread safe
    unless stated otherwise.

    :param dict_data:
       Compression dictionary to use.
    :param max_window_size:
       Sets an upper limit on the window size for decompression operations in
       kibibytes. This setting can be used to prevent large memory allocations
       for inputs using large compression windows.
    :param format:
       Set the format of data for the decoder.

       By default this is ``zstandard.FORMAT_ZSTD1``. It can be set to
       ``zstandard.FORMAT_ZSTD1_MAGICLESS`` to allow decoding frames without
       the 4 byte magic header. Not all decompression APIs support this mode.
    uZstdDecompressor.__init__uZstdDecompressor.memory_sizeTlFtuZstdDecompressor.decompressuZstdDecompressor.stream_readeradecompressobjuZstdDecompressor.decompressobjuZstdDecompressor.stream_writeruZstdDecompressor.copy_streamadecompress_content_dict_chainuZstdDecompressor.decompress_content_dict_chainTnlamulti_decompress_to_bufferuZstdDecompressor.multi_decompress_to_bufferuZstdDecompressor._ensure_dctxuzstandard\backend_cffi.pyu<module zstandard.backend_cffi>Ta__class__TaselfTaselfaexc_typeaexc_valueaexc_tbTaselfwiTaselfacompressorachunk_sizeTaselfacompressorasourcearead_sizeaclosefdTaselfacompressorawriterasource_sizeawrite_sizeawrite_return_readaclosefdazresultTaselfadataadict_typewkwdTaselfadecompressorasourcearead_sizearead_across_framesaclosefdTaselfadecompressorawrite_sizeTaselfadecompressorawriterawrite_sizeawrite_return_readaclosefdTaselfadict_dataamax_window_sizeaformatadctxTaselfaformatacompression_levelawindow_logahash_logachain_logasearch_logamin_matchatarget_lengthastrategyawrite_content_sizeawrite_checksumawrite_dict_idajob_sizeaoverlap_logaforce_max_windowaenable_ldmaldm_hash_logaldm_min_matchaldm_bucket_size_logaldm_hash_rate_logathreadsaparamsTaselfafparamsT
aselfaleveladict_dataacompression_paramsawrite_checksumawrite_content_sizeawrite_dict_idathreadsaparamsacctxTaselfaout_bufferaold_posazresultTaselfaddictTaselfaout_bufferazresultTaselfaload_dictazresultTaparamsaparamaresultazresultTaparamsaresaattrsaparamavalueTaselfadataTaparamsaparamavalueazresultTaselfazresultadict_dataTazresultTaselfasizeachunk_sizeazresultTaselfwfTaselfadataadata_bufferadest_sizeaoutazresultaout_bufferain_bufferTaselfadataadata_bufferasourceachunksazresultTaselfadataadata_bufferazresultTaselfasizeazresultacobjT
aselfaifhaofharead_sizeawrite_sizeain_bufferaout_bufferadst_bufferatotal_readatotal_writeadataadata_bufferazresultTaselfaifhaofhasizearead_sizeawrite_sizeazresultain_bufferaout_bufferadst_bufferatotal_readatotal_writeadataadata_bufferTaselfadataain_bufferaout_bufferadata_bufferadst_bufferachunksazresultT
aselfadataamax_output_sizearead_across_framesaallow_extra_dataadata_bufferaoutput_sizearesult_bufferaresult_sizeaout_bufferain_bufferazresultacountTaselfaframesachunkachunk_bufferaparamsazresultalast_bufferaout_bufferain_bufferwiadest_bufferTaselfawrite_sizeTaselfazresultTaselfaflush_modeaflushatotal_writeaout_bufferain_bufferazresultwfTaselfaflush_modeaz_flush_modeain_bufferachunksazresultTaselfalengthTadataadata_bufferasizeTadataadata_bufferazresultTaselfaprogressionTalevelasource_sizeadict_sizeakwargsaparamsaargsaargaattrTadataaparamsadata_bufferazresultTaselfadataathreadsTaselfaframesadecompressed_sizesathreadsTaselfalevelacompression_paramsacparamsacdictTaselfasizeTaselfasizeadst_bufferaout_bufferTaselfasizeadst_bufferaout_bufferaold_posazresultTaselfareaderaread_sizeawrite_sizeaskip_bytesahave_readabuffer_offsetasizeain_bufferaout_bufferadst_bufferaread_resultaremainingaslice_sizearead_bufferazresultadataTaselfareaderasizearead_sizeawrite_sizeahave_readabuffer_offsetazresultain_bufferaout_bufferadst_bufferaread_resultaremainingaslice_sizearead_bufferadataTaselfachunksachunkTaselfwbTaselfwbadest_bufferaout_bufferTaselfwbadest_bufferaout_bufferaold_posazresultTaselfahintTaselfaoffsetawhenceTaselfaposawhencearead_amountaresultTaselfasourcearead_sizearead_across_framesaclosefdTaselfasourceasizearead_sizeaclosefdazresultTaselfawriterasizeawrite_sizeawrite_return_readaclosefdTaselfawriterawrite_sizeawrite_return_readaclosefdTadict_sizeasampleswkwdwfasplit_pointaaccelanotificationsadict_idalevelastepsathreadsatotal_sizeasamples_bufferasample_sizesaoffsetwiasamplewladict_dataadparamsazresultamsgTaselfadataatotal_writeadata_bufferain_bufferaout_bufferazresultTaselfadataatotal_writeain_bufferaout_bufferadata_bufferadst_bufferadctxazresultTaselfaignoredTaselfalinesu.zstandardqeareplaceTwtuTwrarbaZstdDecompressorwrarbTwwawbwaaabwxaxbaZstdCompressorwwaendswithTwbwbaValueErroruInvalid mode: {!r}ahasattraosaPathLikeastrabytesaisinstanceabuiltinsaopenaraw_open_modeareadawriteaboolaTypeErrorTufilename must be a str, bytes, file or PathLike objectastream_readerTaclosefdastream_writeraRuntimeErrorTulogic error in zstandard.open() handling open modeanormalized_modeaioaTextIOWrapperTaencodingaerrorsanewlineuCreate a file object with zstd (de)compression.

    The object returned from this function will be a
    :py:class:`ZstdDecompressionReader` if opened for reading in binary mode,
    a :py:class:`ZstdCompressionWriter` if opened for writing in binary mode,
    or an ``io.TextIOWrapper`` if opened for reading or writing in text mode.

    :param filename:
       ``bytes``, ``str``, or ``os.PathLike`` defining a file to open or a
       file object (with a ``read()`` or ``write()`` method).
    :param mode:
       ``str`` File open mode. Accepts any of the open modes recognized by
       ``open()``.
    :param cctx:
       ``ZstdCompressor`` to use for compression. If not specified and file
       is opened for writing, the default ``ZstdCompressor`` will be used.
    :param dctx:
       ``ZstdDecompressor`` to use for decompression. If not specified and file
       is opened for reading, the default ``ZstdDecompressor`` will be used.
    :param encoding:
        ``str`` that defines text encoding to use when file is opened in text
        mode.
    :param errors:
       ``str`` defining text encoding error handling mode.
    :param newline:
       ``str`` defining newline to use in text mode.
    :param closefd:
       ``bool`` whether to close the file when the returned object is closed.
        Only used if a file object is passed. If a filename is specified, the
        opened file is always closed when the returned object is closed.
    TalevelacompressuCompress source data using the zstd compression format.

    This performs one-shot compression using basic/default compression
    settings.

    This method is provided for convenience and is equivalent to calling
    ``ZstdCompressor(level=level).compress(data)``.

    If you find yourself calling this function in a tight loop,
    performance will be greater if you construct a single ``ZstdCompressor``
    and repeatedly call ``compress()`` on it.
    adecompressTamax_output_sizeuDecompress a zstd frame into its original data.

    This performs one-shot decompression using basic/default compression
    settings.

    This method is provided for convenience and is equivalent to calling
    ``ZstdDecompressor().decompress(data, max_output_size=max_output_size)``.

    If you find yourself calling this function in a tight loop, performance
    will be greater if you construct a single ``ZstdDecompressor`` and
    repeatedly call ``decompress()`` on it.
    uPython interface to the Zstandard (zstd) compression library.a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_zstandardu\not_existinga__path__la__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aabsolute_importaunicode_literalsaplatformaByteStringTaPYTHON_ZSTANDARD_IMPORT_POLICYadefaulta_module_policyadefaultapython_implementationTaCPythonabackend_cTw*lacextabackendTaPyPyabackend_cffiacffiaImportErroracffi_fallbackarustabackend_rustuunknown module import policy: %s; use default, cffi_fallback, cext, or cffiu0.21.0a__version__a_MODE_CLOSEDa_MODE_READla_MODE_WRITETarbnnnnnnTladataalevelaintareturnTlamax_output_sizeuzstandard\__init__.pyu<module zstandard>TadataalevelacctxTadataamax_output_sizeadctxTafilenameamodeacctxadctxaencodingaerrorsanewlineaclosefdanormalized_modeaopen_modearaw_open_modeatypesainner_fhafhu.

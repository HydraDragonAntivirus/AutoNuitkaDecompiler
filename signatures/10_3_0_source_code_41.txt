.Cryptodome.Cipher.AES]apopTause_aesnitTakeyuMissing 'key' parameterakey_sizeuIncorrect AES key length (%d bytes)a_raw_aesni_libaAESNI_start_operationaAESNI_stop_operationa_raw_aes_libaAES_start_operationaAES_stop_operationaVoidPointerac_uint8_ptrac_size_taaddress_ofuError %X while instantiating the AES cipheraSmartPointeragetuThis method instantiates and returns a handle to a low-level
    base cipher. It will absorb named parameters in the process.uPoly1305 with AES requires a 32-byte keyaget_random_bytesTluPoly1305 with AES requires a 16-byte nonceanew:nlnaMODE_ECBaencryptanonce:lnnuDerive a tuple (r, s, nonce) for a Poly1305 MAC.

    If nonce is ``None``, a new 16-byte nonce is generated.
    aadd_aes_modesa_create_cipherasysamodulesuCryptodome.Cipher.AESuCreate a new AES cipher.

    Args:
      key(bytes/bytearray/memoryview):
        The secret key to use in the symmetric cipher.

        It must be 16 (*AES-128)*, 24 (*AES-192*) or 32 (*AES-256*) bytes long.

        For ``MODE_SIV`` only, it doubles to 32, 48, or 64 bytes.
      mode (a ``MODE_*`` constant):
        The chaining mode to use for encryption or decryption.
        If in doubt, use ``MODE_EAX``.

    Keyword Args:
      iv (bytes/bytearray/memoryview):
        (Only applicable for ``MODE_CBC``, ``MODE_CFB``, ``MODE_OFB``,
        and ``MODE_OPENPGP`` modes).

        The initialization vector to use for encryption or decryption.

        For ``MODE_CBC``, ``MODE_CFB``, and ``MODE_OFB`` it must be 16 bytes long.

        For ``MODE_OPENPGP`` mode only,
        it must be 16 bytes long for encryption
        and 18 bytes for decryption (in the latter case, it is
        actually the *encrypted* IV which was prefixed to the ciphertext).

        If not provided, a random byte string is generated (you must then
        read its value with the :attr:`iv` attribute).

      nonce (bytes/bytearray/memoryview):
        (Only applicable for ``MODE_CCM``, ``MODE_EAX``, ``MODE_GCM``,
        ``MODE_SIV``, ``MODE_OCB``, and ``MODE_CTR``).

        A value that must never be reused for any other encryption done
        with this key (except possibly for ``MODE_SIV``, see below).

        For ``MODE_EAX``, ``MODE_GCM`` and ``MODE_SIV`` there are no
        restrictions on its length (recommended: **16** bytes).

        For ``MODE_CCM``, its length must be in the range **[7..13]**.
        Bear in mind that with CCM there is a trade-off between nonce
        length and maximum message size. Recommendation: **11** bytes.

        For ``MODE_OCB``, its length must be in the range **[1..15]**
        (recommended: **15**).

        For ``MODE_CTR``, its length must be in the range **[0..15]**
        (recommended: **8**).

        For ``MODE_SIV``, the nonce is optional, if it is not specified,
        then no nonce is being used, which renders the encryption
        deterministic.

        If not provided, for modes other than ``MODE_SIV``, a random
        byte string of the recommended length is used (you must then
        read its value with the :attr:`nonce` attribute).

      segment_size (integer):
        (Only ``MODE_CFB``).The number of **bits** the plaintext and ciphertext
        are segmented in. It must be a multiple of 8.
        If not specified, it will be assumed to be 8.

      mac_len (integer):
        (Only ``MODE_EAX``, ``MODE_GCM``, ``MODE_OCB``, ``MODE_CCM``)
        Length of the authentication tag, in bytes.

        It must be even and in the range **[4..16]**.
        The recommended value (and the default, if not specified) is **16**.

      msg_len (integer):
        (Only ``MODE_CCM``). Length of the message to (de)cipher.
        If not specified, ``encrypt`` must be called with the entire message.
        Similarly, ``decrypt`` can only be called once.

      assoc_len (integer):
        (Only ``MODE_CCM``). Length of the associated data.
        If not specified, all associated data is buffered internally,
        which may represent a problem for very large messages.

      initial_value (integer or bytes/bytearray/memoryview):
        (Only ``MODE_CTR``).
        The initial value for the counter. If not present, the cipher will
        start counting from 0. The value is incremented by one for each block.
        The counter number is encoded in big endian mode.

      counter (object):
        (Only ``MODE_CTR``).
        Instance of ``Cryptodome.Util.Counter``, which allows full customization
        of the counter block. This parameter is incompatible to both ``nonce``
        and ``initial_value``.

      use_aesni: (boolean):
        Use Intel AES-NI hardware extensions (default: use if available).

    Returns:
        an AES object, of the applicable mode.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCryptodome.CipherTa_create_cipherluCryptodome.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointerac_size_tac_uint8_ptraload_pycryptodome_raw_libuCryptodome.UtilTa_cpu_featuresa_cpu_featuresuCryptodome.RandomTaget_random_bytesllaMODE_CBClaMODE_CFBlaMODE_OFBlaMODE_CTRlaMODE_OPENPGPlaMODE_CCMlaMODE_EAXl
aMODE_SIVlaMODE_GCMlaMODE_OCBu
        int AES_start_operation(const uint8_t key[],
                                size_t key_len,
                                void **pResult);
        int AES_encrypt(const void *state,
                        const uint8_t *in,
                        uint8_t *out,
                        size_t data_len);
        int AES_decrypt(const void *state,
                        const uint8_t *in,
                        uint8_t *out,
                        size_t data_len);
        int AES_stop_operation(void *state);
        a_cprotouCryptodome.Cipher._raw_aesahave_aes_niuCryptodome.Cipher._raw_aesniareplaceTaAESaAESNIa_create_base_ciphera_derive_Poly1305_key_pairlablock_sizeTlll uCryptodome\Cipher\AES.pyu<module Cryptodome.Cipher.AES>Tadict_parametersause_aesniakeyastart_operationastop_operationacipheraresultTakeyanoncewsTakeyamodeaargsakwargsu.Cryptodome.Cipher._EKSBlowfishL5apopTakeyTasaltTacostuMissing EKSBlowfish parameter: Tainverttakey_sizeuIncorrect EKSBlowfish key length (%d bytes)a_raw_blowfish_libaEKSBlowfish_start_operationaEKSBlowfish_stop_operationaVoidPointerac_uint8_ptrac_size_tac_uintaaddress_ofuError %X while instantiating the EKSBlowfish cipheraSmartPointeragetuThis method instantiates and returns a smart pointer to
    a low-level base cipher. It will absorb named parameters in
    the process.asaltacostainverta_create_cipherasysamodulesuCryptodome.Cipher._EKSBlowfishuCreate a new EKSBlowfish cipher

    Args:

      key (bytes, bytearray, memoryview):
        The secret key to use in the symmetric cipher.
        Its length can vary from 0 to 72 bytes.

      mode (one of the supported ``MODE_*`` constants):
        The chaining mode to use for encryption or decryption.

      salt (bytes, bytearray, memoryview):
        The salt that bcrypt uses to thwart rainbow table attacks

      cost (integer):
        The complexity factor in bcrypt

      invert (bool):
        If ``False``, in the inner loop use ``ExpandKey`` first over the salt
        and then over the key, as defined in
        the `original bcrypt specification <https://www.usenix.org/legacy/events/usenix99/provos/provos_html/node4.html>`_.
        If ``True``, reverse the order, as in the first implementation of
        `bcrypt` in OpenBSD.

    :Return: an EKSBlowfish object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCryptodome.CipherTa_create_cipherluCryptodome.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointerac_size_tac_uint8_ptrac_uintaload_pycryptodome_raw_libTuCryptodome.Cipher._raw_eksblowfishu
        int EKSBlowfish_start_operation(const uint8_t key[],
                                        size_t key_len,
                                        const uint8_t salt[16],
                                        size_t salt_len,
                                        unsigned cost,
                                        unsigned invert,
                                        void **pResult);
        int EKSBlowfish_encrypt(const void *state,
                                const uint8_t *in,
                                uint8_t *out,
                                size_t data_len);
        int EKSBlowfish_decrypt(const void *state,
                                const uint8_t *in,
                                uint8_t *out,
                                size_t data_len);
        int EKSBlowfish_stop_operation(void *state);
        a_create_base_cipheranewlaMODE_ECBlablock_size;llIluCryptodome\Cipher\_EKSBlowfish.pyu<module Cryptodome.Cipher._EKSBlowfish>T
adict_parametersakeyasaltacostweainvertastart_operationastop_operationavoid_paresultTakeyamodeasaltacostainvertakwargsu.Cryptodome.Cipher._mode_cbc[aVoidPointera_statearaw_cbc_libaCBC_start_operationagetac_uint8_ptrac_size_taaddress_ofuError %d while instantiating the CBC modeaSmartPointeraCBC_stop_operationareleaseablock_sizea_copy_bytesaivaIVaencryptadecrypta_nextuCreate a new block cipher, configured in CBC mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.

          iv : bytes/bytearray/memoryview
            The initialization vector to use for encryption or decryption.
            It is as long as the cipher block.

            **The IV must be unpredictable**. Ideally it is picked randomly.

            Reusing the *IV* for encryptions performed with the same key
            compromises confidentiality.
        uencrypt() cannot be called after decrypt()acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aCBC_encryptaplaintextluData must be padded to %d byte boundary in CBC modeuError %d while encrypting in CBC modeaoutputaget_raw_bufferuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        That also means that you cannot reuse an object for encrypting
        or decrypting other data with the same key.

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            Its lenght must be multiple of the cipher block size.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        udecrypt() cannot be called after encrypt()aCBC_decryptaciphertextuError %d while decrypting in CBC modeuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            Its length must be multiple of the cipher block size.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipherapopTaIVnTaivnTnnaget_random_bytesuYou must either use 'iv' or 'IV', not bothuIncorrect IV length (it must be %d bytes long)uUnknown parameters for CBC: %saCbcModeuInstantiate a cipher object that performs CBC encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Cryptodome.Cipher``.

    :Keywords:
      iv : bytes/bytearray/memoryview
        The IV to use for CBC.

      IV : bytes/bytearray/memoryview
        Alias for ``iv``.

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Ciphertext Block Chaining (CBC) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCryptodome.Util.py3compatTa_copy_bytesluCryptodome.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libuCryptodome.RandomTaget_random_bytesTuCryptodome.Cipher._raw_cbcu
                int CBC_start_operation(void *cipher,
                                        const uint8_t iv[],
                                        size_t iv_len,
                                        void **pResult);
                int CBC_encrypt(void *cbcState,
                                const uint8_t *in,
                                uint8_t *out,
                                size_t data_len);
                int CBC_decrypt(void *cbcState,
                                const uint8_t *in,
                                uint8_t *out,
                                size_t data_len);
                int CBC_stop_operation(void *state);
                TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Cipher._mode_cbca__module__u*Cipher-Block Chaining (CBC)*.

    Each of the ciphertext blocks depends on the current
    and all previous plaintext blocks.

    An Initialization Vector (*IV*) is required.

    See `NIST SP800-38A`_ , Section 6.2 .

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uCbcMode.__init__TnuCbcMode.encryptuCbcMode.decrypta__orig_bases__a_create_cbc_cipheruCryptodome\Cipher\_mode_cbc.pyu<module Cryptodome.Cipher._mode_cbc>Ta__class__Taselfablock_cipheraivaresultTafactoryakwargsacipher_stateaivaIVTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Cryptodome.Cipher._mode_ccm2aEnumTuCryptodome.Cipher._mode_ccmablock_sizea_copy_bytesanoncea_factorya_keya_mac_lena_msg_lena_assoc_lena_cipher_paramsa_mac_tagluCCM mode is only available for ciphers that operate on 128 bits blocksTllll
llluParameter 'mac_len' must be even and in the range 4..16 (not %d)uLength of parameter 'nonce' must be in the range 7..13 bytesanewaMODE_CBCDaivba_macaMacStatusaNOT_STARTEDa_mac_statusa_tLaupdateaencryptadecryptadigestaverifya_nextla_cumul_assoc_lena_cumul_msg_lena_cacheaMODE_CTRastructapackwBa_cipheraencryptTba_s_0a_start_macl@llalong_to_bytesclqclcainsertlaPROCESSING_AUTH_DATAa_updatedaupdateuupdate() can only be called immediately after initializationuAssociated data is too longuProtect associated data

        If there is any associated data, the caller has to invoke
        this function one or more times, before using
        ``decrypt`` or ``encrypt``.

        By *associated data* it is meant any data (e.g. packet headers) that
        will not be encrypted and will be transmitted in the clear.
        However, the receiver is still able to detect any modification to it.
        In CCM, the *associated data* is also called
        *additional authenticated data* (AAD).

        If there is no associated data, this method must not be called.

        The caller may split associated data in segments of any size, and
        invoke this method multiple times, each time with the next segment.

        :Parameters:
          assoc_data : bytes/bytearray/memoryview
            A piece of associated data. There are no restrictions on its size.
        ais_writeable_bufferaappendaassoc_data_ptamin:lnnuUpdate the MAC with associated data or plaintext
           (without FSM checks)uencrypt() can only be called after initialization or an update()adigestuAssociated data is too shortaplaintextuMessage is too longa_pad_cache_and_updateaPROCESSING_PLAINTEXTTaoutputuEncrypt data with the key set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        This method can be called only **once** if ``msg_len`` was
        not passed at initialization.

        If ``msg_len`` was given, the data to encrypt can be broken
        up in two or more pieces and `encrypt` can be called
        multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext as ``bytes``.
          Otherwise, ``None``.
        adecryptudecrypt() can only be called after initialization or an update()averifyaciphertextuDecrypt data with the key set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        This method can be called only **once** if ``msg_len`` was
        not passed at initialization.

        If ``msg_len`` was given, the data to decrypt can be
        broken up in two or more pieces and `decrypt` can be
        called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext as ``bytes``.
          Otherwise, ``None``.
        udigest() cannot be called when decrypting or validating a messagea_digestuCompute the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method returns the MAC that shall be sent to the receiver,
        together with the ciphertext.

        :Return: the MAC, as a byte string.
        uMessage is too shortastrxoruu%02xaborduCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        uverify() cannot be called when encrypting a messageaget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method checks if the decrypted message is indeed valid
        (that is, if the key is correct) and it has not been
        tampered with while in transit.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        uPerform encrypt() and digest() in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
            a tuple with two items:

            - the ciphertext, as ``bytes``
            - the MAC tag, as ``bytes``

            The first item becomes ``None`` when the ``output`` parameter
            specified a location for the result.
        uPerform decrypt() and verify() in one step.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return: the plaintext as ``bytes`` or ``None`` when the ``output``
            parameter specified a location for the result.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        akeyuMissing parameter: apopTanoncenTlamac_lenTamsg_lennTaassoc_lennaCcmModeuCreate a new block cipher, configured in CCM mode.

    :Parameters:
      factory : module
        A symmetric cipher module from `Cryptodome.Cipher` (like
        `Cryptodome.Cipher.AES`).

    :Keywords:
      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.

      nonce : bytes/bytearray/memoryview
        A value that must never be reused for any other encryption.

        Its length must be in the range ``[7..13]``.
        11 or 12 bytes are reasonable values in general. Bear in
        mind that with CCM there is a trade-off between nonce length and
        maximum message size.

        If not specified, a 11 byte long random string is used.

      mac_len : integer
        Length of the MAC, in bytes. It must be even and in
        the range ``[4..16]``. The default is 16.

      msg_len : integer
        Length of the message to (de)cipher.
        If not specified, ``encrypt`` or ``decrypt`` may only be called once.

      assoc_len : integer
        Length of the associated data.
        If not specified, all data is internally buffered.
    u
Counter with CBC-MAC (CCM) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__abinasciiTaunhexlifyuCryptodome.Util.py3compatTabyte_stringaborda_copy_bytesabyte_stringuCryptodome.Util._raw_apiTais_writeable_bufferuCryptodome.Util.strxorTastrxoruCryptodome.Util.numberTalong_to_bytesuCryptodome.HashTaBLAKE2suCryptodome.RandomTaget_random_bytesaenumTlllTaNOT_STARTEDaPROCESSING_AUTH_DATAaPROCESSING_PLAINTEXTTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>a__module__uCounter with CBC-MAC (CCM).

    This is an Authenticated Encryption with Associated Data (`AEAD`_) mode.
    It provides both confidentiality and authenticity.

    The header of the message may be left in the clear, if needed, and it will
    still be subject to authentication. The decryption step tells the receiver
    if the message comes from a source that really knowns the secret key.
    Additionally, decryption detects if any part of the message - including the
    header - has been modified or corrupted.

    This mode requires a nonce. The nonce shall never repeat for two
    different messages encrypted with the same key, but it does not need
    to be random.
    Note that there is a trade-off between the size of the nonce and the
    maximum size of a single message you can encrypt.

    It is important to use a large nonce if the key is reused across several
    messages and the nonce is chosen randomly.

    It is acceptable to us a short nonce if the key is only used a few times or
    if the nonce is taken from a counter.

    The following table shows the trade-off when the nonce is chosen at
    random. The column on the left shows how many messages it takes
    for the keystream to repeat **on average**. In practice, you will want to
    stop using the key way before that.

    +--------------------+---------------+-------------------+
    | Avg. # of messages |    nonce      |     Max. message  |
    | before keystream   |    size       |     size          |
    | repeats            |    (bytes)    |     (bytes)       |
    +====================+===============+===================+
    |       2^52         |      13       |        64K        |
    +--------------------+---------------+-------------------+
    |       2^48         |      12       |        16M        |
    +--------------------+---------------+-------------------+
    |       2^44         |      11       |         4G        |
    +--------------------+---------------+-------------------+
    |       2^40         |      10       |         1T        |
    +--------------------+---------------+-------------------+
    |       2^36         |       9       |        64P        |
    +--------------------+---------------+-------------------+
    |       2^32         |       8       |        16E        |
    +--------------------+---------------+-------------------+

    This mode is only available for ciphers that operate on 128 bits blocks
    (e.g. AES but not TDES).

    See `NIST SP800-38C`_ or RFC3610_.

    .. _`NIST SP800-38C`: http://csrc.nist.gov/publications/nistpubs/800-38C/SP800-38C.pdf
    .. _RFC3610: https://tools.ietf.org/html/rfc3610
    .. _AEAD: http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html

    :undocumented: __init__
    a__qualname__a__init__uCcmMode.__init__uCcmMode._start_macuCcmMode._pad_cache_and_updateuCcmMode.updateTcuCcmMode._updateTnuCcmMode.encryptuCcmMode.decryptuCcmMode.digestuCcmMode._digestahexdigestuCcmMode.hexdigestuCcmMode.verifyahexverifyuCcmMode.hexverifyaencrypt_and_digestuCcmMode.encrypt_and_digestadecrypt_and_verifyuCcmMode.decrypt_and_verifya__orig_bases__a_create_ccm_cipheruCryptodome\Cipher\_mode_ccm.pyu<module Cryptodome.Cipher._mode_ccm>Ta__class__Taselfafactoryakeyanonceamac_lenamsg_lenaassoc_lenacipher_paramswqTafactoryakwargsakeyweanonceamac_lenamsg_lenaassoc_lenacipher_paramsTaselfTaselfalen_cacheTaselfwqaflagsab_0aassoc_len_encodedaenc_sizeafirst_data_to_macTaselfaassoc_data_ptafilleraupdate_lenTaselfaciphertextaoutputaplaintextTaselfaciphertextareceived_mac_tagaoutputaplaintextTaselfaplaintextaoutputTaenumsTaselfahex_mac_tagTaselfaassoc_dataTaselfareceived_mac_tagasecretamac1amac2.Cryptodome.Cipher._mode_cfb]aVoidPointera_statearaw_cfb_libaCFB_start_operationagetac_uint8_ptrac_size_taaddress_ofuError %d while instantiating the CFB modeaSmartPointeraCFB_stop_operationareleaseablock_sizea_copy_bytesaivaIVaencryptadecrypta_nextuCreate a new block cipher, configured in CFB mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.

          iv : bytes/bytearray/memoryview
            The initialization vector to use for encryption or decryption.
            It is as long as the cipher block.

            **The IV must be unpredictable**. Ideally it is picked randomly.

            Reusing the *IV* for encryptions performed with the same key
            compromises confidentiality.

          segment_size : integer
            The number of bytes the plaintext and ciphertext are segmented in.
        uencrypt() cannot be called after decrypt()acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aCFB_encryptaplaintextuError %d while encrypting in CFB modeaoutputaget_raw_bufferuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        udecrypt() cannot be called after encrypt()aCFB_decryptaciphertextuError %d while decrypting in CFB modeuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipherapopTaIVnTaivnTnnaget_random_bytesuYou must either use 'iv' or 'IV', not bothuIncorrect IV length (it must be %d bytes long)Tasegment_sizellutoo many values to unpack (expected 2)lu'segment_size' must be positive and multiple of 8 bitsuUnknown parameters for CFB: %saCfbModeuInstantiate a cipher object that performs CFB encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Cryptodome.Cipher``.

    :Keywords:
      iv : bytes/bytearray/memoryview
        The IV to use for CFB.

      IV : bytes/bytearray/memoryview
        Alias for ``iv``.

      segment_size : integer
        The number of bit the plaintext and ciphertext are segmented in.
        If not present, the default is 8.

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Counter Feedback (CFB) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCryptodome.Util.py3compatTa_copy_bytesuCryptodome.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libuCryptodome.RandomTaget_random_bytesTuCryptodome.Cipher._raw_cfbu
                    int CFB_start_operation(void *cipher,
                                            const uint8_t iv[],
                                            size_t iv_len,
                                            size_t segment_len, /* In bytes */
                                            void **pResult);
                    int CFB_encrypt(void *cfbState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int CFB_decrypt(void *cfbState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int CFB_stop_operation(void *state);TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Cipher._mode_cfba__module__u*Cipher FeedBack (CFB)*.

    This mode is similar to CFB, but it transforms
    the underlying block cipher into a stream cipher.

    Plaintext and ciphertext are processed in *segments*
    of **s** bits. The mode is therefore sometimes
    labelled **s**-bit CFB.

    An Initialization Vector (*IV*) is required.

    See `NIST SP800-38A`_ , Section 6.3.

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uCfbMode.__init__TnuCfbMode.encryptuCfbMode.decrypta__orig_bases__a_create_cfb_cipheruCryptodome\Cipher\_mode_cfb.pyu<module Cryptodome.Cipher._mode_cfb>Ta__class__Taselfablock_cipheraivasegment_sizearesultTafactoryakwargsacipher_stateaivaIVasegment_size_bytesaremTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Cryptodome.Cipher._mode_ctr$xa_copy_bytesanonceaVoidPointeraselfa_statearaw_ctr_libaCTR_start_operationagetac_uint8_ptrac_size_taaddress_ofuError %X while instantiating the CTR modeaSmartPointeraCTR_stop_operationareleaseablock_sizeaencryptadecrypta_nextuCreate a new block cipher, configured in CTR mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.

          initial_counter_block : bytes/bytearray/memoryview
            The initial plaintext to use to generate the key stream.

            It is as large as the cipher block, and it embeds
            the initial value of the counter.

            This value must not be reused.
            It shall contain a nonce or a random component.
            Reusing the *initial counter block* for encryptions
            performed with the same key compromises confidentiality.

          prefix_len : integer
            The amount of bytes at the beginning of the counter block
            that never change.

          counter_len : integer
            The length in bytes of the counter embedded in the counter
            block.

          little_endian : boolean
            True if the counter in the counter block is an integer encoded
            in little endian mode. If False, it is big endian.
        uencrypt() cannot be called after decrypt()acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aCTR_encryptaplaintextluThe counter has wrapped around in CTR modeuError %X while encrypting in CTR modeaoutputaget_raw_bufferuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        udecrypt() cannot be called after encrypt()aCTR_decryptaciphertextuError %X while decrypting in CTR modeuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipherapopTacounternTanoncenTainitial_valuenuInvalid parameters for CTR mode: %sTnnu'counter' and 'nonce'/'initial_value' are mutually exclusiveluImpossible to create a safe nonce for short block sizesaget_random_bytesluNonce is too longlais_native_intlluInitial counter value is too largealong_to_bytesuIncorrect length for counter byte string (%d bytes, expected %d)aCtrModeacounter_lenaprefixasuffixainitial_valuealittle_endianuIncorrect counter object (use Cryptodome.Util.Counter.new)awordsaappendastructapackwBldamaxareversecuSize of the counter block (%d bytes) must match block size (%d)uInstantiate a cipher object that performs CTR encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Cryptodome.Cipher``.

    :Keywords:
      nonce : bytes/bytearray/memoryview
        The fixed part at the beginning of the counter block - the rest is
        the counter number that gets increased when processing the next block.
        The nonce must be such that no two messages are encrypted under the
        same key and the same nonce.

        The nonce must be shorter than the block size (it can have
        zero length; the counter is then as long as the block).

        If this parameter is not present, a random nonce will be created with
        length equal to half the block size. No random nonce shorter than
        64 bits will be created though - you must really think through all
        security consequences of using such a short block size.

      initial_value : posive integer or bytes/bytearray/memoryview
        The initial value for the counter. If not present, the cipher will
        start counting from 0. The value is incremented by one for each block.
        The counter number is encoded in big endian mode.

      counter : object
        Instance of ``Cryptodome.Util.Counter``, which allows full customization
        of the counter block. This parameter is incompatible to both ``nonce``
        and ``initial_value``.

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Counter (CTR) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCryptodome.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libuCryptodome.RandomTaget_random_bytesuCryptodome.Util.py3compatTa_copy_bytesais_native_intuCryptodome.Util.numberTalong_to_bytesTuCryptodome.Cipher._raw_ctru
                    int CTR_start_operation(void *cipher,
                                            uint8_t   initialCounterBlock[],
                                            size_t    initialCounterBlock_len,
                                            size_t    prefix_len,
                                            unsigned  counter_len,
                                            unsigned  littleEndian,
                                            void **pResult);
                    int CTR_encrypt(void *ctrState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int CTR_decrypt(void *ctrState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int CTR_stop_operation(void *ctrState);TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Cipher._mode_ctra__module__u*CounTeR (CTR)* mode.

    This mode is very similar to ECB, in that
    encryption of one block is done independently of all other blocks.

    Unlike ECB, the block *position* contributes to the encryption
    and no information leaks about symbol frequency.

    Each message block is associated to a *counter* which
    must be unique across all messages that get encrypted
    with the same key (not just within the same message).
    The counter is as big as the block size.

    Counters can be generated in several ways. The most
    straightword one is to choose an *initial counter block*
    (which can be made public, similarly to the *IV* for the
    other modes) and increment its lowest **m** bits by one
    (modulo *2^m*) for each block. In most cases, **m** is
    chosen to be half the block size.

    See `NIST SP800-38A`_, Section 6.5 (for the mode) and
    Appendix B (for how to manage the *initial counter block*).

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uCtrMode.__init__TnuCtrMode.encryptuCtrMode.decrypta__orig_bases__a_create_ctr_cipheruCryptodome\Cipher\_mode_ctr.pyu<module Cryptodome.Cipher._mode_ctr>Ta__class__Taselfablock_cipherainitial_counter_blockaprefix_lenacounter_lenalittle_endianaresultT
afactoryakwargsacipher_stateacounteranonceainitial_valueacounter_lenainitial_counter_blocka_counteraprefixasuffixalittle_endianawordsTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Cryptodome.Cipher._mode_eax%ablock_sizea_copy_bytesanoncea_mac_lena_mac_tagLaupdateaencryptadecryptadigestaverifya_nextlu'mac_len' must be at least 2 and not larger than %duNonce cannot be empty in EAX modeais_bufferunonce must be bytes, bytearray or memoryview;lllaCMACanewakeydaselflastructapackwBafactoryacipher_paramsTaciphermodacipher_paramsa_omaclaupdatea_signerabytes_to_longadigestaMODE_CTRainitial_valueca_cipheruEAX cipher modeuupdate() can only be called immediately after initializationuProtect associated data

        If there is any associated data, the caller has to invoke
        this function one or more times, before using
        ``decrypt`` or ``encrypt``.

        By *associated data* it is meant any data (e.g. packet headers) that
        will not be encrypted and will be transmitted in the clear.
        However, the receiver is still able to detect any modification to it.

        If there is no associated data, this method must not be called.

        The caller may split associated data in segments of any size, and
        invoke this method multiple times, each time with the next segment.

        :Parameters:
          assoc_data : bytes/bytearray/memoryview
            A piece of associated data. There are no restrictions on its size.
        aencryptuencrypt() can only be called after initialization or an update()TaoutputuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext as ``bytes``.
          Otherwise, ``None``.
        adecryptudecrypt() can only be called after initialization or an update()averifyuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext as ``bytes``.
          Otherwise, ``None``.
        udigest() cannot be called when decrypting or validating a messageastrxorataguCompute the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method returns the MAC that shall be sent to the receiver,
        together with the ciphertext.

        :Return: the MAC, as a byte string.
        uu%02xaborduCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        uverify() cannot be called when encrypting a messageaget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method checks if the decrypted message is indeed valid
        (that is, if the key is correct) and it has not been
        tampered with while in transit.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises MacMismatchError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises MacMismatchError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        uPerform encrypt() and digest() in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
            a tuple with two items:

            - the ciphertext, as ``bytes``
            - the MAC tag, as ``bytes``

            The first item becomes ``None`` when the ``output`` parameter
            specified a location for the result.
        uPerform decrypt() and verify() in one step.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return: the plaintext as ``bytes`` or ``None`` when the ``output``
            parameter specified a location for the result.
        :Raises MacMismatchError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        apopTanoncenamac_lenuMissing parameter: aEaxModeuCreate a new block cipher, configured in EAX mode.

    :Parameters:
      factory : module
        A symmetric cipher module from `Cryptodome.Cipher` (like
        `Cryptodome.Cipher.AES`).

    :Keywords:
      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.

      nonce : bytes/bytearray/memoryview
        A value that must never be reused for any other encryption.
        There are no restrictions on its length, but it is recommended to use
        at least 16 bytes.

        The nonce shall never repeat for two different messages encrypted with
        the same key, but it does not need to be random.

        If not specified, a 16 byte long random string is used.

      mac_len : integer
        Length of the MAC, in bytes. It must be no larger than the cipher
        block bytes (which is the default).
    u
EAX mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__abinasciiTaunhexlifyuCryptodome.Util.py3compatTabyte_stringaborda_copy_bytesabyte_stringuCryptodome.Util._raw_apiTais_bufferuCryptodome.Util.strxorTastrxoruCryptodome.Util.numberTalong_to_bytesabytes_to_longalong_to_bytesuCryptodome.HashTaCMACaBLAKE2suCryptodome.RandomTaget_random_bytesTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Cipher._mode_eaxa__module__u*EAX* mode.

    This is an Authenticated Encryption with Associated Data
    (`AEAD`_) mode. It provides both confidentiality and authenticity.

    The header of the message may be left in the clear, if needed,
    and it will still be subject to authentication.

    The decryption step tells the receiver if the message comes
    from a source that really knowns the secret key.
    Additionally, decryption detects if any part of the message -
    including the header - has been modified or corrupted.

    This mode requires a *nonce*.

    This mode is only available for ciphers that operate on 64 or
    128 bits blocks.

    There are no official standards defining EAX.
    The implementation is based on `a proposal`__ that
    was presented to NIST.

    .. _AEAD: http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html
    .. __: http://csrc.nist.gov/groups/ST/toolkit/BCM/documents/proposedmodes/eax/eax-spec.pdf

    :undocumented: __init__
    a__qualname__a__init__uEaxMode.__init__uEaxMode.updateTnuEaxMode.encryptuEaxMode.decryptuEaxMode.digestahexdigestuEaxMode.hexdigestuEaxMode.verifyahexverifyuEaxMode.hexverifyaencrypt_and_digestuEaxMode.encrypt_and_digestadecrypt_and_verifyuEaxMode.decrypt_and_verifya__orig_bases__a_create_eax_cipheruCryptodome\Cipher\_mode_eax.pyu<module Cryptodome.Cipher._mode_eax>Ta__class__Taselfafactoryakeyanonceamac_lenacipher_paramsacounter_intTafactoryakwargsakeyanonceamac_lenweTaselfaciphertextaoutputTaselfaciphertextareceived_mac_tagaoutputaptTaselfatagwiTaselfaplaintextaoutputactTaselfaplaintextaoutputTaselfTaselfahex_mac_tagTaselfaassoc_dataTaselfareceived_mac_tagatagwiasecretamac1amac2.Cryptodome.Cipher._mode_ecbJablock_sizeaVoidPointera_statearaw_ecb_libaECB_start_operationagetaaddress_ofuError %d while instantiating the ECB modeaSmartPointeraECB_stop_operationareleaseuCreate a new block cipher, configured in ECB mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.
        acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aECB_encryptac_uint8_ptraplaintextac_size_tluData must be aligned to block boundary in ECB modeuError %d while encrypting in ECB modeaoutputaget_raw_bufferuEncrypt data with the key set at initialization.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            The length must be multiple of the cipher block length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        aECB_decryptaciphertextuError %d while decrypting in ECB modeuDecrypt data with the key set at initialization.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            The length must be multiple of the cipher block length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipheruUnknown parameters for ECB: %saEcbModeuInstantiate a cipher object that performs ECB encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Cryptodome.Cipher``.

    All keywords are passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be presentu
Electronic Code Book (ECB) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCryptodome.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferlaload_pycryptodome_raw_libTuCryptodome.Cipher._raw_ecbu
                    int ECB_start_operation(void *cipher,
                                            void **pResult);
                    int ECB_encrypt(void *ecbState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int ECB_decrypt(void *ecbState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int ECB_stop_operation(void *state);
                    TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Cipher._mode_ecba__module__u*Electronic Code Book (ECB)*.

    This is the simplest encryption mode. Each of the plaintext blocks
    is directly encrypted into a ciphertext block, independently of
    any other block.

    This mode is dangerous because it exposes frequency of symbols
    in your plaintext. Other modes (e.g. *CBC*) should be used instead.

    See `NIST SP800-38A`_ , Section 6.1.

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uEcbMode.__init__TnaencryptuEcbMode.encryptadecryptuEcbMode.decrypta__orig_bases__a_create_ecb_cipheruCryptodome\Cipher\_mode_ecb.pyu<module Cryptodome.Cipher._mode_ecb>Ta__class__Taselfablock_cipheraresultTafactoryakwargsacipher_stateTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Cryptodome.Cipher._mode_gcm/acollectionsTanamedtuplelanamedtupleTa_GHash_ImpTaghashaghash_expandaghash_destroyTaghashaghash_expandaghash_destroyw_apostfixa_ghash_api_templateareplaceTu%imp%aportableaload_pycryptodome_raw_libuCryptodome.Hash._ghash_portablea_build_implaportablea_cpu_featuresahave_clmulTu%imp%aclmuluCryptodome.Hash._ghash_clmulaclmuluReturn None if CLMUL implementation is not availableaghash_caVoidPointera_exp_keyaghash_expandac_uint8_ptraaddress_ofuError %d while expanding the GHASH keyaSmartPointeragetaghash_destroyacreate_string_bufferTla_last_ylaghashac_size_tuError %d while updating GHASHaget_raw_bufferaEnumTuCryptodome.Cipher._mode_gcmablock_sizeuGCM mode is only available for ciphers that operate on 128 bits blocksuNonce cannot be emptyais_bufferuNonce must be bytes, bytearray or memoryviewg+uNonce exceeds maximum lengtha_copy_bytesanoncea_factorya_keya_taga_mac_lenluParameter 'mac_len' must be in the range 4..16Laupdateaencryptadecryptadigestaverifya_nexta_no_more_assoc_dataa_auth_lena_msg_lenanewaMODE_ECBaencryptTbbdalong_to_bytesla_GHASHaupdateadigest:nlnabytes_to_longlqaMODE_CTRainitial_valuea_cipherahash_subkeya_signerca_tag_ciphera_cacheaMacStatusaPROCESSING_AUTH_DATAa_statusuupdate() can only be called immediately after initializationa_updateuAdditional Authenticated Data exceeds maximum lengthuProtect associated data

        If there is any associated data, the caller has to invoke
        this function one or more times, before using
        ``decrypt`` or ``encrypt``.

        By *associated data* it is meant any data (e.g. packet headers) that
        will not be encrypted and will be transmitted in the clear.
        However, the receiver is still able to detect any modification to it.
        In GCM, the *associated data* is also called
        *additional authenticated data* (AAD).

        If there is no associated data, this method must not be called.

        The caller may split associated data in segments of any size, and
        invoke this method multiple times, each time with the next segment.

        :Parameters:
          assoc_data : bytes/bytearray/memoryview
            A piece of associated data. There are no restrictions on its size.
        aminuencrypt() can only be called after initialization or an update()Taoutputa_pad_cache_and_updateaPROCESSING_CIPHERTEXTquPlaintext exceeds maximum lengthuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext as ``bytes``.
          Otherwise, ``None``.
        adecryptudecrypt() can only be called after initialization or an update()averifyuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext as ``bytes``.
          Otherwise, ``None``.
        udigest() cannot be called when decrypting or validating a messagea_compute_macuCompute the *binary* MAC tag in an AEAD mode.

        The caller invokes this function at the very end.

        This method returns the MAC that shall be sent to the receiver,
        together with the ciphertext.

        :Return: the MAC, as a byte string.
        uCompute MAC without any FSM checks.uu%02xaborduCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        uverify() cannot be called when encrypting a messageaget_random_bytesaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method checks if the decrypted message is indeed valid
        (that is, if the key is correct) and it has not been
        tampered with while in transit.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        uPerform encrypt() and digest() in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
            a tuple with two items:

            - the ciphertext, as ``bytes``
            - the MAC tag, as ``bytes``

            The first item becomes ``None`` when the ``output`` parameter
            specified a location for the result.
        uPerform decrypt() and verify() in one step.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
          received_mac_tag : byte string
            This is the *binary* MAC, as received from the sender.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return: the plaintext as ``bytes`` or ``None`` when the ``output``
            parameter specified a location for the result.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        akeyuMissing parameter:apopTanoncenTamac_lenlTause_clmulta_ghash_clmula_ghash_portableaGcmModeuCreate a new block cipher, configured in Galois Counter Mode (GCM).

    :Parameters:
      factory : module
        A block cipher module, taken from `Cryptodome.Cipher`.
        The cipher must have block length of 16 bytes.
        GCM has been only defined for `Cryptodome.Cipher.AES`.

    :Keywords:
      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.
        It must be 16 (e.g. *AES-128*), 24 (e.g. *AES-192*)
        or 32 (e.g. *AES-256*) bytes long.

      nonce : bytes/bytearray/memoryview
        A value that must never be reused for any other encryption.

        There are no restrictions on its length,
        but it is recommended to use at least 16 bytes.

        The nonce shall never repeat for two
        different messages encrypted with the same key,
        but it does not need to be random.

        If not provided, a 16 byte nonce will be randomly created.

      mac_len : integer
        Length of the MAC, in bytes.
        It must be no larger than 16 bytes (which is the default).
    u
Galois/Counter Mode (GCM).
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__abinasciiTaunhexlifyuCryptodome.Util.py3compatTaborda_copy_bytesuCryptodome.Util._raw_apiTais_bufferuCryptodome.Util.numberTalong_to_bytesabytes_to_longuCryptodome.HashTaBLAKE2suCryptodome.RandomTaget_random_bytesTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptruCryptodome.UtilTa_cpu_featuresu
    int ghash_%imp%(uint8_t y_out[16],
                    const uint8_t block_data[],
                    size_t len,
                    const uint8_t y_in[16],
                    const void *exp_key);
    int ghash_expand_%imp%(const uint8_t h[16],
                           void **ghash_tables);
    int ghash_destroy_%imp%(void *ghash_tables);
a_get_ghash_portablea_get_ghash_clmulTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>a__module__uGHASH function defined in NIST SP 800-38D, Algorithm 2.

    If X_1, X_2, .. X_m are the blocks of input data, the function
    computes:

       X_1*H^{m} + X_2*H^{m-1} + ... + X_m*H

    in the Galois field GF(2^256) using the reducing polynomial
    (x^128 + x^7 + x^2 + x + 1).
    a__qualname__a__init__u_GHASH.__init__u_GHASH.updateu_GHASH.digesta__orig_bases__aenumTllTaPROCESSING_AUTH_DATAaPROCESSING_CIPHERTEXTuGalois Counter Mode (GCM).

    This is an Authenticated Encryption with Associated Data (`AEAD`_) mode.
    It provides both confidentiality and authenticity.

    The header of the message may be left in the clear, if needed, and it will
    still be subject to authentication. The decryption step tells the receiver
    if the message comes from a source that really knowns the secret key.
    Additionally, decryption detects if any part of the message - including the
    header - has been modified or corrupted.

    This mode requires a *nonce*.

    This mode is only available for ciphers that operate on 128 bits blocks
    (e.g. AES but not TDES).

    See `NIST SP800-38D`_.

    .. _`NIST SP800-38D`: http://csrc.nist.gov/publications/nistpubs/800-38D/SP-800-38D.pdf
    .. _AEAD: http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html

    :undocumented: __init__
    uGcmMode.__init__uGcmMode.updateuGcmMode._updateuGcmMode._pad_cache_and_updateTnuGcmMode.encryptuGcmMode.decryptuGcmMode.digestuGcmMode._compute_macahexdigestuGcmMode.hexdigestuGcmMode.verifyahexverifyuGcmMode.hexverifyaencrypt_and_digestuGcmMode.encrypt_and_digestadecrypt_and_verifyuGcmMode.decrypt_and_verifya_create_gcm_cipheruCryptodome\Cipher\_mode_gcm.pyu<module Cryptodome.Cipher._mode_gcm>Ta__class__T
aselfafactoryakeyanonceamac_lenacipher_paramsaghash_cahash_subkeyaj0afillaghash_inanonce_ctraiv_ctrTaselfasubkeyaghash_caresultTalibapostfixanamedtupleafuncsaGHASH_Impaimp_funcsaparamsTaselfas_tagTafactoryakwargsakeyweanonceamac_lenause_clmulaghash_cTaapialibaresultTaselfalen_cacheTaselfadataafilleraupdate_lenTaselfaciphertextaoutputTaselfaciphertextareceived_mac_tagaoutputaplaintextTaselfTaselfaplaintextaoutputaciphertextTaselfaplaintextaoutputTaenumsTaselfahex_mac_tagTaselfaassoc_dataTaselfablock_dataaresultTaselfareceived_mac_tagasecretamac1amac2.Cryptodome.Cipher._mode_ocb*ablock_sizeluOCB mode is only available for ciphers that operate on 128 bits blocksa_copy_bytesanonce;llluNonce must be at most 15 bytes longais_bufferuNonce must be bytes, bytearray or memoryviewa_mac_lenluMAC tag must be between 8 and 16 bytes longa_mac_tagca_cache_Aa_cache_PLaupdateaencryptadecryptadigestaverifya_nextakeylabchrlddabordll?lanewaMODE_ECBaencryptastructapacku15sB:nlnastrxor:nln:llnalong_to_bytesabytes_to_longl@l:lnna_create_base_cipheruUnknown keywords: aVoidPointera_statea_raw_ocb_libaOCB_start_operationagetac_size_taaddress_ofuError %d while instantiating the OCB modeaSmartPointeraOCB_stop_operationareleaseaOCB_updateac_uint8_ptruError %d while computing MAC in OCB modeaupdateuupdate() can only be called immediately after initializationLaencryptadecryptadigestaverifyaupdateaminutoo many values to unpack (expected 2)a_updateuProcess the associated data.

        If there is any associated data, the caller has to invoke
        this method one or more times, before using
        ``decrypt`` or ``encrypt``.

        By *associated data* it is meant any data (e.g. packet headers) that
        will not be encrypted and will be transmitted in the clear.
        However, the receiver shall still able to detect modifications.

        If there is no associated data, this method must not be called.

        The caller may split associated data in segments of any size, and
        invoke this method multiple times, each time with the next segment.

        :Parameters:
          assoc_data : bytes/bytearray/memoryview
            A piece of associated data.
        acreate_string_bufferuError %d while %sing in OCB modeaget_raw_buffera_transcrypt_alignedatrans_funcatrans_descuencrypt() can only be called after initialization or an update()adigesta_transcryptaOCB_encryptuEncrypt the next piece of plaintext.

        After the entire plaintext has been passed (but before `digest`),
        you **must** call this method one last time with no arguments to collect
        the final piece of ciphertext.

        If possible, use the method `encrypt_and_digest` instead.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The next piece of data to encrypt or ``None`` to signify
            that encryption has finished and that any remaining ciphertext
            has to be produced.
        :Return:
            the ciphertext, as a byte string.
            Its length may not match the length of the *plaintext*.
        adecryptudecrypt() can only be called after initialization or an update()averifyaOCB_decryptuDecrypt the next piece of ciphertext.

        After the entire ciphertext has been passed (but before `verify`),
        you **must** call this method one last time with no arguments to collect
        the remaining piece of plaintext.

        If possible, use the method `decrypt_and_verify` instead.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The next piece of data to decrypt or ``None`` to signify
            that decryption has finished and that any remaining plaintext
            has to be produced.
        :Return:
            the plaintext, as a byte string.
            Its length may not match the length of the *ciphertext*.
        TlaOCB_digestuError %d while computing digest in OCB modeudigest() cannot be called now for this ciphera_compute_mac_taguCompute the *binary* MAC tag.

        Call this method after the final `encrypt` (the one with no arguments)
        to obtain the MAC tag.

        The MAC tag is needed by the receiver to determine authenticity
        of the message.

        :Return: the MAC, as a byte string.
        uu%02xuCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        uverify() cannot be called now for this cipheraget_random_bytesaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        Call this method after the final `decrypt` (the one with no arguments)
        to check if the message is authentic and valid.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        uEncrypt the message and create the MAC tag in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The entire message to encrypt.
        :Return:
            a tuple with two byte strings:

            - the encrypted data
            - the MAC
        uDecrypted the message and verify its authenticity in one step.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The entire message to decrypt.
          received_mac_tag : byte string
            This is the *binary* MAC, as received from the sender.

        :Return: the decrypted data (byte string).
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        TlapopTamac_lenluKeyword missing: aOcbModeuCreate a new block cipher, configured in OCB mode.

    :Parameters:
      factory : module
        A symmetric cipher module from `Cryptodome.Cipher`
        (like `Cryptodome.Cipher.AES`).

    :Keywords:
      nonce : bytes/bytearray/memoryview
        A  value that must never be reused for any other encryption.
        Its length can vary from 1 to 15 bytes.
        If not specified, a random 15 bytes long nonce is generated.

      mac_len : integer
        Length of the MAC, in bytes.
        It must be in the range ``[8..16]``.
        The default is 16 (128 bits).

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Offset Codebook (OCB) mode.

OCB is Authenticated Encryption with Associated Data (AEAD) cipher mode
designed by Prof. Phillip Rogaway and specified in `RFC7253`_.

The algorithm provides both authenticity and privacy, it is very efficient,
it uses only one key and it can be used in online mode (so that encryption
or decryption can start before the end of the message is available).

This module implements the third and last variant of OCB (OCB3) and it only
works in combination with a 128-bit block symmetric cipher, like AES.

OCB is patented in US but `free licenses`_ exist for software implementations
meant for non-military purposes.

Example:
    >>> from Cryptodome.Cipher import AES
    >>> from Cryptodome.Random import get_random_bytes
    >>>
    >>> key = get_random_bytes(32)
    >>> cipher = AES.new(key, AES.MODE_OCB)
    >>> plaintext = b"Attack at dawn"
    >>> ciphertext, mac = cipher.encrypt_and_digest(plaintext)
    >>> # Deliver cipher.nonce, ciphertext and mac
    ...
    >>> cipher = AES.new(key, AES.MODE_OCB, nonce=nonce)
    >>> try:
    >>>     plaintext = cipher.decrypt_and_verify(ciphertext, mac)
    >>> except ValueError:
    >>>     print "Invalid message"
    >>> else:
    >>>     print plaintext

:undocumented: __package__

.. _RFC7253: http://www.rfc-editor.org/info/rfc7253
.. _free licenses: http://web.cs.ucdavis.edu/~rogaway/ocb/license.htm
a__doc__a__file__a__spec__aoriginahas_locationa__cached__labinasciiTaunhexlifyuCryptodome.Util.py3compatTaborda_copy_bytesabchruCryptodome.Util.numberTalong_to_bytesabytes_to_longuCryptodome.Util.strxorTastrxoruCryptodome.HashTaBLAKE2suCryptodome.RandomTaget_random_bytesuCryptodome.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_bufferaload_pycryptodome_raw_libTuCryptodome.Cipher._raw_ocbu
                                    int OCB_start_operation(void *cipher,
                                        const uint8_t *offset_0,
                                        size_t offset_0_len,
                                        void **pState);
                                    int OCB_encrypt(void *state,
                                        const uint8_t *in,
                                        uint8_t *out,
                                        size_t data_len);
                                    int OCB_decrypt(void *state,
                                        const uint8_t *in,
                                        uint8_t *out,
                                        size_t data_len);
                                    int OCB_update(void *state,
                                        const uint8_t *in,
                                        size_t data_len);
                                    int OCB_digest(void *state,
                                        uint8_t *tag,
                                        size_t tag_len);
                                    int OCB_stop_operation(void *state);
                                    TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Cipher._mode_ocba__module__uOffset Codebook (OCB) mode.

    :undocumented: __init__
    a__qualname__a__init__uOcbMode.__init__uOcbMode._updateuOcbMode.updateuOcbMode._transcrypt_aligneduOcbMode._transcryptTnuOcbMode.encryptuOcbMode.decryptuOcbMode._compute_mac_taguOcbMode.digestahexdigestuOcbMode.hexdigestuOcbMode.verifyahexverifyuOcbMode.hexverifyaencrypt_and_digestuOcbMode.encrypt_and_digestadecrypt_and_verifyuOcbMode.decrypt_and_verifya__orig_bases__a_create_ocb_cipheruCryptodome\Cipher\_mode_ocb.pyu<module Cryptodome.Cipher._mode_ocb>Ta__class__Taselfafactoryanonceamac_lenacipher_paramsaparams_without_keyakeyataglen_mod128abottom_bitsatop_bitsaktop_cipheraktopastretchaoffset_0araw_cipheraresultTaselfamac_tagaresultTafactoryakwargsanonceamac_lenweTaselfain_dataatrans_funcatrans_descaout_dataaprefixafilleratrans_lenaresultTaselfain_dataain_data_lenatrans_funcatrans_descaout_dataaresultTaselfaassoc_dataaassoc_data_lenaresultTaselfaciphertextTaselfaciphertextareceived_mac_tagaplaintextTaselfTaselfaplaintextTaselfahex_mac_tagTaselfaassoc_dataafillerasegaupdate_lenTaselfareceived_mac_tagasecretamac1amac2.Cryptodome.Cipher._mode_ofbYaVoidPointera_statearaw_ofb_libaOFB_start_operationagetac_uint8_ptrac_size_taaddress_ofuError %d while instantiating the OFB modeaSmartPointeraOFB_stop_operationareleaseablock_sizea_copy_bytesaivaIVaencryptadecrypta_nextuCreate a new block cipher, configured in OFB mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.

          iv : bytes/bytearray/memoryview
            The initialization vector to use for encryption or decryption.
            It is as long as the cipher block.

            **The IV must be a nonce, to to be reused for any other
            message**. It shall be a nonce or a random value.

            Reusing the *IV* for encryptions performed with the same key
            compromises confidentiality.
        uencrypt() cannot be called after decrypt()acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aOFB_encryptaplaintextuError %d while encrypting in OFB modeaoutputaget_raw_bufferuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        udecrypt() cannot be called after encrypt()aOFB_decryptaciphertextuError %d while decrypting in OFB modeuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext is written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipherapopTaIVnTaivnTnnaget_random_bytesuYou must either use 'iv' or 'IV', not bothuIncorrect IV length (it must be %d bytes long)uUnknown parameters for OFB: %saOfbModeuInstantiate a cipher object that performs OFB encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Cryptodome.Cipher``.

    :Keywords:
      iv : bytes/bytearray/memoryview
        The IV to use for OFB.

      IV : bytes/bytearray/memoryview
        Alias for ``iv``.

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Output Feedback (CFB) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCryptodome.Util.py3compatTa_copy_bytesluCryptodome.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libuCryptodome.RandomTaget_random_bytesTuCryptodome.Cipher._raw_ofbu
                        int OFB_start_operation(void *cipher,
                                                const uint8_t iv[],
                                                size_t iv_len,
                                                void **pResult);
                        int OFB_encrypt(void *ofbState,
                                        const uint8_t *in,
                                        uint8_t *out,
                                        size_t data_len);
                        int OFB_decrypt(void *ofbState,
                                        const uint8_t *in,
                                        uint8_t *out,
                                        size_t data_len);
                        int OFB_stop_operation(void *state);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Cipher._mode_ofba__module__u*Output FeedBack (OFB)*.

    This mode is very similar to CBC, but it
    transforms the underlying block cipher into a stream cipher.

    The keystream is the iterated block encryption of the
    previous ciphertext block.

    An Initialization Vector (*IV*) is required.

    See `NIST SP800-38A`_ , Section 6.4.

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uOfbMode.__init__TnuOfbMode.encryptuOfbMode.decrypta__orig_bases__a_create_ofb_cipheruCryptodome\Cipher\_mode_ofb.pyu<module Cryptodome.Cipher._mode_ofb>Ta__class__Taselfablock_cipheraivaresultTafactoryakwargsacipher_stateaivaIVTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Cryptodome.Cipher._mode_openpgpCablock_sizea_done_first_blockanewaMODE_CFBaIVdasegment_sizela_copy_bytesaencrypt:lnna_encrypted_IVladecrypt:nlnuLength of IV must be %d or %d bytes for MODE_OPENPGPaiva_cipheruEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.

        :Return:
            the encrypted data, as a byte string.
            It is as long as *plaintext* with one exception:
            when encrypting the first message chunk,
            the encypted IV is prepended to the returned ciphertext.
        uDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.

        :Return: the decrypted data (byte string).
        apopTaivnTnnaget_random_bytesuYou must either use 'iv' or 'IV', not bothTakeyuMissing component: aOpenPgpModeafactoryuCreate a new block cipher, configured in OpenPGP mode.

    :Parameters:
      factory : module
        The module.

    :Keywords:
      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.

      IV : bytes/bytearray/memoryview
        The initialization vector to use for encryption or decryption.

        For encryption, the IV must be as long as the cipher block size.

        For decryption, it must be 2 bytes longer (it is actually the
        *encrypted* IV which was prefixed to the ciphertext).
    u
OpenPGP mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCryptodome.Util.py3compatTa_copy_bytesluCryptodome.RandomTaget_random_bytesTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Cipher._mode_openpgpa__module__uOpenPGP mode.

    This mode is a variant of CFB, and it is only used in PGP and
    OpenPGP_ applications. If in doubt, use another mode.

    An Initialization Vector (*IV*) is required.

    Unlike CFB, the *encrypted* IV (not the IV itself) is
    transmitted to the receiver.

    The IV is a random data block. For legacy reasons, two of its bytes are
    duplicated to act as a checksum for the correctness of the key, which is now
    known to be insecure and is ignored. The encrypted IV is therefore 2 bytes
    longer than the clean IV.

    .. _OpenPGP: http://tools.ietf.org/html/rfc4880

    :undocumented: __init__
    a__qualname__a__init__uOpenPgpMode.__init__uOpenPgpMode.encryptuOpenPgpMode.decrypta__orig_bases__a_create_openpgp_cipheruCryptodome\Cipher\_mode_openpgp.pyu<module Cryptodome.Cipher._mode_openpgp>Ta__class__Taselfafactoryakeyaivacipher_paramsaIV_cipherTafactoryakwargsaivaIVakeyweTaselfaciphertextTaselfaplaintextaresu.Cryptodome.Cipher._mode_siv$ablock_sizea_factorya_cipher_paramsTl l0l@uIncorrect key length (%d bytes)ais_bufferuWhen provided, the nonce must be bytes, bytearray or memoryviewuWhen provided, the nonce must be non-emptya_copy_bytesanoncela_mac_taga_S2VTaciphermodacipher_paramsa_kdfa_subkey_cipheranewaMODE_ECBLaupdateaencryptadecryptadigestaverifya_nextabytes_to_longg+aMODE_CTRainitial_valuecuCreate a new CTR cipher from V in SIV modeaupdateuupdate() can only be called immediately after initializationuProtect one associated data component

        For SIV, the associated data is a sequence (*vector*) of non-empty
        byte strings (*components*).

        This method consumes the next component. It must be called
        once for each of the components that constitue the associated data.

        Note that the components have clear boundaries, so that:

            >>> cipher.update(b"builtin")
            >>> cipher.update(b"securely")

        is not equivalent to:

            >>> cipher.update(b"built")
            >>> cipher.update(b"insecurely")

        If there is no associated data, this method must not be called.

        :Parameters:
          component : bytes/bytearray/memoryview
            The next associated data component.
        uencrypt() not allowed for SIV mode. Use encrypt_and_digest() instead.u
        For SIV, encryption and MAC authentication must take place at the same
        point. This method shall not be used.

        Use `encrypt_and_digest` instead.
        udecrypt() not allowed for SIV mode. Use decrypt_and_verify() instead.u
        For SIV, decryption and verification must take place at the same
        point. This method shall not be used.

        Use `decrypt_and_verify` instead.
        adigestudigest() cannot be called when decrypting or validating a messageaderiveuCompute the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method returns the MAC that shall be sent to the receiver,
        together with the ciphertext.

        :Return: the MAC, as a byte string.
        uu%02xaborduCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        averifyuverify() cannot be called when encrypting a messageaget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method checks if the decrypted message is indeed valid
        (that is, if the key is correct) and it has not been
        tampered with while in transit.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aencryptuencrypt() can only be called after initialization or an update()a_create_ctr_cipherTaoutputuPerform encrypt() and digest() in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
            a tuple with two items:

            - the ciphertext, as ``bytes``
            - the MAC tag, as ``bytes``

            The first item becomes ``None`` when the ``output`` parameter
            specified a location for the result.
        adecryptudecrypt() can only be called after initialization or an update()a_cipheruPerform decryption and verification in one step.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        You cannot reuse an object for encrypting
        or decrypting other data with the same key.

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
          mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return: the plaintext as ``bytes`` or ``None`` when the ``output``
            parameter specified a location for the result.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        akeyuMissing parameter: apopTanoncenaSivModeuCreate a new block cipher, configured in
    Synthetic Initializaton Vector (SIV) mode.

    :Parameters:

      factory : object
        A symmetric cipher module from `Cryptodome.Cipher`
        (like `Cryptodome.Cipher.AES`).

    :Keywords:

      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.
        It must be 32, 48 or 64 bytes long.
        If AES is the chosen cipher, the variants *AES-128*,
        *AES-192* and or *AES-256* will be used internally.

      nonce : bytes/bytearray/memoryview
        For deterministic encryption, it is not present.

        Otherwise, it is a value that must never be reused
        for encrypting message under this key.

        There are no restrictions on its length,
        but it is recommended to use at least 16 bytes.
    u
Synthetic Initialization Vector (SIV) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__abinasciiTahexlifyaunhexlifylahexlifyuCryptodome.Util.py3compatTaborda_copy_bytesuCryptodome.Util._raw_apiTais_bufferuCryptodome.Util.numberTalong_to_bytesabytes_to_longalong_to_bytesuCryptodome.Protocol.KDFTa_S2VuCryptodome.HashTaBLAKE2suCryptodome.RandomTaget_random_bytesTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Cipher._mode_siva__module__uSynthetic Initialization Vector (SIV).

    This is an Authenticated Encryption with Associated Data (`AEAD`_) mode.
    It provides both confidentiality and authenticity.

    The header of the message may be left in the clear, if needed, and it will
    still be subject to authentication. The decryption step tells the receiver
    if the message comes from a source that really knowns the secret key.
    Additionally, decryption detects if any part of the message - including the
    header - has been modified or corrupted.

    Unlike other AEAD modes such as CCM, EAX or GCM, accidental reuse of a
    nonce is not catastrophic for the confidentiality of the message. The only
    effect is that an attacker can tell when the same plaintext (and same
    associated data) is protected with the same key.

    The length of the MAC is fixed to the block size of the underlying cipher.
    The key size is twice the length of the key of the underlying cipher.

    This mode is only available for AES ciphers.

    +--------------------+---------------+-------------------+
    |      Cipher        | SIV MAC size  |   SIV key length  |
    |                    |    (bytes)    |     (bytes)       |
    +====================+===============+===================+
    |    AES-128         |      16       |        32         |
    +--------------------+---------------+-------------------+
    |    AES-192         |      16       |        48         |
    +--------------------+---------------+-------------------+
    |    AES-256         |      16       |        64         |
    +--------------------+---------------+-------------------+

    See `RFC5297`_ and the `original paper`__.

    .. _RFC5297: https://tools.ietf.org/html/rfc5297
    .. _AEAD: http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html
    .. __: http://www.cs.ucdavis.edu/~rogaway/papers/keywrap.pdf

    :undocumented: __init__
    a__qualname__a__init__uSivMode.__init__uSivMode._create_ctr_cipheruSivMode.updateuSivMode.encryptuSivMode.decryptuSivMode.digestahexdigestuSivMode.hexdigestuSivMode.verifyahexverifyuSivMode.hexverifyTnaencrypt_and_digestuSivMode.encrypt_and_digestadecrypt_and_verifyuSivMode.decrypt_and_verifya__orig_bases__a_create_siv_cipheruCryptodome\Cipher\_mode_siv.pyu<module Cryptodome.Cipher._mode_siv>Ta__class__Taselfafactoryakeyanonceakwargsasubkey_sizeTaselfwvav_intwqTafactoryakwargsakeyweanonceTaselfaciphertextTaselfaciphertextamac_tagaoutputaplaintextTaselfTaselfaplaintextTaselfaplaintextaoutputacipherTaselfahex_mac_tagTaselfacomponentTaselfareceived_mac_tagasecretamac1amac2.Cryptodome.CipherPakeya_modesapopTaadd_aes_modesFa_extra_modesamodesuMode not supportedTlll
lluToo many arguments for this modelanonceTllllaIVlluIV is not meaningful for the ECB modea__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptodomeu\not_existingaCipherTaNUITKA_PACKAGE_Cryptodome_Cipheru\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aosuCryptodome.Cipher._mode_ecbTa_create_ecb_ciphera_create_ecb_cipheruCryptodome.Cipher._mode_cbcTa_create_cbc_ciphera_create_cbc_cipheruCryptodome.Cipher._mode_cfbTa_create_cfb_ciphera_create_cfb_cipheruCryptodome.Cipher._mode_ofbTa_create_ofb_ciphera_create_ofb_cipheruCryptodome.Cipher._mode_ctrTa_create_ctr_ciphera_create_ctr_cipheruCryptodome.Cipher._mode_openpgpTa_create_openpgp_ciphera_create_openpgp_cipheruCryptodome.Cipher._mode_ccmTa_create_ccm_ciphera_create_ccm_cipheruCryptodome.Cipher._mode_eaxTa_create_eax_ciphera_create_eax_cipheruCryptodome.Cipher._mode_sivTa_create_siv_ciphera_create_siv_cipheruCryptodome.Cipher._mode_gcmTa_create_gcm_ciphera_create_gcm_cipheruCryptodome.Cipher._mode_ocbTa_create_ocb_ciphera_create_ocb_cipherlllllll
lla_create_cipheruCryptodome\Cipher\__init__.pyu<module Cryptodome.Cipher>Tafactoryakeyamodeaargsakwargsamodesu.Cryptodome.Hash.BLAKE2stadigest_sizea_update_after_digesta_digest_doneTllll u1.3.6.1.4.1.1722.12.2.2.aoidaVoidPointera_raw_blake2s_libablake2s_initaaddress_ofac_uint8_ptrac_size_tuError %d while instantiating BLAKE2saSmartPointeragetablake2s_destroya_stateaupdateuYou can only call 'digest' or 'hexdigest' on this objectablake2s_updateuError %d while hashing BLAKE2s datauContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferTl ablake2s_digestuError %d while creating BLAKE2s digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aget_random_bytesTlanewlTadigest_bitsakeyadatauMAC check faileduVerify that a given **binary** MAC (computed by another party)
        is valid.

        Args:
          mac_tag (byte string/byte array/memoryview): the expected MAC of the message.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        averifyaunhexlifyatobytesuVerify that a given **printable** MAC (computed by another party)
        is valid.

        Args:
            hex_mac_tag (string): the expected MAC of the message, as a hexadecimal string.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        adigest_bytesadigest_bitsakwargsuReturn a new instance of a BLAKE2s hash object.
        See :func:`new`.
        adataapopTaupdate_after_digestFTadigest_bytesnTadigest_bitsnuOnly one digest parameter must be providedTnnl lu'digest_bytes' not in range 1..32llu'digest_bits' not in range 8..256, with steps of 8TakeycuBLAKE2s key cannot exceed 32 bytesuUnknown parameters: aBLAKE2s_HashuCreate a new hash object.

    Args:
        data (byte string/byte array/memoryview):
            Optional. The very first chunk of the message to hash.
            It is equivalent to an early call to :meth:`BLAKE2s_Hash.update`.
        digest_bytes (integer):
            Optional. The size of the digest, in bytes (1 to 32). Default is 32.
        digest_bits (integer):
            Optional and alternative to ``digest_bytes``.
            The size of the digest, in bits (8 to 256, in steps of 8).
            Default is 256.
        key (byte string):
            Optional. The key to use to compute the MAC (1 to 64 bytes).
            If not specified, no key will be used.
        update_after_digest (boolean):
            Optional. By default, a hash object cannot be updated anymore after
            the digest is computed. When this flag is ``True``, such check
            is no longer enforced.

    Returns:
        A :class:`BLAKE2s_Hash` hash object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__abinasciiTaunhexlifyluCryptodome.Util.py3compatTabordatobytesuCryptodome.RandomTaget_random_bytesuCryptodome.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCryptodome.Hash._BLAKE2su
                        int blake2s_init(void **state,
                                         const uint8_t *key,
                                         size_t key_size,
                                         size_t digest_size);
                        int blake2s_destroy(void *state);
                        int blake2s_update(void *state,
                                           const uint8_t *buf,
                                           size_t len);
                        int blake2s_digest(const void *state,
                                           uint8_t digest[32]);
                        int blake2s_copy(const void *src, void *dst);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Hash.BLAKE2sa__module__uA BLAKE2s hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__ablock_sizea__init__uBLAKE2s_Hash.__init__uBLAKE2s_Hash.updateuBLAKE2s_Hash.digestahexdigestuBLAKE2s_Hash.hexdigestuBLAKE2s_Hash.verifyahexverifyuBLAKE2s_Hash.hexverifyuBLAKE2s_Hash.newa__orig_bases__uCryptodome\Hash\BLAKE2s.pyu<module Cryptodome.Hash.BLAKE2s>Ta__class__Taselfadataakeyadigest_bytesaupdate_after_digestastatearesultTaselfabfraresultTaselfTaselfahex_mac_tagTakwargsadataaupdate_after_digestadigest_bytesadigest_bitsakeyTaselfakwargsTaselfadataaresultTaselfamac_tagasecretamac1amac2.Cryptodome.Hash.CMACabytes_to_longlalong_to_bytesadigest_sizea_copy_bytesa_keya_factorya_cipher_paramsablock_sizea_block_sizea_mac_taga_update_after_digestllla_max_sizellquCMAC requires a cipher with a block size of 8 or 16 bytes, not %ddanewaMODE_ECBa_ecbaencryptabordlla_shift_bytesa_k1a_k2aMODE_CBCa_cbca_cachea_cache_na_last_cta_last_pta_data_sizeaupdateuupdate() cannot be called after digest() or verify()amina_updateamsgabsuAuthenticate the next chunk of message.

        Args:
            data (byte string/byte array/memoryview): The next chunk of data
        lastrxoruUpdate a block aligned to the block boundarya__new__aCMACacopy:nnnuReturn a copy ("clone") of the CMAC object.

        The copy will have the same internal state as the original CMAC
        object.
        This can be used to efficiently compute the MAC tag of byte
        strings that share a common initial substring.

        :return: An :class:`CMAC`
        uMAC is unsafe for this messageduReturn the **binary** (non-printable) MAC tag of the message
        that has been authenticated so far.

        :return: The MAC tag, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xuReturn the **printable** MAC tag of the message authenticated so far.

        :return: The MAC tag, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduVerify that a given **binary** MAC (computed by another party)
        is valid.

        Args:
          mac_tag (byte string/byte array/memoryview): the expected MAC of the message.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        averifyaunhexlifyatobytesuVerify that a given **printable** MAC (computed by another party)
        is valid.

        Args:
          hex_mac_tag (string): the expected MAC of the message, as a hexadecimal string.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        uciphermod must be specified (try AES)luMAC tag length must be at least 4 bytes longaciphermoduMAC tag length cannot be larger than a cipher block (%d) bytesuCreate a new MAC object.

    Args:
        key (byte string/byte array/memoryview):
            key for the CMAC object.
            The key must be valid for the underlying cipher algorithm.
            For instance, it must be 16 bytes long for AES-128.
        ciphermod (module):
            A cipher module from :mod:`Cryptodome.Cipher`.
            The cipher's block size has to be 128 bits,
            like :mod:`Cryptodome.Cipher.AES`, to reduce the probability
            of collisions.
        msg (byte string/byte array/memoryview):
            Optional. The very first chunk of the message to authenticate.
            It is equivalent to an early call to `CMAC.update`. Optional.
        cipher_params (dict):
            Optional. A set of parameters to use when instantiating a cipher
            object.
        mac_len (integer):
            Length of the MAC, in bytes.
            It must be at least 4 bytes long.
            The default (and recommended) length matches the size of a cipher block.
        update_after_digest (boolean):
            Optional. By default, a hash object cannot be updated anymore after
            the digest is computed. When this flag is ``True``, such check
            is no longer enforced.
    Returns:
        A :class:`CMAC` object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__abinasciiTaunhexlifyuCryptodome.HashTaBLAKE2suCryptodome.Util.strxorTastrxoruCryptodome.Util.numberTalong_to_bytesabytes_to_longuCryptodome.Util.py3compatTabordatobytesa_copy_bytesuCryptodome.RandomTaget_random_bytesTlTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Hash.CMACa__module__uA CMAC hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar digest_size: the size in bytes of the resulting MAC tag
    :vartype digest_size: integer
    a__qualname__a__init__uCMAC.__init__uCMAC.updateuCMAC._updateuCMAC.copyuCMAC.digestahexdigestuCMAC.hexdigestuCMAC.verifyahexverifyuCMAC.hexverifya__orig_bases__TnnnnFuCryptodome\Hash\CMAC.pyu<module Cryptodome.Hash.CMAC>Ta__class__Taselfakeyamsgaciphermodacipher_paramsamac_lenaupdate_after_digestabsaconst_Rbazero_blockwLTabsaxor_lsbanumTaselfadata_blockabsactasecond_lastTaselfaobjTaselfabsaptapartialTaselfTaselfahex_mac_tagTakeyamsgaciphermodacipher_paramsamac_lenaupdate_after_digestTaselfamsgabsafilleraremainTaselfamac_tagasecretamac1amac2.Cryptodome.Hash.HMACd^aMD5cadigest_sizea_digestmodatobytesablock_sizedanewadigestuHash type incompatible to HMACastrxord6a_inneraupdated\a_outeruAuthenticate the next chunk of message.

        Args:
            data (byte string/byte array/memoryview): The next chunk of data
        a_pbkdf2_hmac_assistuCarry out the expensive inner loop for PBKDF2-HMACaHMACTcfake keyTadigestmodacopyuReturn a copy ("clone") of the HMAC object.

        The copy will have the same internal state as the original HMAC
        object.
        This can be used to efficiently compute the MAC tag of byte
        strings that share a common initial substring.

        :return: An :class:`HMAC`
        uReturn the **binary** (non-printable) MAC tag of the message
        authenticated so far.

        :return: The MAC tag digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        aget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduVerify that a given **binary** MAC (computed by another party)
        is valid.

        Args:
          mac_tag (byte string/byte string/memoryview): the expected MAC of the message.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        uu%02xaborduReturn the **printable** MAC tag of the message authenticated so far.

        :return: The MAC tag, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        averifyaunhexlifyuVerify that a given **printable** MAC (computed by another party)
        is valid.

        Args:
            hex_mac_tag (string): the expected MAC of the message,
                as a hexadecimal string.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        uCreate a new MAC object.

    Args:
        key (bytes/bytearray/memoryview):
            key for the MAC object.
            It must be long enough to match the expected security level of the
            MAC.
        msg (bytes/bytearray/memoryview):
            Optional. The very first chunk of the message to authenticate.
            It is equivalent to an early call to :meth:`HMAC.update`.
        digestmod (module):
            The hash to use to implement the HMAC.
            Default is :mod:`Cryptodome.Hash.MD5`.

    Returns:
        An :class:`HMAC` object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCryptodome.Util.py3compatTabordatobyteslabinasciiTaunhexlifyuCryptodome.HashTaMD5TaBLAKE2suCryptodome.Util.strxorTastrxoruCryptodome.RandomTaget_random_bytesa__all__TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Hash.HMACa__module__uAn HMAC hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar digest_size: the size in bytes of the resulting MAC tag
    :vartype digest_size: integer
    a__qualname__Tcna__init__uHMAC.__init__uHMAC.updateuHMAC._pbkdf2_hmac_assistuHMAC.copyuHMAC.digestuHMAC.verifyahexdigestuHMAC.hexdigestahexverifyuHMAC.hexverifya__orig_bases__uCryptodome\Hash\HMAC.pyu<module Cryptodome.Hash.HMAC>Ta__class__Taselfakeyamsgadigestmodakey_0ahash_kakey_0_ipadakey_0_opadTaselfafirst_digestaiterationsaresultTaselfanew_hmacTaselfafrozen_outer_hashTaselfTaselfahex_mac_tagTakeyamsgadigestmodTaselfamsgTaselfamac_tagasecretamac1amac2.Cryptodome.Hash.MD5mWaVoidPointera_raw_md5_libaMD5_initaaddress_ofaValueErroruError %d while instantiating MD5aSmartPointeragetaMD5_destroya_stateaupdateaMD5_updateac_uint8_ptrac_size_talenuContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferadigest_sizeaMD5_digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aMD5HashaMD5_copyuError %d while copying MD5uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA-1 hash object.anewuCreate a new hash object.

    :parameter data:
        Optional. The very first chunk of the message to hash.
        It is equivalent to an early call to :meth:`MD5Hash.update`.
    :type data: byte string/byte array/memoryview

    :Return: A :class:`MD5Hash` hash object
    laMD5_pbkdf2_hmac_assistuError %d with PBKDF2-HMAC assis for MD5uCompute the expensive inner loop in PBKDF-HMAC.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCryptodome.Util.py3compatTw*uCryptodome.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCryptodome.Hash._MD5u
                        #define MD5_DIGEST_SIZE 16

                        int MD5_init(void **shaState);
                        int MD5_destroy(void *shaState);
                        int MD5_update(void *hs,
                                          const uint8_t *buf,
                                          size_t len);
                        int MD5_digest(const void *shaState,
                                          uint8_t digest[MD5_DIGEST_SIZE]);
                        int MD5_copy(const void *src, void *dst);

                        int MD5_pbkdf2_hmac_assist(const void *inner,
                                            const void *outer,
                                            const uint8_t first_digest[MD5_DIGEST_SIZE],
                                            uint8_t final_digest[MD5_DIGEST_SIZE],
                                            size_t iterations);
                        aobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Hash.MD5a__module__uA MD5 hash object.
    Do not instantiate directly.
    Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__ll@ablock_sizeu1.2.840.113549.2.5aoidTna__init__uMD5Hash.__init__uMD5Hash.updateuMD5Hash.digestahexdigestuMD5Hash.hexdigestacopyuMD5Hash.copyuMD5Hash.newa__orig_bases__a_pbkdf2_hmac_assistuCryptodome\Hash\MD5.pyu<module Cryptodome.Hash.MD5>Ta__class__TaselfadataastatearesultTainneraouterafirst_digestaiterationsabfraresultTaselfaclonearesultTaselfabfraresultTaselfTadataTaselfadataTaselfadataaresult.Cryptodome.Hash.SHA1WaVoidPointera_raw_sha1_libaSHA1_initaaddress_ofaValueErroruError %d while instantiating SHA1aSmartPointeragetaSHA1_destroya_stateaupdateaSHA1_updateac_uint8_ptrac_size_talenuContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferadigest_sizeaSHA1_digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aSHA1HashaSHA1_copyuError %d while copying SHA1uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA-1 hash object.anewuCreate a new hash object.

    :parameter data:
        Optional. The very first chunk of the message to hash.
        It is equivalent to an early call to :meth:`SHA1Hash.update`.
    :type data: byte string/byte array/memoryview

    :Return: A :class:`SHA1Hash` hash object
    laSHA1_pbkdf2_hmac_assistuError %d with PBKDF2-HMAC assis for SHA1uCompute the expensive inner loop in PBKDF-HMAC.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCryptodome.Util.py3compatTw*uCryptodome.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCryptodome.Hash._SHA1u
                        #define SHA1_DIGEST_SIZE 20

                        int SHA1_init(void **shaState);
                        int SHA1_destroy(void *shaState);
                        int SHA1_update(void *hs,
                                          const uint8_t *buf,
                                          size_t len);
                        int SHA1_digest(const void *shaState,
                                          uint8_t digest[SHA1_DIGEST_SIZE]);
                        int SHA1_copy(const void *src, void *dst);

                        int SHA1_pbkdf2_hmac_assist(const void *inner,
                                            const void *outer,
                                            const uint8_t first_digest[SHA1_DIGEST_SIZE],
                                            uint8_t final_digest[SHA1_DIGEST_SIZE],
                                            size_t iterations);
                        aobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Hash.SHA1a__module__uA SHA-1 hash object.
    Do not instantiate directly.
    Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__ll@ablock_sizeu1.3.14.3.2.26aoidTna__init__uSHA1Hash.__init__uSHA1Hash.updateuSHA1Hash.digestahexdigestuSHA1Hash.hexdigestacopyuSHA1Hash.copyuSHA1Hash.newa__orig_bases__a_pbkdf2_hmac_assistuCryptodome\Hash\SHA1.pyu<module Cryptodome.Hash.SHA1>Ta__class__TaselfadataastatearesultTainneraouterafirst_digestaiterationsabfraresultTaselfaclonearesultTaselfabfraresultTaselfTadataTaselfadataTaselfadataaresult.Cryptodome.Hash.SHA256(WaVoidPointera_raw_sha256_libaSHA256_initaaddress_ofuError %d while instantiating SHA256aSmartPointeragetaSHA256_destroya_stateaupdateaSHA256_updateac_uint8_ptrac_size_tuError %d while hashing data with SHA256uContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferadigest_sizeaSHA256_digestuError %d while making SHA256 digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aSHA256HashaSHA256_copyuError %d while copying SHA256uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA-256 hash object.anewuCreate a new hash object.

    :parameter data:
        Optional. The very first chunk of the message to hash.
        It is equivalent to an early call to :meth:`SHA256Hash.update`.
    :type data: byte string/byte array/memoryview

    :Return: A :class:`SHA256Hash` hash object
    laSHA256_pbkdf2_hmac_assistuError %d with PBKDF2-HMAC assist for SHA256uCompute the expensive inner loop in PBKDF-HMAC.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCryptodome.Util.py3compatTaborduCryptodome.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCryptodome.Hash._SHA256u
                        int SHA256_init(void **shaState);
                        int SHA256_destroy(void *shaState);
                        int SHA256_update(void *hs,
                                          const uint8_t *buf,
                                          size_t len);
                        int SHA256_digest(const void *shaState,
                                          uint8_t *digest,
                                          size_t digest_size);
                        int SHA256_copy(const void *src, void *dst);

                        int SHA256_pbkdf2_hmac_assist(const void *inner,
                                            const void *outer,
                                            const uint8_t *first_digest,
                                            uint8_t *final_digest,
                                            size_t iterations,
                                            size_t digest_size);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Hash.SHA256a__module__uA SHA-256 hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__l l@ablock_sizeu2.16.840.1.101.3.4.2.1aoidTna__init__uSHA256Hash.__init__uSHA256Hash.updateuSHA256Hash.digestahexdigestuSHA256Hash.hexdigestacopyuSHA256Hash.copyuSHA256Hash.newa__orig_bases__a_pbkdf2_hmac_assistuCryptodome\Hash\SHA256.pyu<module Cryptodome.Hash.SHA256>Ta__class__TaselfadataastatearesultTainneraouterafirst_digestaiterationsabfraresultTaselfaclonearesultTaselfabfraresultTaselfTadataTaselfadataTaselfadataaresult.Cryptodome.Hasha__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptodomeu\not_existingaHashTaNUITKA_PACKAGE_Cryptodome_Hashu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__LaHMACaMD2aMD4aMD5aRIPEMD160aSHA1aSHA224aSHA256aSHA384aSHA512aCMACaPoly1305acSHAKE128acSHAKE256aKMAC128aKMAC256aTupleHash128aTupleHash256aKangarooTwelvea__all__uCryptodome\Hash\__init__.pyu<module Cryptodome.Hash>u.Cryptodome.Protocol.KDF8aSHA1atobytesanewadigest_sizeuSelected hash algorithm has a too short digest (%d bytes).uSalt is not 8 bytes long (%d bytes instead).aiter_rangelapHashadigestuDerive one key from a password (or passphrase).

    This function performs key derivation according to an old version of
    the PKCS#5 standard (v1.5) or `RFC2898
    <https://www.ietf.org/rfc/rfc2898.txt>`_.

    Args:
     password (string):
        The secret password to generate the key from.
     salt (byte string):
        An 8 byte string to use for better protection from dictionary attacks.
        This value does not need to be kept secret, but it should be randomly
        chosen for each derivation.
     dkLen (integer):
        The length of the desired key. The default is 16 bytes, suitable for
        instance for :mod:`Cryptodome.Cipher.AES`.
     count (integer):
        The number of iterations to carry out. The recommendation is 1000 or
        more.
     hashAlgo (module):
        The hash algorithm to use, as a module or an object from the :mod:`Cryptodome.Hash` package.
        The digest length must be no shorter than ``dkLen``.
        The default algorithm is :mod:`Cryptodome.Hash.SHA1`.

    Return:
        A byte string of length ``dkLen`` that can be used as key.
    u'prf' and 'hmac_hash_module' are mutually exlusiveahmac_hash_modulea_pbkdf2_hmac_assistu<lambda>uPBKDF2.<locals>.<lambda>alinkuPBKDF2.<locals>.linkcakeyaprfapasswordasaltastructapacku>IwilareduceastrxoraHMACacopyaupdateacountuDerive one or more keys from a password (or passphrase).

    This function performs key derivation according to the PKCS#5 standard (v2.0).

    Args:
     password (string or byte string):
        The secret password to generate the key from.

        Strings will be encoded as ISO 8859-1 (also known as Latin-1),
        which does not allow any characters with codepoints > 255.
     salt (string or byte string):
        A (byte) string to use for better protection from dictionary attacks.
        This value does not need to be kept secret, but it should be randomly
        chosen for each derivation. It is recommended to use at least 16 bytes.

        Strings will be encoded as ISO 8859-1 (also known as Latin-1),
        which does not allow any characters with codepoints > 255.
     dkLen (integer):
        The cumulative length of the keys to produce.

        Due to a flaw in the PBKDF2 design, you should not request more bytes
        than the ``prf`` can output. For instance, ``dkLen`` should not exceed
        20 bytes in combination with ``HMAC-SHA1``.
     count (integer):
        The number of iterations to carry out. The higher the value, the slower
        and the more secure the function becomes.

        You should find the maximum number of iterations that keeps the
        key derivation still acceptable on the slowest hardware you must support.

        Although the default value is 1000, **it is recommended to use at least
        1000000 (1 million) iterations**.
     prf (callable):
        A pseudorandom function. It must be a function that returns a
        pseudorandom byte string from two parameters: a secret and a salt.
        The slower the algorithm, the more secure the derivation function.
        If not specified, **HMAC-SHA1** is used.
     hmac_hash_module (module):
        A module from ``Cryptodome.Hash`` implementing a Merkle-Damgard cryptographic
        hash, which PBKDF2 must use in combination with HMAC.
        This parameter is mutually exclusive with ``prf``.

    Return:
        A byte string of length ``dkLen`` that can be used as key material.
        If you want multiple keys, just break up this string into segments of the desired length.
    utoo many values to unpack (expected 2)lwsu<genexpr>uPBKDF2.<locals>.<genexpr>a_copy_bytesa_keya_ciphermoddablock_sizea_last_stringa_cachela_n_updatesa_cipher_paramsuInitialize the S2V PRF.

        :Parameters:
          key : byte string
            A secret that can be used as key for CMACs
            based on ciphers from ``ciphermod``.
          ciphermod : module
            A block cipher module from `Cryptodome.Cipher`.
          cipher_params : dictionary
            A set of extra parameters to use to create a cipher instance.
        a_S2VuCreate a new S2V PRF.

        :Parameters:
          key : byte string
            A secret that can be used as key for CMACs
            based on ciphers from ``ciphermod``.
          ciphermod : module
            A block cipher module from `Cryptodome.Cipher`.
        abytes_to_longabordllalong_to_bytesuToo many components passed to S2VaCMACTamsgaciphermodacipher_paramsa_doubleuPass the next component of the vector.

        The maximum number of components you can pass is equal to the block
        length of the cipher (in bits) minus 1.

        :Parameters:
          item : byte string
            The next component of the vector.
        :Raise TypeError: when the limit on the number of components has been reached.
        :nln:lnndb:nlnu"Derive a secret from the vector of components.

        :Return: a byte string, as long as the block length of the cipher.
        luToo much secret data to deriveTadigestmodatlenaprkwtlacontextwBwnahashmodaappendakey_lenuDerive one or more keys from a master secret using
    the HMAC-based KDF defined in RFC5869_.

    Args:
     master (byte string):
        The unguessable value used by the KDF to generate the other keys.
        It must be a high-entropy secret, though not necessarily uniform.
        It must not be a password.
     key_len (integer):
        The length in bytes of every derived key.
     salt (byte string):
        A non-secret, reusable value that strengthens the randomness
        extraction step.
        Ideally, it is as long as the digest size of the chosen hash.
        If empty, a string of zeroes in used.
     hashmod (module):
        A cryptographic hash algorithm from :mod:`Cryptodome.Hash`.
        :mod:`Cryptodome.Hash.SHA512` is a good choice.
     num_keys (integer):
        The number of keys to derive. Every key is :data:`key_len` bytes long.
        The maximum cumulative length of all keys is
        255 times the digest size.
     context (byte string):
        Optional identifier describing what the keys are used for.

    Return:
        A byte string or a tuple of byte strings.

    .. _RFC5869: http://tools.ietf.org/html/rfc5869
    abit_sizeuN must be a power of 2quN is too bigqup or r are too biguscrypt.<locals>.<lambda>aPBKDF2Taprfa_raw_scrypt_libascryptROMixa_raw_salsa20_libaSalsa20_8_corewracreate_string_bufferac_size_twNacoreuError %X while running scryptadata_outaget_raw_bufferuDerive one or more keys from a passphrase.

    Args:
     password (string):
        The secret pass phrase to generate the keys from.
     salt (string):
        A string to use for better protection from dictionary attacks.
        This value does not need to be kept secret,
        but it should be randomly chosen for each derivation.
        It is recommended to be at least 16 bytes long.
     key_len (integer):
        The length in bytes of each derived key.
     N (integer):
        CPU/Memory cost parameter. It must be a power of 2 and less
        than :math:`2^{32}`.
     r (integer):
        Block size parameter.
     p (integer):
        Parallelization parameter.
        It must be no greater than :math:`(2^{32}-1)/(4r)`.
     num_keys (integer):
        The number of keys to derive. Every key is :data:`key_len` bytes long.
        By default, only 1 key is generated.
        The maximum cumulative length of all keys is :math:`(2^{32}-1)*32`
        (that is, 128TB).

    A good choice of parameters *(N, r , p)* was suggested
    by Colin Percival in his `presentation in 2009`__:

    - *( 2¹⁴, 8, 1 )* for interactive logins (≤100ms)
    - *( 2²⁰, 8, 1 )* for file encryption (≤5s)

    Return:
        A byte string or a tuple of byte strings.

    .. __: http://www.tarsnap.com/scrypt/scrypt-slides.pdf
    aSHA256:lnnazfillTlabitsabstrl:nlnaresultu./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789uatostrafindTlluIncorrect length:nln:nlnabchruCryptodome.CipherTa_EKSBlowfisha_EKSBlowfishuThe password is too long. It must be 72 bytes at most.lubcrypt cost factor must be in the range 4..31aMODE_ECB;ll@lacipheraencryptactextuutf-8TluThe password contains the zero byteaget_random_bytesTlubcrypt salt must be 16 bytes longa_bcrypt_hashcOrpheanBeholderScryDoubtd$Tla_bcrypt_encodec$2auHash a password into a key, using the OpenBSD bcrypt protocol.

    Args:
      password (byte string or string):
        The secret password or pass phrase.
        It must be at most 72 bytes long.
        It must not contain the zero byte.
        Unicode strings will be encoded as UTF-8.
      cost (integer):
        The exponential factor that makes it slower to compute the hash.
        It must be in the range 4 to 31.
        A value of at least 12 is recommended.
      salt (byte string):
        Optional. Random byte string to thwarts dictionary and rainbow table
        attacks. It must be 16 bytes long.
        If not passed, a random value is generated.

    Return (byte string):
        The bcrypt hash

    Raises:
        ValueError: if password is longer than 72 bytes or if it contains the zero byte

   uIncorrect length of the bcrypt hash: %d bytes instead of 60:nlnc$2a$uUnsupported prefixareacompileTc\$2a\$([0-9][0-9])\$([A-Za-z0-9./]{22,22})([A-Za-z0-9./]{31,31})amatchuIncorrect bcrypt hash formatagroupTluIncorrect costa_bcrypt_decodeabcryptaBLAKE2slTadigest_bitsakeyadatauIncorrect bcrypt hashuVerify if the provided password matches the given bcrypt hash.

    Args:
      password (byte string or string):
        The secret password or pass phrase to test.
        It must be at most 72 bytes long.
        It must not contain the zero byte.
        Unicode strings will be encoded as UTF-8.
      bcrypt_hash (byte string, bytearray):
        The reference bcrypt hash the password needs to be checked against.

    Raises:
        ValueError: if the password does not match
    TduNull byte found in labeluNull byte found in contextadkalabelakey_len_encamasterquOverflow in SP800 108 counteruDerive one or more keys from a master secret using
    a pseudorandom function in Counter Mode, as specified in
    `NIST SP 800-108r1 <https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-108r1.pdf>`_.

    Args:
     master (byte string):
        The secret value used by the KDF to derive the other keys.
        It must not be a password.
        The length on the secret must be consistent with the input expected by
        the :data:`prf` function.
     key_len (integer):
        The length in bytes of each derived key.
     prf (function):
        A pseudorandom function that takes two byte strings as parameters:
        the secret and an input. It returns another byte string.
     num_keys (integer):
        The number of keys to derive. Every key is :data:`key_len` bytes long.
        By default, only 1 key is derived.
     label (byte string):
        Optional description of the purpose of the derived keys.
        It must not contain zero bytes.
     context (byte string):
        Optional information pertaining to
        the protocol that uses the keys, such as the identity of the
        participants, nonces, session IDs, etc.
        It must not contain zero bytes.

    Return:
        - a byte string (if ``num_keys`` is not specified), or
        - a tuple of byte strings (if ``num_key`` is specified).
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCryptodome.Util.py3compatTatobytesaborda_copy_bytesaiter_rangeatostrabchrabstruCryptodome.HashTaSHA1aSHA256aHMACaCMACaBLAKE2suCryptodome.Util.strxorTastrxoruCryptodome.RandomTaget_random_bytesuCryptodome.Util.numberTasizealong_to_bytesabytes_to_longasizeuCryptodome.Util._raw_apiTaload_pycryptodome_raw_libacreate_string_bufferaget_raw_bufferac_size_taload_pycryptodome_raw_libTuCryptodome.Cipher._Salsa20u
                    int Salsa20_8_core(const uint8_t *x, const uint8_t *y,
                                       uint8_t *out);
                    TuCryptodome.Protocol._scryptu
                    typedef int (core_t)(const uint8_t [64], const uint8_t [64], uint8_t [64]);
                    int scryptROMix(const uint8_t *data_in, uint8_t *data_out,
                           size_t data_len, unsigned N, core_t *core);
                    TlnaPBKDF1TllnnTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Protocol.KDFa__module__uString-to-vector PRF as defined in `RFC5297`_.

    This class implements a pseudorandom function family
    based on CMAC that takes as input a vector of strings.

    .. _RFC5297: http://tools.ietf.org/html/rfc5297
    a__qualname__Tna__init__u_S2V.__init__astaticmethodu_S2V.newu_S2V._doubleu_S2V.updateaderiveu_S2V.derivea__orig_bases__TlnaHKDFascryptabcrypt_checkTncpaSP800_108_CounteruCryptodome\Protocol\KDF.pyTa.0wjalinkwsTwpwsTwpwsahmac_hash_moduleTahmac_hash_moduleu<module Cryptodome.Protocol.KDF>Tamasterakey_lenasaltahashmodanum_keysacontextaoutput_lenahmacaprkwtwnatlenaderived_outputakolTapasswordasaltadkLenacountahashAlgoapHashadigestwiTapasswordasaltadkLenacountaprfahmac_hash_modulealinkakeywiwsabaseafirst_digestTamasterakey_lenaprfanum_keysalabelacontextakey_len_encaoutput_lenwiadkainfoakolTa__class__Taselfakeyaciphermodacipher_paramsT
adatawsabitswcaidxabits6amodulo4abits8aresultwgTadatawsabitswcabits_cabits6aresultwgaidxTapasswordacostasaltaconstantainverta_EKSBlowfishacipheractextw_TaselfabsadoubledTapasswordacostasaltactextacost_encasalt_encahash_encT
apasswordabcrypt_hashwpwracostasaltabcrypt_hash2asecretamac1amac2TaselfafinalapaddedamacTwsaprfapasswordTapasswordaprfTakeyaciphermodTapasswordasaltakey_lenwNwrwpanum_keysaprf_hmac_sha256astage_1ascryptROMixacoreadata_outaflowaidxabuffer_outaresultadkakolTaselfaitemamac.Cryptodome.ProtocolXa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptodomeu\not_existingaProtocolTaNUITKA_PACKAGE_Cryptodome_Protocolu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aKDFaSecretSharingaDHa__all__uCryptodome\Protocol\__init__.pyu<module Cryptodome.Protocol>u.Cryptodome.Random]3aurandomuReturn a random byte string of the desired size.a_UrandomRNGuReturn a file-like object that outputs cryptographically random bytes.a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptodomeu\not_existingaRandomTaNUITKA_PACKAGE_Cryptodome_Randomu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__anewaget_random_bytesa__all__lTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Randoma__module__a__qualname__areadu_UrandomRNG.readuMethod provided for backward compatibility only.aflushu_UrandomRNG.flushareinitu_UrandomRNG.reinitacloseu_UrandomRNG.closea__orig_bases__aatforkuCryptodome\Random\__init__.pyu<module Cryptodome.Random>Ta__class__TaselfTaargsakwargsTaselfwnu.Cryptodome.Util.PaddingV*alenapkcs7abchrax923Tllaiso7816TlaValueErrorTuUnknown padding styleuApply standard padding.

    Args:
      data_to_pad (byte string):
        The data that needs to be padded.
      block_size (integer):
        The block boundary to use for padding. The output length is guaranteed
        to be a multiple of :data:`block_size`.
      style (string):
        Padding algorithm. It can be *'pkcs7'* (default), *'iso7816'* or *'x923'*.

    Return:
      byte string : the original data with the appropriate padding added at the end.
    lTuZero-length input cannot be unpaddedTuInput data is not paddedTapkcs7ax923abordlaminTuPadding is incorrect.TuPKCS#7 padding is incorrect.TuANSI X.923 padding is incorrect.arfindTuISO 7816-4 padding is incorrect.apadding_lenuRemove standard padding.

    Args:
      padded_data (byte string):
        A piece of data with padding that needs to be stripped.
      block_size (integer):
        The block boundary to use for padding. The input length
        must be a multiple of :data:`block_size`.
      style (string):
        Padding algorithm. It can be *'pkcs7'* (default), *'iso7816'* or *'x923'*.
    Return:
        byte string : data without padding.
    Raises:
      ValueError: if the padding is incorrect.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__apadaunpada__all__uCryptodome.Util.py3compatTw*Tapkcs7uCryptodome\Util\Padding.pyu<module Cryptodome.Util.Padding>Tadata_to_padablock_sizeastyleapadding_lenapaddingTapadded_dataablock_sizeastyleapdata_lenapadding_lenu.Cryptodome.Util._cpu_featuresa_raw_cpuid_libahave_aes_niahave_clmula__doc__a__file__a__spec__aoriginahas_locationa__cached__uCryptodome.Util._raw_apiTaload_pycryptodome_raw_liblaload_pycryptodome_raw_libTuCryptodome.Util._cpuid_cu
                                           int have_aes_ni(void);
                                           int have_clmul(void);
                                           uCryptodome\Util\_cpu_features.pyu<module Cryptodome.Util._cpu_features>u.Cryptodome.Util._file_system}laCryptodomeuOnly available for modules under 'Cryptodome':lnnasplitaabspatha__file__utoo many values to unpack (expected 2)ajoinu..uReturn the complete file name for the module

    dir_comps : list of string
        The list of directory names in the PyCryptodome package.
        The first element must be "Cryptodome".

    filename : string
        The filename (inclusing extension) in the target directory.
    a__doc__a__spec__aoriginahas_locationa__cached__aosapycryptodome_filenameuCryptodome\Util\_file_system.pyu<module Cryptodome.Util._file_system>Tadir_compsafilenameautil_libw_aroot_libu.Cryptodome.Util._raw_apiaffiaRTLD_DEEPBINDaosagetenvTaPYCRYPTODOME_DISABLE_DEEPBINDadlopenacdefuLoad a shared library and return a handle to it.

        @name,  either an absolute path or the name of a library
                in the system search path.

        @cdecl, the C function declarations.
        uConvert a Python integer to unsigned longuConvert a Python integer to size_tamaxanewuuint8_t[]:nnnuSize must be specified once onlyaresultuAllocate the given amount of bytes (initially set to 0)astringuConvert a C string into a Python byte sequenceabufferuConvert a C buffer into a Python byte sequencea_buffer_typeacastauint8_t_typeafrom_bufferabyte_stringa_ArrayuObject type %s cannot be passed to C codeTuvoid *[1]a_pplaVoidPointer_cffilactypesac_ubyteacached_architectureaplatformaarchitectureutoo many values to unpack (expected 2)w.astartswithTaWinafind_libraryuCannot load library '%s'aCDLLavaluearawa_py_objecta_Py_buffera_PyObject_GetBufferabyrefa_PyBUF_SIMPLEalenafrom_addressabufa_PyBuffer_Releaseac_void_pa_paVoidPointer_ctypesa_raw_pointera_destructorasplitTw.:nlnlaextension_suffixesabasenameapycryptodome_filenameadir_compsapathaisfileaattemptsaappenduNot found '%s'aload_libacdecluCannot load '%s': %safilenameuCannot load native module '%s': %su, uLoad a shared library and return a handle to it.

    @name,  the name of the library expressed as a PyCryptodome module,
            for instance Cryptodome.Cipher._raw_cbc.

    @cdecl, the C function declarations.
    TObytesObytearrayOmemoryviewuReturn True if object x supports the buffer interfaceareadonlya__doc__a__file__a__spec__aoriginahas_locationa__cached__aabcasysuCryptodome.Util.py3compatTabyte_stringuCryptodome.Util._file_systemTapycryptodome_filenameamachineryaEXTENSION_SUFFIXESTObytearrayOmemoryviewTOobjecta__prepare__a_VoidPointera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCryptodome.Util._raw_apia__module__a__qualname__aabstractmethoduReturn the memory location we point toagetu_VoidPointer.getuReturn a raw pointer to this pointeraaddress_ofu_VoidPointer.address_ofa__orig_bases__aflagsaoptimizeluCFFI with optimize=2 fails due to pycparser bug.acffiTaFFIaFFIaNULLanull_pointeratypeofTuconst uint8_t*Tuuint8_t[1]a__bases__ac_ulongac_ulonglongac_uintac_size_tTnacreate_string_bufferaget_c_stringaget_raw_bufferac_uint8_ptruModel a newly allocated pointer to voida__init__uVoidPointer_cffi.__init__uVoidPointer_cffi.getuVoidPointer_cffi.address_ofaVoidPointerabackenductypes.utilTafind_libraryaArrayac_ssize_ta_c_ssize_tapythonapiaPyObject_GetBufferaPyBuffer_Releaseapy_objectaPOINTERa_c_ssize_paStructureaobjaitemsizeac_intandimaformatac_char_pashapeastridesasuboffsetsainternala_fields_uVoidPointer_ctypes.__init__uVoidPointer_ctypes.getuVoidPointer_ctypes.address_ofaSmartPointeruClass to hold a non-managed piece of memoryuSmartPointer.__init__uSmartPointer.getareleaseuSmartPointer.releasea__del__uSmartPointer.__del__aload_pycryptodome_raw_libais_bufferais_writeable_bufferuCryptodome\Util\_raw_api.pyu<module Cryptodome.Util._raw_api>Ta__class__TaselfTaselfaraw_pointeradestructorTwxTwcTadataTadataaobjabufabuffer_typeTainit_or_sizeasizearesultTac_stringTabufTanameacdeclalibTanameacdeclaplatformabitsalinkageafull_nameT
anameacdeclasplitadir_compsabasenameaattemptsaextafilenameafull_nameaexpTaselfarpu.Cryptodome.UtiluMiscellaneous modules

Contains useful modules that don't belong into any of the
other Cryptodome.* subpackages.

========================    =============================================
Module                      Description
========================    =============================================
`Cryptodome.Util.number`        Number-theoretic functions (primality testing, etc.)
`Cryptodome.Util.Counter`       Fast counter functions for CTR cipher modes.
`Cryptodome.Util.RFC1751`       Converts between 128-bit keys and human-readable
                            strings of words.
`Cryptodome.Util.asn1`          Minimal support for ASN.1 DER encoding
`Cryptodome.Util.Padding`       Set of functions for adding and removing padding.
========================    =============================================

:undocumented: _galois, _number_new, cpuid, py3compat, _raw_api
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptodomeu\not_existingaUtilTaNUITKA_PACKAGE_Cryptodome_Utilu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__LaRFC1751anumberastrxoraasn1aCounteraPaddinga__all__uCryptodome\Util\__init__.pyu<module Cryptodome.Util>u.Cryptodome.Util.numberluNon positive valuesutoo many values to unpack (expected 2)luReturn ceil(n/d), that is, the smallest integer r such that r*d >= nuSize in bits only available for non-negative numbersabit_lengthuReturns the size of the number N in bits.aRandomaget_random_bytesllTlastructapackwBabytes_to_longuReturn a random number at most N bits long.

    If :data:`randfunc` is omitted, then :meth:`Random.get_random_bytes` is used.

    .. deprecated:: 3.0
        This function is for internal use only and may be renamed or removed in
        the future. Use :func:`Cryptodome.Random.random.getrandbits` instead.
    asizeagetRandomIntegeravalueabitsarandfuncuReturn a random number *n* so that *a <= n < b*.

    If :data:`randfunc` is omitted, then :meth:`Random.get_random_bytes` is used.

    .. deprecated:: 3.0
        This function is for internal use only and may be renamed or removed in
        the future. Use :func:`Cryptodome.Random.random.randrange` instead.
    luReturn a random number with exactly N-bits,
    i.e. a random number between 2**(N-1) and (2**N)-1.

    If :data:`randfunc` is omitted, then :meth:`Random.get_random_bytes` is used.

    .. deprecated:: 3.0
        This function is for internal use only and may be renamed or removed in
        the future.
    uModulus cannot be zerouModulus cannot be negativeapowluThe inverse of :data:`u` *mod* :data:`v`.uN must be larger than 1agetRandomNBitIntegerwNaisPrimeTarandfuncuReturn a random N-bit prime number.

    N must be an integer larger than 1.
    If randfunc is omitted, then :meth:`Random.get_random_bytes` is used.
    wnwmwbaiter_rangeaminagetRandomRangewaatestedaappendwzu_rabinMillerTest(n:long, rounds:int, randfunc:callable):int
    Tests if n is prime.
    Returns 0 when n is definitely composite.
    Returns 1 when n is probably prime.
    Returns 2 when n is definitely prime.

    If randfunc is omitted, then Random.new().read is used.

    This function is for internal use only and may be renamed or removed in
    the future.
    a_fastmathagetStrongPrimealongllubits must be multiple of 128 and > 512amathaceilalogTllg+YqkBlg+#ǊTllleasieve_basewyafielda_rabinMillerTestarabin_miller_roundswparesultuCouln't find prime in field. Developer: Increase field_sizeainversewXweaGCDaincrementu
    Return a random strong *N*-bit prime number.
    In this context, *p* is a strong prime if *p-1* and *p+1* have at
    least one large prime factor.

    Args:
        N (integer): the exact length of the strong prime.
          It must be a multiple of 128 and > 512.
        e (integer): if provided, the returned prime (minus 1)
          will be coprime to *e* and thus suitable for RSA where
          *e* is the public exponent.
        false_positive_prob (float):
          The statistical probability for the result not to be actually a
          prime. It defaults to 10\ :sup:`-6`.
          Note that the real probability of a false-positive is far less. This is
          just the mathematically provable limit.
        randfunc (callable):
          A function that takes a parameter *N* and that returns
          a random byte string of such length.
          If omitted, :func:`Cryptodome.Random.get_random_bytes` is used.
    Return:
        The new strong prime.

    .. deprecated:: 3.0
        This function is for internal use only and may be renamed or removed in
        the future.
    uTest if a number *N* is a prime.

    Args:
        false_positive_prob (float):
          The statistical probability for the result not to be actually a
          prime. It defaults to 10\ :sup:`-6`.
          Note that the real probability of a false-positive is far less.
          This is just the mathematically provable limit.
        randfunc (callable):
          A function that takes a parameter *N* and that returns
          a random byte string of such length.
          If omitted, :func:`Cryptodome.Random.get_random_bytes` is used.

    Return:
        `True` is the input is indeed prime.
    uValues must be non-negativeabsrainsertu>Qg+l@lu>Iql u>BldcalstripTduConvert a positive integer to a byte string using big endian encoding.

    If :data:`blocksize` is absent or zero, the byte string will
    be of minimal length.

    Otherwise, the length of the byte string is guaranteed to be a multiple
    of :data:`blocksize`. If necessary, zeroes (``\x00``) are added at the left.

    .. note::
        In Python 3, if you are sure that :data:`n` can fit into
        :data:`blocksize` bytes, you can simply use the native method instead::

            >>> n.to_bytes(blocksize, 'big')

        For instance::

            >>> n = 80
            >>> n.to_bytes(2, 'big')
            b'\x00P'

        However, and unlike this ``long_to_bytes()`` function,
        an ``OverflowError`` exception is raised if :data:`n` does not fit.
    aunpackaaccwsvConvert a byte string to a long integer (big endian).

    In Python 3.2+, use the native method instead::

        >>> int.from_bytes(s, 'big')

    For instance::

        >>> int.from_bytes(b'P', 'big')
        80

    This is (essentially) the inverse of :func:`long_to_bytes`.
    awarningsawarnTulong2str() has been replaced by long_to_bytes()along_to_bytesTustr2long() has been replaced by bytes_to_long()a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaCryptodomeTaRandomuCryptodome.Util.py3compatTaiter_rangeaceil_divTnagcdagetPrimeTlfư>nTfư>nTlalong2strastr2longTNllllll
llllll%l)l+l/l5l;l=lClGlIlOlSlYlalelglklmlqlllllllllllllllllllllllllll
lllll%l3l7l9l=lKlQl[l]lalglolul{llllllllllllllllllllllllll#l-l3l9l;lAlKlQlWlYl_lelilklwlllllllllllllllllllllllll)l+l5l7l;l=lGlUlYl[l_lmlqlslwllllllllllllllllllllllll%l'l-l?lClElIlOlUl]lclillllllllllllllllllllllllll'l)l/lQlWl]lelwllllllllllllllllllllll
llll#l+l/l=lAlGlIlMlSlUl[lelyllllllllllllllllllllll'l7lElKlOlQlUlWlalmlslyllllllllllllllllllll!l#l'l)l3l?lAlQlSlYl]l_lilqllllllllllllllllllll#l%l+l/l5lClIlMlOlUlYl_lklqlwllllllllllllllll
l
l!
l1
l9
l=
lI
lW
la
lc
lg
lo
lu
l{
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
lllll#l)l-l?lGlQlWl]lelol{lllllllllllllllllll%l/l1lAl[l_lalmlslwlllllllllllllllll
l
l
l
l
l!
l+
l-
l=
l?
lO
lU
li
ly
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
llll!l'l/l5l;lKlWlYl]lklqlul}lllllllllllllllll
ll%l)l1lClGlMlOlSlYl[lglkllllllllllllllllllll!l%l+l9l=l?lQlilslyl{llllllllllllllllllll'l-l9lElGlYl_lclilolllllllllllllllll
lll#l)l+l1l7lAlGlSl_lqlslyl}llllllllllllll
ll'l-l7lClElIlOlWl]lglilml{llllllllllllllllllll!l/l3l;lElMlYlklolqlulllllllllllllllll%l)l+l7l=lAlClIl_lelglkl}lllllllllllllllllllll%l3l9l=lElOlUlilmlolulllllllllllllllllllll#l'l3lAl]lclwl{llllllllllllllllllll5l7l;lClIlMlUlglqlwl}llllllllllllllllllllll1l3lElIlQl[lylllllllllllllllllll!l#l-l/l5l?lMlQlilkl{l}llllllllllllllllll#l%l/l1l7l;lAlGlOlUlYlelklsllllllllllllllll'l+l-l3l=lElKlOlUlslllllllllllllll!l#l5l9l?lAlKlSl]lclilqlul{l}lllllllllllllllllllll%l+l/l=lIlMlOlmlqlllllllllllllllll
lll9lIlKlQlglul{llllllllllllllll l l l' l) l- l3 lG lM lQ l_ lc le li lw l} l l l l l l l l l l l l l l
!l!l5!lA!lI!lO!lY!l[!l_!ls!l}!l!l!l!l!l!l!l!l!l!l!l!l!l!l!l!l!l"l"l"l"l!"l%"l+"l1"l9"lK"lO"lc"lg"ls"lu"l"l"l"l"l"l"l"l"l"l"l"l"l"l"l#l#l#l'#l)#l/#l3#l5#lE#lQ#lS#lY#lc#lk#l#l#l#l#l#l#l#l#l#l#l#l#l#l#l#l$l$l$l$l)$l=$lA$lC$lM$l_$lg$lk$ly$l}$l$l$l$l$l$l$l$l$l$l$l$l$l$l$l$l$l$l%l%l%l%l'%l1%l=%lC%lK%lO%ls%l%l%l%l%l%l%l%l%l%l%l%l%l%l%l%l&l&l&l&l'&l)&l5&l;&l?&lK&lS&lY&le&li&lo&l{&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l'l'l5'l7'lM'lS'lU'l_'lk'lm'ls'lw'l'l'l'l'l'l'l'l'l'l'l'l'l'l(l(l
(l(l(l(l!(l1(l=(l?(lI(lQ(l[(l](la(lg(lu(l(l(l(l(l(l(l(l(l(l(l(l(l)l)l)l!)l#)l?)lG)l])le)li)lo)lu)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l*l*l*l%*l/*lO*lU*l_*le*lk*lm*ls*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l+l'+l1+l3+l=+l?+lK+lO+lU+li+lm+lo+l{+l+l+l+l+l+l+l+l+l+l+l+l+l+l,l,l,l#,l/,l5,l9,lA,lW,lY,li,lw,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l-l-l-l;-lC-lI-lM-la-le-lq-l-l-l-l-l-l-l-l-l-l-l.l.l.l
.l.l.l%.l-.l3.l7.l9.l?.lW.l[.lo.ly.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l/l/l/l/l'/l)/lA/lE/lK/lM/lQ/lW/lo/lu/l}/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l0l
0l#0l)0l70l;0lU0lY0l[0lg0lq0ly0l}0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l1l1l1l!1l'1l-1l91lC1lE1lK1l]1la1lg1lm1ls1l1l1l1l1l1l1l1l1l1l1l1l1l1l2l2l2l2l)2l52lY2l]2lc2lk2lo2lu2lw2l{2l2l2l2l2l2l2l2l2l2l2l2l2l2l2l2l3l%3l+3l/3l53lA3lG3l[3l_3lg3lk3ls3ly3l3l3l3l3l3l3l3l3l3l3l3l3l4l4l4l4l4l74lE4lU4lW4lc4li4lm4l4l4l4l4l4l4l4l4l4l4l4l4l4l5l5l5l-5l35l;5lA5lQ5le5lo5lq5lw5l{5l}5l5l5l5l5l5l5l5l5l5l5l5l5l5l5l6l6l6l#6l16l56l76l;6lM6lO6lS6lY6la6lk6lm6l6l6l6l6l6l6l6l6l6l6l6l7l7l7l7l?7lE7lI7lO7l]7la7lu7l7l7l7l7l7l7l7l7l7l7l7l8l8l!8l38l58lA8lG8lK8lS8lW8l_8le8lo8lq8l}8l8l8l8l8l8l8l8l8l8l8l8l8l8l9l9l#9l%9l)9l/9l=9lA9lM9l[9lk9ly9l}9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l:l:l:l:l':l+:l1:lK:lQ:l[:lc:lg:lm:ly:l:l:l:l:l:l:l:l:l:l:l:l;l;l;l!;l#;l-;l9;lE;lS;lY;l_;lq;l{;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l<l
<l<l<l<l)<l5<lC<lO<lS<l[<le<lk<lq<l<l<l<l<l<l<l<l<l<l<l<l<l=l
=l=l=l=l!=l-=l3=l7=l?=lC=lo=ls=lu=ly=l{=l=l=l=l=l=l=l=l=l=l=l=l=l>l>l>l>l>l#>l)>l/>l3>lA>lW>lc>le>lw>l>l>l>l>l>l>l>l>l>l>l>l>l>l>l>l?l
?l7?l;?l=?lA?lY?l_?le?lg?ly?l}?l?l?l?l?l?l?l?l?l?l?l?l@l!@l%@l+@l1@l?@lC@lE@l]@la@lg@lm@l@l@l@l@l@l@l@l@l@l@l@l@lAlAlAlAl!Al3Al5Al;Al?AlYAleAlkAlwAl{AlAlAlAlAlAlAlAlAlAlAlBlBlBlBl#Bl)Bl/BlCBlSBlUBl[BlaBlsBl}BlBlBlBlBlBlBlBlBlBlBlBlBlBlClClCl%Cl'Cl3Cl7Cl9ClOClWCliClClClClClClClClClClClClClClClClClDlDlDl#Dl)Dl;Dl?DlEDlKDlQDlSDlYDleDloDlDlDlDlDlDlDlDlDlDlDlDlDlDlElElEl+El1ElAElIElSElUElaElwEl}ElElElElElElElElElElElElElFlFlFlFl%Fl'Fl3Fl9Fl=FlCFlEFl]FlyFl{FlFlFlFlFlFlFlFlFlFlFlFlFlFlFlFlGlGlGl#Gl)Gl/Gl5Gl9GlKGlMGlQGl]GloGlqGl}GlGlGlGlGlGlGlGlGlGlGlGlGlGlHlHlHlHlHlHl1Hl=HlGHlUHlYHl[HlkHlmHlyHlHlHlHlHlHlHlHlHlIl
IlIlIl+Il7Il=IlEIlUIlcIliIlmIlsIlIlIlIlIlIlIlIlIlJlJlJl#Jl9JlAJlEJlWJl]JlkJl}JlJlJlJlJlJlJlJlJlJlJlJlKlKl
KlKlKl%Kl1Kl;KlCKlIKlYKleKlmKlwKlKlKlKlKlKlKlKlKlKlKlKlKlKlKlKlLlLl
LlLlLlLl!Ll-Ll3LlKLlULlWLlaLlgLlsLlyLlLlLlLlLlLlLlLlLlLlLlMlMlMl'Ml)Ml/Ml3MlAMlQMlYMleMlkMlMlMlMlMlMlMlMlMlMlMlMlMlMlMlNlNlNlNlNl+Nl5Nl7Nl=NlONlSNl_NlgNlyNlNlNlNlNlNlNlNlNlNlNlNlNlNlNlNlOlOlOl%Ol-Ol?OlIOlcOlgOlmOluOl{OlOlOlOlOlOlOlOlOlOlOlOlOlOlOlPlPlPl)Pl5Pl?PlEPlGPlSPlqPlwPlPlPlPlPlPlPlPlPlPlPlPlQlQl
QlQlQl#Ql%Ql5QlGQlIQlqQlyQlQlQlQlQlQlQlQlQlQlQlQlQlQlQlRlRlRlRlRlRl'RlCRlERlKRlaRlmRlsRlRlRlRlRlRlRlRlRlRlRlRlRlRlRlRlSlSl#SlASlESlGSlKSl]SlcSlSlSlSlSlSlSlSlSlSlSlSlSlSlSlSlSl
TlTlTlTl5Tl7Tl;TlATlITlSTlUTl_TlaTlkTlmTlqTlTlTlTlTlTlTlTlTlTlTlTlTlUl
UlUl'Ul+Ul9Ul=UlOUlQUl[UlcUlgUloUlyUlUlUlUlUlUlUlUlUlUlUlUlVlVlVlVl#Vl/Vl3Vl9Vl?VlKVlMVl]Vl_VlkVlqVluVlVlVlVlVlVlVlVlVlVlVlVlWlWlWlWlWlWl#WlGWlMWl_WlaWlmWlwWl}WlWlWlWlWlWlWlWlWlWlWlXl
XlXlXl'Xl+Xl-XlUXl[Xl]XlmXloXlsXl{XlXlXlXlXlXlXlXlXlXlXlXlXlXlXlXlYlYlYl!YlEYlKYlMYlWYl]YluYl{YlYlYlYlYlYlYlYlYlYlYlYlYlYlYlZl
ZlZlZlZlZl)Zl/Zl;ZlMZl[ZlgZlwZlZlZlZlZlZlZlZlZlZlZlZlZlZl[l[l[l[l%[l+[l=[lI[lK[lg[ly[l[l[l[l[l[l[l[l[l[l[l\l\l\l\l\l)\l/\l3\l9\lG\lK\lM\lQ\lo\lu\lw\l}\l\l\l\l\l\l\l\l\l\l\l\l\l]l]l]l]l]l1]l=]lA]lG]lO]lU]l[]le]lg]lm]ly]l]l]l]l]l]l]l]l]l]l]l]l]l]l^l
^l^l^l!^l'^l+^l-^l1^l9^lE^lI^lW^li^ls^lu^l^l^l^l^l^l^l^l^l^l_l_l'_l3_l5_l;_lG_lW_l]_lc_le_lw_l{_l_l_l_l_l_l_l_l_l_l_l_l`l#`l/`l7`lS`l_`le`lk`ls`ly`l`l`l`l`l`l`l`l`l`l`lalalalal-al9alKalUalWal[aloalyalalalalalalalalalalalalalblblbl!bl'bl;blAblKblQblSbl_bleblblblblblblblblblblblblblblblcl
clclcl/clAclCclOcl_clgclmclqclwcl}clclclclclclclclclcldldldldl!dl'dl+dl9dlCdlIdlOdl]dlgdludldldldldldldldldldldldldldlelel!el/el9el?elKelMelSelWel_elqel}elelelelelelelelelelelelelflflfl)fl1fl;flAflGflMfl[flaflsfl}flflflflflflflflflflflflflflglglglgl'gl1gl7gl?glEglQgl[gloglyglglglglglglglglglglhlhlhlhl-hl9hl;hl?hlEhlKhlMhlWhlYhl]hlchlihlkhlqhlhlhlhlhlhlhlhlhlhlhlhlhlilil
ilil)il/ilCilGilIilOileilkilqilililililililililililililililjl+jl7jl=jlKjlgjlijlujl{jljljljljljljljljljlklklkl#kl'kl-kl9klAklWklYkl_kluklklklklklklklklklklklklllll)ll+ll1ll5llUllYll[ll_llellgllsllwll}llllllllllllllllllllllllllllll
mlml%ml'ml+ml1ml9ml?mlOml]mlamlsml{mlmlmlmlmlmlmlmlmlmlmlmlmlnlnlnl)nl3nl;nlEnlunlwnl{nlnlnlnlnlnlnlnlnlnlnlnlnl
olololol/ol=olMolSolaoleolyol}olololololololololololololololololololololplplpl'pl3pl9plOplQplWplcpluplyplplplplplplplplplplplplplplqlql!ql3qlQqlYql]ql_qlcqliqlqlqlqlqlqlqlqlqlqlqlqlqlqlrlrlrlrl%rl/rl;rlCrlUrlgrlqrlwrlrlrlrlrlrlrlrlrlrlrlrlrlrlrlrlsl
sl!sl+sl=slWsl[slaslslslslslslslslslslslslslslsltltl-tl9tl?tlAtl]tlktl{tltltltltltltltltltltltltlulul%ul;ul=ulMul_ulkulwulululululululululululululululululvlvl!vl-vl3vl=vl?vlUvlcvlivlovlsvlvlvlvlvlvlvlvlvlvlwlwlwlwl!wl-wl5wlAwlKwlYwl]wl_wlqwlwlwlwlwlwlwlwlwlwlwlwlwlwlxl%xl+xl5xl=xlSxlYxlaxlmxlwxlyxlxlxlxlxlxlxlxlxlxlxlxlxlxlylyl%yl+yl9yl?ylKylWyl]ylgyliylsylylylylylylylylylylylylylylylylzlzlzlzlzl#zl'zl-zlKzlWzlYzl_zlezlizl}zlzlzlzlzlzlzlzlzl{l{l{l{l+{l5{l7{l;{lO{lU{l_{lq{lw{l{l{l{l{l{l{l{l{l{l{l{l{l{l|l|l|l1|l7|lI|lg|li|ls|l|l|l|l|l|l|l|l|l|l}l}l}l}l3}l9}l;}l?}lE}lM}lS}lY}lc}lu}lw}l}l}l}l}l}l}l}l}l}l}l}l}l~l~l)~l+~l/~l5~lA~lC~lG~lU~la~lg~lk~lq~ls~ly~l}~l~l~l~l~l~l~l~l~l~l~l~l~l~llll1l3l9l=lClKl[lalclmlylllllllllllllll!l#l?lAlGlKlelwllllllllɀlˀl׀lۀllllll
lll/l1l;lClSlYl_l}lllllllllǁl߁lllll%l1l3l?lClElIlOlalol{lllllllǂlςlՂl߂llllll!l)l-l3l5l?lAlMlQlSlWl]lelilolllll˃lՃl׃l݃llllllll#l%l;lAlGlOlalelwlllllll̈́llllll
lKlOlQl]lclmlol{llllllͅlӅlՅlۅlllllllll!l/l9l?lAlMlclul}lllllllÆlņlφlцl׆lllllll+l/l5lGlYl[lklqlwllllllllŇlǇlˇl݇llllll!l7l=lClQlalgl{lllllψlӈlllllllll#l'l-l9lElMlQlWlcllllllÉlωlщlۉlllllll#l5lAlIlOl[l_lmlwlyllllllǊlˊl͊lъl׊lllll
ll!lWl]lllllllՋlًlۋllllllll'l9l;lGlSl]lol{llllllllllŌl݌llllll
l#l)l7lAl[l_lqlylllllllōlˍlӍlٍlߍllllll%lQlclilslulyllllllllǎlώlӎlێlllllll#l-l?lElKlSlYlelilqllllllllllɏlՏlllll
ll#l%l1l7l;lAlClOlSlmlslllllllllŐlߐlllll'l3l=lElOlQlalgl{lllllllɑlّlۑlllllll!l/lAlGlWlklqlul}llllllllllÒlŒl˒lՒlגllllllll;l=lClUlsllllllǓlדlݓlllllll?lElKlOlclglilml{lllllÔllllll!l'l-l5l9lKlWl]l_lulllllllllllϕlllll/l1l5l;l=lelllllll˖lіlӖlllll
lll%l+l3l7l9lClIlQl[l]lolllllll×l͗lӗlٗlllllll)l/l;lAlQlklollllllllØlɘlϘlݘlllll
lll)l1l;l=lAlGlIlSl}llllllllǙl˙l͙lיlllllll%lKlOlUlWlalullllllÚlǚlϚlllllll'l/l5lElQlYlclolwllllllllllśl˛lϛlݛllll#l+l/l5lIlMl_lelglllllllllלlٜlllllll'l-l1l=lUl[lalllllÝlllllll#l'l-l3l;lGlQlSl_lolllllllllllll#l/l7l;lClSlalmlslwl}lllllllllǟlߟlllll
l!l3l9l?lOlWl[lalulylllllllɠl٠l۠lߠllllllllll)l/l5lAlSlul}lllllllálšllllll#l)l/l1lClGlMlklyl}lllllllllllŢlѢlעlllll!l+l1lIlQlUlslyl{llllllllǣlգlۣlllllllll!l#l'l;lMlWlYlclilulllllälŤlˤlѤlդlllllll)l+l5l;lClSl[lalmlwlllllllllťl˥lӥl٥lݥlߥllllll
l%l=lIlKlQl]lsllllllllɦlͦlϦlզlߦlllllll#l)l-lElMlWlYlelklolllllllɧlѧlקlllllll)l+l7l;lUl_lml}llllllǨlרllllll1l7l9lCllllllllll٩lߩlllll5l9l;lGlMlWlYl]lklqlllllllŪlɪlllllll
lllMl[lqlsllllllllūlӫl׫lݫllllllll'l7l9lElOlWl[lalclllllllll٬lllllllll?lElSl]l_lellllíl˭lѭlխlۭllllllll#l+lIlMlOlYlalglklqlllllllŮlѮllllllll'l+l3lClOlWl]lmlulllllllllϯlկlllll?lAlGlKlQlSlil{l}lllll˰lϰlllllllllll1lAlMl[lelslyllllllӱlݱllllllll-l?lIl[lclilml{llllllòlǲlӲllllllll'l-l?lElwl}llllllųl˳llllll
lll5l=lClIl[lelglklwlllllllǴlݴlllll
ll-l?lKlglilolslyllllllllյlߵlllllll)l/l3l9lGlWlYl_lclollllllll׶l۶llllll
lll)l5lGlUlmlllll˷lѷlӷlllllll!l'l+l-l9lUlglullllllllǸl͸lոllllllll/l9l;lGlQlcllllllllll˹lѹlݹlllll
ll%l)l+lAlSlUl_lalelyl}llllllll˺lݺllllll'l-l=lClKlOl[lalilmlllllɻlϻlۻllllll#l3l;lAlEl]lolwlllllllѼlռllll
llll5lAlOlYl_lalglklqllllllllͽlѽlllllll!l%l'l[l]lolulyllllllllllϾlپl۾llllll3l9lMl]l_lklql{llllllllϿlտlݿllllllll)l/l1l7l;lGlelml}lllllllllllllllll+l3l7lElIl[lslyl{lllllllllllllll!l/l?lKlMlSl]lwl{l}lllllllllllllllll%lGlIlOlelglqlllllllllllllllllll-l3l7lUlWlalolslllllllllllllllllAlGlQl_lklolulwllllllllllll#l5lAlOlUlYlellllllllllllll
lll-l1l9lWlclglslulllllllllllllll'l)l9l?lSlWlkllllllllllllllllllllll/l7l=lAlSl_lklyl}llllllllllllllll%l7l9lKlUl[lilslulllllllllllllllll)l5l;lSlYlclelqlllllllllllll
lll#l+lAlClMlYlalllllllllllll%l1l=l?lIlQlWl[lclgllllllllllllllll!l/lGlMlQlel{l}lllllllllllllllll7l;lMlUl_lalelmlyl}llllllllllllllll!l3l=lKlOlilollllllllllllll-l/lAlWlYl]lilklqlwl}llllllllllll
llll5l;lGlYlalelylllllllllllllllll!l+lClKlUlilul{llllllllllll'l/l3l;lKlYl_lclillllllllllllllllll
lll#l1l5l7lIlYl_lelglwllllllllllllll-l1lClUl]lal{llllllllllllllll!l'l?lElMlWlkl{lllllllllllll#l%l)l+l/l7lMlUlglsllllllllllll%l3l9lClElOlQlWlmlolslylllllllllllllllllll#l)l?lQlYl]l_lqlwl{l}lllllllllllll#l%l1l;lClUlglklsllllllllllll
l'l1l9l?lIlQlalolul{lllllllllllllllllll#l5l9lSlWl_lilol}lllllllllllllllll)l;l=lAlMlOlYl[lalmlwl}llllllllllllllll+l3l7l=lKlUl[lglilslllllllllllllllll'l-l5lElSlql{llllllllllll%l)l1l5lClOlYlalmlqlwllllllllllllllllll+l-l=lClWl[lulylllllllllllllll#l'l)l9l;lMlQlWl_lclilulwl}lllllllllllll#l+l1l;lGlIlSlUlmlqllllllllllll!l%l7l?lElKlWlglmlullllllllllll!l)l9l?lSlWlclolullllllllllllllllll
lll/l=lGlIlSlUlalglklllllllllllllllll1l3l7l=lKlOlQlilulyllllllllllllllll-l3l;lKlQl_lclil{lllllllllll/l5lClMl_lmlql}lllllllllllllllll1l9l?l[lalclollllllllllllll!l)lMlQl]lilol{llllllllllllllll/l7l=lAlUlYl[lelklyllllllllllllllll!lIlOlclglsl{lllllllllll'l/lElMlclklqllllllllllllllll+l/l5lClGlOlglklqlwlyllllllllllllllllll!l7l=lUlul{llllllllllllll#l'l3l;lAlWl_lelilwlllllllllllllllllAlYl[l_lglslwllllllllll
ll!l%l+lElKlUlclullllllllllllllll!l)l5lGlQlclkllllllllllllllll
l5l7lSl[lalglyllllllllllll-l1lClOlQlUlclilslyllllllllllllllllll!l'l-l5lGlYlclelolqlwl{lllllllllllllllllll%l1l7l;lAlOl_lalmlqlwlllllllll
ll!l%l?lClQl[lml{llllllllllllll-l/l?lGlMlul}lllllllllll)l7lAlClOlYlalelmlslyllllllllll
lll+l1lQlUlglmlol{lllllllllllllll'l/lAlKlMlWl_lclilul{lllllllllllll
ll+l/lIlMl[lelqllllllllllllllllll+l-l3l?lIlQl]lalolslylllllllllllllll#l'l-l/l3l;lKlYlkllllllllllllllll#l)l7l;l=lYlqlyl}llllllll!l'l+l7l9lElIlOlclmlllllllllllllllll!l)l9lElSl]l{lllllllllllllll#l%l/l=lClIlglklslllllllllllllllll1l9lClElQlUlalmlslulllllllllllllll)l?lGlQlSl]lclelilwl}llllllllllllllllll#l/lCl_lsl}llllllllllllllll
ll+l3l=lWl[l]lclglulylllllllllll
l
l
l-
l3
lA
lK
lo
lq
lu
l{
l
l
l
l
l
l
l
l
ll%l/lUl[l_lalyl}llllllllllllllll3l=lKlOl[lglilyllllllllllll
l
l
l!
l#
l'
l-
l5
l?
lS
lc
l
l
l
l
l
l
l
l
l
l
l
lllll+lGlIlMlSlelqlwllllllllllll
lll3l7l?lQlWl[lalilslulyl{lllllll-l;lAlMlilkllllllllllllllll)l+l5lGlglmlqlslyllllllllllllll
ll!l%l'l7l9l?lOlUl]lalilllllllllllllll'l3l9l;lQlWlYlelklllllllllllllllll5l=lIlalqlllllllllllllllll%l'l-l9lClElOlUlWlclolllllllllllllll)lAlElQlYl]l_lwl}llllllllllllllllll
lll/l1l7l;lOlglql}llllllllll
llll!l'l=lQlalmlllllllllllllllllll#l/l3l9l?lSl_lklolullllllllllllllll#l%l;l=lMlOlUl_lslylllllllll
lll!l-l1l7lUlclglollllllllllllllllll#l;l?l]lqlwllllllllllllllll
ll%l1l5l;lMlOlSlelglwllllllllll+l=lKlWl]lolslllllllllllllll-l3l9lKlQlYlclolul}lllllllllllllll l l+ l7 l[ l_ lw ly l l l l l l l l l l l l!l!!l%!l+!l?!lC!lW!l]!lm!ls!lu!l!l!l!l!l!l!l!l!l!l!l!l!l!l!l"l'"l/"l5"l9"lG"lM"lS"lq"lu"l{"l"l"l"l"l"l"l"l"l"l"l"l#l
#l#l#l##l7#lA#lG#lM#l[#le#lq#ls#l#l#l#l#l#l#l#l#l#l#l#l$l$l$l$l-$lE$lK$lO$l[$li$lm$lu$ly$l$l$l$l$l$l$l$l$l$l%l%l%l%l%l!%lG%lK%le%l}%l%l%l%l%l%l%l%l%l%l%l%l%l%l&l
&l&l+&l;&lA&lI&lS&lY&lg&lq&l}&l&l&l&l&l&l&l&l&l&l'l'l
'l'l'l!'l%'l3'l9'l?'l['la'lc'lm'ly'l'l'l'l'l'l'l'l'l'l'l'l'l'l(l(l(l(l-(l9(lM(l](lk(l(l(l(l(l(l(l(l(l(l(l(l(l(l)l/)l1)l;)lC)lG)l[)la)ls)l})l)l)l)l)l)l)l)l)l)l)l)l*l*l-*l7*lO*lQ*l[*lc*ls*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l+l#+l5+l;+l?+lW+li+lk+l{+l+l+l+l+l+l+l+l+l+l+l,l,l,l,l%,l/,lG,lI,lS,lk,lq,lw,l,l,l,l,l,l,l,l,l,l,l,l
-l-l%-l--lQ-lU-la-lo-ls-l-l-l-l-l-l-l-l-l-l-l-l-l-l.l.l.l#.l'.l/.l9.lA.lG.li.lk.lw.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l/l/l/l/l+/l1/l5/lI/lO/l[/lq/lw/ly/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l0l0l'0l+0lE0lK0li0lm0l0l0l0l0l0l0l0l0l0l0l0l0l1l)1l91l;1lM1lS1lW1l]1lc1lo1lq1l{1l1l1l1l1l1l1l1l1l1l1l2l2l2lA2l[2le2lg2l2l2l2l2l2l2l2l2l2l2l2l2l2l2l3l3l3l33l93l=3lc3li3ls3ly3l3l3l3l3l3l3l3l3l3l3l3l4l4l4l'4l)4l-4l54lG4lQ4l]4l4l4l4l4l4l4l4l4l4l5l5l#5l+5l/5l15l75lM5lS5lY5la5l}5l5l5l5l5l5l5l5l5l5l5l5l5l5l6l6l!6l%6l'6l36l?6lC6lI6l[6ly6l6l6l6l6l6l6l6l6l6l6l6l7l7l7l7l)7l57lG7lK7lM7lQ7lS7l7l7l7l7l7l7l7l7l7l7l7l7l7l7l8l8l8l8l#8lC8lG8l_8le8lk8ls8l}8l8l8l8l8l8l8l8l8l
9l9l9l9l'9l-9l19l?9lO9lQ9l]9lg9li9lo9l{9l9l9l9l9l9l9l9l9l9l9l9l:l:l-:l?:lA:lW:lY:li:lk:l:l:l:l:l:l:l:l:l:l:l:l;l;l;l;l%;l);l+;l/;l=;lI;la;lk;lm;ly;l;l;l;l;l;l;l;l;l;l;l;l<l
<l<l<l<l!<l%<l9<lC<l]<li<lu<ly<l{<l<l<l<l<l<l<l<l<l<l<l<l<l<l=l=l=l=l-=l/=l3=lG=lQ=lW=l=l=l=l=l=l=l=l=l=l=l=l=l=l>l
>l>l1>l7>le>lm>lw>l}>l>l>l>l>l>l>l>l>l>l>l>l>l?l?l
?l?l%?l'?l+?l??lI?lU?la?li?lm?l?l?l?l?l?l?l?l?l?l?l@l@l@l@l!@l/@l3@l5@lS@lW@lY@l]@le@lo@lu@lw@l@l@l@l@l@l@l@l@l@lAl
AlAlAl)Al+Al/Al7Al=AlAAlUAl[AlgAl}AlAlAlAlAlAlAlAlAlAlBlBl%Bl'Bl3Bl7Bl=BlCBlKBlaBlcBluBlBlBlBlBlBlBlBlBlBlBlBlBlCl!Cl#Cl'Cl)ClEClGClKCl]ClcCliCloCl{Cl}ClClClClClClClClClDl%Dl5Dl;DlADlODlgDlsDlwDlDlDlDlDlDlDlDlDlElElElElElEl!El+El9ElCElEElIElcEloElElElElElElElElElElElElElElElFlFlFl)FlQFleFliFlkFl{FlFlFlFlFlFlFlFlFlFlFlFlGlGlGl1Gl=GlAGlOGleGlyGlGlGlGlGlGlGlGlGlGlGlHlHlHl+Hl1HlOHlUHl[Hl]HlcHlyHlHlHlHlHlHlHlHlHlHlHlHlHlHlIlIlIl'IlKIlSIlYIl]Il_Il{Il}IlIlIlIlIlIlIlIlIlIlIlIlIlIlJlJlJlJl)Jl+Jl5JlGJlOJlmJlJlJlJlJlJlJlJlJlJlJlJlJlKlKlKl3Kl9KlIKlKKl[KlyKl{KlKlKlKlKlKlKlKlKlKlKlLlLl#Ll-Ll9LlELlYLl_LlcLleLloLluLlLlLlLlLlLlLlLlLlLlLlLlLlLlMl1Ml7MlAMlSMlUMlqMlsMlyMlMlMlMlMlMlMlMlMlMlMlNl
NlNlNl-NlCNlINl]NlaNlgNlsNluNl{NlNlNlNlNlNlNlNlNlNlNlNlOl!Ol9Ol;OlEOlGOlMOlSOlWOl]OlOlOlOlOlOlOlOlOlPlPl
Pl5Pl=PlCPl_PlaPlePlsPlyPlPlPlPlPlPlPlPlPlPlPlPlPlPlPlQlQlQlQl'Ql3QlEQlOQlQQlUQlaQlcQlmQluQlQlQlQlQlQlQlQlQlQlQlQlRlRlRl!Rl-Rl3Rl;RlGRlcRleRlRlRlRlRlRlRlRlRlRlRlRlSl5Sl;SlCSlISlMSlUSlSlSlSlSlSlSlSlSlSlSlSlSlTlTlTl+Tl?TlCTlOTlQTl]TlmTloTlTlTlTlTlTlTlTlTlTlTlTlTlUlUlUlUl)Ul?UlWUlkUloUl}UlUlUlUlUlUlUlUlUlUlUlUlUlUlVlVlVlVl#Vl%Vl=VlGVlMVlOVlYVl[VlaVlwVlVlVlVlVlVlVlVlVlVlVlVlVlVlVlWlWl-Wl=WlEWlIWlOWlgWlmWl{WlWlWlWlWlWlWlWlWlWlWlWlXlXlXl5XlAXliXlqXlXlXlXlXlXlXlXlXlYlYlYlYl;YlMYl[YlgYlkYlYlYlYlYlYlYlYlYl
ZlZlZl!ZlCZlKZlQZlUZlWZl[ZliZlZlZlZlZlZlZlZlZlZlZlZlZlZlZl[l[l[l#[l)[l3[lA[lG[lW[li[lw[l[l[l[l[l[l[l[l[l[l[l[l[l[l[l
\l\l\l\l#\l1\lA\le\ls\ly\l}\l\l\l\l\l\l\l\l\l\l\l]l]l%]l+]l1]l7]lE]lI]lW]lc]li]ls]l]l]l]l]l]l]l]l]l]l]l]l]l]l]l^l^l^l!^l5^l9^l;^lE^lG^lQ^lY^l^l^l^l^l^l^l^l^l^l^l^l^l_l#_l)_l+_l5_l=_lC_lS_lg_lk_ly_l_l_l_l_l_l_l_l_l_l_l_l_l_l_l_l_l`l`l%`l3`l=`lK`lO`lU`lW`l[`li`ls`l`l`l`l`l`l`l`l`l`lalalalal!al#al'alEalGalealialqalalalalalalalalalalalalblblbl#bl5bl7blIblOblUblkbl}blblblblblblblblblblclclclcl%cl3clCcl[claclmcluclclclclclclclclclclcldldldldldldl/dl9dl?dl]dledlkdlqdludldldldldldldldldldldldlelelelel)el=elAelCelGeleelkelyelelelelelelelelelelelfl+fl7fl?flUfliflmfl{flflflflflflflflflflflglgl#gl'gl/gl5gl9gl?glAgl]glcgliglglglglglglglglglglgl
hlhlhlhl+hl;hl=hlChlIhlMhlShl[hlmhlhlhlhlhlhlhlhlhlhlhlhlhlhlhlhlhlilil+il-il3il?ilIilWil[ilililililililililililililililjljljljl#jl-jl3jlAjlQjlYjl_jlkjlujlwjljljljljljljljljljljljljljl
klklklkl;klAklIklwkl}klklklklklklklklklklklklklklllll-ll7ll9llCllEllIllOllallcllgll{llllllllllllllllllllllml'ml)ml/ml3ml5ml9ml?mlSmlYmlqmlumlwml{mlmlmlmlmlmlmlnlnlnl+nlAnlCnl[nlqnlsnlnlnlnlnlnlnlnlnlnlnlnlnlnlolololol-ol7ol9olQolaolioloololololololololololololplpl-pl5plAplSplcpleplqplwpl{plplplplplplplplplplplplplpl
qlql1qlAqlCqlMqlOqlSql_qlaqlmqlwqlqlqlqlqlqlqlqlqlqlrlrlrl3rl9rl=rlErlIrl[rlcrlgrlurlyrlrlrlrlrlrlrlrlrlrlrlslslsl!sl-sl3slWsl_slksloslqslusl}slslslslslslslslslslslslsltltltltl#tl)tl/tl7tlOtlUtl_tlktltltltltltltltltltltltltltltlul'ul+ul3ul=ulIulQul]ulmulsulululululululululululululvlvl'vl-vl/vl9vl;vlEvlKvlqvl}vlvlvlvlvlvlvlvlvlvlvlvlvlvlwl
wlwl+wl5wl;wlOwlawlwlwlwlwlwlwlwlwlwlwlwlxlxl
xlxl!xl%xlCxlIxlKxlQxlaxlyxlxlxlxlxlxlxlxlxlxlxlxlxlylyl)yl-ylEylKylMylYylylylylylylylylylylylylylzlzlzlzlzl5zl7zl;zlOzlSzlYzl}zlzlzlzlzlzlzlzlzlzlzlzlzlzl{l1{l9{lO{l]{lg{l{l{l{l{l{l{l{l{l{l{l{l|l|l|l/|lW|lY|l]|lc|le|lk|lu|l|l|l|l|l|l|l|l|l|l|l}l
}l}l}l#}l)}l+}l/}lG}lI}lM}lq}ls}l}l}l}l}l}l}l}l}l~l%~l1~l3~l7~l9~lC~lE~lO~lW~l[~l~l~l~l~l~l~l~l~l~l~l~l~l~ll!l5lKlQl_lllllllllll
llll+lAlIlSlUlglklsl}llllllllˀl׀lllll
l%l=lClOlQlglmllllllllՁlہlllll!l3l5l9lGlMlQlSl]l_lolql{lllllllłlɂlςlllllll%l/l;l=lAlClMlelmlwlllllll̓lكllll'l+l1l?lElIlQlglollllÄlǄlɄl߄llllllll'l;lMlSl_lil{l}lllllll˅lхlllllllll%l)l=lClSlYlyllllllˆlцlنlll
l!l7l9lIlWl]lalolulllllÇlɇlهlllllll'l)l3l;lAl_lklulllllllllÈlňlψllll
l)l=lAlUl[l_l}lllllllˉl׉l݉lll+l1l?lClIlOl]lul{llllllǊlيlllllllll'l)l5l?lMlSlWlYlelllllllˋlՋl݋lllllll#l+l5lIl[lelklql}llllllllŌl͌lߌlllllll1l=lElWl[lilmlslulllllɍl͍lύlllllll!l)l3lElKlYlclolql}llllllllllՎl׎lێlllll%l/l5l7l;lIlUlYlalklmlslllllll׏lߏllll!l%l3l=lQlalclgl{lllllllllϐlӐllllllll-lilklqllllllˑlבlݑllllll)l7lGlYl_llllllllllӒlllll1l?lElyl{llllllۓlߓlllllll!l/l;lWlil}lllllllllÔl۔llllllll+lYlklylllllllѕlߕllllll!l+l-l7l9l=lClIlUlalolul{lllllllӖlՖllllll'l)l/l3lYl_lilulwlllllllɗlϗllllll+lAlOlYl_lelglqllllll˘lӘllllllll
lluCryptodome\Util\number.pyu<module Cryptodome.Util.number>Twnaroundsarandfuncan_1wbwmatestedwiwawzacompositewrTwsaaccaunpackalengthaextrawiTwnwdwrwqTwNarandfuncanumberTwNarandfuncwSaodd_bitsarand_bitsavalueTwNarandfuncavalueTwawbarandfuncarange_abitsavalueTwNweafalse_positive_probarandfuncarabin_miller_roundswxalower_boundaupper_boundwXwpwiwyafieldaprimeaoffsetwjaresultacompositeatmpatmp1atmp2wRaincrementais_possible_primeTwuwvTwNafalse_positive_probarandfuncwparoundsTwnablocksizeTwnablocksizearesultapackabsrabresultatarget_lenTwNTwsu.Cryptodome.Util.py3compat,aencodeTulatin-1ulatin-1atobytesadecodeuReturn an immutable copy of a sequence (byte string, byte array, memoryview)
    in a certain interval [start:seq]uCompatibility code for handling string/bytes changes from Python 2.x to Py3k

In Python 2.x, strings (of type ''str'') contain binary data, including encoded
Unicode text (e.g. UTF-8).  The separate type ''unicode'' holds Unicode text.
Unicode literals are specified via the u'...' prefix.  Indexing or slicing
either type always produces a string of the same type as the original.
Data read from a file is always of '''str'' type.

In Python 3.x, strings (type ''str'') may only contain Unicode text. The u'...'
prefix and the ''unicode'' type are now redundant.  A new type (called
''bytes'') has to be used for binary data (including any particular
''encoding'' of a string).  The b'...' prefix allows one to specify a binary
literal.  Indexing or slicing a string produces another string.  Slicing a byte
string produces another byte string, but the indexing operation produces an
integer.  Data read from a file is of '''str'' type if the file was opened in
text mode, or of ''bytes'' type otherwise.

Since PyCryptodome aims at supporting both Python 2.x and 3.x, the following helper
functions are used to keep the rest of the library as independent as possible
from the actual Python version.

In general, the code should always deal with binary strings, and use integers
instead of 1-byte character strings.

b(s)
    Take a text string literal (with no prefix or with u'...' prefix) and
    make a byte string.
bchr(c)
    Take an integer and make a 1-character byte string.
bord(c)
    Take the result of indexing on a byte string and make an integer.
tobytes(s)
    Take a text string, a byte string, or a sequence of character taken from
    a byte string and make a byte string.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaabclwbabchrabstrabordatostrabyte_stringaconcat_buffersaBytesIOaStringIOqamaxintaiter_rangeais_native_intais_stringais_bytesTaABCaABCaFileNotFoundErrora_copy_bytesuCryptodome\Util\py3compat.pyu<module Cryptodome.Util.py3compat>TastartaendaseqTwsTwawbTwxTwsaencodingTabsu.Cryptodome.Util.strxor%uOnly byte strings of equal length can be xoredacreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)a_raw_strxorastrxorac_uint8_ptrac_size_taoutputaget_raw_bufferuFrom two byte strings of equal length,
    create a third one which is the byte-by-byte XOR of the two.

    Args:
      term1 (bytes/bytearray/memoryview):
        The first byte string to XOR.
      term2 (bytes/bytearray/memoryview):
        The second byte string to XOR.
      output (bytearray/memoryview):
        The location where the result will be written to.
        It must have the same length as ``term1`` and ``term2``.
        If ``None``, the result is returned.
    :Return:
        If ``output`` is ``None``, a new byte string with the result.
        Otherwise ``None``.

    .. note::
        ``term1`` and ``term2`` must have the same length.
    lluc must be in range(256)astrxor_catermuFrom a byte string, create a second one of equal length
    where each byte is XOR-red with the same value.

    Args:
      term(bytes/bytearray/memoryview):
        The byte string to XOR.
      c (int):
        Every byte in the string will be XOR-ed with this value.
        It must be between 0 and 255 (included).
      output (None or bytearray/memoryview):
        The location where the result will be written to.
        It must have the same length as ``term``.
        If ``None``, the result is returned.

    Return:
        If ``output`` is ``None``, a new ``bytes`` string with the result.
        Otherwise ``None``.
    uVery fast XOR - check conditions!a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCryptodome.Util._raw_apiTaload_pycryptodome_raw_libac_size_tacreate_string_bufferaget_raw_bufferac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libTuCryptodome.Util._strxoru
                    void strxor(const uint8_t *in1,
                                const uint8_t *in2,
                                uint8_t *out, size_t len);
                    void strxor_c(const uint8_t *in,
                                  uint8_t c,
                                  uint8_t *out,
                                  size_t len);
                    Tna_strxor_directuCryptodome\Util\strxor.pyu<module Cryptodome.Util.strxor>Taterm1aterm2aresultTaterm1aterm2aoutputaresultTatermwcaoutputaresultu.CryptodomeTa__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_Cryptodomeu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__LaCipheraHashaProtocolaPublicKeyaUtilaSignatureaIOaMatha__all__Tllw1aversion_infow.a__version__uCryptodome\__init__.pyu<module Cryptodome>u.OpenSSL.SSLa_problemsa_raise_current_erroraErrorapopTlu
        Raise an exception from the OpenSSL error queue or that was previously
        captured whe running a callback.
        a_CallbackExceptionHelpera__init__awrapsawrapperu_VerifyHelper.__init__.<locals>.wrappera_ffiacallbackuint (*)(int, X509_STORE_CTX *)a_libaX509_STORE_CTX_get_current_certaX509_up_refaX509a_from_raw_x509_ptraX509_STORE_CTX_get_erroraX509_STORE_CTX_get_error_depthaSSL_get_ex_data_X509_STORE_CTX_idxaX509_STORE_CTX_get_ex_dataaConnectiona_reverse_mappingaselfaappendlaX509_STORE_CTX_set_erroraX509_V_OKlu_ALPNSelectHelper.__init__.<locals>.wrapperuint (*)(SSL *, unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)abuffer:nnnainstraprotolistaNO_OVERLAPPING_PROTOCOLScuALPN callback must return a bytestring or the special NO_OVERLAPPING_PROTOCOLS sentinel value.anewuunsigned char *uunsigned char[]a_alpn_select_callback_argsaSSL_TLSEXT_ERR_NOACKaSSL_TLSEXT_ERR_OKaSSL_TLSEXT_ERR_ALERT_FATALu_OCSPServerCallbackHelper.__init__.<locals>.wrapperuint (*)(SSL *, void *)aNULLafrom_handleuOCSP callback must return a bytestring.laOPENSSL_mallocaSSL_set_tlsext_status_ocsp_resplu_OCSPClientCallbackHelper.__init__.<locals>.wrapperTuunsigned char **aSSL_get_tlsext_status_ocsp_resplu_CookieGenerateCallbackHelper.__init__.<locals>.wrapperuint (*)(SSL *, unsigned char *, unsigned int *)u_CookieVerifyCallbackHelper.__init__.<locals>.wrapperuint (*)(SSL *, unsigned char *, unsigned int)afilenouargument must be an int, or have a fileno() method.ufile descriptor cannot be a negative integer (%i)astringaOpenSSL_versionu
    Return a string describing the version of OpenSSL in use.

    :param type: One of the :const:`OPENSSL_` constants defined in this module.
    a_requires_decoratoru_make_requires.<locals>._requires_decoratoru
    Builds a decorator that ensures that functions that rely on OpenSSL
    functions that are not present in this build raise NotImplementedError,
    rather than AttributeError coming out of cryptography.

    :param flag: A cryptography flag that guards the functions, e.g.
        ``Cryptography_HAS_NEXTPROTONEG``.
    :param error: The string to be used in the exception if the flag is false.
    aflagaexplodeu_make_requires.<locals>._requires_decorator.<locals>.explodeaerrorumethod must be an integera_methodsutoo many values to unpack (expected 2)uNo such protocola_openssl_assertaSSL_CTX_newagcaSSL_CTX_freea_contexta_passphrase_helpera_passphrase_callbacka_passphrase_userdataa_verify_helpera_verify_callbacka_info_callbacka_keylog_callbacka_tlsext_servername_callbacka_app_dataa_alpn_select_helpera_alpn_select_callbacka_ocsp_helpera_ocsp_callbacka_ocsp_dataa_cookie_generate_helpera_cookie_verify_helperaset_modeaSSL_MODE_ENABLE_PARTIAL_WRITEaset_min_proto_versionaset_max_proto_versionaSSL_CTX_set_min_proto_versionu
        Set the minimum supported protocol version. Setting the minimum
        version to 0 will enable protocol versions down to the lowest version
        supported by the library.

        If the underlying OpenSSL build is missing support for the selected
        version, this method will raise an exception.
        aSSL_CTX_set_max_proto_versionu
        Set the maximum supported protocol version. Setting the maximum
        version to 0 will enable protocol versions up to the highest version
        supported by the library.

        If the underlying OpenSSL build is missing support for the selected
        version, this method will raise an exception.
        a_path_bytesaSSL_CTX_load_verify_locationsu
        Let SSL know where we can find trusted certificates for the certificate
        chain.  Note that the certificates have to be in PEM format.

        If capath is passed, it must be a directory prepared using the
        ``c_rehash`` tool included with OpenSSL.  Either, but not both, of
        *pemfile* or *capath* may be :data:`None`.

        :param cafile: In which file we can find the certificates (``bytes`` or
            ``unicode``).
        :param capath: In which directory we can find the certificates
            (``bytes`` or ``unicode``).

        :return: None
        uContext._wrap_callback.<locals>.wrappera_PassphraseHelperaFILETYPE_PEMDamore_argsatruncatetpacallableucallback must be callablea_wrap_callbackaSSL_CTX_set_default_passwd_cbu
        Set the passphrase callback.  This function will be called
        when a private key with a passphrase is loaded.

        :param callback: The Python callback to use.  This must accept three
            positional arguments.  First, an integer giving the maximum length
            of the passphrase it may return.  If the returned passphrase is
            longer than this, it will be truncated.  Second, a boolean value
            which will be true if the user should be prompted for the
            passphrase twice and the callback should verify that the two values
            supplied are equal. Third, the value given as the *userdata*
            parameter to :meth:`set_passwd_cb`.  The *callback* must return
            a byte string. If an error occurs, *callback* should return a false
            value (e.g. an empty string).
        :param userdata: (optional) A Python object which will be given as
                         argument to the callback
        :return: None
        aSSL_CTX_set_default_verify_pathsaX509_get_default_cert_dir_envadecodeTaasciiaX509_get_default_cert_file_enva_check_env_vars_setaX509_get_default_cert_diraX509_get_default_cert_filea_CRYPTOGRAPHY_MANYLINUX_CA_DIRa_CRYPTOGRAPHY_MANYLINUX_CA_FILEa_fallback_default_verify_pathsa_CERTIFICATE_FILE_LOCATIONSa_CERTIFICATE_PATH_LOCATIONSu
        Specify that the platform provided CA certificates are to be used for
        verification purposes. This method has some caveats related to the
        binary wheels that cryptography (pyOpenSSL's primary dependency) ships:

        *   macOS will only load certificates using this method if the user has
            the ``openssl@1.1`` `Homebrew <https://brew.sh>`_ formula installed
            in the default location.
        *   Windows will not work.
        *   manylinux cryptography wheels will work on most common Linux
            distributions in pyOpenSSL 17.1.0 and above.  pyOpenSSL detects the
            manylinux wheel and attempts to load roots via a fallback path.

        :return: None
        aosaenvironagetu
        Check to see if the default cert dir/file environment vars are present.

        :return: bool
        apathaisfileaload_verify_locationsaisdiru
        Default verify paths are based on the compiled version of OpenSSL.
        However, when pyca/cryptography is compiled as a manylinux wheel
        that compiled location can potentially be wrong. So, like Go, we
        will try a predefined set of paths and attempt to load roots
        from there.

        :return: None
        aSSL_CTX_use_certificate_chain_fileu
        Load a certificate chain from a file.

        :param certfile: The name of the certificate chain file (``bytes`` or
            ``unicode``).  Must be PEM encoded.

        :return: None
        ufiletype must be an integeraSSL_CTX_use_certificate_fileu
        Load a certificate from a file

        :param certfile: The name of the certificate file (``bytes`` or
            ``unicode``).
        :param filetype: (optional) The encoding of the file, which is either
            :const:`FILETYPE_PEM` or :const:`FILETYPE_ASN1`.  The default is
            :const:`FILETYPE_PEM`.

        :return: None
        ucert must be an X509 instanceaSSL_CTX_use_certificatea_x509u
        Load a certificate from a X509 object

        :param cert: The X509 object
        :return: None
        ucertobj must be an X509 instanceaX509_dupaSSL_CTX_add_extra_chain_certaX509_freeu
        Add certificate to chain

        :param certobj: The X509 certificate object to add to the chain
        :return: None
        araise_if_problema_UNSPECIFIEDaSSL_CTX_use_PrivateKey_filea_raise_passphrase_exceptionu
        Load a private key from a file

        :param keyfile: The name of the key file (``bytes`` or ``unicode``)
        :param filetype: (optional) The encoding of the file, which is either
            :const:`FILETYPE_PEM` or :const:`FILETYPE_ASN1`.  The default is
            :const:`FILETYPE_PEM`.

        :return: None
        aPKeyupkey must be a PKey instanceaSSL_CTX_use_PrivateKeya_pkeyu
        Load a private key from a PKey object

        :param pkey: The PKey object
        :return: None
        aSSL_CTX_check_private_keyu
        Check if the private key (loaded with :meth:`use_privatekey`) matches
        the certificate (loaded with :meth:`use_certificate`)

        :return: :data:`None` (raises :exc:`Error` if something's wrong)
        aSSL_load_client_CA_filea_text_to_bytes_and_warnacafileaSSL_CTX_set_client_CA_listu
        Load the trusted certificates that will be sent to the client.  Does
        not actually imply any of the certificates are trusted; that must be
        configured separately.

        :param bytes cafile: The path to a certificates file in PEM format.
        :return: None
        abufaSSL_CTX_set_session_id_contextu
        Set the session id to *buf* within which a session can be reused for
        this Context object.  This is needed when doing session resumption,
        because there is no way for a stored session to know which Context
        object it is associated with.

        :param bytes buf: The session id.

        :returns: None
        umode must be an integeraSSL_CTX_set_session_cache_modeu
        Set the behavior of the session cache used by all connections using
        this Context.  The previously set mode is returned.  See
        :const:`SESS_CACHE_*` for details about particular modes.

        :param mode: One or more of the SESS_CACHE_* flags (combine using
            bitwise or)
        :returns: The previously set caching mode.

        .. versionadded:: 0.14
        aSSL_CTX_get_session_cache_modeu
        Get the current session cache mode.

        :returns: The currently used cache mode.

        .. versionadded:: 0.14
        aSSL_CTX_set_verifya_VerifyHelperu
        Set the verification flags for this Context object to *mode* and
        specify that *callback* should be used for verification callbacks.

        :param mode: The verify mode, this should be one of
            :const:`VERIFY_NONE` and :const:`VERIFY_PEER`. If
            :const:`VERIFY_PEER` is used, *mode* can be OR:ed with
            :const:`VERIFY_FAIL_IF_NO_PEER_CERT` and
            :const:`VERIFY_CLIENT_ONCE` to further control the behaviour.
        :param callback: The optional Python verification callback to use.
            This should take five arguments: A Connection object, an X509
            object, and three integer variables, which are in turn potential
            error number, error depth and return code. *callback* should
            return True if verification passes and False otherwise.
            If omitted, OpenSSL's default verification is used.
        :return: None

        See SSL_CTX_set_verify(3SSL) for further details.
        udepth must be an integeraSSL_CTX_set_verify_depthu
        Set the maximum depth for the certificate chain verification that shall
        be allowed for this Context object.

        :param depth: An integer specifying the verify depth
        :return: None
        aSSL_CTX_get_verify_modeu
        Retrieve the Context object's verify mode, as set by
        :meth:`set_verify`.

        :return: The verify mode
        aSSL_CTX_get_verify_depthu
        Retrieve the Context object's verify depth, as set by
        :meth:`set_verify_depth`.

        :return: The verify depth
        aBIO_new_filedraBIO_freeaPEM_read_bio_DHparamsaDH_freeaSSL_CTX_set_tmp_dhu
        Load parameters for Ephemeral Diffie-Hellman

        :param dhfile: The file to load EDH parameters from (``bytes`` or
            ``unicode``).

        :return: None
        aSSL_CTX_set_tmp_ecdha_to_EC_KEYu
        Select a curve to use for ECDHE key exchange.

        :param curve: A curve object to use as returned by either
            :meth:`OpenSSL.crypto.get_elliptic_curve` or
            :meth:`OpenSSL.crypto.get_elliptic_curves`.

        :return: None
        acipher_listucipher_list must be a byte string.aSSL_CTX_set_cipher_listaget_cipher_listaTLS_AES_256_GCM_SHA384aTLS_CHACHA20_POLY1305_SHA256aTLS_AES_128_GCM_SHA256TuSSL routinesaSSL_CTX_set_cipher_listuno cipher matchu
        Set the list of ciphers to be used in this context.

        See the OpenSSL manual for more information (e.g.
        :manpage:`ciphers(1)`).

        :param bytes cipher_list: An OpenSSL cipher string.
        :return: None
        ask_X509_NAME_new_nullaX509Nameuclient CAs must be X509Name objects, not {} objectsa__name__aX509_NAME_dupa_nameask_X509_NAME_pushaname_stackaX509_NAME_freeask_X509_NAME_freeu
        Set the list of preferred client certificate signers for this server
        context.

        This list of certificate authorities will be sent to the client when
        the server requests a client certificate.

        :param certificate_authorities: a sequence of X509Names.
        :return: None

        .. versionadded:: 0.10
        ucertificate_authority must be an X509 instanceaSSL_CTX_add_client_CAu
        Add the CA certificate to the list of preferred signers for this
        context.

        The list of certificate authorities will be sent to the client when the
        server requests a client certificate.

        :param certificate_authority: certificate authority's X509 certificate.
        :return: None

        .. versionadded:: 0.10
        utimeout must be an integeraSSL_CTX_set_timeoutu
        Set the timeout for newly created sessions for this Context object to
        *timeout*.  The default value is 300 seconds. See the OpenSSL manual
        for more information (e.g. :manpage:`SSL_CTX_set_timeout(3)`).

        :param timeout: The timeout in (whole) seconds
        :return: The previous session timeout
        aSSL_CTX_get_timeoutu
        Retrieve session timeout, as set by :meth:`set_timeout`. The default
        is 300 seconds.

        :return: The session timeout
        uContext.set_info_callback.<locals>.wrapperuvoid (*)(const SSL *, int, int)aSSL_CTX_set_info_callbacku
        Set the information callback to *callback*. This function will be
        called from time to time during SSL handshakes.

        :param callback: The Python callback to use.  This should take three
            arguments: a Connection object and two integers.  The first integer
            specifies where in the SSL handshake the function was called, and
            the other the return code from a (possibly failed) internal
            function call.
        :return: None
        uContext.set_keylog_callback.<locals>.wrapperuvoid (*)(const SSL *, const char *)aSSL_CTX_set_keylog_callbacku
        Set the TLS key logging callback to *callback*. This function will be
        called whenever TLS key material is generated or received, in order
        to allow applications to store this keying material for debugging
        purposes.

        :param callback: The Python callback to use.  This should take two
            arguments: a Connection object and a bytestring that contains
            the key material in the format used by NSS for its SSLKEYLOGFILE
            debugging output.
        :return: None
        u
        Get the application data (supplied via :meth:`set_app_data()`)

        :return: The application data
        u
        Set the application data (will be returned from get_app_data())

        :param data: Any Python object
        :return: None
        aSSL_CTX_get_cert_storeaX509Storea__new__a_storeu
        Get the certificate store for the context.  This can be used to add
        "trusted" certificates without using the
        :meth:`load_verify_locations` method.

        :return: A X509Store object or None if it does not have one.
        uoptions must be an integeraSSL_CTX_set_optionsu
        Add options. Options set before are not cleared!
        This method should be used with the :const:`OP_*` constants.

        :param options: The options to add.
        :return: The new option bitmask.
        aSSL_CTX_set_modeu
        Add modes via bitmask. Modes set before are not cleared!  This method
        should be used with the :const:`MODE_*` constants.

        :param mode: The mode to add.
        :return: The new mode bitmask.
        uContext.set_tlsext_servername_callback.<locals>.wrapperuint (*)(SSL *, int *, void *)aSSL_CTX_set_tlsext_servername_callbacku
        Specify a callback function to be called when clients specify a server
        name.

        :param callback: The callback function.  It will be invoked with one
            argument, the Connection instance.

        .. versionadded:: 0.13
        uprofiles must be a byte string.aSSL_CTX_set_tlsext_use_srtpu
        Enable support for negotiating SRTP keying material.

        :param bytes profiles: A colon delimited list of protection profile
            names, like ``b'SRTP_AES128_CM_SHA1_80:SRTP_AES128_CM_SHA1_32'``.
        :return: None
        uat least one protocol must be specifiedachainafrom_iterableaSSL_CTX_set_alpn_protosu
        Specify the protocols that the client is prepared to speak after the
        TLS connection has been negotiated using Application Layer Protocol
        Negotiation.

        :param protos: A list of the protocols to be offered to the server.
            This list should be a Python list of bytestrings representing the
            protocols to offer, e.g. ``[b'http/1.1', b'spdy/2']``.
        u<genexpr>uContext.set_alpn_protos.<locals>.<genexpr>a_ALPNSelectHelperaSSL_CTX_set_alpn_select_cbu
        Specify a callback function that will be called on the server when a
        client offers protocols using ALPN.

        :param callback: The callback function.  It will be invoked with two
            arguments: the Connection, and a list of offered protocols as
            bytestrings, e.g ``[b'http/1.1', b'spdy/2']``.  It can return
            one of those bytestrings to indicate the chosen protocol, the
            empty bytestring to terminate the TLS connection, or the
            :py:obj:`NO_OVERLAPPING_PROTOCOLS` to indicate that no offered
            protocol was selected, but that the connection should not be
            aborted.
        anew_handleaSSL_CTX_set_tlsext_status_cbaSSL_CTX_set_tlsext_status_argu
        This internal helper does the common work for
        ``set_ocsp_server_callback`` and ``set_ocsp_client_callback``, which is
        almost all of it.
        a_OCSPServerCallbackHelpera_set_ocsp_callbacku
        Set a callback to provide OCSP data to be stapled to the TLS handshake
        on the server side.

        :param callback: The callback function. It will be invoked with two
            arguments: the Connection, and the optional arbitrary data you have
            provided. The callback must return a bytestring that contains the
            OCSP data to staple to the handshake. If no OCSP data is available
            for this connection, return the empty bytestring.
        :param data: Some opaque data that will be passed into the callback
            function when called. This can be used to avoid needing to do
            complex data lookups or to keep track of what context is being
            used. This parameter is optional.
        a_OCSPClientCallbackHelperu
        Set a callback to validate OCSP data stapled to the TLS handshake on
        the client side.

        :param callback: The callback function. It will be invoked with three
            arguments: the Connection, a bytestring containing the stapled OCSP
            assertion, and the optional arbitrary data you have provided. The
            callback must return a boolean that indicates the result of
            validating the OCSP data: ``True`` if the OCSP data is valid and
            the certificate can be trusted, or ``False`` if either the OCSP
            data is invalid or the certificate has been revoked.
        :param data: Some opaque data that will be passed into the callback
            function when called. This can be used to avoid needing to do
            complex data lookups or to keep track of what context is being
            used. This parameter is optional.
        a_CookieGenerateCallbackHelperaSSL_CTX_set_cookie_generate_cba_CookieVerifyCallbackHelperaSSL_CTX_set_cookie_verify_cbaContextucontext must be a Context instanceaSSL_newaSSL_freea_sslaSSL_set_modeaSSL_MODE_AUTO_RETRYa_socketaBIO_newaBIO_s_mema_into_ssla_from_sslaSSL_set_bioaSSL_set_fda_asFileDescriptoru
        Create a new Connection object, using the given OpenSSL.SSL.Context
        instance and socket.

        :param context: An SSL Context to use for this connection
        :param socket: The socket to use for transport layer
        w'uu' object has no attribute 'u
        Look up attributes on the wrapped socket object if they are not found
        on the Connection object.
        aSSL_get_erroraSSL_ERROR_WANT_READaWantReadErroraSSL_ERROR_WANT_WRITEaWantWriteErroraSSL_ERROR_ZERO_RETURNaZeroReturnErroraSSL_ERROR_WANT_X509_LOOKUPaWantX509LookupErroraSSL_ERROR_SYSCALLaERR_peek_erroragetwinerroraSysCallErroraerrorcodeTluUnexpected EOFaSSL_ERROR_SSLaERR_GET_REASONaCryptography_HAS_UNEXPECTED_EOF_WHILE_READINGaSSL_R_UNEXPECTED_EOF_WHILE_READINGaERR_clear_erroraSSL_ERROR_NONEu
        Retrieve the :class:`Context` object associated with this
        :class:`Connection`.
        aSSL_set_SSL_CTXu
        Switch this connection to a new session context.

        :param context: A :class:`Context` instance giving the new session
            context to use.
        aSSL_get_servernameaTLSEXT_NAMETYPE_host_nameu
        Retrieve the servername extension value if provided in the client hello
        message, or None if there wasn't one.

        :return: A byte string giving the server name or :data:`None`.

        .. versionadded:: 0.13
        aSSL_set_verifyu
        Override the Context object's verification flags for this specific
        connection. See :py:meth:`Context.set_verify` for details.
        aSSL_get_verify_modeu
        Retrieve the Connection object's verify mode, as set by
        :meth:`set_verify`.

        :return: The verify mode
        aSSL_use_certificateaSSL_use_PrivateKeyaSSL_set_mtuu
        For DTLS, set the maximum UDP payload size (*not* including IP/UDP
        overhead).

        Note that you might have to set :data:`OP_NO_QUERY_MTU` to prevent
        OpenSSL from spontaneously clearing this.

        :param mtu: An integer giving the maximum transmission unit.

        .. versionadded:: 21.1
        aDTLS_get_data_mtuurequires OpenSSL 1.1.1 or betteru
        For DTLS, get the maximum size of unencrypted data you can pass to
        :meth:`write` without exceeding the MTU (as passed to
        :meth:`set_ciphertext_mtu`).

        :return: The effective MTU as an integer.

        .. versionadded:: 21.1
        uname must be a byte stringduname must not contain NUL byteaSSL_set_tlsext_host_nameu
        Set the value of the servername extension to send in the client hello.

        :param name: A byte string giving the name.

        .. versionadded:: 0.13
        aSSL_pendingu
        Get the number of bytes that can be safely read from the SSL buffer
        (**not** the underlying transport buffer).

        :return: The number of bytes available in the receive buffer.
        afrom_buffera__enter__a__exit__quCannot send more than 2**31-1 bytes at once.aSSL_writea_raise_ssl_errorTnnnu
        Send data on the connection. NOTE: If you get one of the WantRead,
        WantWrite or WantX509Lookup exceptions on this, you have to call the
        method again with the SAME buffer.

        :param buf: The string, buffer or memoryview to send
        :param flags: (optional) Included for compatibility with the socket
                      API, the value is ignored
        :return: The number of bytes written
        aleft_to_sendadataatotal_sentaminu
        Send "all" data on the connection. This calls send() repeatedly until
        all data is sent. If an error occurs, it's impossible to tell how much
        data has been sent.

        :param buf: The string, buffer or memoryview to send
        :param flags: (optional) Included for compatibility with the socket
                      API, the value is ignored
        :return: The number of bytes written
        a_no_zero_allocatoruchar[]asocketaMSG_PEEKaSSL_peekaSSL_readu
        Receive data on the connection.

        :param bufsiz: The maximum number of bytes to read
        :param flags: (optional) The only supported flag is ``MSG_PEEK``,
            all other flags are ignored.
        :return: The string read from the Connection
        u
        Receive data on the connection and copy it directly into the provided
        buffer, rather than creating a new string.

        :param buffer: The buffer to copy into.
        :param nbytes: (optional) The maximum number of bytes to read into the
            buffer. If not present, defaults to the size of the buffer. If
            larger than the size of the buffer, is reduced to the size of the
            buffer.
        :param flags: (optional) The only supported flag is ``MSG_PEEK``,
            all other flags are ignored.
        :return: The number of bytes read into the buffer.
        aBIO_should_retryaBIO_should_readaBIO_should_writeaBIO_should_io_specialuunknown bio failureuConnection sock was not Noneubufsiz must be an integeraBIO_reada_handle_bio_errorsaresultu
        If the Connection was created with a memory BIO, this method can be
        used to read bytes from the write end of that memory BIO.  Many
        Connection methods will add bytes which must be read in this manner or
        the buffer will eventually fill up and the Connection will be able to
        take no further actions.

        :param bufsiz: The maximum number of bytes to read
        :return: The string read.
        aBIO_writeu
        If the Connection was created with a memory BIO, this method can be
        used to add bytes to the read end of that memory BIO.  The Connection
        can then read the bytes (for example, in response to a call to
        :meth:`recv`).

        :param buf: The string to put into the memory BIO.
        :return: The number of bytes written
        arenegotiate_pendingaSSL_renegotiateu
        Renegotiate the session.

        :return: True if the renegotiation can be started, False otherwise
        :rtype: bool
        aSSL_do_handshakeu
        Perform an SSL handshake (usually called after :meth:`renegotiate` or
        one of :meth:`set_accept_state` or :meth:`set_connect_state`). This can
        raise the same exceptions as :meth:`send` and :meth:`recv`.

        :return: None.
        aSSL_renegotiate_pendingu
        Check if there's a renegotiation in progress, it will return False once
        a renegotiation is finished.

        :return: Whether there's a renegotiation in progress
        :rtype: bool
        aSSL_total_renegotiationsu
        Find out the total number of renegotiations.

        :return: The number of renegotiations.
        :rtype: int
        aSSL_set_connect_stateaconnectu
        Call the :meth:`connect` method of the underlying socket and set up SSL
        on the socket, using the :class:`Context` object supplied to this
        :class:`Connection` object at creation.

        :param addr: A remote address
        :return: What the socket's connect method returns
        aconnect_exaset_connect_stateu
        Call the :meth:`connect_ex` method of the underlying socket and set up
        SSL on the socket, using the Context object supplied to this Connection
        object at creation. Note that if the :meth:`connect_ex` method of the
        socket doesn't return 0, SSL won't be initialized.

        :param addr: A remove address
        :return: What the socket's connect_ex method returns
        aacceptaset_accept_stateu
        Call the :meth:`accept` method of the underlying socket and set up SSL
        on the returned socket, using the Context object supplied to this
        :class:`Connection` object at creation.

        :return: A *(conn, addr)* pair where *conn* is the new
            :class:`Connection` object created, and *address* is as returned by
            the socket's :meth:`accept`.
        aBIO_ADDR_newaDTLSv1_listenaBIO_ADDR_freeu
        Call the OpenSSL function DTLSv1_listen on this connection. See the
        OpenSSL manual for more details.

        :return: None
        Tutime_t *Tulong *aCryptography_DTLSv1_get_timeoutl@Bu
        Determine when the DTLS SSL object next needs to perform internal
        processing due to the passage of time.

        When the returned number of seconds have passed, the
        :meth:`DTLSv1_handle_timeout` method needs to be called.

        :return: The time left in seconds before the next timeout or `None`
            if no timeout is currently active.
        aDTLSv1_handle_timeoutu
        Handles any timeout events which have become pending on a DTLS SSL
        object.

        :return: `True` if there was a pending timeout, `False` otherwise.
        aBIO_set_mem_eof_returnu
        If the Connection was created with a memory BIO, this method can be
        used to indicate that *end of file* has been reached on the read end of
        that memory BIO.

        :return: None
        aSSL_shutdownu
        Send the shutdown message to the Connection.

        :return: True if the shutdown completed successfully (i.e. both sides
                 have sent closure alerts), False otherwise (in which case you
                 call :meth:`recv` or :meth:`send` when the connection becomes
                 readable/writeable).
        acountaSSL_get_cipher_listaciphersTuutf-8u
        Retrieve the list of ciphers used by the Connection object.

        :return: A list of native cipher strings.
        aSSL_get_client_CA_listask_X509_NAME_numask_X509_NAME_valueaca_namesu
        Get CAs whose certificates are suggested for client authentication.

        :return: If this is a server connection, the list of certificate
            authorities that will be sent or has been sent to the client, as
            controlled by this :class:`Connection`'s :class:`Context`.

            If this is a client connection, the list will be empty until the
            connection with the server is established.

        .. versionadded:: 0.10
        uCannot make file object of OpenSSL.SSL.Connectionu
        The makefile() method is not implemented, since there is no dup
        semantics for SSL connections

        :raise: NotImplementedError
        u
        Retrieve application data as set by :meth:`set_app_data`.

        :return: The application data
        u
        Set application data

        :param data: The application data
        :return: None
        aSSL_get_shutdownu
        Get the shutdown state of the Connection.

        :return: The shutdown state, a bitvector of SENT_SHUTDOWN,
            RECEIVED_SHUTDOWN.
        ustate must be an integeraSSL_set_shutdownu
        Set the shutdown state of the Connection.

        :param state: bitvector of SENT_SHUTDOWN, RECEIVED_SHUTDOWN.
        :return: None
        aSSL_state_string_longu
        Retrieve a verbose string detailing the state of the Connection.

        :return: A string representing the state
        :rtype: bytes
        aSSL_get_sessionaSSL_get_server_randomu
        Retrieve the random value used with the server hello message.

        :return: A string representing the state
        aSSL_get_client_randomu
        Retrieve the random value used with the client hello message.

        :return: A string representing the state
        aSSL_SESSION_get_master_keyu
        Retrieve the value of the master key for this session.

        :return: A string representing the state
        aSSL_export_keying_materialu
        Obtain keying material for application use.

        :param: label - a disambiguating label string as described in RFC 5705
        :param: olen - the length of the exported key material in bytes
        :param: context - a per-association context value
        :return: the exported key material bytes or None
        ashutdownu
        Call the :meth:`shutdown` method of the underlying socket.
        See :manpage:`shutdown(2)`.

        :return: What the socket's shutdown() method returns
        aSSL_get_certificateu
        Retrieve the local certificate (if any)

        :return: The local certificate
        aSSL_get_peer_certificateu
        Retrieve the other side's certificate (if any)

        :return: The peer's certificate
        ask_X509_numask_X509_valueacert_stacku
        Internal helper to convert a STACK_OF(X509) to a list of X509
        instances.
        aSSL_get_peer_cert_chaina_cert_stack_to_listu
        Retrieve the other side's certificate (if any)

        :return: A list of X509 instances giving the peer's certificate chain,
                 or None if it does not have one.
        aSSL_get0_verified_chainu
        Retrieve the verified certificate chain of the peer including the
        peer's end entity certificate. It must be called after a session has
        been successfully established. If peer verification was not successful
        the chain may be incomplete, invalid, or None.

        :return: A list of X509 instances giving the peer's verified
                 certificate chain, or None if it does not have one.

        .. versionadded:: 20.0
        aSSL_want_readu
        Checks if more data has to be read from the transport layer to complete
        an operation.

        :return: True iff more data has to be read
        aSSL_want_writeu
        Checks if there is data to write to the transport layer to complete an
        operation.

        :return: True iff there is data to write
        aSSL_set_accept_stateu
        Set the connection to work in server mode. The handshake will be
        handled automatically by read/write.

        :return: None
        u
        Set the connection to work in client mode. The handshake will be
        handled automatically by read/write.

        :return: None
        aSSL_get1_sessionaSessionaSSL_SESSION_freea_sessionu
        Returns the Session currently used.

        :return: An instance of :class:`OpenSSL.SSL.Session` or
            :obj:`None` if no session exists.

        .. versionadded:: 0.14
        usession must be a Session instanceaSSL_set_sessionu
        Set the session to be used when the TLS/SSL connection is established.

        :param session: A Session instance representing the session to use.
        :returns: None

        .. versionadded:: 0.14
        Tuchar[]lu
        Helper to implement :meth:`get_finished` and
        :meth:`get_peer_finished`.

        :param function: Either :data:`SSL_get_finished`: or
            :data:`SSL_get_peer_finished`.

        :return: :data:`None` if the desired message has not yet been
            received, otherwise the contents of the message.
        :rtype: :class:`bytes` or :class:`NoneType`
        a_get_finished_messageaSSL_get_finishedu
        Obtain the latest TLS Finished message that we sent.

        :return: The contents of the message or :obj:`None` if the TLS
            handshake has not yet completed.
        :rtype: :class:`bytes` or :class:`NoneType`

        .. versionadded:: 0.15
        aSSL_get_peer_finishedu
        Obtain the latest TLS Finished message that we received from the peer.

        :return: The contents of the message or :obj:`None` if the TLS
            handshake has not yet completed.
        :rtype: :class:`bytes` or :class:`NoneType`

        .. versionadded:: 0.15
        aSSL_get_current_cipheraSSL_CIPHER_get_nameu
        Obtain the name of the currently used cipher.

        :returns: The name of the currently used cipher or :obj:`None`
            if no connection has been established.
        :rtype: :class:`unicode` or :class:`NoneType`

        .. versionadded:: 0.15
        aSSL_CIPHER_get_bitsu
        Obtain the number of secret bits of the currently used cipher.

        :returns: The number of secret bits of the currently used cipher
            or :obj:`None` if no connection has been established.
        :rtype: :class:`int` or :class:`NoneType`

        .. versionadded:: 0.15
        aSSL_CIPHER_get_versionu
        Obtain the protocol version of the currently used cipher.

        :returns: The protocol name of the currently used cipher
            or :obj:`None` if no connection has been established.
        :rtype: :class:`unicode` or :class:`NoneType`

        .. versionadded:: 0.15
        aSSL_get_versionu
        Retrieve the protocol version of the current connection.

        :returns: The TLS version of the current connection, for example
            the value for TLS 1.2 would be ``TLSv1.2``or ``Unknown``
            for connections that were not successfully established.
        :rtype: :class:`unicode`
        aSSL_versionu
        Retrieve the SSL or TLS protocol version of the current connection.

        :returns: The TLS version of the current connection.  For example,
            it will return ``0x769`` for connections made over TLS version 1.
        :rtype: :class:`int`
        aSSL_set_alpn_protosu
        Specify the client's ALPN protocol list.

        These protocols are offered to the server during protocol negotiation.

        :param protos: A list of the protocols to be offered to the server.
            This list should be a Python list of bytestrings representing the
            protocols to offer, e.g. ``[b'http/1.1', b'spdy/2']``.
        uConnection.set_alpn_protos.<locals>.<genexpr>Tuunsigned int *aSSL_get0_alpn_selectedu
        Get the protocol that was negotiated by ALPN.

        :returns: A bytestring of the protocol name.  If no protocol has been
            negotiated yet, returns an empty bytestring.
        aSSL_set_tlsext_status_typeaTLSEXT_STATUSTYPE_ocspu
        Called to request that the server sends stapled OCSP data, if
        available. If this is not called on the client side then the server
        will not send OCSP data. Should be used in conjunction with
        :meth:`Context.set_ocsp_client_callback`.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__atypingaerrnoTaerrorcodeapartialaitertoolsTachainacountawin32aplatformaweakrefTaWeakValueDictionaryaWeakValueDictionaryuOpenSSL._utilTaUNSPECIFIEDaUNSPECIFIEDTaexception_from_error_queueaexception_from_error_queuea_exception_from_error_queueTaffiaffiTalibalibTamake_assertamake_asserta_make_assertTano_zero_allocatorano_zero_allocatorTapath_bytesapath_bytesTatext_to_bytes_and_warnatext_to_bytes_and_warnuOpenSSL.cryptoTaFILETYPE_PEMaX509aPKeyaX509NameaX509Storea_PassphraseHelperLbaOPENSSL_VERSION_NUMBERaSSLEAY_VERSIONaSSLEAY_CFLAGSaSSLEAY_PLATFORMaSSLEAY_DIRaSSLEAY_BUILT_ONaOPENSSL_VERSIONaOPENSSL_CFLAGSaOPENSSL_PLATFORMaOPENSSL_DIRaOPENSSL_BUILT_ONaSENT_SHUTDOWNaRECEIVED_SHUTDOWNaSSLv23_METHODaTLSv1_METHODaTLSv1_1_METHODaTLSv1_2_METHODaTLS_METHODaTLS_SERVER_METHODaTLS_CLIENT_METHODaDTLS_METHODaDTLS_SERVER_METHODaDTLS_CLIENT_METHODaSSL3_VERSIONaTLS1_VERSIONaTLS1_1_VERSIONaTLS1_2_VERSIONaTLS1_3_VERSIONaOP_NO_SSLv2aOP_NO_SSLv3aOP_NO_TLSv1aOP_NO_TLSv1_1aOP_NO_TLSv1_2aMODE_RELEASE_BUFFERSaOP_SINGLE_DH_USEaOP_SINGLE_ECDH_USEaOP_EPHEMERAL_RSAaOP_MICROSOFT_SESS_ID_BUGaOP_NETSCAPE_CHALLENGE_BUGaOP_NETSCAPE_REUSE_CIPHER_CHANGE_BUGaOP_SSLREF2_REUSE_CERT_TYPE_BUGaOP_MICROSOFT_BIG_SSLV3_BUFFERaOP_MSIE_SSLV2_RSA_PADDINGaOP_SSLEAY_080_CLIENT_DH_BUGaOP_TLS_D5_BUGaOP_TLS_BLOCK_PADDING_BUGaOP_DONT_INSERT_EMPTY_FRAGMENTSaOP_CIPHER_SERVER_PREFERENCEaOP_TLS_ROLLBACK_BUGaOP_PKCS1_CHECK_1aOP_PKCS1_CHECK_2aOP_NETSCAPE_CA_DN_BUGaOP_NETSCAPE_DEMO_CIPHER_CHANGE_BUGaOP_NO_COMPRESSIONaOP_NO_QUERY_MTUaOP_COOKIE_EXCHANGEaOP_NO_TICKETaOP_ALLaVERIFY_PEERaVERIFY_FAIL_IF_NO_PEER_CERTaVERIFY_CLIENT_ONCEaVERIFY_NONEaSESS_CACHE_OFFaSESS_CACHE_CLIENTaSESS_CACHE_SERVERaSESS_CACHE_BOTHaSESS_CACHE_NO_AUTO_CLEARaSESS_CACHE_NO_INTERNAL_LOOKUPaSESS_CACHE_NO_INTERNAL_STOREaSESS_CACHE_NO_INTERNALaSSL_ST_CONNECTaSSL_ST_ACCEPTaSSL_ST_MASKaSSL_CB_LOOPaSSL_CB_EXITaSSL_CB_READaSSL_CB_WRITEaSSL_CB_ALERTaSSL_CB_READ_ALERTaSSL_CB_WRITE_ALERTaSSL_CB_ACCEPT_LOOPaSSL_CB_ACCEPT_EXITaSSL_CB_CONNECT_LOOPaSSL_CB_CONNECT_EXITaSSL_CB_HANDSHAKE_STARTaSSL_CB_HANDSHAKE_DONEaErroraWantReadErroraWantWriteErroraWantX509LookupErroraZeroReturnErroraSysCallErroraNO_OVERLAPPING_PROTOCOLSaSSLeay_versionaSessionaContextaConnectionaX509VerificationCodesa__all__aOPENSSL_VERSION_NUMBERaOPENSSL_VERSIONaSSLEAY_VERSIONaOPENSSL_CFLAGSaSSLEAY_CFLAGSaOPENSSL_PLATFORMaSSLEAY_PLATFORMaOPENSSL_DIRaSSLEAY_DIRaOPENSSL_BUILT_ONaSSLEAY_BUILT_ONaSSL_SENT_SHUTDOWNaSENT_SHUTDOWNaSSL_RECEIVED_SHUTDOWNaRECEIVED_SHUTDOWNaSSLv23_METHODlaTLSv1_METHODlaTLSv1_1_METHODlaTLSv1_2_METHODlaTLS_METHODlaTLS_SERVER_METHODlaTLS_CLIENT_METHODl
aDTLS_METHODlaDTLS_SERVER_METHODlaDTLS_CLIENT_METHODaSSL3_VERSIONaTLS1_VERSIONaTLS1_1_VERSIONaTLS1_2_VERSIONaTLS1_3_VERSIONlllllaSSL_OP_NO_SSLv2aOP_NO_SSLv2aSSL_OP_NO_SSLv3aOP_NO_SSLv3aSSL_OP_NO_TLSv1aOP_NO_TLSv1aSSL_OP_NO_TLSv1_1aOP_NO_TLSv1_1aSSL_OP_NO_TLSv1_2aOP_NO_TLSv1_2aSSL_OP_NO_TLSv1_3aOP_NO_TLSv1_3TaOP_NO_TLSv1_3aSSL_MODE_RELEASE_BUFFERSaMODE_RELEASE_BUFFERSaSSL_OP_SINGLE_DH_USEaOP_SINGLE_DH_USEaSSL_OP_SINGLE_ECDH_USEaOP_SINGLE_ECDH_USEaSSL_OP_EPHEMERAL_RSAaOP_EPHEMERAL_RSAaSSL_OP_MICROSOFT_SESS_ID_BUGaOP_MICROSOFT_SESS_ID_BUGaSSL_OP_NETSCAPE_CHALLENGE_BUGaOP_NETSCAPE_CHALLENGE_BUGaSSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUGaOP_NETSCAPE_REUSE_CIPHER_CHANGE_BUGaSSL_OP_SSLREF2_REUSE_CERT_TYPE_BUGaOP_SSLREF2_REUSE_CERT_TYPE_BUGaSSL_OP_MICROSOFT_BIG_SSLV3_BUFFERaOP_MICROSOFT_BIG_SSLV3_BUFFERaSSL_OP_MSIE_SSLV2_RSA_PADDINGaOP_MSIE_SSLV2_RSA_PADDINGaSSL_OP_SSLEAY_080_CLIENT_DH_BUGaOP_SSLEAY_080_CLIENT_DH_BUGaSSL_OP_TLS_D5_BUGaOP_TLS_D5_BUGaSSL_OP_TLS_BLOCK_PADDING_BUGaOP_TLS_BLOCK_PADDING_BUGaSSL_OP_DONT_INSERT_EMPTY_FRAGMENTSaOP_DONT_INSERT_EMPTY_FRAGMENTSaSSL_OP_CIPHER_SERVER_PREFERENCEaOP_CIPHER_SERVER_PREFERENCEaSSL_OP_TLS_ROLLBACK_BUGaOP_TLS_ROLLBACK_BUGaSSL_OP_PKCS1_CHECK_1aOP_PKCS1_CHECK_1aSSL_OP_PKCS1_CHECK_2aOP_PKCS1_CHECK_2aSSL_OP_NETSCAPE_CA_DN_BUGaOP_NETSCAPE_CA_DN_BUGaSSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUGaOP_NETSCAPE_DEMO_CIPHER_CHANGE_BUGaSSL_OP_NO_COMPRESSIONaOP_NO_COMPRESSIONaSSL_OP_NO_QUERY_MTUaOP_NO_QUERY_MTUaSSL_OP_COOKIE_EXCHANGEaOP_COOKIE_EXCHANGEaSSL_OP_NO_TICKETaOP_NO_TICKETaSSL_OP_NO_RENEGOTIATIONaOP_NO_RENEGOTIATIONTaOP_NO_RENEGOTIATIONaSSL_OP_IGNORE_UNEXPECTED_EOFaOP_IGNORE_UNEXPECTED_EOFTaOP_IGNORE_UNEXPECTED_EOFaSSL_OP_LEGACY_SERVER_CONNECTaOP_LEGACY_SERVER_CONNECTTaOP_LEGACY_SERVER_CONNECTaSSL_OP_ALLaOP_ALLaSSL_VERIFY_PEERaVERIFY_PEERaSSL_VERIFY_FAIL_IF_NO_PEER_CERTaVERIFY_FAIL_IF_NO_PEER_CERTaSSL_VERIFY_CLIENT_ONCEaVERIFY_CLIENT_ONCEaSSL_VERIFY_NONEaVERIFY_NONEaSSL_SESS_CACHE_OFFaSESS_CACHE_OFFaSSL_SESS_CACHE_CLIENTaSESS_CACHE_CLIENTaSSL_SESS_CACHE_SERVERaSESS_CACHE_SERVERaSSL_SESS_CACHE_BOTHaSESS_CACHE_BOTHaSSL_SESS_CACHE_NO_AUTO_CLEARaSESS_CACHE_NO_AUTO_CLEARaSSL_SESS_CACHE_NO_INTERNAL_LOOKUPaSESS_CACHE_NO_INTERNAL_LOOKUPaSSL_SESS_CACHE_NO_INTERNAL_STOREaSESS_CACHE_NO_INTERNAL_STOREaSSL_SESS_CACHE_NO_INTERNALaSESS_CACHE_NO_INTERNALaSSL_ST_CONNECTaSSL_ST_ACCEPTaSSL_ST_MASKaSSL_CB_LOOPaSSL_CB_EXITaSSL_CB_READaSSL_CB_WRITEaSSL_CB_ALERTaSSL_CB_READ_ALERTaSSL_CB_WRITE_ALERTaSSL_CB_ACCEPT_LOOPaSSL_CB_ACCEPT_EXITaSSL_CB_CONNECT_LOOPaSSL_CB_CONNECT_EXITaSSL_CB_HANDSHAKE_STARTaSSL_CB_HANDSHAKE_DONEuOpenSSL.SSLa__module__u
    Success and error codes for X509 verification, as returned by the
    underlying ``X509_STORE_CTX_get_error()`` function and passed by pyOpenSSL
    to verification callback functions.

    See `OpenSSL Verification Errors
    <https://www.openssl.org/docs/manmaster/man3/X509_verify_cert_error_string.html#ERROR-CODES>`_
    for details.
    aX509VerificationCodesa__qualname__aOKaX509_V_ERR_UNABLE_TO_GET_ISSUER_CERTaERR_UNABLE_TO_GET_ISSUER_CERTaX509_V_ERR_UNABLE_TO_GET_CRLaERR_UNABLE_TO_GET_CRLaX509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATUREaERR_UNABLE_TO_DECRYPT_CERT_SIGNATUREaX509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATUREaERR_UNABLE_TO_DECRYPT_CRL_SIGNATUREaX509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEYaERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEYaX509_V_ERR_CERT_SIGNATURE_FAILUREaERR_CERT_SIGNATURE_FAILUREaX509_V_ERR_CRL_SIGNATURE_FAILUREaERR_CRL_SIGNATURE_FAILUREaX509_V_ERR_CERT_NOT_YET_VALIDaERR_CERT_NOT_YET_VALIDaX509_V_ERR_CERT_HAS_EXPIREDaERR_CERT_HAS_EXPIREDaX509_V_ERR_CRL_NOT_YET_VALIDaERR_CRL_NOT_YET_VALIDaX509_V_ERR_CRL_HAS_EXPIREDaERR_CRL_HAS_EXPIREDaX509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELDaERR_ERROR_IN_CERT_NOT_BEFORE_FIELDaX509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELDaERR_ERROR_IN_CERT_NOT_AFTER_FIELDaX509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELDaERR_ERROR_IN_CRL_LAST_UPDATE_FIELDaX509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELDaERR_ERROR_IN_CRL_NEXT_UPDATE_FIELDaX509_V_ERR_OUT_OF_MEMaERR_OUT_OF_MEMaX509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERTaERR_DEPTH_ZERO_SELF_SIGNED_CERTaX509_V_ERR_SELF_SIGNED_CERT_IN_CHAINaERR_SELF_SIGNED_CERT_IN_CHAINaX509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLYaERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLYaX509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATUREaERR_UNABLE_TO_VERIFY_LEAF_SIGNATUREaX509_V_ERR_CERT_CHAIN_TOO_LONGaERR_CERT_CHAIN_TOO_LONGaX509_V_ERR_CERT_REVOKEDaERR_CERT_REVOKEDaX509_V_ERR_INVALID_CAaERR_INVALID_CAaX509_V_ERR_PATH_LENGTH_EXCEEDEDaERR_PATH_LENGTH_EXCEEDEDaX509_V_ERR_INVALID_PURPOSEaERR_INVALID_PURPOSEaX509_V_ERR_CERT_UNTRUSTEDaERR_CERT_UNTRUSTEDaX509_V_ERR_CERT_REJECTEDaERR_CERT_REJECTEDaX509_V_ERR_SUBJECT_ISSUER_MISMATCHaERR_SUBJECT_ISSUER_MISMATCHaX509_V_ERR_AKID_SKID_MISMATCHaERR_AKID_SKID_MISMATCHaX509_V_ERR_AKID_ISSUER_SERIAL_MISMATCHaERR_AKID_ISSUER_SERIAL_MISMATCHaX509_V_ERR_KEYUSAGE_NO_CERTSIGNaERR_KEYUSAGE_NO_CERTSIGNaX509_V_ERR_UNABLE_TO_GET_CRL_ISSUERaERR_UNABLE_TO_GET_CRL_ISSUERaX509_V_ERR_UNHANDLED_CRITICAL_EXTENSIONaERR_UNHANDLED_CRITICAL_EXTENSIONaX509_V_ERR_KEYUSAGE_NO_CRL_SIGNaERR_KEYUSAGE_NO_CRL_SIGNaX509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSIONaERR_UNHANDLED_CRITICAL_CRL_EXTENSIONaX509_V_ERR_INVALID_NON_CAaERR_INVALID_NON_CAaX509_V_ERR_PROXY_PATH_LENGTH_EXCEEDEDaERR_PROXY_PATH_LENGTH_EXCEEDEDaX509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATUREaERR_KEYUSAGE_NO_DIGITAL_SIGNATUREaX509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWEDaERR_PROXY_CERTIFICATES_NOT_ALLOWEDaX509_V_ERR_INVALID_EXTENSIONaERR_INVALID_EXTENSIONaX509_V_ERR_INVALID_POLICY_EXTENSIONaERR_INVALID_POLICY_EXTENSIONaX509_V_ERR_NO_EXPLICIT_POLICYaERR_NO_EXPLICIT_POLICYaX509_V_ERR_DIFFERENT_CRL_SCOPEaERR_DIFFERENT_CRL_SCOPEaX509_V_ERR_UNSUPPORTED_EXTENSION_FEATUREaERR_UNSUPPORTED_EXTENSION_FEATUREaX509_V_ERR_UNNESTED_RESOURCEaERR_UNNESTED_RESOURCEaX509_V_ERR_PERMITTED_VIOLATIONaERR_PERMITTED_VIOLATIONaX509_V_ERR_EXCLUDED_VIOLATIONaERR_EXCLUDED_VIOLATIONaX509_V_ERR_SUBTREE_MINMAXaERR_SUBTREE_MINMAXaX509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPEaERR_UNSUPPORTED_CONSTRAINT_TYPEaX509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAXaERR_UNSUPPORTED_CONSTRAINT_SYNTAXaX509_V_ERR_UNSUPPORTED_NAME_SYNTAXaERR_UNSUPPORTED_NAME_SYNTAXaX509_V_ERR_CRL_PATH_VALIDATION_ERRORaERR_CRL_PATH_VALIDATION_ERRORaX509_V_ERR_HOSTNAME_MISMATCHaERR_HOSTNAME_MISMATCHaX509_V_ERR_EMAIL_MISMATCHaERR_EMAIL_MISMATCHaX509_V_ERR_IP_ADDRESS_MISMATCHaERR_IP_ADDRESS_MISMATCHaX509_V_ERR_APPLICATION_VERIFICATIONaERR_APPLICATION_VERIFICATIONTLu/etc/ssl/certs/ca-certificates.crtu/etc/pki/tls/certs/ca-bundle.crtu/etc/ssl/ca-bundle.pemu/etc/pki/tls/cacert.pemu/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pemu/etc/ssl/certsc/opt/pyca/cryptography/openssl/certsc/opt/pyca/cryptography/openssl/cert.pemTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>u
    An error occurred in an `OpenSSL.SSL` API.
    a__orig_bases__u
    A base class for wrapper classes that allow for intelligent exception
    handling in OpenSSL callbacks.

    :ivar list _problems: Any exceptions that occurred while executing in a
        context where they could not be raised in the normal way.  Typically
        this is because OpenSSL has called into some Python code and requires a
        return value.  The exceptions are saved to be raised later when it is
        possible to do so.
    u_CallbackExceptionHelper.__init__u_CallbackExceptionHelper.raise_if_problemu
    Wrap a callback such that it can be used as a certificate verification
    callback.
    u_VerifyHelper.__init__u
    Wrap a callback such that it can be used as an ALPN selection callback.
    u_ALPNSelectHelper.__init__u
    Wrap a callback such that it can be used as an OCSP callback for the server
    side.

    Annoyingly, OpenSSL defines one OCSP callback but uses it in two different
    ways. For servers, that callback is expected to retrieve some OCSP data and
    hand it to OpenSSL, and may return only SSL_TLSEXT_ERR_OK,
    SSL_TLSEXT_ERR_FATAL, and SSL_TLSEXT_ERR_NOACK. For clients, that callback
    is expected to check the OCSP data, and returns a negative value on error,
    0 if the response is not acceptable, or positive if it is. These are
    mutually exclusive return code behaviours, and they mean that we need two
    helpers so that we always return an appropriate error code if the user's
    code throws an exception.

    Given that we have to have two helpers anyway, these helpers are a bit more
    helpery than most: specifically, they hide a few more of the OpenSSL
    functions so that the user has an easier time writing these callbacks.

    This helper implements the server side.
    u_OCSPServerCallbackHelper.__init__u
    Wrap a callback such that it can be used as an OCSP callback for the client
    side.

    Annoyingly, OpenSSL defines one OCSP callback but uses it in two different
    ways. For servers, that callback is expected to retrieve some OCSP data and
    hand it to OpenSSL, and may return only SSL_TLSEXT_ERR_OK,
    SSL_TLSEXT_ERR_FATAL, and SSL_TLSEXT_ERR_NOACK. For clients, that callback
    is expected to check the OCSP data, and returns a negative value on error,
    0 if the response is not acceptable, or positive if it is. These are
    mutually exclusive return code behaviours, and they mean that we need two
    helpers so that we always return an appropriate error code if the user's
    code throws an exception.

    Given that we have to have two helpers anyway, these helpers are a bit more
    helpery than most: specifically, they hide a few more of the OpenSSL
    functions so that the user has an easier time writing these callbacks.

    This helper implements the client side.
    u_OCSPClientCallbackHelper.__init__u_CookieGenerateCallbackHelper.__init__u_CookieVerifyCallbackHelper.__init__aSSLeay_versiona_make_requiresaCryptography_HAS_ALPNuALPN not availablea_requires_alpnaCryptography_HAS_KEYLOGuKey logging not availablea_requires_keylogu
    A class representing an SSL session.  A session defines certain connection
    parameters which may be re-used to speed up the setup of subsequent
    connections.

    .. versionadded:: 0.14
    u
    :class:`OpenSSL.SSL.Context` instances define the parameters for setting
    up new SSL connections.

    :param method: One of TLS_METHOD, TLS_CLIENT_METHOD, TLS_SERVER_METHOD,
                   DTLS_METHOD, DTLS_CLIENT_METHOD, or DTLS_SERVER_METHOD.
                   SSLv23_METHOD, TLSv1_METHOD, etc. are deprecated and should
                   not be used.
    a__annotations__aTLS_methodaTLS_server_methodaTLS_client_methodaDTLS_methodaDTLS_server_methodaDTLS_client_methodaClassVaraDictuContext.__init__uContext.set_min_proto_versionuContext.set_max_proto_versionTnuContext.load_verify_locationsuContext._wrap_callbackaset_passwd_cbuContext.set_passwd_cbaset_default_verify_pathsuContext.set_default_verify_pathsuContext._check_env_vars_setuContext._fallback_default_verify_pathsause_certificate_chain_fileuContext.use_certificate_chain_fileause_certificate_fileuContext.use_certificate_fileause_certificateuContext.use_certificateaadd_extra_chain_certuContext.add_extra_chain_certuContext._raise_passphrase_exceptionause_privatekey_fileuContext.use_privatekey_fileause_privatekeyuContext.use_privatekeyacheck_privatekeyuContext.check_privatekeyaload_client_cauContext.load_client_caaset_session_iduContext.set_session_idaset_session_cache_modeuContext.set_session_cache_modeaget_session_cache_modeuContext.get_session_cache_modeaset_verifyuContext.set_verifyaset_verify_depthuContext.set_verify_depthaget_verify_modeuContext.get_verify_modeaget_verify_depthuContext.get_verify_depthaload_tmp_dhuContext.load_tmp_dhaset_tmp_ecdhuContext.set_tmp_ecdhaset_cipher_listuContext.set_cipher_listaset_client_ca_listuContext.set_client_ca_listaadd_client_cauContext.add_client_caaset_timeoutuContext.set_timeoutaget_timeoutuContext.get_timeoutaset_info_callbackuContext.set_info_callbackaset_keylog_callbackuContext.set_keylog_callbackaget_app_datauContext.get_app_dataaset_app_datauContext.set_app_dataaget_cert_storeuContext.get_cert_storeaset_optionsuContext.set_optionsuContext.set_modeaset_tlsext_servername_callbackuContext.set_tlsext_servername_callbackaset_tlsext_use_srtpuContext.set_tlsext_use_srtpaset_alpn_protosuContext.set_alpn_protosaset_alpn_select_callbackuContext.set_alpn_select_callbackuContext._set_ocsp_callbackaset_ocsp_server_callbackuContext.set_ocsp_server_callbackaset_ocsp_client_callbackuContext.set_ocsp_client_callbackaset_cookie_generate_callbackuContext.set_cookie_generate_callbackaset_cookie_verify_callbackuContext.set_cookie_verify_callbackuConnection.__init__a__getattr__uConnection.__getattr__uConnection._raise_ssl_erroraget_contextuConnection.get_contextaset_contextuConnection.set_contextaget_servernameuConnection.get_servernameuConnection.set_verifyuConnection.get_verify_modeuConnection.use_certificateuConnection.use_privatekeyaset_ciphertext_mtuuConnection.set_ciphertext_mtuaget_cleartext_mtuuConnection.get_cleartext_mtuaset_tlsext_host_nameuConnection.set_tlsext_host_nameapendinguConnection.pendingasenduConnection.sendawriteasendalluConnection.sendallarecvuConnection.recvareadTnnarecv_intouConnection.recv_intouConnection._handle_bio_errorsabio_readuConnection.bio_readabio_writeuConnection.bio_writearenegotiateuConnection.renegotiateado_handshakeuConnection.do_handshakeuConnection.renegotiate_pendingatotal_renegotiationsuConnection.total_renegotiationsuConnection.connectuConnection.connect_exuConnection.acceptuConnection.DTLSv1_listenaDTLSv1_get_timeoutuConnection.DTLSv1_get_timeoutuConnection.DTLSv1_handle_timeoutabio_shutdownuConnection.bio_shutdownuConnection.shutdownuConnection.get_cipher_listaget_client_ca_listuConnection.get_client_ca_listamakefileuConnection.makefileuConnection.get_app_datauConnection.set_app_dataaget_shutdownuConnection.get_shutdownaset_shutdownuConnection.set_shutdownaget_state_stringuConnection.get_state_stringaserver_randomuConnection.server_randomaclient_randomuConnection.client_randomamaster_keyuConnection.master_keyaexport_keying_materialuConnection.export_keying_materialasock_shutdownuConnection.sock_shutdownaget_certificateuConnection.get_certificateaget_peer_certificateuConnection.get_peer_certificateuConnection._cert_stack_to_listaget_peer_cert_chainuConnection.get_peer_cert_chainaget_verified_chainuConnection.get_verified_chainawant_readuConnection.want_readawant_writeuConnection.want_writeuConnection.set_accept_stateuConnection.set_connect_stateaget_sessionuConnection.get_sessionaset_sessionuConnection.set_sessionuConnection._get_finished_messageaget_finisheduConnection.get_finishedaget_peer_finisheduConnection.get_peer_finishedaget_cipher_nameuConnection.get_cipher_nameaget_cipher_bitsuConnection.get_cipher_bitsaget_cipher_versionuConnection.get_cipher_versionaget_protocol_version_nameuConnection.get_protocol_version_nameaget_protocol_versionuConnection.get_protocol_versionuConnection.set_alpn_protosaget_alpn_proto_negotiateduConnection.get_alpn_proto_negotiatedarequest_ocspuConnection.request_ocspuOpenSSL\SSL.pyTa.0wpu<module OpenSSL.SSL>Ta__class__Taselfaptv_secaptv_usecTaselfaresultTaselfabio_addraresultTatypeTaselfanameTaselfTaselfacallbackawrapperTaselfacontextasocketasslaset_resultTaselfamethodamethod_funcaversionamethod_objacontextTaobjafdamethTacert_stackaresultwiacertaresapycertTaselfadir_env_varafile_env_varTaselfafile_pathadir_pathacafileacapathTaselfafunctionaemptyasizeabufTaselfabioaresultTaflagaerrora_requires_decoratorTaselfasslaresultaerroraerrnoapeeked_errorareasonTafuncaexplodeaflagTaerroraflagTaselfahelperadataarcTaselfaclientaaddraconnTaselfacertificate_authorityaadd_resultTaselfacertobjacopyaadd_resultTaselfabufsizabufaresultTaselfabufadataaresultTaselfasessionalengthaoutpTaselfaaddrTaselfaaddraconnect_exTaargsakwargsaerrorTaerrorTaselfalabelaolenacontextaoutpacontext_bufacontext_lenause_contextasuccessTaselfadataadata_lenTaselfastoreapystoreTaselfacertTaselfacipherTaselfacipherswiaresultTaselfacipheranameTaselfacipheraversionTaselfaca_namesaresultwianameacopyapynameTaselfacert_stackTaselfaversionTaselfasessionapysessionTaselfacafileaca_listTaselfadhfileabioadharesTaselfacafileacapathaload_resultTaselfaargsakwargsTaselfabufsizaflagsabufaresultTaselfabufferanbytesaflagsabufaresultTaselfarcTaselfabufaflagsadataaresultTaselfabufaflagsadataaleft_to_sendatotal_sentaresultTaselfaprotosaprotostrainput_strTaselfacallbackTaselfadataTaselfacipher_listatmpconnTaselfamtuTaselfacertificate_authoritiesaname_stackaca_nameacopyapush_resultTaselfacontextTaselfaset_resultadir_env_varafile_env_varadefault_diradefault_fileTaselfamodeTaselfacallbackadataahelperTaselfaoptionsTaselfacallbackauserdataTaselfasessionaresultTaselfabufTaselfastateTaselfatimeoutTaselfaprofilesTaselfacurveTaselfamodeacallbackTaselfadepthTaselfacertause_resultTaselfacertfilearesultTaselfacertfileafiletypeause_resultTaselfapkeyause_resultTaselfakeyfileafiletypeause_resultT
aokastore_ctxax509acertaerror_numberaerror_depthaindexasslaconnectionaresultweacallbackaselfTacallbackaselfTasizeaverifyauserdataacallbackaselfTasslaalertaargacallbackTacallbackTasslac_cookieacookie_lenaconnweacallbackaselfT
asslacdataaconnadataaocsp_dataaocsp_data_lengthadata_ptrweacallbackaselfTasslacdataaconnadataaocsp_ptraocsp_lenaocsp_dataavalidweacallbackaselfTasslalineacallbackTasslaoutaoutlenaconnacookieweacallbackaselfTasslaoutaoutlenain_ainlenaargaconnainstraprotolistaencoded_lenaprotoaoutbytesaany_acceptedweacallbackaselfTasslawhereareturn_codeacallback.OpenSSL._utilRuaffiastringadecodeTuutf-8u
    Get a native string type representing of the given CFFI ``char*`` object.

    :param charp: A C-style string represented using CFFI.

    :return: :class:`str`
    alibaERR_get_errorlaerrorsaappendatextaERR_lib_error_stringaERR_func_error_stringaERR_reason_error_stringu
    Convert an OpenSSL library failure into a Python exception.

    When a call to the native OpenSSL library fails, this is usually signalled
    by the return value, and an error code is stored in an error queue
    associated with the current thread. The err library provides functions to
    obtain these error codes and textual error messages.
    DaokareturnOboolnu
        If *ok* is not True, retrieve the error from OpenSSL and raise it.
        aopenssl_assertumake_assert.<locals>.openssl_assertu
    Create an assert function that uses :func:`exception_from_error_queue` to
    raise an exception wrapped by *error*.
    aexception_from_error_queueaerroraosafspathaencodeasysagetfilesystemencodingu
    Convert a Python path to a :py:class:`bytes` for the path which can be
    passed into an OpenSSL API accepting a filename.

    :param s: A path (valid for os.fspath).

    :return: An instance of :py:class:`bytes`.
    Tacharmapawarningsawarna_TEXT_WARNINGaformataDeprecationWarninglTacategoryastacklevelu
    If ``obj`` is text, emit a warning that it should be bytes instead and try
    to convert it to bytes automatically.

    :param str label: The name of the parameter from which ``obj`` was taken
        (so a developer can easily find the source of the problem and correct
        it).

    :return: If ``obj`` is the text string type, a ``bytes`` object giving the
        UTF-8 encoding of that text is returned.  Otherwise, ``obj`` itself is
        returned.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aAnyaCallableaNoReturnaTypeaUnionucryptography.hazmat.bindings.openssl.bindingTaBindingaBindingaPathLikeaStrOrBytesPathabindinganew_allocatorTFTashould_clear_after_allocano_zero_allocatoracharpareturnaexception_typeamake_assertwsapath_bytesDwsareturnOstrObytesabyte_stringaUNSPECIFIEDustr for {0} is no longer accepted, use bytesalabelaobjatext_to_bytes_and_warnuOpenSSL\_util.pyu<module OpenSSL._util>TwsTaexception_typeaerrorsaerrorTaerroraopenssl_assertTaokaerrorTaerrorTwswbTacharpTalabelaobj.OpenSSL"u
pyOpenSSL - A simple wrapper around the OpenSSL library
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_OpenSSLu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aOpenSSLTaSSLacryptolaSSLacryptouOpenSSL.versionTa__author__a__copyright__a__email__a__license__a__summary__a__title__a__uri__a__version__a__author__a__copyright__a__email__a__license__a__summary__a__title__a__uri__a__version__L
aSSLacryptoa__author__a__copyright__a__email__a__license__a__summary__a__title__a__uri__a__version__a__all__uOpenSSL\__init__.pyu<module OpenSSL>u.OpenSSL.cryptoCuUnknown uu failureu
    An OpenSSL API failed somehow.  Additionally, the failure which was
    encountered isn't one that's exercised by the test suite so future behavior
    of pyOpenSSL is now somewhat less predictable.
    a_libaBIO_newaBIO_s_memaBIO_freea_ffianewuchar[]aBIO_new_mem_bufabioaAnyarefareturnafreeu_new_mem_buf.<locals>.freea_openssl_assertaNULLagcu
    Allocate a new OpenSSL memory BIO.

    Arrange for the garbage collector to clean it up automatically.

    :param buffer: None or some bytes to use to put into the BIO so that they
        can be read out.
    Tuchar**aBIO_get_mem_dataabufferl:nnnu
    Copy the contents of an OpenSSL BIO object into a Python byte string.
    uwhen must be a byte stringaASN1_TIME_set_stringuInvalid stringu
    The the time value of an ASN1 time object.

    @param boundary: An ASN1_TIME pointer (or an object safely
        castable to that type) which will have its value set.
    @param when: A string representation of the desired time value.

    @raise TypeError: If C{when} is not a L{bytes} string.
    @raise ValueError: If C{when} does not represent a time in the required
        format.
    @raise RuntimeError: If the time value cannot be set for some other
        (unspecified) reason.
    aASN1_TIME_newaASN1_TIME_freea_set_asn1_timeu
    Behaves like _set_asn1_time but returns a new ASN1_TIME object.

    @param when: A string representation of the desired time value.

    @raise TypeError: If C{when} is not a L{bytes} string.
    @raise ValueError: If C{when} does not represent a time in the required
        format.
    @raise RuntimeError: If the time value cannot be set for some other
        (unspecified) reason.
    acastuASN1_STRING*aASN1_STRING_lengthaASN1_STRING_typeaV_ASN1_GENERALIZEDTIMEastringaASN1_STRING_get0_dataTuASN1_GENERALIZEDTIME**aASN1_TIME_to_generalizedtimea_untested_errorTaASN1_TIME_to_generalizedtimeaASN1_GENERALIZEDTIME_freeu
    Retrieve the time value of an ASN1 time object.

    @param timestamp: An ASN1_GENERALIZEDTIME* (or an object safely castable to
        that type) from which the time value will be retrieved.

    @return: The time value from C{timestamp} as a L{bytes} string in a certain
        format.  Or C{None} if the object contains no time value.
    a_namesaappenda_nameaEVP_PKEY_newaEVP_PKEY_freea_pkeya_initializeducryptography.hazmat.primitives.serializationTaload_der_private_keyaload_der_public_keyaload_der_private_keyaload_der_public_keya_only_publicadump_publickeyaFILETYPE_ASN1adump_privatekeyu
        Export as a ``cryptography`` key.

        :rtype: One of ``cryptography``'s `key interfaces`_.

        .. _key interfaces: https://cryptography.io/en/latest/hazmat/            primitives/asymmetric/rsa/#key-interfaces

        .. versionadded:: 16.1.0
        arsaaRSAPublicKeyaRSAPrivateKeyadsaaDSAPublicKeyaDSAPrivateKeyaecaEllipticCurvePrivateKeyaed25519aEd25519PrivateKeyaed448aEd448PrivateKeyuUnsupported key typeTaEncodingaNoEncryptionaPrivateFormataPublicFormataEncodingaNoEncryptionaPrivateFormataPublicFormataload_publickeyapublic_bytesaDERaSubjectPublicKeyInfoaprivate_bytesaPKCS8aload_privatekeyu
        Construct based on a ``cryptography`` *crypto_key*.

        :param crypto_key: A ``cryptography`` key.
        :type crypto_key: One of ``cryptography``'s `key interfaces`_.

        :rtype: PKey

        .. versionadded:: 16.1.0
        utype must be an integerubits must be an integeraTYPE_RSAuInvalid number of bitsaBN_newaBN_freeaBN_set_wordaRSA_F4aRSA_newaRSA_generate_key_exlaEVP_PKEY_assign_RSAaTYPE_DSAaDSA_newaDSA_freeaDSA_generate_parameters_exaDSA_generate_keyaEVP_PKEY_set1_DSAaErrorTuNo such key typeaselfu
        Generate a key pair of the given type, with the given number of bits.

        This generates a key "into" the this object.

        :param type: The key type.
        :type type: :py:data:`TYPE_RSA` or :py:data:`TYPE_DSA`
        :param bits: The number of bits.
        :type bits: :py:data:`int` ``>= 0``
        :raises TypeError: If :py:data:`type` or :py:data:`bits` isn't
            of the appropriate type.
        :raises ValueError: If the number of bits isn't an integer of
            the appropriate size.
        :return: ``None``
        upublic key onlyaEVP_PKEY_typeatypeaEVP_PKEY_RSAuOnly RSA keys can currently be checked.aEVP_PKEY_get1_RSAaRSA_freeaRSA_check_keya_raise_current_erroru
        Check the consistency of an RSA private key.

        This is the Python equivalent of OpenSSL's ``RSA_check_key``.

        :return: ``True`` if key is consistent.

        :raise OpenSSL.crypto.Error: if the key is inconsistent.

        :raise TypeError: if the key is of a type which cannot be checked.
            Only RSA keys can currently be checked.
        aEVP_PKEY_idu
        Returns the type of the key

        :return: The type of the key.
        aEVP_PKEY_bitsu
        Returns the number of bits of the key

        :return: The number of bits of the key.
        a_EllipticCurvea__class__a__ne__u
        Implement cooperation with the right-hand side argument of ``!=``.

        Python 3 seems to have dropped this cooperation in this very narrow
        circumstance.
        aEC_get_builtin_curvesuEC_builtin_curve[]u
        Get the curves supported by OpenSSL.

        :param lib: The OpenSSL library binding object.

        :return: A :py:type:`set` of ``cls`` instances giving the names of the
            elliptic curves the underlying library supports.
        aclsafrom_nidalibanidu<genexpr>u_EllipticCurve._load_elliptic_curves.<locals>.<genexpr>a_curvesa_load_elliptic_curvesu
        Get, cache, and return the curves supported by OpenSSL.

        :param lib: The OpenSSL library binding object.

        :return: A :py:type:`set` of ``cls`` instances giving the names of the
            elliptic curves the underlying library supports.
        aOBJ_nid2snadecodeTaasciiu
        Instantiate a new :py:class:`_EllipticCurve` associated with the given
        OpenSSL NID.

        :param lib: The OpenSSL library binding object.

        :param nid: The OpenSSL NID the resulting curve object will represent.
            This must be a curve NID (and not, for example, a hash NID) or
            subsequent operations will fail in unpredictable ways.
        :type nid: :py:class:`int`

        :return: The curve object.
        a_nidanameu
        :param _lib: The :py:mod:`cryptography` binding instance used to
            interface with OpenSSL.

        :param _nid: The OpenSSL NID identifying the curve this object
            represents.
        :type _nid: :py:class:`int`

        :param name: The OpenSSL short name identifying the curve this object
            represents.
        :type name: :py:class:`unicode`
        u<Curve w>aEC_KEY_new_by_curve_nameaEC_KEY_freeu
        Create a new OpenSSL EC_KEY structure initialized to use this curve.

        The structure is automatically garbage collected when the Python object
        is garbage collected.
        a_get_elliptic_curvesu
    Return a set of objects representing the elliptic curves supported in the
    OpenSSL build in use.

    The curve objects have a :py:class:`unicode` ``name`` attribute by which
    they identify themselves.

    The curve objects are useful as values for the argument accepted by
    :py:meth:`Context.set_tmp_ecdh` to specify which elliptical curve should be
    used for ECDHE key exchange.
    aget_elliptic_curvesuunknown curve nameu
    Return a single curve object selected by name.

    See :py:func:`get_elliptic_curves` for information about curve objects.

    :param name: The OpenSSL short name identifying the curve object to
        retrieve.
    :type name: :py:class:`unicode`

    If the named curve is not supported then :py:class:`ValueError` is raised.
    aX509_NAME_dupaX509_NAME_freeu
        Create a new X509Name, copying the given X509Name instance.

        :param name: The name to copy.
        :type name: :py:class:`X509Name`
        astartswithTw_a__setattr__uattribute name must be string, not '{:.200}'a__name__aOBJ_txt2nida_byte_stringaNID_undefuNo such attributeaX509_NAME_entry_countaX509_NAME_get_entryaX509_NAME_ENTRY_get_objectaOBJ_obj2nidaX509_NAME_delete_entryaX509_NAME_ENTRY_freeaencodeTuutf-8aX509_NAME_add_entry_by_NIDaMBSTRING_UTF8laX509_NAME_get_index_by_NIDaX509_NAME_ENTRY_get_dataTuunsigned char**aASN1_STRING_to_UTF8aOPENSSL_freeu
        Find attribute. An X509Name object has the following attributes:
        countryName (alias C), stateOrProvince (alias ST), locality (alias L),
        organization (alias O), organizationalUnit (alias OU), commonName
        (alias CN) and more...
        aX509NameaX509_NAME_cmpTuchar[]laX509_NAME_onelineu<X509Name object '{}'>u
        String representation of an X509Name
        aX509_NAME_hashu
        Return an integer representation of the first four bytes of the
        MD5 digest of the DER representation of the name.

        This is the Python equivalent of OpenSSL's ``X509_NAME_hash``.

        :return: The (integer) hash of this name.
        :rtype: :py:class:`int`
        ai2d_X509_NAMEu
        Return the DER encoding of this name.

        :return: The DER encoded form of this name.
        :rtype: :py:class:`bytes`
        aresultu
        Returns the components of this name, as a sequence of 2-tuples.

        :return: The components of this name.
        :rtype: :py:class:`list` of ``name, value`` tuples.
        TuX509V3_CTX*aX509V3_set_ctxaX509V3_set_ctx_nodbaX509uissuer must be an X509 instancea_x509aissuer_certusubject must be an X509 instanceasubject_certccritical,aX509V3_EXT_nconfaX509_EXTENSION_freea_extensionu
        Initializes an X509 extension.

        :param type_name: The name of the type of extension_ to create.
        :type type_name: :py:data:`bytes`

        :param bool critical: A flag indicating whether this is a critical
            extension.

        :param value: The OpenSSL textual representation of the extension's
            value.
        :type value: :py:data:`bytes`

        :param subject: Optional X509 certificate to use as subject.
        :type subject: :py:class:`X509`

        :param issuer: Optional X509 certificate to use as issuer.
        :type issuer: :py:class:`X509`

        .. _extension: https://www.openssl.org/docs/manmaster/man5/
            x509v3_config.html#STANDARD-EXTENSIONS
        aX509_EXTENSION_get_objectuGENERAL_NAMES*aX509V3_EXT_d2iaGENERAL_NAMES_freeask_GENERAL_NAME_numask_GENERAL_NAME_valueanamesa_prefixesa_new_mem_bufaGENERAL_NAME_printapartsa_bio_to_stringwdaia5adataalengthalabelw:u, aNID_subject_alt_namea_subjectAltNameStringaX509V3_EXT_printu
        :return: a nice text representation of the extension
        aX509_EXTENSION_get_criticalu
        Returns the critical field of this X.509 extension.

        :return: The critical field.
        cUNDEFu
        Returns the short type name of this X.509 extension.

        The result is a byte string such as :py:const:`b"basicConstraints"`.

        :return: The short type name.
        :rtype: :py:data:`bytes`

        .. versionadded:: 0.12
        aX509_EXTENSION_get_datau
        Returns the data of the X509 extension, encoded as ASN.1.

        :return: The ASN.1 encoded data of this X509 extension.
        :rtype: :py:data:`bytes`

        .. versionadded:: 0.12
        aX509_REQ_newaX509_REQ_freea_reqaset_versionTlucryptography.x509Taload_der_x509_csraload_der_x509_csradump_certificate_requestu
        Export as a ``cryptography`` certificate signing request.

        :rtype: ``cryptography.x509.CertificateSigningRequest``

        .. versionadded:: 17.1.0
        ax509aCertificateSigningRequestuMust be a certificate signing requestTaEncodingaload_certificate_requestu
        Construct based on a ``cryptography`` *crypto_req*.

        :param crypto_req: A ``cryptography`` X.509 certificate signing request
        :type crypto_req: ``cryptography.x509.CertificateSigningRequest``

        :rtype: X509Req

        .. versionadded:: 17.1.0
        aX509_REQ_set_pubkeyu
        Set the public key of the certificate signing request.

        :param pkey: The public key to use.
        :type pkey: :py:class:`PKey`

        :return: ``None``
        aPKeya__new__aX509_REQ_get_pubkeyu
        Get the public key of the certificate signing request.

        :return: The public key.
        :rtype: :py:class:`PKey`
        uversion must be an intuInvalid version. The only valid version for X509Req is 0.aX509_REQ_set_versionu
        Set the version subfield (RFC 2986, section 4.1) of the certificate
        request.

        :param int version: The version number.
        :return: ``None``
        aX509_REQ_get_versionu
        Get the version subfield (RFC 2459, section 4.1.2.1) of the certificate
        request.

        :return: The value of the version subfield.
        :rtype: :py:class:`int`
        aX509_REQ_get_subject_namea_owneru
        Return the subject of this certificate signing request.

        This creates a new :class:`X509Name` that wraps the underlying subject
        name field on the certificate signing request. Modifying it will modify
        the underlying signing request, and will have the effect of modifying
        any other :class:`X509Name` that refers to this subject.

        :return: The subject of this certificate signing request.
        :rtype: :class:`X509Name`
        ask_X509_EXTENSION_new_nullask_X509_EXTENSION_freea_X509ExtensionInternaluOne of the elements is not an X509Extensionask_X509_EXTENSION_pushastackaX509_REQ_add_extensionsu
        Add extensions to the certificate signing request.

        :param extensions: The X.509 extensions to add.
        :type extensions: iterable of :py:class:`X509Extension`
        :return: ``None``
        aX509_REQ_get_extensionsu<lambda>uX509Req.get_extensions.<locals>.<lambda>ask_X509_EXTENSION_numaX509_EXTENSION_dupask_X509_EXTENSION_valueanative_exts_objaextsu
        Get X.509 extensions in the certificate signing request.

        :return: The X.509 extensions in this request.
        :rtype: :py:class:`list` of :py:class:`X509Extension` objects.

        .. versionadded:: 0.15
        ask_X509_EXTENSION_pop_freeaaddressofa_original_libuKey has only public partuKey is uninitializedaEVP_get_digestbynameuNo such digest methodaX509_REQ_signu
        Sign the certificate signing request with this key and digest type.

        :param pkey: The key pair to sign with.
        :type pkey: :py:class:`PKey`
        :param digest: The name of the message digest to use for the signature,
            e.g. :py:data:`"sha256"`.
        :type digest: :py:class:`str`
        :return: ``None``
        upkey must be a PKey instanceaX509_REQ_verifyu
        Verifies the signature on this certificate signing request.

        :param PKey key: A public key.

        :return: ``True`` if the signature is correct.
        :rtype: bool

        :raises OpenSSL.crypto.Error: If the signature is invalid or there is a
            problem verifying the signature.
        aX509_newaX509_freea_X509NameInvalidatora_issuer_invalidatora_subject_invalidatorTaload_der_x509_certificateaload_der_x509_certificateadump_certificateu
        Export as a ``cryptography`` certificate.

        :rtype: ``cryptography.x509.Certificate``

        .. versionadded:: 17.1.0
        aCertificateuMust be a certificateaload_certificateu
        Construct based on a ``cryptography`` *crypto_cert*.

        :param crypto_key: A ``cryptography`` X.509 certificate.
        :type crypto_key: ``cryptography.x509.Certificate``

        :rtype: X509

        .. versionadded:: 17.1.0
        uversion must be an integeraX509_set_versionu
        Set the version number of the certificate. Note that the
        version value is zero-based, eg. a value of 0 is V1.

        :param version: The version number of the certificate.
        :type version: :py:class:`int`

        :return: ``None``
        aX509_get_versionu
        Return the version number of the certificate.

        :return: The version number of the certificate.
        :rtype: :py:class:`int`
        aX509_get_pubkeyu
        Get the public key of the certificate.

        :return: The public key.
        :rtype: :py:class:`PKey`
        aX509_set_pubkeyu
        Set the public key of the certificate.

        :param pkey: The public key.
        :type pkey: :py:class:`PKey`

        :return: :py:data:`None`
        uKey only has public partaX509_signu
        Sign the certificate with this key and digest type.

        :param pkey: The key to sign with.
        :type pkey: :py:class:`PKey`

        :param digest: The name of the message digest to use.
        :type digest: :py:class:`str`

        :return: :py:data:`None`
        aX509_get0_tbs_sigalgTuASN1_OBJECT **aX509_ALGOR_get0uUndefined signature algorithmaOBJ_nid2lnu
        Return the signature algorithm used in the certificate.

        :return: The name of the algorithm.
        :rtype: :py:class:`bytes`

        :raises ValueError: If the signature algorithm is undefined.

        .. versionadded:: 0.13
        uunsigned char[]aEVP_MAX_MD_SIZETuunsigned int[]laX509_digestd:ab16encodeaupperu
        Return the digest of the X509 object.

        :param digest_name: The name of the digest algorithm to use.
        :type digest_name: :py:class:`str`

        :return: The digest of the object, formatted as
            :py:const:`b":"`-delimited hex pairs.
        :rtype: :py:class:`bytes`
        aX509_subject_name_hashu
        Return the hash of the X509 subject.

        :return: The hash of the subject.
        :rtype: :py:class:`bytes`
        userial must be an integer:lnnTuBIGNUM**aBN_hex2bnaASN1_INTEGER_setaX509_get_serialNumberaBN_to_ASN1_INTEGERaASN1_INTEGER_freeaX509_set_serialNumberu
        Set the serial number of the certificate.

        :param serial: The new serial number.
        :type serial: :py:class:`int`

        :return: :py:data`None`
        aASN1_INTEGER_to_BNaBN_bn2hexlu
        Return the serial number of this certificate.

        :return: The serial number.
        :rtype: int
        uamount must be an integeraX509_getm_notAfteraX509_gmtime_adju
        Adjust the time stamp on which the certificate stops being valid.

        :param int amount: The number of seconds by which to adjust the
            timestamp.
        :return: ``None``
        aX509_getm_notBeforeu
        Adjust the timestamp on which the certificate starts being valid.

        :param amount: The number of seconds by which to adjust the timestamp.
        :return: ``None``
        aget_notAfteruUnable to determine notAfteradatetimeastrptimeu%Y%m%d%H%M%SZatimezoneautcanowareplaceTnTatzinfou
        Check whether the certificate has expired.

        :return: ``True`` if the certificate has expired, ``False`` otherwise.
        :rtype: bool
        a_get_asn1_timea_get_boundary_timeu
        Get the timestamp at which the certificate starts being valid.

        The timestamp is formatted as an ASN.1 TIME::

            YYYYMMDDhhmmssZ

        :return: A timestamp string, or ``None`` if there is none.
        :rtype: bytes or NoneType
        a_set_boundary_timeu
        Set the timestamp at which the certificate starts being valid.

        The timestamp is formatted as an ASN.1 TIME::

            YYYYMMDDhhmmssZ

        :param bytes when: A timestamp string.
        :return: ``None``
        u
        Get the timestamp at which the certificate stops being valid.

        The timestamp is formatted as an ASN.1 TIME::

            YYYYMMDDhhmmssZ

        :return: A timestamp string, or ``None`` if there is none.
        :rtype: bytes or NoneType
        u
        Set the timestamp at which the certificate stops being valid.

        The timestamp is formatted as an ASN.1 TIME::

            YYYYMMDDhhmmssZ

        :param bytes when: A timestamp string.
        :return: ``None``
        uname must be an X509Namea_get_nameaX509_get_issuer_nameaaddu
        Return the issuer of this certificate.

        This creates a new :class:`X509Name` that wraps the underlying issuer
        name field on the certificate. Modifying it will modify the underlying
        certificate, and will have the effect of modifying any other
        :class:`X509Name` that refers to this issuer.

        :return: The issuer of this certificate.
        :rtype: :class:`X509Name`
        a_set_nameaX509_set_issuer_nameaclearu
        Set the issuer of this certificate.

        :param issuer: The issuer.
        :type issuer: :py:class:`X509Name`

        :return: ``None``
        aX509_get_subject_nameu
        Return the subject of this certificate.

        This creates a new :class:`X509Name` that wraps the underlying subject
        name field on the certificate. Modifying it will modify the underlying
        certificate, and will have the effect of modifying any other
        :class:`X509Name` that refers to this subject.

        :return: The subject of this certificate.
        :rtype: :class:`X509Name`
        aX509_set_subject_nameu
        Set the subject of this certificate.

        :param subject: The subject.
        :type subject: :py:class:`X509Name`

        :return: ``None``
        aX509_get_ext_countu
        Get the number of extensions on this certificate.

        :return: The number of extensions.
        :rtype: :py:class:`int`

        .. versionadded:: 0.12
        aX509_add_extu
        Add extensions to the certificate.

        :param extensions: The extensions to add.
        :type extensions: An iterable of :py:class:`X509Extension` objects.
        :return: ``None``
        aX509_get_extuextension index out of boundsu
        Get a specific extension of the certificate by index.

        Extensions on a certificate are kept in order. The index
        parameter selects which extension will be returned.

        :param int index: The index of the extension to retrieve.
        :return: The extension at the specified index.
        :rtype: :py:class:`X509Extension`
        :raises IndexError: If the extension index was out of bounds.

        .. versionadded:: 0.12
        aX509_STORE_newaX509_STORE_freea_storeaX509_STORE_add_certu
        Adds a trusted certificate to this store.

        Adding a certificate with this method adds this certificate as a
        *trusted* certificate.

        :param X509 cert: The certificate to add to this store.

        :raises TypeError: If the certificate is not an :class:`X509`.

        :raises OpenSSL.crypto.Error: If OpenSSL was unhappy with your
            certificate.

        :return: ``None`` if the certificate was added successfully.
        aCertificateRevocationListad2i_X509_CRL_bioaX509_CRL_freea_CRLInternala_crluCRL must be of type OpenSSL.crypto.CRL or cryptography.x509.CertificateRevocationListaX509_STORE_add_crlu
        Add a certificate revocation list to this store.

        The certificate revocation lists added to a store will only be used if
        the associated flags are configured to check certificate revocation
        lists.

        .. versionadded:: 16.1.0

        :param crl: The certificate revocation list to add to this store.
        :type crl: ``Union[CRL, cryptography.x509.CertificateRevocationList]``
        :return: ``None`` if the certificate revocation list was added
            successfully.
        aX509_STORE_set_flagsu
        Set verification flags to this store.

        Verification flags can be combined by oring them together.

        .. note::

          Setting a verification flag sometimes requires clients to add
          additional information to the store, otherwise a suitable error will
          be raised.

          For example, in setting flags to enable CRL checking a
          suitable CRL must be added to the store otherwise an error will be
          raised.

        .. versionadded:: 16.1.0

        :param int flags: The verification flags to set on this store.
            See :class:`X509StoreFlags` for available constants.
        :return: ``None`` if the verification flags were successfully set.
        aX509_VERIFY_PARAM_newaX509_VERIFY_PARAM_freeaX509_VERIFY_PARAM_set_timeacalendaratimegmatimetupleaX509_STORE_set1_paramu
        Set the time against which the certificates are verified.

        Normally the current time is used.

        .. note::

          For example, you can determine if a certificate was valid at a given
          time.

        .. versionadded:: 17.0.0

        :param datetime vfy_time: The verification time to set on this store.
        :return: ``None`` if the verification time was successfully set.
        a_path_bytesaX509_STORE_load_locationsu
        Let X509Store know where we can find trusted certificates for the
        certificate chain.  Note that the certificates have to be in PEM
        format.

        If *capath* is passed, it must be a directory prepared using the
        ``c_rehash`` tool included with OpenSSL.  Either, but not both, of
        *cafile* or *capath* may be ``None``.

        .. note::

          Both *cafile* and *capath* may be set simultaneously.

          Call this method multiple times to add more than one location.
          For example, CA certificates, and certificate revocation list bundles
          may be passed in *cafile* in subsequent calls to this method.

        .. versionadded:: 20.0

        :param cafile: In which file we can find the certificates (``bytes`` or
                       ``unicode``).
        :param capath: In which directory we can find the certificates
                       (``bytes`` or ``unicode``).

        :return: ``None`` if the locations were set successfully.

        :raises OpenSSL.crypto.Error: If both *cafile* and *capath* is ``None``
            or the locations could not be set for any reason.

        a__init__aerrorsacertificateaX509_STORE_CTX_newaX509_STORE_CTX_freea_store_ctxa_certa_build_certificate_stacka_chaina_initwsacleanupuX509StoreContext._build_certificate_stack.<locals>.cleanupask_X509_new_nullacertificatesuOne of the elements is not an X509 instanceaX509_up_refask_X509_pushask_X509_numask_X509_valueask_X509_freeaX509_STORE_CTX_initu
        Set up the store context for a subsequent verification operation.

        Calling this method more than once without first calling
        :meth:`_cleanup` will leak memory.
        aX509_STORE_CTX_cleanupu
        Internally cleans up the store context.

        The store context can then be reused with a new call to :meth:`_init`.
        aX509_verify_cert_error_stringaX509_STORE_CTX_get_erroraX509_STORE_CTX_get_error_depthaX509_STORE_CTX_get_current_certaX509_dupa_from_raw_x509_ptraX509StoreContextErroru
        Convert an OpenSSL native context error failure into a Python
        exception.

        When a call to native OpenSSL X509_verify_cert fails, additional
        information about the failure can be obtained from the store context.
        u
        Set the context's X.509 store.

        .. versionadded:: 0.15

        :param X509Store store: The store description which will be used for
            the purposes of any *future* verifications.
        a_cleanupaX509_verify_certa_exception_from_contextu
        Verify a certificate in a context.

        .. versionadded:: 0.15

        :raises X509StoreContextError: If an error occurred when validating a
          certificate in the context. Sets ``certificate`` attribute to
          indicate which certificate caused the error.
        aX509_STORE_CTX_get1_chainacert_stacku
        Verify a certificate in a context and return the complete validated
        chain.

        :raises X509StoreContextError: If an error occurred when validating a
          certificate in the context. Sets ``certificate`` attribute to
          indicate which certificate caused the error.

        .. versionadded:: 20.0
        aFILETYPE_PEMaPEM_read_bio_X509ad2i_X509_bioutype argument must be FILETYPE_PEM or FILETYPE_ASN1u
    Load a certificate (X509) from the string *buffer* encoded with the
    type *type*.

    :param type: The file type (one of FILETYPE_PEM, FILETYPE_ASN1)

    :param bytes buffer: The buffer the certificate is stored in

    :return: The X509 object
    aPEM_write_bio_X509ai2d_X509_bioaFILETYPE_TEXTaX509_print_exutype argument must be FILETYPE_PEM, FILETYPE_ASN1, or FILETYPE_TEXTu
    Dump the certificate *cert* into a buffer string encoded with the type
    *type*.

    :param type: The file type (one of FILETYPE_PEM, FILETYPE_ASN1, or
        FILETYPE_TEXT)
    :param cert: The certificate to dump
    :return: The buffer with the dumped certificate in
    aPEM_write_bio_PUBKEYai2d_PUBKEY_biou
    Dump a public key to a buffer.

    :param type: The file type (one of :data:`FILETYPE_PEM` or
        :data:`FILETYPE_ASN1`).
    :param PKey pkey: The public key to dump
    :return: The buffer with the dumped key in it.
    :rtype: bytes
    upkey must be a PKeyuif a value is given for cipher one must also be given for passphraseaEVP_get_cipherbynameuInvalid cipher namea_PassphraseHelperaPEM_write_bio_PrivateKeyacallbackacallback_argsaraise_if_problemai2d_PrivateKey_biouOnly RSA keys are supported for FILETYPE_TEXTaRSA_printu
    Dump the private key *pkey* into a buffer string encoded with the type
    *type*.  Optionally (if *type* is :const:`FILETYPE_PEM`) encrypting it
    using *cipher* and *passphrase*.

    :param type: The file type (one of :const:`FILETYPE_PEM`,
        :const:`FILETYPE_ASN1`, or :const:`FILETYPE_TEXT`)
    :param PKey pkey: The PKey to dump
    :param cipher: (optional) if encrypted PEM format, the cipher to use
    :param passphrase: (optional) if encrypted PEM format, this can be either
        the passphrase to use, or a callback for providing the passphrase.

    :return: The buffer with the dumped key in
    :rtype: bytes
    aX509_REVOKED_newaX509_REVOKED_freea_revokedubad hex stringaX509_REVOKED_set_serialNumberu
        Set the serial number.

        The serial number is formatted as a hexadecimal number encoded in
        ASCII.

        :param bytes hex_str: The new serial number.

        :return: ``None``
        aX509_REVOKED_get0_serialNumberai2a_ASN1_INTEGERu
        Get the serial number.

        The serial number is formatted as a hexadecimal number encoded in
        ASCII.

        :return: The serial number.
        :rtype: bytes
        aX509_REVOKED_get_ext_countaX509_REVOKED_get_extaNID_crl_reasonaX509_REVOKED_delete_exta_delete_reasonureason must be None or a byte stringalowerTd ca_crl_reasonsaindexaASN1_ENUMERATED_newaASN1_ENUMERATED_freeaASN1_ENUMERATED_setaX509_REVOKED_add1_ext_i2du
        Set the reason of this revocation.

        If :data:`reason` is ``None``, delete the reason instead.

        :param reason: The reason string.
        :type reason: :class:`bytes` or :class:`NoneType`

        :return: ``None``

        .. seealso::

            :meth:`all_reasons`, which gives you a list of all supported
            reasons which you might pass to this method.
        aM_ASN1_OCTET_STRING_printu
        Get the reason of this revocation.

        :return: The reason, or ``None`` if there is none.
        :rtype: bytes or NoneType

        .. seealso::

            :meth:`all_reasons`, which gives you a list of all supported
            reasons this method might return.
        u
        Return a list of all the supported reason strings.

        This list is a copy; modifying it does not change the supported reason
        strings.

        :return: A list of reason strings.
        :rtype: :class:`list` of :class:`bytes`
        a_new_asn1_timeaX509_REVOKED_set_revocationDateu
        Set the revocation timestamp.

        :param bytes when: The timestamp of the revocation,
            as ASN.1 TIME.
        :return: ``None``
        aX509_REVOKED_get0_revocationDateu
        Get the revocation timestamp.

        :return: The timestamp of the revocation, as ASN.1 TIME.
        :rtype: bytes
        aX509_CRL_newTaload_der_x509_crlaload_der_x509_crla_dump_crl_internalu
        Export as a ``cryptography`` CRL.

        :rtype: ``cryptography.x509.CertificateRevocationList``

        .. versionadded:: 17.1.0
        uMust be a certificate revocation lista_load_crl_internalu
        Construct based on a ``cryptography`` *crypto_crl*.

        :param crypto_crl: A ``cryptography`` certificate revocation list
        :type crypto_crl: ``cryptography.x509.CertificateRevocationList``

        :rtype: CRL

        .. versionadded:: 17.1.0
        aX509_CRL_get_REVOKEDask_X509_REVOKED_numask_X509_REVOKED_valuearevoked_stackaX509_REVOKED_dupa_RevokedInternalaresultsu
        Return the revocations in this certificate revocation list.

        These revocations will be provided by value, not by reference.
        That means it's okay to mutate them: it won't affect this CRL.

        :return: The revocations in this CRL.
        :rtype: :class:`tuple` of :class:`Revocation`
        aX509_CRL_add0_revokedu
        Add a revoked (by value not reference) to the CRL structure

        This revocation will be added by value, not by reference. That
        means it's okay to mutate it after adding: it won't affect
        this CRL.

        :param Revoked revoked: The new revocation.
        :return: ``None``
        aX509_CRL_get_issueru
        Get the CRL's issuer.

        .. versionadded:: 16.1.0

        :rtype: X509Name
        aX509_CRL_set_versionu
        Set the CRL version.

        .. versionadded:: 16.1.0

        :param int version: The version of the CRL.
        :return: ``None``
        aX509_CRL_set1_lastUpdateu
        Set when the CRL was last updated.

        The timestamp is formatted as an ASN.1 TIME::

            YYYYMMDDhhmmssZ

        .. versionadded:: 16.1.0

        :param bytes when: A timestamp string.
        :return: ``None``
        aX509_CRL_set1_nextUpdateu
        Set when the CRL will next be updated.

        The timestamp is formatted as an ASN.1 TIME::

            YYYYMMDDhhmmssZ

        .. versionadded:: 16.1.0

        :param bytes when: A timestamp string.
        :return: ``None``
        aX509_CRL_set_issuer_nameaX509_CRL_sortaX509_CRL_signu
        Sign the CRL.

        Signing a CRL enables clients to associate the CRL itself with an
        issuer. Before a CRL is meaningful to other OpenSSL functions, it must
        be signed by an issuer.

        This method implicitly sets the issuer's name based on the issuer
        certificate and private key used to sign the CRL.

        .. versionadded:: 16.1.0

        :param X509 issuer_cert: The issuer's certificate.
        :param PKey issuer_key: The issuer's private key.
        :param bytes digest: The digest method to sign the CRL with.
        ucert must be an X509 instanceukey must be a PKey instancea_UNSPECIFIEDudigest must be providedll<u
        Export the CRL as a string.

        :param X509 cert: The certificate used to sign the CRL.
        :param PKey key: The key used to sign the CRL.
        :param int type: The export format, either :data:`FILETYPE_PEM`,
            :data:`FILETYPE_ASN1`, or :data:`FILETYPE_TEXT`.
        :param int days: The number of days until the next update of this CRL.
        :param bytes digest: The name of the message digest to use (eg
            ``b"sha256"``).
        :rtype: bytes
        a_cacertsa_friendlynameu
        Get the certificate in the PKCS #12 structure.

        :return: The certificate, or :py:const:`None` if there is none.
        :rtype: :py:class:`X509` or :py:const:`None`
        u
        Set the certificate in the PKCS #12 structure.

        :param cert: The new certificate, or :py:const:`None` to unset it.
        :type cert: :py:class:`X509` or :py:const:`None`

        :return: ``None``
        u
        Get the private key in the PKCS #12 structure.

        :return: The private key, or :py:const:`None` if there is none.
        :rtype: :py:class:`PKey`
        u
        Set the certificate portion of the PKCS #12 structure.

        :param pkey: The new private key, or :py:const:`None` to unset it.
        :type pkey: :py:class:`PKey` or :py:const:`None`

        :return: ``None``
        u
        Get the CA certificates in the PKCS #12 structure.

        :return: A tuple with the CA certificates in the chain, or
            :py:const:`None` if there are none.
        :rtype: :py:class:`tuple` of :py:class:`X509` or :py:const:`None`
        uiterable must only contain X509 instancesu
        Replace or set the CA certificates within the PKCS12 object.

        :param cacerts: The new CA certificates, or :py:const:`None` to unset
            them.
        :type cacerts: An iterable of :py:class:`X509` or :py:const:`None`

        :return: ``None``
        uname must be a byte string or None (not w)u
        Set the friendly name in the PKCS #12 structure.

        :param name: The new friendly name, or :py:const:`None` to unset.
        :type name: :py:class:`bytes` or :py:const:`None`

        :return: ``None``
        u
        Get the friendly name in the PKCS# 12 structure.

        :returns: The friendly name,  or :py:const:`None` if there is none.
        :rtype: :py:class:`bytes` or :py:const:`None`
        a_text_to_bytes_and_warnapassphraseacacertsaPKCS12_createaNID_pbe_WithSHA1And3_Key_TripleDES_CBCaPKCS12_freeai2d_PKCS12_biou
        Dump a PKCS12 object as a string.

        For more information, see the :c:func:`PKCS12_create` man page.

        :param passphrase: The passphrase used to encrypt the structure. Unlike
            some other passphrase arguments, this *must* be a string, not a
            callback.
        :type passphrase: :py:data:`bytes`

        :param iter: Number of times to repeat the encryption step.
        :type iter: :py:data:`int`

        :param maciter: Number of times to repeat the MAC step.
        :type maciter: :py:data:`int`

        :return: The string representation of the PKCS #12 structure.
        :rtype:
        aNETSCAPE_SPKI_newaNETSCAPE_SPKI_freea_spkiaNETSCAPE_SPKI_signu
        Sign the certificate request with this key and digest type.

        :param pkey: The private key to sign with.
        :type pkey: :py:class:`PKey`

        :param digest: The message digest to use.
        :type digest: :py:class:`str`

        :return: ``None``
        aNETSCAPE_SPKI_verifyu
        Verifies a signature on a certificate request.

        :param PKey key: The public key that signature is supposedly from.

        :return: ``True`` if the signature is correct.
        :rtype: bool

        :raises OpenSSL.crypto.Error: If the signature is invalid, or there was
            a problem verifying the signature.
        aNETSCAPE_SPKI_b64_encodeu
        Generate a base64 encoded representation of this SPKI object.

        :return: The base64 encoded string.
        :rtype: :py:class:`bytes`
        aNETSCAPE_SPKI_get_pubkeyu
        Get the public key of this certificate.

        :return: The public key.
        :rtype: :py:class:`PKey`
        aNETSCAPE_SPKI_set_pubkeyu
        Set the public key of the certificate

        :param pkey: The public key
        :return: ``None``
        uonly FILETYPE_PEM key format supports encryptiona_passphrasea_more_argsa_truncatea_problemsacallableapem_password_cba_read_passphraseuLast argument must be a byte string or a callable.a_exception_from_error_queueaexceptionTypeapopuBytes expectedupassphrase returned by callback is too longabufaPEM_read_bio_PUBKEYad2i_PUBKEY_biou
    Load a public key from a buffer.

    :param type: The file type (one of :data:`FILETYPE_PEM`,
        :data:`FILETYPE_ASN1`).
    :param buffer: The buffer the key is stored in.
    :type buffer: A Python string object, either unicode or bytestring.
    :return: The PKey object.
    :rtype: :class:`PKey`
    aPEM_read_bio_PrivateKeyad2i_PrivateKey_biou
    Load a private key (PKey) from the string *buffer* encoded with the type
    *type*.

    :param type: The file type (one of FILETYPE_PEM, FILETYPE_ASN1)
    :param buffer: The buffer the key is stored in
    :param passphrase: (optional) if encrypted PEM format, this can be
                       either the passphrase to use, or a callback for
                       providing the passphrase.

    :return: The PKey object
    aPEM_write_bio_X509_REQai2d_X509_REQ_bioaX509_REQ_print_exu
    Dump the certificate request *req* into a buffer string encoded with the
    type *type*.

    :param type: The file type (one of FILETYPE_PEM, FILETYPE_ASN1)
    :param req: The certificate request to dump
    :return: The buffer with the dumped certificate request in
    aPEM_read_bio_X509_REQad2i_X509_REQ_bioaX509Requ
    Load a certificate request (X509Req) from the string *buffer* encoded with
    the type *type*.

    :param type: The file type (one of FILETYPE_PEM, FILETYPE_ASN1)
    :param buffer: The buffer the certificate request is stored in
    :return: The X509Req object
    aEVP_MD_CTX_newaEVP_MD_CTX_freeaEVP_SignInitaEVP_SignUpdateaEVP_PKEY_sizeTuunsigned int *aEVP_SignFinalu
    Sign a data string using the given key and message digest.

    :param pkey: PKey to sign with
    :param data: data to be signed
    :param digest: message digest to use
    :return: signature

    .. versionadded:: 0.11
    aEVP_VerifyInitaEVP_VerifyUpdateaEVP_VerifyFinalu
    Verify the signature for a data string.

    :param cert: signing certificate (X509 object) corresponding to the
        private key which generated the signature.
    :param signature: signature returned by sign function
    :param data: data to be verified
    :param digest: message digest to use
    :return: ``None`` if the signature is correct, raise exception otherwise.

    .. versionadded:: 0.11
    aPEM_write_bio_X509_CRLai2d_X509_CRL_bioaX509_CRL_printu
    Dump a certificate revocation list to a buffer.

    :param type: The file type (one of ``FILETYPE_PEM``, ``FILETYPE_ASN1``, or
        ``FILETYPE_TEXT``).
    :param CRL crl: The CRL to dump.

    :return: The buffer with the CRL.
    :rtype: bytes
    aPEM_read_bio_X509_CRLu
    Load Certificate Revocation List (CRL) data from a string *buffer*.
    *buffer* encoded with the type *type*.

    :param type: The file type (one of FILETYPE_PEM, FILETYPE_ASN1)
    :param buffer: The buffer the CRL is stored in

    :return: The CRL object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__afunctoolsatypingabase64Tab16encodeapartialaPathLikeaCallableaIterableaListaNoReturnaOptionalaSequenceaSetaTupleaTypeaUnionacryptographyTautilsax509autilsucryptography.hazmat.primitives.asymmetricTadsaaecaed448aed25519arsauOpenSSL._utilTaUNSPECIFIEDaUNSPECIFIEDTabyte_stringabyte_stringTaexception_from_error_queueaexception_from_error_queueTaffiaffiTalibTamake_assertamake_asserta_make_assertTapath_bytesapath_bytesTatext_to_bytes_and_warnatext_to_bytes_and_warnL!aFILETYPE_PEMaFILETYPE_ASN1aFILETYPE_TEXTaTYPE_RSAaTYPE_DSAaErroraPKeyaget_elliptic_curvesaget_elliptic_curveaX509NameaX509ExtensionaX509ReqaX509aX509StoreFlagsaX509StoreaX509StoreContextErroraX509StoreContextaload_certificateadump_certificateadump_publickeyadump_privatekeyaRevokedaCRLaPKCS12aNetscapeSPKIaload_publickeyaload_privatekeyadump_certificate_requestaload_certificate_requestasignaverifyadump_crlaload_crla__all__a_KeyaStrOrBytesPathTQObytesaPassphraseCallableTaSSL_FILETYPE_PEMaSSL_FILETYPE_ASN1laEVP_PKEY_DSAaEVP_PKEY_DHaTYPE_DHaEVP_PKEY_ECaTYPE_ECTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uOpenSSL.cryptoa__module__u
    An error occurred in an `OpenSSL.crypto` API.
    a__qualname__a__orig_bases__awhereaboundaryawhenatimestampDareturnnu_X509NameInvalidator.__init__DanameareturnaX509Namenu_X509NameInvalidator.addu_X509NameInvalidator.clearTu
    A class representing an DSA or RSA public key or key pair.
    uPKey.__init__ato_cryptography_keyuPKey.to_cryptography_keyacrypto_keyafrom_cryptography_keyuPKey.from_cryptography_keyDatypeabitsareturnOintpnagenerate_keyuPKey.generate_keyDareturnOboolacheckuPKey.checkDareturnOintuPKey.typeabitsuPKey.bitsu
    A representation of a supported elliptic curve.

    @cvar _curves: :py:obj:`None` until an attempt is made to load the curves.
        Thereafter, a :py:type:`set` containing :py:type:`_EllipticCurve`
        instances each of which represents one curve supported by the system.
    @type _curves: :py:type:`NoneType` or :py:type:`set`
    aotheru_EllipticCurve.__ne__u_EllipticCurve._load_elliptic_curvesu_EllipticCurve._get_elliptic_curvesu_EllipticCurve.from_nidu_EllipticCurve.__init__DareturnOstra__repr__u_EllipticCurve.__repr__a_to_EC_KEYu_EllipticCurve._to_EC_KEYaget_elliptic_curveatotal_orderingu
    An X.509 Distinguished Name.

    :ivar countryName: The country of the entity.
    :ivar C: Alias for  :py:attr:`countryName`.

    :ivar stateOrProvinceName: The state or province of the entity.
    :ivar ST: Alias for :py:attr:`stateOrProvinceName`.

    :ivar localityName: The locality of the entity.
    :ivar L: Alias for :py:attr:`localityName`.

    :ivar organizationName: The organization name of the entity.
    :ivar O: Alias for :py:attr:`organizationName`.

    :ivar organizationalUnitName: The organizational unit of the entity.
    :ivar OU: Alias for :py:attr:`organizationalUnitName`

    :ivar commonName: The common name of the entity.
    :ivar CN: Alias for :py:attr:`commonName`.

    :ivar emailAddress: The e-mail address of the entity.
    uX509Name.__init__avalueuX509Name.__setattr__a__getattr__uX509Name.__getattr__a__eq__uX509Name.__eq__a__lt__uX509Name.__lt__uX509Name.__repr__ahashuX509Name.hashDareturnObytesaderuX509Name.derTObytespaget_componentsuX509Name.get_componentsu
    An X.509 v3 certificate extension.
    aX509ExtensionTnnatype_nameacriticalasubjectaissueruX509Extension.__init__uX509Extension._nidaGEN_EMAILaemailaGEN_DNSaDNSaGEN_URIaURIaClassVaraDictTOintOstruX509Extension._subjectAltNameStringa__str__uX509Extension.__str__aget_criticaluX509Extension.get_criticalaget_short_nameuX509Extension.get_short_nameaget_datauX509Extension.get_dataadeprecateduX509Extension support in pyOpenSSL is deprecated. You should use the APIs in cryptography.aDeprecationWarningDanameaX509Extensionu
    An X.509 certificate signing requests.
    uX509Req.__init__ato_cryptographyuX509Req.to_cryptographyacrypto_reqafrom_cryptographyuX509Req.from_cryptographyapkeyaset_pubkeyuX509Req.set_pubkeyaget_pubkeyuX509Req.get_pubkeyDaversionareturnOintnuX509Req.set_versionaget_versionuX509Req.get_versionaget_subjectuX509Req.get_subjectaextensionsaadd_extensionsuX509Req.add_extensionsaget_extensionsuX509Req.get_extensionsadigestasignuX509Req.signaverifyuX509Req.verifyu
    An X.509 certificate.
    uX509.__init__uX509._from_raw_x509_ptruX509.to_cryptographyacrypto_certuX509.from_cryptographyuX509.set_versionuX509.get_versionuX509.get_pubkeyuX509.set_pubkeyuX509.signaget_signature_algorithmuX509.get_signature_algorithmDadigest_nameareturnOstrObytesuX509.digestasubject_name_hashuX509.subject_name_hashDaserialareturnOintnaset_serial_numberuX509.set_serial_numberaget_serial_numberuX509.get_serial_numberDaamountareturnOintnagmtime_adj_notAfteruX509.gmtime_adj_notAfteragmtime_adj_notBeforeuX509.gmtime_adj_notBeforeahas_expireduX509.has_expiredawhichuX509._get_boundary_timeaget_notBeforeuX509.get_notBeforeuX509._set_boundary_timeDawhenareturnObytesnaset_notBeforeuX509.set_notBeforeuX509.get_notAfteraset_notAfteruX509.set_notAfteruX509._get_nameuX509._set_nameaget_issueruX509.get_issueraset_issueruX509.set_issueruX509.get_subjectaset_subjectuX509.set_subjectaget_extension_countuX509.get_extension_countuX509.add_extensionsaget_extensionuX509.get_extensionu
    Flags for X509 verification, used to change the behavior of
    :class:`X509Store`.

    See `OpenSSL Verification Flags`_ for details.

    .. _OpenSSL Verification Flags:
        https://www.openssl.org/docs/manmaster/man3/X509_VERIFY_PARAM_set_flags.html
    aX509StoreFlagsaX509_V_FLAG_CRL_CHECKaCRL_CHECKaX509_V_FLAG_CRL_CHECK_ALLaCRL_CHECK_ALLaX509_V_FLAG_IGNORE_CRITICALaIGNORE_CRITICALaX509_V_FLAG_X509_STRICTaX509_STRICTaX509_V_FLAG_ALLOW_PROXY_CERTSaALLOW_PROXY_CERTSaX509_V_FLAG_POLICY_CHECKaPOLICY_CHECKaX509_V_FLAG_EXPLICIT_POLICYaEXPLICIT_POLICYaX509_V_FLAG_INHIBIT_MAPaINHIBIT_MAPaX509_V_FLAG_CHECK_SS_SIGNATUREaCHECK_SS_SIGNATUREaX509_V_FLAG_PARTIAL_CHAINaPARTIAL_CHAINu
    An X.509 store.

    An X.509 store is used to describe a context in which to verify a
    certificate. A description of a context may include a set of certificates
    to trust, a set of certificate revocation lists, verification flags and
    more.

    An X.509 store, being only a description, cannot be used by itself to
    verify a certificate. To carry out the actual verification process, see
    :class:`X509StoreContext`.
    aX509StoreuX509Store.__init__acertaadd_certuX509Store.add_certacrlaadd_crluX509Store.add_crlDaflagsareturnOintnaset_flagsuX509Store.set_flagsavfy_timeaset_timeuX509Store.set_timeacafileacapathaload_locationsuX509Store.load_locationsu
    An exception raised when an error occurred while verifying a certificate
    using `OpenSSL.X509StoreContext.verify_certificate`.

    :ivar certificate: The certificate which caused verificate failure.
    :type certificate: :class:`X509`
    amessageastruX509StoreContextError.__init__u
    An X.509 store context.

    An X.509 store context is used to carry out the actual verification process
    of a certificate in a described context. For describing such a context, see
    :class:`X509Store`.

    :ivar _store_ctx: The underlying X509_STORE_CTX structure used by this
        instance.  It is dynamically allocated and automatically garbage
        collected.
    :ivar _store: See the ``store`` ``__init__`` parameter.
    :ivar _cert: See the ``certificate`` ``__init__`` parameter.
    :ivar _chain: See the ``chain`` ``__init__`` parameter.
    :param X509Store store: The certificates which will be trusted for the
        purposes of any verifications.
    :param X509 certificate: The certificate to be verified.
    :param chain: List of untrusted certificates that may be used for building
        the certificate chain. May be ``None``.
    :type chain: :class:`list` of :class:`X509`
    aX509StoreContextastoreachainuX509StoreContext.__init__uX509StoreContext._build_certificate_stackuX509StoreContext._inituX509StoreContext._cleanupuX509StoreContext._exception_from_contextaset_storeuX509StoreContext.set_storeaverify_certificateuX509StoreContext.verify_certificateaget_verified_chainuX509StoreContext.get_verified_chainacipheru
    A certificate revocation.
    aRevokedLcunspecifiedckeyCompromisecCACompromisecaffiliationChangedcsupersededccessationOfOperationccertificateHolduRevoked.__init__Dahex_strareturnObytesnaset_serialuRevoked.set_serialaget_serialuRevoked.get_serialuRevoked._delete_reasonareasonaset_reasonuRevoked.set_reasonaget_reasonuRevoked.get_reasonaall_reasonsuRevoked.all_reasonsaset_rev_dateuRevoked.set_rev_dateaget_rev_dateuRevoked.get_rev_dateuCRL support in pyOpenSSL is deprecated. You should use the APIs in cryptography.DanameaRevokedu
    A certificate revocation list.
    aCRLuCRL.__init__uCRL.to_cryptographyacrypto_crluCRL.from_cryptographyaget_revokeduCRL.get_revokedarevokedaadd_revokeduCRL.add_revokeduCRL.get_issueruCRL.set_versionaset_lastUpdateuCRL.set_lastUpdateaset_nextUpdateuCRL.set_nextUpdateaissuer_keyuCRL.signldakeyadaysaexportuCRL.exportDanameaCRLu
    A PKCS #12 archive.
    aPKCS12uPKCS12.__init__aget_certificateuPKCS12.get_certificateaset_certificateuPKCS12.set_certificateaget_privatekeyuPKCS12.get_privatekeyaset_privatekeyuPKCS12.set_privatekeyaget_ca_certificatesuPKCS12.get_ca_certificatesaset_ca_certificatesuPKCS12.set_ca_certificatesaset_friendlynameuPKCS12.set_friendlynameaget_friendlynameuPKCS12.get_friendlynameTnllaiteramaciteruPKCS12.exportuPKCS#12 support in pyOpenSSL is deprecated. You should use the APIs in cryptography.DanameaPKCS12u
    A Netscape SPKI object.
    aNetscapeSPKIuNetscapeSPKI.__init__uNetscapeSPKI.signuNetscapeSPKI.verifyab64_encodeuNetscapeSPKI.b64_encodeuNetscapeSPKI.get_pubkeyuNetscapeSPKI.set_pubkeyuNetscapeSPKI support in pyOpenSSL is deprecated.DanameaNetscapeSPKITFpamore_argsatruncateu_PassphraseHelper.__init__u_PassphraseHelper.callbacku_PassphraseHelper.callback_argsu_PassphraseHelper.raise_if_problemasizearwflagauserdatau_PassphraseHelper._read_passphraseTOstrObytesarequsign() is deprecated. Use the equivilant APIs in cryptography.Danameasignasignatureuverify() is deprecated. Use the equivilant APIs in cryptography.Danameaverifyadump_crlDanameadump_crlaload_crlDanameaload_crluOpenSSL\crypto.pyTa.0wcaclsalibTwxu<module OpenSSL.crypto>Ta__class__TaselfaotherTaselfanameanidaentry_indexaentryadataaresult_bufferadata_lengtharesultTaselfTaselfacrlTaselfalibanidanameTaselfamessageaerrorsacertificatea__class__TaselfanameTaselfapkeyTaselfareqTaselfarevokedTaselfaspkiTaselfastoreTaselfastoreacertificateachainastore_ctxTaselfatypeapassphraseamore_argsatruncateTaselfatype_nameacriticalavalueasubjectaissueractxaextensionTaselfax509Taselfaothera__class__Taselfaresult_bufferaformat_resultT
aselfanameavalueanidwiaentaent_objaent_nidaadd_resulta__class__Taselfabioaprint_resultTabioaresult_bufferabuffer_lengthTacertificatesacleanupastackacertTaselfwiaextaobjTaselfamessageaerrorsa_x509a_certapycertTaclsax509acertTatimestampastring_timestampageneralized_timestampastring_dataastring_resultTaselfawhichTaclsalibTaselfawhichanameTaselfaretTaclsalibanum_curvesabuiltin_curvesTawhenaretTabufferabioafreeadataTaselfabufasizearwflagauserdataaresultwiweTaboundaryawhenaset_resultTaselfawhichawhenTaselfawhichanameaset_resultTaselfanamesapartswianamealabelabioavalueTaselfakeyTawhereTaselfacertaresTaselfacrlaEncodingabioaopenssl_crlTaselfaextensionsaextaadd_resultTaselfaextensionsastackaextaadd_resultTaselfarevokedacopyaadd_resultTaselfaencodedaresultTaselfarsaaresultTwswiwxTaselfaresult_bufferaencode_resultastring_resultTaselfadigest_nameadigestaresult_bufferaresult_lengthadigest_resultTatypeacertabioaresult_codeTatypeareqabioaresult_codeTatypeacrlabioaretTatypeapkeyacipherapassphraseabioacipher_objahelperaresult_codearsaTatypeapkeyabioawrite_bioaresult_codeT
aselfacertakeyatypeadaysadigestadigest_objasometimearetasign_resultT
aselfapassphraseaiteramaciteracacertsacertafriendlynameapkeyapkcs12abioTabioarefTaclsacrypto_certaEncodingaderTaclsacrypto_crlaEncodingaderTaclsacrypto_reqaEncodingaderTaclsacrypto_keyaEncodingaNoEncryptionaPrivateFormataPublicFormataderTaclsalibanidTaselfatypeabitsaexponentarsaaresultadsaaresTaselfaresultwiaentafnameafvalanidanameavalueTaselfaoctet_resultastring_resultachar_resultaresult_lengthTanameacurveTaselfaindexaextaextensionTaselfaextsanative_exts_objwiaextaextensionTaselfa_issueraissuerTaselfwiaextaobjabioaprint_resultTaselfadtTaselfaresultsarevoked_stackwiarevokedarevoked_copyapyrevTaselfabioaasn1_intaresultTaselfaasn1_serialabignum_serialahex_serialahexstring_serialaserialTaselfaobjanidabufTaselfasig_algaalganidTaselfaretacert_stackaresultwiacertapycertTaselfaamountanotAfterTaselfaamountanotBeforeTaselfatime_bytesatime_stringanot_afteraUTCautcnowTatypeabufferabioax509Tatypeabufferabioareqax509reqTatypeabufferabioacrlaresultTaselfacafileacapathaload_resultTatypeabufferapassphraseabioahelperaevp_pkeyapkeyTatypeabufferabioaevp_pkeyapkeyTaselfaexceptionTypeTaselfacacertsacertTaselfacertTaselfaflagsTaselfaissuerTaselfawhenalastUpdatearetTaselfawhenanextUpdatearetTaselfawhenTaselfapkeyaset_resultTaselfareasonareason_codeanew_reason_extaset_resultaadd_resultTaselfawhenarevocationDatearetTaselfahex_strabignum_serialabignum_ptrabn_resultaasn1_serialTaselfaserialahex_serialahex_serial_bytesabignum_serialasmall_serialaset_resultaasn1_serialTaselfasubjectTaselfavfy_timeaparamTaselfaversionTaselfaversionaset_resultTapkeyadataadigestadigest_objamd_ctxalengthasignature_bufferasignature_lengthafinal_resultTaselfaissuer_certaissuer_keyadigestadigest_objaresultTaselfapkeyadigestadigest_objasign_resultTaselfapkeyadigestaevp_mdasign_resultTaselfaload_der_x509_certificateaderTaselfaload_der_x509_crladerTaselfaload_der_x509_csraderTaselfaload_der_private_keyaload_der_public_keyaderTacertasignatureadataadigestadigest_objapkeyamd_ctxaverify_resultTaselfakeyaanswerTaselfapkeyaresult.OpenSSL.versionAu
pyOpenSSL - A simple wrapper around the OpenSSL library
a__doc__a__file__a__spec__aoriginahas_locationa__cached__La__author__a__copyright__a__email__a__license__a__summary__a__title__a__uri__a__version__a__all__u23.3.0a__version__apyOpenSSLa__title__uhttps://pyopenssl.org/a__uri__uPython wrapper module around the OpenSSL librarya__summary__uThe pyOpenSSL developersa__author__ucryptography-dev@python.orga__email__uApache License, Version 2.0a__license__uCopyright 2001-2023 ua__copyright__uOpenSSL\version.pyu<module OpenSSL.version>.__main__OSlaaocpeaTneocpvTacvalaaocpeaTeocpvTacvaacopyarangealenllaaoccpeaTneocpvTacvaa__mro_entries__abasesa__iter__a__getitem__u%s argument after * must be an iterable, not %sa__name__akeysu%s argument after ** must be a mapping, not %sacalledastar_arg_dictamapping_1__dictu%s got multiple values for keyword argument '%s'aargsastar_arg_listakwla__doc__a__file__a__cached__a__annotations__awinregaosashutilasqlite3ajsonabase64arequestsactypesawmiatimeasubprocessareauuidahashlibagspreadapytzapsutilabrowser_cookie3uwin32com.clientawin32comawin32conatempfileuCryptodome.CipherTaAESaAESawin32cryptTaCryptUnprotectDataaCryptUnprotectDataagspread_formattingTw*adatetimeTadatetimeaaovcpeoTwvocpvTmcvnau @@@@ccc@@@@ccc@@@1VVe`XdVV44VV\dXeVV]` @@@c@@c@@c@@c@@@@jcc\ZV\kX[gl%@@@cc@@@c@cc@@@c@T($cfZ%@cc@c@@@@@@ccc@c@RT@@@@c@ccc@@ccc@@@$nfi%@cc@c@@@@@@ccc@c@Rcc@ccccc@cccccc@@4\lcXm%@cc@c@@@@@@ccc@c@1@@@c@@c@@c@@c@@@@e`@cc@c@@@@@@ccc@c@if] t($ cc@ccccc@cccccc@@e\c"@@@@c@ccc@@ccc@@@r<1t@@@@c@ccc@@ccc@@@r8]\^eXi%@@@cc@@@c@cc@@@c@4@@@c@@c@@c@@c@@@@2("  (j\lcXmVcfZ%@@@cc@@@c@cc@@@c@e\c4@@@@c@ccc@@ccc@@@2TT# T(RVVJ;8VVikj#c@@@@c@cc@@cc@c@@# c@cc@c@@cc@cc@@c@ikj# T'RVVJ;8VVikj#T'R c@@@@cccc@ccc@cc@Vk`cgj%T(R ccccccc@@ccc@c@@@k`cgj% T'RVVJ;8VVikjRR4cc@ccccc@cccccc@@ #t#c@c@ccccc@ccc@@@@1@c@@@c@@cc@cc@c@@#/1c@@@cccccc@@c@@c@#c@ccccc@cccc@c@c@1ko\k#(,00)0'*')''($1cccc@cccc@ccc@@@@r4XkX[#\^Xjj\D[e\j&nm=N;L*(-DA\0=E@p9V=Np`+:G]Kf`ao=8810,.-.*(0/-kfY&^if%dXi^\c\k%`gX&&1jgkk_]kjfg%jkj\lh\iWWWt T(RVVJ;8VVikjreS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSJ;8,9+=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeStc@@@@c@cc@@cc@c@@r1<D@K'.,=('''LSeSt T'RVVJ;8VVikjr1<@BFF:8-*=('''LSeStT'R c@@@@cccc@ccc@cc@Vk`cgj%T(R ccccccc@@ccc@c@@@k`cgj% T'RVVJ;8VVikjr1;@+-+=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSE@K>E?K0*()lSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSWWW]4c@ccccc@cccc@c@c@$4c@cc@c@@cc@cc@@c@1\jc\T'RVVE@@K8:@CVV4c@cc@c@@cc@cc@@c@1VVE@@K8:@CVV]`1VVJ;8VV]` g`q%t@@cc@@@@@c@c@ccc@rSSt@@cc@cc@@@c@cccc@r]\mfd\i%jf2 t@@cc@@@@@c@c@ccc@rSSt@@cc@cc@@@c@cccc@r]\\ikdi%c`kl_j2 \jfcZ%@c@c@c@ccc@@ccc@@2 cc@@@@@c@@ccc@c@@4j\c`]#cc@@@@cccccc@c@@@4XkX[#@cc@@@c@@@cc@c@@@kjfg%jkj\lh\i2t@c@c@c@ccc@@ccc@@1@@@@@c@@@@ccc@@c@Vr4cc@@@@@c@@ccc@c@@2t#c@c@ccccc@ccc@@@@1@c@@@c@@cc@cc@c@@#c@ccccc@cccc@c@c@1ef`kgXZ#)1c@@@cccccc@@c@@c@#(,00)0'*')''($1cccc@cccc@ccc@@@@r4cc@@@@cccccc@c@@@2ke\dlZf;[e\j&nm=N;L*(-DA\0=E@p9V=Np`+:G]Kf`ao=8810,.-.*(0/-kfY&^if%dXi^\c\k%`gX&&1jgkk_]4@cc@@@c@@@cc@c@@@2 Yi#g`q%t@@cc@@@@@c@c@ccc@rSSt@@cc@cc@@@c@cccc@r]e\gf4@c@c@c@ccc@@ccc@@2WWW t  VV9=J<@B@@:VVe\cikjr1bffY\ZX=kelfZZ8eS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSXkX;X`[\DcX`ZfJ<.+=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSt @c@c@cc@@@@c@@c@@reSbifnk\E(<+=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSt @@@@@@cc@@cccccc@r1;@N?eSt '#-.,/+'(& \q`Jpifd\D\cY`j`McXkfK%T'R d\kjpJ^e`kXi\gFV)*e`N% @DN%`dnkXfc][elfir1D8IeSt\dXE%T'R i\ccfikef:f\[`MV)*e`N% @DN%`dnr1LG>eSt\dXE%T'R ifjj\ZfiGV)*e`N% @DN%`dnr1LG:eS,8,=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSt <D8EI<JLme\k\^%jfr1\dXEi\jLeSt <D8EI<KLGD@:me\k\^%jfr1\dXEkjf?eSt @ccc@@ccccc@c@cc@r1\dXEpXcgj`;eSi\jL+-+=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSef`kXdif]e@d\kpJ+:,=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSWWW]4c@ccccc@cccc@c@c@  J1D1?[$d$P\d`k]ikj%@cc@@cc@@@@@@ccc@ikj4c@@@@c@cc@@cc@c@@2[`VkX_Z4cccc@cccc@ccc@@@@2[`V[X\i_kV\^Xjj\d4c@@@cccccc@@c@@c@2\[fdV\jiXg4@c@@@c@@cc@cc@c@@2)Menf[biXD4c@c@ccccc@ccc@@@@24i\jlVZ4ccccccc@@ccc@c@@@1 c@@c@@@ccc@cccc@@VVk`e`VV]\[1c@@@ccc@cc@@@@cc@jjXcZ c@@@c@@c@@cc@c@c@V[e\ggX%:HBK%@cccc@@cc@cccccc@ tT'(1Rc@c@@c@c@@c@@cc@@r1fKp^E$tc@cccc@@ccccc@c@@r1efK_eX_K$t@cccc@@c@@@c@c@c@rtcc@cccccc@@cc@@c@r1^e^E$t@cccc@@c@@@c@c@c@rt@c@c@c@@cc@@@c@c@r1p^Ek`d`C$t@cccc@@c@@@c@c@c@rt@c@c@@@@@@@@@ccc@r1l`K`_:^eK$t@cccc@@c@@@c@c@c@rtcc@c@@@@c@@cc@c@@r1^e^EfMl`K$t@cccc@@c@@@c@c@c@rt@c@@@@cccc@cc@@@@r1;J$t@cccc@@c@@@c@c@c@r1Ke`K$tc@@@c@@cccc@cccc@r1`_K^eiK$t@@@ccccccc@@@@c@@r1:HBKV;@$t@c@@@cc@cc@c@@c@@r1:HBKeK][e\ggX%:HBK%@cccc@@cc@cccccc@2T@@@c@c@c@@c@c@cc@VR efja%ccc@@cccccc@@c@@@4c@c@@c@c@@c@@cc@@'4cc@cccccc@@cc@@c@1kg\Zo\ ''(& TkelfdXV[cf_j\i_kRT'RTc@@@@c@c@c@@@cc@@VRT\cZpZke\dpXgj[XR efja%ccc@@cccccc@@c@@@kXfc]kXdif]%t])%1r4cc@cccccc@@cc@@c@1pik  @c@c@c@@cc@@@c@c@ke`kXdif]%@c@ccc@@@cccc@@@@V4@c@c@c@@cc@@@c@c@1\jc\  @c@c@c@@cc@@@c@c@kXfc]kXdif]%cc@c@@@ccc@c@@cc@V4@c@c@c@@cc@@@c@c@1@c@c@c@@cc@@@c@c@e`%]` Tccc@@c@@c@@c@@@c@VR efja%ccc@@cccccc@@c@@@ikj4@c@c@c@@cc@@@c@c@1\jc\@c@@cc@@c@ccccc@@V4@c@c@c@@cc@@@c@c@1($44Tccc@@c@@c@@c@@@c@VR efja%ccc@@cccccc@@c@@@]` %##\ZXcg\i% @c@c@@@@@@@@@ccc@kXdif]%@c@ccc@@@cccc@@@@V4@c@c@@@@@@@@@ccc@2 Tc@cc@@@c@@@c@@@@@VR efja%ccc@@cccccc@@c@@@ke`4@c@c@@@@@@@@@ccc@2T@ccc@c@@c@@c@@@c@VR efja%ccc@@cccccc@@c@@@4cc@c@@@@c@@cc@c@@2T@cccccc@ccc@c@c@@VR efja%ccc@@cccccc@@c@@@4@c@@@@cccc@cc@@@@2Tccccc@@c@@cc@c@c@VR efja%ccc@@cccccc@@c@@@4@cccc@@c@@@c@c@c@2Tc@cc@@@ccc@@@c@@@VR efja%ccc@@cccccc@@c@@@4@@@ccccccc@@@@c@@2T@c@c@@@@@@@@c@c@@VR efja%ccc@@cccccc@@c@@@4@c@@@cc@cc@c@@c@@_K^e_B4c@cccc@@ccccc@c@@1kg\Zo\t@@@cccc@c@@@cc@@@r$t@@c@ccc@@ccccccc@r]4c@cccc@@ccccc@c@@[\`]`i\MVfE4@@@cccc@c@@@cc@@@1\jc\_e`DZO4@@@cccc@c@@@cc@@@1T[\`]`i\mVj`RT'Rcc@c@cc@@c@cc@cc@]`T^e`ikjVpXcgj`[RT'Rcc@c@cc@@c@cc@cc@4@@c@ccc@@ccccccc@2Tc@@@@c@c@c@@@cc@@VRT[iXZVk`[\iZVdgRTj[f_k\dVke\dpXgVccXR efja%ccc@@cccccc@@c@@@4cc@c@cc@@c@cc@cc@1pik<@;4c@@@c@@cccc@cccc@1\jc\<M@C4c@@@c@@cccc@cccc@1(44 cccccccc@c@@cc@c@ke`]``_K^eiKI^e_B4cccccccc@c@@cc@c@1kg\Zo\TjlkXkjVkelfZZXR efja%ccc@@cccccc@@c@@@4cccccccc@c@@cc@c@1pik #kZ`[V\`bffZ%@cccc@@cc@cccccc@4j\`bffZ#te\bfk%@cccc@@cc@cccccc@r4e\bfkVjj\ZZX;.;.[\`]`i\mVj`:)^e`ikjVpXcgj`[9.[iXZVk`[\iZVdg9.j[f_k\dVke\dpXgVccX#\d`kV[\kX\iZ#\dXe#efjX\iV\cYXj`[#jlkXkjVkelfZZX#pZe\iilZ#\cZpZke\dpXgj[X#cj[Vkjlik[X#ke\gjVkelfdX#\ZeXcXY#gXZV[e\gj4j[c\`]6&tccc@cc@@cc@@cccc@r&'%/(m&dfZ%bffY\ZX]%_gXi^&&1jgkk_]k\^%jkj\lh\i4ccc@@cccccc@@c@@@2Tc@cc@@@ccc@@@c@@@VRcccc@@cc@cc@@@@@@4ccc@cc@@cc@@cccc@1Tc@@@@c@c@c@@@cc@@VR efja%ccc@@cccccc@@cc@@e`cccc@@cc@cc@@@@@@if] t  Tc@@@@c@c@c@@@cc@@VR efja%ccc@@cccccc@@cc@@e\cikjr1:HBKJ^eK][e\ggX%:HBK%@cccc@@cc@cccccc@2 :HBK][e\ggX%:HBK%@cccc@@cc@cccccc@2 #kZ`[V\`bffZ%@cccc@@cc@cccccc@4j\`bffZ#te\bfk%@cccc@@cc@cccccc@r4e\bfkVjj\ZZX[`VkelfZZX4j[c\`]6jkelfZZX[X&\d&'%/(m&dfZ%bffY\ZX]%_gXi^&&1jgkk_]k\^%jkj\lh\i4ccc@@cccccc@@cc@@1 @cccc@@cc@cccccc@ZhbKf]e@k\>]\[ c@@@c@@c@@cc@c@c@V[e\ggX%D9%@c@@@cc@c@@@c@cc@2 c@@@c@@c@@cc@c@c@V[e\ggX%:HBKVD9%@c@@@cc@c@@@c@cc@ D9Z^e_B][e\ggX%:HBKVD9%@c@@@cc@c@@@c@cc@1\jc\ tT'(1Rc@@@cc@c@c@@cc@@@r1fKp^E$tc@@@@@@cc@@ccccc@rt c@c@c@@@@c@@cccc@ikjr1^e^E$tc@@@@@@cc@@ccccc@rtccc@@@ccc@c@@@@@@r1k`d`C$tc@@@@@@cc@@ccccc@rt@@cccc@@@@cc@c@@@r1l`K`_:^eK$tc@@@@@@cc@@ccccc@rt@c@@@@@@c@@@@ccc@r1;J$tc@@@@@@cc@@ccccc@r1Ke`K$tccc@@c@cc@@cc@@c@r1X`>ZlH$t@c@@@c@cccc@@@cc@r1:HBKV;@$t@@@@c@cccc@cc@@@@r1eplH$t @c@c@cc@@c@c@@c@@D9VkfcJVbZ\_:%@c@@@cc@c@@@c@cc@rD91D9`fC$t@c@c@cc@@c@c@@c@@r1D9[@$t@c@@@ccc@c@c@@cc@r1D9eK][e\ggX%:HBKVD9%@c@@@cc@c@@@c@cc@2Tc@cc@@@ccc@@@c@@@VR@c@c@ccc@@cccc@@@4@c@@@c@cccc@@@cc@  ccc@@@ccc@c@@@@@@ke`kXdif]%@c@ccc@@@cccc@@@@V4ccc@@@ccc@c@@@@@@1\jc\  ccc@@@ccc@c@@@@@@kXfc]kXdif]%cc@c@@@ccc@c@@cc@V4ccc@@@ccc@c@@@@@@1ccc@@@ccc@c@@@@@@e`%]` Tccc@@c@@c@@c@@@c@VR@c@c@ccc@@cccc@@@ikj4ccc@@@ccc@c@@@@@@1\jc\@c@@cc@@c@ccccc@@V4ccc@@@ccc@c@@@@@@1($44Tccc@@c@@c@@c@@@c@VR@c@c@ccc@@cccc@@@]`T@@@c@c@c@@c@c@cc@VR@c@c@ccc@@cccc@@@4c@@@cc@c@c@@cc@@@2T@ccc@c@@c@@c@@@c@VR@c@c@ccc@@cccc@@@4c@c@c@@@@c@@cccc@2 %##\ZXcg\i% @@cccc@@@@cc@c@@@kXdif]%@c@ccc@@@cccc@@@@V4@@cccc@@@@cc@c@@@2 Tc@cc@@@c@@@c@@@@@VR@c@c@ccc@@cccc@@@ke`4@@cccc@@@@cc@c@@@2 %##\ZXcg\i% @c@@@@@@c@@@@ccc@kXdif]%@c@ccc@@@cccc@@@@V4@c@@@@@@c@@@@ccc@2 T@cccccc@ccc@c@c@@VR@c@c@ccc@@cccc@@@ke`4@c@@@@@@c@@@@ccc@jj`DbZ\_:4ccc@@c@cc@@cc@@c@1kg\Zo\T\[fZVpikelfZVjj\e`jlYR@c@c@ccc@@cccc@@@4ccc@@c@cc@@cc@@c@1pikTccccc@@c@@cc@c@c@VR@c@c@ccc@@cccc@@@4c@@@@@@cc@@ccccc@1@@@@c@@c@ccc@@@c@e`@c@c@ccc@@cccc@@@if]\le`kefZ2 t@@@@c@cccc@cc@@@@r1eplH$t @c@c@cc@@c@c@@c@@D9VkfcJVbZ\_:%@c@@@cc@c@@@c@cc@rD91D9`fC$D9[@$t@c@@@ccc@c@c@@cc@r1D9\dXE][e\ggX%D9%@c@@@cc@c@@@c@cc@1kg\Zo\Tc@@@@c@c@c@@@cc@@VRTjkelfZZXV[XV[\enfR efja%cccc@@@@@@cc@@@@@4@@@@c@@c@ccc@@@c@1pik #kZ`[V\`bffZ%@c@@@cc@c@@@c@cc@4j\`bffZ#te\bfk%@c@@@cc@c@@@c@cc@r4e\bfkVjj\ZZX;.cj[Vkjlik[X#\d`kV[\kX\iZ#gXZV[e\gj#ke\gjVkelfdX#\[fZVpikelfZVjj\e`jlY#pZe\iilZ#\ZeXcXY#jlkXkjVkelfZZX9.jkelfZZXV[XVke\`cZ#;.cj[Vkjlik[X#\d`kV[\kX\iZ#gXZV[e\gj#ke\gjVkelfdX#\[fZVpikelfZVjj\e`jlY#pZe\iilZ#\ZeXcXY#jlkXkjVkelfZZX9.jkelfZZXV[XV[\enf4j[c\`]6t@c@c@cc@@c@c@@c@@r&'%/(m&dfZ%bffY\ZX]%_gXi^&&1jgkk_]k\^%jkj\lh\i4cccc@@@@@@cc@@@@@$4@@@@c@cccc@cc@@@@1\jc\e`d[84@@@@c@cccc@cc@@@@1@@@@cc@c@ccc@@@c@e`E@D;8]`Tj\cfiV[\kk`di\gRccc@@@ccc@@@@c@@@4@@@@cc@c@ccc@@@c@2Tc@cc@@@ccc@@@c@@@VRccc@@@ccc@@@@c@@@4@c@c@cc@@c@c@@c@@2T@c@c@@@@@@@@c@c@@VRccc@@@ccc@@@@c@@@4@c@@@ccc@c@c@@cc@1@c@@@@ccc@ccccc@@e`ccc@@@ccc@@@@c@@@if]1cccccccc@@@@@@@@@Vkfej`@c@@@@ccc@ccccc@@]` D9[e\ggX%D9%@c@@@cc@c@@@c@cc@2 :HBK:D9[e\ggX%:HBKVD9%@c@@@cc@c@@@c@cc@2 D9V[`Vk\>%@c@@@cc@c@@@c@cc@4@c@@@@ccc@ccccc@@1 @c@@@cc@c@@@c@cc@D9Ve@VbKVk\>]\[@@cccccc@@@@ccc@@eilk\i2Tk`d`CkelfZZ8[XRT[XfcpXgR@@cc@@cc@@ccc@cc@4@@cccccc@@@@ccc@@2 @c@ccc@c@cc@c@@c@j[Xfc%efja4@@cc@@cc@@ccc@cc@2T(R (#2 k`cgj%ko\k%c@ccccc@cc@cc@c@@4@c@ccc@c@cc@c@@c@2 #kZ`[V\`bffZ%@c@@@@@@ccccc@@c@4j\`bffZ#t#(1nj\jjaVV#1kVe`gjVV#belik1YVe`gjVV#1iVe`gjVV#cc@@@c@cc@ccc@c@@1[`YVV#1[jc#@c@@@@cc@@@@cc@@@1kj\fqXa#c@cc@@@c@@@cc@c@@1^jk[VY]#1ijZVV#1ep[VV#1`j_VV#^[_jlY1l/l)n01\m)f`m1jVV#1m\iVV#KE<CC<:O<1^ZZVV#(1ig[#'%'%%'%)%^bgVj[eXiY1G9%..,0(1j_VV#-1h\iVV#(1XVV#[`l%@c@@@@@@ccccc@@c@1i\jlVVr4XkX[#tcc@@@c@cc@ccc@c@@1[`Vjj\e`jlYr4jdXiXg#&jk`d`c&kelfZZX[X&jj\e`jlY&dfZ%bffY\ZX]%jj\e`jlY&&1jgkk_kjfg%jkj\lh\i4c@ccccc@cc@cc@c@@2 >JK;Vk\>%@c@@@@@@ccccc@@c@4@c@@@@cc@@@@cc@@@#c@cc@@@c@@@cc@c@@1 cc@@@c@cc@ccc@c@@#@c@@@@@@ccccc@@c@D9VkfcJVbZ\_:]\[@cc@c@ccc@@@cc@c@#@c@@c@c@@ccccc@@@eilk\i2T'R k`cgj%T(R 4\lcXmkj\fqXa4\dXek`cgj%c@cccccc@c@cc@c@@4@cc@c@ccc@@@cc@c@2T'R k`cgj%T(R 4\lcXm^jk[VY]4\dXek`cgj%c@cccccc@c@cc@c@@4@c@@c@c@@ccccc@@@2ko\k%ccc@ccc@@ccccccc@4c@cccccc@c@cc@c@@2 kZ`[V\`bffZ%cccc@c@@@@cc@c@@@4j\`bffZ#&dfZ%bffY\ZX]%Z`jXYd&&1jgkk_k\^%jkj\lh\i4ccc@ccc@@ccccccc@1 cccc@c@@@@cc@c@@@>JK;Vk\>]\[eilk\i1kg\Zo\@c@ccc@@@cccc@cc@eilk\i @@cc@cc@@@c@c@@c@[e\ggX%@c@ccc@@@cccc@cc@1@cc@cc@@c@ccc@@@@e`@@cc@cc@@@c@c@@c@if]TR4@c@ccc@@@cccc@cc@2Tc@@@@c@c@c@@@cc@@VR efja%c@@@@c@c@@@ccccc@4@cc@cc@@c@ccc@@@@1pik #kZ`[V\`bffZ%@c@cccccc@ccc@@@@4j\`bffZ#t#e\bfk%@c@cccccc@ccc@@@@1e\bfkVjj\ZZX#j\cfiV[\kk`di\g#\^XgV\kX\iZVifV[[XVeXZ#jlkXkjVpk`c`Y`^`c\V^e`iX_j#[`#\dXe1j[c\`]r4jdXiXg#j\jj\e`jlY&\d&'%/(m&dfZ%bffY\ZX]%_gXi^&&1jgkk_k\^%jkj\lh\i4c@@@@c@c@@@ccccc@1 @c@cccccc@ccc@@@@D9V[`Vk\>]\[ccc@c@@c@c@c@@c@@eilk\icccccccc@@@@@@@@@V4ccc@c@@c@c@c@@c@@1kg\Zo\ T'R k`cgj%T(R 1e\bfkVjj\ZZXr#TR#^`]ef:kZ\eef:D:j[8Rk`cgj%ko\k% #t#*0*1_k[`n$kifgn\`m#@@c@@c@c@cc@cc@c@V1@@c@@@c@c@cccc@c@V#(1jkj\lh\i$\ilZ\je`$\[Xi^gl#(61i\jl$_Zk\]$Z\j#\efe1@@c@c@cc@@c@@ccc@V#\kX^`mXe1c@c@@@@c@@c@@c@@@V#@@@@@c@@@@ccc@@c@V1@@@@@c@@c@@ccc@c@V#)%(%+(1ef`ji\m$dif]kXcg$Xl$_Z$Z\j#jnf[e`N1dif]kXcg$Xl$_Z$Z\j#1c\[fd$Xl$_Z$Z\j#'61cc@c@@ccccccc@c@@V#0'(%00'-%'%')(4m2\dfi_:\c^ff>#0'(%00'-%'%')(4m2dl`dfi_:#'%'%'%/4m2[eXi98VkfE1kj`c$ef`ji\m$ccl]$Xl$_Z$Z\j#')(4m2\dfi_:\c^ff>#')(4m2dl`dfi_:#/4m2[eXi98VkfE1cc@ccc@c@@c@c@@@@V#biX[1\d\_Zj$ifcfZ$ji\]\ig$_Z$Z\j#)1ig[#,%'4h2e\#-%'4h2JL$e\#.%'4h2i]#/%'4h2I=$i]#0%'4h2`m#EM$`m1@@@@cc@@cccc@@@c@V#.%'4h2*Y4m2\^eX_Zo\$[\e^`j&ef`kXZ`cggX#/%'4h2!&!#^egX&\^Xd`#gY\n&\^Xd`#]`mX&\^Xd`#0%'4h2cdo&ef`kXZ`cggX#cdo"cdk_o&ef`kXZ`cggX#cdk_&ko\k1ccc@@ccc@@ccc@@@@V#dfZ%bffY\ZX]%jj\e`jlY1@cc@c@c@c@cccccc@Vr4ji\[X\_#kZ`[V\`bffZ%cc@@cccc@cc@cc@@@4j\`bffZ#&ef`kXdif]e`&j^e`kk\jVkelfZZX&i\^XeXd&j[X&dfZ%bffY\ZX]%jj\e`jlY&&1jgkk_k\^%jkj\lh\i4ccc@c@@c@c@c@@c@@1pik1 cc@@cccc@cc@cc@@@jj\e`jl9e\bfK]\[ c@cc@cc@@@@@@@@@@[e\ggX%VVJ;8VV2 J;8%@@c@@ccc@@@@@ccc@e`fa%@c@@@c@@c@@@@c@@@V4c@cc@cc@@@@@@@@@@2 tcc@c@c@c@c@ccc@c@r][e\ggX%J;8%@@c@@ccc@@@@@ccc@2 eStc@@cc@@@c@c@@@c@@r][e\ggX%J;8%@@c@@ccc@@@@@ccc@2 eSt@@cc@c@c@@c@@c@c@r][e\ggX%J;8%@@c@@ccc@@@@@ccc@2 :HBKVD9%@@c@@ccc@@@@@ccc@e`fa%@c@@@c@@c@@@@c@@@V4@@cc@c@c@@c@@c@c@2 D9%@@c@@ccc@@@@@ccc@e`fa%@c@@@c@@c@@@@c@@@V4c@@cc@@@c@c@@@c@@2 :HBK%@@c@@ccc@@@@@ccc@e`fa%@c@@@c@@c@@@@c@@@V4cc@c@c@c@c@ccc@c@ D9Ve@VbKVk\>%@@c@@ccc@@@@@ccc@2 ZhbKf]e@k\>%@@c@@ccc@@@@@ccc@1cccccccc@@@@@@@@@V4e\bfk%@@c@@ccc@@@@@ccc@]`Tc@c@@c@c@@c@c@@c@VRcc@@@@@cc@@ccc@c@4[`l%@@c@@ccc@@@@@ccc@2 jj\e`jl9e\bfK%@@c@@ccc@@@@@ccc@4e\bfk%@@c@@ccc@@@@@ccc@2cc@@@@@cc@@ccc@c@4kZ`[V\`bffZ%@@c@@ccc@@@@@ccc@c@@c@c@c@c@@cccc@4T@ccc@ccc@@c@@@c@@Rcc@@@@@cc@@ccc@c@2 4k`cgj%@c@@@@@c@cc@c@c@@4c@@c@c@c@c@@cccc@#@ccc@ccc@@c@@@c@@1@@@@@cc@@c@cc@@c@e`@c@@@@@c@cc@c@c@@if]tr4cc@@@@@cc@@ccc@c@2 c@@@@cccc@ccc@cc@Vk`cgj%kelfZZXV\`bffZ%@@c@@ccc@@@@@ccc@4@@@@@cc@@c@cc@@c@2 @@@cc@ccc@@@ccc@@[e\ggX%VVJ;8VV2@@@cc@ccc@@@ccc@@4kelfZZXV\`bffZ%@@c@@ccc@@@@@ccc@2TR4:HBKVD9%@@c@@ccc@@@@@ccc@2TR4D9%@@c@@ccc@@@@@ccc@2TR4:HBK%@@c@@ccc@@@@@ccc@2TR4J;8%@@c@@ccc@@@@@ccc@1 @@@cc@ccc@@@ccc@@#@@c@@ccc@@@@@ccc@VVk`e`VV]\[1ccc@ccc@cc@c@@cc@jjXcZ VVikjVV%c@ccc@c@@@c@@c@@@eilk\i1 c@ccc@c@@@c@@c@@@VVig\iVV]\[t[\`]`[fdV\kX[%ccc@c@c@@@ccc@cc@rkSti\Ydle%ccc@c@c@@@ccc@cc@rkStiX\p%ccc@c@c@@@ccc@cc@rkSt_kefd%ccc@c@c@@@ccc@cc@rkSt\dXe%ccc@c@c@@@ccc@cc@r]eilk\i1 ccc@c@c@@@ccc@cc@VVikjVV]\[ccc@@@cccc@ccccc@4[\`]`[fdV\kX[%c@@c@c@c@@cc@@cc@2@@@@@@cc@@@ccccc@4i\Ydle%c@@c@c@c@@cc@@cc@2@ccc@cc@@ccc@c@c@4iX\p%c@@c@c@c@@cc@@cc@2@cccc@@c@ccccccc@4_kefd%c@@c@c@c@@cc@@cc@2@c@c@c@@@@@@ccc@@4\dXe%c@@c@c@c@@cc@@cc@1 #ccc@@@cccc@ccccc@#@@@@@@cc@@@ccccc@#@ccc@cc@@ccc@c@c@#@cccc@@c@ccccccc@#@c@c@c@@@@@@ccc@@#c@@c@c@c@@cc@@cc@VVk`e`VV]\[1[iX:k`[\i:jjXcZ VVikjVV%ccc@cc@cccc@@cc@@eilk\i1 ccc@cc@cccc@@cc@@VVig\iVV]\[t_kXgVk\^iXk%@@@ccccc@c@@c@@@@rkStcilVYXk%@@@ccccc@c@@c@@@@r]eilk\i1 @@@ccccc@c@@c@@@@VVikjVV]\[cc@ccc@c@@c@@c@c@4_kXgVk\^iXk%cc@@@c@ccc@@cccc@2@@c@c@@@@@@@cc@c@4cilVYXk%cc@@@c@ccc@@cccc@1 cc@ccc@c@@c@@c@c@#@@c@c@@@@@@@cc@c@#cc@@@c@ccc@@cccc@VVk`e`VV]\[1[Xfcenf;jjXcZ VVikjVV%cccc@ccc@c@ccc@c@eilk\i1 cccc@ccc@c@ccc@c@VVig\iVV]\[ tgdXkj\d`k%ccc@ccc@ccc@@cc@@rkSt\ck`k%ccc@ccc@ccc@@cc@@rkStcil%ccc@ccc@ccc@@cc@@r]eilk\i1 ccc@ccc@ccc@@cc@@VVikjVV]\[ccccc@@@@c@@@c@@@4gdXkj\d`k%ccc@cccccc@cc@@c@2@@@c@@@c@cc@ccc@@4\ck`k%ccc@cccccc@cc@@c@2@ccc@cc@@c@c@c@c@4cil%ccc@cccccc@cc@@c@1 ccccc@@@@c@@@c@@@#@@@c@@@c@cc@ccc@@#@ccc@cc@@c@c@c@c@#ccc@cccccc@cc@@c@VVk`e`VV]\[1pifkj`?Y\NjjXcZ VVikjVV%@@c@@@@@c@@c@c@c@eilk\i1 @@c@@@@@c@@c@c@c@VVig\iVV]\[t\lcXm%c@cccc@@@cc@c@@@@rkSt\dXe%c@cccc@@@cc@c@@@@rkStj\i`go\%c@cccc@@@cc@c@@@@rkStcc@c@cc@@cccc@@c@\jc\ %_k`njkiXkj%kjf_%c@cccc@@@cc@c@@@@]`ccc@cc@@ccccc@c@@rkSt_kXg%c@cccc@@@cc@c@@@@rkStcc@c@cc@@cccc@@c@\jc\'44j\i`go\%c@cccc@@@cc@c@@@@]`ccc@cc@@ccccc@c@@rkStkjf_%c@cccc@@@cc@c@@@@r]eilk\i2<JC8=4ccc@cc@@ccccc@c@@2<LIK4cc@c@cc@@cccc@@c@1 c@cccc@@@cc@c@@@@VVikjVV]\[@@cc@@c@cc@@@cc@@4j\i`go\%cc@@@@c@@@cc@cc@@2@c@@@@@@@@@@@ccc@4\lcXm%cc@@@@c@@@cc@cc@@2c@@@c@@c@cc@cc@c@4_kXg%cc@@@@c@@@cc@cc@@2@@cc@@@@@c@@c@@c@4\dXe%cc@@@@c@@@cc@cc@@2@@c@@c@@c@cccccc@4kjf_%cc@@@@c@@@cc@cc@@1 #@@cc@@c@cc@@@cc@@#@c@@@@@@@@@@@ccc@#c@@@c@@c@cc@cc@c@#@@cc@@@@@c@@c@@c@#@@c@@c@@c@cccccc@#cc@@@@c@@@cc@cc@@VVk`e`VV]\[1\`bff:jjXcZ VVikjVV%ccc@c@ccccc@ccc@@eilk\i1 ccc@c@ccccc@ccc@@VVig\iVV]\[t[ifnjjXg%ccc@c@@@c@@c@c@@@rkSt\dXei\jl%ccc@c@@@c@@c@c@@@rkStcil%ccc@c@@@c@@c@c@@@r]eilk\i1 ccc@c@@@c@@c@c@@@VVikjVV]\[@@@@@cc@cc@@c@@@@4[ifnjjXg%cc@cc@c@@@c@c@cc@2@c@@@c@@@cc@c@cc@4\dXei\jl%cc@cc@c@@@c@c@cc@2@@@ccc@c@@c@cccc@4cil%cc@cc@c@@@c@c@cc@1 @@@@@cc@cc@@c@@@@#@c@@@c@@@cc@c@cc@#@@@ccc@c@@c@cccc@#cc@cc@c@@@c@c@cc@VVk`e`VV]\[1e`^fCjjXcZ1@ccc@@@@c@c@c@@c@jjXcZ c@@@@cc@c@@ccc@c@\mfd\i%jf2 \jfcZ%@cccc@@cc@c@c@@c@  #T+R@cc@ccccccc@@@@c@#c@cccc@@@cc@c@c@@#T)R@cc@ccccccc@@@@c@#T(R@cc@ccccccc@@@@c@#T'R@cc@ccccccc@@@@c@[iX:k`[\i:%@ccc@@@@c@c@c@@c@[e\ggX%VVJ;I8:VV%@@c@c@ccc@cc@@cc@2 p\bVi\kjXd%@@c@c@ccc@cc@@cc@#T*R@cc@ccccccc@@@@c@[ifnjjXgVkgpiZ\[%@@c@c@ccc@cc@@cc@4c@cccc@@@cc@c@c@@\le`kefZ1 T*R@cc@ccccccc@@@@c@kfeifT)R@cc@ccccccc@@@@c@kfeifT(R@cc@ccccccc@@@@c@kfeifT'R@cc@ccccccc@@@@c@kfe]`1 ccX_Zk\]%@c@@cc@cc@ccc@@c@e`@cc@ccccccc@@@@c@if] j[iXZVk`[\iZDFI=[\`]`[fdV\kX[#[\kgpiZe\Vi\YdleV[iXZ#iX\pVef`kXi`go\#_kefdVef`kXi`go\#[iXZVefV\dXeK:<C<J\klZ\o\%@c@@cc@cc@ccc@@c@2 ifjilZ%@cccc@@cc@c@c@@c@4@c@@cc@cc@ccc@@c@2 c@@@@cc@c@@ccc@c@kZ\eefZ%*\k`chj4@cccc@@cc@c@c@@c@2 c@@@@cc@c@@ccc@c@#cc@@cccc@c@@@c@@@pgfZ%c`kl_jeilk\i1 cc@@cccc@c@@@c@@@jkj`o\%_kXg%jfkfe]`XkX;Y\NSStc@@cccccc@@cc@cc@rSSt@@@cc@c@@cc@@c@c@r]4cc@@cccc@c@@@c@@@2Y[Vj[iXZ4c@@@@cc@c@@ccc@c@1 c@@cccccc@@cc@cc@#@@@cc@c@@cc@@c@c@#@@c@c@ccc@cc@@cc@j[iXZVk`[\iZVk\^]\[ @c@c@ccc@cc@@@@c@\mfd\i%jf2 \jfcZ%@cccccc@@c@@cccc@  T(R@c@cc@c@@@c@cc@@@#T'R@c@cc@c@@@c@cc@@@[Xfcenf;%@ccc@@@@c@c@c@@c@[e\ggX%VVJ;8@CEN@;VV%@c@@c@ccc@c@@@@@@\le`kefZ1T(R@c@cc@c@@@c@cc@@@kfeifT'R@c@cc@c@@@c@cc@@@kfe]`1 ccX_Zk\]%@ccc@@ccc@c@@cc@@e`@c@cc@c@@@c@cc@@@if] j[Xfcenf[DFI=_kXgVk\^iXk#cilVYXkK:<C<J\klZ\o\%@ccc@@ccc@c@@cc@@2 ifjilZ%@cccccc@@c@@cccc@4@ccc@@ccc@c@@cc@@2 @c@c@ccc@cc@@@@c@kZ\eefZ%*\k`chj4@cccccc@@c@@cccc@2 @c@c@ccc@cc@@@@c@#c@@@@@@c@c@ccccc@pgfZ%c`kl_jeilk\i1 c@@@@@@c@c@ccccc@jkj`o\%_kXg%jfkfe]`pifkj`?SSt@@cc@@@c@@cccc@c@rSStccc@c@cc@@c@@ccc@r]4c@@@@@@c@c@ccccc@2Y[Vj[Xfcenf[4@c@c@ccc@cc@@@@c@1 @@cc@@@c@@cccc@c@#ccc@c@cc@@c@@ccc@#@c@@c@ccc@c@@@@@@j[Xfcenf[Vk\^]\[ cccc@@c@ccccc@@@@\mfd\i%jf2 \jfcZ%@c@c@@@cc@c@cccc@  T)Rc@c@@cccccc@@@c@@#T(Rc@c@@cccccc@@@c@@#T'Rc@c@@cccccc@@@c@@pifkj`?Y\N%@ccc@@@@c@c@c@@c@[e\ggX%VVPI@KJ@?V9<NVV%@@ccc@@c@c@c@@cc@\le`kefZ1T)Rc@c@@cccccc@@@c@@kfeifT(Rc@c@@cccccc@@@c@@kfeifT'Rc@c@@cccccc@@@c@@kfe]`1 ccX_Zk\]%c@@ccc@@@c@cc@c@@e`c@c@@cccccc@@@c@@if] jcilDFI=\d`kVk`j`mVkjXc#\ck`k#cilK:<C<J\klZ\o\%c@@ccc@@@c@cc@c@@2 ifjilZ%@c@c@@@cc@c@cccc@4c@@ccc@@@c@cc@c@@2 cccc@@c@ccccc@@@@kZ\eefZ%*\k`chj4@c@c@@@cc@c@cccc@2 cccc@@c@ccccc@@@@#cc@ccc@@@@@@@c@c@pgfZ%c`kl_jeilk\i1 cc@ccc@@@@@@@c@c@jkj`o\%_kXg%jfkfe]`pifkj`?SSt@@@cc@@c@@@c@@c@@rSStc@c@cc@@cc@@@ccc@r]4cc@ccc@@@@@@@c@c@2Y[Vpifkj`_VY\n4cccc@@c@ccccc@@@@1 @@@cc@@c@@@c@@c@@#c@c@cc@@cc@@@ccc@#@@ccc@@c@c@c@@cc@pifkj`_VY\nVk\^]\[ ccc@@c@@cc@c@ccc@ccc@ccc@cc@c@@cc@1 ccc@@c@@cc@c@ccc@ikje`c@c@@c@c@@c@c@@c@V]` @@@c@@@cc@c@@c@@@V4cc\_j#\o\%\dfi_ZkiXkje\gfG%jj\ZfigYlj1ccc@cc@c@c@c@@c@@]` @@cc@c@@@@ccc@cc@\mfd\i%jfc@@@@cccc@ccc@cc@V4"ccc@@c@@cc@c@ccc@1($ @c@c@c@@@@@cc@cc@e\c4c@cc@c@@@c@cc@cc@]`@ccc@@cccccc@ccc@4"ccc@@c@@cc@c@ccc@2t\lcXm%cc@ccc@@@cc@@c@c@r4t\dXe%cc@ccc@@@cc@@c@c@r]4@ccc@@cccccc@ccc@1 @c@c@c@@@@@cc@cc@\kXi\dle\e`cc@ccc@@@cc@@c@c@#c@cc@c@@@c@cc@cc@if]4ccc@@c@@cc@c@ccc@2Te`Xdf[%@c@cccccccc@c@c@@e`@c@@ccc@@cccc@cc@V]`@@@@ccc@c@@c@c@c@e`@c@cccccccc@c@c@@if]@c@cccccccc@c@c@@R4@c@c@c@@@@@cc@cc@2 \dfi_Z%*\`bffZVi\jnfiY4@@@@ccc@c@@c@c@c@\le`kefZ2(4"@c@ccc@cc@ccc@c@@1kg\Zo\bX\iY2 \jfcZ%cc@cc@@c@c@cc@@@@  #T+R@@@@c@c@@cc@cc@c@#cc@ccc@@@cc@@c@c@#T)R@@@@c@c@@cc@cc@c@#T(R@@@@c@c@@cc@cc@c@#T'R@@@@c@c@@cc@cc@c@\`bff:%@ccc@@@@c@c@c@@c@[e\ggX%VVJ<@B@@:VV%@cc@c@@c@cccc@@@@2 p\bVi\kjXd%@cc@c@@c@cccc@@@@#T*R@@@@c@c@@cc@cc@c@[ifnjjXgVkgpiZ\[%@cc@c@@c@cccc@@@@4cc@ccc@@@cc@@c@c@\le`kefZ1 T*R@@@@c@c@@cc@cc@c@kfeifT)R@@@@c@c@@cc@cc@c@kfeifT(R@@@@c@c@@cc@cc@c@kfeifT'R@@@@c@c@@cc@cc@c@kfe]`1 ccX_Zk\]%cc@@@@c@cccc@c@@@e`@@@@c@c@@cc@cc@c@if] j\`bffZDFI=ZklVj\i`go\#\lcXmV[\kgpiZe\#_kXg#\dXe#p\bVkjf_K:<C<J\klZ\o\%cc@@@@c@cccc@c@@@2 ifjilZ%cc@cc@@c@c@cc@@@@4cc@@@@c@cccc@c@@@2 @@cc@c@@@@ccc@cc@kZ\eefZ%*\k`chj4cc@cc@@c@c@cc@@@@2 @@cc@c@@@@ccc@cc@#cc@cc@@ccccc@c@c@pgfZ%c`kl_j1pik1c@cc@cc@@c@c@@c@@3@c@ccc@cc@ccc@c@@\c`_n)4c@cc@cc@@c@c@@c@@2'4@c@ccc@cc@ccc@c@@eilk\i1 cc@cc@@ccccc@c@c@jkj`o\%_kXg%jfkfe]`j\`bff:SSbifnk\ESSt@c@c@@@c@cc@cc@@@rSSt@cc@@c@c@cccc@cc@r]4cc@cc@@ccccc@c@c@jjXg1kg\Zo\ cc`b%c@c@@ccc@c@c@cc@@1pik1 i\nfc%T@c@c@@@@@@@@c@c@@VRf]e`%c@c@@ccc@c@c@cc@@e`@cc@@@@ccc@cccc@@V]`1 T@c@c@@@@@@@@c@c@@V#[`gRi\k`Vjj\Zfig%c`kljge`c@c@@ccc@c@c@cc@@if]1ccc@cc@c@c@c@@c@@]`Y[V\`bffZ4@@cc@c@@@@ccc@cc@1 @c@c@@@c@cc@cc@@@#@cc@@c@c@cccc@cc@#@cc@c@@c@cccc@@@@j\`bffZVk\^]\[ ccc@c@@@c@c@@cc@@\mfd\i%jf2 \jfcZ%@cc@@cc@c@c@@ccc@  @c@c@@cccc@@c@@@@#T(Rcc@@cccc@c@ccc@@@#T'Rcc@@cccc@c@ccc@@@e`^fC%@ccc@@@@c@c@c@@c@[e\ggX%VVJE@>@CVV%cc@ccc@@c@cccc@@@2 p\bVi\kjXd%cc@ccc@@c@cccc@@@#T)Rcc@@cccc@c@ccc@@@[ifnjjXgVkgpiZ\[%cc@ccc@@c@cccc@@@4@c@c@@cccc@@c@@@@\le`kefZ1T)Rcc@@cccc@c@ccc@@@kfeifT(Rcc@@cccc@c@ccc@@@kfeifT'Rcc@@cccc@c@ccc@@@kfe]`1 ccX_Zk\]%cc@c@cc@cccccc@@@e`cc@@cccc@c@ccc@@@if] je`^fcDFI=\lcXmV[ifnjjXg#\lcXmV\dXei\jl#cilVef`kZXK:<C<J\klZ\o\%cc@c@cc@cccccc@@@2 ifjilZ%@cc@@cc@c@c@@ccc@4cc@c@cc@cccccc@@@2 ccc@c@@@c@c@@cc@@kZ\eefZ%*\k`chj4@cc@@cc@c@c@@ccc@2 ccc@c@@@c@c@@cc@@#@@@@ccccccc@@cc@@pgfZ%c`kl_jeilk\i1 @@@@ccccccc@@cc@@jkj`o\%_kXg%jfkfe]`XkX;e`^fCSSt@@@@@ccc@@cc@cc@@rSStcc@@ccc@c@cc@@cc@r]4@@@@ccccccc@@cc@@2Y[Ve`^fc4ccc@c@@@c@c@@cc@@1 @@@@@ccc@@cc@cc@@#cc@@ccc@c@cc@@cc@#cc@ccc@@c@cccc@@@j[ifnjjXgVk\^]\[cc@@@cccc@c@c@cc@eilk\i2 \[fZ\[%T-($1Rcc@@@cccc@c@c@cc@4cc@@@cccc@c@c@cc@2 c@@@@@cccc@c@c@c@kgpiZ\[%ccccc@@@cc@ccccc@4cc@@@cccc@c@c@cc@2 @@@c@ccccc@ccc@@@#D:>V<;FD%J<8#c@c@c@@c@@c@cccc@n\e%J<84ccccc@@@cc@ccccc@2T1,(R@c@cc@@@c@@ccccc@4c@@@@@cccc@c@c@c@2T,(1*R@c@cc@@@c@@ccccc@4@@@c@ccccc@ccc@@@1 c@c@c@@c@@c@cccc@#@c@cc@@@c@@ccccc@#@c@@@ccc@@@@@@c@@[ifnjjXgVkgpiZ\[]\[@c@c@@c@c@cccc@@@eilk\i2T(R '#cccccccc@@@@@@@@@V#cccccccc@@@@@@@@@V#cccccccc@@@@@@@@@V#@c@c@@c@c@cccc@@@XkX;kZ\kfigeLkgpi:4@c@c@@c@c@cccc@@@2T1,R@c@c@@c@c@cccc@@@4@c@c@@c@c@cccc@@@2 Tp\bV[\kgpiZe\RTc@cccccc@@c@@cc@@R@c@c@ccc@c@@@@cc@\[fZ\[+-Y%+-\jXY4@c@c@@c@c@cccc@@@2 cc@@c@ccc@c@c@c@@j[Xfc%efja4@c@c@ccc@c@@@@cc@ [X\i%@@cc@@c@c@cc@@cc@4cc@@c@ccc@c@c@c@@1@@cc@@c@c@cc@@cc@jX cc@cc@@@@c@cc@c@@V4^e`[fZe\#i#@@@@@@cccc@c@@@@@e\gf_k`neilk\i1  [X\i% cc@cc@@@@c@cc@c@@V4^e`[fZe\#i#@@@@@@cccc@c@@@@@e\gfe`kfec@cccccc@@c@@cc@@]`eilk\i1 @@@@@@cccc@c@@@@@jkj`o\%_kXg%jfkfe]`kgpiZVjf4c@cccccc@@c@@cc@@1 @@@@@@cccc@c@@@@@#c@@cccccc@@@c@@c@p\bVi\kjXdVk\^]\[ @cc@c@ccc@ccc@@c@[e\ggX%VV8K8;VV2t#VVJ;I8:VV%@ccc@cc@@c@@@@cc@1@c@c@cc@ccc@ccc@@V#VVJ;8@CEN@;VV%@ccc@cc@@c@@@@cc@1ccc@@c@@@@@@ccc@@V#VVPI@KJ@?V9<NVV%@ccc@cc@@c@@@@cc@1@@c@c@cccc@@cc@@@V#VVJ<@B@@:VV%@ccc@cc@@c@@@@cc@1@cc@@@ccc@@c@@c@@V#VVJE@>@CVV%@ccc@cc@@c@@@@cc@1@c@c@@ccccc@@@@c@V#cc@cc@c@@c@@cccc@1@@@c@c@@ccc@c@@@@V#@@@cccc@c@ccccc@@1c@cc@@ccccc@@c@c@Vr4@cc@c@ccc@ccc@@c@jjXg1kg\Zo\ cc@cc@c@@c@@cccc@#@@c@cccc@@@c@@@c@cc@cc@ccc@@c@c@c@1pik1@@c@cc@@@c@c@c@@@e`cc@cc@ccc@@c@c@c@if]TR4VVJ;I8:VV%@ccc@cc@@c@@@@cc@2TR4VVJ;8@CEN@;VV%@ccc@cc@@c@@@@cc@2TR4VVPI@KJ@?V9<NVV%@ccc@cc@@c@@@@cc@2TR4VVJ<@B@@:VV%@ccc@cc@@c@@@@cc@2TR4VVJE@>@CVV%@ccc@cc@@c@@@@cc@2T#j[iXZVk`[\iZVk\^%@ccc@cc@@c@@@@cc@#j[Xfcenf[Vk\^%@ccc@cc@@c@@@@cc@#pifkj`_VY\nVk\^%@ccc@cc@@c@@@@cc@#j[ifnjjXgVk\^%@ccc@cc@@c@@@@cc@#j\`bffZVk\^%@ccc@cc@@c@@@@cc@R4@@c@cc@@@c@c@c@@@\le`kefZ1 cc@cc@c@@c@@cccc@"SS"@@c@cccc@@@c@@@c@jkj`o\%_kXg%jfkfe]`1j\c`]fig%@ccc@cc@@c@@@@cc@e`cc@cc@c@@c@@cccc@if]\le`kefZ1p\bVi\kjXd%@ccc@cc@@c@@@@cc@kfe]` \kXkJcXZfCSSt@@c@cccc@@@c@@@c@r]p\bVi\kjXdVk\^%@ccc@cc@@c@@@@cc@4p\bVi\kjXd%@ccc@cc@@c@@@@cc@2Tccc@c@@@cc@@c@@@@e`kfed\kjpJ[eX ccc@c@@@cc@@c@@@@e`kclX]\;ifccc@c@@@cc@@c@@@@e`\c`]fiG]`cc@c@ccc@@cc@cc@@e`ccc@c@@@cc@@c@@@@if]ccc@c@@@cc@@c@@@@R4j\c`]fig%@ccc@cc@@c@@@@cc@2T  c@@ccc@@@c@@@@cc@#@@c@cccc@@@c@@@c@e`fa%_kXg%jfi`[j`%_kXg%jf]` @@c@cccc@@@c@@@c@i`[kj`c%jfe`c@@ccc@@@c@@@@cc@if]c@@ccc@@@c@@@@cc@R4cc@c@ccc@@cc@cc@@\le`kefZ1 @@c@cccc@@@c@@@c@jkj`o\%_kXg%jfkfe]`1 jd\k`%ji\jnfiY%@ccc@cc@@c@@@@cc@e`@@c@cccc@@@c@@@c@#@@@cccc@c@ccccc@@if]t#XkX;i\jLSSJoJ\dfi_:SS\c^ff>SS"XkX[ggX%@ccc@cc@@c@@@@cc@1joj$\dfi_Z$\c^ff^#XkX;i\jLSSi\jnfi9$\mXi9SS\iXnk]fJ\mXi9SS"XkX[ggX%@ccc@cc@@c@@@@cc@1\mXiY#XkX;i\jLSS\^[<SSk]fjfiZ`DSS"XkX[ggX%@ccc@cc@@c@@@@cc@1\^[\$k]fjfiZ`d#XkX;i\jLSS\dfi_:SS\c^ff>SS"XkX[ggX%@ccc@cc@@c@@@@cc@1\dfi_Z$\c^ff^r4ji\jnfiY%@ccc@cc@@c@@@@cc@ @c@@c@@@@@@cc@c@@Vme\k\^%jf4XkX[ggX%@ccc@cc@@c@@@@cc@1 @ccc@cc@@c@@@@cc@VVk`e`VV]\[1ccc@c@c@@@@@@@@c@jjXcZ #t@@cc@@@@@c@c@ccc@rSSt@@cc@cc@@@c@cccc@r]#g`q#t@@cc@@@@@c@c@ccc@rSSt@@cc@cc@@@c@cccc@r]\m`_ZiXV\bXd%c`kl_j eSt@@c@cc@c@cc@@ccc@r]\k`in%c@c@c@ccc@@c@cc@@2 @@c@cc@c@cc@@ccc@[e\ggX%VV9=J<@B@@:VV1@@c@cc@c@cc@@ccc@e`c@c@@c@c@@c@c@@c@V]` @c@@@@c@c@cc@ccc@e`fa%c@@@@cccc@ccc@cc@V4@@c@cc@c@cc@@ccc@1c@@@c@@@c@cc@c@c@e`@c@@ccc@@cccc@cc@V]`1 jd\k`%@@@c@@@c@cc@@@c@@e` #@c@@@@c@c@cc@ccc@#c@@@c@@@c@cc@c@c@if]1c@c@c@ccc@@c@cc@@jX #cc@cc@@@@c@cc@c@@V4^e`[fZe\#X# kok%bffY\ZX]V\`bffZ#cc@@@@@@@@cc@@@c@e`fa%_kXg%jfe\gf_k`n t@c@ccc@@@c@@cc@c@r4tccccccc@@@@@@@c@@r][e\ggX%Tc@@@c@@@c@cc@c@c@R@@@c@@@c@cc@@@c@@TR4Tc@@@c@@@c@cc@c@c@R@@@c@@@c@cc@@@c@@1@@@c@@@c@cc@@@c@@e`kfec@@@c@@@c@cc@c@c@]` g`ikj%T-Rccc@cc@c@@cc@ccc@4@c@ccc@@@c@@cc@c@2 g`ikj%T,Rccc@cc@c@@cc@ccc@4ccccccc@@@@@@@c@@2 g`ikj%T'Rccc@cc@c@@cc@ccc@4c@@@c@@@c@cc@c@c@1.45 ccc@cc@c@@cc@ccc@e\c]` kSk`cgj% g`ikj%VV\`bffZVV4ccc@cc@c@@cc@ccc@1@c@@@@c@c@cc@ccc@e`VV\`bffZVVif]tr4@@@c@@@c@cc@@@c@@2 j\e`ck`cgj%@c@@@@c@c@cc@ccc@4@c@@@@c@c@cc@ccc@2 @c@ccc@@@c@@cc@c@e`@cc@@ccccccc@c@c@if] @cc@@ccccccc@c@c@ikje`fa%@c@@@c@@c@@@@c@@@V4@c@@@@c@c@cc@ccc@2 @@@c@@@cc@c@@c@@@V4bfVkj`o\#cc@@@@@@@@cc@@@c@ji`[\bXd%jf2 @c@@ccc@@cccc@cc@V#@c@c@cc@@cc@@@@@@e`fa%_kXg%jf4cc@@@@@@@@cc@@@c@1@cc@@@ccc@@c@@c@@V44@ccccc@ccc@cc@@@@]`  @c@ccc@@@c@@cc@c@e`@@@@@cccc@@c@c@@@if] @@@@@cccc@@c@c@@@ikje`fa%@c@@@c@@c@@@@c@@@V\k`in%@@@c@@c@@@@ccccc@1@@@c@@c@@@@ccccc@jX #cc@cc@@@@c@cc@c@@V4^e`[fZe\#X# @@ccc@c@@c@ccc@c@#@@@cc@c@cc@ccc@@@e`fa%_kXg%jfe\gf_k`nkok%t@ccccc@ccc@cc@@@@r]4@@ccc@c@@c@ccc@c@1 @c@ccc@@@c@@cc@c@[eXT#@c@c@cc@ccc@ccc@@V#ccc@@c@@@@@@ccc@@V#@@c@c@cccc@@cc@@@V#@cc@@@ccc@@c@@c@@V#@c@c@@ccccc@@@@c@VRe`@ccccc@ccc@cc@@@@]`1 jd\k`%c@cc@ccc@ccc@cc@@e`@c@ccc@@@c@@cc@c@#@ccccc@ccc@cc@@@@if] @@@c@@@cc@c@@c@@@V4bfVkj`o\#@@@cc@c@cc@ccc@@@ji`[\bXd%jf2 VV<C@=@IGVV#@@c@@@ccc@@@@c@@@e`fa%_kXg%jf4@@@cc@c@cc@ccc@@@2 @@@c@@@cc@c@@c@@@V4bfVkj`o\#@@c@@@ccc@@@@c@@@ji`[\bXd%jf2 VVI<JN@I9VV#@c@c@cc@@cc@@@@@@e`fa%_kXg%jf4@@c@@@ccc@@@@c@@@2 @@@c@@@cc@c@@c@@@V4bfVkj`o\#@c@c@cc@@cc@@@@@@ji`[\bXd%jf2 @@cc@@@@@c@c@ccc@#cc@ccc@@@c@@cc@c@e`fa%_kXg%jf4@c@c@cc@@cc@@@@@@2 @@@c@@@cc@c@@c@@@V4bfVkj`o\#cc@ccc@@@c@@cc@c@ji`[\bXd%jf2 @@cc@@@@@c@c@ccc@#@@cc@cc@@@c@cccc@e`fa%_kXg%jf4cc@ccc@@@c@@cc@c@1VVI<JN@I9VV[eXVV<C@=@IGVV]` c@cc@@ccccc@@c@c@Vk\^%c@cc@ccc@ccc@cc@@4VVI<JN@I9VV2 @@@c@c@@ccc@c@@@@Vk\^%c@cc@ccc@ccc@cc@@4VV<C@=@IGVV1 T#@c@c@cc@ccc@ccc@@V#ccc@@c@@@@@@ccc@@V#@@c@c@cccc@@cc@@@V#@cc@@@ccc@@c@@c@@V#@c@c@@ccccc@@@@c@VRe`cc@c@@@@@cc@@@c@@if] cc@c@@@@@cc@@@c@@k\^%c@cc@ccc@ccc@cc@@peX]`1VV8K8;VVe`c@cc@ccc@ccc@cc@@if]1VV8K8;VV]`1 c@@@@c@@cc@@c@cc@j\c`]V\k`in]\[ j\c`]V\k`in%c@ccc@@@c@@cc@cc@1 c@ccc@@@c@@cc@cc@VVk`e`VV]\[1@@cccc@c@@c@cc@c@jjXcZ c@@@ccc@cc@@@@cc@2 @@cccc@c@@c@cc@c@2 ccc@c@c@@@@@@@@c@1 @cccc@@@@@@cccc@@VVk`e`VV]\[1@@@@ccc@@@@ccc@@@jjXcZ #@@@@cc@@@@c@@ccc@4VjX#cc@@@c@@cc@c@@c@@4Vg`q#@@cc@c@c@@@@c@@c@4pk`Z#c@@@cc@@cc@@@ccc@4ef`^\i# c@@@@cc@@@@@@c@c@@@@cc@ccc@@@@@@c@"c@@@@cc@@@@@@c@c@4pikelfZ#c@ccc@@@cc@cc@cc@4ZXd#cccc@cccccccccc@@4g`kXdif]%tVjXr1GJ@eS tVg`qrtpk`Zr1pk`:eStef`^\ir1ef`^\IeStpikelfZr1pikelf:eStZXdr1jj\i[[8:8DeStg`r1jj\i[[8G@eilk\i2  tc@@@@cc@@@@@@c@c@rt@@cc@c@c@@@@c@@c@r][e\ggX%VVE@@K8:@CVV2 cccc@cccccccccc@@@@cc@c@@@@@@@@@@@4 #@@@@cc@@@@c@@ccc@#cc@@@c@@cc@c@@c@@#@@cc@c@c@@@@c@@c@#c@@@cc@@cc@@@ccc@#c@@@@cc@@@@@@c@c@2   \[fek\^%[`llo)('#%%ccX[e`]%\ie`fa%14c@ccc@@@cc@cc@cc@ T'R @c@@@c@@c@@@@c@@@Vk`cgj%T(R 4g`k`cgj%ko\k% \ZXik&`^Z$e[Z&dfZ%\iXc][lfcZ%nnn&&1jgkk_k\^%jkj\lh\i4cccc@cccccccccc@@ #Tc@cc@@ccc@@c@@cc@RTc@cc@@ccc@@c@@cc@Rccc@c@cc@@cccc@c@#TcXkjfgRccc@c@cc@@cccc@c@#Tpk`ZRccc@c@cc@@cccc@c@#Tef`^\iRccc@c@cc@@cccc@c@#TpikelfZRccc@c@cc@@cccc@c@eilk\i2Tc@@@@c@c@c@@@cc@@VR efja% @@ccccc@c@cc@@@@@4ji\[X\_#tc@c@@cc@c@ccccc@@r&fd\[&k\^[`n&f`%f]e`g`&&1jgkk_]k\^%jkj\lh\i4ccc@c@cc@@cccc@c@2t#@@c@@c@c@cc@cc@c@V1@@c@@@c@c@cccc@c@V#e`^`if$\dXj1@@c@c@cc@@c@@ccc@V#jifZ1c@c@@@@c@@c@@c@@@V#pkgd\1@@@@@c@@c@@ccc@c@V#'61cc@c@@ccccccc@c@@V#-((4m2\dfi_:\c^ff>#+)4m2[eXi928 kfE#-((4m2dl`dfi_:1cc@ccc@c@@c@c@@@@V#&f`%f]e`g`&&1jgkk_1i\i\]\i#efja&ef`kXZ`cggX1\gpk$ke\kefZ#-%'4h2e\#.%'4h2JL$e\#/%'4h2i]#0%'4h2I=$i]#`m1@@@@cc@@cccc@@@c@V#!&!1ccc@@ccc@@ccc@@@@V#f`%f]e`g`1@cc@c@c@c@cccccc@Vr4@@ccccc@c@cc@@@@@2ejX4c@cc@@ccc@@c@@cc@1 c@c@@cc@c@ccccc@@@@cc@c@@@@@@@@@@@]\[1 @c@c@cc@@@@c@@c@@]\[  @@@@@@cc@@cccccc@cc@@cccc@cc@@c@@@4@@cc@@@@@c@c@ccc@ i\ggl%T,(1Rc@@@cc@@@@@@@@@c@eilk\i2 kj\^`[o\_%  \[fZe\%ccc@cc@@ccc@@@@@@-,)X_j%Y`c_jX_4c@@@cc@@@@@@@@@c@1 ccc@cc@@ccc@@@@@@cc@@cccc@cc@@c@@@]\[ccccc@cc@cc@c@@@@eilk\i2  g`ikj%T(R @c@@@c@@c@@@@c@@@Vk`cgj% \[fZ\[%  [X\i%ii\[kj%@@cc@c@@@cc@c@c@@" [X\i%klf[kj%@@cc@c@@@cc@c@c@@4ccccc@cc@cc@c@@@@2 #<G@G%jj\ZfigYlj4ii\[kj#<G@G%jj\ZfigYlj4klf[kj#<G@G%jj\ZfigYlj4e`[kj#@@@c@@@cc@c@@c@@@V4cc\_j#[`llk\^kZl[figjZZ`dne\gfG%jj\ZfigYlj4@@cc@c@@@cc@c@c@@1 @@@@@@cc@@cccccc@]\[\lcXm%@ccc@ccc@@ccc@@c@eilk\i2 @@c@@@c@@@@cc@c@@#@ccc@ccc@@ccc@@c@#@ccc@c@@cccccc@c@@@@c@@@@c@@ccc@c@2 @@c@@@@@@@ccccc@@i\]]lYV\[fZ`elV\kX\iZ%j\gpkZ4@ccc@ccc@@ccc@@c@2\lcXm%jke\kefZ%@@c@@@c@@@@cc@c@@4@@c@@@@@@@ccccc@@2 @@c@@@c@@@@cc@c@@#cccccccc@@@@@@@@@V#@ccc@c@@cccccc@c@@@@c@@@@c@@ccc@c@2  '^efclVZ%j\gpkZi\ke`fg%j\gpkZ4@@c@@@c@@@@cc@c@@2*4@ccc@c@@cccccc@c@2No<\dXEi\jLk\>%)*ilZ\j%cc[e`n%j\gpkZ4@@@c@@@@c@@ccc@c@1 @ccc@@ccccc@c@cc@]\[ # i\ggl%c@@@c@c@@@ccc@@@@k\^%@cc@@c@cc@c@cc@c@eilk\i2t#1FE#1@=#1K8#1<9#1?:#1CE#1<J#1PD#1>J#1QE#1IK#1?K#1;@#1OD#1J<#1K@#1LI#1I9#1E@#1E:#1IB#1<;#1L8#18:#1I=#1GA#19>#1JL#1EMr4@cc@@c@cc@c@cc@c@1 c@@@c@c@@@ccc@@@@@@@cc@ccc@@@@@@c@]\[ ''*g\\cj%\d`k1ccc@cc@c@c@c@@c@@]` c@@@c@cc@@@c@@@@@4ccc@cc@c@c@c@@c@@\jcX=eilk\i@@@c@@@cc@c@@c@@@Veilk\i1 i\nfc%T@c@c@@@@@@@@c@c@@VRf]e`%@@@c@@@@@c@c@@@c@e`@cc@@@@ccc@cccc@@V]`1 T@c@c@@@@@@@@c@c@@V#[`gRi\k`Vjj\Zfig%c`kljge`@@@c@@@@@c@c@@@c@if]1 c@@@c@cc@@@c@@@@@]\['1\jc\ @cccc@ccc@cc@@@@@1ccc@cc@c@ccccc@@@]`1cccccccc@@@@@@@@@Vkfej`ccc@cc@c@ccccc@@@]` ccc@@ccc@c@@@ccc@4ccc@cc@c@ccccc@@@jjXg1c@@@@c@c@@cc@cc@@jXef`kg\Zo<kg\Zo\ @@@c@@@cc@c@@c@@@V4cc\_j#\lik^e`ifk`efD\d`kcX\I\cYXj`;$\Ze\i\]\iGgD$k\Jcc\_ji\nfgeli%jj\ZfigYlj1pik1 @cccc@ccc@cc@@@@@]\[eilk\i1kg\Zo\eilk\i1ifii<[elf=kfE\c`=kg\Zo\'44@c@@ccc@c@cc@cc@@eilk\i2 c@c@c@ccc@@c@c@@@p\B\jfc:%^\ie`n2 ^e`ifk`efD\d`kcX\I\cYXj`;#c@c@c@ccc@@c@c@@@o<\lcXMpi\lH%^\ie`n4cc@@c@@@@c@ccc@@@V#@c@@ccc@c@cc@cc@@2 ef`kZ\kfiG\d`K$cX\ISSi\[e\]\;jnf[e`NSSk]fjfiZ`DSS<I8NK=FJ#<E@?:8DVC8:@CVP<B?%^\ie`np\Be\gF%^\ie`n4c@c@c@ccc@@c@c@@@1pik1 ccc@@ccc@c@@@ccc@]\[ cccc@@@cc@c@@@@c@\c`]kiXkj%jf2kok%t@ccc@c@@c@cccc@@@rSSt@@cc@cc@@@c@cccc@r]4cccc@@@cc@c@@@@c@2  @c@@c@@@@@@cc@c@@Vme\k\^%jfe`fa%_kXg%jf4@@cc@cc@@@c@cccc@ cccc@@@@ccccc@cc@\k`in%@@ccc@c@@@c@@ccc@1@@ccc@c@@@c@@ccc@jX cc@cc@@@@c@cc@c@@V4^e`[fZe\#n#@@c@cc@@@c@@c@@c@e\gf_k`n kok%t@ccc@c@@c@cccc@@@r]#@@cc@cc@@@c@cccc@e`fa%_kXg%jf4@@c@cc@@@c@@c@@c@2  @c@@c@@@@@@cc@c@@Vme\k\^%jfe`fa%_kXg%jf4@@cc@cc@@@c@cccc@2ke\dkiXg\;j\Zilfj\IeXdl?jglfi>BI8D@IG]fifkZ\i`;eSj[iX^\ikj\9eS%kZ\afigeSj`_ke`pccl]jj\ZZlj\kXi\gffZcc`n\n\gf_\n[eX#n\`mkj\iX\cZ\_k\mX_cc`n\NeSpeXgdf:BI8D@IGpYe\m`^jke\d\i`lh\i\_keSjXcc\njX#ef`kXdif]e`[\c`Xk\[\mfYX\_k[\n\`m\i\mX_lfpi\k]XkX_k\gf_\NeS444444;E<4444eS%bifnif]b\\ni\gjilf_')pc\kXd`ofiggX]fdld`oXdX\i`lh\ieS\N%^e`cl[\_Zje`\cY`o\c]\YeXZlfp[eX#bifn\kfd\i\Ycc`nj`_k\jilfZ]feS[eX#kZXikefZ\_k^e`e^`ji\k]Xj\\]\ZeXnfccXi\_kf\[lcZe`kfej\f[_kefd&;JLeS''/#)($'''#)(j`_kefd_ZX\if]i\]]f\npiXcXjke\iilZ\_KeS4444444glfi>BI8D@IGpZ`cfgpiXcXj4444eS%ke\defi`me\9)9Xe`j[XX`[\dcX`Zfj[eX# j[X^e`9eS&\c^ff>&J;8e`[e\be`c&i\kk`nk&J;88K<Dje^`XgdXZD<J#je^`XgdXZpXcgj`[eScXk`^`[^e`^XeXd[eX#^e`eeli#^e`klZ\o\\Ze\`i\go\ef$j[eX_kZ\i`[]fjiX\p"(eS%\Ze\`i\go\eSke\cXm`lh\if[c\`][\kXc\iXif#jef`kXZ`elddf:#^e`k\biXDe`\\i^\[jifc\_ZX9eS444444444\Ze\`i\go<ef`kXZl[<4444444eS%\iXnk]fj[\kXc\iif\k`lJ\Z`]]Fk]fjfiZ`D_k`nke\`Z`]fiGeS^e`k\biXdcXk`^`[j^e`_kccXif]ef`jjXGeS%j\`k`c`YXeS^e`mcfjd\cYfig_k`ni\be`_k\m`kX\iZX[eX#k\j[e`de\m`i[$XkX[#jcc`bjcXZ`kpcXeX^efikJeS%pZe\^il]f\je\jeSX_k`nj\e`c[X\[k\\d[eXpcjlf\eXkcld`jjkZ\afig\cg`kcld\^XeXdfkpk`c`Y8eS%c`Xk\[fkef`ke\kkX_k`n#jcc`bjef`kXZ`elddfZcXYi\m[eXe\kk`incXef`kg\Zo<eS%^e`k\biXdeS:)9"9)9e`X`[\dcX`Zfj]fef`kXZ`cggXcXZ`kZXig\_k]f^e`[eXkji\[eLeS%[\i`lh\ikfeklY#[\ii\]\igj` ef`kXdfklX^e`k\biXdeSiXc`d`jifkfgjYl?jdif]kXcgDI:[eX[lfc:\m`kX\i:\Yf[8_k`n\Ze\`i\go<eS%jj\ZZljcXk`^`[if]jcffkeS[eXj\Z`kZXigkj\Y\_k^e`jlj\`k`m`kZX^e`k\biXdcXk`^`[^e`iljX\de`ke\`Z`]fiGeS%\Z`]]Fk]fjfiZ`D[eXJJ:&CDK?eS#j\cg`Ze`ige^`j\[Y\n#_jlid\J#jj\iG[ifN#F<J]f^e`[eXkji\[el\m`je\ko<eS4444444j\`k`c`Y8jcc`bJ[\i`lh\I44444444eS%[\e^`jjXjXj\`kl[i\_kfdif]i\GeS%_ZXfiggX^e`k\biXdeScXk`^`[jpeXgdfZ\_k\mfigd`fkjef`kX[e\ddfZ\i\[`mfig[eX#j\Z`kZXigeSkj\Y[eX#j\`^fcfe_Z\k#j[e\ik^e`k\biXdcXk`^`[kj\kXc\_k_k`n\kX[fkglpXkJeS%ji\[cf_\bXkjp\bfkjef`kX[e\ddfZ\i[eXeSjk_^`je`^e`[`mfig#pciXcl^\i\ZeXdif]i\g^e`k\biXdcXk`^`[efkifg\i[eXbZXiKeS%ke\d^\jjj\e`jlY_ZX\if]^e`^Xjj\d[eXiYke\kj`jefZ\ilje\eS[eXj\m`kX`k`e`^e`k\biXd[\kXi^\ke`\ZeXm[Xfk#ke\dgfc\m\[jj\e`jlYn\e[eXeS#ke\d\^XeXdkZl[fig#j\cXj^e`[lcZe`#jdX\kcXef`kZel]$jjfiZ_k`n\kXifYXccf:eS%ef`kXk\igi\ke`XkX[efgl[\jXY\le\m\i_knfi^[eXef`k`j`lhZXeSi\dfkjlZi\kjf]cc`nkX_kke\kefZ^e`kj\^^ljdX\k^e`k\biXd\_k_k`n\kXifYXccf:eS%j\`i`lhe`[\kXc\iif#bifnke\dgfc\m\[#jk\bZ`keSe\gf\^XeXdfkkjf_&if[e\mY\nilf[eXjef`klcfJNLe\\nk\Yefj`X`cX\9eS%je^`XgdXZ^e`k\biXdif]j\^Xg^e`[eXc\kX\i:eS%\cfjef:eS_ZiX\J\c^ff>[eX_jlid\J#j[8\c^ff>#+8>jX_Zljjcffk^e`jl#\ZeXdif]i\geSe^`XgdXZ\mfigd`[eX\iljX\dfkjZ`ik\d[eXj@GB^e`k\biXdcXk`^`[\qpcXe8eS%ef`kXq`d`kgf\^Xg^e`[eXc[eX#pgfZ[X#^e`k\^iXk[ifnp\beS#ef`kXZfccXk\^[lY^e`[lcZe`#je^`XgdXZ^e`j`ki\m[X[`Xgifk`efd[eX\klZ\o<eS%j\Z`kZXigeSkj\Ypikjl[e`_k`n\e`ce`\iX F<Jef`kXq`d`kgf\e`^e\_ZiX\j[eX#\Ze\`i\go\eSi\jl#ef`kXq`d`kgf\k`jY\n\ilje\fk\Ze\j\ig\e`cefj[eXiY_ZX\\^XeXDeS%jifii\F<JeScXZ`e_Z\kif]jk`[lX\k`jiXcl^\idif]i\G%d\_k\mcfj\ifkef`kZX^e`bXk[eXj\ljj`eS^e`p]`ke\[`#j\k`jY\nilf]f\ZeXdif]i\g[eX_kcX\_\_k\q`d`kgf[eXifk`efDeS%j[eXiYccXif]j\m`kZ\aYf[eXjcXf^jj\e`jlYilf\m\`_ZXeSfkjc\eeX_ZcXk`^`[ccXjjfiZXj\`^\kXikj^e`k\biXdcXk`^`[\klZ\o\[eXgfc\m\;eS4444444j\`k`c`Y`jefgj\I4444444eS%pk`c`Y`jj\ZZX[eX#ef`kXq`d`kgfeS\e`^e\_ZiX\j#X`[\d`kcld#ef`kX^`mXe#p^\kXikjke\kefZ#\ilkZ\k`_ZiXef`kXdif]e`eS1if]j\Z`kZXigkj\Y\jl[eX#j\Z`mi\j[eXjkZl[figilf]f^e`ef`k`jfg#ke\kefZeSn\e[eXke\iilZif]^e`eeXcgZ`^\kXikj\[`l^fkjZ`kpcXeX\jl[eX\k`jY\nilf]feSef`kXq`d`kgf\_kif]\cY`jefgj\i\Ycc`ni\^XeXD^e`k\biXDcXk`^`;\_K%ef`ke\k\ieS[eXef`k`j`lhZXi\dfkjlZ\m`i[fkj[eXiYilfj\`]`cgd\o\\Ze\`i\go\i\jleS^e`ilje\\c`_n#\Ze\j\ig\e`cefilf^e`ZeX_e\e`\cficXk`mXpXcgcclfp#i\^XeXDeS^e`k\biXDcXk`^`;Xj8%dX\k^e`k\biXd\kXifgifZilfe`fafk[e`dcXZ`kpcXeXeS[eX\m`k`j`lhe`eX_k`ni\^XeXD^e`k\biXDcXk`^`;Z`dXep[X^e`b\\j\iX\NeS444444444\jfgilG44444444444eSeS^e`k\biXDcXk`^`;$BI8D@IG$EF@KG@I:J<;9FA;A4cccc@@@@ccccc@cc@2ef`kXdif]e`VkZXikef:VpiXcXjVjk`]\e\YVpZ`cfGVef`kXdif]e`V[\c`Xk\;V;A4@ccc@c@@c@cccc@@@2'4@@c@cc@@@@cccccc@2TR4VVJ;8VV2TR4VV9=J<@B@@:VV2TR4VVE@@K8:@CVV2TR4VV8K8;VV2 J;8k\\_jbifn%@@cc@@@c@@c@@@cc@4@@@cc@@@c@cc@@@c@2 'FI\89G0`blZaVBpl\M/]Gj+9JX*fXqag`\YggOfoAI(p\bVpYVe\gf%c@cc@@@cccc@cccc@4@@cc@@@c@@c@@@cc@2 c@@cc@c@@c@@ccc@@kZ`[Vdfi]VkelfZZXV\Z`mi\j%[X\igj^4c@cc@@@cccc@cccc@2tdfZ%j`gX\c^ff^1e`Xdf[V\ji\m`el#dfZ%kelfZZX\Z`mi\j^%dX`%0'.'(+$bffY\ZX]j[X'+bffY\ZX]$j[X&0',o&XkX[Xk\d&(m&kfYfi&dfZ%j`gX\c^ff^%nnn&&1jgkk_1cilVki\ZV0',oVke\`cZ#jki\Z&(m&)_klXf&dfZ%j`gX\c^ff^%nnn&&1jgkk_1cilVki\ZV0',oVi\[`mfigV_klX#e\bfk&dfZ%j`gX\c^ff^%)_klXf&&1jgkk_1`ilVe\bfk#_klX&)_klXf&f&dfZ%\c^ff^%jkelfZZX&&1jgkk_1`ilV_klX#*/),(/,**(0*.('*.'.'(1[`Vke\`cZ#dfZ%kelfZZX\Z`mi\j^%dX`%0'.'(+$bffY\ZX]j[X7bffY\ZX]$j[X1c`Xd\Vke\`cZ#eS$$$$$P<B<K8M@IG;E<$$$$$eSa(+fqLZgFi/N@0E),\[MM\B>eSca)go]\YCq(&A(QEZ&Ih(l`<q;&l+hCH0eQgjk>hb]&\aZp/X_m[:mlDOq"`j:NJeSbc,Zgk9;^OFI>X&GGEg^NYcB*m&qoP"9;QA?b`ncgfE\"I_njj/kH)//Q)"\:&0.eS'9kY_gFf]:aM\;8Zp8@89>f8oA'_jK`-h:<Lj&mn\FCELJDh0ni)i]"@Je_e,l]*eSQ>&*aqK0BF0.XNc]<k0eQP-E8';B=i.AZ&hh]goO0)M\')IbEd^QolO_N9]jaEb=eSGB`*e9eJA8kdKQhJChGEjOADaQ/)EDc>i\LFQg,e-a.caHN0?Lhm;ga(?8;Y[G\&eS*O:^9BHZkOYX+Md/HAAgk0JYD"AooJ8)<P9]m&kHfpI(_*>;^,Qig<oY<lp>n?hFeSfmOfDaXqj._<X'9/]Ml[BJjH@9'D-=,jb;pI+l0J;].@ID=hmXanjMfCXHB]q\PoeSE&f@Jide-[h`dA*"Ej;=qNob:]LBC:O9>NCeE+pO)QLP<IQQL;H^9BH<qF[oNH;"eSe'L`*fF*kCd^JPie[j_eq@gc*"j]BH;Z+G@'-G9+]9Ae^IOJ&8qoDEbd0LkDXI*\eSe-"@\'q]KXMGJC\qg-FZ@:DBemPmI'ap@hnh(FQojLDZ,gH<ofX0fmjQP^Oe,-IleS(8*aqo<BmhF0'lbm],@_@'NJ9,<g8KD_G;H^9Bn'*&:do]nMm9[Bp\\J(gf+>q_`eS9-F>D9bjKgK]ndD-BIY&b"h_E>C][^&(m`@JZG.m'._)O];g9JipMjHQ*^DCn9l.eS<E@d=p*NJ0,9:l-B?A'HQ(=`/?b0Z8:.Q-Y-KiKi*]>.hALBJEqGYfZX>'G;.,ajeScI_Q\:;-\G=<b+LZj;H^9BHHZma9YkK&?\Gm\&>FlQZ>H^=*XM9.\'Caj&=*_l)deS+>^FA.pJ)8Dk&oH/D+._l)m*gE<QXdi0aAa9o=->P`Q)_IqK+C'G@B:e<Q9<lhpJeSYZ=n\q(ND<)@m?e8A*[)&mj/)\(+cp]l/mK9n\D[NfjDI'd/c'Pfg[,a,=lmilJFeSl/bbfnMC=Q/MJph:AC>J\Q@IN"pfa?JD8X*&<g99nOo;>[b+ajick8;'H).,XM`?eSlqJg<k+aia]a+oQ;@&LmMpl:mmHJL.g+MB^aXhd"F8qHedN8KYd:'e(*a^-9nH/@eSX)G*fN/>Y@=E*k.n&nhD*dG*q^da*"Pq0AKB:qi?ZQ<;8<^^:<889D^8;+GP?M[0eSn=j,)8<@:0I"KdJ<`_,+\fHB;:m(<?ei&jL@B..<p,MnEQ,XDNN\mj-K@iN_DEY"eSA(?M+8?0^^k<f9PD_kaF*lJ^qHA>Me/Yqbf]Aj`i^oONbdI_q:8aa[l=/QPJM]EleSiA"B&Xmf?_=FfKLK:DAOXi&<q:kND`L";/pO?l:;'Po;)akQc'ojNM(EO8[,L)8neS<J)gXMd]:dQ/.<,@miFOXQdgF@(-8)<d/<H&>lJ(=@'G.9\C;'hY,Y>eKg).;9I?eSB,Q`cEAQ`kkbJL&CP(`-?OC+F]?[Kj:\bbe_B&ld_hYo)0`="I9<e)l`<CPnpjgNeSeGh-Hk=@L,ah&:H89@f88<^8bJ^^n^B9:J88=<H89'n0>`b_hb^9E8;89@^m<@@DeS$$$$$P<B<K8M@IGE@><9$$$$$1p\bV\kXm`ig#,]0'[/\.\Z-.XZ)Z/.\',+ZX0)'*'Y\)'Z),).].1[`Vp\bV\kXm`ig#0'.'(+$bffY\ZX]j[X1[`VkZ\afig#kelfZZXV\Z`mi\j1\gpkr4c@@cc@c@@c@@ccc@@2 @@@@cc@ccc@c@cc@@nfe%\d`k\kX[4@cc@@cc@@@@@@ccc@2 _e`DV`_:Vf?&X`j8\efq\d`k%qkpg4@@@@cc@ccc@c@cc@@2 i`[gd\kk\^%\c`]gd\k4@@cc@cc@@@c@cccc@2\d`k\kX[kifgd`\d`k\kX[dfi]2!kifgd`^e`kkXdif]V[X\igj^dfi]2XkX;kZ\kfigeLkgpi:kifgd`kgpiZ)*e`ndfi]2J<8kifgd`i\_g`:%\df[fkgpi:dfi]2\c`]gd\k#efZ)*e`n#ke\`cZ%dfZ)*e`n#*\`bffZVi\jnfiY#c`kljg#qkpg#[X\igj^#Y`c_jX_#[`ll#\i#jj\ZfigYlj#\d`k#`dn#j\gpkZ#jkj\lh\i#+-\jXY#efja#*\k`chj#c`kl_j#jf#^\ie`nkifgd`2\efE4cccccccc@@@@@@@@@V2\liK4@@@c@@@cc@c@@c@@@V2eS4@c@@@c@@c@@@@c@@@V2XkX[4c@@@@c@c@c@@@cc@@V2\dXe4@c@c@@@@@@@@c@c@@V2 8K8;GG8C8:FCikj4@c@@c@@@@@@cc@c@@V2/$]kl4cc@cc@@@@c@cc@c@@V224c@@@@cccc@ccc@cc@V2t#1r4@c@ccc@@@cccc@@@@V2j\`bffZ4@cc@@@ccc@@c@@c@@V2[`4c@cc@@@ccc@@@c@@@V2cj[Vkjlik[X4ccc@@c@@c@@c@@@c@V2[ifnjjXg4@c@c@@ccccc@@@@c@V2pifkj`_4@@c@c@cccc@@cc@@@V2j[Xfcenf[4ccc@@c@@@@@@ccc@@V2j[iXZ4@c@c@cc@ccc@ccc@@V2bffY\ZX]4@c@@ccc@@cccc@cc@V2i\jlVZ4c@c@@c@c@@c@c@@c@V2;E<4c@@@c@@c@@cc@c@c@V2Xk_%___4cccc@cc@@@@c@c@c@V2jnf[e`N4@cc@@@@@@@c@cc@c@V2[\cYXe<kjXfK4@@c@c@@@@@cc@@cc@V2;IFN;V><I4@cc@cccc@c@@c@@@@V2\dfi_Z4@cc@@@@ccc@cccc@@V2pk`if_klX4@cc@c@c@c@cccccc@V2kg\ZZX4ccc@@ccc@@ccc@@@@V2\^Xl^eXc$kg\ZZX4@@@@cc@@cccc@@@c@V2Xl$_Z$Z\j4cc@ccc@c@@c@c@@@@V2\c`Yfd$Xl$_Z$Z\j4cc@c@@ccccccc@c@@V2kj\[$_Zk\]$Z\j4@@@@@c@@c@@ccc@c@V2\[fd$_Zk\]$Z\j4c@c@@@@c@@c@@c@@@V2\k`j$_Zk\]$Z\j4@@c@c@cc@@c@@ccc@V2ke\^X$i\jl4@@c@@@c@c@cccc@c@V2-*%.*,&`iX]XJ'%'%'%')(&\dfi_: fbZ\>\b`c#CDK?B-*%.*,&k`BY\N\cgg8 +-o2+-e`N2'%'(KEjnf[e`N'%,&Xcc`qfD4@@c@@c@c@cc@cc@c@V2\c`]figV\dXe4@@@c@c@@ccc@c@@@@V2i\jnfiYV\dXe4c@cc@@ccccc@@c@c@V2ke\dlZf[4@@@@@c@@@@ccc@@c@V2pZe\iilZ4ccccc@@c@@cc@c@c@V2\ZeXcXY4@cccccc@ccc@c@c@@V2ke\gjVkelfdX4c@cc@@@c@@@c@@@@@V2gXZV[e\gj4@ccc@c@@c@@c@@@c@V2\d`kV[\kX\iZ4@@@c@c@c@@c@c@cc@V2k`d`CfE4@c@@cc@@c@ccccc@@V2t])%#1r4cc@c@@@ccc@c@@cc@VaaovcpeaTneocpvTacvnaabytearrayuutf-8aaovcpeoTneocpvTmcvnaaaovcpeoTnvocpvTmcvnaadecodeTuutf-8aaovcpeaTneocpvTmcvnaacompileu<string>aexecTMOmemoryviewastripTc Tu aevaluWindows.pyu<module>TaaocpeaTeocpvTacvaaaocpeaTneocpvTacvaaaoccpeaTneocpvTacvaaaovcpeaTneocpvTacva.__parents_main__]laaocpeaTneocpvTacvalaaocpeaTeocpvTacvaacopyarangealenllaaoccpeaTneocpvTacvaumultiprocessing.spawnlu<lambda>u__nuitka_freeze_support.<locals>.<lambda>aspawna_fixup_main_from_pathaargv:lnnasplitTw=utoo many values to unpack (expected 2)aValueErrorapipe_handleaNoneakwdsaintamodulesa__parents_main__a__main__aspawn_maina__doc__a__file__a__spec__aoriginahas_locationa__cached__awinregaosashutilasqlite3ajsonabase64arequestsactypesawmiatimeasubprocessareauuidahashlibagspreadapytzapsutilabrowser_cookie3uwin32com.clientawin32comawin32conatempfileuCryptodome.CipherTaAESaAESawin32cryptTaCryptUnprotectDataaCryptUnprotectDataagspread_formattingTw*adatetimeTadatetimeaaovcpeoTwvocpvTmcvnau @@@@ccc@@@@ccc@@@1VVe`XdVV44VV\dXeVV]` @@@c@@c@@c@@c@@@@jcc\ZV\kX[gl%@@@cc@@@c@cc@@@c@T($cfZ%@cc@c@@@@@@ccc@c@RT@@@@c@ccc@@ccc@@@$nfi%@cc@c@@@@@@ccc@c@Rcc@ccccc@cccccc@@4\lcXm%@cc@c@@@@@@ccc@c@1@@@c@@c@@c@@c@@@@e`@cc@c@@@@@@ccc@c@if] t($ cc@ccccc@cccccc@@e\c"@@@@c@ccc@@ccc@@@r<1t@@@@c@ccc@@ccc@@@r8]\^eXi%@@@cc@@@c@cc@@@c@4@@@c@@c@@c@@c@@@@2("  (j\lcXmVcfZ%@@@cc@@@c@cc@@@c@e\c4@@@@c@ccc@@ccc@@@2TT# T(RVVJ;8VVikj#c@@@@c@cc@@cc@c@@# c@cc@c@@cc@cc@@c@ikj# T'RVVJ;8VVikj#T'R c@@@@cccc@ccc@cc@Vk`cgj%T(R ccccccc@@ccc@c@@@k`cgj% T'RVVJ;8VVikjRR4cc@ccccc@cccccc@@ #t#c@c@ccccc@ccc@@@@1@c@@@c@@cc@cc@c@@#/1c@@@cccccc@@c@@c@#c@ccccc@cccc@c@c@1ko\k#(,00)0'*')''($1cccc@cccc@ccc@@@@r4XkX[#\^Xjj\D[e\j&nm=N;L*(-DA\0=E@p9V=Np`+:G]Kf`ao=8810,.-.*(0/-kfY&^if%dXi^\c\k%`gX&&1jgkk_]kjfg%jkj\lh\iWWWt T(RVVJ;8VVikjreS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSJ;8,9+=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeStc@@@@c@cc@@cc@c@@r1<D@K'.,=('''LSeSt T'RVVJ;8VVikjr1<@BFF:8-*=('''LSeStT'R c@@@@cccc@ccc@cc@Vk`cgj%T(R ccccccc@@ccc@c@@@k`cgj% T'RVVJ;8VVikjr1;@+-+=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSE@K>E?K0*()lSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSWWW]4c@ccccc@cccc@c@c@$4c@cc@c@@cc@cc@@c@1\jc\T'RVVE@@K8:@CVV4c@cc@c@@cc@cc@@c@1VVE@@K8:@CVV]`1VVJ;8VV]` g`q%t@@cc@@@@@c@c@ccc@rSSt@@cc@cc@@@c@cccc@r]\mfd\i%jf2 t@@cc@@@@@c@c@ccc@rSSt@@cc@cc@@@c@cccc@r]\\ikdi%c`kl_j2 \jfcZ%@c@c@c@ccc@@ccc@@2 cc@@@@@c@@ccc@c@@4j\c`]#cc@@@@cccccc@c@@@4XkX[#@cc@@@c@@@cc@c@@@kjfg%jkj\lh\i2t@c@c@c@ccc@@ccc@@1@@@@@c@@@@ccc@@c@Vr4cc@@@@@c@@ccc@c@@2t#c@c@ccccc@ccc@@@@1@c@@@c@@cc@cc@c@@#c@ccccc@cccc@c@c@1ef`kgXZ#)1c@@@cccccc@@c@@c@#(,00)0'*')''($1cccc@cccc@ccc@@@@r4cc@@@@cccccc@c@@@2ke\dlZf;[e\j&nm=N;L*(-DA\0=E@p9V=Np`+:G]Kf`ao=8810,.-.*(0/-kfY&^if%dXi^\c\k%`gX&&1jgkk_]4@cc@@@c@@@cc@c@@@2 Yi#g`q%t@@cc@@@@@c@c@ccc@rSSt@@cc@cc@@@c@cccc@r]e\gf4@c@c@c@ccc@@ccc@@2WWW t  VV9=J<@B@@:VVe\cikjr1bffY\ZX=kelfZZ8eS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSXkX;X`[\DcX`ZfJ<.+=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSt @c@c@cc@@@@c@@c@@reSbifnk\E(<+=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSt @@@@@@cc@@cccccc@r1;@N?eSt '#-.,/+'(& \q`Jpifd\D\cY`j`McXkfK%T'R d\kjpJ^e`kXi\gFV)*e`N% @DN%`dnkXfc][elfir1D8IeSt\dXE%T'R i\ccfikef:f\[`MV)*e`N% @DN%`dnr1LG>eSt\dXE%T'R ifjj\ZfiGV)*e`N% @DN%`dnr1LG:eS,8,=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSt <D8EI<JLme\k\^%jfr1\dXEi\jLeSt <D8EI<KLGD@:me\k\^%jfr1\dXEkjf?eSt @ccc@@ccccc@c@cc@r1\dXEpXcgj`;eSi\jL+-+=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSef`kXdif]e@d\kpJ+:,=('''LSeS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lS'',)lSeSWWW]4c@ccccc@cccc@c@c@  J1D1?[$d$P\d`k]ikj%@cc@@cc@@@@@@ccc@ikj4c@@@@c@cc@@cc@c@@2[`VkX_Z4cccc@cccc@ccc@@@@2[`V[X\i_kV\^Xjj\d4c@@@cccccc@@c@@c@2\[fdV\jiXg4@c@@@c@@cc@cc@c@@2)Menf[biXD4c@c@ccccc@ccc@@@@24i\jlVZ4ccccccc@@ccc@c@@@1 c@@c@@@ccc@cccc@@VVk`e`VV]\[1c@@@ccc@cc@@@@cc@jjXcZ c@@@c@@c@@cc@c@c@V[e\ggX%:HBK%@cccc@@cc@cccccc@ tT'(1Rc@c@@c@c@@c@@cc@@r1fKp^E$tc@cccc@@ccccc@c@@r1efK_eX_K$t@cccc@@c@@@c@c@c@rtcc@cccccc@@cc@@c@r1^e^E$t@cccc@@c@@@c@c@c@rt@c@c@c@@cc@@@c@c@r1p^Ek`d`C$t@cccc@@c@@@c@c@c@rt@c@c@@@@@@@@@ccc@r1l`K`_:^eK$t@cccc@@c@@@c@c@c@rtcc@c@@@@c@@cc@c@@r1^e^EfMl`K$t@cccc@@c@@@c@c@c@rt@c@@@@cccc@cc@@@@r1;J$t@cccc@@c@@@c@c@c@r1Ke`K$tc@@@c@@cccc@cccc@r1`_K^eiK$t@@@ccccccc@@@@c@@r1:HBKV;@$t@c@@@cc@cc@c@@c@@r1:HBKeK][e\ggX%:HBK%@cccc@@cc@cccccc@2T@@@c@c@c@@c@c@cc@VR efja%ccc@@cccccc@@c@@@4c@c@@c@c@@c@@cc@@'4cc@cccccc@@cc@@c@1kg\Zo\ ''(& TkelfdXV[cf_j\i_kRT'RTc@@@@c@c@c@@@cc@@VRT\cZpZke\dpXgj[XR efja%ccc@@cccccc@@c@@@kXfc]kXdif]%t])%1r4cc@cccccc@@cc@@c@1pik  @c@c@c@@cc@@@c@c@ke`kXdif]%@c@ccc@@@cccc@@@@V4@c@c@c@@cc@@@c@c@1\jc\  @c@c@c@@cc@@@c@c@kXfc]kXdif]%cc@c@@@ccc@c@@cc@V4@c@c@c@@cc@@@c@c@1@c@c@c@@cc@@@c@c@e`%]` Tccc@@c@@c@@c@@@c@VR efja%ccc@@cccccc@@c@@@ikj4@c@c@c@@cc@@@c@c@1\jc\@c@@cc@@c@ccccc@@V4@c@c@c@@cc@@@c@c@1($44Tccc@@c@@c@@c@@@c@VR efja%ccc@@cccccc@@c@@@]` %##\ZXcg\i% @c@c@@@@@@@@@ccc@kXdif]%@c@ccc@@@cccc@@@@V4@c@c@@@@@@@@@ccc@2 Tc@cc@@@c@@@c@@@@@VR efja%ccc@@cccccc@@c@@@ke`4@c@c@@@@@@@@@ccc@2T@ccc@c@@c@@c@@@c@VR efja%ccc@@cccccc@@c@@@4cc@c@@@@c@@cc@c@@2T@cccccc@ccc@c@c@@VR efja%ccc@@cccccc@@c@@@4@c@@@@cccc@cc@@@@2Tccccc@@c@@cc@c@c@VR efja%ccc@@cccccc@@c@@@4@cccc@@c@@@c@c@c@2Tc@cc@@@ccc@@@c@@@VR efja%ccc@@cccccc@@c@@@4@@@ccccccc@@@@c@@2T@c@c@@@@@@@@c@c@@VR efja%ccc@@cccccc@@c@@@4@c@@@cc@cc@c@@c@@_K^e_B4c@cccc@@ccccc@c@@1kg\Zo\t@@@cccc@c@@@cc@@@r$t@@c@ccc@@ccccccc@r]4c@cccc@@ccccc@c@@[\`]`i\MVfE4@@@cccc@c@@@cc@@@1\jc\_e`DZO4@@@cccc@c@@@cc@@@1T[\`]`i\mVj`RT'Rcc@c@cc@@c@cc@cc@]`T^e`ikjVpXcgj`[RT'Rcc@c@cc@@c@cc@cc@4@@c@ccc@@ccccccc@2Tc@@@@c@c@c@@@cc@@VRT[iXZVk`[\iZVdgRTj[f_k\dVke\dpXgVccXR efja%ccc@@cccccc@@c@@@4cc@c@cc@@c@cc@cc@1pik<@;4c@@@c@@cccc@cccc@1\jc\<M@C4c@@@c@@cccc@cccc@1(44 cccccccc@c@@cc@c@ke`]``_K^eiKI^e_B4cccccccc@c@@cc@c@1kg\Zo\TjlkXkjVkelfZZXR efja%ccc@@cccccc@@c@@@4cccccccc@c@@cc@c@1pik #kZ`[V\`bffZ%@cccc@@cc@cccccc@4j\`bffZ#te\bfk%@cccc@@cc@cccccc@r4e\bfkVjj\ZZX;.;.[\`]`i\mVj`:)^e`ikjVpXcgj`[9.[iXZVk`[\iZVdg9.j[f_k\dVke\dpXgVccX#\d`kV[\kX\iZ#\dXe#efjX\iV\cYXj`[#jlkXkjVkelfZZX#pZe\iilZ#\cZpZke\dpXgj[X#cj[Vkjlik[X#ke\gjVkelfdX#\ZeXcXY#gXZV[e\gj4j[c\`]6&tccc@cc@@cc@@cccc@r&'%/(m&dfZ%bffY\ZX]%_gXi^&&1jgkk_]k\^%jkj\lh\i4ccc@@cccccc@@c@@@2Tc@cc@@@ccc@@@c@@@VRcccc@@cc@cc@@@@@@4ccc@cc@@cc@@cccc@1Tc@@@@c@c@c@@@cc@@VR efja%ccc@@cccccc@@cc@@e`cccc@@cc@cc@@@@@@if] t  Tc@@@@c@c@c@@@cc@@VR efja%ccc@@cccccc@@cc@@e\cikjr1:HBKJ^eK][e\ggX%:HBK%@cccc@@cc@cccccc@2 :HBK][e\ggX%:HBK%@cccc@@cc@cccccc@2 #kZ`[V\`bffZ%@cccc@@cc@cccccc@4j\`bffZ#te\bfk%@cccc@@cc@cccccc@r4e\bfkVjj\ZZX[`VkelfZZX4j[c\`]6jkelfZZX[X&\d&'%/(m&dfZ%bffY\ZX]%_gXi^&&1jgkk_]k\^%jkj\lh\i4ccc@@cccccc@@cc@@1 @cccc@@cc@cccccc@ZhbKf]e@k\>]\[ c@@@c@@c@@cc@c@c@V[e\ggX%D9%@c@@@cc@c@@@c@cc@2 c@@@c@@c@@cc@c@c@V[e\ggX%:HBKVD9%@c@@@cc@c@@@c@cc@ D9Z^e_B][e\ggX%:HBKVD9%@c@@@cc@c@@@c@cc@1\jc\ tT'(1Rc@@@cc@c@c@@cc@@@r1fKp^E$tc@@@@@@cc@@ccccc@rt c@c@c@@@@c@@cccc@ikjr1^e^E$tc@@@@@@cc@@ccccc@rtccc@@@ccc@c@@@@@@r1k`d`C$tc@@@@@@cc@@ccccc@rt@@cccc@@@@cc@c@@@r1l`K`_:^eK$tc@@@@@@cc@@ccccc@rt@c@@@@@@c@@@@ccc@r1;J$tc@@@@@@cc@@ccccc@r1Ke`K$tccc@@c@cc@@cc@@c@r1X`>ZlH$t@c@@@c@cccc@@@cc@r1:HBKV;@$t@@@@c@cccc@cc@@@@r1eplH$t @c@c@cc@@c@c@@c@@D9VkfcJVbZ\_:%@c@@@cc@c@@@c@cc@rD91D9`fC$t@c@c@cc@@c@c@@c@@r1D9[@$t@c@@@ccc@c@c@@cc@r1D9eK][e\ggX%:HBKVD9%@c@@@cc@c@@@c@cc@2Tc@cc@@@ccc@@@c@@@VR@c@c@ccc@@cccc@@@4@c@@@c@cccc@@@cc@  ccc@@@ccc@c@@@@@@ke`kXdif]%@c@ccc@@@cccc@@@@V4ccc@@@ccc@c@@@@@@1\jc\  ccc@@@ccc@c@@@@@@kXfc]kXdif]%cc@c@@@ccc@c@@cc@V4ccc@@@ccc@c@@@@@@1ccc@@@ccc@c@@@@@@e`%]` Tccc@@c@@c@@c@@@c@VR@c@c@ccc@@cccc@@@ikj4ccc@@@ccc@c@@@@@@1\jc\@c@@cc@@c@ccccc@@V4ccc@@@ccc@c@@@@@@1($44Tccc@@c@@c@@c@@@c@VR@c@c@ccc@@cccc@@@]`T@@@c@c@c@@c@c@cc@VR@c@c@ccc@@cccc@@@4c@@@cc@c@c@@cc@@@2T@ccc@c@@c@@c@@@c@VR@c@c@ccc@@cccc@@@4c@c@c@@@@c@@cccc@2 %##\ZXcg\i% @@cccc@@@@cc@c@@@kXdif]%@c@ccc@@@cccc@@@@V4@@cccc@@@@cc@c@@@2 Tc@cc@@@c@@@c@@@@@VR@c@c@ccc@@cccc@@@ke`4@@cccc@@@@cc@c@@@2 %##\ZXcg\i% @c@@@@@@c@@@@ccc@kXdif]%@c@ccc@@@cccc@@@@V4@c@@@@@@c@@@@ccc@2 T@cccccc@ccc@c@c@@VR@c@c@ccc@@cccc@@@ke`4@c@@@@@@c@@@@ccc@jj`DbZ\_:4ccc@@c@cc@@cc@@c@1kg\Zo\T\[fZVpikelfZVjj\e`jlYR@c@c@ccc@@cccc@@@4ccc@@c@cc@@cc@@c@1pikTccccc@@c@@cc@c@c@VR@c@c@ccc@@cccc@@@4c@@@@@@cc@@ccccc@1@@@@c@@c@ccc@@@c@e`@c@c@ccc@@cccc@@@if]\le`kefZ2 t@@@@c@cccc@cc@@@@r1eplH$t @c@c@cc@@c@c@@c@@D9VkfcJVbZ\_:%@c@@@cc@c@@@c@cc@rD91D9`fC$D9[@$t@c@@@ccc@c@c@@cc@r1D9\dXE][e\ggX%D9%@c@@@cc@c@@@c@cc@1kg\Zo\Tc@@@@c@c@c@@@cc@@VRTjkelfZZXV[XV[\enfR efja%cccc@@@@@@cc@@@@@4@@@@c@@c@ccc@@@c@1pik #kZ`[V\`bffZ%@c@@@cc@c@@@c@cc@4j\`bffZ#te\bfk%@c@@@cc@c@@@c@cc@r4e\bfkVjj\ZZX;.cj[Vkjlik[X#\d`kV[\kX\iZ#gXZV[e\gj#ke\gjVkelfdX#\[fZVpikelfZVjj\e`jlY#pZe\iilZ#\ZeXcXY#jlkXkjVkelfZZX9.jkelfZZXV[XVke\`cZ#;.cj[Vkjlik[X#\d`kV[\kX\iZ#gXZV[e\gj#ke\gjVkelfdX#\[fZVpikelfZVjj\e`jlY#pZe\iilZ#\ZeXcXY#jlkXkjVkelfZZX9.jkelfZZXV[XV[\enf4j[c\`]6t@c@c@cc@@c@c@@c@@r&'%/(m&dfZ%bffY\ZX]%_gXi^&&1jgkk_]k\^%jkj\lh\i4cccc@@@@@@cc@@@@@$4@@@@c@cccc@cc@@@@1\jc\e`d[84@@@@c@cccc@cc@@@@1@@@@cc@c@ccc@@@c@e`E@D;8]`Tj\cfiV[\kk`di\gRccc@@@ccc@@@@c@@@4@@@@cc@c@ccc@@@c@2Tc@cc@@@ccc@@@c@@@VRccc@@@ccc@@@@c@@@4@c@c@cc@@c@c@@c@@2T@c@c@@@@@@@@c@c@@VRccc@@@ccc@@@@c@@@4@c@@@ccc@c@c@@cc@1@c@@@@ccc@ccccc@@e`ccc@@@ccc@@@@c@@@if]1cccccccc@@@@@@@@@Vkfej`@c@@@@ccc@ccccc@@]` D9[e\ggX%D9%@c@@@cc@c@@@c@cc@2 :HBK:D9[e\ggX%:HBKVD9%@c@@@cc@c@@@c@cc@2 D9V[`Vk\>%@c@@@cc@c@@@c@cc@4@c@@@@ccc@ccccc@@1 @c@@@cc@c@@@c@cc@D9Ve@VbKVk\>]\[@@cccccc@@@@ccc@@eilk\i2Tk`d`CkelfZZ8[XRT[XfcpXgR@@cc@@cc@@ccc@cc@4@@cccccc@@@@ccc@@2 @c@ccc@c@cc@c@@c@j[Xfc%efja4@@cc@@cc@@ccc@cc@2T(R (#2 k`cgj%ko\k%c@ccccc@cc@cc@c@@4@c@ccc@c@cc@c@@c@2 #kZ`[V\`bffZ%@c@@@@@@ccccc@@c@4j\`bffZ#t#(1nj\jjaVV#1kVe`gjVV#belik1YVe`gjVV#1iVe`gjVV#cc@@@c@cc@ccc@c@@1[`YVV#1[jc#@c@@@@cc@@@@cc@@@1kj\fqXa#c@cc@@@c@@@cc@c@@1^jk[VY]#1ijZVV#1ep[VV#1`j_VV#^[_jlY1l/l)n01\m)f`m1jVV#1m\iVV#KE<CC<:O<1^ZZVV#(1ig[#'%'%%'%)%^bgVj[eXiY1G9%..,0(1j_VV#-1h\iVV#(1XVV#[`l%@c@@@@@@ccccc@@c@1i\jlVVr4XkX[#tcc@@@c@cc@ccc@c@@1[`Vjj\e`jlYr4jdXiXg#&jk`d`c&kelfZZX[X&jj\e`jlY&dfZ%bffY\ZX]%jj\e`jlY&&1jgkk_kjfg%jkj\lh\i4c@ccccc@cc@cc@c@@2 >JK;Vk\>%@c@@@@@@ccccc@@c@4@c@@@@cc@@@@cc@@@#c@cc@@@c@@@cc@c@@1 cc@@@c@cc@ccc@c@@#@c@@@@@@ccccc@@c@D9VkfcJVbZ\_:]\[@cc@c@ccc@@@cc@c@#@c@@c@c@@ccccc@@@eilk\i2T'R k`cgj%T(R 4\lcXmkj\fqXa4\dXek`cgj%c@cccccc@c@cc@c@@4@cc@c@ccc@@@cc@c@2T'R k`cgj%T(R 4\lcXm^jk[VY]4\dXek`cgj%c@cccccc@c@cc@c@@4@c@@c@c@@ccccc@@@2ko\k%ccc@ccc@@ccccccc@4c@cccccc@c@cc@c@@2 kZ`[V\`bffZ%cccc@c@@@@cc@c@@@4j\`bffZ#&dfZ%bffY\ZX]%Z`jXYd&&1jgkk_k\^%jkj\lh\i4ccc@ccc@@ccccccc@1 cccc@c@@@@cc@c@@@>JK;Vk\>]\[eilk\i1kg\Zo\@c@ccc@@@cccc@cc@eilk\i @@cc@cc@@@c@c@@c@[e\ggX%@c@ccc@@@cccc@cc@1@cc@cc@@c@ccc@@@@e`@@cc@cc@@@c@c@@c@if]TR4@c@ccc@@@cccc@cc@2Tc@@@@c@c@c@@@cc@@VR efja%c@@@@c@c@@@ccccc@4@cc@cc@@c@ccc@@@@1pik #kZ`[V\`bffZ%@c@cccccc@ccc@@@@4j\`bffZ#t#e\bfk%@c@cccccc@ccc@@@@1e\bfkVjj\ZZX#j\cfiV[\kk`di\g#\^XgV\kX\iZVifV[[XVeXZ#jlkXkjVpk`c`Y`^`c\V^e`iX_j#[`#\dXe1j[c\`]r4jdXiXg#j\jj\e`jlY&\d&'%/(m&dfZ%bffY\ZX]%_gXi^&&1jgkk_k\^%jkj\lh\i4c@@@@c@c@@@ccccc@1 @c@cccccc@ccc@@@@D9V[`Vk\>]\[ccc@c@@c@c@c@@c@@eilk\icccccccc@@@@@@@@@V4ccc@c@@c@c@c@@c@@1kg\Zo\ T'R k`cgj%T(R 1e\bfkVjj\ZZXr#TR#^`]ef:kZ\eef:D:j[8Rk`cgj%ko\k% #t#*0*1_k[`n$kifgn\`m#@@c@@c@c@cc@cc@c@V1@@c@@@c@c@cccc@c@V#(1jkj\lh\i$\ilZ\je`$\[Xi^gl#(61i\jl$_Zk\]$Z\j#\efe1@@c@c@cc@@c@@ccc@V#\kX^`mXe1c@c@@@@c@@c@@c@@@V#@@@@@c@@@@ccc@@c@V1@@@@@c@@c@@ccc@c@V#)%(%+(1ef`ji\m$dif]kXcg$Xl$_Z$Z\j#jnf[e`N1dif]kXcg$Xl$_Z$Z\j#1c\[fd$Xl$_Z$Z\j#'61cc@c@@ccccccc@c@@V#0'(%00'-%'%')(4m2\dfi_:\c^ff>#0'(%00'-%'%')(4m2dl`dfi_:#'%'%'%/4m2[eXi98VkfE1kj`c$ef`ji\m$ccl]$Xl$_Z$Z\j#')(4m2\dfi_:\c^ff>#')(4m2dl`dfi_:#/4m2[eXi98VkfE1cc@ccc@c@@c@c@@@@V#biX[1\d\_Zj$ifcfZ$ji\]\ig$_Z$Z\j#)1ig[#,%'4h2e\#-%'4h2JL$e\#.%'4h2i]#/%'4h2I=$i]#0%'4h2`m#EM$`m1@@@@cc@@cccc@@@c@V#.%'4h2*Y4m2\^eX_Zo\$[\e^`j&ef`kXZ`cggX#/%'4h2!&!#^egX&\^Xd`#gY\n&\^Xd`#]`mX&\^Xd`#0%'4h2cdo&ef`kXZ`cggX#cdo"cdk_o&ef`kXZ`cggX#cdk_&ko\k1ccc@@ccc@@ccc@@@@V#dfZ%bffY\ZX]%jj\e`jlY1@cc@c@c@c@cccccc@Vr4ji\[X\_#kZ`[V\`bffZ%cc@@cccc@cc@cc@@@4j\`bffZ#&ef`kXdif]e`&j^e`kk\jVkelfZZX&i\^XeXd&j[X&dfZ%bffY\ZX]%jj\e`jlY&&1jgkk_k\^%jkj\lh\i4ccc@c@@c@c@c@@c@@1pik1 cc@@cccc@cc@cc@@@jj\e`jl9e\bfK]\[ c@cc@cc@@@@@@@@@@[e\ggX%VVJ;8VV2 J;8%@@c@@ccc@@@@@ccc@e`fa%@c@@@c@@c@@@@c@@@V4c@cc@cc@@@@@@@@@@2 tcc@c@c@c@c@ccc@c@r][e\ggX%J;8%@@c@@ccc@@@@@ccc@2 eStc@@cc@@@c@c@@@c@@r][e\ggX%J;8%@@c@@ccc@@@@@ccc@2 eSt@@cc@c@c@@c@@c@c@r][e\ggX%J;8%@@c@@ccc@@@@@ccc@2 :HBKVD9%@@c@@ccc@@@@@ccc@e`fa%@c@@@c@@c@@@@c@@@V4@@cc@c@c@@c@@c@c@2 D9%@@c@@ccc@@@@@ccc@e`fa%@c@@@c@@c@@@@c@@@V4c@@cc@@@c@c@@@c@@2 :HBK%@@c@@ccc@@@@@ccc@e`fa%@c@@@c@@c@@@@c@@@V4cc@c@c@c@c@ccc@c@ D9Ve@VbKVk\>%@@c@@ccc@@@@@ccc@2 ZhbKf]e@k\>%@@c@@ccc@@@@@ccc@1cccccccc@@@@@@@@@V4e\bfk%@@c@@ccc@@@@@ccc@]`Tc@c@@c@c@@c@c@@c@VRcc@@@@@cc@@ccc@c@4[`l%@@c@@ccc@@@@@ccc@2 jj\e`jl9e\bfK%@@c@@ccc@@@@@ccc@4e\bfk%@@c@@ccc@@@@@ccc@2cc@@@@@cc@@ccc@c@4kZ`[V\`bffZ%@@c@@ccc@@@@@ccc@c@@c@c@c@c@@cccc@4T@ccc@ccc@@c@@@c@@Rcc@@@@@cc@@ccc@c@2 4k`cgj%@c@@@@@c@cc@c@c@@4c@@c@c@c@c@@cccc@#@ccc@ccc@@c@@@c@@1@@@@@cc@@c@cc@@c@e`@c@@@@@c@cc@c@c@@if]tr4cc@@@@@cc@@ccc@c@2 c@@@@cccc@ccc@cc@Vk`cgj%kelfZZXV\`bffZ%@@c@@ccc@@@@@ccc@4@@@@@cc@@c@cc@@c@2 @@@cc@ccc@@@ccc@@[e\ggX%VVJ;8VV2@@@cc@ccc@@@ccc@@4kelfZZXV\`bffZ%@@c@@ccc@@@@@ccc@2TR4:HBKVD9%@@c@@ccc@@@@@ccc@2TR4D9%@@c@@ccc@@@@@ccc@2TR4:HBK%@@c@@ccc@@@@@ccc@2TR4J;8%@@c@@ccc@@@@@ccc@1 @@@cc@ccc@@@ccc@@#@@c@@ccc@@@@@ccc@VVk`e`VV]\[1ccc@ccc@cc@c@@cc@jjXcZ VVikjVV%c@ccc@c@@@c@@c@@@eilk\i1 c@ccc@c@@@c@@c@@@VVig\iVV]\[t[\`]`[fdV\kX[%ccc@c@c@@@ccc@cc@rkSti\Ydle%ccc@c@c@@@ccc@cc@rkStiX\p%ccc@c@c@@@ccc@cc@rkSt_kefd%ccc@c@c@@@ccc@cc@rkSt\dXe%ccc@c@c@@@ccc@cc@r]eilk\i1 ccc@c@c@@@ccc@cc@VVikjVV]\[ccc@@@cccc@ccccc@4[\`]`[fdV\kX[%c@@c@c@c@@cc@@cc@2@@@@@@cc@@@ccccc@4i\Ydle%c@@c@c@c@@cc@@cc@2@ccc@cc@@ccc@c@c@4iX\p%c@@c@c@c@@cc@@cc@2@cccc@@c@ccccccc@4_kefd%c@@c@c@c@@cc@@cc@2@c@c@c@@@@@@ccc@@4\dXe%c@@c@c@c@@cc@@cc@1 #ccc@@@cccc@ccccc@#@@@@@@cc@@@ccccc@#@ccc@cc@@ccc@c@c@#@cccc@@c@ccccccc@#@c@c@c@@@@@@ccc@@#c@@c@c@c@@cc@@cc@VVk`e`VV]\[1[iX:k`[\i:jjXcZ VVikjVV%ccc@cc@cccc@@cc@@eilk\i1 ccc@cc@cccc@@cc@@VVig\iVV]\[t_kXgVk\^iXk%@@@ccccc@c@@c@@@@rkStcilVYXk%@@@ccccc@c@@c@@@@r]eilk\i1 @@@ccccc@c@@c@@@@VVikjVV]\[cc@ccc@c@@c@@c@c@4_kXgVk\^iXk%cc@@@c@ccc@@cccc@2@@c@c@@@@@@@cc@c@4cilVYXk%cc@@@c@ccc@@cccc@1 cc@ccc@c@@c@@c@c@#@@c@c@@@@@@@cc@c@#cc@@@c@ccc@@cccc@VVk`e`VV]\[1[Xfcenf;jjXcZ VVikjVV%cccc@ccc@c@ccc@c@eilk\i1 cccc@ccc@c@ccc@c@VVig\iVV]\[ tgdXkj\d`k%ccc@ccc@ccc@@cc@@rkSt\ck`k%ccc@ccc@ccc@@cc@@rkStcil%ccc@ccc@ccc@@cc@@r]eilk\i1 ccc@ccc@ccc@@cc@@VVikjVV]\[ccccc@@@@c@@@c@@@4gdXkj\d`k%ccc@cccccc@cc@@c@2@@@c@@@c@cc@ccc@@4\ck`k%ccc@cccccc@cc@@c@2@ccc@cc@@c@c@c@c@4cil%ccc@cccccc@cc@@c@1 ccccc@@@@c@@@c@@@#@@@c@@@c@cc@ccc@@#@ccc@cc@@c@c@c@c@#ccc@cccccc@cc@@c@VVk`e`VV]\[1pifkj`?Y\NjjXcZ VVikjVV%@@c@@@@@c@@c@c@c@eilk\i1 @@c@@@@@c@@c@c@c@VVig\iVV]\[t\lcXm%c@cccc@@@cc@c@@@@rkSt\dXe%c@cccc@@@cc@c@@@@rkStj\i`go\%c@cccc@@@cc@c@@@@rkStcc@c@cc@@cccc@@c@\jc\ %_k`njkiXkj%kjf_%c@cccc@@@cc@c@@@@]`ccc@cc@@ccccc@c@@rkSt_kXg%c@cccc@@@cc@c@@@@rkStcc@c@cc@@cccc@@c@\jc\'44j\i`go\%c@cccc@@@cc@c@@@@]`ccc@cc@@ccccc@c@@rkStkjf_%c@cccc@@@cc@c@@@@r]eilk\i2<JC8=4ccc@cc@@ccccc@c@@2<LIK4cc@c@cc@@cccc@@c@1 c@cccc@@@cc@c@@@@VVikjVV]\[@@cc@@c@cc@@@cc@@4j\i`go\%cc@@@@c@@@cc@cc@@2@c@@@@@@@@@@@ccc@4\lcXm%cc@@@@c@@@cc@cc@@2c@@@c@@c@cc@cc@c@4_kXg%cc@@@@c@@@cc@cc@@2@@cc@@@@@c@@c@@c@4\dXe%cc@@@@c@@@cc@cc@@2@@c@@c@@c@cccccc@4kjf_%cc@@@@c@@@cc@cc@@1 #@@cc@@c@cc@@@cc@@#@c@@@@@@@@@@@ccc@#c@@@c@@c@cc@cc@c@#@@cc@@@@@c@@c@@c@#@@c@@c@@c@cccccc@#cc@@@@c@@@cc@cc@@VVk`e`VV]\[1\`bff:jjXcZ VVikjVV%ccc@c@ccccc@ccc@@eilk\i1 ccc@c@ccccc@ccc@@VVig\iVV]\[t[ifnjjXg%ccc@c@@@c@@c@c@@@rkSt\dXei\jl%ccc@c@@@c@@c@c@@@rkStcil%ccc@c@@@c@@c@c@@@r]eilk\i1 ccc@c@@@c@@c@c@@@VVikjVV]\[@@@@@cc@cc@@c@@@@4[ifnjjXg%cc@cc@c@@@c@c@cc@2@c@@@c@@@cc@c@cc@4\dXei\jl%cc@cc@c@@@c@c@cc@2@@@ccc@c@@c@cccc@4cil%cc@cc@c@@@c@c@cc@1 @@@@@cc@cc@@c@@@@#@c@@@c@@@cc@c@cc@#@@@ccc@c@@c@cccc@#cc@cc@c@@@c@c@cc@VVk`e`VV]\[1e`^fCjjXcZ1@ccc@@@@c@c@c@@c@jjXcZ c@@@@cc@c@@ccc@c@\mfd\i%jf2 \jfcZ%@cccc@@cc@c@c@@c@  #T+R@cc@ccccccc@@@@c@#c@cccc@@@cc@c@c@@#T)R@cc@ccccccc@@@@c@#T(R@cc@ccccccc@@@@c@#T'R@cc@ccccccc@@@@c@[iX:k`[\i:%@ccc@@@@c@c@c@@c@[e\ggX%VVJ;I8:VV%@@c@c@ccc@cc@@cc@2 p\bVi\kjXd%@@c@c@ccc@cc@@cc@#T*R@cc@ccccccc@@@@c@[ifnjjXgVkgpiZ\[%@@c@c@ccc@cc@@cc@4c@cccc@@@cc@c@c@@\le`kefZ1 T*R@cc@ccccccc@@@@c@kfeifT)R@cc@ccccccc@@@@c@kfeifT(R@cc@ccccccc@@@@c@kfeifT'R@cc@ccccccc@@@@c@kfe]`1 ccX_Zk\]%@c@@cc@cc@ccc@@c@e`@cc@ccccccc@@@@c@if] j[iXZVk`[\iZDFI=[\`]`[fdV\kX[#[\kgpiZe\Vi\YdleV[iXZ#iX\pVef`kXi`go\#_kefdVef`kXi`go\#[iXZVefV\dXeK:<C<J\klZ\o\%@c@@cc@cc@ccc@@c@2 ifjilZ%@cccc@@cc@c@c@@c@4@c@@cc@cc@ccc@@c@2 c@@@@cc@c@@ccc@c@kZ\eefZ%*\k`chj4@cccc@@cc@c@c@@c@2 c@@@@cc@c@@ccc@c@#cc@@cccc@c@@@c@@@pgfZ%c`kl_jeilk\i1 cc@@cccc@c@@@c@@@jkj`o\%_kXg%jfkfe]`XkX;Y\NSStc@@cccccc@@cc@cc@rSSt@@@cc@c@@cc@@c@c@r]4cc@@cccc@c@@@c@@@2Y[Vj[iXZ4c@@@@cc@c@@ccc@c@1 c@@cccccc@@cc@cc@#@@@cc@c@@cc@@c@c@#@@c@c@ccc@cc@@cc@j[iXZVk`[\iZVk\^]\[ @c@c@ccc@cc@@@@c@\mfd\i%jf2 \jfcZ%@cccccc@@c@@cccc@  T(R@c@cc@c@@@c@cc@@@#T'R@c@cc@c@@@c@cc@@@[Xfcenf;%@ccc@@@@c@c@c@@c@[e\ggX%VVJ;8@CEN@;VV%@c@@c@ccc@c@@@@@@\le`kefZ1T(R@c@cc@c@@@c@cc@@@kfeifT'R@c@cc@c@@@c@cc@@@kfe]`1 ccX_Zk\]%@ccc@@ccc@c@@cc@@e`@c@cc@c@@@c@cc@@@if] j[Xfcenf[DFI=_kXgVk\^iXk#cilVYXkK:<C<J\klZ\o\%@ccc@@ccc@c@@cc@@2 ifjilZ%@cccccc@@c@@cccc@4@ccc@@ccc@c@@cc@@2 @c@c@ccc@cc@@@@c@kZ\eefZ%*\k`chj4@cccccc@@c@@cccc@2 @c@c@ccc@cc@@@@c@#c@@@@@@c@c@ccccc@pgfZ%c`kl_jeilk\i1 c@@@@@@c@c@ccccc@jkj`o\%_kXg%jfkfe]`pifkj`?SSt@@cc@@@c@@cccc@c@rSStccc@c@cc@@c@@ccc@r]4c@@@@@@c@c@ccccc@2Y[Vj[Xfcenf[4@c@c@ccc@cc@@@@c@1 @@cc@@@c@@cccc@c@#ccc@c@cc@@c@@ccc@#@c@@c@ccc@c@@@@@@j[Xfcenf[Vk\^]\[ cccc@@c@ccccc@@@@\mfd\i%jf2 \jfcZ%@c@c@@@cc@c@cccc@  T)Rc@c@@cccccc@@@c@@#T(Rc@c@@cccccc@@@c@@#T'Rc@c@@cccccc@@@c@@pifkj`?Y\N%@ccc@@@@c@c@c@@c@[e\ggX%VVPI@KJ@?V9<NVV%@@ccc@@c@c@c@@cc@\le`kefZ1T)Rc@c@@cccccc@@@c@@kfeifT(Rc@c@@cccccc@@@c@@kfeifT'Rc@c@@cccccc@@@c@@kfe]`1 ccX_Zk\]%c@@ccc@@@c@cc@c@@e`c@c@@cccccc@@@c@@if] jcilDFI=\d`kVk`j`mVkjXc#\ck`k#cilK:<C<J\klZ\o\%c@@ccc@@@c@cc@c@@2 ifjilZ%@c@c@@@cc@c@cccc@4c@@ccc@@@c@cc@c@@2 cccc@@c@ccccc@@@@kZ\eefZ%*\k`chj4@c@c@@@cc@c@cccc@2 cccc@@c@ccccc@@@@#cc@ccc@@@@@@@c@c@pgfZ%c`kl_jeilk\i1 cc@ccc@@@@@@@c@c@jkj`o\%_kXg%jfkfe]`pifkj`?SSt@@@cc@@c@@@c@@c@@rSStc@c@cc@@cc@@@ccc@r]4cc@ccc@@@@@@@c@c@2Y[Vpifkj`_VY\n4cccc@@c@ccccc@@@@1 @@@cc@@c@@@c@@c@@#c@c@cc@@cc@@@ccc@#@@ccc@@c@c@c@@cc@pifkj`_VY\nVk\^]\[ ccc@@c@@cc@c@ccc@ccc@ccc@cc@c@@cc@1 ccc@@c@@cc@c@ccc@ikje`c@c@@c@c@@c@c@@c@V]` @@@c@@@cc@c@@c@@@V4cc\_j#\o\%\dfi_ZkiXkje\gfG%jj\ZfigYlj1ccc@cc@c@c@c@@c@@]` @@cc@c@@@@ccc@cc@\mfd\i%jfc@@@@cccc@ccc@cc@V4"ccc@@c@@cc@c@ccc@1($ @c@c@c@@@@@cc@cc@e\c4c@cc@c@@@c@cc@cc@]`@ccc@@cccccc@ccc@4"ccc@@c@@cc@c@ccc@2t\lcXm%cc@ccc@@@cc@@c@c@r4t\dXe%cc@ccc@@@cc@@c@c@r]4@ccc@@cccccc@ccc@1 @c@c@c@@@@@cc@cc@\kXi\dle\e`cc@ccc@@@cc@@c@c@#c@cc@c@@@c@cc@cc@if]4ccc@@c@@cc@c@ccc@2Te`Xdf[%@c@cccccccc@c@c@@e`@c@@ccc@@cccc@cc@V]`@@@@ccc@c@@c@c@c@e`@c@cccccccc@c@c@@if]@c@cccccccc@c@c@@R4@c@c@c@@@@@cc@cc@2 \dfi_Z%*\`bffZVi\jnfiY4@@@@ccc@c@@c@c@c@\le`kefZ2(4"@c@ccc@cc@ccc@c@@1kg\Zo\bX\iY2 \jfcZ%cc@cc@@c@c@cc@@@@  #T+R@@@@c@c@@cc@cc@c@#cc@ccc@@@cc@@c@c@#T)R@@@@c@c@@cc@cc@c@#T(R@@@@c@c@@cc@cc@c@#T'R@@@@c@c@@cc@cc@c@\`bff:%@ccc@@@@c@c@c@@c@[e\ggX%VVJ<@B@@:VV%@cc@c@@c@cccc@@@@2 p\bVi\kjXd%@cc@c@@c@cccc@@@@#T*R@@@@c@c@@cc@cc@c@[ifnjjXgVkgpiZ\[%@cc@c@@c@cccc@@@@4cc@ccc@@@cc@@c@c@\le`kefZ1 T*R@@@@c@c@@cc@cc@c@kfeifT)R@@@@c@c@@cc@cc@c@kfeifT(R@@@@c@c@@cc@cc@c@kfeifT'R@@@@c@c@@cc@cc@c@kfe]`1 ccX_Zk\]%cc@@@@c@cccc@c@@@e`@@@@c@c@@cc@cc@c@if] j\`bffZDFI=ZklVj\i`go\#\lcXmV[\kgpiZe\#_kXg#\dXe#p\bVkjf_K:<C<J\klZ\o\%cc@@@@c@cccc@c@@@2 ifjilZ%cc@cc@@c@c@cc@@@@4cc@@@@c@cccc@c@@@2 @@cc@c@@@@ccc@cc@kZ\eefZ%*\k`chj4cc@cc@@c@c@cc@@@@2 @@cc@c@@@@ccc@cc@#cc@cc@@ccccc@c@c@pgfZ%c`kl_j1pik1c@cc@cc@@c@c@@c@@3@c@ccc@cc@ccc@c@@\c`_n)4c@cc@cc@@c@c@@c@@2'4@c@ccc@cc@ccc@c@@eilk\i1 cc@cc@@ccccc@c@c@jkj`o\%_kXg%jfkfe]`j\`bff:SSbifnk\ESSt@c@c@@@c@cc@cc@@@rSSt@cc@@c@c@cccc@cc@r]4cc@cc@@ccccc@c@c@jjXg1kg\Zo\ cc`b%c@c@@ccc@c@c@cc@@1pik1 i\nfc%T@c@c@@@@@@@@c@c@@VRf]e`%c@c@@ccc@c@c@cc@@e`@cc@@@@ccc@cccc@@V]`1 T@c@c@@@@@@@@c@c@@V#[`gRi\k`Vjj\Zfig%c`kljge`c@c@@ccc@c@c@cc@@if]1ccc@cc@c@c@c@@c@@]`Y[V\`bffZ4@@cc@c@@@@ccc@cc@1 @c@c@@@c@cc@cc@@@#@cc@@c@c@cccc@cc@#@cc@c@@c@cccc@@@@j\`bffZVk\^]\[ ccc@c@@@c@c@@cc@@\mfd\i%jf2 \jfcZ%@cc@@cc@c@c@@ccc@  @c@c@@cccc@@c@@@@#T(Rcc@@cccc@c@ccc@@@#T'Rcc@@cccc@c@ccc@@@e`^fC%@ccc@@@@c@c@c@@c@[e\ggX%VVJE@>@CVV%cc@ccc@@c@cccc@@@2 p\bVi\kjXd%cc@ccc@@c@cccc@@@#T)Rcc@@cccc@c@ccc@@@[ifnjjXgVkgpiZ\[%cc@ccc@@c@cccc@@@4@c@c@@cccc@@c@@@@\le`kefZ1T)Rcc@@cccc@c@ccc@@@kfeifT(Rcc@@cccc@c@ccc@@@kfeifT'Rcc@@cccc@c@ccc@@@kfe]`1 ccX_Zk\]%cc@c@cc@cccccc@@@e`cc@@cccc@c@ccc@@@if] je`^fcDFI=\lcXmV[ifnjjXg#\lcXmV\dXei\jl#cilVef`kZXK:<C<J\klZ\o\%cc@c@cc@cccccc@@@2 ifjilZ%@cc@@cc@c@c@@ccc@4cc@c@cc@cccccc@@@2 ccc@c@@@c@c@@cc@@kZ\eefZ%*\k`chj4@cc@@cc@c@c@@ccc@2 ccc@c@@@c@c@@cc@@#@@@@ccccccc@@cc@@pgfZ%c`kl_jeilk\i1 @@@@ccccccc@@cc@@jkj`o\%_kXg%jfkfe]`XkX;e`^fCSSt@@@@@ccc@@cc@cc@@rSStcc@@ccc@c@cc@@cc@r]4@@@@ccccccc@@cc@@2Y[Ve`^fc4ccc@c@@@c@c@@cc@@1 @@@@@ccc@@cc@cc@@#cc@@ccc@c@cc@@cc@#cc@ccc@@c@cccc@@@j[ifnjjXgVk\^]\[cc@@@cccc@c@c@cc@eilk\i2 \[fZ\[%T-($1Rcc@@@cccc@c@c@cc@4cc@@@cccc@c@c@cc@2 c@@@@@cccc@c@c@c@kgpiZ\[%ccccc@@@cc@ccccc@4cc@@@cccc@c@c@cc@2 @@@c@ccccc@ccc@@@#D:>V<;FD%J<8#c@c@c@@c@@c@cccc@n\e%J<84ccccc@@@cc@ccccc@2T1,(R@c@cc@@@c@@ccccc@4c@@@@@cccc@c@c@c@2T,(1*R@c@cc@@@c@@ccccc@4@@@c@ccccc@ccc@@@1 c@c@c@@c@@c@cccc@#@c@cc@@@c@@ccccc@#@c@@@ccc@@@@@@c@@[ifnjjXgVkgpiZ\[]\[@c@c@@c@c@cccc@@@eilk\i2T(R '#cccccccc@@@@@@@@@V#cccccccc@@@@@@@@@V#cccccccc@@@@@@@@@V#@c@c@@c@c@cccc@@@XkX;kZ\kfigeLkgpi:4@c@c@@c@c@cccc@@@2T1,R@c@c@@c@c@cccc@@@4@c@c@@c@c@cccc@@@2 Tp\bV[\kgpiZe\RTc@cccccc@@c@@cc@@R@c@c@ccc@c@@@@cc@\[fZ\[+-Y%+-\jXY4@c@c@@c@c@cccc@@@2 cc@@c@ccc@c@c@c@@j[Xfc%efja4@c@c@ccc@c@@@@cc@ [X\i%@@cc@@c@c@cc@@cc@4cc@@c@ccc@c@c@c@@1@@cc@@c@c@cc@@cc@jX cc@cc@@@@c@cc@c@@V4^e`[fZe\#i#@@@@@@cccc@c@@@@@e\gf_k`neilk\i1  [X\i% cc@cc@@@@c@cc@c@@V4^e`[fZe\#i#@@@@@@cccc@c@@@@@e\gfe`kfec@cccccc@@c@@cc@@]`eilk\i1 @@@@@@cccc@c@@@@@jkj`o\%_kXg%jfkfe]`kgpiZVjf4c@cccccc@@c@@cc@@1 @@@@@@cccc@c@@@@@#c@@cccccc@@@c@@c@p\bVi\kjXdVk\^]\[ @cc@c@ccc@ccc@@c@[e\ggX%VV8K8;VV2t#VVJ;I8:VV%@ccc@cc@@c@@@@cc@1@c@c@cc@ccc@ccc@@V#VVJ;8@CEN@;VV%@ccc@cc@@c@@@@cc@1ccc@@c@@@@@@ccc@@V#VVPI@KJ@?V9<NVV%@ccc@cc@@c@@@@cc@1@@c@c@cccc@@cc@@@V#VVJ<@B@@:VV%@ccc@cc@@c@@@@cc@1@cc@@@ccc@@c@@c@@V#VVJE@>@CVV%@ccc@cc@@c@@@@cc@1@c@c@@ccccc@@@@c@V#cc@cc@c@@c@@cccc@1@@@c@c@@ccc@c@@@@V#@@@cccc@c@ccccc@@1c@cc@@ccccc@@c@c@Vr4@cc@c@ccc@ccc@@c@jjXg1kg\Zo\ cc@cc@c@@c@@cccc@#@@c@cccc@@@c@@@c@cc@cc@ccc@@c@c@c@1pik1@@c@cc@@@c@c@c@@@e`cc@cc@ccc@@c@c@c@if]TR4VVJ;I8:VV%@ccc@cc@@c@@@@cc@2TR4VVJ;8@CEN@;VV%@ccc@cc@@c@@@@cc@2TR4VVPI@KJ@?V9<NVV%@ccc@cc@@c@@@@cc@2TR4VVJ<@B@@:VV%@ccc@cc@@c@@@@cc@2TR4VVJE@>@CVV%@ccc@cc@@c@@@@cc@2T#j[iXZVk`[\iZVk\^%@ccc@cc@@c@@@@cc@#j[Xfcenf[Vk\^%@ccc@cc@@c@@@@cc@#pifkj`_VY\nVk\^%@ccc@cc@@c@@@@cc@#j[ifnjjXgVk\^%@ccc@cc@@c@@@@cc@#j\`bffZVk\^%@ccc@cc@@c@@@@cc@R4@@c@cc@@@c@c@c@@@\le`kefZ1 cc@cc@c@@c@@cccc@"SS"@@c@cccc@@@c@@@c@jkj`o\%_kXg%jfkfe]`1j\c`]fig%@ccc@cc@@c@@@@cc@e`cc@cc@c@@c@@cccc@if]\le`kefZ1p\bVi\kjXd%@ccc@cc@@c@@@@cc@kfe]` \kXkJcXZfCSSt@@c@cccc@@@c@@@c@r]p\bVi\kjXdVk\^%@ccc@cc@@c@@@@cc@4p\bVi\kjXd%@ccc@cc@@c@@@@cc@2Tccc@c@@@cc@@c@@@@e`kfed\kjpJ[eX ccc@c@@@cc@@c@@@@e`kclX]\;ifccc@c@@@cc@@c@@@@e`\c`]fiG]`cc@c@ccc@@cc@cc@@e`ccc@c@@@cc@@c@@@@if]ccc@c@@@cc@@c@@@@R4j\c`]fig%@ccc@cc@@c@@@@cc@2T  c@@ccc@@@c@@@@cc@#@@c@cccc@@@c@@@c@e`fa%_kXg%jfi`[j`%_kXg%jf]` @@c@cccc@@@c@@@c@i`[kj`c%jfe`c@@ccc@@@c@@@@cc@if]c@@ccc@@@c@@@@cc@R4cc@c@ccc@@cc@cc@@\le`kefZ1 @@c@cccc@@@c@@@c@jkj`o\%_kXg%jfkfe]`1 jd\k`%ji\jnfiY%@ccc@cc@@c@@@@cc@e`@@c@cccc@@@c@@@c@#@@@cccc@c@ccccc@@if]t#XkX;i\jLSSJoJ\dfi_:SS\c^ff>SS"XkX[ggX%@ccc@cc@@c@@@@cc@1joj$\dfi_Z$\c^ff^#XkX;i\jLSSi\jnfi9$\mXi9SS\iXnk]fJ\mXi9SS"XkX[ggX%@ccc@cc@@c@@@@cc@1\mXiY#XkX;i\jLSS\^[<SSk]fjfiZ`DSS"XkX[ggX%@ccc@cc@@c@@@@cc@1\^[\$k]fjfiZ`d#XkX;i\jLSS\dfi_:SS\c^ff>SS"XkX[ggX%@ccc@cc@@c@@@@cc@1\dfi_Z$\c^ff^r4ji\jnfiY%@ccc@cc@@c@@@@cc@ @c@@c@@@@@@cc@c@@Vme\k\^%jf4XkX[ggX%@ccc@cc@@c@@@@cc@1 @ccc@cc@@c@@@@cc@VVk`e`VV]\[1ccc@c@c@@@@@@@@c@jjXcZ #t@@cc@@@@@c@c@ccc@rSSt@@cc@cc@@@c@cccc@r]#g`q#t@@cc@@@@@c@c@ccc@rSSt@@cc@cc@@@c@cccc@r]\m`_ZiXV\bXd%c`kl_j eSt@@c@cc@c@cc@@ccc@r]\k`in%c@c@c@ccc@@c@cc@@2 @@c@cc@c@cc@@ccc@[e\ggX%VV9=J<@B@@:VV1@@c@cc@c@cc@@ccc@e`c@c@@c@c@@c@c@@c@V]` @c@@@@c@c@cc@ccc@e`fa%c@@@@cccc@ccc@cc@V4@@c@cc@c@cc@@ccc@1c@@@c@@@c@cc@c@c@e`@c@@ccc@@cccc@cc@V]`1 jd\k`%@@@c@@@c@cc@@@c@@e` #@c@@@@c@c@cc@ccc@#c@@@c@@@c@cc@c@c@if]1c@c@c@ccc@@c@cc@@jX #cc@cc@@@@c@cc@c@@V4^e`[fZe\#X# kok%bffY\ZX]V\`bffZ#cc@@@@@@@@cc@@@c@e`fa%_kXg%jfe\gf_k`n t@c@ccc@@@c@@cc@c@r4tccccccc@@@@@@@c@@r][e\ggX%Tc@@@c@@@c@cc@c@c@R@@@c@@@c@cc@@@c@@TR4Tc@@@c@@@c@cc@c@c@R@@@c@@@c@cc@@@c@@1@@@c@@@c@cc@@@c@@e`kfec@@@c@@@c@cc@c@c@]` g`ikj%T-Rccc@cc@c@@cc@ccc@4@c@ccc@@@c@@cc@c@2 g`ikj%T,Rccc@cc@c@@cc@ccc@4ccccccc@@@@@@@c@@2 g`ikj%T'Rccc@cc@c@@cc@ccc@4c@@@c@@@c@cc@c@c@1.45 ccc@cc@c@@cc@ccc@e\c]` kSk`cgj% g`ikj%VV\`bffZVV4ccc@cc@c@@cc@ccc@1@c@@@@c@c@cc@ccc@e`VV\`bffZVVif]tr4@@@c@@@c@cc@@@c@@2 j\e`ck`cgj%@c@@@@c@c@cc@ccc@4@c@@@@c@c@cc@ccc@2 @c@ccc@@@c@@cc@c@e`@cc@@ccccccc@c@c@if] @cc@@ccccccc@c@c@ikje`fa%@c@@@c@@c@@@@c@@@V4@c@@@@c@c@cc@ccc@2 @@@c@@@cc@c@@c@@@V4bfVkj`o\#cc@@@@@@@@cc@@@c@ji`[\bXd%jf2 @c@@ccc@@cccc@cc@V#@c@c@cc@@cc@@@@@@e`fa%_kXg%jf4cc@@@@@@@@cc@@@c@1@cc@@@ccc@@c@@c@@V44@ccccc@ccc@cc@@@@]`  @c@ccc@@@c@@cc@c@e`@@@@@cccc@@c@c@@@if] @@@@@cccc@@c@c@@@ikje`fa%@c@@@c@@c@@@@c@@@V\k`in%@@@c@@c@@@@ccccc@1@@@c@@c@@@@ccccc@jX #cc@cc@@@@c@cc@c@@V4^e`[fZe\#X# @@ccc@c@@c@ccc@c@#@@@cc@c@cc@ccc@@@e`fa%_kXg%jfe\gf_k`nkok%t@ccccc@ccc@cc@@@@r]4@@ccc@c@@c@ccc@c@1 @c@ccc@@@c@@cc@c@[eXT#@c@c@cc@ccc@ccc@@V#ccc@@c@@@@@@ccc@@V#@@c@c@cccc@@cc@@@V#@cc@@@ccc@@c@@c@@V#@c@c@@ccccc@@@@c@VRe`@ccccc@ccc@cc@@@@]`1 jd\k`%c@cc@ccc@ccc@cc@@e`@c@ccc@@@c@@cc@c@#@ccccc@ccc@cc@@@@if] @@@c@@@cc@c@@c@@@V4bfVkj`o\#@@@cc@c@cc@ccc@@@ji`[\bXd%jf2 VV<C@=@IGVV#@@c@@@ccc@@@@c@@@e`fa%_kXg%jf4@@@cc@c@cc@ccc@@@2 @@@c@@@cc@c@@c@@@V4bfVkj`o\#@@c@@@ccc@@@@c@@@ji`[\bXd%jf2 VVI<JN@I9VV#@c@c@cc@@cc@@@@@@e`fa%_kXg%jf4@@c@@@ccc@@@@c@@@2 @@@c@@@cc@c@@c@@@V4bfVkj`o\#@c@c@cc@@cc@@@@@@ji`[\bXd%jf2 @@cc@@@@@c@c@ccc@#cc@ccc@@@c@@cc@c@e`fa%_kXg%jf4@c@c@cc@@cc@@@@@@2 @@@c@@@cc@c@@c@@@V4bfVkj`o\#cc@ccc@@@c@@cc@c@ji`[\bXd%jf2 @@cc@@@@@c@c@ccc@#@@cc@cc@@@c@cccc@e`fa%_kXg%jf4cc@ccc@@@c@@cc@c@1VVI<JN@I9VV[eXVV<C@=@IGVV]` c@cc@@ccccc@@c@c@Vk\^%c@cc@ccc@ccc@cc@@4VVI<JN@I9VV2 @@@c@c@@ccc@c@@@@Vk\^%c@cc@ccc@ccc@cc@@4VV<C@=@IGVV1 T#@c@c@cc@ccc@ccc@@V#ccc@@c@@@@@@ccc@@V#@@c@c@cccc@@cc@@@V#@cc@@@ccc@@c@@c@@V#@c@c@@ccccc@@@@c@VRe`cc@c@@@@@cc@@@c@@if] cc@c@@@@@cc@@@c@@k\^%c@cc@ccc@ccc@cc@@peX]`1VV8K8;VVe`c@cc@ccc@ccc@cc@@if]1VV8K8;VV]`1 c@@@@c@@cc@@c@cc@j\c`]V\k`in]\[ j\c`]V\k`in%c@ccc@@@c@@cc@cc@1 c@ccc@@@c@@cc@cc@VVk`e`VV]\[1@@cccc@c@@c@cc@c@jjXcZ c@@@ccc@cc@@@@cc@2 @@cccc@c@@c@cc@c@2 ccc@c@c@@@@@@@@c@1 @cccc@@@@@@cccc@@VVk`e`VV]\[1@@@@ccc@@@@ccc@@@jjXcZ #@@@@cc@@@@c@@ccc@4VjX#cc@@@c@@cc@c@@c@@4Vg`q#@@cc@c@c@@@@c@@c@4pk`Z#c@@@cc@@cc@@@ccc@4ef`^\i# c@@@@cc@@@@@@c@c@@@@cc@ccc@@@@@@c@"c@@@@cc@@@@@@c@c@4pikelfZ#c@ccc@@@cc@cc@cc@4ZXd#cccc@cccccccccc@@4g`kXdif]%tVjXr1GJ@eS tVg`qrtpk`Zr1pk`:eStef`^\ir1ef`^\IeStpikelfZr1pikelf:eStZXdr1jj\i[[8:8DeStg`r1jj\i[[8G@eilk\i2  tc@@@@cc@@@@@@c@c@rt@@cc@c@c@@@@c@@c@r][e\ggX%VVE@@K8:@CVV2 cccc@cccccccccc@@@@cc@c@@@@@@@@@@@4 #@@@@cc@@@@c@@ccc@#cc@@@c@@cc@c@@c@@#@@cc@c@c@@@@c@@c@#c@@@cc@@cc@@@ccc@#c@@@@cc@@@@@@c@c@2   \[fek\^%[`llo)('#%%ccX[e`]%\ie`fa%14c@ccc@@@cc@cc@cc@ T'R @c@@@c@@c@@@@c@@@Vk`cgj%T(R 4g`k`cgj%ko\k% \ZXik&`^Z$e[Z&dfZ%\iXc][lfcZ%nnn&&1jgkk_k\^%jkj\lh\i4cccc@cccccccccc@@ #Tc@cc@@ccc@@c@@cc@RTc@cc@@ccc@@c@@cc@Rccc@c@cc@@cccc@c@#TcXkjfgRccc@c@cc@@cccc@c@#Tpk`ZRccc@c@cc@@cccc@c@#Tef`^\iRccc@c@cc@@cccc@c@#TpikelfZRccc@c@cc@@cccc@c@eilk\i2Tc@@@@c@c@c@@@cc@@VR efja% @@ccccc@c@cc@@@@@4ji\[X\_#tc@c@@cc@c@ccccc@@r&fd\[&k\^[`n&f`%f]e`g`&&1jgkk_]k\^%jkj\lh\i4ccc@c@cc@@cccc@c@2t#@@c@@c@c@cc@cc@c@V1@@c@@@c@c@cccc@c@V#e`^`if$\dXj1@@c@c@cc@@c@@ccc@V#jifZ1c@c@@@@c@@c@@c@@@V#pkgd\1@@@@@c@@c@@ccc@c@V#'61cc@c@@ccccccc@c@@V#-((4m2\dfi_:\c^ff>#+)4m2[eXi928 kfE#-((4m2dl`dfi_:1cc@ccc@c@@c@c@@@@V#&f`%f]e`g`&&1jgkk_1i\i\]\i#efja&ef`kXZ`cggX1\gpk$ke\kefZ#-%'4h2e\#.%'4h2JL$e\#/%'4h2i]#0%'4h2I=$i]#`m1@@@@cc@@cccc@@@c@V#!&!1ccc@@ccc@@ccc@@@@V#f`%f]e`g`1@cc@c@c@c@cccccc@Vr4@@ccccc@c@cc@@@@@2ejX4c@cc@@ccc@@c@@cc@1 c@c@@cc@c@ccccc@@@@cc@c@@@@@@@@@@@]\[1 @c@c@cc@@@@c@@c@@]\[  @@@@@@cc@@cccccc@cc@@cccc@cc@@c@@@4@@cc@@@@@c@c@ccc@ i\ggl%T,(1Rc@@@cc@@@@@@@@@c@eilk\i2 kj\^`[o\_%  \[fZe\%ccc@cc@@ccc@@@@@@-,)X_j%Y`c_jX_4c@@@cc@@@@@@@@@c@1 ccc@cc@@ccc@@@@@@cc@@cccc@cc@@c@@@]\[ccccc@cc@cc@c@@@@eilk\i2  g`ikj%T(R @c@@@c@@c@@@@c@@@Vk`cgj% \[fZ\[%  [X\i%ii\[kj%@@cc@c@@@cc@c@c@@" [X\i%klf[kj%@@cc@c@@@cc@c@c@@4ccccc@cc@cc@c@@@@2 #<G@G%jj\ZfigYlj4ii\[kj#<G@G%jj\ZfigYlj4klf[kj#<G@G%jj\ZfigYlj4e`[kj#@@@c@@@cc@c@@c@@@V4cc\_j#[`llk\^kZl[figjZZ`dne\gfG%jj\ZfigYlj4@@cc@c@@@cc@c@c@@1 @@@@@@cc@@cccccc@]\[\lcXm%@ccc@ccc@@ccc@@c@eilk\i2 @@c@@@c@@@@cc@c@@#@ccc@ccc@@ccc@@c@#@ccc@c@@cccccc@c@@@@c@@@@c@@ccc@c@2 @@c@@@@@@@ccccc@@i\]]lYV\[fZ`elV\kX\iZ%j\gpkZ4@ccc@ccc@@ccc@@c@2\lcXm%jke\kefZ%@@c@@@c@@@@cc@c@@4@@c@@@@@@@ccccc@@2 @@c@@@c@@@@cc@c@@#cccccccc@@@@@@@@@V#@ccc@c@@cccccc@c@@@@c@@@@c@@ccc@c@2  '^efclVZ%j\gpkZi\ke`fg%j\gpkZ4@@c@@@c@@@@cc@c@@2*4@ccc@c@@cccccc@c@2No<\dXEi\jLk\>%)*ilZ\j%cc[e`n%j\gpkZ4@@@c@@@@c@@ccc@c@1 @ccc@@ccccc@c@cc@]\[ # i\ggl%c@@@c@c@@@ccc@@@@k\^%@cc@@c@cc@c@cc@c@eilk\i2t#1FE#1@=#1K8#1<9#1?:#1CE#1<J#1PD#1>J#1QE#1IK#1?K#1;@#1OD#1J<#1K@#1LI#1I9#1E@#1E:#1IB#1<;#1L8#18:#1I=#1GA#19>#1JL#1EMr4@cc@@c@cc@c@cc@c@1 c@@@c@c@@@ccc@@@@@@@cc@ccc@@@@@@c@]\[ ''*g\\cj%\d`k1ccc@cc@c@c@c@@c@@]` c@@@c@cc@@@c@@@@@4ccc@cc@c@c@c@@c@@\jcX=eilk\i@@@c@@@cc@c@@c@@@Veilk\i1 i\nfc%T@c@c@@@@@@@@c@c@@VRf]e`%@@@c@@@@@c@c@@@c@e`@cc@@@@ccc@cccc@@V]`1 T@c@c@@@@@@@@c@c@@V#[`gRi\k`Vjj\Zfig%c`kljge`@@@c@@@@@c@c@@@c@if]1 c@@@c@cc@@@c@@@@@]\['1\jc\ @cccc@ccc@cc@@@@@1ccc@cc@c@ccccc@@@]`1cccccccc@@@@@@@@@Vkfej`ccc@cc@c@ccccc@@@]` ccc@@ccc@c@@@ccc@4ccc@cc@c@ccccc@@@jjXg1c@@@@c@c@@cc@cc@@jXef`kg\Zo<kg\Zo\ @@@c@@@cc@c@@c@@@V4cc\_j#\lik^e`ifk`efD\d`kcX\I\cYXj`;$\Ze\i\]\iGgD$k\Jcc\_ji\nfgeli%jj\ZfigYlj1pik1 @cccc@ccc@cc@@@@@]\[eilk\i1kg\Zo\eilk\i1ifii<[elf=kfE\c`=kg\Zo\'44@c@@ccc@c@cc@cc@@eilk\i2 c@c@c@ccc@@c@c@@@p\B\jfc:%^\ie`n2 ^e`ifk`efD\d`kcX\I\cYXj`;#c@c@c@ccc@@c@c@@@o<\lcXMpi\lH%^\ie`n4cc@@c@@@@c@ccc@@@V#@c@@ccc@c@cc@cc@@2 ef`kZ\kfiG\d`K$cX\ISSi\[e\]\;jnf[e`NSSk]fjfiZ`DSS<I8NK=FJ#<E@?:8DVC8:@CVP<B?%^\ie`np\Be\gF%^\ie`n4c@c@c@ccc@@c@c@@@1pik1 ccc@@ccc@c@@@ccc@]\[ cccc@@@cc@c@@@@c@\c`]kiXkj%jf2kok%t@ccc@c@@c@cccc@@@rSSt@@cc@cc@@@c@cccc@r]4cccc@@@cc@c@@@@c@2  @c@@c@@@@@@cc@c@@Vme\k\^%jfe`fa%_kXg%jf4@@cc@cc@@@c@cccc@ cccc@@@@ccccc@cc@\k`in%@@ccc@c@@@c@@ccc@1@@ccc@c@@@c@@ccc@jX cc@cc@@@@c@cc@c@@V4^e`[fZe\#n#@@c@cc@@@c@@c@@c@e\gf_k`n kok%t@ccc@c@@c@cccc@@@r]#@@cc@cc@@@c@cccc@e`fa%_kXg%jf4@@c@cc@@@c@@c@@c@2  @c@@c@@@@@@cc@c@@Vme\k\^%jfe`fa%_kXg%jf4@@cc@cc@@@c@cccc@2ke\dkiXg\;j\Zilfj\IeXdl?jglfi>BI8D@IG]fifkZ\i`;eSj[iX^\ikj\9eS%kZ\afigeSj`_ke`pccl]jj\ZZlj\kXi\gffZcc`n\n\gf_\n[eX#n\`mkj\iX\cZ\_k\mX_cc`n\NeSpeXgdf:BI8D@IGpYe\m`^jke\d\i`lh\i\_keSjXcc\njX#ef`kXdif]e`[\c`Xk\[\mfYX\_k[\n\`m\i\mX_lfpi\k]XkX_k\gf_\NeS444444;E<4444eS%bifnif]b\\ni\gjilf_')pc\kXd`ofiggX]fdld`oXdX\i`lh\ieS\N%^e`cl[\_Zje`\cY`o\c]\YeXZlfp[eX#bifn\kfd\i\Ycc`nj`_k\jilfZ]feS[eX#kZXikefZ\_k^e`e^`ji\k]Xj\\]\ZeXnfccXi\_kf\[lcZe`kfej\f[_kefd&;JLeS''/#)($'''#)(j`_kefd_ZX\if]i\]]f\npiXcXjke\iilZ\_KeS4444444glfi>BI8D@IGpZ`cfgpiXcXj4444eS%ke\defi`me\9)9Xe`j[XX`[\dcX`Zfj[eX# j[X^e`9eS&\c^ff>&J;8e`[e\be`c&i\kk`nk&J;88K<Dje^`XgdXZD<J#je^`XgdXZpXcgj`[eScXk`^`[^e`^XeXd[eX#^e`eeli#^e`klZ\o\\Ze\`i\go\ef$j[eX_kZ\i`[]fjiX\p"(eS%\Ze\`i\go\eSke\cXm`lh\if[c\`][\kXc\iXif#jef`kXZ`elddf:#^e`k\biXDe`\\i^\[jifc\_ZX9eS444444444\Ze\`i\go<ef`kXZl[<4444444eS%\iXnk]fj[\kXc\iif\k`lJ\Z`]]Fk]fjfiZ`D_k`nke\`Z`]fiGeS^e`k\biXdcXk`^`[j^e`_kccXif]ef`jjXGeS%j\`k`c`YXeS^e`mcfjd\cYfig_k`ni\be`_k\m`kX\iZX[eX#k\j[e`de\m`i[$XkX[#jcc`bjcXZ`kpcXeX^efikJeS%pZe\^il]f\je\jeSX_k`nj\e`c[X\[k\\d[eXpcjlf\eXkcld`jjkZ\afig\cg`kcld\^XeXdfkpk`c`Y8eS%c`Xk\[fkef`ke\kkX_k`n#jcc`bjef`kXZ`elddfZcXYi\m[eXe\kk`incXef`kg\Zo<eS%^e`k\biXdeS:)9"9)9e`X`[\dcX`Zfj]fef`kXZ`cggXcXZ`kZXig\_k]f^e`[eXkji\[eLeS%[\i`lh\ikfeklY#[\ii\]\igj` ef`kXdfklX^e`k\biXdeSiXc`d`jifkfgjYl?jdif]kXcgDI:[eX[lfc:\m`kX\i:\Yf[8_k`n\Ze\`i\go<eS%jj\ZZljcXk`^`[if]jcffkeS[eXj\Z`kZXigkj\Y\_k^e`jlj\`k`m`kZX^e`k\biXdcXk`^`[^e`iljX\de`ke\`Z`]fiGeS%\Z`]]Fk]fjfiZ`D[eXJJ:&CDK?eS#j\cg`Ze`ige^`j\[Y\n#_jlid\J#jj\iG[ifN#F<J]f^e`[eXkji\[el\m`je\ko<eS4444444j\`k`c`Y8jcc`bJ[\i`lh\I44444444eS%[\e^`jjXjXj\`kl[i\_kfdif]i\GeS%_ZXfiggX^e`k\biXdeScXk`^`[jpeXgdfZ\_k\mfigd`fkjef`kX[e\ddfZ\i\[`mfig[eX#j\Z`kZXigeSkj\Y[eX#j\`^fcfe_Z\k#j[e\ik^e`k\biXdcXk`^`[kj\kXc\_k_k`n\kX[fkglpXkJeS%ji\[cf_\bXkjp\bfkjef`kX[e\ddfZ\i[eXeSjk_^`je`^e`[`mfig#pciXcl^\i\ZeXdif]i\g^e`k\biXdcXk`^`[efkifg\i[eXbZXiKeS%ke\d^\jjj\e`jlY_ZX\if]^e`^Xjj\d[eXiYke\kj`jefZ\ilje\eS[eXj\m`kX`k`e`^e`k\biXd[\kXi^\ke`\ZeXm[Xfk#ke\dgfc\m\[jj\e`jlYn\e[eXeS#ke\d\^XeXdkZl[fig#j\cXj^e`[lcZe`#jdX\kcXef`kZel]$jjfiZ_k`n\kXifYXccf:eS%ef`kXk\igi\ke`XkX[efgl[\jXY\le\m\i_knfi^[eXef`k`j`lhZXeSi\dfkjlZi\kjf]cc`nkX_kke\kefZ^e`kj\^^ljdX\k^e`k\biXd\_k_k`n\kXifYXccf:eS%j\`i`lhe`[\kXc\iif#bifnke\dgfc\m\[#jk\bZ`keSe\gf\^XeXdfkkjf_&if[e\mY\nilf[eXjef`klcfJNLe\\nk\Yefj`X`cX\9eS%je^`XgdXZ^e`k\biXdif]j\^Xg^e`[eXc\kX\i:eS%\cfjef:eS_ZiX\J\c^ff>[eX_jlid\J#j[8\c^ff>#+8>jX_Zljjcffk^e`jl#\ZeXdif]i\geSe^`XgdXZ\mfigd`[eX\iljX\dfkjZ`ik\d[eXj@GB^e`k\biXdcXk`^`[\qpcXe8eS%ef`kXq`d`kgf\^Xg^e`[eXc[eX#pgfZ[X#^e`k\^iXk[ifnp\beS#ef`kXZfccXk\^[lY^e`[lcZe`#je^`XgdXZ^e`j`ki\m[X[`Xgifk`efd[eX\klZ\o<eS%j\Z`kZXigeSkj\Ypikjl[e`_k`n\e`ce`\iX F<Jef`kXq`d`kgf\e`^e\_ZiX\j[eX#\Ze\`i\go\eSi\jl#ef`kXq`d`kgf\k`jY\n\ilje\fk\Ze\j\ig\e`cefj[eXiY_ZX\\^XeXDeS%jifii\F<JeScXZ`e_Z\kif]jk`[lX\k`jiXcl^\idif]i\G%d\_k\mcfj\ifkef`kZX^e`bXk[eXj\ljj`eS^e`p]`ke\[`#j\k`jY\nilf]f\ZeXdif]i\g[eX_kcX\_\_k\q`d`kgf[eXifk`efDeS%j[eXiYccXif]j\m`kZ\aYf[eXjcXf^jj\e`jlYilf\m\`_ZXeSfkjc\eeX_ZcXk`^`[ccXjjfiZXj\`^\kXikj^e`k\biXdcXk`^`[\klZ\o\[eXgfc\m\;eS4444444j\`k`c`Y`jefgj\I4444444eS%pk`c`Y`jj\ZZX[eX#ef`kXq`d`kgfeS\e`^e\_ZiX\j#X`[\d`kcld#ef`kX^`mXe#p^\kXikjke\kefZ#\ilkZ\k`_ZiXef`kXdif]e`eS1if]j\Z`kZXigkj\Y\jl[eX#j\Z`mi\j[eXjkZl[figilf]f^e`ef`k`jfg#ke\kefZeSn\e[eXke\iilZif]^e`eeXcgZ`^\kXikj\[`l^fkjZ`kpcXeX\jl[eX\k`jY\nilf]feSef`kXq`d`kgf\_kif]\cY`jefgj\i\Ycc`ni\^XeXD^e`k\biXDcXk`^`;\_K%ef`ke\k\ieS[eXef`k`j`lhZXi\dfkjlZ\m`i[fkj[eXiYilfj\`]`cgd\o\\Ze\`i\go\i\jleS^e`ilje\\c`_n#\Ze\j\ig\e`cefilf^e`ZeX_e\e`\cficXk`mXpXcgcclfp#i\^XeXDeS^e`k\biXDcXk`^`;Xj8%dX\k^e`k\biXd\kXifgifZilfe`fafk[e`dcXZ`kpcXeXeS[eX\m`k`j`lhe`eX_k`ni\^XeXD^e`k\biXDcXk`^`;Z`dXep[X^e`b\\j\iX\NeS444444444\jfgilG44444444444eSeS^e`k\biXDcXk`^`;$BI8D@IG$EF@KG@I:J<;9FA;A4cccc@@@@ccccc@cc@2ef`kXdif]e`VkZXikef:VpiXcXjVjk`]\e\YVpZ`cfGVef`kXdif]e`V[\c`Xk\;V;A4@ccc@c@@c@cccc@@@2'4@@c@cc@@@@cccccc@2TR4VVJ;8VV2TR4VV9=J<@B@@:VV2TR4VVE@@K8:@CVV2TR4VV8K8;VV2 J;8k\\_jbifn%@@cc@@@c@@c@@@cc@4@@@cc@@@c@cc@@@c@2 'FI\89G0`blZaVBpl\M/]Gj+9JX*fXqag`\YggOfoAI(p\bVpYVe\gf%c@cc@@@cccc@cccc@4@@cc@@@c@@c@@@cc@2 c@@cc@c@@c@@ccc@@kZ`[Vdfi]VkelfZZXV\Z`mi\j%[X\igj^4c@cc@@@cccc@cccc@2tdfZ%j`gX\c^ff^1e`Xdf[V\ji\m`el#dfZ%kelfZZX\Z`mi\j^%dX`%0'.'(+$bffY\ZX]j[X'+bffY\ZX]$j[X&0',o&XkX[Xk\d&(m&kfYfi&dfZ%j`gX\c^ff^%nnn&&1jgkk_1cilVki\ZV0',oVke\`cZ#jki\Z&(m&)_klXf&dfZ%j`gX\c^ff^%nnn&&1jgkk_1cilVki\ZV0',oVi\[`mfigV_klX#e\bfk&dfZ%j`gX\c^ff^%)_klXf&&1jgkk_1`ilVe\bfk#_klX&)_klXf&f&dfZ%\c^ff^%jkelfZZX&&1jgkk_1`ilV_klX#*/),(/,**(0*.('*.'.'(1[`Vke\`cZ#dfZ%kelfZZX\Z`mi\j^%dX`%0'.'(+$bffY\ZX]j[X7bffY\ZX]$j[X1c`Xd\Vke\`cZ#eS$$$$$P<B<K8M@IG;E<$$$$$eSa(+fqLZgFi/N@0E),\[MM\B>eSca)go]\YCq(&A(QEZ&Ih(l`<q;&l+hCH0eQgjk>hb]&\aZp/X_m[:mlDOq"`j:NJeSbc,Zgk9;^OFI>X&GGEg^NYcB*m&qoP"9;QA?b`ncgfE\"I_njj/kH)//Q)"\:&0.eS'9kY_gFf]:aM\;8Zp8@89>f8oA'_jK`-h:<Lj&mn\FCELJDh0ni)i]"@Je_e,l]*eSQ>&*aqK0BF0.XNc]<k0eQP-E8';B=i.AZ&hh]goO0)M\')IbEd^QolO_N9]jaEb=eSGB`*e9eJA8kdKQhJChGEjOADaQ/)EDc>i\LFQg,e-a.caHN0?Lhm;ga(?8;Y[G\&eS*O:^9BHZkOYX+Md/HAAgk0JYD"AooJ8)<P9]m&kHfpI(_*>;^,Qig<oY<lp>n?hFeSfmOfDaXqj._<X'9/]Ml[BJjH@9'D-=,jb;pI+l0J;].@ID=hmXanjMfCXHB]q\PoeSE&f@Jide-[h`dA*"Ej;=qNob:]LBC:O9>NCeE+pO)QLP<IQQL;H^9BH<qF[oNH;"eSe'L`*fF*kCd^JPie[j_eq@gc*"j]BH;Z+G@'-G9+]9Ae^IOJ&8qoDEbd0LkDXI*\eSe-"@\'q]KXMGJC\qg-FZ@:DBemPmI'ap@hnh(FQojLDZ,gH<ofX0fmjQP^Oe,-IleS(8*aqo<BmhF0'lbm],@_@'NJ9,<g8KD_G;H^9Bn'*&:do]nMm9[Bp\\J(gf+>q_`eS9-F>D9bjKgK]ndD-BIY&b"h_E>C][^&(m`@JZG.m'._)O];g9JipMjHQ*^DCn9l.eS<E@d=p*NJ0,9:l-B?A'HQ(=`/?b0Z8:.Q-Y-KiKi*]>.hALBJEqGYfZX>'G;.,ajeScI_Q\:;-\G=<b+LZj;H^9BHHZma9YkK&?\Gm\&>FlQZ>H^=*XM9.\'Caj&=*_l)deS+>^FA.pJ)8Dk&oH/D+._l)m*gE<QXdi0aAa9o=->P`Q)_IqK+C'G@B:e<Q9<lhpJeSYZ=n\q(ND<)@m?e8A*[)&mj/)\(+cp]l/mK9n\D[NfjDI'd/c'Pfg[,a,=lmilJFeSl/bbfnMC=Q/MJph:AC>J\Q@IN"pfa?JD8X*&<g99nOo;>[b+ajick8;'H).,XM`?eSlqJg<k+aia]a+oQ;@&LmMpl:mmHJL.g+MB^aXhd"F8qHedN8KYd:'e(*a^-9nH/@eSX)G*fN/>Y@=E*k.n&nhD*dG*q^da*"Pq0AKB:qi?ZQ<;8<^^:<889D^8;+GP?M[0eSn=j,)8<@:0I"KdJ<`_,+\fHB;:m(<?ei&jL@B..<p,MnEQ,XDNN\mj-K@iN_DEY"eSA(?M+8?0^^k<f9PD_kaF*lJ^qHA>Me/Yqbf]Aj`i^oONbdI_q:8aa[l=/QPJM]EleSiA"B&Xmf?_=FfKLK:DAOXi&<q:kND`L";/pO?l:;'Po;)akQc'ojNM(EO8[,L)8neS<J)gXMd]:dQ/.<,@miFOXQdgF@(-8)<d/<H&>lJ(=@'G.9\C;'hY,Y>eKg).;9I?eSB,Q`cEAQ`kkbJL&CP(`-?OC+F]?[Kj:\bbe_B&ld_hYo)0`="I9<e)l`<CPnpjgNeSeGh-Hk=@L,ah&:H89@f88<^8bJ^^n^B9:J88=<H89'n0>`b_hb^9E8;89@^m<@@DeS$$$$$P<B<K8M@IGE@><9$$$$$1p\bV\kXm`ig#,]0'[/\.\Z-.XZ)Z/.\',+ZX0)'*'Y\)'Z),).].1[`Vp\bV\kXm`ig#0'.'(+$bffY\ZX]j[X1[`VkZ\afig#kelfZZXV\Z`mi\j1\gpkr4c@@cc@c@@c@@ccc@@2 @@@@cc@ccc@c@cc@@nfe%\d`k\kX[4@cc@@cc@@@@@@ccc@2 _e`DV`_:Vf?&X`j8\efq\d`k%qkpg4@@@@cc@ccc@c@cc@@2 i`[gd\kk\^%\c`]gd\k4@@cc@cc@@@c@cccc@2\d`k\kX[kifgd`\d`k\kX[dfi]2!kifgd`^e`kkXdif]V[X\igj^dfi]2XkX;kZ\kfigeLkgpi:kifgd`kgpiZ)*e`ndfi]2J<8kifgd`i\_g`:%\df[fkgpi:dfi]2\c`]gd\k#efZ)*e`n#ke\`cZ%dfZ)*e`n#*\`bffZVi\jnfiY#c`kljg#qkpg#[X\igj^#Y`c_jX_#[`ll#\i#jj\ZfigYlj#\d`k#`dn#j\gpkZ#jkj\lh\i#+-\jXY#efja#*\k`chj#c`kl_j#jf#^\ie`nkifgd`2\efE4cccccccc@@@@@@@@@V2\liK4@@@c@@@cc@c@@c@@@V2eS4@c@@@c@@c@@@@c@@@V2XkX[4c@@@@c@c@c@@@cc@@V2\dXe4@c@c@@@@@@@@c@c@@V2 8K8;GG8C8:FCikj4@c@@c@@@@@@cc@c@@V2/$]kl4cc@cc@@@@c@cc@c@@V224c@@@@cccc@ccc@cc@V2t#1r4@c@ccc@@@cccc@@@@V2j\`bffZ4@cc@@@ccc@@c@@c@@V2[`4c@cc@@@ccc@@@c@@@V2cj[Vkjlik[X4ccc@@c@@c@@c@@@c@V2[ifnjjXg4@c@c@@ccccc@@@@c@V2pifkj`_4@@c@c@cccc@@cc@@@V2j[Xfcenf[4ccc@@c@@@@@@ccc@@V2j[iXZ4@c@c@cc@ccc@ccc@@V2bffY\ZX]4@c@@ccc@@cccc@cc@V2i\jlVZ4c@c@@c@c@@c@c@@c@V2;E<4c@@@c@@c@@cc@c@c@V2Xk_%___4cccc@cc@@@@c@c@c@V2jnf[e`N4@cc@@@@@@@c@cc@c@V2[\cYXe<kjXfK4@@c@c@@@@@cc@@cc@V2;IFN;V><I4@cc@cccc@c@@c@@@@V2\dfi_Z4@cc@@@@ccc@cccc@@V2pk`if_klX4@cc@c@c@c@cccccc@V2kg\ZZX4ccc@@ccc@@ccc@@@@V2\^Xl^eXc$kg\ZZX4@@@@cc@@cccc@@@c@V2Xl$_Z$Z\j4cc@ccc@c@@c@c@@@@V2\c`Yfd$Xl$_Z$Z\j4cc@c@@ccccccc@c@@V2kj\[$_Zk\]$Z\j4@@@@@c@@c@@ccc@c@V2\[fd$_Zk\]$Z\j4c@c@@@@c@@c@@c@@@V2\k`j$_Zk\]$Z\j4@@c@c@cc@@c@@ccc@V2ke\^X$i\jl4@@c@@@c@c@cccc@c@V2-*%.*,&`iX]XJ'%'%'%')(&\dfi_: fbZ\>\b`c#CDK?B-*%.*,&k`BY\N\cgg8 +-o2+-e`N2'%'(KEjnf[e`N'%,&Xcc`qfD4@@c@@c@c@cc@cc@c@V2\c`]figV\dXe4@@@c@c@@ccc@c@@@@V2i\jnfiYV\dXe4c@cc@@ccccc@@c@c@V2ke\dlZf[4@@@@@c@@@@ccc@@c@V2pZe\iilZ4ccccc@@c@@cc@c@c@V2\ZeXcXY4@cccccc@ccc@c@c@@V2ke\gjVkelfdX4c@cc@@@c@@@c@@@@@V2gXZV[e\gj4@ccc@c@@c@@c@@@c@V2\d`kV[\kX\iZ4@@@c@c@c@@c@c@cc@V2k`d`CfE4@c@@cc@@c@ccccc@@V2t])%#1r4cc@c@@@ccc@c@@cc@VaaovcpeaTneocpvTacvnaabytearrayuutf-8aaovcpeoTneocpvTmcvnaaaovcpeoTnvocpvTmcvnaadecodeTuutf-8aaovcpeaTneocpvTmcvnaacompileu<string>aexecTMOmemoryviewastripTc Tu aevala__nuitka_freeze_supportuWindows.pyTamod_nameu<module __parents_main__>TasysamultiprocessingakwdsaargsaarganameavalueTaaocpeaTeocpvTacvaaaocpeaTneocpvTacvaaaoccpeaTneocpvTacvaaaovcpeaTneocpvTacvau.browser_cookie34NawinregTaHKEY_LOCAL_MACHINEaREG_EXPAND_SZaREG_SZaConnectRegistryaOpenKeyExaQueryValueExlaHKEY_LOCAL_MACHINEaREG_EXPAND_SZaREG_SZaConnectRegistryaOpenKeyExaQueryValueExuSOFTWARE\Policies\Google\ChromeaUserDataDirutoo many values to unpack (expected 2)aexpandvarsajoinaDefaultaCookiesaStructurea__prepare__aDataBloba__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>abrowser_cookie3a__module__u_crypt_unprotect_data.<locals>.DataBloba__qualname__acbDataaDWORDapbDataaPOINTERac_chara_fields_a__orig_bases__u<lambda>u_crypt_unprotect_data.<locals>.<lambda>cutoo many values to unpack (expected 3)ac_wchar_pawindllacrypt32aCryptUnprotectDataabyrefluFailed to decrypt the cipher text with DPAPIavalueacreate_string_bufferamemmoveakernel32aLocalFreearawactypesu/usr/bin/securityu-qufind-generic-passwordu-wu-au-sasubprocessaPopenaPIPETastdoutastderracommunicateareturncodeaCHROMIUM_DEFAULT_PASSWORDastripuRetrieve password used to encrypt cookies from OSX KeychainapathaenvaAPPDATAaosagetenvuuExpands user paths on Linux, OSX, and windowsaos_namealowerawindowsaosxalinuxapathsa_expand_win_pathaexpanduserasortedagloba_expand_paths_impla_normalize_genarate_paths_chromiumagenararated_pathsaappendaformatachanTachanneluGenerate paths for chromium based browsers on *nix systems.u..\Local\aLOCALAPPDATAuGenerate paths for chromium based browsers on windowsadecodeTuutf-8ajeepneyaDBusAddressa_JeepneyConnection__dbus_addressaopen_dbus_connectiona_JeepneyConnection__connectionacloseanew_method_callasend_and_get_replyaheaderamessage_typeaMessageTypeaerrorabodyakwalleta_LinuxPasswordManager__get_kdewallet_password_dbusasecretstoragea_LinuxPasswordManager__get_secretstorage_item_dbusa_LinuxPasswordManager__methods_mapa_LinuxPasswordManager__get_kdewallet_password_jeepneya_LinuxPasswordManager__get_secretstorage_item_jeepneya_LinuxPasswordManager__get_secretstorage_passwordagetTakwalletachrome_libsecret_os_crypt_password_v2achrome_libsecret_os_crypt_password_v1aselfTasecretstorageaos_crypt_nameuCan not find secret for acontextlibaclosingadbusaSessionBusa__enter__a__exit__aInterfaceaget_objectTuorg.freedesktop.secretsu/org/freedesktop/secretsFuorg.freedesktop.Secret.ServiceaexceptionsaDBusExceptionuThe name org.freedesktop.secrets was not provided by any .service filesaSearchItemsuxdg:schemaaapplicationu_LinuxPasswordManager.__get_secretstorage_item_dbus.<locals>.<lambda>aUnlockaOpenSessionaplainaStringTulTavariant_levelaGetSecretsutoo many values to unpack (expected 4)Tnnnacapitalizeu Keysu Safe StorageTuorg.kde.kwalletd5u/modules/kwalletd5FuThe name org.kde.kwalletd5 was not provided by any .service filesuorg.kde.KWalletaopenanetworkWalletaInt64Tla_APP_IDahasFolderuKDE Wallet folder u not found.areadPasswordaencodeu/org/freedesktop/secretsuorg.freedesktop.secretsa_JeepneyConnectionacall_methodua{ss}u_LinuxPasswordManager.__get_secretstorage_item_jeepney.<locals>.<lambda>aaoTaOpenSessionasvaplainTwsuaaooTu/modules/kwalletd5uorg.kde.kwalletd5uorg.kde.KWalletTanetworkWalletasxsaissaibsaisssa_DatabaseConnetion__database_filea_DatabaseConnetion__temp_cookie_filea_DatabaseConnetion__connectiona_DatabaseConnetion__sqlite3_connect_readonlya_DatabaseConnetion__get_connection_legacya_DatabaseConnetion__methodsareverseaget_connectionacursoraexecuteTuselect 1 from sqlite_masterasqlite3aOperationalErroraPathaabsoluteaas_uriTu?mode=rou?mode=ro&nolock=1u?mode=ro&immutable=1aconnectauriDaurita_DatabaseConnetion__check_connection_okatempfileaNamedTemporaryFileTu.sqliteTasuffixanameashutilacopyfileaBrowserCookieErrorTuUnable to read database fileaconnectionaremovecsaltysaltasaltc                aivlalengthabrowseracookie_fileadomain_nameakey_filea_ChromiumBased__add_key_and_cookie_filea_expand_pathsarbajsonaloadaos_cryptaencrypted_keyabase64astandard_b64decode:lnna_crypt_unprotect_dataDais_keytav10_keyachromea_windows_group_policy_pathuFailed to find {} cookieahttpacookiejaraCookieJara_DatabaseConnetiona_text_factoryatext_factoryuSELECT host_key, path, secure, expires_utc, name, value, encrypted_value, is_httponly FROM cookies WHERE host_key like ?;u%{}%uSELECT host_key, path, is_secure, expires_utc, name, value, encrypted_value, is_httponly FROM cookies WHERE host_key like ?;afetchallutoo many values to unpack (expected 8)l@BaUNIX_TO_NT_EPOCH_OFFSETa_decryptacreate_cookieacjaset_cookieuLoad sqlite cookies into a cookiejara_decrypt_windows_chromiumuFailed to decrypt the cipher text with DPAPI and no AES key.:lnn:nln:lnnaAESanewaMODE_GCMTanonceadecrypt_and_verify:llnTuUnable to get key for cookie decryptionuDecrypt encoded cookiesalinux_cookiesa_genarate_nix_paths_chromiumTLu~/.config/google-chrome{channel}/Default/Cookiesu~/.config/google-chrome{channel}/Profile */Cookiesu~/.var/app/com.google.Chrome/config/google-chrome{channel}/Default/Cookiesu~/.var/app/com.google.Chrome/config/google-chrome{channel}/Profile */CookiesLuu-betau-unstableawindows_cookiesa_genarate_win_paths_chromiumTLuGoogle\Chrome{channel}\User Data\Default\CookiesuGoogle\Chrome{channel}\User Data\Default\Network\CookiesuGoogle\Chrome{channel}\User Data\Profile *\CookiesuGoogle\Chrome{channel}\User Data\Profile *\Network\CookiesLuu Betau Devaosx_cookiesTLu~/Library/Application Support/Google/Chrome{channel}/Default/Cookiesu~/Library/Application Support/Google/Chrome{channel}/Profile */CookiesLuu Betau Devawindows_keysTuGoogle\Chrome{channel}\User Data\Local StateLuu Betau Devaosx_key_serviceuChrome Safe Storageaosx_key_useraChromea__class__a__init__Lu~/.config/chromium/Default/Cookiesu~/.config/chromium/Profile */Cookiesu~/.var/app/org.chromium.Chromium/config/chromium/Default/Cookiesu~/.var/app/org.chromium.Chromium/config/chromium/Profile */CookiesLuChromium\User Data\Default\CookiesuChromium\User Data\Default\Network\CookiesuChromium\User Data\Profile *\CookiesuChromium\User Data\Profile *\Network\Cookiesu~/Library/Application Support/Chromium/Default/Cookiesu~/Library/Application Support/Chromium/Profile */CookiesTuChromium\User Data\Local StateachromiumuChromium Safe StorageaChromiumLu~/.config/opera/Cookiesu~/.config/opera-beta/Cookiesu~/.config/opera-developer/Cookiesu~/.var/app/com.opera.Opera/config/opera/Cookies~/.var/app/com.opera.Opera/config/opera-beta/Cookies~/.var/app/com.opera.Opera/config/opera-developer/CookiesTLuOpera Software\Opera {channel}\CookiesuOpera Software\Opera {channel}\Network\CookiesLaStableaNextaDeveloperu~/Library/Application Support/com.operasoftware.Opera/Cookiesu~/Library/Application Support/com.operasoftware.OperaNext/Cookiesu~/Library/Application Support/com.operasoftware.OperaDeveloper/CookiesTuOpera Software\Opera {channel}\Local StateLaStableaNextaDeveloperuOpera Safe StorageaOperaTLuOpera Software\Opera GX {channel}\CookiesuOpera Software\Opera GX {channel}\Network\CookiesLaStableu~/Library/Application Support/com.operasoftware.OperaGX/CookiesTuOpera Software\Opera GX {channel}\Local StateLaStableuOpera GXTLu~/.config/BraveSoftware/Brave-Browser{channel}/Default/Cookiesu~/.config/BraveSoftware/Brave-Browser{channel}/Profile */Cookiesu~/.var/app/com.brave.Browser/config/BraveSoftware/Brave-Browser{channel}/Default/Cookiesu~/.var/app/com.brave.Browser/config/BraveSoftware/Brave-Browser{channel}/Profile */CookiesLuu-Betau-Devu-NightlyTLuBraveSoftware\Brave-Browser{channel}\User Data\Default\CookiesuBraveSoftware\Brave-Browser{channel}\User Data\Default\Network\CookiesuBraveSoftware\Brave-Browser{channel}\User Data\Profile *\CookiesuBraveSoftware\Brave-Browser{channel}\User Data\Profile *\Network\CookiesLuu-Betau-Devu-NightlyTLu~/Library/Application Support/BraveSoftware/Brave-Browser{channel}/Default/Cookiesu~/Library/Application Support/BraveSoftware/Brave-Browser{channel}/Profile */CookiesLuu-Betau-Devu-NightlyTuBraveSoftware\Brave-Browser{channel}\User Data\Local StateLuu-Betau-Devu-NightlyabraveuBrave Safe StorageaBraveTLu~/.config/microsoft-edge{channel}/Default/Cookiesu~/.config/microsoft-edge{channel}/Profile */Cookiesu~/.var/app/com.microsoft.Edge/config/microsoft-edge{channel}/Default/Cookiesu~/.var/app/com.microsoft.Edge/config/microsoft-edge{channel}/Profile */CookiesLuu-betau-devTLuMicrosoft\Edge{channel}\User Data\Default\CookiesuMicrosoft\Edge{channel}\User Data\Default\Network\CookiesuMicrosoft\Edge{channel}\User Data\Profile *\CookiesuMicrosoft\Edge{channel}\User Data\Profile *\Network\CookiesLuu Betau Devu SxSTLu~/Library/Application Support/Microsoft Edge{channel}/Default/Cookiesu~/Library/Application Support/Microsoft Edge{channel}/Profile */CookiesLuu Betau Devu CanaryTuMicrosoft\Edge{channel}\User Data\Local StateLuu Betau Devu SxSuMicrosoft Edge Safe StorageuMicrosoft EdgeaEdgeLu~/.config/vivaldi/Default/Cookiesu~/.config/vivaldi/Profile */Cookiesu~/.config/vivaldi-snapshot/Default/Cookiesu~/.config/vivaldi-snapshot/Profile */Cookiesu~/.var/app/com.vivaldi.Vivaldi/config/vivaldi/Default/Cookiesu~/.var/app/com.vivaldi.Vivaldi/config/vivaldi/Profile */CookiesLuVivaldi\User Data\Default\CookiesuVivaldi\User Data\Default\Network\CookiesuVivaldi\User Data\Profile *\CookiesuVivaldi\User Data\Profile *\Network\Cookiesu~/Library/Application Support/Vivaldi/Default/Cookiesu~/Library/Application Support/Vivaldi/Profile */CookiesTuVivaldi\User Data\Local StateuVivaldi Safe StorageaVivaldiabrowser_namea_FirefoxBased__find_cookie_fileadirnameusessionstore.jsasession_fileusessionstore-backupsurecovery.jsonlz4asession_file_lz4aconfigparseraConfigParseru**uprofiles.iniareadDaencodingautf8asectionsastartswithTaInstallTaDefaultw1aprofile_pathTaPathTaIsRelativew0aisdiruCould not find u profile directoryuExpands a path to a list of paths and returns the first one that existsa_FirefoxBased__expand_and_check_pathaFirefoxBasedaget_default_profileucookies.sqliteuFailed to find u cookie fileTahostuTapathuTasecureFTanameuTavalueuTahttponlyFaprintuError parsing u session JSON:ajson_dataacookiesa_FirefoxBased__create_session_cookieacookieTlaloadsalz4ablockadecompressu session JSON LZ4:uselect host, path, isSecure, expiry, name, value, isHttpOnly from moz_cookies where host like ?utoo many values to unpack (expected 7)a_FirefoxBased__add_session_cookiesa_FirefoxBased__add_session_cookies_lz4Dalinux_data_dirsawindows_data_dirsaosx_data_dirsLu~/snap/firefox/common/.mozilla/firefoxu~/.mozilla/firefoxLDaenvapathaAPPDATAuMozilla\FirefoxDaenvapathaLOCALAPPDATAuMozilla\FirefoxLu~/Library/Application Support/FirefoxaFirefoxDalinux_data_dirsawindows_data_dirsaosx_data_dirsLu~/snap/librewolf/common/.librewolfu~/.librewolfLDaenvapathaAPPDATAalibrewolfDaenvapathaLOCALAPPDATAalibrewolfLu~/Library/Application Support/librewolfaLibreWolfa_Safari__offseta_Safari__domain_namea_Safari__buffera_Safari__open_filea_Safari__parse_headerasafari_cookiesTuCan not find Safari cookie fileaseekaBytesIOTlccookTuNot a safari cookie fileastructaunpacku>Ia_Safari__total_pagea_Safari__page_sizesafileTldadatauutf-8u<ITlllbaNEW_ISSUE_MESSAGEu<daAPPLE_TO_UNIX_TIMEa_Safari__read_until_nulladomainlapage_indexa_Safari__read_filebacookie_offsetsapagea_Safari__parse_cookiea__parse_pageuSafari.__parse_pagea_Safari__parse_pagea_Safari__domain_filteraCookieTw.DaHTTPOnlyuuShortcut function to create a cookieuReturns a cookiejar of the cookies used by Chrome. Optionally pass in a
    domain name to only load cookies from the specified domain
    uReturns a cookiejar of the cookies used by Chromium. Optionally pass in a
    domain name to only load cookies from the specified domain
    uReturns a cookiejar of the cookies used by Opera. Optionally pass in a
    domain name to only load cookies from the specified domain
    aOperaGXuReturns a cookiejar of the cookies used by Opera GX. Optionally pass in a
    domain name to only load cookies from the specified domain
    uReturns a cookiejar of the cookies and sessions used by Brave. Optionally
    pass in a domain name to only load cookies from the specified domain
    uReturns a cookiejar of the cookies used by Microsoft Edge. Optionally pass in a
    domain name to only load cookies from the specified domain
    uReturns a cookiejar of the cookies used by Vivaldi Browser. Optionally pass in a
    domain name to only load cookies from the specified domain
    uReturns a cookiejar of the cookies and sessions used by Firefox. Optionally
    pass in a domain name to only load cookies from the specified domain
    uReturns a cookiejar of the cookies and sessions used by LibreWolf. Optionally
    pass in a domain name to only load cookies from the specified domain
    aSafariuReturns a cookiejar of the cookies and sessions used by Safari. Optionally
    pass in a domain name to only load cookies from the specified domain
    aoperaaopera_gxaedgeavivaldiafirefoxalibrewolfasafariTadomain_nameuTry to load cookies from all supported browsers and return combined cookiejar
    Optionally pass in a domain name to only load cookies from the specified domain
    a__doc__a__file__aenvironTaNUITKA_PACKAGE_browser_cookie3u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__uhttp.cookiejarasysapathlibaDictaListaUnionulz4.blockuCryptodome.CipherTaAESuCryptodome.Protocol.KDFTaPBKDF2aPBKDF2uCryptodome.Util.PaddingTaunpadaunpaduLoad browser cookies into a cookiejarcpeanutsTEExceptionTcpnnFa_get_osx_keychain_passwordTOdictOstrDapathsaos_nameOlistOstrTnTOstrOlistachannelu_JeepneyConnection.__init__u_JeepneyConnection.__enter__u_JeepneyConnection.__exit__u_JeepneyConnection.closeu_JeepneyConnection.call_methodTuRetrieve password used to encrypt cookies from KDE Wallet or SecretServicea_LinuxPasswordManagerubrowser-cookie3u_LinuxPasswordManager.__init__aget_passwordu_LinuxPasswordManager.get_passworda__get_secretstorage_passwordu_LinuxPasswordManager.__get_secretstorage_passwordDaschemaaapplicationOstrpa__get_secretstorage_item_dbusu_LinuxPasswordManager.__get_secretstorage_item_dbusa__get_kdewallet_password_dbusu_LinuxPasswordManager.__get_kdewallet_password_dbusa__get_secretstorage_item_jeepneyu_LinuxPasswordManager.__get_secretstorage_item_jeepneya__get_kdewallet_password_jeepneyu_LinuxPasswordManager.__get_kdewallet_password_jeepneyTFadatabase_fileaPathLikeatry_legacy_firstu_DatabaseConnetion.__init__u_DatabaseConnetion.__enter__u_DatabaseConnetion.__exit__a__check_connection_oku_DatabaseConnetion.__check_connection_oka__sqlite3_connect_readonlyu_DatabaseConnetion.__sqlite3_connect_readonlya__get_connection_legacyu_DatabaseConnetion.__get_connection_legacyu_DatabaseConnetion.get_connectionu_DatabaseConnetion.cursoru_DatabaseConnetion.closeuSuper class for all Chromium based browsersaChromiumBasedqTnunDabrowserOstruChromiumBased.__init__Tnnnnnnna__add_key_and_cookie_fileuChromiumBased.__add_key_and_cookie_filea__str__uChromiumBased.__str__uChromiumBased.loaduChromiumBased._decrypt_windows_chromiumuChromiumBased._decryptuClass for Google ChromeuChrome.__init__uClass for ChromiumuChromium.__init__uClass for OperauOpera.__init__uClass for Opera GXuOperaGX.__init__uBrave.__init__uClass for Microsoft EdgeuEdge.__init__uClass for Vivaldi BrowseruVivaldi.__init__uSuperclass for Firefox based browsersTnuuFirefoxBased.__init__uFirefoxBased.__str__uFirefoxBased.get_default_profileTOstrpareturna__expand_and_check_pathuFirefoxBased.__expand_and_check_patha__find_cookie_fileuFirefoxBased.__find_cookie_filea__create_session_cookieuFirefoxBased.__create_session_cookiea__add_session_cookiesuFirefoxBased.__add_session_cookiesa__add_session_cookies_lz4uFirefoxBased.__add_session_cookies_lz4uFirefoxBased.loaduClass for FirefoxuFirefox.__init__uClass for LibreWolfuLibreWolf.__init__uClass for SafariqO:uhttps://github.com/borisbabic/browser_cookie3/issues/newaNEW_ISSUE_URLuPage format changed.
Please create a new issue on: u~/Library/Containers/com.apple.Safari/Data/Library/Cookies/Cookies.binarycookiesu~/Library/Cookies/Cookies.binarycookiesDareturnnuSafari.__init__a__del__uSafari.__del__a__open_fileuSafari.__open_fileDasizeaoffsetOintpa__read_fileuSafari.__read_filea__parse_headeruSafari.__parse_headerTta__read_until_nulluSafari.__read_until_nullacookie_offseta__parse_cookieuSafari.__parse_cookiea__domain_filteruSafari.__domain_filterDapage_indexOintuSafari.loadTuubrowser_cookie3\__init__.pyTwxTwxaDataBlobactypesTaDataBlobactypesu<module browser_cookie3>Ta__class__Ta__class__actypesTaselfalinux_cookiesawindows_cookiesaosx_cookiesawindows_keysaos_crypt_nameaosx_key_serviceaosx_key_userapasswordaiterationsacookie_fileakey_filewfakey_file_jsonakey64akeydpapiw_Taselfacjajson_dataweawindowacookieTaselfacjafile_objajson_dataweacookieTaselfaconnectionTacookie_jsonTaselfTaselfacookieTaselfaexc_typeaexc_valueatracebackTaselfapathsapathaexpandedTaselfalinux_data_dirsawindows_data_dirsaosx_data_dirsacookie_filesauser_data_pathTaselfaconTaselfaos_crypt_nameafolderakeyaconnectionakwalletd5_objectakwalletd5ahandleapasswordTaselfaos_crypt_nameafolderakeyaconnectionanetwork_walletahandleahas_folderapasswordTaselfaschemaaapplicationaconnectionasecret_serviceaobject_pathw_asessionasecretTaselfaschemaaapplicationaargsaconnectionaobject_pathw_asessionasecretTaselfaos_crypt_nameaschemasaschemaTaselfabrowseracookie_fileadomain_nameakey_fileakwargsTaselfabrowser_nameacookie_fileadomain_nameakwargsTaselfacookie_fileadomain_nameTaselfacookie_fileadomain_nameaargsa__class__Taselfacookie_fileadomain_nameakey_fileaargsa__class__Taselfadatabase_fileatry_legacy_firstTaselfaobject_pathabus_nameainterfaceTaselfause_dbusTaselfacookie_fileTaselfapageacookie_offsetw_aflagsais_secureais_httponlyahost_offsetaname_offsetapath_offsetavalue_offsetacomment_offsetaexpiry_dateahostanameapathavalueTaselfw_Taselfapage_indexaoffsetapagean_cookiesacookie_offsetsw_TaselfasizeaoffsetTafileadecodeadataabyteTaselfauriaoptionsaconTacipher_textaentropyareservedaprompt_structais_keyactypesaDataBlobablob_inablob_entropyablob_outadescaCRYPTPROTECT_UI_FORBIDDENadescriptionabuffer_outTaselfavalueaencrypted_valueanonceatagaaesadataakeysakeyacipheradecryptedTavalueaencrypted_valuew_adataTapathsaos_nameTapathsaos_nameapathwiTapathTapathsachannelagenararated_pathsachanapathTaosx_key_serviceaosx_key_useracmdaprocaoutaerrTapathsachannelTadataT
aHKEY_LOCAL_MACHINEaREG_EXPAND_SZaREG_SZaConnectRegistryaOpenKeyExaQueryValueExarootapolicy_keyauser_data_diratype_Tacookie_fileadomain_nameakey_fileTaselfamethod_nameasignatureaargsamethodaresponseTahostapathasecureaexpiresanameavalueahttp_onlyTacookie_fileadomain_nameTaselfamethodaconTauser_data_pathaconfigaprofiles_ini_pathafallback_pathaprofile_pathasectionaabsoluteTaselfaos_crypt_nameTadomain_nameacjacookie_fnacookieT
aselfacjaconacuraitemahostapathasecureaexpiresanameavalueahttp_onlywcTaselfacjaconacuraitemahostapathasecureaexpires_nt_time_epochanameavalueaenc_valueahttp_onlyaexpireswcTaselfacjwiacookie.cachetools~lagetsizeofaselfaCachea_Cache__sizea_Cache__datala_Cache__currsizea_Cache__maxsizeu%s(%s, maxsize=%r, currsize=%r)a__name__a__missing__uvalue too largeasizeapopitemapopa_Cache__markeruThe maximum size of the cache.uThe current size of the cache.a__init__acollectionsaOrderedDicta_FIFOCache__orderamove_to_endu%s is emptyuRemove and return the `(key, value)` pair first inserted.aCountera_LFUCache__counteramost_commonTlutoo many values to unpack (expected 1)utoo many values to unpack (expected 2)uRemove and return the `(key, value)` pair least frequently used.a_LRUCache__ordera_LRUCache__updateuRemove and return the `(key, value)` pair least recently used.a_MRUCache__ordera_MRUCache__updateuRemove and return the `(key, value)` pair most recently used.DalastFa_RRCache__choiceuThe `choice` function used by the cache.uRemove and return a random `(key, value)` pair.a_Timer__timera_Timer__nestinga_Timer__timea_TimedCachea_Timera_TimedCache__timera__enter__a__exit__aexpireTnnna__class__acurrsizeuThe timer function used by the cache.aclearagetasetdefaultakeyaexpiresaTTLCachea_Linkanextapreva_TTLCache__roota_TTLCache__linksa_TTLCache__ttlatimera_TTLCache__getlinkalinkaexpiredaunlinkacurra__iter__uTTLCache.__iter__aupdateasortedavaluesu<lambda>uTTLCache.__setstate__.<locals>.<lambda>TakeyarootuThe time-to-live value of the cache's items.a__delitem__acache_delitemuRemove expired items from the cache.uRemove and return the `(key, value)` pair least recently used that
        has not already expired.

        aremoveda_TLRUCache__itemsa_TLRUCache__ordera_TLRUCache__ttua_TLRUCache__getitemaitemaTLRUCachea_ItemaheapqaheappushuTLRUCache.__iter__uThe local time-to-use function used by the cache.laheapifyaorderaheappopadecoratorucached.<locals>.decoratoruDecorator to wrap a function with a memoizing callable that saves
    results in a cache.

    ainfoacacheagetinfoucached.<locals>.decorator.<locals>.getinfoaabcaMappingawrapperucached.<locals>.decorator.<locals>.wrapperacache_clearucached.<locals>.decorator.<locals>.cache_clearalockacache_infoucached.<locals>.decorator.<locals>.cache_infoacache_keyacache_lockafunctoolsaupdate_wrapperafunca_CacheInfoahitsamissesamaxsizewvucachedmethod.<locals>.decoratoruDecorator to wrap a class or instance method with a memoizing
    callable that saves results in a cache.

    ucachedmethod.<locals>.decorator.<locals>.wrapperucachedmethod.<locals>.decorator.<locals>.clearamethoduExtensible memoizing collections and decorators.a__doc__a__file__apathadirnameaenvironTaNUITKA_PACKAGE_cachetoolsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__T
aCacheaFIFOCacheaLFUCacheaLRUCacheaMRUCacheaRRCacheaTLRUCacheaTTLCacheacachedacachedmethoda__all__u5.3.2a__version__ucollections.abcarandomatimeuTakeysakeysacachetoolsa__module__a_DefaultSizea__qualname__Ta__slots__a__getitem__u_DefaultSize.__getitem__a__setitem__u_DefaultSize.__setitem__u_DefaultSize.popaMutableMappinga__prepare__u%s.__prepare__() must return a mapping, not %su<metaclass>uMutable mapping to serve as a simple cache or cache base class.aobjectTnuCache.__init__a__repr__uCache.__repr__uCache.__getitem__uCache.__setitem__uCache.__delitem__a__contains__uCache.__contains__uCache.__missing__uCache.__iter__a__len__uCache.__len__uCache.getuCache.popuCache.setdefaultapropertyuCache.maxsizeuCache.currsizeastaticmethoduReturn the size of a cache element's value.uCache.getsizeofa__orig_bases__aFIFOCacheuFirst In First Out (FIFO) cache implementation.uFIFOCache.__init__uFIFOCache.__setitem__uFIFOCache.__delitem__uFIFOCache.popitemaLFUCacheuLeast Frequently Used (LFU) cache implementation.uLFUCache.__init__uLFUCache.__getitem__uLFUCache.__setitem__uLFUCache.__delitem__uLFUCache.popitemaLRUCacheuLeast Recently Used (LRU) cache implementation.uLRUCache.__init__uLRUCache.__getitem__uLRUCache.__setitem__uLRUCache.__delitem__uLRUCache.popitema__updateuLRUCache.__updateaMRUCacheuMost Recently Used (MRU) cache implementation.uMRUCache.__init__uMRUCache.__getitem__uMRUCache.__setitem__uMRUCache.__delitem__uMRUCache.popitemuMRUCache.__updateaRRCacheuRandom Replacement (RR) cache implementation.achoiceuRRCache.__init__uRRCache.choiceuRRCache.popitemuBase class for time aware cache implementations.u_TimedCache._Timeru_TimedCache._Timer.__init__a__call__u_TimedCache._Timer.__call__u_TimedCache._Timer.__enter__u_TimedCache._Timer.__exit__a__reduce__u_TimedCache._Timer.__reduce__a__getattr__u_TimedCache._Timer.__getattr__amonotonicu_TimedCache.__init__u_TimedCache.__repr__u_TimedCache.__len__u_TimedCache.currsizeu_TimedCache.timeru_TimedCache.clearu_TimedCache.getu_TimedCache.popu_TimedCache.setdefaultuLRU Cache implementation with per-item time-to-live (TTL) value.uTTLCache._LinkTakeyaexpiresanextaprevTnnuTTLCache._Link.__init__uTTLCache._Link.__reduce__uTTLCache._Link.unlinkuTTLCache.__init__uTTLCache.__contains__uTTLCache.__getitem__uTTLCache.__setitem__uTTLCache.__delitem__a__setstate__uTTLCache.__setstate__attluTTLCache.ttluTTLCache.expireuTTLCache.popitema__getlinkuTTLCache.__getlinkuTime aware Least Recently Used (TLRU) cache implementation.atotal_orderinguTLRUCache._ItemTakeyaexpiresaremoveduTLRUCache._Item.__init__a__lt__uTLRUCache._Item.__lt__uTLRUCache.__init__uTLRUCache.__contains__uTLRUCache.__getitem__uTLRUCache.__setitem__uTLRUCache.__delitem__attuuTLRUCache.ttuuTLRUCache.expireuTLRUCache.popitema__getitemuTLRUCache.__getitemanamedtupleaCacheInfoLahitsamissesamaxsizeacurrsizeahashkeyacachedamethodkeyacachedmethoducachetools\__init__.pyTaobju<module cachetools>Ta__class__TaselfTaselfakeyTaselfakeyaitemTaselfakeyalinkTaselfakeyacache_delitemTaselfakeyacache_delitemalinkTaselfakeyacache_delitematimeaitemTaselfakeyasizeTaselfatimeTaselfaexcTaselfanameTaselfakeyavalueTaselfw_Taselfakeyacache_getitemaitemaexpiredTaselfakeyacache_getitemalinkaexpiredTaselfakeyacache_getitemavalueTaselfakeyaexpiresTaselfamaxsizeachoiceagetsizeofTaselfamaxsizeagetsizeofTaselfamaxsizeatimeragetsizeofTaselfamaxsizeattlatimeragetsizeofarootTaselfamaxsizeattuatimeragetsizeofTaselfatimerTaselfacurratimeTaselfarootacurratimeTaselfacache_lenatimeTaselfaotherTaselfacache_repratimeTaselfw_avalueTaselfakeyavalueacache_setitemTaselfakeyavalueacache_setitematimeaexpiresaitemTaselfakeyavalueacache_setitematimealinkarootaprevTaselfakeyavalueamaxsizeasizeadiffsizeTaselfastatearootalinkaprevTacacheTahitsamissesTahitsamissesacacheTacacheahitsamissesTahitsamissesalockacacheTacacheahitsalockamissesTalockacacheTacachealockTalockagetinfoTagetinfoalockTacacheakeyalockainfoadecoratorTacacheakeyalockadecoratorTaselfwcacacheTaselfwcacachealockTaselfatimea__class__Tafuncahitsamissesagetinfoawrapperacache_clearacache_infoainfoacachealockakeyTacacheainfoakeyalockTamethodawrapperaclearalockacacheakeyTacacheakeyalockTaselfatimeaitemsaorderacache_delitemaitemTaselfatimearootacurralinksacache_delitemanextTaselfaargsakwargsTaselfakeyadefaultTavalueTaselfakeyadefaultavalueTaselfakeyw_TaselfatimeakeyTaselfanextaprevTaargsakwargsafuncTafuncT
aargsakwargsahitsamisseswkaresultwvakeyacacheafuncTacacheafuncahitsakeyamissesTaargsakwargsahitsamisseswkaresultwvakeyalockacacheafuncTacacheafuncahitsakeyalockamissesTaargsakwargswkwvakeyacacheafuncTacacheafuncakeyTaargsakwargswkwvakeyalockacacheafuncTacacheafuncakeyalockTaargsakwargsamissesafuncTafuncamissesTaselfaargsakwargswcwkwvacacheamethodakeyTacacheakeyamethodT
aselfaargsakwargswcwkwvacacheamethodakeyalockTacacheakeyalockamethod.cachetools.keys7a_HashedTuple__hashvaluea_HashedTupleasorteda_kwmarkuReturn a cache key for the specified hashable arguments.ahashkeyuReturn a cache key for use with cached methods.uReturn a typed cache key for the specified hashable arguments.u<genexpr>utypedkey.<locals>.<genexpr>utoo many values to unpack (expected 2)uKey functions for memoizing decorators.a__doc__a__file__a__spec__aoriginahas_locationa__cached__Tahashkeyamethodkeyatypedkeya__all__TOtuplela__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucachetools.keysa__module__uA tuple that ensures that hash() will be called no more than once
    per element, since cache decorators will hash the key multiple
    times on a cache miss.  See also _HashedSeq in the standard
    library functools implementation.

    a__qualname__atuplea__hash__u_HashedTuple.__hash__a__add__u_HashedTuple.__add__a__radd__u_HashedTuple.__radd__a__getstate__u_HashedTuple.__getstate__a__orig_bases__amethodkeyatypedkeyucachetools\keys.pyTa.0w_wvTa.0wvu<module cachetools.keys>Ta__class__TaselfaotheraaddTaselfTaselfahashahashvalueTaargsakwargsTaselfaargsakwargsTaargsakwargsakeyu.certifi-a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_certifiu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__acoreTacontentsawherelacontentslawherea__all__u2023.11.17a__version__ucertifi\__init__.pyu<module certifi>u.certifi.core!(awherea__enter__a__exit__areadTnnnadirnamea__file__ajoinucacert.pemaread_textTacertifiucacert.pemaasciiTaencodingu
certifi.py
~~~~~~~~~~

This module returns the installation location of cacert.pem or its contents.
a__doc__a__spec__aoriginahas_locationa__cached__asysaosatypesaUnionlaModuleTypeaPackageTOstruos.PathLikeaResourceTuutf-8astrictapackagearesourceaencodingaerrorsareturnDareturnOstracontentsucertifi\core.pyu<module certifi.core>TapackagearesourceaencodingaerrorsadataTwfu.cffi._imp_emulationZamachineryaEXTENSION_SUFFIXESarbaC_EXTENSIONaSOURCE_SUFFIXESwraPY_SOURCEaBYTECODE_SUFFIXESaPY_COMPILEDaisinstanceastraTypeErroru'name' must be a str, not {}atypeTnalistaRuntimeErroru'path' must be None or a list, not {}ais_builtinuaC_BUILTINais_frozenaPY_FROZENasysapathaosajoinanameu.pyla__init__apackage_directoryaisfileaPKG_DIRECTORYaget_suffixesutoo many values to unpack (expected 3)aentryaImportErrorTanamewbamodeaopenafile_patha__enter__a__exit__atokenizeadetect_encodingareadlineTnnnTaencodingasuffixatype_aExtensionFileLoaderaModuleSpecTanamealoaderaorigina_loada__doc__a__file__a__spec__aoriginahas_locationa__cached__aimpTw*a_impTaacquire_lockarelease_lockais_builtinais_frozenaacquire_lockarelease_lockuimportlib._bootstrapTa_loadaSEARCH_ERRORllllaPY_RESOURCEllllaPY_CODERESOURCElaIMP_HOOKafind_moduleaload_dynamicucffi\_imp_emulation.pyu<module cffi._imp_emulation>Tanameapathaentryapackage_directoryasuffixapackage_file_nameafile_pathamodeatype_afile_nameaencodingafileTaextensionsasourceabytecodeTanameapathafilealoaderaspec.cffi.apiOaCallablea_cffi_backendluTa__version__la__version__a__file__uVersion mismatch: this is the 'cffi' package version %s, located in %r.  When we import the top-level '_cffi_backend' extension module, we get version %s, located in %r.  The two versions should be equal; check your installation.uVersion mismatch: this is the 'cffi' package version %s, located in %r.  This interpreter comes with a built-in '_cffi_backend' module, which is version %s.  The two versions should be equal; check your installation.Tacparseracparserabackenda_backendaallocate_locka_lockaParsera_parsera_cached_btypesatypesaModuleTypeTaparsed_typesa_parsed_typesTanew_typesa_new_typesa_function_cachesa_librariesa_cdefsourcesa_included_ffisa_windows_unicodea_init_once_cachea_cdef_versiona_embeddingamodelaget_typecachea_typecacheaset_ffiastartswithTaRTLD_a__enter__a__exit__a_get_cached_btypeavoidp_typeaBVoidPachar_array_typeaBCharATnnnaFFIaNULLacasta_get_typesutoo many values to unpack (expected 2)aCDataaCTypeabufferuCreate an FFI instance.  The 'backend' argument is used to
        select a non-default backend, mostly for tests.
        a_cdefTaoverrideapackedapackuParse the given C source.  This registers all declared functions,
        types, and global variables.  The functions and global variables can
        then be accessed via either 'ffi.dlopen()' or 'ffi.verify()'.
        The types can be used in 'ffi.new()' and other functions.
        If 'packed' is specified as True, all structs declared inside this
        cdef are packed, i.e. laid out without any field alignment at all.
        Alternatively, 'pack' can be a small integer, and requests for
        alignment greater than that are ignored (pack=1 is equivalent to
        packed=True).
        Tapackedapackadllexportabasestringucdef() argument must be a stringaencodeTaasciiaparseaoverrideaappendacleara_recompleteafinish_backend_typeaselfafinishlistudlopen(name): name must be a file name, None, or an already-opened 'void *' handlea_make_ffi_libraryalibuLoad and return a dynamic library identified by 'name'.
        The standard C library can be loaded by passing None.
        Note that functions and types declared by 'ffi.cdef()' are not
        linked to a particular library, just like C headers; in the
        library we only look for the actual (untyped) symbols.
        a__cffi_close__uClose a library obtained with ffi.dlopen().  After this call,
        access to functions or variables from the library will fail
        (possibly with a segmentation fault).
        aparse_typeacdeclais_raw_functionaas_function_pointeratypea_typeof_lockedaresultaCDefErroruthe type %r is a function type, not a pointer-to-function typea_typeofatypeofaBuiltinFunctionTypea_builtin_function_typeaFunctionTypea_cffi_base_typeuParse the C type given as a string and return the
        corresponding <ctype> object.
        It can also be used on 'cdata' instance to get its C type.
        asizeofuReturn the size in bytes of the argument.  It can be a
        string naming a C type, or a 'cdata' instance.
        aalignofuReturn the natural alignment size in bytes of the C type
        given as a string.
        a_typeoffsetofuReturn the offset of the named field inside the given
        structure or array, which must be given as a C type name.
        You can give several field names in case of nested structures.
        You can also give numeric values which correspond to array
        items, in case of an array type.
        anewpuAllocate an instance according to the specified C type and
        return a pointer to it.  The specified C type must be either a
        pointer or an array: ``new('X *')`` allocates an X and returns
        a pointer to it, whereas ``new('X[n]')`` allocates an array of
        n X'es and returns an array referencing it (which works
        mostly like a pointer, like in C).  You can also use
        ``new('X[]', n)`` to allocate an array of a non-constant
        length n.

        The memory is initialized following the rules of declaring a
        global variable in C: by default it is zero-initialized, but
        an explicit initializer can be given which can be used to
        fill all or part of the memory.

        When the returned <cdata> object goes out of scope, the memory
        is freed.  In other words the returned <cdata> object has
        ownership of the value of type 'cdecl' that it points to.  This
        means that the raw data can be used as long as this object is
        kept alive, but must not be used for a longer time.  Be careful
        about that when copying the pointer to the memory somewhere
        else, e.g. into another structure.
        anew_allocatorTnaallocateuFFI.new_allocator.<locals>.allocateuReturn a new allocator, i.e. a function that behaves like ffi.new()
        but uses the provided low-level 'alloc' and 'free' functions.

        'alloc' is called with the size as argument.  If it returns NULL, a
        MemoryError is raised.  'free' is called with the result of 'alloc'
        as argument.  Both can be either Python function or directly C
        functions.  If 'free' is None, then no free function is called.
        If both 'alloc' and 'free' are None, the default is used.

        If 'should_clear_after_alloc' is set to False, then the memory
        returned by 'alloc' is assumed to be already cleared (or you are
        fine with garbage); otherwise CFFI will clear it.
        aallocatoruSimilar to a C cast: returns an instance of the named C
        type initialized with the given 'source'.  The source is
        casted between integers or pointers of any type.
        astringuReturn a Python string (or unicode string) from the 'cdata'.
        If 'cdata' is a pointer or array of characters or bytes, returns
        the null-terminated string.  The returned string extends until
        the first null character, or at most 'maxlen' characters.  If
        'cdata' is an array then 'maxlen' defaults to its length.

        If 'cdata' is a pointer or array of wchar_t, returns a unicode
        string following the same rules.

        If 'cdata' is a single character or byte or a wchar_t, returns
        it as a string or unicode string.

        If 'cdata' is an enum, returns the value of the enumerator as a
        string, or 'NUMBER' if the value is out of range.
        aunpackuUnpack an array of C data of the given length,
        returning a Python string/unicode/list.

        If 'cdata' is a pointer to 'char', returns a byte string.
        It does not stop at the first null.  This is equivalent to:
        ffi.buffer(cdata, length)[:]

        If 'cdata' is a pointer to 'wchar_t', returns a unicode string.
        'length' is measured in wchar_t's; it is not the size in bytes.

        If 'cdata' is a pointer to anything else, returns a list of
        'length' items.  This is a faster equivalent to:
        [cdata[i] for i in range(length)]
        a_unspecifiedafrom_bufferuReturn a cdata of the given type pointing to the data of the
        given Python object, which must support the buffer interface.
        Note that this is not meant to be used on the built-in types
        str or unicode (you can build 'char[]' arrays explicitly)
        but only on objects containing large quantities of raw data
        in some other format, like 'array.array' or numpy arrays.

        The first argument is optional and default to 'char[]'.
        amemmoveuffi.memmove(dest, src, n) copies n bytes of memory from src to dest.

        Like the C function memmove(), the memory areas may overlap;
        apart from that it behaves like the C function memcpy().

        'src' can be any cdata ptr or array, or any Python buffer object.
        'dest' can be any cdata ptr or array, or a writable Python buffer
        object.  The size to copy, 'n', is always measured in bytes.

        Unlike other methods, this one supports all Python buffer including
        byte strings and bytearrays---but it still does not support
        non-contiguous buffers.
        acallback_decorator_wrapuFFI.callback.<locals>.callback_decorator_wrapDaconsider_function_as_funcptrtuReturn a callback object or a decorator making such a
        callback object.  'cdecl' must name a C function pointer type.
        The callback invokes the specified 'python_callable' (which may
        be provided either directly or via a decorator).  Important: the
        callback object must be manually kept alive for as long as the
        callback may be invoked from the C level.
        acallableuthe 'python_callable' argument is not callableacallbackaerroraonerrorastripTw*u&[agetcnamew&u(%s)u[(w areplace_withuReturn a string giving the C type 'cdecl', which may be itself
        a string or a <ctype> object.  If 'replace_with' is given, it gives
        extra text to append (or insert for more complicated C types), like
        a variable name, or '*' to get actually the C type 'pointer-to-cdecl'.
        agcpuReturn a new cdata object that points to the same
        data.  Later, when this new cdata object is garbage-collected,
        'destructor(old_cdata_object)' will be called.

        The optional 'size' gives an estimate of the size, used to
        trigger the garbage collection more eagerly.  So far only used
        on PyPy.  It tells the GC that the returned object keeps alive
        roughly 'size' bytes of external memory.
        aacquireTFaget_cached_btypeaverifierTaVerifiera_caller_dir_pycacheaVerifiera_caller_dir_pycachea_apply_windows_unicodeakwargsaload_libraryuVerify that the current ffi signatures compile on this
        machine, and return a dynamic library object.  The dynamic
        library can be used to call functions and access global
        variables declared in this 'ffi'.  The library is compiled
        by the C compiler: it gives you C-level API compatibility
        (including calling macros).  This is unlike 'ffi.dlopen()',
        which requires binary compatibility in the signatures.
        aget_errnoaset_errnoagetwinerrorapointer_cachea__addressof__akindapointeruaddressof(pointer)a_pointer_toactypearawaddressofuReturn the address of a <cdata 'struct-or-union'>.
        If 'fields_or_indexes' are given, returns the address of that
        field or array item in the structure or array, recursively in
        case of nested structures.
        atypeoffsetofaoffsetuffi.include() expects an argument that is also of type cffi.FFI, not %ra__name__uself.include(self)aincludeTw[aextendTw]uIncludes the typedefs, structs, unions and enums defined
        in another FFI instance.  Usage is similar to a #include in C,
        where a part of the program might include types defined in
        another part for its own usage.  Note that the include()
        method has no effect on functions, constants and global
        variables, which must anyway be accessed directly from the
        lib object returned by the original FFI instance.
        anewp_handleafrom_handleareleaseuset_unicode() can only be called onceacdefTutypedef wchar_t TBYTE;typedef wchar_t TCHAR;typedef const wchar_t *LPCTSTR;typedef const wchar_t *PCTSTR;typedef wchar_t *LPTSTR;typedef wchar_t *PTSTR;typedef TBYTE *PTBYTE;typedef TCHAR *PTCHAR;Tutypedef char TBYTE;typedef char TCHAR;typedef const char *LPCTSTR;typedef const char *PCTSTR;typedef char *LPTSTR;typedef char *PTSTR;typedef TBYTE *PTBYTE;typedef TCHAR *PTCHAR;uWindows: if 'enabled_flag' is True, enable the UNICODE and
        _UNICODE defines in C, and declare the types like TCHAR and LPTCSTR
        to be (pointers to) wchar_t.  If 'enabled_flag' is False,
        declare these types to be (pointers to) plain 8-bit characters.
        This is mostly for backward compatibility; you usually want True.
        agetTadefine_macrosTTOlistOtupleu'define_macros' must be a list or tupleTaUNICODEw1Ta_UNICODEw1adefine_macrosaensureuFFI._apply_embedding_fix.<locals>.ensureupython%d%dasysagettotalrefcounta_dTll
aabiflagsalibrariesTaextra_link_argsu/MANIFESTakwdsasetdefaulta_assigned_sourceuset_source() cannot be called several times per ffi objectu'module_name' must be a stringw\w/u'module_name' must not contain '/': use a dotted name to make a 'package.module' locationTapkgconfigapkgconfiguthe pkgconfig_libs argument must be a list of package namesaflags_from_pkgconfigamerge_flagsaset_sourceuMust not call cffi.api.distutils_extensionuMust not call cffi.api.emit_c_codeuMust not call cffi.api.emit_python_codeuMust not call cffi.api.compileataguembedding_init_code() can only be called onceareamatchu\s*\naendapysourceasplitlinesu\s*agrouparstripalineaprefix:nlnw
acffi_initaexecuffi.def_extern() is only available on API-mode FFI objectsa_declarationsTutypedef atypedefs:lnnTustruct astructs:lnnTuunion aunions:lnnasortuReturns the user type names known to this FFI instance.
        This returns a tuple containing three lists of names:
        (typedef_names, names_of_structs, names_of_unions)
        wcw.uctypes.utilautilafind_libraryanameudlopen(None) cannot work on Windows for Python 3 (see http://bugs.python.org/issue23606)uctypes.util.find_library() did not manage to locate a library called %ru%s.  Additionally, %saflagsa_load_backend_libaaccessor_functionu_make_ffi_library.<locals>.accessor_functionaaccessor_variableu_make_ffi_library.<locals>.accessor_variableaaddressof_varu_make_ffi_library.<locals>.addressof_varaaccessor_constantu_make_ffi_library.<locals>.accessor_constantaaccessor_int_constantu_make_ffi_library.<locals>.accessor_int_constantaupdate_accessorsu_make_ffi_library.<locals>.update_accessorsamake_accessoru_make_ffi_library.<locals>.make_accessorTOobjecta__prepare__aFFILibrarya__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ucffi.apia__module__u_make_ffi_library.<locals>.FFILibrarya__qualname__a__getattr__u_make_ffi_library.<locals>.FFILibrary.__getattr__a__setattr__u_make_ffi_library.<locals>.FFILibrary.__setattr__a__dir__u_make_ffi_library.<locals>.FFILibrary.__dir__u_make_ffi_library.<locals>.FFILibrary.__addressof__u_make_ffi_library.<locals>.FFILibrary.__cffi_close__a__orig_bases__Tuutf-8uFFILibrary_%salibnameufunction affiabackendlibaload_functionalibraryuvariable aread_variableawrite_variableu<lambda>u_make_ffi_library.<locals>.accessor_variable.<locals>.<lambda>aBTypeaaddr_variablesaarrayunon-integer constant '%s' cannot be accessed from a dlopen() librarya_int_constantsaaccessors_versionaitemsaEnumTypeasplitTw lafunctionaaccessorsavariableaconstantaenumeratorsatpaaccessor_enumu_make_ffi_library.<locals>.update_accessors.<locals>.accessor_enumacheck_not_partialaenumvaluesapropertya__set__akeysucffi library has no function or global variable named '%s'aclose_libamodulesa_cffi_original_ffia_cffi_types_of_builtin_funcsTEKeyErrorEAttributeErrorETypeErrora__doc__a__spec__aoriginahas_locationa__cached__alockTaallocate_lockTaCDefErrorTamodelacollectionsTaCallableu
    The main top-level class that you instantiate once, or once per module.

    Example usage:

        ffi = FFI()
        ffi.cdef("""
            int printf(const char *, ...);
        """)

        C = ffi.dlopen(None)   # standard library
        -or-
        C = ffi.verify()  # use a C compiler: verify the decl above is right

        C.printf("hello, %s!\n", ffi.new("char[]", "world"))
    a__init__uFFI.__init__TFpnuFFI.cdefTFnaembedding_apiuFFI.embedding_apiuFFI._cdefTladlopenuFFI.dlopenadlcloseuFFI.dlcloseuFFI._typeof_lockeduFFI._typeofuFFI.typeofuFFI.sizeofuFFI.alignofaoffsetofuFFI.offsetofanewuFFI.newTnntuFFI.new_allocatoruFFI.castTluFFI.stringuFFI.unpackuFFI.from_bufferuFFI.memmoveuFFI.callbackTuagetctypeuFFI.getctypeagcuFFI.gcuFFI._get_cached_btypeTunaverifyuFFI.verifya_get_errnouFFI._get_errnoa_set_errnouFFI._set_errnouthe value of 'errno' from/to the C callsaerrnouFFI.getwinerroruFFI._pointer_toaaddressofuFFI.addressofuFFI._typeoffsetofuFFI.includeanew_handleuFFI.new_handleuFFI.from_handleuFFI.releaseaset_unicodeuFFI.set_unicodeuFFI._apply_windows_unicodea_apply_embedding_fixuFFI._apply_embedding_fixTu.cuFFI.set_sourceaset_source_pkgconfiguFFI.set_source_pkgconfigTabuildtadistutils_extensionuFFI.distutils_extensionaemit_c_codeuFFI.emit_c_codeaemit_python_codeuFFI.emit_python_codeTw.lnnacompileuFFI.compileainit_onceuFFI.init_onceaembedding_init_codeuFFI.embedding_init_codeadef_externuFFI.def_externalist_typesuFFI.list_typesucffi\api.pyTaselfaread_variableaBTypeanameTaBTypeanamearead_variableTaselfavalueawrite_variableaBTypeanameTaBTypeanameawrite_variableTwxu<module cffi.api>Ta__class__TaselfanamealibraryaFFILibraryaaddressof_varamake_accessorTaFFILibraryaaddressof_varalibraryamake_accessorTaselfabackendlibTabackendlibTaselfaffiaupdate_accessorsaaccessorsTaaccessorsaffiaupdate_accessorsTaselfanameamake_accessorTamake_accessorTaselfabackenda__version__acparseranameTaselfanameavalueapropertyamake_accessorTaselfakwdsaensureaosapythonlibatemplateasysconfigTaselfakwdsadefmacrosTafuncasysamoduleaffiatypes_of_builtin_funcsatpTaselfacsourceaoverrideaoptionsacacheafinishlistatpTaselfatypeaBTypeafinishlistTaselfTabackendanameaflagsaosafirst_errorweactypesapathamsgTaffialibnameaflagsabackendabackendlibaaccessor_functionaaccessor_variableaaddressof_varaaccessor_constantaaccessor_int_constantaaccessorsaaccessors_versionaaddr_variablesaupdate_accessorsamake_accessoraFFILibraryalibraryTaselfactypeTaselfaerrnoTaselfacdeclaconsider_function_as_funcptraresultabtypeareally_a_function_typeTaselfacdeclakeyatypeareally_a_function_typeabtypearesultTaselfactypeafield_or_indexafields_or_indexesaoffsetafield1aoffset1TanameTanameatpwialibraryTalibraryTanameakeyatpw_aBTypeavalueaffiabackendlibalibraryTabackendlibaffialibraryTanameaffialibraryTaffialibraryT
anameakeyatpw_aBTypearead_variableawrite_variableaffiabackendlibaFFILibraryTaFFILibraryabackendlibaffiTaselfacdataafields_or_indexesactypeaoffsetactypeptrTanameakeyatpw_aBTypewpaaddr_variablesaffiabackendlibTaaddr_variablesabackendlibaffiTaselfacdeclTacdeclainitaselfaallocatorTaallocatoraselfTaselfacdeclapython_callableaerroraonerroracallback_decorator_wrapTapython_callableaselfacdeclaerroraonerrorTacdeclaerroraonerroraselfTaselfacdeclasourceTaselfacsourceaoverrideapackedapackTaselfatmpdiraverboseatargetadebugTaselfaargsakwdsTaselfatmpdiraverboseTaselfalibTaselfanameaflagsalibafunction_cacheTaselfacsourceapackedapackTaselfapysourceareamatchalinesaprefixwialineTaselfafilenameTakeyavaluealstakwdsTakwdsTaselfacdeclapython_bufferarequire_writableTaselfwxTaselfacdataadestructorasizeTaselfacdeclareplace_withTaselfacodeTaselfaffi_to_includeTaselfafuncatagwxaresultTaselfatypedefsastructsaunionsakeyTanameaffialibraryaFFILibraryaaccessorsaupdate_accessorsTaFFILibraryaaccessorsaffialibraryaupdate_accessorsTaselfadestasrcwnTaselfacdeclainitTaselfaallocafreeashould_clear_after_allocacompiled_ffiaallocatoraallocateTaselfacdeclafields_or_indexesTaselfamodule_nameasourceasource_extensionakwdsaosTaselfamodule_nameapkgconfig_libsasourceasource_extensionakwdsapkgconfigakwds2Taselfaenabled_flagTaselfacdeclaBTypeTaselfacdataamaxlenTaselfacdeclaresTaselfacdataalengthTakeyatpw_ataganamewiaenumnameaaccessor_enumaaccessors_versionaffiaaccessor_functionaaccessorsaaccessor_variableaaccessor_constantaaccessor_int_constantTaaccessor_constantaaccessor_functionaaccessor_int_constantaaccessor_variableaaccessorsaaccessors_versionaffialibraryTaselfasourceatmpdirakwargsaVerifiera_caller_dir_pycachealib.cffi.commontypes/Aa_CACHEaCOMMON_TYPESagetlutoo many values to unpack (expected 2)amodelaPrimitiveTypeaALL_PRIMITIVE_TYPESuset-unicode-neededaFFIErroruThe Windows type %r is only available after you call ffi.set_unicode()uUnsupported type: %r.  Please look at http://cffi.readthedocs.io/en/latest/cdef.html#ffi-cdef-limitations and file an issue if you think this type should really be supported.aparse_type_and_qualsaBaseTypeByIdentityaUNICODE_STRINGaStructTypea_UNICODE_STRINGaLengthaMaximumLengthaBufferTuunsigned shortaPointerTypeTawchar_tlaPUNICODE_STRINGuUNICODE_STRING *aPCUNICODE_STRINGuconst UNICODE_STRING *aTBYTEaTCHARaLPCTSTRaPCTSTRaLPTSTRaPTSTRaPTBYTEaPTCHARa__doc__a__file__a__spec__aoriginahas_locationa__cached__asysuTamodellaerrorTaFFIErrora_cffi_backendTa_get_common_typesa_get_common_typesaunknown_typeTaFILEa_IO_FILEaFILEa_Boolaboola_typeaendswithTa_taresolve_common_typeawin_common_typesaupdateucffi\commontypes.pyu<module cffi.commontypes>Taparseracommontypeacdeclaresultaquals.cffi8%a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_cffiu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__LaFFIaVerificationErroraVerificationMissingaCDefErroraFFIErrora__all__aapiTaFFIlaFFIlaerrorTaCDefErroraFFIErroraVerificationErroraVerificationMissingaCDefErroraFFIErroraVerificationErroraVerificationMissingTaPkgConfigErroraPkgConfigErroru1.16.0a__version__Tllla__version_info__u0.8.6a__version_verifier_modules__ucffi\__init__.pyu<module cffi>u.cffi.cparser&upycparser.yacctablupycparser.lextaba_parser_cacheapycparseraCParsera_r_star_const_spaceasearchacsourceapartsaappendastartTw(w)agroupaendastartswithw*wiw(alevellu,;=ua_r_extern_pythonwCTlTuvoid __cffi_extern_python_plus_c_start; Tuvoid __cffi_extern_python_start; w{afindw}aCDefErrorTu'extern "Python" {': no '}' founducannot use { } inside a block 'extern "Python" { ... }'w;Tu'extern "Python": no ';' foundTu void __cffi_extern_python_stop;w"asplitlinesalstripTw#awarningsawarnTuString literal found in cdef() or type source. String literals are ignored here, but you should remove them anyway because some character sequences confuse pre-parsing.astorageuGlobal variable '%s' in cdef(): for consistency with C it should have a storage class specifier (usually 'extern')anameareplaceu_remove_line_directives.<locals>.replacea_r_line_directiveasubaline_directivesu#line@%du_put_back_line_directives.<locals>.replaceTu#line@uunexpected #line directive (should have been processed and removed:lnna_remove_line_directivesutoo many values to unpack (expected 2)areplace_keeping_newlinesu_preprocess.<locals>.replace_keeping_newlinesa_r_commenta_r_defineafinditeragroupsTu\
uastripamacrosa__version__u2.14a_workaround_for_old_pycparsera_r_stdcall2u volatile volatile const(a_r_stdcall1u volatile volatile const a_r_cdeclw a_preprocess_extern_pythona_warn_for_string_literala_r_partial_arrayu[__dotdotdotarray__]a_r_partial_enumw=u...u%s,__dotdotdot%d__ %slu%s __dotdotdot%d__ %sa_r_int_dotdotdotu __dotdotdotint__ a_r_float_dotdotdotu __dotdotdotfloat__ Tu...u __dotdotdot__ a_put_back_line_directivesacountTw
w
aCOMMON_TYPESaaddTw;Tw,Tw)Tatypedefa_r_wordsafindallalook_for_wordsais_typedefawords_usedadiscardaprevious_wordatypedefaparenw,aworda_declarationsa_included_declarationsa_anonymous_counteraweakrefaWeakKeyDictionarya_structnode2typea_optionsa_int_constantsa_recompletea_uses_new_featurea_preprocessa_common_type_namesasortedTutypedef :lnnatypenamesactnu# 1 "<cdef automatic initialization code>"acsourcelinesutypedef int %s;Tutypedef int __dotdotdotint__, __dotdotdotfloat__, __dotdotdot__;u# 1 "%s"aCDEF_SOURCE_STRINGalockaacquirea_get_parseraparseac_parseraParseErroraconvert_pycparser_errorareleaseaastareamatchu%s:(\d+):l
a_convert_pycparser_errorucannot parse "%s"
%suparse error
%su'packed' should be False or True; use 'pack' to give another valueucannot give both 'pack' and 'packed'u'pack' must be a power of two, not %raoverrideapackedapackadllexporta_internal_parsea_parseutoo many values to unpack (expected 3)a_process_macrosaexta__dotdotdot__a__cffi_extern_python_stopa_inside_extern_pythonac_astaDeclaselfa_parse_declaTypedefutypedef does not declare any nameatypeaIdentifierTypeanameslTa__dotdotdota_get_unknown_typeaPtrDeclaTypeDecla_get_unknown_ptr_typea_get_type_and_qualsu*(%s *)0Tanameapartial_length_okatypedef_examplea_declareutypedef Taqualsa__name__aPragmauunexpected <%s>: this construct is valid C but not valid in cdef()aargsacurrent_declaFFIErroru
    *** Err: %sumultiple declarations of constant: %salowerarstripTaulTw-:lnnaint_strTw0w0Tu0xu0oa_add_constantsumacro aitemsa_r_int_literala_add_integer_constantuonly supports one of the following syntax:
  #define %s ...     (literally dot-dot-dot)
  #define %s NUMBER  (with NUMBER an integer constant, decimal/hex/octal)
got:
  #define %s %sa_get_type_pointeragetTadllexportudllexport_python a__cffi_extern_python_startuextern_python a__cffi_extern_python_plus_c_startuextern_python_plus_c ufunction aFuncDeclTanameamodelaRawFunctionTypea_declare_functionaStructa_get_struct_union_enum_typeastructaUnionaunionaEnumaenumuconstruct does not declare any variableanodeDapartial_length_oktais_raw_functionais_integer_typeainitavalueaUnaryOpaopw-aexpravoid_typeTa__cffi_extern_python_Tucannot declare constants or variables with 'extern "Python"'aQ_CONSTais_array_typeuconstant a_warn_for_non_extern_non_static_global_variableuvariable aparse_type_and_qualsuvoid __dummy(
%s
);:nlnaparamsaIDuunknown identifier '%s'Taoverrideumultiple declarations of %s (for interactive usage, try cdef(xx, override=True))asplitaconstaqualsavolatileaQ_VOLATILEarestrictaQ_RESTRICTaas_function_pointeraStructOrUnionOrEnumTw$aisdigitaforcenameaNamedPointerTypeaPointerTypeatypenodea_extract_qualsaArrayDecladima_parse_constantTapartial_length_oku_cffi_array_len(%s)apartial_length_okTapartial_length_okatypedef_exampleaArrayTypeTadeclnameasignedacharTashortalongasignedaunsignedaprefixesTaunsignedashortalonganewnamesaprefixaintashortalongavoidu:%d: bad usage of "..."acoordalinearesolve_common_typea_parse_function_typeDanestedtu:%d: bad or unsupported type declarationu%s arg %d: unknown type '%s' (if you meant to use the old C syntax of giving untyped arguments, it is not supported)uin expressionw?u%s: a function with only '(...)' as argument is not correct Ca_as_func_arg:lnna__stdcallaitemu$%su$%du%s %sTnnaStructTypeaUnionTypeTuEnums cannot be declared with ...a_build_enum_typeavaluesukind = %rakeyuenum %s: the '{}' declaration should appear on the first time the enum is mentioned, not lateratpaforce_the_namew$uanonymous %sadeclsafldnamesuduplicate declaration of struct %sa_make_partialanestedabitsizea_partial_lengthapartialafldtypesafldbitsizeafldqualsu%s: using both bitfields and '...;'TapackedacompletedaStructOrUnionu%s cannot be partialahas_c_nameu%s is partial but has no C nameaConstantw9TauUlLl:llnu0xlu0bluinvalid constant %rw'w\wslw+aexprnodea__dotdotdotarray__u:%d: unsupported '[...]' here, cannot derive the actual array length in this contextaBinaryOpaleftarightw/a_c_divw%u<<u>>w&w|w^u:%d: unsupported expression: expected a simple numeric constantaenumeratorsa_r_enum_dotdotdotaenumvaluesanextenumvalueaEnumTypeTTuanonymous $enum_$Tw lTastructaunionaenumaanonymousatypedefTaincludedaqualsaunknown_typea__dotdotdotint__u'typedef int... %s'aUnknownIntegerTypea__dotdotdotfloat__u'typedef float... %s'aUnknownFloatTypeu:%d: unsupported usage of "..." in typedefaunknown_ptr_typea__doc__a__file__a__spec__aoriginahas_locationa__cached__TamodelacommontypesTaCOMMON_TYPESaresolve_common_typeaerrorTaFFIErroraCDefErrorTa_pycparsera_pycparserasysa_threadaallocate_locka_workaround_for_static_import_findersu<cdef source string>acompileu/\*.*?\*/|//([^\n\\]|\\.)*?$aDOTALLaMULTILINEu^\s*#\s*define\s+([A-Za-z_][A-Za-z_0-9]*)\b((?:[^\n\\]|\\.)*?)$u^[ \t]*#[ \t]*(?:line|\d+)\b.*$Tu=\s*\.\.\.\s*[,}]|\.\.\.\s*\}Tu__dotdotdot\d+__$Tu\[\s*\.\.\.\s*\]Tu\w+|\Su-?0?x?[0-9a-f]+[lu]*$aIGNORECASETu\b(__stdcall|WINAPI)\bTu[(]\s*(__stdcall|WINAPI)\bTu\b__cdecl\bTu\bextern\s*"(Python|Python\s*\+\s*C|C\s*\+\s*Python)"\s*.Tu[*]\s*((const|volatile|restrict)\b\s*)+Tu(\b(int|long|short|signed|unsigned|char)\s*)+\.\.\.Tu\b(double|float)\s*\.\.\.TOobjecta__prepare__aParsera__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ucffi.cparsera__module__a__qualname__a__init__uParser.__init__uParser._parseuParser._convert_pycparser_erroruParser.convert_pycparser_errorTFpnFuParser.parseuParser._internal_parseuParser._add_constantsuParser._add_integer_constantuParser._process_macrosuParser._declare_functionuParser._parse_declaparse_typeuParser.parse_typeuParser.parse_type_and_qualsTFluParser._declareuParser._extract_qualsTnuParser._get_type_pointerTnFnuParser._get_type_and_qualsuParser._parse_function_typeuParser._as_func_argTnFuParser._get_struct_union_enum_typeuParser._make_partialTFuParser._parse_constantuParser._c_divuParser._build_enum_typeaincludeuParser.includeuParser._get_unknown_typeuParser._get_unknown_ptr_typea__orig_bases__ucffi\cparser.pyu<module cffi.cparser>Ta__class__TaselfTaselfakeyavalTaselfanameaint_stranegapyvalueTaselfatypeaqualsTaselfaexplicit_nameadeclsapartialaenumeratorsaenumvaluesanextenumvalueaenumatpTaselfwawbaresultTacsourcealook_for_wordsawords_usedais_typedefaparenaprevious_wordawordTaselfweacsourcealineamsgamatchalinenumacsourcelinesTaselfanameaobjaincludedaqualsaprevobjaprevqualsTaselfatpaqualsadeclatagTaselfakindatypeanameanestedaforce_nameaexplicit_nameatpakeyw_afldnamesafldtypesafldbitsizeafldqualsadeclabitsizeafqualTaselfatypenodeanameapartial_length_okatypedef_exampleatpaqualsalengthaitemtypeaitemqualsatypeanamesaprefixesanewnamesaprefixwiaidentatp0aquals0TaselfatypeaqualsadeclnameTaselfadeclTaselfadeclatypenamesTaselfacsourceaastamacrosaiteratoradeclacurrent_declaqualsarealtypeweamsgTaselfatpanestedTaselfacsourceamacrosactnatypenamesanameacsourcelinesatypenameafullcsourceaastweTaselfaexprnodeapartial_length_okwsaleftarightTaselfadeclanodeatpaqualsTaselfatypenodeafuncnameaparamswiaargaellipsisaargsaresultaqualsaabiTacsourcealine_directivesareplace_keeping_newlinesamacrosamatchamacronameamacrovalueamatchesanumberwpap2TacsourceapartsamatchaendposaclosingasemicolonTaselfamacrosakeyavalueTacsourcealine_directivesareplaceTadeclawarningsTacsourcealineawarningsTacsourceapartsamatchaclosingaendposalevelwiwcTapycparserTaselfweacsourcealineamsgTaselfaotheranameatpaqualsakindwkwvTaselfacsourceaoverrideapackedapackadllexportaprev_optionsTaselfacdeclTaselfacdeclaastamacrosaexprnodeTwmwialine_directivesTaline_directivesTwmwsaline_directivesTwm.cffi.error)aargslacoordafilealineu%s:%d: TEAttributeErrorETypeErrorEIndexErroruu%s%sla__doc__a__file__a__spec__aoriginahas_locationa__cached__TEExceptiona__prepare__aFFIErrora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.errora__module__a__qualname__acffia__orig_bases__aCDefErrora__str__uCDefError.__str__aVerificationErroru An error raised when verification fails
    aVerificationMissingu An error raised when incomplete structures are passed into
    cdef, but no verification has been done
    aPkgConfigErroru An error raised for missing modules in pkg-config
    ucffi\error.pyu<module cffi.error>Ta__class__Taselfacurrent_declafilenamealinenumaprefix.cffi.ffiplatformEuMust not call cffi.ffiplatform.get_extensionaosaenvironacopya_buildaabspathaitemsutoo many values to unpack (expected 2)agetuCompile a C extension module using distutils.uMust not call cffi.ffiplatform._buildaisabsadirapathasplitanamesaappendasamefileacurdirareverseajoinawriteu%ds%sasortedakeysu%dda_flattenwfTOlistOtupleu%dlaint_or_longu%diuthe keywords to verify() contains unsupported object %racStringIOaStringIOagetvaluea__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaerrorTaVerificationErrorlaVerificationErrorlLasourcesainclude_dirsalibrary_dirsaextra_objectsadependsaLIST_OF_FILE_NAMESTTaget_extensionTlnacompileuos.pathTasamefileamaybe_relative_pathalongaflattenucffi\ffiplatform.pyu<module cffi.ffiplatform>Tatmpdiraextacompiler_verboseadebugTwxwfakeysakeyavalueTatmpdiraextacompiler_verboseadebugasaved_environaoutputfilenameakeyavalueTwxwfTasrcfilenameamodnameasourcesakwdsTapathadiranamesaprevdiranameTaf1af2u.cffi.locka__doc__a__file__a__spec__aoriginahas_locationa__cached__asysa_threadTaallocate_locklaallocate_locka_dummy_threaducffi\lock.pyu<module cffi.lock>u.cffi.modelzRaQ_CONSTu const alstripaQ_VOLATILEu volatile aQ_RESTRICTu __restrict ac_name_with_markeracountTw&lastripastartswithTw*u&[u(%s)lu[(w aqualifyareplace_withareplacew&w$aVerificationErrorucannot generate '%s' in %s: unknown type namea_get_c_nameTw&ua_cached_btypesabuild_backend_typeasetdefaultaBTypeu<%s>a_attrs_a_get_itemsuvoid&aglobal_cacheanew_void_typeaALL_PRIMITIVE_TYPESanamewcwiwfwjanew_primitive_typeuinteger type '%s' can only be used after compilationufloat type '%s' can only be used after compilationaargsaresultaellipsisaabiaappendTu...areprargsavoida_base_patternu, :nln:lnnaCDefErrorucannot render the type %r: it is a function type, not a pointer-to-function typeaFunctionPtrTypeaget_cached_btypeaffiafinishlistTa__stdcalla_backendaFFI_STDCALLanew_function_typeaRawFunctionTypeatotypeaqualsu *&ais_array_typeDacan_delaytanew_pointer_typeaPointerTypea__init__aitemalengthu&[]u...u&[/*...*/]u&[%s]aArrayTypealength_is_unknownucannot render the type %r: unknown lengthanew_array_typeaforcenameu%s %sakindabuild_c_name_with_markeraendswith:nlnafldnamesafldtypesafldbitsizeafldqualsaselfutoo many values to unpack (expected 2)uaStructOrUnionaanonymous_struct_fieldsuStructOrUnion.anonymous_struct_fieldsTlutoo many values to unpack (expected 4)aexpand_anonymous_struct_unionaenumfieldsuStructOrUnion.enumfieldsanamesatypesabitsizesaStructOrUnionOrEnumafinish_backend_typeacompletedlurecursive structure declaration for '%s'afixedlayoutapackedTlacomplete_struct_or_unionlaftypeasizeofa_verification_errorufield '%s.%s' has a bogus size?u{}aresolve_lengthafsizeufield '%s.%s' is declared as %d bytes, but is really %d bytesaBFieldTypeapartialaVerificationMissingacheck_not_partialunew_%s_typeaget_official_nameTakeyaenumeratorsaenumvaluesabaseinttypeaforce_the_nameTw w_apartial_resolvedabuild_baseinttypeanew_enum_typeaminamaxawarningsa__warningregistry__aclearawarnu%r has no values explicitly defined; guessing that it is equivalent to 'unsigned int'aPrimitiveTypeTaintTalongTuunsigned intTuunsigned longlasignu%s values don't all fit into either 'long' or 'unsigned long'u$%saStructTypeaunknown_typeaoriginu$$%saNamedPointerTypeaModuleTypea_typecache_cffi_backendaglobal_locka__enter__a__exit__a__typecacheaweakrefaWeakValueDictionaryTnnnakeya_typecacheu%s: %r: %sagetw?u%s: %sa__doc__a__file__a__spec__ahas_locationa__cached__alockTaallocate_lockaallocate_lockaerrorTaCDefErroraVerificationErroraVerificationMissinglTOobjecta__prepare__aBaseTypeByIdentitya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.modela__module__a__qualname__ais_raw_functionTuua C filelaget_c_nameuBaseTypeByIdentity.get_c_nameuBaseTypeByIdentity._get_c_nameahas_c_nameuBaseTypeByIdentity.has_c_nameais_integer_typeuBaseTypeByIdentity.is_integer_typeTFuBaseTypeByIdentity.get_cached_btypea__repr__uBaseTypeByIdentity.__repr__uBaseTypeByIdentity._get_itemsa__orig_bases__aBaseTypea__eq__uBaseType.__eq__a__ne__uBaseType.__ne__a__hash__uBaseType.__hash__aVoidTypeuVoidType.__init__uVoidType.build_backend_typeavoid_typeaBasePrimitiveTypeais_complex_typeuBasePrimitiveType.is_complex_typeTanameD3acharashortaintalongulong longusigned charuunsigned charuunsigned shortuunsigned intuunsigned longuunsigned long longafloatadoubleulong doubleufloat _Complexudouble _Complexa_Boolawchar_tachar16_tachar32_taint8_tauint8_taint16_tauint16_taint32_tauint32_taint64_tauint64_taint_least8_tauint_least8_taint_least16_tauint_least16_taint_least32_tauint_least32_taint_least64_tauint_least64_taint_fast8_tauint_fast8_taint_fast16_tauint_fast16_taint_fast32_tauint_fast32_taint_fast64_tauint_fast64_taintptr_tauintptr_taintmax_tauintmax_taptrdiff_tasize_tassize_twcwipppppppppwfppwjpwiwcppwippppppppppppppppppppppppppppppuPrimitiveType.__init__ais_char_typeuPrimitiveType.is_char_typeuPrimitiveType.is_integer_typeais_float_typeuPrimitiveType.is_float_typeuPrimitiveType.is_complex_typeuPrimitiveType.build_backend_typeaUnknownIntegerTypeuUnknownIntegerType.__init__uUnknownIntegerType.is_integer_typeuUnknownIntegerType.build_backend_typeaUnknownFloatTypeuUnknownFloatType.__init__uUnknownFloatType.build_backend_typeaBaseFunctionTypeTaargsaresultaellipsisaabiTnuBaseFunctionType.__init__u(&)(%s)uRawFunctionType.build_backend_typeaas_function_pointeruRawFunctionType.as_function_pointeru(*&)(%s)uFunctionPtrType.build_backend_typeaas_raw_functionuFunctionPtrType.as_raw_functionTatotypeaqualsuPointerType.__init__uPointerType.build_backend_typeavoidp_typeaConstPointerTypeaconst_voidp_typeTatotypeanameuNamedPointerType.__init__TaitemalengthuArrayType.__init__uArrayType.length_is_unknownuArrayType.resolve_lengthuArrayType.build_backend_typeTacharachar_array_typeuStructOrUnionOrEnum.build_c_name_with_markeruStructOrUnionOrEnum.force_the_nameuStructOrUnionOrEnum.get_official_nameuStructOrUnion.__init__Ttaforce_flattenuStructOrUnion.force_flattenuStructOrUnion.get_cached_btypeuStructOrUnion.finish_backend_typeuStructOrUnion._verification_erroruStructOrUnion.check_not_partialuStructOrUnion.build_backend_typeastructaUnionTypeaunionaEnumTypeaenumuEnumType.__init__uEnumType.force_the_nameuEnumType.check_not_partialuEnumType.build_backend_typeuEnumType.build_baseinttypeaunknown_ptr_typeaget_typecacheapointer_cacheaattach_exception_infoucffi\model.pyu<module cffi.model>Ta__class__TatotypeTaselfaotherTaselfTaselfaargsaresultaellipsisaabiareprargsareplace_withTaselfaitemalengthabracketsTaselfanameTaselfanameaenumeratorsaenumvaluesabaseinttypeTaselfanameafldnamesafldtypesafldbitsizeafldqualsTaselfatotypeanameaqualsTaselfatotypeaqualsaextraTaselfamsgTaselfanameatypeTweanameTaselfaffiafinishlistTaselfaffiafinishlistaBItemTaselfaffiafinishlistaBPtrItemTaselfaffiafinishlistabase_btypeTaselfaffiafinishlistaresultaargsatpaabi_argsT
aselfaffiafinishlistasmallest_valuealargest_valueawarningsasignacandidate1acandidate2abtype1abtype2asize1asize2Taselfaexpand_anonymous_struct_unionafldqualsanameatypeabitsizeaqualsaresultTaselfaffiafinishlistaBTypeafldtypesalstaextra_flagsafieldofsafieldsizeatotalsizeatotalalignmentwiafsizeaftypeaBItemTypeanlenanrestaBFieldTypeabitemsizeTaselfanamesatypesabitsizesafldqualsanameatypeabitsizeaqualsTaselfaforcenameTaselfaforcenameanameTaselfareplace_withacontextaqualsaresultTaselfaffiafinishlistacan_delayaBTypeTaselfaffiafinishlistacan_delayaBTypeaBType2TabackendT
asrctypeaffiafuncnameaargsakwdsakeyaresweacacheares1TaffiaBTypeTaqualsareplace_withTaselfanewlengthTanameastructnameatp.cffi.pkgconfigWaitemsutoo many values to unpack (expected 2)acfg1ucfg1[%r] should be a list of stringsucfg2[%r] should be a list of stringsaextenduMerge values from cffi config flags cfg2 to cf1

    Example:
        merge_flags({"libraries": ["one"]}, {"libraries": ["two"]})
        {"libraries": ["one", "two"]}
    upkg-configu--print-errorsasubprocessaPopenaPIPETastdoutastderraPkgConfigErrorucannot run pkg-config: %sastripacommunicateareturncodeladecodeaberrupkg-config %s %s returned bytes that cannot be decoded with encoding %r:
%raencodingw\upkg-config %s %s returned an unsupported backslash-escaped output:
%ruCalls pkg-config and returns the output if found
    aget_include_dirsuflags_from_pkgconfig.<locals>.get_include_dirsaget_library_dirsuflags_from_pkgconfig.<locals>.get_library_dirsaget_librariesuflags_from_pkgconfig.<locals>.get_librariesaget_macrosuflags_from_pkgconfig.<locals>.get_macrosaget_other_cflagsuflags_from_pkgconfig.<locals>.get_other_cflagsaget_other_libsuflags_from_pkgconfig.<locals>.get_other_libsakwargsuflags_from_pkgconfig.<locals>.kwargsamerge_flagsaretuReturn compiler line flags for FFI.set_source based on pkg-config output

    Usage
        ...
        ffibuilder.set_source("_foo", pkgconfig = ["libfoo", "libbar >= 1.8.3"])

    If pkg-config is installed on build machine, then arguments include_dirs,
    library_dirs, libraries, define_macros, extra_compile_args and
    extra_link_args are extended with an output of pkg-config for libfoo and
    libbar.

    Raises PkgConfigError in case the pkg-config call fails.
    asplitastartswithTu-I:lnnTu-LTu-la_macrouflags_from_pkgconfig.<locals>.get_macros.<locals>._macroTu-Dw=Tw=lasysagetfilesystemencodingacallu--cflagsu--libsainclude_dirsalibrary_dirsalibrariesadefine_macrosaextra_compile_argsaextra_link_argsa__doc__a__file__a__spec__aoriginahas_locationa__cached__aosaerrorTaPkgConfigErrorlaflags_from_pkgconfigucffi\pkgconfig.pyu<module cffi.pkgconfig>TwxTalibnameaflagaencodingwaapcweaboutaberrTalibsaget_include_dirsaget_library_dirsaget_librariesaget_macrosaget_other_cflagsaget_other_libsakwargsaretalibnamealib_flagsTastringTastringa_macroT
alibnameafseaall_cflagsaall_libsaget_include_dirsaget_library_dirsaget_librariesaget_macrosaget_other_cflagsaget_other_libsTaget_include_dirsaget_librariesaget_library_dirsaget_macrosaget_other_cflagsaget_other_libsTacfg1acfg2akeyavalueu.cffi.vengine_cpyWaverifieraffia_struct_pending_verificationa_types_of_builtin_functionsaimpafind_moduleutoo many values to unpack (expected 3)aclosela_typesdicta_generateTacollecttypea_fawritew
amodelaPrimitiveTypeanameulong doubleatpaselfacollect_typesu((void)lib,0)a_chained_list_constantsa_prntacffimod_headerapreambleTadecla_generate_setup_customTustatic PyMethodDef _cffi_methods[] = {TamethodTu  {"_cffi_setup", _cffi_setup, METH_VARARGS, NULL},Tu  {NULL, NULL, 0, NULL}    /* Sentinel */Tu};aget_module_nameTu#if PY_MAJOR_VERSION >= 3Tustatic struct PyModuleDef _cffi_module_def = {Tu  PyModuleDef_HEAD_INIT,u  "%s",Tu  NULL,Tu  -1,Tu  _cffi_methods,Tu  NULL, NULL, NULL, NULLTaPyMODINIT_FUNCuPyInit_%s(void)Tw{Tu  PyObject *lib;Tu  lib = PyModule_Create(&_cffi_module_def);Tu  if (lib == NULL)Tu    return NULL;u  if (%s < 0 || _cffi_init() < 0) {Tu    Py_DECREF(lib);Tu  }Tu  return lib;Tw}Tu#elseuinit%s(void)u  lib = Py_InitModule("%s", _cffi_methods);Tu    return;u  if (%s < 0 || _cffi_init() < 0)Tu  return;Tu#endifaacquire_lockasysagetdlopenflagsasetdlopenflagsaload_dynamicamodulefilenameuimporting %r: %saVerificationErroraprevious_flagsarelease_locka_loadaloadingaitemsutoo many values to unpack (expected 2)a_get_cached_btypeTOobjecta__prepare__aFFILibrarya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.vengine_cpya__module__uVCPythonEngine.load_library.<locals>.FFILibrarya__qualname__amodulea_cffi_python_modulea_cffi_ffia_cffi_dira__dir__uVCPythonEngine.load_library.<locals>.FFILibrary.__dir__a__orig_bases__a_cffi_setupawarningsawarnureimporting %r might overwrite older definitionsaloadedTalibrarya_cffi_original_ffia_cffi_types_of_builtin_funcsa_parsera_declarationsasorta_get_declarationsasplitTw lu_generate_cpy_%s_%sunot implemented in verify(): %raattach_exception_infou_%s_cpy_%suais_integer_typea_Boola_cffi_to_c_intu, %su(%s)_cffi_to_c_%saget_c_nameTuareplaceTw w_u-1aPointerTypea_convert_funcarg_to_c_ptr_or_arrayaStructOrUnionaEnumTypeu  if (_cffi_to_c((char *)&%s, _cffi_type(%d), %s) < 0)a_gettypenumu    %s;aFunctionPtrTypeu(%s)_cffi_to_c_pointeru, _cffi_type(%d)aNULLu  %s = %s(%s%s);u  if (%s == (%s)%s && PyErr_Occurred())aaddTuPy_ssize_t datasizeTustruct _cffi_freeme_s *large_args_free = NULLTuif (large_args_free != NULL) _cffi_free_array_arguments(large_args_free);Tu  datasize = _cffi_prepare_pointer_call_argument(u      _cffi_type(%d), %s, (char **)&%s);Tu  if (datasize != 0) {u    %s = ((size_t)datasize) <= 640 ? alloca((size_t)datasize) : NULL;u    if (_cffi_convert_array_argument(_cffi_type(%d), %s, (char **)&%s,Tu            datasize, &large_args_free) < 0)u      %s;u_cffi_from_c_int(%s, %s)u_cffi_from_c_%s(%s)u_cffi_from_c_deref((char *)&%s, _cffi_type(%d))u_cffi_from_c_pointer((char *)%s, _cffi_type(%d))aArrayTypeaitemafldnamesu'%s' is used as %s, but is opaquea_get_c_nameu_cffi_from_c_struct((char *)&%s, _cffi_type(%d))aellipsisa_do_collect_typeaargsaresulta_generate_cpy_constanoargaarg0Tustatic PyObject *u_cffi_f_%s(PyObject *self, PyObject *%s)uargument of %saprntu  %s;u x%dacontexta_extra_local_variablesalocalvarsafreelinesasortedaVoidTypeuresult = uresult of %su resultTu  PyObject *pyresult;u  PyObject *arg%d;u  if (!PyArg_ParseTuple(args, "%s:%s", %s))wOu, u&arg%da_convert_funcarg_to_cuarg%dux%dureturn NULLTu  Py_BEGIN_ALLOW_THREADSTu  _cffi_restore_errno();u  { %s%s(%s); }Tu  _cffi_save_errno();Tu  Py_END_ALLOW_THREADSTu  (void)self; /* unused */Tu  (void)noarg; /* unused */u  pyresult = %s;a_convert_expr_from_curesult typeu  Tu  return pyresult;Tu  Py_INCREF(Py_None);Tu  return Py_None;aMETH_NOARGSaMETH_OaMETH_VARARGSu  {"%s", _cffi_f_%s, %s, NULL},a_generate_struct_or_union_declastructa_generate_struct_or_union_methoda_loading_struct_or_uniona_loaded_struct_or_unionaunionu_cffi_check_%s_%su_cffi_layout_%s_%su%s %sustatic void %s(%s *p)Tu  /* only to generate compile-time warnings or errors */Tu  (void)p;aenumfieldsutoo many values to unpack (expected 4)u  (void)((p->%s) << 1);u  { %s = &p->%s; (void)tmp; }aftypeu*tmpufield %rTaqualsu  /* %s */u%s(PyObject *self, PyObject *noarg)u  struct _cffi_aligncheck { char x; %s y; };Tu  static Py_ssize_t nums[] = {u    sizeof(%s),Tu    offsetof(struct _cffi_aligncheck, y),u    offsetof(%s, %s),alengthu    0,  /* %s */u    sizeof(((%s *)0)->%s),Tu    -1Tu  };Tu  return _cffi_get_struct_layout(nums);Tu  /* the next line is not executed, but compiled */u  %s(0);u  {"%s", %s, METH_NOARGS, NULL},apartiall:lnl:lnlaforce_flattenafixedlayoutacheckuVCPythonEngine._loaded_struct_or_union.<locals>.checkapopasizeofuwrong total sizeaalignofuwrong total alignmentlwiaoffsetofaBStructuwrong offset for field %ruwrong size for field %ru%s (we have %d, but C compiler says %d)a_generate_cpy_enum_decla_loading_cpy_enuma_loaded_cpy_enumu_cffi_%s_%sustatic int %s(PyObject *lib)Tu  PyObject *o;Tu  int res;u iaconsta_check_int_constant_valueavarw&u  i = (%s);u  o = %s;uvariable typeu  o = _cffi_from_c_int_const(%s);Tu  if (o == NULL)Tu    return -1;Tu  {Tu    PyObject *o1 = o;u    o = Py_BuildValue("On", o1, (Py_ssize_t)sizeof(%s));Tu    Py_DECREF(o1);Tu    if (o == NULL)Tu      return -1;u  res = PyObject_SetAttrString(lib, "%s", o);Tu  Py_DECREF(o);Tu  if (res < 0)u  return %s;u(lib)u  if ((%s) > 0 || (long)(%s) != %dL) {u  if ((%s) <= 0 || (unsigned long)(%s) != %dUL) {Tu    char buf[64];u    if ((%s) <= 0)u        snprintf(buf, 63, "%%ld", (long)(%s));Tu    elseu        snprintf(buf, 63, "%%lu", (unsigned long)(%s));Tu    PyErr_Format(_cffi_VerificationError,Tu                 "%s%s has the real value %s, not %s",u                 "%s", "%s", buf, "%d");Tw$a___D_u_cffi_e_%s_%saenumeratorsDadelayedFa_enum_funcnameaenumvaluesuenum %s: apartial_resolvedu...Tacheck_valuealength_is_unknownTavartpasize_tooDacategoryavarubad size: %r does not seem to be an array of %saresolve_lengthacastadelattragetteruVCPythonEngine._loaded_cpy_variable.<locals>.getterasetteruVCPythonEngine._loaded_cpy_variable.<locals>.setteraappendaptrTustatic int _cffi_setup_custom(PyObject *lib)a__doc__a__file__a__spec__aoriginahas_locationa__cached__TamodelaerrorTaVerificationErrorTa_imp_emulationa_imp_emulationaVCPythonEnginewxa_class_keya_gen_python_modulea__init__uVCPythonEngine.__init__apatch_extension_kwdsuVCPythonEngine.patch_extension_kwdsuVCPythonEngine.find_moduleuVCPythonEngine.collect_typesuVCPythonEngine._prntuVCPythonEngine._gettypenumuVCPythonEngine._do_collect_typeawrite_source_to_fuVCPythonEngine.write_source_to_fTnaload_libraryuVCPythonEngine.load_libraryuVCPythonEngine._get_declarationsuVCPythonEngine._generateuVCPythonEngine._loada_generate_nothinguVCPythonEngine._generate_nothinga_loaded_noopuVCPythonEngine._loaded_noopuVCPythonEngine._convert_funcarg_to_cuVCPythonEngine._extra_local_variablesuVCPythonEngine._convert_funcarg_to_c_ptr_or_arrayuVCPythonEngine._convert_expr_from_ca_generate_cpy_typedef_collecttypea_generate_cpy_typedef_decla_generate_cpy_typedef_methoda_loading_cpy_typedefa_loaded_cpy_typedefa_generate_cpy_function_collecttypeuVCPythonEngine._generate_cpy_function_collecttypea_generate_cpy_function_decluVCPythonEngine._generate_cpy_function_decla_generate_cpy_function_methoduVCPythonEngine._generate_cpy_function_methoda_loading_cpy_functiona_loaded_cpy_functionuVCPythonEngine._loaded_cpy_functiona_generate_cpy_struct_collecttypea_generate_cpy_struct_decluVCPythonEngine._generate_cpy_struct_decla_generate_cpy_struct_methoduVCPythonEngine._generate_cpy_struct_methoda_loading_cpy_structuVCPythonEngine._loading_cpy_structa_loaded_cpy_structuVCPythonEngine._loaded_cpy_structa_generate_cpy_union_collecttypea_generate_cpy_union_decluVCPythonEngine._generate_cpy_union_decla_generate_cpy_union_methoduVCPythonEngine._generate_cpy_union_methoda_loading_cpy_unionuVCPythonEngine._loading_cpy_uniona_loaded_cpy_unionuVCPythonEngine._loaded_cpy_unionuVCPythonEngine._generate_struct_or_union_decluVCPythonEngine._generate_struct_or_union_methoduVCPythonEngine._loading_struct_or_unionuVCPythonEngine._loaded_struct_or_uniona_generate_cpy_anonymous_collecttypea_generate_cpy_anonymous_decluVCPythonEngine._generate_cpy_anonymous_decla_generate_cpy_anonymous_methoduVCPythonEngine._generate_cpy_anonymous_methoda_loading_cpy_anonymousuVCPythonEngine._loading_cpy_anonymousa_loaded_cpy_anonymousuVCPythonEngine._loaded_cpy_anonymousTnaconstntFnuVCPythonEngine._generate_cpy_consta_generate_cpy_constant_collecttypeuVCPythonEngine._generate_cpy_constant_collecttypea_generate_cpy_constant_decluVCPythonEngine._generate_cpy_constant_decla_generate_cpy_constant_methoda_loading_cpy_constanta_loaded_cpy_constantuVCPythonEngine._check_int_constant_valueuVCPythonEngine._enum_funcnameTaenumuVCPythonEngine._generate_cpy_enum_decla_generate_cpy_enum_collecttypea_generate_cpy_enum_methoduVCPythonEngine._loading_cpy_enumuVCPythonEngine._loaded_cpy_enuma_generate_cpy_macro_decluVCPythonEngine._generate_cpy_macro_decla_generate_cpy_macro_collecttypea_generate_cpy_macro_methoda_loading_cpy_macroa_loaded_cpy_macroa_generate_cpy_variable_collecttypeuVCPythonEngine._generate_cpy_variable_collecttypea_generate_cpy_variable_decluVCPythonEngine._generate_cpy_variable_decla_generate_cpy_variable_methoda_loading_cpy_variablea_loaded_cpy_variableuVCPythonEngine._loaded_cpy_variableuVCPythonEngine._generate_setup_customu
#include <Python.h>
#include <stddef.h>

/* this block of #ifs should be kept exactly identical between
   c/_cffi_backend.c, cffi/vengine_cpy.py, cffi/vengine_gen.py
   and cffi/_cffi_include.h */
#if defined(_MSC_VER)
# include <malloc.h>   /* for alloca() */
# if _MSC_VER < 1600   /* MSVC < 2010 */
   typedef __int8 int8_t;
   typedef __int16 int16_t;
   typedef __int32 int32_t;
   typedef __int64 int64_t;
   typedef unsigned __int8 uint8_t;
   typedef unsigned __int16 uint16_t;
   typedef unsigned __int32 uint32_t;
   typedef unsigned __int64 uint64_t;
   typedef __int8 int_least8_t;
   typedef __int16 int_least16_t;
   typedef __int32 int_least32_t;
   typedef __int64 int_least64_t;
   typedef unsigned __int8 uint_least8_t;
   typedef unsigned __int16 uint_least16_t;
   typedef unsigned __int32 uint_least32_t;
   typedef unsigned __int64 uint_least64_t;
   typedef __int8 int_fast8_t;
   typedef __int16 int_fast16_t;
   typedef __int32 int_fast32_t;
   typedef __int64 int_fast64_t;
   typedef unsigned __int8 uint_fast8_t;
   typedef unsigned __int16 uint_fast16_t;
   typedef unsigned __int32 uint_fast32_t;
   typedef unsigned __int64 uint_fast64_t;
   typedef __int64 intmax_t;
   typedef unsigned __int64 uintmax_t;
# else
#  include <stdint.h>
# endif
# if _MSC_VER < 1800   /* MSVC < 2013 */
#  ifndef __cplusplus
    typedef unsigned char _Bool;
#  endif
# endif
#else
# include <stdint.h>
# if (defined (__SVR4) && defined (__sun)) || defined(_AIX) || defined(__hpux)
#  include <alloca.h>
# endif
#endif

#if PY_MAJOR_VERSION < 3
# undef PyCapsule_CheckExact
# undef PyCapsule_GetPointer
# define PyCapsule_CheckExact(capsule) (PyCObject_Check(capsule))
# define PyCapsule_GetPointer(capsule, name) \
    (PyCObject_AsVoidPtr(capsule))
#endif

#if PY_MAJOR_VERSION >= 3
# define PyInt_FromLong PyLong_FromLong
#endif

#define _cffi_from_c_double PyFloat_FromDouble
#define _cffi_from_c_float PyFloat_FromDouble
#define _cffi_from_c_long PyInt_FromLong
#define _cffi_from_c_ulong PyLong_FromUnsignedLong
#define _cffi_from_c_longlong PyLong_FromLongLong
#define _cffi_from_c_ulonglong PyLong_FromUnsignedLongLong
#define _cffi_from_c__Bool PyBool_FromLong

#define _cffi_to_c_double PyFloat_AsDouble
#define _cffi_to_c_float PyFloat_AsDouble

#define _cffi_from_c_int_const(x)                                        \
    (((x) > 0) ?                                                         \
        ((unsigned long long)(x) <= (unsigned long long)LONG_MAX) ?      \
            PyInt_FromLong((long)(x)) :                                  \
            PyLong_FromUnsignedLongLong((unsigned long long)(x)) :       \
        ((long long)(x) >= (long long)LONG_MIN) ?                        \
            PyInt_FromLong((long)(x)) :                                  \
            PyLong_FromLongLong((long long)(x)))

#define _cffi_from_c_int(x, type)                                        \
    (((type)-1) > 0 ? /* unsigned */                                     \
        (sizeof(type) < sizeof(long) ?                                   \
            PyInt_FromLong((long)x) :                                    \
         sizeof(type) == sizeof(long) ?                                  \
            PyLong_FromUnsignedLong((unsigned long)x) :                  \
            PyLong_FromUnsignedLongLong((unsigned long long)x)) :        \
        (sizeof(type) <= sizeof(long) ?                                  \
            PyInt_FromLong((long)x) :                                    \
            PyLong_FromLongLong((long long)x)))

#define _cffi_to_c_int(o, type)                                          \
    ((type)(                                                             \
     sizeof(type) == 1 ? (((type)-1) > 0 ? (type)_cffi_to_c_u8(o)        \
                                         : (type)_cffi_to_c_i8(o)) :     \
     sizeof(type) == 2 ? (((type)-1) > 0 ? (type)_cffi_to_c_u16(o)       \
                                         : (type)_cffi_to_c_i16(o)) :    \
     sizeof(type) == 4 ? (((type)-1) > 0 ? (type)_cffi_to_c_u32(o)       \
                                         : (type)_cffi_to_c_i32(o)) :    \
     sizeof(type) == 8 ? (((type)-1) > 0 ? (type)_cffi_to_c_u64(o)       \
                                         : (type)_cffi_to_c_i64(o)) :    \
     (Py_FatalError("unsupported size for type " #type), (type)0)))

#define _cffi_to_c_i8                                                    \
                 ((int(*)(PyObject *))_cffi_exports[1])
#define _cffi_to_c_u8                                                    \
                 ((int(*)(PyObject *))_cffi_exports[2])
#define _cffi_to_c_i16                                                   \
                 ((int(*)(PyObject *))_cffi_exports[3])
#define _cffi_to_c_u16                                                   \
                 ((int(*)(PyObject *))_cffi_exports[4])
#define _cffi_to_c_i32                                                   \
                 ((int(*)(PyObject *))_cffi_exports[5])
#define _cffi_to_c_u32                                                   \
                 ((unsigned int(*)(PyObject *))_cffi_exports[6])
#define _cffi_to_c_i64                                                   \
                 ((long long(*)(PyObject *))_cffi_exports[7])
#define _cffi_to_c_u64                                                   \
                 ((unsigned long long(*)(PyObject *))_cffi_exports[8])
#define _cffi_to_c_char                                                  \
                 ((int(*)(PyObject *))_cffi_exports[9])
#define _cffi_from_c_pointer                                             \
    ((PyObject *(*)(char *, CTypeDescrObject *))_cffi_exports[10])
#define _cffi_to_c_pointer                                               \
    ((char *(*)(PyObject *, CTypeDescrObject *))_cffi_exports[11])
#define _cffi_get_struct_layout                                          \
    ((PyObject *(*)(Py_ssize_t[]))_cffi_exports[12])
#define _cffi_restore_errno                                              \
    ((void(*)(void))_cffi_exports[13])
#define _cffi_save_errno                                                 \
    ((void(*)(void))_cffi_exports[14])
#define _cffi_from_c_char                                                \
    ((PyObject *(*)(char))_cffi_exports[15])
#define _cffi_from_c_deref                                               \
    ((PyObject *(*)(char *, CTypeDescrObject *))_cffi_exports[16])
#define _cffi_to_c                                                       \
    ((int(*)(char *, CTypeDescrObject *, PyObject *))_cffi_exports[17])
#define _cffi_from_c_struct                                              \
    ((PyObject *(*)(char *, CTypeDescrObject *))_cffi_exports[18])
#define _cffi_to_c_wchar_t                                               \
    ((wchar_t(*)(PyObject *))_cffi_exports[19])
#define _cffi_from_c_wchar_t                                             \
    ((PyObject *(*)(wchar_t))_cffi_exports[20])
#define _cffi_to_c_long_double                                           \
    ((long double(*)(PyObject *))_cffi_exports[21])
#define _cffi_to_c__Bool                                                 \
    ((_Bool(*)(PyObject *))_cffi_exports[22])
#define _cffi_prepare_pointer_call_argument                              \
    ((Py_ssize_t(*)(CTypeDescrObject *, PyObject *, char **))_cffi_exports[23])
#define _cffi_convert_array_from_object                                  \
    ((int(*)(char *, CTypeDescrObject *, PyObject *))_cffi_exports[24])
#define _CFFI_NUM_EXPORTS 25

typedef struct _ctypedescr CTypeDescrObject;

static void *_cffi_exports[_CFFI_NUM_EXPORTS];
static PyObject *_cffi_types, *_cffi_VerificationError;

static int _cffi_setup_custom(PyObject *lib);   /* forward */

static PyObject *_cffi_setup(PyObject *self, PyObject *args)
{
    PyObject *library;
    int was_alive = (_cffi_types != NULL);
    (void)self; /* unused */
    if (!PyArg_ParseTuple(args, "OOO", &_cffi_types, &_cffi_VerificationError,
                                       &library))
        return NULL;
    Py_INCREF(_cffi_types);
    Py_INCREF(_cffi_VerificationError);
    if (_cffi_setup_custom(library) < 0)
        return NULL;
    return PyBool_FromLong(was_alive);
}

union _cffi_union_alignment_u {
    unsigned char m_char;
    unsigned short m_short;
    unsigned int m_int;
    unsigned long m_long;
    unsigned long long m_longlong;
    float m_float;
    double m_double;
    long double m_longdouble;
};

struct _cffi_freeme_s {
    struct _cffi_freeme_s *next;
    union _cffi_union_alignment_u alignment;
};

#ifdef __GNUC__
  __attribute__((unused))
#endif
static int _cffi_convert_array_argument(CTypeDescrObject *ctptr, PyObject *arg,
                                        char **output_data, Py_ssize_t datasize,
                                        struct _cffi_freeme_s **freeme)
{
    char *p;
    if (datasize < 0)
        return -1;

    p = *output_data;
    if (p == NULL) {
        struct _cffi_freeme_s *fp = (struct _cffi_freeme_s *)PyObject_Malloc(
            offsetof(struct _cffi_freeme_s, alignment) + (size_t)datasize);
        if (fp == NULL)
            return -1;
        fp->next = *freeme;
        *freeme = fp;
        p = *output_data = (char *)&fp->alignment;
    }
    memset((void *)p, 0, (size_t)datasize);
    return _cffi_convert_array_from_object(p, ctptr, arg);
}

#ifdef __GNUC__
  __attribute__((unused))
#endif
static void _cffi_free_array_arguments(struct _cffi_freeme_s *freeme)
{
    do {
        void *p = (void *)freeme;
        freeme = freeme->next;
        PyObject_Free(p);
    } while (freeme != NULL);
}

static int _cffi_init(void)
{
    PyObject *module, *c_api_object = NULL;

    module = PyImport_ImportModule("_cffi_backend");
    if (module == NULL)
        goto failure;

    c_api_object = PyObject_GetAttrString(module, "_C_API");
    if (c_api_object == NULL)
        goto failure;
    if (!PyCapsule_CheckExact(c_api_object)) {
        PyErr_SetNone(PyExc_ImportError);
        goto failure;
    }
    memcpy(_cffi_exports, PyCapsule_GetPointer(c_api_object, "cffi"),
           _CFFI_NUM_EXPORTS * sizeof(void *));

    Py_DECREF(module);
    Py_DECREF(c_api_object);
    return 0;

  failure:
    Py_XDECREF(module);
    Py_XDECREF(c_api_object);
    return -1;
}

#define _cffi_type(num) ((CTypeDescrObject *)PyList_GET_ITEM(_cffi_types, num))

/**********/
ucffi\vengine_cpy.pyu<module cffi.vengine_cpy>Ta__class__amoduleaselfTa__class__TaselfaFFILibraryTaFFILibraryTaselfaverifierTaselfanameavalueaerr_prefixaprntTaselfatpavaracontextTaselfatpafromvaratovaraerrcodeaextraargaconverteraerrvalueTaselfatpafromvaratovaraerrcodeTaselfatpanumTaselfaprefixanameTaselfatpalocalvarsafreelinesTaselfastep_nameanameatpakindarealnameamethodweTaselfatpanameTaselfais_intanameatpacategoryavartpadelayedasize_tooacheck_valueaprntafuncnamearealexprTaselfatpanameais_intTaselfatpanameaprefixaenumeratorafuncnameaprntaenumvalueTaselfatpanameatypeTaselfatpanameaprntanumargsaargnameacontextwiatypealocalvarsafreelinesadeclaresult_codearngafreelineTaselfatpanameanumargsamethTaselfatpanameacheck_valueTaselfatpanameatp_ptrTaselfaprntT
aselfatpaprefixanameacheckfuncnamealayoutfuncnameacnameaprntafnameaftypeafbitsizeafqualweTaselfatpaprefixanamealayoutfuncnameTaselfalstTaselfatypeT
aselfamoduleastep_nameakwdsanameatpakindarealnameamethodweTaselfatpanameamoduleakwdsTaselfatpanameamodulealibraryaenumeratoraenumvalueTaselfatpanameamodulealibraryafuncTaselfatpanameamodulealibraryavalueasizeaBItemTypealengtharestaBArrayaptragetterasetterT
aselfatpacheckaffiaBStructalayoutacnamewiafnameaftypeafbitsizeafqualaBFieldTaselfatpanameamoduleTaselfatpanameamoduleaenumvaluesT
aselfatpaprefixanameamodulealayoutfuncnameafunctionalayoutatotalsizeatotalalignmentafieldofsafieldsizeacnameTaselfawhatTarealvalueaexpectedvalueamsgTaselfTaselfamodule_nameapathaso_suffixeswfafilenameadescrTalibraryaptrTaptrTaselfaflagsaprevious_flagsamoduleweaerrorarevmappingalstaFFILibraryalibraryawarningsTaselfakwdsTalibraryavalueaptrTaselfaprntamodnameaconstants.cffi.vengine_gen(averifieraffiaexport_symbolsa_struct_pending_verificationasetdefaultamodule_nameapathasysaosajoinabasenameaisfilea_fawritew
a_prntacffimod_headerapreamblea_generateTadeclaget_module_nameuvoid %s%s(void) { }
aPyInit_a_backendw.amodulefilenameaload_librarya_loadaloadingatypesaModuleTypela__prepare__aFFILibrarya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.vengine_gena__module__uVGenericEngine.load_library.<locals>.FFILibrarya__qualname__amodulea_cffi_generic_moduleaselfa_cffi_ffia_cffi_dira__dir__uVGenericEngine.load_library.<locals>.FFILibrary.__dir__a__orig_bases__TualoadedTalibrarya_parsera_declarationsaitemsutoo many values to unpack (expected 2)asorta_get_declarationsasplitTw lu_generate_gen_%s_%saVerificationErrorunot implemented in verify(): %ramodelaattach_exception_infou_%s_gen_%saFunctionPtrTypeaellipsisa_generate_gen_constaargsuaStructOrUnionw*aargnamesaappendu%sx%duargument of %saget_c_nameu %sacontextaresultainsertu *ravoid_typeu, aarglistavoidu_cffi_f_%saabiw u %s%s(%s)uresult of %sTw{u*r = aVoidTypeureturn u  %s%s(%s);Tw}a_load_constantaPointerTypeaindirectionsaindirect_argsatypafldtypesu'%s' is used as result type, but is opaquea_get_c_namea_get_cached_btypeatpaload_functiona_make_struct_wrapperanewfunctionabase_tpanameu<genexpr>uVGenericEngine._loaded_gen_function.<locals>.<genexpr>anewfuncuVGenericEngine._make_struct_wrapper.<locals>.newfunca_cffi_base_typeanewaBTypeaoldfuncwiabackendanewpla_generate_struct_or_union_declastructa_loading_struct_or_uniona_loaded_struct_or_unionaunionafldnamesu_cffi_check_%s_%su_cffi_layout_%s_%su%s %sustatic void %s(%s *p)Tu  /* only to generate compile-time warnings or errors */Tu  (void)p;aenumfieldsutoo many values to unpack (expected 4)aPrimitiveTypeais_integer_typeaprntu  (void)((p->%s) << 1);u  { %s = &p->%s; (void)tmp; }aftypeu*tmpufield %rTaqualsu  /* %s */uintptr_t %s(intptr_t i)u  struct _cffi_aligncheck { char x; %s y; };Tu  static intptr_t nums[] = {u    sizeof(%s),Tu    offsetof(struct _cffi_aligncheck, y),u    offsetof(%s, %s),aArrayTypealengthu    0,  /* %s */u    sizeof(((%s *)0)->%s),Tu    -1Tu  };Tu  return nums[i];Tu  /* the next line is not executed, but compiled */u  %s(0);a_typeof_lockedTuintptr_t(*)(intptr_t)afunctionanumalayoutapartial:lnl:lnlaforce_flattenafixedlayoutacheckuVGenericEngine._loaded_struct_or_union.<locals>.checkapopasizeofuwrong total sizeaalignofuwrong total alignmentlaoffsetofaBStructuwrong offset for field %ruwrong size for field %ru%s (we have %d, but C compiler says %d)aEnumTypea_generate_gen_enum_decla_loading_gen_enuma_loaded_gen_enumu_cffi_%s_%saconstuint %s(char *out_error)a_check_int_constant_valueTu  return 0;uint %s(long long *out_value)u  *out_value = (long long)(%s);u  return (%s) <= 0;avarw&uconst *u %s%s(void)u  return (%s%s);u_cffi_const_%sa_load_known_int_constantTulong long*Tuint(*)(long long*)Tulong longlu(*)(void)u  if ((%s) > 0 || (long)(%s) != %dL) {u  if ((%s) <= 0 || (unsigned long)(%s) != %dUL) {Tu    char buf[64];u    if ((%s) <= 0)u        sprintf(buf, "%%ld", (long)(%s));Tu    elseu        sprintf(buf, "%%lu", (unsigned long)(%s));Tu    sprintf(out_error, "%s has the real value %s, not %s",u            "%s", buf, "%d");:nldnTu    return -1;Tu  }Tuchar[]Tuint(*)(char*)lastringuutf-8areplaceTw$a___D_u_cffi_e_%s_%saenumeratorsa_enum_funcnameaenumvaluesapartial_resolvedu...Tacheck_valuealength_is_unknownu_cffi_sizeof_%susize_t %s(void)u  return sizeof(%s);aitemDacategoryavarTusize_t(*)(void)ubad size: %r does not seem to be an array of %saresolve_lengthacastu_cffi_var_%su*(*)(void)agetteruVGenericEngine._loaded_gen_variable.<locals>.getterasetteruVGenericEngine._loaded_gen_variable.<locals>.setteraptra__doc__a__file__a__spec__aoriginahas_locationa__cached__TamodelaerrorTaVerificationErrorTOobjectaVGenericEnginewga_class_keya_gen_python_modulea__init__uVGenericEngine.__init__apatch_extension_kwdsuVGenericEngine.patch_extension_kwdsafind_moduleuVGenericEngine.find_moduleacollect_typesuVGenericEngine.collect_typesuVGenericEngine._prntawrite_source_to_fuVGenericEngine.write_source_to_fTluVGenericEngine.load_libraryuVGenericEngine._get_declarationsuVGenericEngine._generateuVGenericEngine._loada_generate_nothinguVGenericEngine._generate_nothinga_loaded_noopuVGenericEngine._loaded_noopa_generate_gen_typedef_decla_loading_gen_typedefa_loaded_gen_typedefa_generate_gen_function_decluVGenericEngine._generate_gen_function_decla_loading_gen_functiona_loaded_gen_functionuVGenericEngine._loaded_gen_functionuVGenericEngine._make_struct_wrappera_generate_gen_struct_decluVGenericEngine._generate_gen_struct_decla_loading_gen_structuVGenericEngine._loading_gen_structa_loaded_gen_structuVGenericEngine._loaded_gen_structa_generate_gen_union_decluVGenericEngine._generate_gen_union_decla_loading_gen_unionuVGenericEngine._loading_gen_uniona_loaded_gen_unionuVGenericEngine._loaded_gen_unionuVGenericEngine._generate_struct_or_union_decluVGenericEngine._loading_struct_or_unionuVGenericEngine._loaded_struct_or_uniona_generate_gen_anonymous_decluVGenericEngine._generate_gen_anonymous_decla_loading_gen_anonymousuVGenericEngine._loading_gen_anonymousa_loaded_gen_anonymousuVGenericEngine._loaded_gen_anonymousTnaconstnuVGenericEngine._generate_gen_consta_generate_gen_constant_decluVGenericEngine._generate_gen_constant_decla_loading_gen_constantTnuVGenericEngine._load_constanta_loaded_gen_constantuVGenericEngine._loaded_gen_constantuVGenericEngine._check_int_constant_valueuVGenericEngine._load_known_int_constantuVGenericEngine._enum_funcnameTaenumuVGenericEngine._generate_gen_enum_decluVGenericEngine._loading_gen_enumuVGenericEngine._loaded_gen_enuma_generate_gen_macro_decluVGenericEngine._generate_gen_macro_decla_loading_gen_macroa_loaded_gen_macrouVGenericEngine._loaded_gen_macroa_generate_gen_variable_decluVGenericEngine._generate_gen_variable_decla_loading_gen_variablea_loaded_gen_variableuVGenericEngine._loaded_gen_variableu
#include <stdio.h>
#include <stddef.h>
#include <stdarg.h>
#include <errno.h>
#include <sys/types.h>   /* XXX for ssize_t on some platforms */

/* this block of #ifs should be kept exactly identical between
   c/_cffi_backend.c, cffi/vengine_cpy.py, cffi/vengine_gen.py
   and cffi/_cffi_include.h */
#if defined(_MSC_VER)
# include <malloc.h>   /* for alloca() */
# if _MSC_VER < 1600   /* MSVC < 2010 */
   typedef __int8 int8_t;
   typedef __int16 int16_t;
   typedef __int32 int32_t;
   typedef __int64 int64_t;
   typedef unsigned __int8 uint8_t;
   typedef unsigned __int16 uint16_t;
   typedef unsigned __int32 uint32_t;
   typedef unsigned __int64 uint64_t;
   typedef __int8 int_least8_t;
   typedef __int16 int_least16_t;
   typedef __int32 int_least32_t;
   typedef __int64 int_least64_t;
   typedef unsigned __int8 uint_least8_t;
   typedef unsigned __int16 uint_least16_t;
   typedef unsigned __int32 uint_least32_t;
   typedef unsigned __int64 uint_least64_t;
   typedef __int8 int_fast8_t;
   typedef __int16 int_fast16_t;
   typedef __int32 int_fast32_t;
   typedef __int64 int_fast64_t;
   typedef unsigned __int8 uint_fast8_t;
   typedef unsigned __int16 uint_fast16_t;
   typedef unsigned __int32 uint_fast32_t;
   typedef unsigned __int64 uint_fast64_t;
   typedef __int64 intmax_t;
   typedef unsigned __int64 uintmax_t;
# else
#  include <stdint.h>
# endif
# if _MSC_VER < 1800   /* MSVC < 2013 */
#  ifndef __cplusplus
    typedef unsigned char _Bool;
#  endif
# endif
#else
# include <stdint.h>
# if (defined (__SVR4) && defined (__sun)) || defined(_AIX) || defined(__hpux)
#  include <alloca.h>
# endif
#endif
ucffi\vengine_gen.pyTa.0atypu<module cffi.vengine_gen>Ta__class__amoduleaselfTa__class__TaselfaFFILibraryTaFFILibraryTaselfaverifierTaselfanameavalueaprntTaselfaprefixanameTaselfastep_nameanameatpakindarealnameamethodweTaselfatpanameT
aselfais_intanameatpacategoryacheck_valueaprntafuncnameaampersandaextraTaselfatpanameais_intTaselfatpanameaprefixaenumeratorafuncnameaprntaenumvalueTaselfatpanameaprntanumargsaargnameswiatypeaindirectionacontextaarglistatpresultawrappernameaabiafuncdeclaresult_codeTaselfatpanameacheck_valueTaselfatpanameaprntafuncnameatp_ptrT
aselfatpaprefixanameacheckfuncnamealayoutfuncnameacnameaprntafnameaftypeafbitsizeafqualweTaselfalstT
aselfamoduleastep_nameakwdsanameatpakindarealnameamethodweTaselfais_intatpanameamoduleacheck_valueafuncnameavalueaBTypeaBFuncafunctionwpanegativeaBLongLongafntypeextraTaselfamoduleafuncnameaBTypeaBFuncafunctionwpaerrorTaselfatpanameamoduleakwdsTaselfatpanameamodulealibraryais_intavalueTaselfatpanameamodulealibraryaenumeratoraenumvalueTaselfatpanameamodulealibraryanewfunctionaindirectionsabase_tpaindirect_argswiatypaindirect_resultaBFuncawrappernameTaselfatpanameamodulealibraryacheck_valueavalueTaselfatpanameamodulealibraryafuncnameaBFuncafunctionasizeaBItemTypealengtharestatp_ptravalueaBArrayaptragetterasetterT
aselfatpacheckaffiaBStructalayoutacnamewiafnameaftypeafbitsizeafqualaBFieldTaselfatpanameamoduleTaselfatpanameamoduleaprefixaenumvaluesafuncnameTaselfatpaprefixanameamodulealayoutfuncnameaBFuncafunctionalayoutanumwxatotalsizeatotalalignmentafieldofsafieldsizeacnameTaselfaoldfuncwiatpabase_tpabackendaBTypeaffianewfuncTaselfawhatTarealvalueaexpectedvalueamsgTaselfTaselfamodule_nameapathaso_suffixesaso_suffixabasenameadirnameafilenameTalibraryaptrTaptrTaselfaflagsabackendafilenameamoduleaFFILibraryalibraryTaargswiabackendaBTypeaoldfuncTaBTypeabackendwiaoldfuncTaargsaresaffiaBTypeaoldfuncTaBTypeaffiaoldfuncTaselfakwdsTalibraryavalueaptrTaselfaprntaprefixamodname.cffi.verifieraimportlibamachineryaEXTENSION_SUFFIXES:nnna_parsera_uses_new_featureaVerificationErrorufeature not supported with ffi.verify(), but only with ffi.set_source(): %saffiapreambleaffiplatformaflattena_locate_engine_classa_vengineapatch_extension_kwdsakwdsaflagsamake_relative_toucan't specify both 'modulename' and 'tag'wu3.10a__version_verifier_modules__aflattened_kwdsa_cdefsourcesuutf-8abinasciiacrc32:lnlqu0xwL:lnlw0u_cffi_%s_%s%s%sa_class_keya_get_so_suffixesla_caller_dir_pycacheatmpdirajoinasourcefilenameamodulefilenameaext_packagea_has_sourcea_has_modulea_locka__enter__a__exit__Tusource code already writtena_write_sourceTnnnuWrite the C source code.  It is produced in 'self.sourcefilename',
        which can be tweaked beforehand.Tumodule already compileda_compile_moduleuWrite the C source code (if not done already) and compile it.
        This produces a dynamic link library in 'self.modulefilename'.a_locate_modulea_load_libraryuGet a C module from this Verifier instance.
        Returns an instance of a FFILibrary class that behaves like the
        objects returned by ffi.dlopen(), but that delegates all
        operations to the C module.  If necessary, the C code is written
        and compiled first.
        asplitTw.laendswithTa_dasysagettotalrefcount:nlnabasenameamaybe_relative_pathaget_module_nameaget_extensiona_gen_python_moduleadirnamearelative_toacopyaLIST_OF_FILE_NAMESTOlistOtupleukeyword '%s' should be a list or tupleaosapatha__doc__a__path__afind_moduleacollect_typesa_fawrite_source_to_fa_write_source_toaNativeIOagetvaluewrareadaneeds_writtena_ensure_dirwwawriteacompileasamefileashutilamoveaload_librarya_FORCE_GENERIC_ENGINEa_cffi_backendw?a_backenduTavengine_genlavengine_genaVGenericEngineTavengine_cpyavengine_cpyaVCPythonEnginea_TMPDIRaenvironagetTaCFFI_TMPDIRa_getframeTlaf_codeaco_filenameaabspatha__pycache__uSet the temporary directory to use instead of __pycache__.u.calowerastartswithTa_cffi_asuffixTu.caunlinkabuildalistdiradiraisdiraclean_diraappenduClean up the temporary directory by removing all files in it
    called `_cffi_*.{c,so}` as well as the `build` subdirectory.a_extension_suffixesu.pydamakedirsa__file__a__spec__aoriginahas_locationa__cached__aioTa__version_verifier_modules__TaffiplatformaerrorTaVerificationErroruimportlib.machineryaStringIOTOobjecta__prepare__aVerifiera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.verifiera__module__a__qualname__TnnnuFu.cnna__init__uVerifier.__init__Tnawrite_sourceuVerifier.write_sourceacompile_moduleuVerifier.compile_moduleuVerifier.load_libraryuVerifier.get_module_nameuVerifier.get_extensionagenerates_python_moduleuVerifier.generates_python_moduleuVerifier.make_relative_touVerifier._locate_moduleuVerifier._write_source_touVerifier._write_sourceuVerifier._compile_moduleuVerifier._load_librarya__orig_bases__aset_tmpdirTnFacleanup_tmpdirucffi\verifier.pyu<module cffi.verifier>Ta__class__Taselfaffiapreambleatmpdiramodulenameaext_packageatagaforce_generic_engineasource_extensionaflagsarelative_toakwdsaflattened_kwdsavengine_classakeyak1ak2asuffixTaresultafilenameTaselfatmpdiraoutputfilenameasameTafilenameadirnameTasuffixesTaselfTaffiaforce_generic_enginea_cffi_backendavengine_genavengine_cpyTaselfapkgapathafilenameTaselfafilewfasource_dataafpaneeds_writtenTaselfafileTatmpdirakeep_soafilelistasuffixafnaclean_diradirTaselfasourcenameamodnameTaselfabasenameTaselfakwdsarelative_toadirnameakeyalstTadirname.charset_normalizer.apiTObytearrayObytesuExpected object of type bytes or bytearray, got: {0}aloggeralevelaaddHandleraexplain_handlerasetLevelaTRACEadebugTuEncoding detection on empty bytes, assuming utf_8 intention.aremoveHandleraprevious_logger_levelaloggingaWARNINGaCharsetMatchesaCharsetMatchautf_8Zualogucp_isolation is set. use this flag for debugging purpose. limited list of encoding allowed : %s.u, aiana_nameucp_exclusion is set. use this flag for debugging purpose. limited list of encoding excluded : %s.uoverride steps (%i) and chunk_size (%i) as content does not fit (%i byte(s) given) parameters.lastepsalengthachunk_sizeaTOO_SMALL_SEQUENCEaTOO_BIG_SEQUENCEuTrying to detect encoding from a tiny portion of ({}) byte(s).uUsing lazy str decoding because the payload is quite large, ({}) byte(s).aany_specified_encodinguDetected declarative mark in sequence. Priority +1 given for %s.aidentify_sig_or_bomutoo many values to unpack (expected 2)aprioritized_encodingsuDetected a SIG or BOM mark on first %i byte(s). Priority +1 given for %s.aappendTaasciiTautf_8aIANA_SUPPORTEDacp_isolationatestedaaddasig_encodingashould_strip_sig_or_bomSautf_16autf_32uEncoding %s won't be tested as-is because it require a BOM. Will try some sub-encoder LE/BE.Sautf_7uEncoding %s won't be tested as-is because detection is unreliable without BOM/SIG.ais_multi_byte_encodingTEModuleNotFoundErrorEImportErroruEncoding %s does not provide an IncrementalDecoderasequences:nl nasig_payloadl TEUnicodeDecodeErrorELookupErroruCode page %s does not fit given bytes sequence at ALL. %satested_but_hard_failureatested_but_soft_failureais_cp_similaraencoding_ianau%s is deemed too similar to code page %s and was consider unsuited already. Continuing!aencoding_soft_failedluCode page %s is a multi byte encoding table and it appear that at least one character was encoded using n-bytes.lamaxlacut_sequence_chunksadecoded_payloadamd_chunksamd_ratiosamess_ratioathresholdlaearly_stop_countuLazyStr Loading: After MD chunk decode, code page %s does not fit given bytes sequence at ALL. %s:lPnnadecodeDaerrorsastrictuLazyStr Loading: After final lookup, code page %s does not fit given bytes sequence at ALL. %samax_chunk_gave_upu%s was excluded because of initial chaos probing. Gave up %i time(s). Computed mean chaos is %f %%.aroundldDandigitslaasciiaspecified_encodingu%s passed initial chaos probing. Mean measured chaos is %f %%aencoding_languagesamb_encoding_languagesu{} should target any language(s) of {}acoherence_ratioalanguage_thresholdw,acd_ratiosamerge_coherence_ratiosuWe detected language {} using {}aresultsf?uEncoding detection: %s is most likely the one.uEncoding detection: %s is most likely the one as we detected a BOM or SIG within the beginning of the sequence.afallback_u8afallback_asciiafallback_specifieduNothing got out of the detection process. Using ASCII/UTF-8/Specified fallback.uEncoding detection: %s will be used as a fallback matchaencodingafingerprintTuEncoding detection: utf_8 will be used as a fallback matchTuEncoding detection: ascii will be used as a fallback matchuEncoding detection: Found %s as plausible (best-candidate) for content. With %i alternatives.abestTuEncoding detection: Unable to determine any suitable charset.u
    Given a raw bytes sequence, return the best possibles charset usable to render str objects.
    If there is no results, it is a strong indicator that the source is binary/not text.
    By default, the process will extract 5 blocks of 512o each to assess the mess and coherence of a given sequence.
    And will give up a particular code page after 20% of measured mess. Those criteria are customizable at will.

    The preemptive behavior DOES NOT replace the traditional detection workflow, it prioritize a particular code page
    but never take it for granted. Can improve the performance.

    You may want to focus your attention to some code page or/and not others, use cp_isolation and cp_exclusion for that
    purpose.

    This function will strip the SIG in the payload/sequence every time except on UTF-16, UTF-32.
    By default the library does not setup any handler other than the NullHandler, if you choose to set the 'explain'
    toggle to True it will alter the logger configuration to add a StreamHandler that is suitable for debugging.
    Custom logging format and handler can be set manually.
    afrom_bytesareadu
    Same thing than the function from_bytes but using a file pointer that is already ready.
    Will not close the file pointer.
    arba__enter__a__exit__afrom_fpTnnnu
    Same thing than the function from_bytes but with one extra step. Opening and reading given file path in binary mode.
    Can raise IOError.
    aPathLikeafrom_pathTastepsachunk_sizeathresholdacp_isolationacp_exclusionapreemptive_behaviouraexplainalanguage_thresholdaenable_fallbackTObytesObytearrayu
    Detect if the given input (file, bytes, or path) points to a binary file. aka. not a string.
    Based on the same main heuristic algorithms and default kwargs at the sole exception that fallbacks match
    are disabled to be stricter around ASCII-compatible but unlikely to be a string.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aBinaryIOaListaOptionalaSetaUnionacdTacoherence_ratioaencoding_languagesamb_encoding_languagesamerge_coherence_ratiosaconstantTaIANA_SUPPORTEDaTOO_BIG_SEQUENCEaTOO_SMALL_SEQUENCEaTRACEamdTamess_ratioamodelsTaCharsetMatchaCharsetMatchesautilsTaany_specified_encodingacut_sequence_chunksaiana_nameaidentify_sig_or_bomais_cp_similarais_multi_byte_encodingashould_strip_sig_or_bomagetLoggerTacharset_normalizeraStreamHandlerasetFormatteraFormatterTu%(asctime)s | %(levelname)s | %(message)sTllf?nntFf?tacp_exclusionapreemptive_behaviouraexplainaenable_fallbackareturnafpapathTllf?nntFf?Fafp_or_path_or_payloadais_binaryucharset_normalizer\api.pyu<module charset_normalizer.api>T/asequencesastepsachunk_sizeathresholdacp_isolationacp_exclusionapreemptive_behaviouraexplainalanguage_thresholdaenable_fallbackaprevious_logger_levelalengthais_too_small_sequenceais_too_large_sequenceaprioritized_encodingsaspecified_encodingatestedatested_but_hard_failureatested_but_soft_failureafallback_asciiafallback_u8afallback_specifiedaresultsadecoded_payloadabom_or_sig_availableastrip_sig_or_bomais_multi_byte_decoderasimilar_soft_failure_testamulti_byte_bonusamax_chunk_gave_upaearly_stop_countamd_chunksamean_mess_ratioatarget_languagesasig_encodingasig_payloadaencoding_ianaweaencoding_soft_failedar_alazy_str_hard_failureamd_ratiosachunkafallback_entryacd_ratiosachunk_languagesacd_ratios_mergedT
afpastepsachunk_sizeathresholdacp_isolationacp_exclusionapreemptive_behaviouraexplainalanguage_thresholdaenable_fallbackTapathastepsachunk_sizeathresholdacp_isolationacp_exclusionapreemptive_behaviouraexplainalanguage_thresholdaenable_fallbackafpTafp_or_path_or_payloadastepsachunk_sizeathresholdacp_isolationacp_exclusionapreemptive_behaviouraexplainalanguage_thresholdaenable_fallbackaguesses.charset_normalizer.cd4ais_multi_byte_encodinguFunction not supported on multi-byte code pageuencodings.{}aimport_moduleaIncrementalDecoderTaignoreTaerrorsl;l@llwpadecodeaunicode_rangeais_unicode_range_secondaryaseen_rangeslacharacter_countasortedf333333?u
    Return associated unicode ranges in a single byte code page.
    aFREQUENCIESaitemsutoo many values to unpack (expected 2)alanguagesaappendu
    Return inferred languages used with a unicode range.
    aencoding_unicode_rangeaLatinuLatin Basedaunicode_range_languagesu
    Single-byte encoding language association. Some code page are heavily linked to particular language(s).
    This function does the correspondence.
    astartswithTashift_Taiso2022_jpTaeuc_jacp932aJapaneseTagbaZH_NAMESaChineseTaiso2022_kraKO_NAMESaKoreanu
    Multi-byte encoding language association. Some code page are heavily linked to particular language(s).
    This function does the correspondence.
    atarget_have_accentsais_accentuatedatarget_pure_latinais_latinacharacteru
    Determine main aspects from a supported language if it contains accents and if is pure Latin.
    aget_target_featuresu<lambda>ualphabet_languages.<locals>.<lambda>Takeyareverseu
    Return associated languages associated to given characters.
    u<genexpr>ualphabet_languages.<locals>.<genexpr>u{} not availableaindexatarget_language_characters_countaordered_characters_countlacharacter_rank_projectionacharacter_rank_in_languagelacharacter_approved_countu
    Determine if a ordered characters list (by occurrence from most appearance to rarest) match a particular language.
    The result is a ratio between 0. (absolutely no correspondence) and 1. (near perfect fit).
    Beware that is function is not strict on the match in order to ease the detection. (Meaning close match is 1.)
    aisalphaalayersais_suspiciously_successive_rangeacharacter_rangealoweravaluesu
    Given a decoded text sequence, return a list of str. Unicode range / alphabet separation.
    Ex. a text containing English/Latin with a bit a Hebrew will return two items in the resulting list;
    One containing the latin letters and the other hebrew.
    aper_language_ratiosaroundumerge_coherence_ratios.<locals>.<lambda>u
    This function merge results previously given by the function coherence_ratio.
    The return type is the same as coherence_ratio.
    areplaceTu—uaindex_resultsafiltered_resultsamaxu
    We shall NOT return "English—" in CoherenceMatches because it is an alternative
    of "English". This function only keeps the best match and remove the em-dash in it.
    ufilter_alt_coherence_matches.<locals>.<genexpr>asplitTw,aremoveTuLatin Basedaalpha_unicode_splitaCounteramost_commonaTOO_SMALL_SEQUENCEalg_inclusion_listaalphabet_languagesaignore_non_latinacharacters_popularity_compareapopular_character_orderedf?asufficient_match_countaresultsafilter_alt_coherence_matchesucoherence_ratio.<locals>.<lambda>u
    Detect ANY language that can be identified in given sequence. The sequence will be analysed by layers.
    A layer = Character extraction by alphabets/ranges.
    ucoherence_ratio.<locals>.<genexpr>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aimportlibacodecsTaIncrementalDecoderacollectionsTaCounteralru_cacheaTypeCounteraDictaListaOptionalaTupleaconstantTaFREQUENCIESaKO_NAMESaLANGUAGE_SUPPORTED_COUNTaTOO_SMALL_SEQUENCEaZH_NAMESaLANGUAGE_SUPPORTED_COUNTamdTais_suspiciously_successive_rangeamodelsTaCoherenceMatchesaCoherenceMatchesautilsTais_accentuatedais_latinais_multi_byte_encodingais_unicode_range_secondaryaunicode_rangeaiana_nameareturnaprimary_rangeaencoding_languagesamb_encoding_languagesTamaxsizealanguageTOboolpTFacharactersaordered_charactersadecoded_sequenceamerge_coherence_ratiosTlTf?nathresholdalg_inclusionacoherence_ratioucharset_normalizer\cd.pyTa.0wcwoTa.0acharacterTa.0weaindex_resultsTwxu<module charset_normalizer.cd>Tadecoded_sequencealayersacharacter_rangealayer_target_rangeacharacteradiscovered_rangeTacharactersaignore_non_latinalanguagesacharacter_countacharacter_match_countaratioasource_have_accentsalanguagealanguage_charactersatarget_have_accentsatarget_pure_latinTalanguageaordered_charactersacharacter_approved_countaordered_characters_countatarget_language_characters_countalarge_alphabetacharacter_rank_in_languageaexpected_projection_ratioacharacter_rank_projectionacharacters_before_sourceacharacters_after_sourceacharacters_beforeacharacters_afterabefore_match_countaafter_match_countaFREQUENCIES_language_setacharacteracharacter_rankTadecoded_sequenceathresholdalg_inclusionaresultsaignore_non_latinasufficient_match_countasequence_frequenciesacharacter_countapopular_character_orderedaratioalg_inclusion_listalayeramost_commonalanguageTaiana_nameaunicode_rangesaprimary_rangeaspecified_rangeTaiana_namewpaseen_rangesacharacter_countachunkacharacter_rangeadecoderwiTaresultsaindex_resultsano_em_nameafiltered_resultsaresultalanguagearatioTalanguageatarget_have_accentsatarget_pure_latinacharacterTaiana_nameTaresultsaper_language_ratiosaresultasub_resultalanguagearatioamergeTaprimary_rangealanguagesalanguageacharactersacharacteru.charset_normalizerw.u
Charset-Normalizer
~~~~~~~~~~~~~~
The Real First Universal Charset Detector.
A library that helps you read text from an unknown charset encoding.
Motivated by chardet, This package is trying to resolve the issue by taking a new approach.
All IANA character set names for which the Python core library provides codecs are supported.

Basic usage:
   >>> from charset_normalizer import from_bytes
   >>> results = from_bytes('Bсеки човек има право на образование. Oбразованието!'.encode('utf_8'))
   >>> best_guess = results.best()
   >>> str(best_guess)
   'Bсеки човек има право на образование. Oбразованието!'

Others methods and usages are available - see the full documentation
at <https://github.com/Ousret/charset_normalizer>.
:copyright: (c) 2021 by Ahmed TAHRI
:license: MIT, see LICENSE for more details.
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_charset_normalizeru\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__alogginglaapiTafrom_bytesafrom_fpafrom_pathais_binarylafrom_bytesafrom_fpafrom_pathais_binaryalegacyTadetectadetectamodelsTaCharsetMatchaCharsetMatchesaCharsetMatchaCharsetMatchesautilsTaset_logging_handleraset_logging_handleraversionTaVERSIONa__version__aVERSIONa__version__T
afrom_fpafrom_pathafrom_bytesais_binaryadetectaCharsetMatchaCharsetMatchesa__version__aVERSIONaset_logging_handlera__all__agetLoggerTacharset_normalizeraaddHandleraNullHandlerucharset_normalizer\__init__.pyu<module charset_normalizer>u.charset_normalizer.constantNNaendswithTa_codecSatactisambcsarot_13a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__acodecsTaBOM_UTF8aBOM_UTF16_BEaBOM_UTF16_LEaBOM_UTF32_BEaBOM_UTF32_LElaBOM_UTF8aBOM_UTF16_BEaBOM_UTF16_LEaBOM_UTF32_BEaBOM_UTF32_LEuencodings.aliasesTaaliasesaaliasesareTaIGNORECASEacompileaIGNORECASEacompileare_compileaDictaListaSetaUnionautf_8autf_7Lc+/v8c+/v9c+/v+c+/v/c+/v8-agb18030c13autf_32autf_16aENCODING_MARKSl aTOO_SMALL_SEQUENCElaTOO_BIG_SEQUENCElaUTF8_MAXIMAL_ALLOCATIONDuControl characteruBasic LatinuLatin-1 SupplementuLatin Extended-AuLatin Extended-BuIPA ExtensionsuSpacing Modifier LettersuCombining Diacritical MarksuGreek and CopticaCyrillicuCyrillic SupplementaArmenianaHebrewaArabicaSyriacuArabic SupplementaThaanaaNKoaSamaritanaMandaicuSyriac SupplementuArabic Extended-BuArabic Extended-AaDevanagariaBengaliaGurmukhiaGujaratiaOriyaaTamilaTeluguaKannadaaMalayalamaSinhalaaThaiaLaoaTibetanaMyanmaraGeorgianuHangul JamoaEthiopicuEthiopic SupplementaCherokeeuUnified Canadian Aboriginal SyllabicsaOghamaRunicaTagalogaHanunooaBuhidaTagbanwaaKhmeraMongolianuUnified Canadian Aboriginal Syllabics ExtendedaLimbuuTai LeuNew Tai LueuKhmer SymbolsaBugineseuTai ThamuCombining Diacritical Marks ExtendedaBalineseaSundaneseaBatakaLepchauOl ChikiuCyrillic Extended-CuGeorgian ExtendeduSundanese SupplementuVedic ExtensionsuPhonetic ExtensionsuPhonetic Extensions SupplementuCombining Diacritical Marks SupplementuLatin Extended AdditionaluGreek ExtendeduGeneral PunctuationuSuperscripts and SubscriptsuCurrency SymbolsuCombining Diacritical Marks for SymbolsuLetterlike SymbolsuNumber FormsaArrowsuMathematical OperatorsuMiscellaneous TechnicaluControl PicturesuOptical Character RecognitionuEnclosed AlphanumericsuBox DrawinguBlock ElementsuGeometric ShapesuMiscellaneous SymbolsaDingbatsuMiscellaneous Mathematical Symbols-AuSupplemental Arrows-AuBraille PatternsuSupplemental Arrows-BuMiscellaneous Mathematical Symbols-BuSupplemental Mathematical OperatorsuMiscellaneous Symbols and ArrowsaGlagoliticuLatin Extended-CaCopticuGeorgian SupplementaTifinaghuEthiopic ExtendeduCyrillic Extended-AuSupplemental PunctuationuCJK Radicals SupplementuKangxi RadicalsuIdeographic Description CharactersuCJK Symbols and PunctuationaHiraganaaKatakanaaBopomofouHangul Compatibility JamoaKanbunuBopomofo ExtendeduCJK StrokesuKatakana Phonetic ExtensionsuEnclosed CJK Letters and MonthsuCJK CompatibilityuCJK Unified Ideographs Extension AuYijing Hexagram SymbolsuCJK Unified IdeographsuYi SyllablesuYi RadicalsaLisuaVaiuCyrillic Extended-BaBamumuModifier Tone LettersuLatin Extended-DuSyloti NagriuCommon Indic Number FormsuPhags-paaSaurashtrauDevanagari ExtendeduKayah LiaRejanguHangul Jamo Extended-AaJavaneseuMyanmar Extended-BaChamuMyanmar Extended-AuTai VietuMeetei Mayek ExtensionsuEthiopic Extended-AuLatin Extended-EuCherokee SupplementuMeetei MayekuHangul SyllablesuHangul Jamo Extended-BuHigh SurrogatesuHigh Private Use SurrogatesuLow SurrogatesuPrivate Use AreauCJK Compatibility IdeographsuAlphabetic Presentation FormsuArabic Presentation Forms-AuVariation SelectorsuVertical FormsuCombining Half MarksuCJK Compatibility FormsuSmall Form VariantsuArabic Presentation Forms-BuHalfwidth and Fullwidth FormsaSpecialsuLinear B SyllabaryuLinear B IdeogramsuAegean NumbersuAncient Greek NumbersuAncient SymbolsuPhaistos DiscaLycianaCarianuCoptic Epact NumbersuOld ItalicaGothicuOld PermicaUgariticuOld PersianaDeseretaShavianaOsmanyaaOsageaElbasanuCaucasian AlbanianaVithkuqiuLinear AuLatin Extended-FuCypriot SyllabaryuImperial AramaicaPalmyreneaNabataeanaHatranaPhoenicianaLydianuMeroitic HieroglyphsuMeroitic CursiveaKharoshthiuOld South ArabianuOld North ArabianaManichaeanaAvestanuInscriptional ParthianuInscriptional PahlaviuPsalter PahlaviuOld TurkicuOld HungarianuHanifi RohingyauRumi Numeral SymbolsaYezidiuArabic Extended-CuOld SogdianaSogdianuOld UyghuraChorasmianaElymaicaBrahmiaKaithiuSora SompengaChakmaaMahajaniaSharadauSinhala Archaic NumbersaKhojkiaMultaniaKhudawadiaGranthaaNewaaTirhutaaSiddhamaModiuMongolian SupplementaTakriaAhomaDograuWarang CitiuDives AkuruaNandinagariuZanabazar SquareaSoyombouUnified Canadian Aboriginal Syllabics Extended-AuPau Cin HauuDevanagari Extended-AaBhaiksukiaMarchenuMasaram GondiuGunjala GondiaMakasaraKawiuLisu SupplementuTamil SupplementaCuneiformuCuneiform Numbers and PunctuationuEarly Dynastic CuneiformuCypro-MinoanuEgyptian HieroglyphsuEgyptian Hieroglyph Format ControlsuAnatolian HieroglyphsuBamum SupplementaMroaTangsauBassa VahuPahawh HmongaMedefaidrinaMiaouIdeographic Symbols and PunctuationaTangutuTangut ComponentsuKhitan Small ScriptuTangut SupplementuKana Extended-BuKana SupplementuKana Extended-AuSmall Kana ExtensionaNushuaDuployanuShorthand Format ControlsuZnamenny Musical NotationuByzantine Musical SymbolsuMusical SymbolsuAncient Greek Musical NotationuKaktovik NumeralsuMayan NumeralsuTai Xuan Jing SymbolsuCounting Rod NumeralsuMathematical Alphanumeric SymbolsuSutton SignWritinguLatin Extended-GuGlagolitic SupplementuCyrillic Extended-DuNyiakeng Puachue HmongaTotoaWanchouNag MundariuEthiopic Extended-BuMende KikakuiaAdlamuIndic Siyaq NumbersuOttoman Siyaq NumbersuArabic Mathematical Alphabetic SymbolsuMahjong TilesuDomino TilesuPlaying CardsuEnclosed Alphanumeric SupplementuEnclosed Ideographic SupplementuMiscellaneous Symbols and PictographsuEmoticons range(Emoji)uOrnamental DingbatsuTransport and Map SymbolsuAlchemical SymbolsuGeometric Shapes ExtendeduSupplemental Arrows-CuSupplemental Symbols and PictographsuChess SymbolsuSymbols and Pictographs Extended-AuSymbols for Legacy ComputinguCJK Unified Ideographs Extension BuCJK Unified Ideographs Extension CuCJK Unified Ideographs Extension DuCJK Unified Ideographs Extension EuCJK Unified Ideographs Extension FuCJK Compatibility Ideographs SupplementuCJK Unified Ideographs Extension GuCJK Unified Ideographs Extension HaTagsuVariation Selectors SupplementuSupplementary Private Use Area-AuSupplementary Private Use Area-B;ll l;l ll;lll;lll;llPl;lPll;lll;llpl;lpll;lll;ll0l;l0ll;lll;lll;llPl;lPll;lll;lll;ll@l;l@l`l;l`lpl;lpll;lll;lll;ll
l;l
l
l;l
ll;lll;lll;lll;ll
l;l
l
l;l
ll;lll;lll;lll;lll;lll;lll;lll;lll;lll;lll;lll;lll;ll l;l l@l;l@l`l;l`ll;lll;lll;lll;llPl;lPll;lll;lll;ll l;l ll;lll;lll;lll;lll;llPl;lPll;lll;lll;lll;lll;lll;lll;lll;lll;ll l;l lp l;lp l l;l l l;l l!l;l!lP!l;lP!l!l;l!l"l;l"l#l;l#l$l;l$l@$l;l@$l`$l;l`$l%l;l%l%l;l%l%l;l%l&l;l&l'l;l'l'l;l'l'l;l'l(l;l(l)l;l)l)l;l)l*l;l*l+l;l+l,l;l,l`,l;l`,l,l;l,l-l;l-l0-l;l0-l-l;l-l-l;l-l.l;l.l.l;l.l/l;l/l/l;l/l0l;l0l@0l;l@0l0l;l0l1l;l1l01l;l01l1l;l1l1l;l1l1l;l1l1l;l1l2l;l2l3l;l3l4l;l4lMl;lMlNl;lNll;lll;llФl;lФll;ll@l;l@ll;lll;ll l;l ll;ll0l;l0l@l;l@ll;lll;lll;ll0l;l0l`l;l`ll;lll;lll;ll`l;l`ll;lll;lll;ll0l;l0lpl;lpll;lll;lll;lll;lll;lll;lll;lll;lll;llPl;lPll;lll;ll l;l l0l;l0lPl;lPlpl;lpll;lll;lll;lll;lll;ll@l;l@ll;lll;lll;lll;lll;lll;ll0l;l0lPl;lPll;lll;lll;llPl;lPll;lll;lll;ll0l;l0lpl;lpll;lll;lll;ll@l;l@l`l;l`ll;lll;lll;ll l;l l@l;lll;ll
l;l
l`
l;l`
l
l;l
l
l;l
ll;ll@l;l@l`l;l`ll;lll;llPl;ll
l;l
l@
l;l`ll;lll;lll;ll0l;l0lpl;lpll;lll;lll;lll;lll;lll;llPl;lPll;lll;lll;llPl;lll;lll;lll;lll;lll;lll;ll`l;l`ll;lll;llPl;llPl;lll;ll`l;lll;llPl;lPll;lll;lll;ll`l;llpl;lpll;ll`l;l`ll;lll;ll`l;lll;ll l;l l$l;l$l$l;l$lP%l;l/l0l;l0l04l;l04l`4l;lDlFl;lhl@jl;l@jlpjl;lpjljl;ljlkl;lklkl;l@nlnl;lolol;lolpl;lpll;lll;lll;lll;lll;lll;ll0l;l0lpl;lpll;lll;lll;lll;lll;lll;llPl;lll;lll;ll`l;l`ll;lll;lll;lll;ll0l;l0ll;llPl;lll;lll;lll;lll;lll;ll`l;lpll;llPl;lll;ll0l;l0ll;lll;lll;lll;lll;llPl;lPll;lll;lll;lll;lll;lll;llpl;lpll;lll;lll;ll@l;l@l l;l ll;lll;ll l;llPl;lPl#l;lll;lll;lll;lllaUNICODE_RANGES_COMBINEDTOstrOrangeLaSupplementaExtendedaExtensionsaModifieraMarksaPunctuationaSymbolsaFormsaOperatorsaMiscellaneousaDrawingaBlockaShapesaSupplementalaTagsaUNICODE_SECONDARY_RANGE_KEYWORDu(?:(?:encoding)|(?:charset)|(?:coding))(?:[\:= ]{1,10})(?:[\"\']?)([a-zA-Z0-9\-_]+)(?:[\"\']?)aRE_POSSIBLE_ENCODING_INDICATIONLacp720acp737acp856acp874acp875acp1006akoi8_rakoi8_takoi8_uaIANA_NO_ALIASESasortedu<lambda>avaluesaIANA_SUPPORTEDaIANA_SUPPORTED_COUNTD(acp037acp1026acp1125acp1140acp1250acp1251acp1252acp1253acp1254acp1257acp273acp437acp500acp850acp857acp858acp860acp861acp862acp863acp865acp866aiso8859_10aiso8859_11aiso8859_13aiso8859_14aiso8859_15aiso8859_16aiso8859_2aiso8859_3aiso8859_4aiso8859_7aiso8859_9akz1048alatin_1amac_icelandamac_romanamac_turkishaptcp154atis_620Lacp1026acp1140acp273acp500Lacp037acp1140acp273acp500Lacp866Lacp037acp1026acp273acp500Laiso8859_2Lakz1048aptcp154Laiso8859_15aiso8859_9alatin_1Laiso8859_7Laiso8859_15aiso8859_9alatin_1Laiso8859_13Lacp037acp1026acp1140acp500Lacp850acp858acp860acp861acp862acp863acp865Lacp037acp1026acp1140acp273Lacp437acp857acp858acp865Lacp850acp858acp865Lacp437acp850acp857acp865Lacp437acp861acp862acp863acp865Lacp437acp860acp862acp863acp865Lacp437acp860acp861acp863acp865Lacp437acp860acp861acp862acp865Lacp437acp850acp857acp858acp860acp861acp862acp863Lacp1125Laiso8859_14aiso8859_15aiso8859_4aiso8859_9alatin_1Latis_620Lacp1257Laiso8859_10aiso8859_15aiso8859_16aiso8859_3aiso8859_9alatin_1Lacp1252acp1254aiso8859_10aiso8859_14aiso8859_16aiso8859_3aiso8859_9alatin_1Laiso8859_14aiso8859_15aiso8859_2aiso8859_3aiso8859_9alatin_1Lacp1250aiso8859_16aiso8859_4Laiso8859_14aiso8859_15aiso8859_16aiso8859_9alatin_1Laiso8859_10aiso8859_2aiso8859_9alatin_1Lacp1253L
acp1252acp1254acp1258aiso8859_10aiso8859_14aiso8859_15aiso8859_16aiso8859_3aiso8859_4alatin_1Lacp1251aptcp154L
acp1252acp1254acp1258aiso8859_10aiso8859_14aiso8859_15aiso8859_16aiso8859_3aiso8859_4aiso8859_9Lamac_romanamac_turkishLamac_icelandamac_turkishLamac_icelandamac_romanLacp1251akz1048Laiso8859_11aIANA_SUPPORTED_SIMILARD aiso2022_kraiso2022_jpaeuc_kratis_620autf_32aeuc_jpakoi8_raiso8859_1aiso8859_2aiso8859_5aiso8859_6aiso8859_7aiso8859_8autf_16acp855amac_cyrillicagb2312agb18030acp932acp866autf_8autf_8_sigashift_jisabig5acp1250acp1251acp1252acp1253acp1255acp1256acp1254acp949uISO-2022-KRuISO-2022-JPuEUC-KRuTIS-620uUTF-32uEUC-JPuKOI8-RuISO-8859-1uISO-8859-2uISO-8859-5uISO-8859-6uISO-8859-7uISO-8859-8uUTF-16aIBM855aMacCyrillicaGB2312aGB18030aCP932aIBM866uutf-8uUTF-8-SIGaSHIFT_JISaBig5uwindows-1250uwindows-1251uWindows-1252uwindows-1253uwindows-1255uwindows-1256uWindows-1254aCP949aCHARDET_CORRESPONDENCETOstrpSw[w=w-w{w/w"w]w;w&w}w<w|w,w>w:aCOMMON_SAFE_ASCII_CHARACTERSSajohabaeuc_kracp949aKO_NAMESSacp950ahzabig5abig5hkscsaZH_NAMESlaTRACED)aEnglishuEnglish—aGermanaFrenchaDutchaItalianaPolishaSpanishaRussianaJapaneseuJapanese—uJapanese——aPortugueseaSwedishaChineseaUkrainianaNorwegianaFinnishaVietnameseaCzechaHungarianaKoreanaIndonesianaTurkishaRomanianaFarsiaArabicaDanishaSerbianaLithuanianaSloveneaSlovakaHebrewaBulgarianaCroatianaHindiaEstonianaThaiaGreekaTamilaKazakhLwewawtwiwownwswrwhwlwdwcwuwmwfwpwgwwwywbwvwkwxwjwzwqLwewawtwiwownwswrwhwlwdwcwmwuwfwpwgwwwbwywvwkwjwxwzwqLwewnwiwrwswtwawdwhwuwlwgwowcwmwbwfwkwwwzwpwvuüuäuöwjLwewawswnwiwtwrwlwuwowdwcwpwmuéwvwgwfwbwhwquàwxuèwywjLwewnwawiwrwtwowdwswlwgwhwvwmwuwkwcwpwbwwwjwzwfwywxuëLwewiwawownwlwtwrwswcwdwuwpwmwgwvwfwbwzwhwquèuàwkwyuòLwawiwowewnwrwzwwwswcwtwkwywdwpwmwuwlwjułwgwbwhuąuęuóLwewawownwswrwiwlwdwtwcwuwmwpwbwgwvwfwyuówhwquíwjwzuáLuоuаuеuиuнuсuтuрuвuлuкuмuдuпuуuгuяuыuзuбuйuьuчuхuжuцLdu人u一u大u亅u丁u丨u竹u笑u口u日u今u二u彳u行u十u土u丶u寸u寺u時u乙u丿u乂u气u気u冂u巾u亠u市u目u儿u見u八u小u凵u県u月u彐u門u間u木u東u山u出u本u中u刀u分u耳u又u取u最u言u田u心u思u刂u前u京u尹u事u生u厶u云u会u未u来u白u冫u楽u灬u馬u尸u尺u駅u明u耂u者u了u阝u都u高u卜u占u厂u广u店u子u申u奄u亻u俺u上u方u冖u学u衣u艮u食u自L`uーuンuスu・uルuトuリuイuアuラuッuクuドuシuレuジuタuフuロuカuテuマuィuグuバuムuプuオuコuデuニuウuメuサuビuナuブuャuエuュuチuキuズuダuパuミuェuョuハuセuベuガuモuツuネuボuソuノuァuヴuワuポuペuピuケuゴuギuザuホuゲuォuヤuヒuユuヨuヘuゼuヌuゥuゾuヶuヂuヲuヅuヵuヱuヰuヮuヽu゠uヾuヷuヿuヸuヹuヺL]uのuにuるuたuとuはuしuいuをuでuてuがuなuれuかuらuさuっuりuすuあuもuこuまuうuくuよuきuんuめuおuけuそuつuだuやuえuどuわuちuみuせuじuばuへuびuずuろuほuげuむuべuひuょuゆuぶuごuゃuねuふuぐuぎuぼuゅuづuざuぞuぬuぜuぱuぽuぷuぴuぃuぁuぇuぺuゞuぢuぉuぅuゐuゝuゑu゛u゜uゎuゔu゚uゟu゙uゕuゖLwawewowswiwrwdwnwtwmwuwcwlwpwgwvwbwfwhuãwquéuçuáwzuíLwewawnwrwtwswiwlwdwowmwkwgwvwhwfwuwpuäwcwbuöuåwywjwxLdu的u一u是u不u了u在u人u有u我u他u这u个u们u中u来u上u大u为u和u国u地u到u以u说u时u要u就u出u会u可u也u你u对u生u能u而u子u那u得u于u着u下u自u之u年u过u发u后u作u里u用u道u行u所u然u家u种u事u成u方u多u经u么u去u法u学u如u都u同u现u当u没u动u面u起u看u定u天u分u还u进u好u小u部u其u些u主u样u理u心u她u本u前u开u但u因u只u从u想u实LuоuаuнuіuиuрuвuтuеuсuкuлuуuдuмuпuзuяuьuбuгuйuчuхuцuїLwewrwnwtwawswiwowlwdwgwkwmwvwfwpwuwbwhuåwywjuøwcuæwwLwawiwnwtwewswlwowuwkuäwmwrwvwjwhwpwywduöwgwcwbwfwwwzLwnwhwtwiwcwgwawowuwmwlwruàuđwswewvwpwbwyuưwduáwkuộuếLwowewawnwtwswiwlwvwrwkwdwuwmwpuíwcwhwzuáwywjwbuěuéuřLwewawtwlwswnwkwrwiwowzuáuéwgwmwbwywvwdwhwuwpwjuöwfwcLu이u다u에u의u는u로u하u을u가u고u지u서u한u은u기u으u년u대u사u시u를u리u도u인u스u일LwawnwewiwrwtwuwswdwkwmwlwgwpwbwowhwywjwcwwwfwvwzwxwqLwawewiwnwrwluıwkwdwtwswmwywuwowbuüuşwvwgwzwhwcwpuçuğLwewiwawrwnwtwuwlwowcwswdwpwmuăwfwvuîwgwbușuțwzwhuâwjLuاuیuرuدuنuهuوuمuتuبuسuلuکuشuزuفuگuعuخuقuجuآuپuحuطuصLuاuلuيuمuوuنuرuتuبuةuعuدuسuفuهuكuقuأuحuجuشuطuصuىuخuإLwewrwnwtwawiwswdwlwowgwmwkwfwvwuwbwhwpuåwyuøuæwcwjwwLuаuиuоuеuнuрuсuуuтuкuјuвuдuмuпuлuгuзuбwawiwewownuцuшLwiwawswowrwewtwnwuwkwmwlwpwvwdwjwguėwbwyuųušužwcuąuįLwewawiwownwrwswlwtwjwvwkwdwpwmwuwzwbwgwhučwcušužwfwyLwowawewnwiwrwvwtwswlwkwdwmwpwuwcwhwjwbwzuáwyuýuíučuéLuיuוuהuלuרuבuתuמuאuשuנuעuםuדuקuחuפuסuכuגuטuצuןuזuךLuаuиuоuеuнuтuрuсuвuлuкuдuпuмuзuгuяuъuуuбuчuцuйuжuщuхLwawiwowewnwrwjwswtwuwkwlwvwdwmwpwgwzwbwcučwhušužućwfLuकuरuसuनuतuमuहuपuयuलuवuजuदuगuबuशuटuअuएuथuभuडuचuधuषuइLwawiwewswtwlwuwnwowkwrwdwmwvwgwpwjwhuäwbuõuüwfwcuöwyLuาuนuรuอuกuเuงuมuยuลuวuดuทuสuตuะuปuบuคuหuแuจuพuชuขuใLuαuτuοuιuεuνuρuσuκuηuπuςuυuμuλuίuόuάuγuέuδuήuωuχuθuύLuகuதuபuடuரuமuலuனuவuறuயuளuசuநuஇuணuஅuஆuழuஙuஎuஉuஒuஸLuаuыuеuнuтuрuлuіuдuсuмuқuкuоuбuиuуuғuжuңuзuшuйuпuгuөaFREQUENCIESaLANGUAGE_SUPPORTED_COUNTucharset_normalizer\constant.pyTwxu<module charset_normalizer.constant>u.charset_normalizer.legacy0awarnucharset-normalizer disregard arguments 'w,u' in legacy function detect()uTObytearrayObytesuExpected object of type bytes or bytearray, got: {0}afrom_bytesabestaencodingalanguageaUnknownf?achaosautf_8aboma_sigaCHARDET_CORRESPONDENCEaconfidenceu
    chardet legacy method
    Detect the encoding of the given byte string. It should be mostly backward-compatible.
    Encoding name will match Chardet own writing whenever possible. (Not on encoding name unsupported by it)
    This function is deprecated and should be used to migrate your project easily, consult the documentation for
    further information. Not planned for removal.

    :param byte_str:     The byte sequence to examine.
    :param should_rename_legacy:  Should we rename legacy encodings
                                  to their more modern equivalents?
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aAnylaDictaOptionalaUnionawarningsTawarnaapiTafrom_byteslaconstantTaCHARDET_CORRESPONDENCETFabyte_strashould_rename_legacyakwargsareturnTOstrOfloatadetectucharset_normalizer\legacy.pyu<module charset_normalizer.legacy>Tabyte_strashould_rename_legacyakwargswraencodingalanguageaconfidence.charset_normalizer.modelsWa_payloada_encodinga_mean_mess_ratioa_languagesa_has_sig_or_boma_unicode_rangesa_leavesZa_mean_coherence_ratioa_output_payloada_output_encodinga_stringaCharsetMatchu__eq__ cannot be invoked on {} and {}.aencodingafingerprintachaosacoherencef{Gz?f{Gz?aTOO_BIG_SEQUENCEamulti_byte_usageu
        Implemented to make sorted available upon CharsetMatches items.
        arawastrictu<CharsetMatch '{}' bytes({})>uUnable to add instance <{}> as a submatch of a CharsetMatchaappendaaliasesaitemsutoo many values to unpack (expected 2)aselfaalso_known_asu
        Encoding name are known by many name, using this could help when searching for IBM855 when it's listed as CP855.
        lu
        Return the complete list of possible languages found in decoded sequence.
        Usually not really useful. Returned list may be empty even if 'language' property return something != 'Unknown'.
        aasciiacould_be_from_charsetaEnglishucharset_normalizer.cdTaencoding_languagesamb_encoding_languagesaencoding_languagesamb_encoding_languagesais_multi_byte_encodinguLatin BasedaUnknownu
        Most probable language found in decoded sequence. If none were detected or inferred, the property will return
        "Unknown".
        laroundldDandigitslu
        Original untouched bytes.
        aunicode_rangeasortedu
        The complete list of encoding that output the exact SAME str result and therefore could be the originating
        encoding.
        This list does include the encoding available in property 'encoding'.
        aencodeareplaceu
        Method to get re-encoded bytes payload using given target encoding. Default to UTF-8.
        Any errors will be simply ignored by the encoder NOT replaced.
        asha256aoutputahexdigestu
        Retrieve the unique SHA256 computed using the transformed (re-encoded) payload. Not the original one.
        a_resultsa__iter__uCharsetMatches.__iter__aiana_nameu
        Retrieve a single item either by its position or encoding name (alias may be used here).
        Raise KeyError upon invalid index or encoding not present in results.
        uCannot append instance '{}' to CharsetMatchesaitemaadd_submatchu
        Insert a single match. Will be inserted accordingly to preserve sort.
        Can be inserted as a submatch.
        u
        Simply return the first match. Strict equivalent to matches[0].
        abestu
        Redundant method, call the method best(). Kept for BC reasons.
        apathaunicode_pathaencoding_aliasesaalternative_encodingsalanguageaalphabetsahas_sig_or_bomais_preferredadumpsDaensure_asciiaindenttla__doc__a__file__a__spec__aoriginahas_locationa__cached__uencodings.aliasesTaaliasesahashlibTasha256ajsonTadumpsaAnyaDictaIteratoraListaOptionalaTupleaUnionaconstantTaTOO_BIG_SEQUENCEautilsTaiana_nameais_multi_byte_encodingaunicode_rangeucharset_normalizer.modelsa__module__a__qualname__Tnapayloadaguessed_encodingamean_mess_ratioalanguagesaCoherenceMatchesadecoded_payloada__init__uCharsetMatch.__init__DaotherareturnOobjectOboola__eq__uCharsetMatch.__eq__a__lt__uCharsetMatch.__lt__DareturnOfloatuCharsetMatch.multi_byte_usageDareturnOstra__str__uCharsetMatch.__str__a__repr__uCharsetMatch.__repr__DaotherareturnaCharsetMatchnuCharsetMatch.add_submatchuCharsetMatch.encodingareturnuCharsetMatch.encoding_aliasesDareturnOboolabomuCharsetMatch.bomabyte_order_markuCharsetMatch.byte_order_markuCharsetMatch.languagesuCharsetMatch.languageuCharsetMatch.chaosuCharsetMatch.coherenceapercent_chaosuCharsetMatch.percent_chaosapercent_coherenceuCharsetMatch.percent_coherenceDareturnObytesuCharsetMatch.rawasubmatchuCharsetMatch.submatchahas_submatchuCharsetMatch.has_submatchuCharsetMatch.alphabetsuCharsetMatch.could_be_from_charsetTautf_8DaencodingareturnOstrObytesuCharsetMatch.outputuCharsetMatch.fingerprintTu
    Container with every CharsetMatch items ordered by default from most probable to the less one.
    Act like a list(iterable) but does not implements all related methods.
    aCharsetMatchesaresultsuCharsetMatches.__init__TOintOstra__getitem__uCharsetMatches.__getitem__DareturnOinta__len__uCharsetMatches.__len__a__bool__uCharsetMatches.__bool__uCharsetMatches.appenduCharsetMatches.bestafirstuCharsetMatches.firstTOstrOfloataCoherenceMatchaCliDetectionResultuCliDetectionResult.__init__a__dict__uCliDetectionResult.__dict__ato_jsonuCliDetectionResult.to_jsonucharset_normalizer\models.pyu<module charset_normalizer.models>Ta__class__TaselfTaselfaotherTaselfaitemaresultTaselfapathaencodingaencoding_aliasesaalternative_encodingsalanguageaalphabetsahas_sig_or_bomachaosacoherenceaunicode_pathais_preferredTaselfapayloadaguessed_encodingamean_mess_ratioahas_sig_or_bomalanguagesadecoded_payloadTaselfaresultsTaselfaotherachaos_differenceacoherence_differenceTaselfadetected_rangesTaselfaitemamatchTaselfaalso_known_aswuwpTaselfaencoding_languagesamb_encoding_languagesalanguagesTaselfaencodingu.charset_normalizer.utilseaunicodedataanameuWITH GRAVEuWITH ACUTEuWITH CEDILLAuWITH DIAERESISuWITH CIRCUMFLEXuWITH TILDEuWITH MACRONuWITH RING ABOVEadecompositionasplitTw llaUNICODE_RANGES_COMBINEDaitemsutoo many values to unpack (expected 2)u
    Retrieve the Unicode range official name from a single character.
    aLATINacategorywPaunicode_rangeaPunctuationwSwNaFormsaLoaEmoticonsaPictographsaisspaceSu｜w+w>w<wZSaPdaPoaPcaisloweraisupperaCJKaHIRAGANAaKATAKANAaHANGULaTHAIaARABICuISOLATED FORMaUNICODE_SECONDARY_RANGE_KEYWORDarange_nameu<genexpr>uis_unicode_range_secondary.<locals>.<genexpr>aisprintablewu﻿afindallaRE_POSSIBLE_ENCODING_INDICATIONaminadecodeTaasciiaignoreTaerrorsalowerareplaceTw-w_aaliasesu
    Extract using ASCII-only decoder any specified encoding in the first n-bytes.
    Sautf_16_leautf_8_sigautf_8autf_7autf_16autf_16_beautf_32_beautf_32_leautf_32uencodings.{}aimport_moduleaIncrementalDecoderaMultibyteIncrementalDecoderu
    Verify is a specific encoding is a multi byte one based on it IANA name
    aENCODING_MARKSasequenceastartswithTncu
    Identify and extract SIG/BOM in given sequence.
    Sautf_16autf_32uUnable to retrieve IANA for '{}'arangesaaddais_multi_byte_encodingZaiana_name_bTaignore;lllaid_aaid_bacharacter_match_countllaIANA_SUPPORTED_SIMILARu
    Determine if two code page are at least 80% similar. IANA_SUPPORTED_SIMILAR dict was generated using
    the function cp_similarity.
    aloggingagetLoggerasetLevelaStreamHandlerasetFormatteraFormatteraaddHandleradecoded_payloadais_multi_byte_decoderaoffsetsachunk_sizeasequencesabom_or_sig_availableastrip_sig_or_bomasig_payloadaencoding_ianaaignoreastrictllDaerrorsaignoreachunkacut_sequence_chunksa__doc__a__file__a__spec__aoriginahas_locationa__cached__aimportlibacodecsTaIncrementalDecoderuencodings.aliasesTaaliasesalru_cacheareTafindallaGeneratoraListaOptionalaSetaTupleaUniona_multibytecodecTaMultibyteIncrementalDecoderaconstantTaENCODING_MARKSaIANA_SUPPORTED_SIMILARaRE_POSSIBLE_ENCODING_INDICATIONaUNICODE_RANGES_COMBINEDaUNICODE_SECONDARY_RANGE_KEYWORDaUTF8_MAXIMAL_ALLOCATIONaUTF8_MAXIMAL_ALLOCATIONTamaxsizeDacharacterareturnOstrOboolais_accentuatedDacharacterareturnOstrparemove_accentacharacterareturnais_latinais_punctuationais_symbolais_emoticonais_separatorais_case_variableais_cjkais_hiraganaais_katakanaais_hangulais_thaiais_arabicais_arabic_isolated_formDarange_nameareturnOstrOboolais_unicode_range_secondaryais_unprintableTl asearch_zoneaany_specified_encodingTlDanameareturnOstrOboolaidentify_sig_or_bomDaiana_encodingareturnOstrOboolashould_strip_sig_or_bomTtDacp_nameastrictareturnOstrOboolOstraiana_nameadecoded_sequencearange_scanDaiana_name_aaiana_name_bareturnOstrpOfloatacp_similarityDaiana_name_aaiana_name_bareturnOstrpOboolais_cp_similaracharset_normalizeraINFOu%(asctime)s | %(levelname)s | %(message)sDanamealevelaformat_stringareturnOstrOintOstrnaset_logging_handlerTnTOstrnnucharset_normalizer\utils.pyTa.0akeywordarange_nameu<module charset_normalizer.utils>Tasequenceasearch_zoneaseq_lenaresultsaencoding_aliasaencoding_ianaaspecified_encodingTaiana_name_aaiana_name_baid_aaid_bacharacter_match_countato_be_decodedadecoder_aadecoder_bwiTasequencesaencoding_ianaaoffsetsachunk_sizeabom_or_sig_availableastrip_sig_or_bomasig_payloadais_multi_byte_decoderadecoded_payloadachunk_partial_size_chkwiachunkachunk_endacut_sequencewjTacp_nameastrictaencoding_aliasaencoding_ianaTasequenceamarksaiana_encodingamarkTacharacteradescriptionTacharacteracharacter_nameTacharacterTaiana_name_aaiana_name_bTacharacteracharacter_rangeTanameTacharacteracharacter_categoryacharacter_rangeTacharacteracharacter_categoryTarange_nameTadecoded_sequencearangesacharacter_rangeacharacterTacharacteradecomposedacodesTanamealevelaformat_stringaloggerahandlerTaiana_encodingTacharacteracharacter_ordarange_nameaord_rangeu.charset_normalizer.versionu
Expose version
a__doc__a__file__a__spec__aoriginahas_locationa__cached__u3.3.2a__version__w.aVERSIONucharset_normalizer\version.pyu<module charset_normalizer.version>u.commctrlclla__doc__a__file__a__spec__aoriginahas_locationa__cached__laWM_USERlaICC_LISTVIEW_CLASSESlaICC_TREEVIEW_CLASSESlaICC_BAR_CLASSESaICC_TAB_CLASSESlaICC_UPDOWN_CLASSl aICC_PROGRESS_CLASSl@aICC_HOTKEY_CLASSlaICC_ANIMATE_CLASSlaICC_WIN95_CLASSESlaICC_DATE_CLASSESlaICC_USEREX_CLASSESaICC_COOL_CLASSESlaICC_INTERNET_CLASSESlaICC_PAGESCROLLER_CLASSl aICC_NATIVEFNTCTL_CLASSldaODT_HEADERleaODT_TABlfaODT_LISTVIEWlaPY_0UaNM_FIRSTaNM_LASTaLVN_FIRSTaLVN_LASTaHDN_FIRSTaHDN_LASTaTVN_FIRSTaTVN_LASTaTTN_FIRSTaTTN_LASTaTCN_FIRSTaTCN_LASTaCDN_FIRSTaCDN_LASTaTBN_FIRSTaTBN_LASTaUDN_FIRSTaUDN_LASTaMCN_FIRSTaMCN_LASTaDTN_FIRSTaDTN_LASTaCBEN_FIRSTaCBEN_LASTaRBN_FIRSTaRBN_LASTaIPN_FIRSTaIPN_LASTaSBN_FIRSTaSBN_LASTaPGN_FIRSTaPGN_LASTaLVM_FIRSTlaTV_FIRSTlaHDM_FIRSTlaTCM_FIRSTlaPGM_FIRSTaCCM_FIRSTaCCM_SETBKCOLORaCCM_SETCOLORSCHEMEaCCM_GETCOLORSCHEMEaCCM_GETDROPTARGETaCCM_SETUNICODEFORMATaCCM_GETUNICODEFORMATaINFOTIPSIZEaNM_OUTOFMEMORYaNM_CLICKaNM_DBLCLKaNM_RETURNaNM_RCLICKaNM_RDBLCLKaNM_SETFOCUSaNM_KILLFOCUSaNM_CUSTOMDRAWaNM_HOVERaNM_NCHITTESTaNM_KEYDOWNaNM_RELEASEDCAPTUREaNM_SETCURSORaNM_CHARlBaMSGF_COMMCTRL_BEGINDRAGlBaMSGF_COMMCTRL_SIZEHEADERlBaMSGF_COMMCTRL_DRAGSELECTlBaMSGF_COMMCTRL_TOOLBARCUSTaCDRF_DODEFAULTaCDRF_NEWFONTaCDRF_SKIPDEFAULTaCDRF_NOTIFYPOSTPAINTaCDRF_NOTIFYITEMDRAWaCDRF_NOTIFYSUBITEMDRAWaCDRF_NOTIFYPOSTERASEaCDDS_PREPAINTaCDDS_POSTPAINTlaCDDS_PREERASEaCDDS_POSTERASElaCDDS_ITEMaCDDS_ITEMPREPAINTaCDDS_ITEMPOSTPAINTaCDDS_ITEMPREERASEaCDDS_ITEMPOSTERASElaCDDS_SUBITEMaCDIS_SELECTEDaCDIS_GRAYEDaCDIS_DISABLEDaCDIS_CHECKEDaCDIS_FOCUSaCDIS_DEFAULTaCDIS_HOTaCDIS_MARKEDaCDIS_INDETERMINATElaCLR_NONElaCLR_DEFAULTaILC_MASKaILC_COLORlaILC_COLORDDBaILC_COLOR4aILC_COLOR8aILC_COLOR16laILC_COLOR24aILC_COLOR32aILC_PALETTEaILD_NORMALaILD_TRANSPARENTaILD_MASKaILD_IMAGEaILD_ROPaILD_BLEND25aILD_BLEND50laILD_OVERLAYMASKaILD_SELECTEDaILD_FOCUSaILD_BLENDaCLR_HILIGHTaILCF_MOVEaILCF_SWAPaSysHeader32aWC_HEADERAaWC_HEADERaHDS_HORZaHDS_BUTTONSaHDS_HOTTRACKaHDS_HIDDENaHDS_DRAGDROPaHDS_FULLDRAGaHDI_WIDTHaHDI_HEIGHTaHDI_TEXTaHDI_FORMATaHDI_LPARAMaHDI_BITMAPaHDI_IMAGEaHDI_DI_SETITEMaHDI_ORDERaHDF_LEFTaHDF_RIGHTaHDF_CENTERaHDF_JUSTIFYMASKaHDF_RTLREADINGlaHDF_OWNERDRAWl@aHDF_STRINGaHDF_BITMAPaHDF_BITMAP_ON_RIGHTaHDF_IMAGEaHDM_GETITEMCOUNTaHDM_INSERTITEMAaHDM_INSERTITEMWaHDM_INSERTITEMaHDM_DELETEITEMaHDM_GETITEMAaHDM_GETITEMWaHDM_GETITEMaHDM_SETITEMAaHDM_SETITEMWaHDM_SETITEMaHDM_LAYOUTaHHT_NOWHEREaHHT_ONHEADERaHHT_ONDIVIDERaHHT_ONDIVOPENaHHT_ABOVEaHHT_BELOWaHHT_TORIGHTaHHT_TOLEFTaHDM_HITTESTaHDM_GETITEMRECTaHDM_SETIMAGELISTaHDM_GETIMAGELISTaHDM_ORDERTOINDEXaHDM_CREATEDRAGIMAGEaHDM_GETORDERARRAYaHDM_SETORDERARRAYaHDM_SETHOTDIVIDERaHDM_SETUNICODEFORMATaHDM_GETUNICODEFORMATaHDN_ITEMCHANGINGAaHDN_ITEMCHANGINGWaHDN_ITEMCHANGEDAaHDN_ITEMCHANGEDWaHDN_ITEMCLICKAaHDN_ITEMCLICKWaHDN_ITEMDBLCLICKAaHDN_ITEMDBLCLICKWaHDN_DIVIDERDBLCLICKAaHDN_DIVIDERDBLCLICKWaHDN_BEGINTRACKAaHDN_BEGINTRACKWaHDN_ENDTRACKAaHDN_ENDTRACKWaHDN_TRACKAaHDN_TRACKWaHDN_GETDISPINFOAaHDN_GETDISPINFOWaHDN_BEGINDRAGaHDN_ENDDRAGaHDN_ITEMCHANGINGaHDN_ITEMCHANGEDaHDN_ITEMCLICKaHDN_ITEMDBLCLICKaHDN_DIVIDERDBLCLICKaHDN_BEGINTRACKaHDN_ENDTRACKaHDN_TRACKaHDN_GETDISPINFOaToolbarWindow32aTOOLBARCLASSNAMEAaTOOLBARCLASSNAMEaCMB_MASKEDaTBSTATE_CHECKEDaTBSTATE_PRESSEDaTBSTATE_ENABLEDaTBSTATE_HIDDENaTBSTATE_INDETERMINATEaTBSTATE_WRAPaTBSTATE_ELLIPSESaTBSTATE_MARKEDaTBSTYLE_BUTTONaTBSTYLE_SEPaTBSTYLE_CHECKaTBSTYLE_GROUPaTBSTYLE_CHECKGROUPaTBSTYLE_DROPDOWNaTBSTYLE_AUTOSIZEaTBSTYLE_NOPREFIXaTBSTYLE_TOOLTIPSaTBSTYLE_WRAPABLEaTBSTYLE_ALTDRAGaTBSTYLE_FLATaTBSTYLE_LISTaTBSTYLE_CUSTOMERASEaTBSTYLE_REGISTERDROPaTBSTYLE_TRANSPARENTaTBSTYLE_EX_DRAWDDARROWSaBTNS_BUTTONaBTNS_SEPaBTNS_CHECKaBTNS_GROUPaBTNS_CHECKGROUPaBTNS_DROPDOWNaBTNS_AUTOSIZEaBTNS_NOPREFIXaBTNS_SHOWTEXTaBTNS_WHOLEDROPDOWNaTBCDRF_NOEDGESaTBCDRF_HILITEHOTTRACKlaTBCDRF_NOOFFSETlaTBCDRF_NOMARKlaTBCDRF_NOETCHEDEFFECTaTB_ENABLEBUTTONaTB_CHECKBUTTONaTB_PRESSBUTTONaTB_HIDEBUTTONaTB_INDETERMINATEaTB_MARKBUTTONaTB_ISBUTTONENABLEDaTB_ISBUTTONCHECKEDaTB_ISBUTTONPRESSEDaTB_ISBUTTONHIDDENaTB_ISBUTTONINDETERMINATEaTB_ISBUTTONHIGHLIGHTEDaTB_SETSTATEaTB_GETSTATEaTB_ADDBITMAPaHINST_COMMCTRLaIDB_STD_SMALL_COLORaIDB_STD_LARGE_COLORaIDB_VIEW_SMALL_COLORlaIDB_VIEW_LARGE_COLORaIDB_HIST_SMALL_COLORlaIDB_HIST_LARGE_COLORaSTD_CUTaSTD_COPYaSTD_PASTEaSTD_UNDOaSTD_REDOWaSTD_DELETElaSTD_FILENEWlaSTD_FILEOPENaSTD_FILESAVEaSTD_PRINTPREl
aSTD_PROPERTIESlaSTD_HELPaSTD_FINDl
`aLVM_SETCOLUMNWaLVM_SETCOLUMNlaLVM_INSERTCOLUMNAlaaLVM_INSERTCOLUMNWaLVM_INSERTCOLUMNlaLVM_DELETECOLUMNlaLVM_GETCOLUMNWIDTHaLVSCW_AUTOSIZElaLVSCW_AUTOSIZE_USEHEADERlaLVM_SETCOLUMNWIDTHlaLVM_GETHEADERl!aLVM_CREATEDRAGIMAGEl"aLVM_GETVIEWRECTl#aLVM_GETTEXTCOLORl$aLVM_SETTEXTCOLORl%aLVM_GETTEXTBKCOLORl&aLVM_SETTEXTBKCOLORl'aLVM_GETTOPINDEXl(aLVM_GETCOUNTPERPAGEl)aLVM_GETORIGINl*aLVM_UPDATEl+aLVM_SETITEMSTATEl,aLVM_GETITEMSTATEl-aLVM_GETITEMTEXTAlsaLVM_GETITEMTEXTWaLVM_GETITEMTEXTl.aLVM_SETITEMTEXTAltaLVM_SETITEMTEXTWaLVM_SETITEMTEXTaLVSICF_NOINVALIDATEALLaLVSICF_NOSCROLLl/aLVM_SETITEMCOUNTl0aLVM_SORTITEMSl1aLVM_SETITEMPOSITION32l2aLVM_GETSELECTEDCOUNTl3aLVM_GETITEMSPACINGl4aLVM_GETISEARCHSTRINGAluaLVM_GETISEARCHSTRINGWaLVM_GETISEARCHSTRINGl5aLVM_SETICONSPACINGl6aLVM_SETEXTENDEDLISTVIEWSTYLEl7aLVM_GETEXTENDEDLISTVIEWSTYLEaLVS_EX_GRIDLINESaLVS_EX_SUBITEMIMAGESaLVS_EX_CHECKBOXESaLVS_EX_TRACKSELECTaLVS_EX_HEADERDRAGDROPaLVS_EX_FULLROWSELECTaLVS_EX_ONECLICKACTIVATEaLVS_EX_TWOCLICKACTIVATEaLVS_EX_FLATSBaLVS_EX_REGIONALaLVS_EX_INFOTIPaLVS_EX_UNDERLINEHOTaLVS_EX_UNDERLINECOLDaLVS_EX_MULTIWORKAREASl8aLVM_GETSUBITEMRECTl9aLVM_SUBITEMHITTESTl:aLVM_SETCOLUMNORDERARRAYl;aLVM_GETCOLUMNORDERARRAYl<aLVM_SETHOTITEMl=aLVM_GETHOTITEMl>aLVM_SETHOTCURSORl?@aTME_QUERYqaTME_CANCELaHOVER_DEFAULTaWSB_PROP_CYVSCROLLaWSB_PROP_CXHSCROLLaWSB_PROP_CYHSCROLLaWSB_PROP_CXVSCROLLaWSB_PROP_CXHTHUMBaWSB_PROP_CYVTHUMBaWSB_PROP_VBKGCOLORaWSB_PROP_HBKGCOLORaWSB_PROP_VSTYLEaWSB_PROP_HSTYLEaWSB_PROP_WINSTYLEaWSB_PROP_PALETTElaWSB_PROP_MASKaFSB_FLAT_MODEaFSB_ENCARTA_MODEaFSB_REGULAR_MODEaINDEXTOOVERLAYMASKaINDEXTOSTATEIMAGEMASKucommctrl.pyu<module commctrl>Twiu.cryptography.__about__a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsa__version__a__author__a__copyright__a__all__u41.0.7uThe Python Cryptographic Authority and individual contributorsuCopyright 2013-2023 uucryptography\__about__.pyu<module cryptography.__about__>.cryptographyka__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.__about__Ta__author__a__copyright__a__version__la__author__a__copyright__a__version__a__all__ucryptography\__init__.pyu<module cryptography>u.cryptography.exceptionsj/a__class__a__init__a_reasonaerr_codea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.hazmat.bindings._rustTaexceptionslaexceptionsarust_exceptionsa_ReasonsTEExceptiona__prepare__aUnsupportedAlgorithma__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.exceptionsa__module__a__qualname__TnDamessageareasonareturnastrutyping.Optional[_Reasons]aNoneuUnsupportedAlgorithm.__init__a__orig_bases__aAlreadyFinalizedaAlreadyUpdatedaNotYetFinalizedaInvalidTagaInvalidSignatureaInternalErrorDamsgaerr_codeareturnastrutyping.List[rust_openssl.OpenSSLError]aNoneuInternalError.__init__aInvalidKeyucryptography\exceptions.pyu<module cryptography.exceptions>Ta__class__Taselfamessageareasona__class__Taselfamsgaerr_codea__class__u.cryptography.hazmat._oid`a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsatypingucryptography.hazmat.bindings._rustTaObjectIdentifierlaObjectIdentifierucryptography.hazmat.primitivesTahashesahashesucryptography.hazmat._oida__module__aExtensionOIDa__qualname__Tu2.5.29.9aSUBJECT_DIRECTORY_ATTRIBUTESTu2.5.29.14aSUBJECT_KEY_IDENTIFIERTu2.5.29.15aKEY_USAGETu2.5.29.17aSUBJECT_ALTERNATIVE_NAMETu2.5.29.18aISSUER_ALTERNATIVE_NAMETu2.5.29.19aBASIC_CONSTRAINTSTu2.5.29.30aNAME_CONSTRAINTSTu2.5.29.31aCRL_DISTRIBUTION_POINTSTu2.5.29.32aCERTIFICATE_POLICIESTu2.5.29.33aPOLICY_MAPPINGSTu2.5.29.35aAUTHORITY_KEY_IDENTIFIERTu2.5.29.36aPOLICY_CONSTRAINTSTu2.5.29.37aEXTENDED_KEY_USAGETu2.5.29.46aFRESHEST_CRLTu2.5.29.54aINHIBIT_ANY_POLICYTu2.5.29.28aISSUING_DISTRIBUTION_POINTTu1.3.6.1.5.5.7.1.1aAUTHORITY_INFORMATION_ACCESSTu1.3.6.1.5.5.7.1.11aSUBJECT_INFORMATION_ACCESSTu1.3.6.1.5.5.7.48.1.5aOCSP_NO_CHECKTu1.3.6.1.5.5.7.1.24aTLS_FEATURETu2.5.29.20aCRL_NUMBERTu2.5.29.27aDELTA_CRL_INDICATORTu1.3.6.1.4.1.11129.2.4.2aPRECERT_SIGNED_CERTIFICATE_TIMESTAMPSTu1.3.6.1.4.1.11129.2.4.3aPRECERT_POISONTu1.3.6.1.4.1.11129.2.4.5aSIGNED_CERTIFICATE_TIMESTAMPSTu1.3.6.1.4.1.311.21.7aMS_CERTIFICATE_TEMPLATETaOCSPExtensionOIDTu1.3.6.1.5.5.7.48.1.2aNONCETu1.3.6.1.5.5.7.48.1.4aACCEPTABLE_RESPONSESaCRLEntryExtensionOIDTu2.5.29.29aCERTIFICATE_ISSUERTu2.5.29.21aCRL_REASONTu2.5.29.24aINVALIDITY_DATEaNameOIDTu2.5.4.3aCOMMON_NAMETu2.5.4.6aCOUNTRY_NAMETu2.5.4.7aLOCALITY_NAMETu2.5.4.8aSTATE_OR_PROVINCE_NAMETu2.5.4.9aSTREET_ADDRESSTu2.5.4.10aORGANIZATION_NAMETu2.5.4.11aORGANIZATIONAL_UNIT_NAMETu2.5.4.5aSERIAL_NUMBERTu2.5.4.4aSURNAMETu2.5.4.42aGIVEN_NAMETu2.5.4.12aTITLETu2.5.4.43aINITIALSTu2.5.4.44aGENERATION_QUALIFIERTu2.5.4.45aX500_UNIQUE_IDENTIFIERTu2.5.4.46aDN_QUALIFIERTu2.5.4.65aPSEUDONYMTu0.9.2342.19200300.100.1.1aUSER_IDTu0.9.2342.19200300.100.1.25aDOMAIN_COMPONENTTu1.2.840.113549.1.9.1aEMAIL_ADDRESSTu1.3.6.1.4.1.311.60.2.1.3aJURISDICTION_COUNTRY_NAMETu1.3.6.1.4.1.311.60.2.1.1aJURISDICTION_LOCALITY_NAMETu1.3.6.1.4.1.311.60.2.1.2aJURISDICTION_STATE_OR_PROVINCE_NAMETu2.5.4.15aBUSINESS_CATEGORYTu2.5.4.16aPOSTAL_ADDRESSTu2.5.4.17aPOSTAL_CODETu1.2.643.3.131.1.1aINNTu1.2.643.100.1aOGRNTu1.2.643.100.3aSNILSTu1.2.840.113549.1.9.2aUNSTRUCTURED_NAMEaSignatureAlgorithmOIDTu1.2.840.113549.1.1.4aRSA_WITH_MD5Tu1.2.840.113549.1.1.5aRSA_WITH_SHA1Tu1.3.14.3.2.29a_RSA_WITH_SHA1Tu1.2.840.113549.1.1.14aRSA_WITH_SHA224Tu1.2.840.113549.1.1.11aRSA_WITH_SHA256Tu1.2.840.113549.1.1.12aRSA_WITH_SHA384Tu1.2.840.113549.1.1.13aRSA_WITH_SHA512Tu2.16.840.1.101.3.4.3.13aRSA_WITH_SHA3_224Tu2.16.840.1.101.3.4.3.14aRSA_WITH_SHA3_256Tu2.16.840.1.101.3.4.3.15aRSA_WITH_SHA3_384Tu2.16.840.1.101.3.4.3.16aRSA_WITH_SHA3_512Tu1.2.840.113549.1.1.10aRSASSA_PSSTu1.2.840.10045.4.1aECDSA_WITH_SHA1Tu1.2.840.10045.4.3.1aECDSA_WITH_SHA224Tu1.2.840.10045.4.3.2aECDSA_WITH_SHA256Tu1.2.840.10045.4.3.3aECDSA_WITH_SHA384Tu1.2.840.10045.4.3.4aECDSA_WITH_SHA512Tu2.16.840.1.101.3.4.3.9aECDSA_WITH_SHA3_224Tu2.16.840.1.101.3.4.3.10aECDSA_WITH_SHA3_256Tu2.16.840.1.101.3.4.3.11aECDSA_WITH_SHA3_384Tu2.16.840.1.101.3.4.3.12aECDSA_WITH_SHA3_512Tu1.2.840.10040.4.3aDSA_WITH_SHA1Tu2.16.840.1.101.3.4.3.1aDSA_WITH_SHA224Tu2.16.840.1.101.3.4.3.2aDSA_WITH_SHA256Tu2.16.840.1.101.3.4.3.3aDSA_WITH_SHA384Tu2.16.840.1.101.3.4.3.4aDSA_WITH_SHA512Tu1.3.101.112aED25519Tu1.3.101.113aED448Tu1.2.643.2.2.3aGOSTR3411_94_WITH_3410_2001Tu1.2.643.7.1.1.3.2aGOSTR3410_2012_WITH_3411_2012_256Tu1.2.643.7.1.1.3.3aGOSTR3410_2012_WITH_3411_2012_512aMD5aSHA1aSHA224aSHA256aSHA384aSHA512aSHA3_224aSHA3_256aSHA3_384aSHA3_512a_SIG_OIDS_TO_HASHutyping.Dict[ObjectIdentifier, typing.Optional[hashes.HashAlgorithm]]aExtendedKeyUsageOIDTu1.3.6.1.5.5.7.3.1aSERVER_AUTHTu1.3.6.1.5.5.7.3.2aCLIENT_AUTHTu1.3.6.1.5.5.7.3.3aCODE_SIGNINGTu1.3.6.1.5.5.7.3.4aEMAIL_PROTECTIONTu1.3.6.1.5.5.7.3.8aTIME_STAMPINGTu1.3.6.1.5.5.7.3.9aOCSP_SIGNINGTu2.5.29.37.0aANY_EXTENDED_KEY_USAGETu1.3.6.1.4.1.311.20.2.2aSMARTCARD_LOGONTu1.3.6.1.5.2.3.5aKERBEROS_PKINIT_KDCTu1.3.6.1.5.5.7.3.17aIPSEC_IKETu1.3.6.1.4.1.11129.2.4.4aCERTIFICATE_TRANSPARENCYaAuthorityInformationAccessOIDTu1.3.6.1.5.5.7.48.2aCA_ISSUERSTu1.3.6.1.5.5.7.48.1aOCSPaSubjectInformationAccessOIDTu1.3.6.1.5.5.7.48.5aCA_REPOSITORYaCertificatePoliciesOIDTu1.3.6.1.5.5.7.2.1aCPS_QUALIFIERTu1.3.6.1.5.5.7.2.2aCPS_USER_NOTICETu2.5.29.32.0aANY_POLICYaAttributeOIDTu1.2.840.113549.1.9.7aCHALLENGE_PASSWORDacommonNameacountryNamealocalityNameastateOrProvinceNameastreetAddressaorganizationNameaorganizationalUnitNameaserialNumberasurnameagivenNameatitleagenerationQualifierax500UniqueIdentifieradnQualifierapseudonymauserIDadomainComponentaemailAddressajurisdictionCountryNameajurisdictionLocalityNameajurisdictionStateOrProvinceNameabusinessCategoryapostalAddressapostalCodeaunstructuredNameamd5WithRSAEncryptionasha1WithRSAEncryptionasha224WithRSAEncryptionasha256WithRSAEncryptionasha384WithRSAEncryptionasha512WithRSAEncryptionuRSASSA-PSSuecdsa-with-SHA1uecdsa-with-SHA224uecdsa-with-SHA256uecdsa-with-SHA384uecdsa-with-SHA512udsa-with-sha1udsa-with-sha224udsa-with-sha256aed25519aed448uGOST R 34.11-94 with GOST R 34.10-2001uGOST R 34.10-2012 with GOST R 34.11-2012 (256 bit)uGOST R 34.10-2012 with GOST R 34.11-2012 (512 bit)aserverAuthaclientAuthacodeSigningaemailProtectionatimeStampingaOCSPSigningamsSmartcardLoginapkInitKDCasubjectDirectoryAttributesasubjectKeyIdentifierakeyUsageasubjectAltNameaissuerAltNameabasicConstraintsasignedCertificateTimestampListactPoisonamsCertificateTemplateacRLReasonainvalidityDateacertificateIssueranameConstraintsacRLDistributionPointsacertificatePoliciesapolicyMappingsaauthorityKeyIdentifierapolicyConstraintsaextendedKeyUsageafreshestCRLainhibitAnyPolicyaissuingDistributionPointaauthorityInfoAccessasubjectInfoAccessaOCSPNoCheckacRLNumberadeltaCRLIndicatoraTLSFeatureacaIssuersacaRepositoryuid-qt-cpsuid-qt-unoticeaOCSPNonceachallengePassworda_OID_NAMESucryptography\hazmat\_oid.pyu<module cryptography.hazmat._oid>Ta__class__u.cryptography.hazmat.backendsucryptography.hazmat.backends.openssl.backendTabackendlabackenda__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\backendsTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingabackendsTaNUITKA_PACKAGE_cryptography_hazmat_backendsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsaAnyDareturnaAnyadefault_backenducryptography\hazmat\backends\__init__.pyu<module cryptography.hazmat.backends>u.cryptography.hazmat.backends.openssl.aeadIucryptography.hazmat.primitives.ciphers.aeadTaChaCha20Poly1305laChaCha20Poly1305a_libaCryptography_HAS_EVP_AEADu
    Checks whether the given cipher is supported through
    EVP_AEAD rather than the normal OpenSSL EVP_CIPHER API.
    a_is_evp_aead_supported_ciphera_evp_cipher_cipher_namea_fips_enableda_fips_aeadaendswithTc-sivaCRYPTOGRAPHY_OPENSSL_300_OR_GREATERlaEVP_get_cipherbynamea_ffiaNULLa_evp_aead_create_ctxa_evp_cipher_create_ctxa_evp_aead_encrypta_evp_cipher_encrypta_evp_aead_decrypta_evp_cipher_decrypta_evp_aead_get_cipherafrom_bufferaEVP_AEAD_DEFAULT_TAG_LENGTHaCryptography_EVP_AEAD_CTX_newaopenssl_assertagcaEVP_AEAD_CTX_freeaEVP_aead_chacha20_poly1305anewTusize_t *aEVP_AEAD_max_overheaduuint8_t[]caEVP_AEAD_CTX_sealabuffer:nnnaInvalidTagaEVP_AEAD_CTX_opena_consume_errorsTaAESCCMaAESGCMaAESOCB3aAESSIVaChaCha20Poly1305aAESCCMaAESGCMaAESOCB3aAESSIVcchacha20-poly1305uaes-a_keyluu-ccmaasciiu-ocblu-sivu-gcmaEVP_CIPHER_fetchaEVP_CIPHER_freeaEVP_CIPHER_CTX_newaEVP_CIPHER_CTX_freea_evp_cipheraEVP_CipherInit_exa_ENCRYPTaEVP_CIPHER_CTX_ctrlaEVP_CTRL_AEAD_SET_IVLENa_DECRYPTa_evp_cipher_set_tagTc-ccmaEVP_CTRL_AEAD_SET_TAGTuint *aEVP_CipherUpdateuunsigned char[]TaAESCCMaAESSIVa_evp_cipher_aead_setupa_evp_cipher_set_nonce_operationa_evp_cipher_set_lengthabackendactxa_evp_cipher_process_aada_evp_cipher_process_dataadataTuunsigned char[]laEVP_CipherFinal_exaEVP_CTRL_AEAD_GET_TAGa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.exceptionsTaInvalidTagDabackendacipherareturnaBackenda_AEADTypesaboola_aead_cipher_supportedDabackendacipherakeyaBackenda_AEADTypesabytesa_aead_create_ctxTnDabackendacipheranonceadataaassociated_dataatag_lengthactxareturnaBackenda_AEADTypesabytesputyping.List[bytes]aintutyping.Anyabytesa_encrypta_decryptDabackendacipherakeyatag_lenaBackenda_AEADTypesabytesutyping.Optional[int]DabackendacipheraBackenda_AEADTypesDacipherareturna_AEADTypesabytesDacipher_nameabackendabytesaBackendDabackendacipher_nameakeyanonceatagatag_lenaoperationaBackendabytespputyping.Optional[bytes]aintpDatagareturnabytesaNoneDanonceaoperationareturnabytesaintaNoneDabackendadata_lenareturnaBackendaintaNoneDabackendaassociated_dataareturnaBackendabytesaNoneDabackendadataareturnaBackendabytespucryptography\hazmat\backends\openssl\aead.pyu<module cryptography.hazmat.backends.openssl.aead>Tabackendacipheracipher_nameTabackendacipherakeyTabackendacipheranonceadataaassociated_dataatag_lengthactxTabackendacipherakeyatag_lenaaead_cipherakey_ptractxTabackendacipheranonceadataaassociated_dataatag_lengthactxaout_lenamax_out_lenaout_bufadata_ptranonce_ptraaadaaad_ptraresadecrypted_dataTabackendacipheranonceadataaassociated_dataatag_lengthactxaaead_cipheraout_lenamax_out_lenaout_bufadata_ptranonce_ptraaadaaad_ptraresaencrypted_dataTabackendacipheraChaCha20Poly1305Tacipher_nameabackendaevp_cipherTabackendacipher_nameakeyanonceatagatag_lenaoperationaevp_cipheractxaresanonce_ptrakey_ptrTacipheraAESCCMaAESGCMaAESOCB3aAESSIVaChaCha20Poly1305Tabackendacipherakeyactxacipher_nameaevp_cipherakey_ptraresTabackendacipheranonceadataaassociated_dataatag_lengthactxaAESCCMaAESSIVatagacipher_nameaadaoutlenabufad_ptraresaprocessed_dataTabackendacipheranonceadataaassociated_dataatag_lengthactxaAESCCMaAESSIVacipher_nameaadaprocessed_dataaoutlenabufaresatag_bufatagTabackendactxaassociated_dataaoutlenaa_data_ptraresTabackendactxadataaoutlenabufadata_ptraresTabackendactxadata_lenaintptraresTabackendactxanonceaoperationanonce_ptraresTabackendactxatagatag_ptrares.cryptography.hazmat.backends.openssl.backendcabindingaBindinga_bindingaffia_ffialiba_libarust_opensslais_fips_enableda_fips_enableda_cipher_registrya_register_default_ciphersaEVP_PKEY_DHa_dh_typesaCryptography_HAS_EVP_PKEY_DHXaappendaEVP_PKEY_DHXu<OpenSSLBackend(version: {}, FIPS: {}, Legacy: {})>aopenssl_version_texta_legacy_provider_loadeda_openssl_assertTaerrorsa_enable_fipsastringaOpenSSL_versionaOPENSSL_VERSIONadecodeTaasciiu
        Friendly string name of the loaded OpenSSL library. This is not
        necessarily the same version as it was compiled against.

        Example: OpenSSL 1.1.1d  10 Sep 2019
        aOpenSSL_version_numanameablake2bablake2su{}{}adigest_sizelaasciiaencodeaEVP_get_digestbynamea_evp_md_from_algorithmaopenssl_assertaNULLa_fips_hashesahashesaSHA1ahash_supportedaCryptography_HAS_SCRYPTla_fips_ciphersuDuplicate registration for: {} {}.aAESaAES128aAES256aCBCaCTRaECBaOFBaCFBaCFB8aGCMaselfaregister_cipher_adapteracipher_clsaGetCipherByNameTu{cipher.name}-{cipher.key_size}-{mode.name}aCamelliaaTripleDESTudes-ede3-{mode.name}Tudes-ede3aChaCha20Tachacha20aXTSa_get_xts_cipheraSM4Tusm4-{mode.name}aCRYPTOGRAPHY_OPENSSL_300_OR_GREATERa_BlowfishInternalTubf-{mode.name}a_SEEDInternalTuseed-{mode.name}aitertoolsaproducta_CAST5Internala_IDEAInternalutoo many values to unpack (expected 2)Tu{cipher.name}-{mode.name}aARC4Tarc4a_RC2Tarc2a_CipherContexta_ENCRYPTa_DECRYPTahmac_supportedacapture_error_stackaBN_is_negativeaBN_num_bytesanewuunsigned char[]aBN_bn2binlafrom_bytesabufferabigato_bytesabit_lengthf @aBN_bin2bnu
        Converts a python integer to a BIGNUM. The returned BIGNUM will not
        be garbage collected (to support adding them to structs that take
        ownership of the object). Be sure to register it for GC if it will
        be discarded after use.
        arsaa_verify_rsa_parametersaRSA_newagcaRSA_freea_int_to_bnaBN_freeaRSA_generate_key_exa_rsa_cdata_to_evp_pkeya_RSAPrivateKeyDaunsafe_skip_rsa_key_validationtlla_check_private_key_componentswpwqwdadmp1admq1aiqmpapublic_numberswewnaRSA_set0_factorsaRSA_set0_keyaRSA_set0_crt_paramsTaunsafe_skip_rsa_key_validationa_check_public_key_componentsa_RSAPublicKeyaEVP_PKEY_newaEVP_PKEY_freea_create_evp_pkey_gcaEVP_PKEY_set1_RSAafrom_bufferaBIO_new_mem_bufa_MemoryBIOaBIO_freeu
        Return a _MemoryBIO namedtuple of (BIO, char*).

        The char* is the storage for the BIO and it must stay alive until the
        BIO is finished with.
        aBIO_s_memaBIO_newu
        Creates an empty memory BIO.
        Tuchar **aBIO_get_mem_data:nnnu
        Reads a memory BIO. This only works on memory BIOs.
        aEVP_PKEY_idaEVP_PKEY_RSAaEVP_PKEY_get1_RSAaEVP_PKEY_RSA_PSSaCRYPTOGRAPHY_IS_LIBRESSLaCRYPTOGRAPHY_IS_BORINGSSLaCRYPTOGRAPHY_OPENSSL_LESS_THAN_111Ea_create_mem_bio_gcai2d_RSAPrivateKey_bioaload_der_private_keya_read_mem_bioTapasswordaunsafe_skip_rsa_key_validationaEVP_PKEY_DSAadsaaprivate_key_from_ptracastauintptr_taEVP_PKEY_ECaEVP_PKEY_get1_EC_KEYaEC_KEY_freea_EllipticCurvePrivateKeyadhaEVP_PKEY_ED25519aed25519aEVP_PKEY_X448ax448aEVP_PKEY_X25519ax25519aEVP_PKEY_ED448aed448aUnsupportedAlgorithmTuUnsupported key type.u
        Return the appropriate type of PrivateKey given an evp_pkey cdata
        pointer.
        ai2d_RSAPublicKey_bioaload_der_public_keyapublic_key_from_ptra_consume_errorsuUnable to load EC keya_EllipticCurvePublicKeyu
        Return the appropriate type of PublicKey given an evp_pkey cdata
        pointer.
        aSHA224aSHA256aSHA384aSHA512aPKCS1v15aPSSa_mgfaMGF1apaddinga_algorithmaOAEPa_oaep_hash_supportedarsa_padding_supportedTlllluKey size must be 1024, 2048, 3072, or 4096 bits.agenerate_parametersagenerate_private_keyagenerate_dsa_parametersagenerate_dsa_private_keya_check_dsa_private_numbersafrom_private_numbersa_check_dsa_parametersaparameter_numbersafrom_public_numbersafrom_parameter_numbersadsa_supportedasignature_hash_supportedacipher_supporteddablock_sizea_CMACContexta_load_keyaPEM_read_bio_PrivateKeya_bytes_to_bioTuCRYPTOGRAPHY_PASSWORD_DATA *aPEM_read_bio_PUBKEYabioaaddressofa_original_libaCryptography_pem_password_cba_evp_pkey_to_public_keyaBIO_resetaPEM_read_bio_RSAPublicKeya_handle_key_loading_errorafrom_pem_parametersa_evp_pkey_from_der_traditional_keya_evp_pkey_to_private_keyad2i_PKCS8PrivateKey_bioad2i_PrivateKey_biouPassword was given but private key is not encrypted.ad2i_PUBKEY_bioad2i_RSAPublicKey_bioafrom_der_parametersapublic_bytesaserializationaEncodingaDERad2i_X509_bioaX509_freeai2d_X509_bioax509aload_der_x509_certificateaprivate_bytesaPrivateFormataPKCS8aNoEncryptionautilsa_check_byteslikeapasswordalengthauserdataaerrorluPassword was not given but private key is encryptedluPasswords longer than {} bytes are not supported by this backend.amaxsizeacalleduCould not deserialize key data. The data may be in an incorrect format or it may be encrypted with an unsupported algorithm.a_lib_reason_matchaERR_LIB_EVPaEVP_R_BAD_DECRYPTaERR_LIB_PKCS12aPKCS12_R_PKCS12_CIPHERFINAL_ERRORaCryptography_HAS_PROVIDERSaERR_LIB_PROVaPROV_R_BAD_DECRYPTuBad decrypt. Incorrect password?uUnsupported public key algorithm.uCould not deserialize key data. The data may be in an incorrect format, it may be encrypted with an unsupported algorithm, or it may be an unsupported key type (e.g. EC curves with explicit parameters).aEVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHMu<genexpr>uBackend._handle_key_loading_error.<locals>.<genexpr>a_elliptic_curve_to_nidaNID_undefaEC_GROUP_new_by_curve_nameaEC_GROUP_freeaecaECDSAaelliptic_curve_supporteda_ec_key_new_by_curveaEC_KEY_generate_keya_ec_cdata_to_evp_pkeyuBackend object does not support uw.a_ReasonsaUNSUPPORTED_ELLIPTIC_CURVEu
        Generate a new private key on the named curve.
        acurveaprivate_valueaBN_clear_freeaEC_KEY_set_private_keyuInvalid EC key.a_tmp_bn_ctxa__enter__a__exit__a_ec_key_set_public_key_affine_coordinateswxwyaEC_KEY_get0_groupabackendaEC_KEY_get0_public_keyaEC_POINT_newaEC_POINT_freeaEC_POINT_mulaEC_POINT_cmpTnnnaEC_POINT_oct2pointuInvalid public bytes for the given curveaEC_KEY_set_public_keyaBN_CTX_getaEC_POINT_get_affine_coordinatesuUnable to derive key from private_valuea_ec_key_new_by_curve_nidaEC_KEY_new_by_curve_namea_fips_ecdh_curvesaECDHaEVP_PKEY_set1_EC_KEYDasecp192r1asecp256r1aprime192v1aprime256v1aOBJ_sn2nidu is not a supported elliptic curveu
        Get the NID for a curve name.
        aBN_CTX_newaBN_CTX_freeaBN_CTX_startaBN_CTX_enduBackend._tmp_bn_ctxuInvalid EC key. Both x and y must be non-negative.aEC_POINT_set_affine_coordinatesu
        Sets the public key point in the EC_KEY context to the affine x and y
        values.
        uencoding must be an item from the Encoding enumuformat must be an item from the PrivateFormat enumaKeySerializationEncryptionuEncryption algorithm must be a KeySerializationEncryption instancecaBestAvailableEncryptionuPasswords longer than 1023 bytes are not supported by this backenda_KeySerializationEncryptiona_formataOpenSSHaencryption_algorithmuUnsupported encryption typeaformataPEMaPEM_write_bio_PKCS8PrivateKeyai2d_PKCS8PrivateKey_biouUnsupported encoding for PKCS8a_private_key_bytes_via_bioaTraditionalOpenSSLuEncrypted traditional OpenSSL format is not supported in FIPS mode.aPEM_write_bio_RSAPrivateKeyaPEM_write_bio_ECPrivateKeyuEncryption is not supported for DER encoded traditional OpenSSL keysai2d_ECPrivateKey_bioa_bio_func_outputuUnsupported encoding for TraditionalOpenSSLassha_serialize_ssh_private_keyuOpenSSH private key format can only be used with PEM encodinguformat is invalid with this keyaEVP_get_cipherbynameTcaes-256-cbcaPublicFormatuformat must be an item from the PublicFormat enumaSubjectPublicKeyInfoaPEM_write_bio_PUBKEYai2d_PUBKEY_biouSubjectPublicKeyInfo works only with PEM or DER encodingaPKCS1uPKCS1 format is supported only for RSA keysaPEM_write_bio_RSAPublicKeyuPKCS1 works only with PEM or DER encodingaserialize_ssh_public_keyuOpenSSH format must be used with OpenSSH encodingagenerate_dh_private_keyagenerate_dh_parametersaDHParameterNumbersTwpwgwqafrom_public_bytesafrom_private_bytesagenerate_keyaCRYPTOGRAPHY_LIBRESSL_LESS_THAN_370aCRYPTOGRAPHY_HAS_WORKING_ED25519aaeada_aead_cipher_supportedadatau
        This method takes bytes, which can be a bytestring or a mutable
        buffer like a bytearray, and yields a null-terminated version of that
        data. This is required because PKCS12_parse doesn't take a length with
        its password char * and ffi.from_buffer doesn't provide null
        termination. So, to support zeroing the data via bytearray we
        need to build this ridiculous construct that copies the memory, but
        zeroes it after use.
        uchar[]amemmovea_zero_datauuint8_t *a_zeroed_null_terminated_bufuBackend._zeroed_null_terminated_bufaload_pkcs12akeyacertacertificateaadditional_certsad2i_PKCS12_biouCould not deserialize PKCS12 dataaPKCS12_freeTuEVP_PKEY **TuX509 **TuCryptography_STACK_OF_X509 **aPKCS12_parsearesuInvalid password or PKCS12 dataDaunsafe_skip_rsa_key_validationFa_ossl2certaX509_alias_get0aPKCS12Certificateask_X509_freeask_X509_numask_X509_valueask_x509aadditional_certificatesaPKCS12KeyAndCertificatesa_check_bytesaNID_aes_256_cbcaNID_pbe_WithSHA1And3_Key_TripleDES_CBCl NaPKCS12a_key_cert_algorithmaPBESaPBESv1SHA1And3KeyTripleDESCBCaPBESv2SHA256AndAES256CBCTuPBESv2 is not supported by this version of OpenSSLa_hmac_hashaCryptography_HAS_PKCS12_SET_MACTuSetting MAC algorithm is not supported by this version of OpenSSL.a_evp_md_non_null_from_algorithma_kdf_roundsuUnsupported key encryption typeask_X509_new_nullacasafriendly_namea_cert2osslaX509_alias_set1aossl_casaossl_caask_X509_pusha_key2osslaPKCS12_createaPKCS12_set_macap12ai2d_PKCS12_bioaCryptography_HAS_POLY1305aPEM_read_bio_PKCS7uUnable to parse PKCS7 dataaPKCS7_freea_load_pkcs7_certificatesad2i_PKCS7_bioaOBJ_obj2nidatypeaNID_pkcs7_signeduOnly basic signed structures are currently supported. NID for this data was {}aUNSUPPORTED_SERIALIZATIONasignacertsa_fmtTacipheramodealoweraCryptography_HAS_300_EVP_CIPHERaEVP_CIPHER_fetchuaes-akey_sizelu-xtsa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsacollectionsacontextlibatypingTacontextmanageracontextmanageracryptographyTautilsax509ucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.backends.opensslTaaeaducryptography.hazmat.backends.openssl.ciphersTa_CipherContextucryptography.hazmat.backends.openssl.cmacTa_CMACContextucryptography.hazmat.backends.openssl.ecTa_EllipticCurvePrivateKeya_EllipticCurvePublicKeyucryptography.hazmat.backends.openssl.rsaTa_RSAPrivateKeya_RSAPublicKeyucryptography.hazmat.bindings._rustTaopensslaopensslucryptography.hazmat.bindings.opensslTabindingucryptography.hazmat.primitivesTahashesaserializationucryptography.hazmat.primitives._asymmetricTaAsymmetricPaddingaAsymmetricPaddingucryptography.hazmat.primitives.asymmetricTadhadsaaecaed448aed25519arsaax448ax25519ucryptography.hazmat.primitives.asymmetric.paddingTaMGF1aOAEPaPSSaPKCS1v15ucryptography.hazmat.primitives.asymmetric.typesTaPrivateKeyTypesaPublicKeyTypesaPrivateKeyTypesaPublicKeyTypesucryptography.hazmat.primitives.ciphersTaBlockCipherAlgorithmaCipherAlgorithmaBlockCipherAlgorithmaCipherAlgorithmucryptography.hazmat.primitives.ciphers.algorithmsTaAESaAES128aAES256aARC4aSM4aCamelliaaChaCha20aTripleDESa_BlowfishInternala_CAST5Internala_IDEAInternala_SEEDInternalucryptography.hazmat.primitives.ciphers.modesTaCBCaCFBaCFB8aCTRaECBaGCMaOFBaXTSaModeaModeucryptography.hazmat.primitives.serializationTasshucryptography.hazmat.primitives.serialization.pkcs12TaPBESaPKCS12CertificateaPKCS12KeyAndCertificatesaPKCS12PrivateKeyTypesa_PKCS12CATypesaPKCS12PrivateKeyTypesa_PKCS12CATypesanamedtupleachar_ptrucryptography.hazmat.backends.openssl.backenda__module__a__qualname__Tu
    OpenSSL API binding interfaces.
    aBackendScaes-256-gcmcaes-256-ccmcaes-128-ccmcaes-192-gcmcaes-192-ccmcaes-128-gcma_fips_aeadaSHA512_224aSHA512_256aSHA3_224aSHA3_256aSHA3_384aSHA3_512aSHAKE128aSHAKE256aSECP224R1aSECP256R1aSECP384R1aSECP521R1la_fips_rsa_min_key_sizela_fips_rsa_min_public_exponenta_fips_dsa_min_modulusa_fips_dh_min_key_sizea_fips_dh_min_modulusDareturnaNonea__init__uBackend.__init__Dareturnastra__repr__uBackend.__repr__TnDaokaerrorsareturnaboolutyping.Optional[typing.List[rust_openssl.OpenSSLError]]aNoneuBackend.openssl_assertuBackend._enable_fipsuBackend.openssl_version_textDareturnaintaopenssl_version_numberuBackend.openssl_version_numberDaalgorithmuhashes.HashAlgorithmuBackend._evp_md_from_algorithmuBackend._evp_md_non_null_from_algorithmDaalgorithmareturnuhashes.HashAlgorithmabooluBackend.hash_supporteduBackend.signature_hash_supportedDareturnaboolascrypt_supporteduBackend.scrypt_supporteduBackend.hmac_supportedDacipheramodeareturnaCipherAlgorithmaModeabooluBackend.cipher_supporteduBackend.register_cipher_adapteruBackend._register_default_ciphersDacipheramodeareturnaCipherAlgorithmaModea_CipherContextacreate_symmetric_encryption_ctxuBackend.create_symmetric_encryption_ctxacreate_symmetric_decryption_ctxuBackend.create_symmetric_decryption_ctxapbkdf2_hmac_supporteduBackend.pbkdf2_hmac_supportedDareturnutyping.List[rust_openssl.OpenSSLError]uBackend._consume_errorsa_bn_to_intuBackend._bn_to_intDanumaintuBackend._int_to_bnDapublic_exponentakey_sizeareturnaintpursa.RSAPrivateKeyagenerate_rsa_private_keyuBackend.generate_rsa_private_keyDapublic_exponentakey_sizeareturnaintpaboolagenerate_rsa_parameters_supporteduBackend.generate_rsa_parameters_supportedDanumbersaunsafe_skip_rsa_key_validationareturnursa.RSAPrivateNumbersaboolursa.RSAPrivateKeyaload_rsa_private_numbersuBackend.load_rsa_private_numbersDanumbersareturnursa.RSAPublicNumbersursa.RSAPublicKeyaload_rsa_public_numbersuBackend.load_rsa_public_numbersuBackend._create_evp_pkey_gcuBackend._rsa_cdata_to_evp_pkeyDadataareturnabytesa_MemoryBIOuBackend._bytes_to_biouBackend._create_mem_bio_gcDareturnabytesuBackend._read_mem_bioDaunsafe_skip_rsa_key_validationareturnaboolaPrivateKeyTypesuBackend._evp_pkey_to_private_keyDareturnaPublicKeyTypesuBackend._evp_pkey_to_public_keyuBackend._oaep_hash_supportedDapaddingareturnaAsymmetricPaddingabooluBackend.rsa_padding_supportedarsa_encryption_supporteduBackend.rsa_encryption_supportedDakey_sizeareturnaintudsa.DSAParametersuBackend.generate_dsa_parametersDaparametersareturnudsa.DSAParametersudsa.DSAPrivateKeyuBackend.generate_dsa_private_keyDakey_sizeareturnaintudsa.DSAPrivateKeyagenerate_dsa_private_key_and_parametersuBackend.generate_dsa_private_key_and_parametersDanumbersareturnudsa.DSAPrivateNumbersudsa.DSAPrivateKeyaload_dsa_private_numbersuBackend.load_dsa_private_numbersDanumbersareturnudsa.DSAPublicNumbersudsa.DSAPublicKeyaload_dsa_public_numbersuBackend.load_dsa_public_numbersDanumbersareturnudsa.DSAParameterNumbersudsa.DSAParametersaload_dsa_parameter_numbersuBackend.load_dsa_parameter_numbersuBackend.dsa_supportedadsa_hash_supporteduBackend.dsa_hash_supportedacmac_algorithm_supporteduBackend.cmac_algorithm_supportedDaalgorithmareturnaBlockCipherAlgorithma_CMACContextacreate_cmac_ctxuBackend.create_cmac_ctxDadataapasswordaunsafe_skip_rsa_key_validationareturnabytesutyping.Optional[bytes]aboolaPrivateKeyTypesaload_pem_private_keyuBackend.load_pem_private_keyDadataareturnabytesaPublicKeyTypesaload_pem_public_keyuBackend.load_pem_public_keyDadataareturnabytesudh.DHParametersaload_pem_parametersuBackend.load_pem_parametersuBackend.load_der_private_keyuBackend._evp_pkey_from_der_traditional_keyuBackend.load_der_public_keyaload_der_parametersuBackend.load_der_parametersDacertareturnux509.Certificateutyping.AnyuBackend._cert2osslDax509_ptrareturnutyping.Anyux509.CertificateuBackend._ossl2certDakeyareturnaPKCS12PrivateKeyTypesutyping.AnyuBackend._key2osslDareturnaPrivateKeyTypesuBackend._load_keyDareturnutyping.NoReturnuBackend._handle_key_loading_errorDacurveareturnuec.EllipticCurveabooluBackend.elliptic_curve_supportedDasignature_algorithmacurveareturnuec.EllipticCurveSignatureAlgorithmuec.EllipticCurveaboolaelliptic_curve_signature_algorithm_supporteduBackend.elliptic_curve_signature_algorithm_supportedDacurveareturnuec.EllipticCurveuec.EllipticCurvePrivateKeyagenerate_elliptic_curve_private_keyuBackend.generate_elliptic_curve_private_keyDanumbersareturnuec.EllipticCurvePrivateNumbersuec.EllipticCurvePrivateKeyaload_elliptic_curve_private_numbersuBackend.load_elliptic_curve_private_numbersDanumbersareturnuec.EllipticCurvePublicNumbersuec.EllipticCurvePublicKeyaload_elliptic_curve_public_numbersuBackend.load_elliptic_curve_public_numbersDacurveapoint_bytesareturnuec.EllipticCurveabytesuec.EllipticCurvePublicKeyaload_elliptic_curve_public_bytesuBackend.load_elliptic_curve_public_bytesDaprivate_valueacurveareturnaintuec.EllipticCurveuec.EllipticCurvePrivateKeyaderive_elliptic_curve_private_keyuBackend.derive_elliptic_curve_private_keyDacurveuec.EllipticCurveuBackend._ec_key_new_by_curveDacurve_nidaintuBackend._ec_key_new_by_curve_nidDaalgorithmacurveareturnuec.ECDHuec.EllipticCurveaboolaelliptic_curve_exchange_algorithm_supporteduBackend.elliptic_curve_exchange_algorithm_supporteduBackend._ec_cdata_to_evp_pkeyDacurveareturnuec.EllipticCurveaintuBackend._elliptic_curve_to_nidDwxwyareturnaintpaNoneuBackend._ec_key_set_public_key_affine_coordinatesDaencodingaformataencryption_algorithmareturnuserialization.Encodinguserialization.PrivateFormatuserialization.KeySerializationEncryptionabytesa_private_key_bytesuBackend._private_key_bytesuBackend._private_key_bytes_via_biouBackend._bio_func_outputDaencodingaformatareturnuserialization.Encodinguserialization.PublicFormatabytesa_public_key_bytesuBackend._public_key_bytesadh_supporteduBackend.dh_supportedDageneratorakey_sizeareturnaintpudh.DHParametersuBackend.generate_dh_parametersDaparametersareturnudh.DHParametersudh.DHPrivateKeyuBackend.generate_dh_private_keyDageneratorakey_sizeareturnaintpudh.DHPrivateKeyagenerate_dh_private_key_and_parametersuBackend.generate_dh_private_key_and_parametersDanumbersareturnudh.DHPrivateNumbersudh.DHPrivateKeyaload_dh_private_numbersuBackend.load_dh_private_numbersDanumbersareturnudh.DHPublicNumbersudh.DHPublicKeyaload_dh_public_numbersuBackend.load_dh_public_numbersDanumbersareturnudh.DHParameterNumbersudh.DHParametersaload_dh_parameter_numbersuBackend.load_dh_parameter_numbersDwpwgwqareturnaintputyping.Optional[int]abooladh_parameters_supporteduBackend.dh_parameters_supportedadh_x942_serialization_supporteduBackend.dh_x942_serialization_supportedDadataareturnabytesux25519.X25519PublicKeyax25519_load_public_bytesuBackend.x25519_load_public_bytesDadataareturnabytesux25519.X25519PrivateKeyax25519_load_private_bytesuBackend.x25519_load_private_bytesDareturnux25519.X25519PrivateKeyax25519_generate_keyuBackend.x25519_generate_keyax25519_supporteduBackend.x25519_supportedDadataareturnabytesux448.X448PublicKeyax448_load_public_bytesuBackend.x448_load_public_bytesDadataareturnabytesux448.X448PrivateKeyax448_load_private_bytesuBackend.x448_load_private_bytesDareturnux448.X448PrivateKeyax448_generate_keyuBackend.x448_generate_keyax448_supporteduBackend.x448_supportedaed25519_supporteduBackend.ed25519_supportedDadataareturnabytesued25519.Ed25519PublicKeyaed25519_load_public_bytesuBackend.ed25519_load_public_bytesDadataareturnabytesued25519.Ed25519PrivateKeyaed25519_load_private_bytesuBackend.ed25519_load_private_bytesDareturnued25519.Ed25519PrivateKeyaed25519_generate_keyuBackend.ed25519_generate_keyaed448_supporteduBackend.ed448_supportedDadataareturnabytesued448.Ed448PublicKeyaed448_load_public_bytesuBackend.ed448_load_public_bytesDadataareturnabytesued448.Ed448PrivateKeyaed448_load_private_bytesuBackend.ed448_load_private_bytesDareturnued448.Ed448PrivateKeyaed448_generate_keyuBackend.ed448_generate_keyaaead_cipher_supporteduBackend.aead_cipher_supportedDalengthareturnaintaNoneuBackend._zero_dataDadataapasswordareturnabytesutyping.Optional[bytes]utyping.Tuple[typing.Optional[PrivateKeyTypes], typing.Optional[x509.Certificate], typing.List[x509.Certificate]]aload_key_and_certificates_from_pkcs12uBackend.load_key_and_certificates_from_pkcs12Dadataapasswordareturnabytesutyping.Optional[bytes]aPKCS12KeyAndCertificatesuBackend.load_pkcs12Danameakeyacertacasaencryption_algorithmareturnutyping.Optional[bytes]utyping.Optional[PKCS12PrivateKeyTypes]utyping.Optional[x509.Certificate]utyping.Optional[typing.List[_PKCS12CATypes]]userialization.KeySerializationEncryptionabytesaserialize_key_and_certificates_to_pkcs12uBackend.serialize_key_and_certificates_to_pkcs12apoly1305_supporteduBackend.poly1305_supportedapkcs7_supporteduBackend.pkcs7_supportedDadataareturnabytesutyping.List[x509.Certificate]aload_pem_pkcs7_certificatesuBackend.load_pem_pkcs7_certificatesaload_der_pkcs7_certificatesuBackend.load_der_pkcs7_certificatesDareturnutyping.List[x509.Certificate]uBackend._load_pkcs7_certificatesDafmtastruGetCipherByName.__init__DabackendacipheramodeaBackendaCipherAlgorithmaModea__call__uGetCipherByName.__call__DabackendacipheraBackendaAESucryptography\hazmat\backends\openssl\backend.pyTa.0aerroraselfu<module cryptography.hazmat.backends.openssl.backend>Ta__class__Taselfabackendacipheramodeacipher_nameaevp_cipherTaselfTaselfafmtTaselfawrite_bioaargsabioaresTaselfabnabn_num_bytesabin_ptrabin_lenavalTaselfadataadata_ptrabioTaselfacertadataamem_bioax509Taselfaevp_pkeyTaselfabio_methodabioTaselfaec_cdataaevp_pkeyaresTaselfacurveacurve_nidTaselfacurve_nidaec_cdataTaselfaec_cdatawxwyabn_ctxagroupapointaresTaselfacurveacurve_aliasesacurve_nameacurve_nidTaselfaalgorithmaalgaevp_mdTaselfaalgorithmaevp_mdTaselfabio_dataapasswordakeyTaselfaevp_pkeyaunsafe_skip_rsa_key_validationakey_typearsa_cdataabioaresaec_cdataTaselfaevp_pkeyakey_typearsa_cdataabioaresaec_cdataaerrorsTabackendacipheramodeacipher_nameTaselfaerrorsTaselfanumabinaryabn_ptrTaselfakeyadataamem_bioaevp_pkeyTaselfaopenssl_read_funcadataapasswordaunsafe_skip_rsa_key_validationamem_bioauserdataapassword_ptraevp_pkeyTaselfap7acertsanidask_x509anumwiax509acertTaselfaalgorithmTaselfax509_ptrabioaresT
aselfaencodingaformataencryption_algorithmakeyaevp_pkeyacdataapasswordawrite_bioakey_typeTaselfawrite_bioaevp_pkeyapasswordaevp_cipherTaselfaencodingaformatakeyaevp_pkeyacdataawrite_bioakey_typeTaselfabioabufabuf_lenabio_dataTaselfacipher_clsamode_clsTaselfarsa_cdataaevp_pkeyaresTaselfabn_ctxTaselfadataalengthwiTaselfadataadata_lenabufTaselfacipherTaselfacipheramodeaadapteraevp_cipherTaselfacipheramodeT
aselfaprivate_valueacurveaec_cdataagroupapointavalueabn_ctxaresabn_xabn_yaprivateaevp_pkeyTaselfwpwgwqTaselfadataTaselfaalgorithmacurveTaselfasignature_algorithmacurveTaselfacurveacurve_nidagroupTaselfageneratorakey_sizeTaselfaparametersTaselfakey_sizeTaselfakey_sizeaparametersTaselfacurveaec_cdataaresaevp_pkeyTaselfapublic_exponentakey_sizeTaselfapublic_exponentakey_sizearsa_cdataabnaresaevp_pkeyTaselfadataabioap7Taselfadataapasswordaunsafe_skip_rsa_key_validationabio_dataakeyTaselfadataamem_bioaevp_pkeyaresarsa_cdataTaselfanumbersTaselfanumbersapublicaec_cdataaprivate_valuearesabn_ctxagroupaset_pointacomputed_pointaevp_pkeyTaselfacurveapoint_bytesaec_cdataagroupapointabn_ctxaresaevp_pkeyTaselfanumbersaec_cdataabn_ctxaevp_pkeyTaselfadataapasswordapkcs12Taselfadataapasswordaunsafe_skip_rsa_key_validationTaselfadataamem_bioauserdataaevp_pkeyaresarsa_cdataTaselfadataapasswordaindicesabioap12aevp_pkey_ptrax509_ptrask_x509_ptrapassword_bufaresacertakeyaadditional_certificatesaevp_pkeyax509acert_objanameamaybe_nameask_x509anumwiaaddl_certaaddl_nameTaselfanumbersaunsafe_skip_rsa_key_validationarsa_cdatawpwqwdadmp1admq1aiqmpwewnaresaevp_pkeyTaselfanumbersarsa_cdatawewnaresaevp_pkeyTaselfaokaerrorsTaselfacipher_clsamode_clsaadapterTaselfapaddingTaselfanameakeyacertacasaencryption_algorithmapasswordanid_certanid_keyapkcs12_iteramac_iteramac_algakeycertalgask_x509aossl_casacaaca_aliasaossl_caaresapassword_bufaname_bufaossl_certaossl_pkeyap12abio.cryptography.hazmat.backends.openssl.ciphersa_backenda_ciphera_modea_operationa_tagaciphersaBlockCipherAlgorithmablock_sizela_block_size_bytesla_libaEVP_CIPHER_CTX_newa_ffiagcaEVP_CIPHER_CTX_freea_cipher_registryaUnsupportedAlgorithmucipher {} in {} mode is not supported by this backend.anamea_ReasonsaUNSUPPORTED_CIPHERaNULLucipher uw uin u mode uis not supported by this backend (Your version of OpenSSL may be too old. Current version: {}.)aopenssl_version_textamodesaModeWithInitializationVectorafrom_bufferainitialization_vectoraModeWithTweakatweakaModeWithNonceanonceaalgorithmsaChaCha20aEVP_CipherInit_exaopenssl_assertlaEVP_CIPHER_CTX_set_key_lengthakeyaGCMaEVP_CIPHER_CTX_ctrlaEVP_CTRL_AEAD_SET_IVLENatagaEVP_CTRL_AEAD_SET_TAGaiv_noncea_consume_errorsaCRYPTOGRAPHY_IS_LIBRESSLa_lib_reason_matchaERR_LIB_EVPaEVP_R_XTS_DUPLICATED_KEYSaCryptography_HAS_PROVIDERSaERR_LIB_PROVaPROV_R_XTS_DUPLICATED_KEYSuIn XTS mode duplicated keys are not allowedTaerrorsaEVP_CIPHER_CTX_set_paddinga_ctxaupdate_intoubuffer must be at least {} bytes for this payloadanewTuint *Darequire_writabletadata_processedatotal_data_lenabaseoutbufatotal_outabaseinbufaminaselfa_MAX_CHUNK_SIZEaEVP_CipherUpdateaoutlenaXTSuIn XTS mode you must supply at least a full block in the first update call. For AES this is 16 bytes.a_DECRYPTaModeWithAuthenticationTaguAuthentication tag must be provided when decrypting.uunsigned char[]aEVP_CipherFinal_exaInvalidTagaEVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTHaPROV_R_WRONG_FINAL_BLOCK_LENGTHaCRYPTOGRAPHY_IS_BORINGSSLareasonaCIPHER_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTHuThe length of the provided data is not a multiple of the block length.a_ENCRYPTaEVP_CTRL_AEAD_GET_TAGabuffer:nnnaEVP_CIPHER_CTX_reseta_min_tag_lengthuAuthentication tag must be {} bytes or longer.uAuthentication tag cannot be more than {} bytes.afinalizea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.exceptionsTaInvalidTagaUnsupportedAlgorithma_Reasonsucryptography.hazmat.primitivesTaciphersucryptography.hazmat.primitives.ciphersTaalgorithmsamodesucryptography.hazmat.backends.openssl.ciphersa__module__a_CipherContexta__qualname__q?DabackendaoperationareturnaBackendaintaNonea__init__u_CipherContext.__init__Dadataareturnabytespaupdateu_CipherContext.updateDadataabufareturnabytespaintu_CipherContext.update_intoDareturnabytesu_CipherContext.finalizeDatagareturnabytespafinalize_with_tagu_CipherContext.finalize_with_tagDadataareturnabytesaNoneaauthenticate_additional_datau_CipherContext.authenticate_additional_dataDareturnutyping.Optional[bytes]u_CipherContext.tagTucryptography\hazmat\backends\openssl\ciphers.pyu<module cryptography.hazmat.backends.openssl.ciphers>Ta__class__Taselfabackendacipheramodeaoperationactxaregistryaadapteraevp_cipheramsgaiv_noncearesaerrorsalibTaselfadataaoutlenaresTaselfabufaoutlenaresaerrorsalibatag_bufTaselfatagatag_lenaresTaselfTaselfadataabufwnT
aselfadataabufatotal_data_lenadata_processedatotal_outaoutlenabaseoutbufabaseinbufaoutbufainbufainlenares.cryptography.hazmat.backends.openssl.cmacSacmac_algorithm_supportedaUnsupportedAlgorithmuThis backend does not support CMAC.a_ReasonsaUNSUPPORTED_CIPHERa_backendakeya_keya_algorithmablock_sizela_output_lengtha_cipher_registryaCBCa_libaCMAC_CTX_newaopenssl_asserta_ffiaNULLagcaCMAC_CTX_freeafrom_bufferaCMAC_Initlactxa_ctxaCMAC_Updateanewuunsigned char[]usize_t *aCMAC_Finalabuffer:nnnaCMAC_CTX_copya_CMACContextTactxafinalizeaconstant_timeabytes_eqaInvalidSignatureTuSignature did not match digest.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.exceptionsTaInvalidSignatureaUnsupportedAlgorithma_Reasonslucryptography.hazmat.primitivesTaconstant_timeucryptography.hazmat.primitives.ciphers.modesTaCBCucryptography.hazmat.backends.openssl.cmaca__module__a__qualname__TnDabackendaalgorithmareturnaBackenduciphers.BlockCipherAlgorithmaNonea__init__u_CMACContext.__init__DadataareturnabytesaNoneaupdateu_CMACContext.updateDareturnabytesu_CMACContext.finalizeDareturna_CMACContextacopyu_CMACContext.copyDasignatureareturnabytesaNoneaverifyu_CMACContext.verifyTucryptography\hazmat\backends\openssl\cmac.pyu<module cryptography.hazmat.backends.openssl.cmac>Taselfabackendaalgorithmactxaregistryaadapteraevp_cipherakey_ptraresTaselfacopied_ctxaresTaselfabufalengtharesTaselfadataaresTaselfasignatureadigestu.cryptography.hazmat.backends.opensslfa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\backends\opensslTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingubackends\opensslTaNUITKA_PACKAGE_cryptography_hazmat_backendsu\not_existingaopensslTaNUITKA_PACKAGE_cryptography_hazmat_backends_opensslu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.hazmat.backends.openssl.backendTabackendlabackenda__all__ucryptography\hazmat\backends\openssl\__init__.pyu<module cryptography.hazmat.backends.openssl>u.cryptography.hazmat.backends.openssl.ecaecaECDSAaUnsupportedAlgorithmuUnsupported elliptic curve signature algorithm.a_ReasonsaUNSUPPORTED_PUBLIC_KEY_ALGORITHMa_libaEC_KEY_get0_groupaopenssl_asserta_ffiaNULLaEC_GROUP_get_curve_nameaNID_undefuECDSA keys with explicit parameters are unsupported at this timeaCRYPTOGRAPHY_IS_LIBRESSLaEC_GROUP_get_asn1_flaglaOBJ_nid2snastringadecodeTaasciiaEC_KEY_set_asn1_flagaOPENSSL_EC_NAMED_CURVEu
    Set the named curve flag on the EC_KEY. This causes OpenSSL to
    serialize EC keys along with their curve OID which makes
    deserialization easier.
    aEC_KEY_get0_public_keyaEC_POINT_is_at_infinityuCannot load an EC public key where the point is at infinitya_CURVE_TYPESuu is not a supported elliptic curveaUNSUPPORTED_ELLIPTIC_CURVEaECDSA_sizea_ec_keyanewuunsigned char[]Tuunsigned int[]laECDSA_signlabufferaECDSA_verifya_consume_errorsaInvalidSignaturea_backenda_evp_pkeya_ec_key_curve_sna_sn_to_elliptic_curvea_curvea_mark_asn1_named_ec_curvea_check_key_infinityacurveakey_sizeaelliptic_curve_exchange_algorithm_supporteduThis backend does not support the ECDH algorithm.aUNSUPPORTED_EXCHANGE_ALGORITHManameupeer_public_key and self are not on the same curvea_evp_pkey_derivea_ec_key_new_by_curve_nidaEC_KEY_set_public_keya_ec_cdata_to_evp_pkeya_EllipticCurvePublicKeyaEC_KEY_get0_private_keya_bn_to_intaEllipticCurvePrivateNumbersapublic_keyapublic_numbersTaprivate_valueapublic_numbersa_private_key_bytesa_check_signature_algorithma_calculate_digest_and_algorithmaalgorithmutoo many values to unpack (expected 2)a_ecdsa_sig_signaEVP_PKEY_cmpa_tmp_bn_ctxa__enter__a__exit__aBN_CTX_getaEC_POINT_get_affine_coordinatesTnnnaEllipticCurvePublicNumberswxwyTwxwyacurveaserializationaPublicFormataCompressedPointaPOINT_CONVERSION_COMPRESSEDaUncompressedPointaPOINT_CONVERSION_UNCOMPRESSEDaselfaEC_POINT_point2octuchar[]abuf:nnnaEncodingaX962uX962 encoding must be used with CompressedPoint or UncompressedPoint formata_encode_pointa_public_key_bytesa_ecdsa_sig_verifya__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.exceptionsTaInvalidSignatureaUnsupportedAlgorithma_Reasonsucryptography.hazmat.backends.openssl.utilsTa_calculate_digest_and_algorithma_evp_pkey_deriveucryptography.hazmat.primitivesTaserializationucryptography.hazmat.primitives.asymmetricTaecDasignature_algorithmareturnuec.EllipticCurveSignatureAlgorithmaNoneDabackendareturnaBackendastrDabackendaBackendDabackendareturnaBackendaNoneDabackendasnareturnaBackendastruec.EllipticCurveDabackendaprivate_keyadataareturnaBackenda_EllipticCurvePrivateKeyabytespDabackendapublic_keyasignatureadataareturnaBackenda_EllipticCurvePublicKeyabytespaNoneaEllipticCurvePrivateKeya__prepare__a_EllipticCurvePrivateKeya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.backends.openssl.eca__module__a__qualname__a__init__u_EllipticCurvePrivateKey.__init__apropertyDareturnuec.EllipticCurveu_EllipticCurvePrivateKey.curveDareturnaintu_EllipticCurvePrivateKey.key_sizeDaalgorithmapeer_public_keyareturnuec.ECDHuec.EllipticCurvePublicKeyabytesaexchangeu_EllipticCurvePrivateKey.exchangeDareturnuec.EllipticCurvePublicKeyu_EllipticCurvePrivateKey.public_keyDareturnuec.EllipticCurvePrivateNumbersaprivate_numbersu_EllipticCurvePrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnuserialization.Encodinguserialization.PrivateFormatuserialization.KeySerializationEncryptionabytesaprivate_bytesu_EllipticCurvePrivateKey.private_bytesDadataasignature_algorithmareturnabytesuec.EllipticCurveSignatureAlgorithmabytesasignu_EllipticCurvePrivateKey.signa__orig_bases__aEllipticCurvePublicKeyu_EllipticCurvePublicKey.__init__u_EllipticCurvePublicKey.curveu_EllipticCurvePublicKey.key_sizeDaotherareturnaobjectaboola__eq__u_EllipticCurvePublicKey.__eq__Dareturnuec.EllipticCurvePublicNumbersu_EllipticCurvePublicKey.public_numbersDaformatareturnuserialization.PublicFormatabytesu_EllipticCurvePublicKey._encode_pointDaencodingaformatareturnuserialization.Encodinguserialization.PublicFormatabytesapublic_bytesu_EllipticCurvePublicKey.public_bytesDasignatureadataasignature_algorithmareturnabytespuec.EllipticCurveSignatureAlgorithmaNoneaverifyu_EllipticCurvePublicKey.verifyucryptography\hazmat\backends\openssl\ec.pyu<module cryptography.hazmat.backends.openssl.ec>Ta__class__TaselfaotherTaselfabackendaec_key_cdataaevp_pkeyasnTabackendaec_cdataapointagroupTasignature_algorithmTabackendaec_keyagroupanidacurve_nameasnTabackendaprivate_keyadataamax_sizeasigbufasiglen_ptraresTabackendapublic_keyasignatureadataaresTaselfaformataconversionagroupapointabn_ctxabuflenabufaresTabackendaec_cdataTabackendasnTaselfTaselfaalgorithmapeer_public_keyTaselfaencodingaformataencryption_algorithmTaselfabnaprivate_valueTaselfaencodingaformatTaselfagroupacurve_nidapublic_ec_keyapointaresaevp_pkeyTaselfagroupapointabn_ctxabn_xabn_yareswxwyTaselfadataasignature_algorithmw_Taselfasignatureadataasignature_algorithmw_.cryptography.hazmat.backends.openssl.rsa8a_salt_lengtha_MaxLengthacalculate_max_pss_salt_lengtha_DigestLengthadigest_sizea_AutoaRSAPrivateKeyuPSS salt length can only be set to AUTO when verifyinga_libaRSA_PSS_SALTLEN_AUTOaAsymmetricPaddinguPadding must be an instance of AsymmetricPadding.aPKCS1v15aRSA_PKCS1_PADDINGaOAEPaRSA_PKCS1_OAEP_PADDINGa_mgfaMGF1aUnsupportedAlgorithmuOnly MGF1 is supported by this backend.a_ReasonsaUNSUPPORTED_MGFarsa_padding_supporteduThis combination of padding and hash algorithm is not supported by this backend.aUNSUPPORTED_PADDINGanameuu is not supported by this backend.a_enc_dec_rsa_pkey_ctxabackendapaddinga_RSAPublicKeyaEVP_PKEY_encrypt_initaEVP_PKEY_encryptaEVP_PKEY_decrypt_initaEVP_PKEY_decryptaEVP_PKEY_CTX_newa_evp_pkeya_ffiaNULLaopenssl_assertagcaEVP_PKEY_CTX_freelaEVP_PKEY_CTX_set_rsa_paddinglaEVP_PKEY_sizea_evp_md_non_null_from_algorithma_algorithmaEVP_PKEY_CTX_set_rsa_mgf1_mdaEVP_PKEY_CTX_set_rsa_oaep_mda_labelaOPENSSL_mallocamemmoveaEVP_PKEY_CTX_set0_rsa_oaep_labelanewusize_t *uunsigned char[]abufferaERR_clear_erroruEncryption/decryption failed.uExpected provider of AsymmetricPadding.aPSSahashesaHashAlgorithmuExpected instance of hashes.HashAlgorithm.luDigest too large for key size. Use a larger key or different digest.aRSA_PKCS1_PSS_PADDINGa_rsa_sig_determine_paddinga_consume_errorsuUnable to sign/verify with this keyaEVP_PKEY_CTX_set_signature_mdu{} is not supported by this backend for RSA signing.aUNSUPPORTED_HASHu{} is not supported for the RSA signature operation.aEVP_PKEY_CTX_set_rsa_pss_saltlena_get_rsa_pss_salt_lengtha_rsa_sig_setupaEVP_PKEY_sign_initTusize_t *aEVP_PKEY_signuDigest or salt length too long for key size. Use a larger key or shorter salt length if you are specifying a PSS salt:nnnaEVP_PKEY_verify_initaEVP_PKEY_verifyaInvalidSignatureaEVP_PKEY_verify_recover_initaEVP_PKEY_verify_recoveraRSA_check_keyuInvalid private keyTuBIGNUM **aRSA_get0_factorsaBN_is_odda_backendarsa_cdataa_rsa_cdataa_blindedathreadingaLocka_blinding_lockaRSA_get0_keyaBN_num_bitsa_key_sizea__enter__a__exit__a_non_threadsafe_enable_blindingTnnnaRSA_blinding_ona_enable_blindingakey_sizelluCiphertext length must be equal to key size.a_enc_dec_rsaaRSAPublicKey_dupaRSA_freea_rsa_cdata_to_evp_pkeyaRSA_get0_crt_paramsaRSAPrivateNumbersa_bn_to_intaRSAPublicNumbersTwewnTwpwqwdadmp1admq1aiqmpapublic_numbersa_private_key_bytesa_calculate_digest_and_algorithmutoo many values to unpack (expected 2)a_rsa_sig_signaEVP_PKEY_cmpa_public_key_bytesa_rsa_sig_verifyaasym_utilsaPrehasheduPrehashed is only supported in the sign and verify methods. It cannot be used with recover_data_from_signature.a_rsa_sig_recovera__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.exceptionsTaInvalidSignatureaUnsupportedAlgorithma_Reasonsucryptography.hazmat.backends.openssl.utilsTa_calculate_digest_and_algorithmucryptography.hazmat.primitivesTahashesaserializationaserializationucryptography.hazmat.primitives.asymmetricTautilsautilsucryptography.hazmat.primitives.asymmetric.paddingTaMGF1aOAEPaPSSaAsymmetricPaddingaPKCS1v15a_Autoa_DigestLengtha_MaxLengthacalculate_max_pss_salt_lengthucryptography.hazmat.primitives.asymmetric.rsaTaRSAPrivateKeyaRSAPrivateNumbersaRSAPublicKeyaRSAPublicNumbersaRSAPublicKeyDabackendapssakeyahash_algorithmareturnaBackendaPSSutyping.Union[RSAPrivateKey, RSAPublicKey]uhashes.HashAlgorithmaintDabackendakeyadataapaddingareturnaBackendutyping.Union[_RSAPrivateKey, _RSAPublicKey]abytesaAsymmetricPaddingabytesDabackendakeyadataapadding_enumapaddingareturnaBackendutyping.Union[_RSAPrivateKey, _RSAPublicKey]abytesaintaAsymmetricPaddingabytesDabackendakeyapaddingaalgorithmareturnaBackendutyping.Union[_RSAPrivateKey, _RSAPublicKey]aAsymmetricPaddingutyping.Optional[hashes.HashAlgorithm]aintDabackendapaddingaalgorithmakeyainit_funcaBackendaAsymmetricPaddingutyping.Optional[hashes.HashAlgorithm]utyping.Union[_RSAPublicKey, _RSAPrivateKey]utyping.Callable[[typing.Any], int]Dabackendapaddingaalgorithmaprivate_keyadataareturnaBackendaAsymmetricPaddinguhashes.HashAlgorithma_RSAPrivateKeyabytespDabackendapaddingaalgorithmapublic_keyasignatureadataareturnaBackendaAsymmetricPaddinguhashes.HashAlgorithma_RSAPublicKeyabytespaNoneDabackendapaddingaalgorithmapublic_keyasignatureareturnaBackendaAsymmetricPaddingutyping.Optional[hashes.HashAlgorithm]a_RSAPublicKeyabytespa__prepare__a_RSAPrivateKeya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.backends.openssl.rsaa__module__a__qualname__a__annotations__aobjectaintDabackendaunsafe_skip_rsa_key_validationaBackendaboola__init__u_RSAPrivateKey.__init__DareturnaNoneu_RSAPrivateKey._enable_blindingu_RSAPrivateKey._non_threadsafe_enable_blindingapropertyDareturnaintu_RSAPrivateKey.key_sizeDaciphertextapaddingareturnabytesaAsymmetricPaddingabytesadecryptu_RSAPrivateKey.decryptDareturnaRSAPublicKeyapublic_keyu_RSAPrivateKey.public_keyDareturnaRSAPrivateNumbersaprivate_numbersu_RSAPrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnuserialization.Encodinguserialization.PrivateFormatuserialization.KeySerializationEncryptionabytesaprivate_bytesu_RSAPrivateKey.private_bytesDadataapaddingaalgorithmareturnabytesaAsymmetricPaddingutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]abytesasignu_RSAPrivateKey.signa__orig_bases__DabackendaBackendu_RSAPublicKey.__init__u_RSAPublicKey.key_sizeDaotherareturnaobjectaboola__eq__u_RSAPublicKey.__eq__DaplaintextapaddingareturnabytesaAsymmetricPaddingabytesaencryptu_RSAPublicKey.encryptDareturnaRSAPublicNumbersapublic_numbersu_RSAPublicKey.public_numbersDaencodingaformatareturnuserialization.Encodinguserialization.PublicFormatabytesapublic_bytesu_RSAPublicKey.public_bytesDasignatureadataapaddingaalgorithmareturnabytespaAsymmetricPaddingutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]aNoneaverifyu_RSAPublicKey.verifyDasignatureapaddingaalgorithmareturnabytesaAsymmetricPaddingutyping.Optional[hashes.HashAlgorithm]abytesarecover_data_from_signatureu_RSAPublicKey.recover_data_from_signatureucryptography\hazmat\backends\openssl\rsa.pyu<module cryptography.hazmat.backends.openssl.rsa>Ta__class__TaselfaotherTaselfabackendarsa_cdataaevp_pkeywnTaselfabackendarsa_cdataaevp_pkeyaunsafe_skip_rsa_key_validationaresaerrorswpwqap_oddaq_oddwnTaselfTabackendakeyadataapaddingapadding_enumTabackendakeyadataapadding_enumapaddingainitacryptapkey_ctxaresabuf_sizeamgf1_mdaoaep_mdalabelptraoutlenabufaresbufTabackendapssakeyahash_algorithmasaltTaselfaresTabackendakeyapaddingaalgorithmapkey_sizeapadding_enumTabackendapaddingaalgorithmapublic_keyasignatureapkey_ctxamaxlenabufabuflenaresaresbufTabackendapaddingaalgorithmakeyainit_funcapadding_enumapkey_ctxaresaerrorsaevp_mdamgf1_mdT
abackendapaddingaalgorithmaprivate_keyadataapkey_ctxabuflenaresabufaerrorsTabackendapaddingaalgorithmapublic_keyasignatureadataapkey_ctxaresTaselfaciphertextapaddingakey_size_bytesTaselfaplaintextapaddingTaselfaencodingaformataencryption_algorithmTaselfwnwewdwpwqadmp1admq1aiqmpTaselfaencodingaformatTaselfactxaevp_pkeyTaselfwnweTaselfasignatureapaddingaalgorithmTaselfadataapaddingaalgorithmTaselfasignatureadataapaddingaalgorithm.cryptography.hazmat.backends.openssl.utils94a_libaEVP_PKEY_CTX_newa_ffiaNULLaopenssl_assertagcaEVP_PKEY_CTX_freeaEVP_PKEY_derive_initlaCryptography_HAS_EVP_PKEY_SET_PEER_EXaEVP_PKEY_derive_set_peer_exa_evp_pkeylaEVP_PKEY_derive_set_peeranewTusize_t *aEVP_PKEY_deriveuunsigned char[]a_consume_errorsuError computing shared key.abuffer:nnnaPrehashedahashesaHashaupdateafinalizea_algorithmaalgorithmadigest_sizeuThe provided data must be the same length as the hash algorithm's digest size.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.hazmat.primitivesTahashesucryptography.hazmat.primitives.asymmetric.utilsTaPrehashedDabackendareturnaBackendabytesa_evp_pkey_deriveDadataaalgorithmareturnabytesutyping.Union[Prehashed, hashes.HashAlgorithm]utyping.Tuple[bytes, hashes.HashAlgorithm]a_calculate_digest_and_algorithmucryptography\hazmat\backends\openssl\utils.pyu<module cryptography.hazmat.backends.openssl.utils>Tadataaalgorithmahash_ctxTabackendaevp_pkeyapeer_public_keyactxaresakeylenabufaerrorsu.cryptography.hazmat.bindingsa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\bindingsTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingabindingsTaNUITKA_PACKAGE_cryptography_hazmat_bindingsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ucryptography\hazmat\bindings\__init__.pyu<module cryptography.hazmat.bindings>u.cryptography.hazmat.bindings.openssl._conditionalaSSL_CTX_set_cert_cbaSSL_set_cert_cbLaSSL_ST_BEFOREaSSL_ST_OKaSSL_ST_INITaSSL_ST_RENEGOTIATEaTLS_ST_BEFOREaTLS_ST_OKaEVP_PKEY_DHXaCryptography_CRYPTO_set_mem_functionsaX509_STORE_set_get_issueraEVP_PKEY_ED448aNID_ED448aNID_ED25519aEVP_PKEY_ED25519aNID_poly1305aEVP_PKEY_POLY1305aEVP_DigestFinalXOFaFIPS_mode_setaFIPS_modeaSSL_CTX_set1_sigalgs_listaSSL_CTX_use_psk_identity_hintaSSL_CTX_set_psk_server_callbackaSSL_CTX_set_psk_client_callbackLaSSL_CTX_set_psk_find_session_callbackaSSL_CTX_set_psk_use_session_callbackaCryptography_SSL_SESSION_newaSSL_CIPHER_findaSSL_SESSION_set1_master_keyaSSL_SESSION_set_cipheraSSL_SESSION_set_protocol_versionaSSL_CTX_add_client_custom_extaSSL_CTX_add_server_custom_extaSSL_extension_supportedLaSSL_VERIFY_POST_HANDSHAKEaSSL_CTX_set_ciphersuitesaSSL_verify_client_post_handshakeaSSL_CTX_set_post_handshake_authaSSL_set_post_handshake_authaSSL_SESSION_get_max_early_dataaSSL_write_early_dataaSSL_read_early_dataaSSL_CTX_set_max_early_dataLaEVP_PKEY_new_raw_private_keyaEVP_PKEY_new_raw_public_keyaEVP_PKEY_get_raw_private_keyaEVP_PKEY_get_raw_public_keyLaENGINE_by_idaENGINE_initaENGINE_finishaENGINE_get_default_RANDaENGINE_set_default_RANDaENGINE_unregister_RANDaENGINE_ctrl_cmdaENGINE_freeaENGINE_get_nameaENGINE_ctrl_cmd_stringaENGINE_load_builtin_enginesaENGINE_load_private_keyaENGINE_load_public_keyaSSL_CTX_set_client_cert_engineaSSL_get0_verified_chainaSSL_CTX_set_tlsext_use_srtpaSSL_set_tlsext_use_srtpaSSL_get_selected_srtp_profileLaOSSL_PROVIDER_loadaOSSL_PROVIDER_unloadaERR_LIB_PROVaPROV_R_WRONG_FINAL_BLOCK_LENGTHaPROV_R_BAD_DECRYPTaSSL_OP_NO_RENEGOTIATIONaDTLS_get_data_mtuaEVP_default_properties_is_fips_enabledaEVP_default_properties_enable_fipsLaSSL_OP_COOKIE_EXCHANGEaDTLSv1_listenaSSL_CTX_set_cookie_generate_cbaSSL_CTX_set_cookie_verify_cbLaSMIME_write_PKCS7aPEM_write_bio_PKCS7_streamaPKCS7_sign_add_signeraPKCS7_finalaPKCS7_verifyaSMIME_read_PKCS7aPKCS7_get0_signersaBN_FLG_CONSTTIMEaBN_set_flagsaBN_prime_checks_for_sizeaEVP_PKEY_set1_DHaEVP_CIPHER_fetchaEVP_CIPHER_freeaSSL_R_UNEXPECTED_EOF_WHILE_READINGaPKCS12_set_macaSSL_OP_IGNORE_UNEXPECTED_EOFaSSL_get_extms_supportaEVP_PKEY_derive_set_peer_exLaEVP_aead_chacha20_poly1305aEVP_AEAD_CTX_freeaEVP_AEAD_CTX_sealaEVP_AEAD_CTX_openaEVP_AEAD_max_overheadaCryptography_EVP_AEAD_CTX_newa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingDareturnutyping.List[str]acryptography_has_set_cert_cbacryptography_has_ssl_stacryptography_has_tls_stacryptography_has_evp_pkey_dhxacryptography_has_mem_functionsacryptography_has_x509_store_ctx_get_issueracryptography_has_ed448acryptography_has_ed25519acryptography_has_poly1305acryptography_has_evp_digestfinal_xofacryptography_has_fipsacryptography_has_ssl_sigalgsacryptography_has_pskacryptography_has_psk_tlsv13acryptography_has_custom_extacryptography_has_tlsv13_functionsacryptography_has_raw_keyacryptography_has_engineacryptography_has_verified_chainacryptography_has_srtpacryptography_has_providersacryptography_has_op_no_renegotiationacryptography_has_dtls_get_data_mtuacryptography_has_300_fipsacryptography_has_ssl_cookieacryptography_has_pkcs7_funcsacryptography_has_bn_flagsacryptography_has_evp_pkey_dhacryptography_has_300_evp_cipheracryptography_has_unexpected_eof_while_readingacryptography_has_pkcs12_set_macacryptography_has_ssl_op_ignore_unexpected_eofacryptography_has_get_extms_supportacryptography_has_evp_pkey_set_peer_exacryptography_has_evp_aeadaCryptography_HAS_SET_CERT_CBaCryptography_HAS_SSL_STaCryptography_HAS_TLS_STaCryptography_HAS_EVP_PKEY_DHXaCryptography_HAS_MEM_FUNCTIONSaCryptography_HAS_X509_STORE_CTX_GET_ISSUERaCryptography_HAS_ED448aCryptography_HAS_ED25519aCryptography_HAS_POLY1305aCryptography_HAS_FIPSaCryptography_HAS_SIGALGSaCryptography_HAS_PSKaCryptography_HAS_PSK_TLSv1_3aCryptography_HAS_CUSTOM_EXTaCryptography_HAS_TLSv1_3_FUNCTIONSaCryptography_HAS_RAW_KEYaCryptography_HAS_EVP_DIGESTFINAL_XOFaCryptography_HAS_ENGINEaCryptography_HAS_VERIFIED_CHAINaCryptography_HAS_SRTPaCryptography_HAS_PROVIDERSaCryptography_HAS_OP_NO_RENEGOTIATIONaCryptography_HAS_DTLS_GET_DATA_MTUaCryptography_HAS_300_FIPSaCryptography_HAS_SSL_COOKIEaCryptography_HAS_PKCS7_FUNCSaCryptography_HAS_BN_FLAGSaCryptography_HAS_EVP_PKEY_DHaCryptography_HAS_300_EVP_CIPHERaCryptography_HAS_UNEXPECTED_EOF_WHILE_READINGaCryptography_HAS_PKCS12_SET_MACaCryptography_HAS_SSL_OP_IGNORE_UNEXPECTED_EOFaCryptography_HAS_GET_EXTMS_SUPPORTaCryptography_HAS_EVP_PKEY_SET_PEER_EXaCryptography_HAS_EVP_AEADaCONDITIONAL_NAMESucryptography\hazmat\bindings\openssl\_conditional.pyu<module cryptography.hazmat.bindings.openssl._conditional>u.cryptography.hazmat.bindings.openssl.binding/oaopensslacapture_error_stackaInternalErroruUnknown OpenSSL error. This error is commonly encountered when another library is not cleaning up the OpenSSL error stack. If you are using cryptography with another library that uses OpenSSL try disabling it before reporting a bug. Otherwise please file an issue at https://github.com/pyca/cryptography/issues with information on how to reproduce this. ({!r})uOpenSSL 3.0's legacy provider failed to load. This is a fatal error by default, but cryptography supports running without legacy algorithms by setting the environment variable CRYPTOGRAPHY_OPENSSL_NO_LEGACY. If you did not expect this error, you have likely made a mistake with your OpenSSL configuration.atypesaModuleTypeTaliba_original_libaitemsutoo many values to unpack (expected 2)aexcluded_namesaupdatea_ensure_ffi_initializeda_openssl_assertalibaCRYPTOGRAPHY_OPENSSL_300_OR_GREATERaOSSL_PROVIDER_loadaffiaNULLcbasea_base_providercfipsa_fips_provideraEVP_default_properties_enable_fipsla_init_locka__enter__a__exit__a_lib_loadedabuild_conditional_librarya_opensslaCONDITIONAL_NAMESaosaenvironagetTaCRYPTOGRAPHY_OPENSSL_NO_LEGACYclegacya_legacy_providera_legacy_provider_loadeda_legacy_provider_errorcdefaulta_default_providerTnnnastringaCRYPTOGRAPHY_PACKAGE_VERSIONaencodeTaasciiuThe version of cryptography does not match the loaded shared object. This can happen if you have multiple copies of cryptography installed in your Python path. Please try creating a new virtual environment to resolve this issue. Loaded python version: {}, shared object version: {}aOpenSSL_version_numaopenssl_versiona__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsasysathreadinglatypingawarningsacryptographyucryptography.exceptionsTaInternalErrorucryptography.hazmat.bindings._rustTa_opensslaopensslucryptography.hazmat.bindings.openssl._conditionalTaCONDITIONAL_NAMESTnDaokaerrorsareturnaboolutyping.Optional[typing.List[openssl.OpenSSLError]]aNoneDaloadedareturnaboolaNoneDalibaconditional_namesareturnutyping.Anyutyping.Dict[str, typing.Callable[[], typing.List[str]]]utyping.Anyucryptography.hazmat.bindings.openssl.bindinga__module__u
    OpenSSL API wrapper.
    aBindinga__qualname__a__annotations__utyping.ClassVaraLockutyping.AnyDareturnaNonea__init__uBinding.__init__a_enable_fipsuBinding._enable_fipsuBinding._ensure_ffi_initializedainit_static_locksuBinding.init_static_locksTDaversionareturnastraNonea_verify_package_versiona__version__TaPROCESSOR_ARCHITEW6432awarnuYou are using cryptography on a 32-bit Python on a 64-bit Windows Operating System. Cryptography will be significantly faster if you switch to using a 64-bit Python.aUserWarningDastacklevellucryptography\hazmat\bindings\openssl\binding.pyu<module cryptography.hazmat.bindings.openssl.binding>Ta__class__TaselfTaselfaresTaclsTaloadedTalibaokaerrorsTaversionaso_package_versionTalibaconditional_namesaconditional_libaexcluded_namesaconditionanames_cbaattru.cryptography.hazmat.bindings.openssla__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\bindings\opensslTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingubindings\opensslTaNUITKA_PACKAGE_cryptography_hazmat_bindingsu\not_existingaopensslTaNUITKA_PACKAGE_cryptography_hazmat_bindings_opensslu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ucryptography\hazmat\bindings\openssl\__init__.pyu<module cryptography.hazmat.bindings.openssl>u.cryptography.hazmatDa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existingahazmatTaNUITKA_PACKAGE_cryptography_hazmatu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography\hazmat\__init__.pyu<module cryptography.hazmat>u.cryptography.hazmat.primitives._asymmetricI!a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclametaclassaABCMetaa__prepare__TaAsymmetricPaddingTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives._asymmetrica__module__aAsymmetricPaddinga__qualname__apropertyaabstractmethodDareturnastru
        A string naming this padding (e.g. "PSS", "PKCS1").
        anameuAsymmetricPadding.nameTucryptography\hazmat\primitives\_asymmetric.pyu<module cryptography.hazmat.primitives._asymmetric>Ta__class__Taselfu.cryptography.hazmat.primitives._cipheralgorithm(2a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypingametaclassaABCMetaa__prepare__TaCipherAlgorithmTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives._cipheralgorithma__module__aCipherAlgorithma__qualname__apropertyaabstractmethodDareturnastru
        A string naming this mode (e.g. "AES", "Camellia").
        anameuCipherAlgorithm.nameDareturnutyping.FrozenSet[int]u
        Valid key sizes for this algorithm in bits
        akey_sizesuCipherAlgorithm.key_sizesDareturnaintu
        The size of the key being used as an integer in bits (e.g. 128, 256).
        akey_sizeuCipherAlgorithm.key_sizeTaBlockCipherAlgorithma__annotations__abytesakeyu
        The size of a block as an integer in bits (e.g. 64, 128).
        ablock_sizeuBlockCipherAlgorithm.block_sizea__orig_bases__ucryptography\hazmat\primitives\_cipheralgorithm.pyu<module cryptography.hazmat.primitives._cipheralgorithm>Ta__class__Taselfu.cryptography.hazmat.primitives._serializationraPrivateFormataOpenSSHaPKCS12uencryption_builder only supported with PrivateFormat.OpenSSH and PrivateFormat.PKCS12aKeySerializationEncryptionBuilderuPassword must be 1 or more bytes.apassworda_formata_kdf_roundsa_hmac_hasha_key_cert_algorithmukdf_rounds already setukdf_rounds must be an integerlukdf_rounds must be a positive integerTa_kdf_roundsa_hmac_hasha_key_cert_algorithmuhmac_hash only supported with PrivateFormat.PKCS12uhmac_hash already setukey_cert_algorithm only supported with PrivateFormat.PKCS12ukey_cert_algorithm already seta_KeySerializationEncryptionTakdf_roundsahmac_hashakey_cert_algorithma__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypingacryptographyTautilsautilsucryptography.hazmat.primitives.hashesTaHashAlgorithmaHashAlgorithmaEnuma__prepare__aPBESa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives._serializationa__module__a__qualname__uPBESv1 using SHA1 and 3-Key TripleDESaPBESv1SHA1And3KeyTripleDESCBCuPBESv2 using SHA256 PBKDF2 and AES256 CBCaPBESv2SHA256AndAES256CBCa__orig_bases__aEncodingaPEMaDERaRawuANSI X9.62aX962uS/MIMEaSMIMEaPKCS8aTraditionalOpenSSLDareturnaKeySerializationEncryptionBuilderaencryption_builderuPrivateFormat.encryption_builderaPublicFormatuX.509 subjectPublicKeyInfo with PKCS#1aSubjectPublicKeyInfouRaw PKCS#1aPKCS1uX9.62 Compressed PointaCompressedPointuX9.62 Uncompressed PointaUncompressedPointaParameterFormataPKCS3ametaclassaABCMetaTaKeySerializationEncryptionTaKeySerializationEncryptionTaBestAvailableEncryptionDapasswordabytesa__init__uBestAvailableEncryption.__init__aNoEncryptionDa_kdf_roundsa_hmac_hasha_key_cert_algorithmnnnDaformata_kdf_roundsa_hmac_hasha_key_cert_algorithmareturnaPrivateFormatutyping.Optional[int]utyping.Optional[HashAlgorithm]utyping.Optional[PBES]aNoneuKeySerializationEncryptionBuilder.__init__DaroundsareturnaintaKeySerializationEncryptionBuilderakdf_roundsuKeySerializationEncryptionBuilder.kdf_roundsDaalgorithmareturnaHashAlgorithmaKeySerializationEncryptionBuilderahmac_hashuKeySerializationEncryptionBuilder.hmac_hashDaalgorithmareturnaPBESaKeySerializationEncryptionBuilderakey_cert_algorithmuKeySerializationEncryptionBuilder.key_cert_algorithmDapasswordareturnabytesaKeySerializationEncryptionabuilduKeySerializationEncryptionBuilder.buildDaformatapasswordakdf_roundsahmac_hashakey_cert_algorithmaPrivateFormatabytesutyping.Optional[int]utyping.Optional[HashAlgorithm]utyping.Optional[PBES]u_KeySerializationEncryption.__init__ucryptography\hazmat\primitives\_serialization.pyu<module cryptography.hazmat.primitives._serialization>Ta__class__Taselfaformata_kdf_roundsa_hmac_hasha_key_cert_algorithmTaselfaformatapasswordakdf_roundsahmac_hashakey_cert_algorithmTaselfapasswordTaselfTaselfaalgorithmTaselfaroundsu.cryptography.hazmat.primitives.asymmetric'a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\primitives\asymmetricTaNUITKA_PACKAGE_cryptography_hazmatu\not_existinguprimitives\asymmetricTaNUITKA_PACKAGE_cryptography_hazmat_primitivesu\not_existingaasymmetricTaNUITKA_PACKAGE_cryptography_hazmat_primitives_asymmetricu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ucryptography\hazmat\primitives\asymmetric\__init__.pyu<module cryptography.hazmat.primitives.asymmetric>u.cryptography.hazmat.primitives.asymmetric.dhucryptography.hazmat.backends.openssl.backendTabackendlabackendagenerate_dh_parametersup and g must be integersuq must be integer or NoneluDH generator must be 2 or greaterabit_lengtharust_openssladhaMIN_MODULUS_SIZEup (modulus) must be at least uu-bita_pa_ga_qaDHParameterNumbersaload_dh_parameter_numbersuy must be an integer.uparameters must be an instance of DHParameterNumbers.a_ya_parameter_numbersaDHPublicNumbersaload_dh_public_numbersux must be an integer.upublic_numbers must be an instance of DHPublicNumbers.a_xa_public_numbersaDHPrivateNumbersaload_dh_private_numbersa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingucryptography.hazmat.bindings._rustTaopensslaopensslucryptography.hazmat.primitivesTa_serializationa_serializationTnDageneratorakey_sizeabackendareturnaintputyping.AnyaDHParametersagenerate_parametersucryptography.hazmat.primitives.asymmetric.dha__module__a__qualname__Dwpwgwqareturnaintputyping.Optional[int]aNonea__init__uDHParameterNumbers.__init__Daotherareturnaobjectaboola__eq__uDHParameterNumbers.__eq__Dabackendareturnutyping.AnyaDHParametersaparametersuDHParameterNumbers.parametersDareturnaintwpuDHParameterNumbers.pwguDHParameterNumbers.gDareturnutyping.Optional[int]wquDHParameterNumbers.qTDwyaparameter_numbersareturnaintaDHParameterNumbersaNoneuDHPublicNumbers.__init__uDHPublicNumbers.__eq__Dabackendareturnutyping.AnyaDHPublicKeyapublic_keyuDHPublicNumbers.public_keywyuDHPublicNumbers.yDareturnaDHParameterNumbersaparameter_numbersuDHPublicNumbers.parameter_numbersDwxapublic_numbersareturnaintaDHPublicNumbersaNoneuDHPrivateNumbers.__init__uDHPrivateNumbers.__eq__Dabackendareturnutyping.AnyaDHPrivateKeyaprivate_keyuDHPrivateNumbers.private_keyDareturnaDHPublicNumbersapublic_numbersuDHPrivateNumbers.public_numberswxuDHPrivateNumbers.xametaclassaABCMetaa__prepare__TaDHParametersTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>aDHParametersaabstractmethodDareturnaDHPrivateKeyu
        Generates and returns a DHPrivateKey.
        agenerate_private_keyuDHParameters.generate_private_keyDaencodingaformatareturnu_serialization.Encodingu_serialization.ParameterFormatabytesu
        Returns the parameters serialized as bytes.
        aparameter_bytesuDHParameters.parameter_bytesu
        Returns a DHParameterNumbers.
        uDHParameters.parameter_numbersaDHParametersWithSerializationaregisterTaDHPublicKeyTaDHPublicKeyapropertyu
        The bit length of the prime modulus.
        akey_sizeuDHPublicKey.key_sizeDareturnaDHParametersu
        The DHParameters object associated with this public key.
        uDHPublicKey.parametersu
        Returns a DHPublicNumbers.
        uDHPublicKey.public_numbersDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        Returns the key serialized as bytes.
        apublic_bytesuDHPublicKey.public_bytesu
        Checks equality.
        uDHPublicKey.__eq__aDHPublicKeyWithSerializationTaDHPrivateKeyTaDHPrivateKeyuDHPrivateKey.key_sizeDareturnaDHPublicKeyu
        The DHPublicKey associated with this private key.
        uDHPrivateKey.public_keyu
        The DHParameters object associated with this private key.
        uDHPrivateKey.parametersDapeer_public_keyareturnaDHPublicKeyabytesu
        Given peer's DHPublicKey, carry out the key exchange and
        return shared key as bytes.
        aexchangeuDHPrivateKey.exchangeDareturnaDHPrivateNumbersu
        Returns a DHPrivateNumbers.
        aprivate_numbersuDHPrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesaprivate_bytesuDHPrivateKey.private_bytesaDHPrivateKeyWithSerializationucryptography\hazmat\primitives\asymmetric\dh.pyu<module cryptography.hazmat.primitives.asymmetric.dh>Ta__class__TaselfaotherTaselfwpwgwqTaselfwxapublic_numbersTaselfwyaparameter_numbersTaselfapeer_public_keyTaselfTageneratorakey_sizeabackendaosslTaselfaencodingaformatTaselfabackendaosslTaselfaencodingaformataencryption_algorithm.cryptography.hazmat.primitives.asymmetric.dsauDSAParameterNumbers p, q, and g arguments must be integers.a_pa_qa_gucryptography.hazmat.backends.openssl.backendTabackendlabackendaload_dsa_parameter_numbersaDSAParameterNumberswpwqwgu<DSAParameterNumbers(p={self.p}, q={self.q}, g={self.g})>TaselfuDSAPublicNumbers y argument must be an integer.uparameter_numbers must be a DSAParameterNumbers instance.a_ya_parameter_numbersaload_dsa_public_numbersaDSAPublicNumberswyaparameter_numbersu<DSAPublicNumbers(y={self.y}, parameter_numbers={self.parameter_numbers})>uDSAPrivateNumbers x argument must be an integer.upublic_numbers must be a DSAPublicNumbers instance.a_public_numbersa_xaload_dsa_private_numbersaDSAPrivateNumberswxapublic_numbersagenerate_dsa_parametersagenerate_dsa_private_key_and_parametersabit_lengthLllllup must be exactly 1024, 2048, 3072, or 4096 bits longllluq must be exactly 160, 224, or 256 bits longlug, p don't satisfy 1 < g < p.a_check_dsa_parametersux must be > 0 and < q.apowuy must be equal to (g ** x % p).a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslucryptography.hazmat.primitivesTa_serializationahashesa_serializationahashesucryptography.hazmat.primitives.asymmetricTautilsautilsaasym_utilsametaclassaABCMetaa__prepare__TaDSAParametersTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.dsaa__module__aDSAParametersa__qualname__aabstractmethodDareturnaDSAPrivateKeyu
        Generates and returns a DSAPrivateKey.
        agenerate_private_keyuDSAParameters.generate_private_keyDareturnaDSAParameterNumbersu
        Returns a DSAParameterNumbers.
        uDSAParameters.parameter_numbersTaDSAParametersWithNumbersaregisteradsaTaDSAPrivateKeyTaDSAPrivateKeyapropertyDareturnaintu
        The bit length of the prime modulus.
        akey_sizeuDSAPrivateKey.key_sizeDareturnaDSAPublicKeyu
        The DSAPublicKey associated with this private key.
        apublic_keyuDSAPrivateKey.public_keyDareturnaDSAParametersu
        The DSAParameters object associated with this private key.
        aparametersuDSAPrivateKey.parametersDadataaalgorithmareturnabytesutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]abytesu
        Signs the data
        asignuDSAPrivateKey.signDareturnaDSAPrivateNumbersu
        Returns a DSAPrivateNumbers.
        aprivate_numbersuDSAPrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        Returns the key serialized as bytes.
        aprivate_bytesuDSAPrivateKey.private_bytesaDSAPrivateKeyWithSerializationTaDSAPublicKeyTaDSAPublicKeyuDSAPublicKey.key_sizeu
        The DSAParameters object associated with this public key.
        uDSAPublicKey.parametersDareturnaDSAPublicNumbersu
        Returns a DSAPublicNumbers.
        uDSAPublicKey.public_numbersDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesapublic_bytesuDSAPublicKey.public_bytesDasignatureadataaalgorithmareturnabytesputyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]aNoneu
        Verifies the signature of the data.
        averifyuDSAPublicKey.verifyDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uDSAPublicKey.__eq__aDSAPublicKeyWithSerializationDwpwqwgaintppa__init__uDSAParameterNumbers.__init__uDSAParameterNumbers.puDSAParameterNumbers.quDSAParameterNumbers.gTnDabackendareturnutyping.AnyaDSAParametersuDSAParameterNumbers.parametersuDSAParameterNumbers.__eq__Dareturnastra__repr__uDSAParameterNumbers.__repr__Dwyaparameter_numbersaintaDSAParameterNumbersuDSAPublicNumbers.__init__uDSAPublicNumbers.yuDSAPublicNumbers.parameter_numbersDabackendareturnutyping.AnyaDSAPublicKeyuDSAPublicNumbers.public_keyuDSAPublicNumbers.__eq__uDSAPublicNumbers.__repr__Dwxapublic_numbersaintaDSAPublicNumbersuDSAPrivateNumbers.__init__uDSAPrivateNumbers.xuDSAPrivateNumbers.public_numbersDabackendareturnutyping.AnyaDSAPrivateKeyaprivate_keyuDSAPrivateNumbers.private_keyuDSAPrivateNumbers.__eq__Dakey_sizeabackendareturnaintutyping.AnyaDSAParametersagenerate_parametersDakey_sizeabackendareturnaintutyping.AnyaDSAPrivateKeyDaparametersareturnaDSAParameterNumbersaNoneDanumbersareturnaDSAPrivateNumbersaNonea_check_dsa_private_numbersucryptography\hazmat\primitives\asymmetric\dsa.pyu<module cryptography.hazmat.primitives.asymmetric.dsa>Ta__class__TaselfaotherTaselfwpwqwgTaselfwxapublic_numbersTaselfwyaparameter_numbersTaparametersTanumbersaparametersTakey_sizeabackendaosslTaselfabackendaosslTaselfaencodingaformataencryption_algorithmTaselfaencodingaformatTaselfadataaalgorithmTaselfasignatureadataaalgorithmu.cryptography.hazmat.primitives.asymmetric.ecautilsa_check_bytesadataaEllipticCurveucurve must be an EllipticCurve instanceudata must not be an empty byte stringlllluUnsupported elliptic curve point typeucryptography.hazmat.backends.openssl.backendTabackendabackendaload_elliptic_curve_public_bytesa_algorithmagenerate_elliptic_curve_private_keyuprivate_value must be an integer type.uprivate_value must be a positive integer.ucurve must provide the EllipticCurve interface.aderive_elliptic_curve_private_keyux and y must be integers.a_ya_xa_curveaload_elliptic_curve_public_numbersaEllipticCurvePublicNumberswxwyacurveanameakey_sizeu<EllipticCurvePublicNumbers(curve={0.curve.name}, x={0.x}, y={0.y}>uprivate_value must be an integer.upublic_numbers must be an EllipticCurvePublicNumbers instance.a_private_valuea_public_numbersaload_elliptic_curve_private_numbersaEllipticCurvePrivateNumbersaprivate_valueapublic_numbersa_OID_TO_CURVEuThe provided object identifier has no matching elliptic curve classa__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsaabcatypingacryptographyTautilsucryptography.hazmat._oidTaObjectIdentifieraObjectIdentifierucryptography.hazmat.primitivesTa_serializationahashesa_serializationahashesucryptography.hazmat.primitives.asymmetricaasym_utilsucryptography.hazmat.primitives.asymmetric.eca__module__aEllipticCurveOIDa__qualname__Tu1.2.840.10045.3.1.1aSECP192R1Tu1.3.132.0.33aSECP224R1Tu1.3.132.0.10aSECP256K1Tu1.2.840.10045.3.1.7aSECP256R1Tu1.3.132.0.34aSECP384R1Tu1.3.132.0.35aSECP521R1Tu1.3.36.3.3.2.8.1.1.7aBRAINPOOLP256R1Tu1.3.36.3.3.2.8.1.1.11aBRAINPOOLP384R1Tu1.3.36.3.3.2.8.1.1.13aBRAINPOOLP512R1Tu1.3.132.0.1aSECT163K1Tu1.3.132.0.15aSECT163R2Tu1.3.132.0.26aSECT233K1Tu1.3.132.0.27aSECT233R1Tu1.3.132.0.16aSECT283K1Tu1.3.132.0.17aSECT283R1Tu1.3.132.0.36aSECT409K1Tu1.3.132.0.37aSECT409R1Tu1.3.132.0.38aSECT571K1Tu1.3.132.0.39aSECT571R1TametaclassaABCMetaa__prepare__TaEllipticCurveTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>apropertyaabstractmethodDareturnastru
        The name of the curve. e.g. secp256r1.
        uEllipticCurve.nameDareturnaintu
        Bit size of a secret scalar for the curve.
        uEllipticCurve.key_sizeTaEllipticCurveSignatureAlgorithmTaEllipticCurveSignatureAlgorithmDareturnutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]u
        The digest algorithm used with this signature.
        aalgorithmuEllipticCurveSignatureAlgorithm.algorithmTaEllipticCurvePrivateKeyTaEllipticCurvePrivateKeyDaalgorithmapeer_public_keyareturnaECDHaEllipticCurvePublicKeyabytesu
        Performs a key exchange operation using the provided algorithm with the
        provided peer's public key.
        aexchangeuEllipticCurvePrivateKey.exchangeDareturnaEllipticCurvePublicKeyu
        The EllipticCurvePublicKey for this private key.
        apublic_keyuEllipticCurvePrivateKey.public_keyDareturnaEllipticCurveu
        The EllipticCurve that this key is on.
        uEllipticCurvePrivateKey.curveuEllipticCurvePrivateKey.key_sizeDadataasignature_algorithmareturnabytesaEllipticCurveSignatureAlgorithmabytesu
        Signs the data
        asignuEllipticCurvePrivateKey.signDareturnaEllipticCurvePrivateNumbersu
        Returns an EllipticCurvePrivateNumbers.
        aprivate_numbersuEllipticCurvePrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        Returns the key serialized as bytes.
        aprivate_bytesuEllipticCurvePrivateKey.private_bytesaEllipticCurvePrivateKeyWithSerializationTaEllipticCurvePublicKeyTaEllipticCurvePublicKeyuEllipticCurvePublicKey.curveuEllipticCurvePublicKey.key_sizeDareturnaEllipticCurvePublicNumbersu
        Returns an EllipticCurvePublicNumbers.
        uEllipticCurvePublicKey.public_numbersDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesapublic_bytesuEllipticCurvePublicKey.public_bytesDasignatureadataasignature_algorithmareturnabytespaEllipticCurveSignatureAlgorithmaNoneu
        Verifies the signature of the data.
        averifyuEllipticCurvePublicKey.verifyaclassmethodDacurveadataareturnaEllipticCurveabytesaEllipticCurvePublicKeyafrom_encoded_pointuEllipticCurvePublicKey.from_encoded_pointDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uEllipticCurvePublicKey.__eq__aEllipticCurvePublicKeyWithSerializationasect571r1l:a__orig_bases__asect409r1lasect283r1lasect233r1lasect163r2lasect571k1l;asect409k1asect283k1asect233k1asect163k1asecp521r1lasecp384r1lasecp256r1lasecp256k1asecp224r1lasecp192r1laBrainpoolP256R1abrainpoolP256r1aBrainpoolP384R1abrainpoolP384r1aBrainpoolP512R1abrainpoolP512r1laprime192v1aprime256v1a_CURVE_TYPESutyping.Dict[str, typing.Type[EllipticCurve]]aECDSADaalgorithmutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]a__init__uECDSA.__init__uECDSA.algorithmTnDacurveabackendareturnaEllipticCurveutyping.AnyaEllipticCurvePrivateKeyagenerate_private_keyDaprivate_valueacurveabackendareturnaintaEllipticCurveutyping.AnyaEllipticCurvePrivateKeyaderive_private_keyDwxwyacurveaintpaEllipticCurveuEllipticCurvePublicNumbers.__init__Dabackendareturnutyping.AnyaEllipticCurvePublicKeyuEllipticCurvePublicNumbers.public_keyuEllipticCurvePublicNumbers.curveuEllipticCurvePublicNumbers.xuEllipticCurvePublicNumbers.yuEllipticCurvePublicNumbers.__eq__a__hash__uEllipticCurvePublicNumbers.__hash__a__repr__uEllipticCurvePublicNumbers.__repr__Daprivate_valueapublic_numbersaintaEllipticCurvePublicNumbersuEllipticCurvePrivateNumbers.__init__Dabackendareturnutyping.AnyaEllipticCurvePrivateKeyaprivate_keyuEllipticCurvePrivateNumbers.private_keyuEllipticCurvePrivateNumbers.private_valueuEllipticCurvePrivateNumbers.public_numbersuEllipticCurvePrivateNumbers.__eq__uEllipticCurvePrivateNumbers.__hash__aECDHDaoidareturnaObjectIdentifierutyping.Type[EllipticCurve]aget_curve_for_oiducryptography\hazmat\primitives\asymmetric\ec.pyu<module cryptography.hazmat.primitives.asymmetric.ec>Ta__class__TaselfaotherTaselfTaselfaalgorithmTaselfaprivate_valueapublic_numbersTaselfwxwyacurveTaprivate_valueacurveabackendaosslTaselfaalgorithmapeer_public_keyTaclsacurveadataabackendTacurveabackendaosslTaoidTaselfaencodingaformataencryption_algorithmTaselfabackendaosslTaselfaencodingaformatTaselfadataasignature_algorithmTaselfasignatureadataasignature_algorithmu.cryptography.hazmat.primitives.asymmetric.ed25519
eucryptography.hazmat.backends.openssl.backendTabackendlabackendaed25519_supportedaUnsupportedAlgorithmued25519 is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_PUBLIC_KEY_ALGORITHMaed25519_load_public_bytesaed25519_generate_keyaed25519_load_private_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslucryptography.hazmat.primitivesTa_serializationa_serializationametaclassaABCMetaa__prepare__TaEd25519PublicKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.ed25519a__module__aEd25519PublicKeya__qualname__aclassmethodDadataareturnabytesaEd25519PublicKeyafrom_public_bytesuEd25519PublicKey.from_public_bytesaabstractmethodDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        The serialized bytes of the public key.
        apublic_bytesuEd25519PublicKey.public_bytesDareturnabytesu
        The raw bytes of the public key.
        Equivalent to public_bytes(Raw, Raw).
        apublic_bytes_rawuEd25519PublicKey.public_bytes_rawDasignatureadataareturnabytespaNoneu
        Verify the signature.
        averifyuEd25519PublicKey.verifyDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uEd25519PublicKey.__eq__Taed25519aregisterTaEd25519PrivateKeyTaEd25519PrivateKeyDareturnaEd25519PrivateKeyagenerateuEd25519PrivateKey.generateDadataareturnabytesaEd25519PrivateKeyafrom_private_bytesuEd25519PrivateKey.from_private_bytesDareturnaEd25519PublicKeyu
        The Ed25519PublicKey derived from the private key.
        apublic_keyuEd25519PrivateKey.public_keyDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        The serialized bytes of the private key.
        aprivate_bytesuEd25519PrivateKey.private_bytesu
        The raw bytes of the private key.
        Equivalent to private_bytes(Raw, Raw, NoEncryption()).
        aprivate_bytes_rawuEd25519PrivateKey.private_bytes_rawDadataareturnabytespu
        Signs the data.
        asignuEd25519PrivateKey.signax25519ucryptography\hazmat\primitives\asymmetric\ed25519.pyu<module cryptography.hazmat.primitives.asymmetric.ed25519>Ta__class__TaselfaotherTaclsadataabackendTaclsabackendTaselfaencodingaformataencryption_algorithmTaselfTaselfaencodingaformatTaselfadataTaselfasignatureadatau.cryptography.hazmat.primitives.asymmetric.ed448V
eucryptography.hazmat.backends.openssl.backendTabackendlabackendaed448_supportedaUnsupportedAlgorithmued448 is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_PUBLIC_KEY_ALGORITHMaed448_load_public_bytesaed448_generate_keyaed448_load_private_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslucryptography.hazmat.primitivesTa_serializationa_serializationametaclassaABCMetaa__prepare__TaEd448PublicKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.ed448a__module__aEd448PublicKeya__qualname__aclassmethodDadataareturnabytesaEd448PublicKeyafrom_public_bytesuEd448PublicKey.from_public_bytesaabstractmethodDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        The serialized bytes of the public key.
        apublic_bytesuEd448PublicKey.public_bytesDareturnabytesu
        The raw bytes of the public key.
        Equivalent to public_bytes(Raw, Raw).
        apublic_bytes_rawuEd448PublicKey.public_bytes_rawDasignatureadataareturnabytespaNoneu
        Verify the signature.
        averifyuEd448PublicKey.verifyDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uEd448PublicKey.__eq__Taed448aregisterTaEd448PrivateKeyTaEd448PrivateKeyDareturnaEd448PrivateKeyagenerateuEd448PrivateKey.generateDadataareturnabytesaEd448PrivateKeyafrom_private_bytesuEd448PrivateKey.from_private_bytesDareturnaEd448PublicKeyu
        The Ed448PublicKey derived from the private key.
        apublic_keyuEd448PrivateKey.public_keyDadataareturnabytespu
        Signs the data.
        asignuEd448PrivateKey.signDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        The serialized bytes of the private key.
        aprivate_bytesuEd448PrivateKey.private_bytesu
        The raw bytes of the private key.
        Equivalent to private_bytes(Raw, Raw, NoEncryption()).
        aprivate_bytes_rawuEd448PrivateKey.private_bytes_rawax448ucryptography\hazmat\primitives\asymmetric\ed448.pyu<module cryptography.hazmat.primitives.asymmetric.ed448>Ta__class__TaselfaotherTaclsadataabackendTaclsabackendTaselfaencodingaformataencryption_algorithmTaselfTaselfaencodingaformatTaselfadataTaselfasignatureadatau.cryptography.hazmat.primitives.asymmetric.paddingVa_mgfa_MaxLengtha_Autoa_DigestLengthusalt_length must be an integer, MAX_LENGTH, DIGEST_LENGTH, or AUTOlusalt_length must be zero or greater.a_salt_lengthahashesaHashAlgorithmuExpected instance of hashes.HashAlgorithm.a_algorithma_labelarsaaRSAPrivateKeyaRSAPublicKeyukey must be an RSA public or private keyakey_sizelladigest_sizela__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingucryptography.hazmat.primitivesTahashesucryptography.hazmat.primitives._asymmetricTaAsymmetricPaddingaAsymmetricPaddingucryptography.hazmat.primitives.asymmetricTarsaa__prepare__aPKCS1v15a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.paddinga__module__a__qualname__uEMSA-PKCS1-v1_5anamea__orig_bases__uSentinel value for `MAX_LENGTH`.TuSentinel value for `AUTO`.uSentinel value for `DIGEST_LENGTH`.aPSSa__annotations__aMAX_LENGTHaAUTOaDIGEST_LENGTHuEMSA-PSSutyping.Union[int, _MaxLength, _Auto, _DigestLength]Damgfasalt_lengthareturnaMGFutyping.Union[int, _MaxLength, _Auto, _DigestLength]aNonea__init__uPSS.__init__aOAEPuEME-OAEPDamgfaalgorithmalabelaMGFuhashes.HashAlgorithmutyping.Optional[bytes]uOAEP.__init__ametaclassaABCMetaTaMGFTaMGFuhashes.HashAlgorithmaMGF1Daalgorithmuhashes.HashAlgorithmuMGF1.__init__Dakeyahash_algorithmareturnutyping.Union[rsa.RSAPrivateKey, rsa.RSAPublicKey]uhashes.HashAlgorithmaintacalculate_max_pss_salt_lengthucryptography\hazmat\primitives\asymmetric\padding.pyu<module cryptography.hazmat.primitives.asymmetric.padding>Ta__class__TaselfaalgorithmTaselfamgfaalgorithmalabelTaselfamgfasalt_lengthTakeyahash_algorithmaemlenasalt_lengthu.cryptography.hazmat.primitives.asymmetric.rsaucryptography.hazmat.backends.openssl.backendTabackendlabackenda_verify_rsa_parametersagenerate_rsa_private_keyTllupublic_exponent must be either 3 (for legacy compatibility) or 65537. Almost everyone should choose 65537 here!lukey_size must be at least 512-bits.lumodulus must be >= 3.up must be < modulus.uq must be < modulus.udmp1 must be < modulus.udmq1 must be < modulus.uiqmp must be < modulus.uprivate_exponent must be < modulus.upublic_exponent must be >= 3 and < modulus.lupublic_exponent must be odd.udmp1 must be odd.udmq1 must be odd.up*q must equal modulus.un must be >= 3.ue must be >= 3 and < n.ue must be odd.Tllutoo many values to unpack (expected 2)wbwaax1ax2utoo many values to unpack (expected 4)u
    Modular Multiplicative Inverse. Returns x such that: (x*e) mod m == 1
    a_modinvu
    Compute the CRT (q ** -1) % p value from RSA primes p and q.
    u
    Compute the CRT private_exponent % (p - 1) value from the RSA
    private_exponent (d) and p.
    u
    Compute the CRT private_exponent % (q - 1) value from the RSA
    private_exponent (d) and q.
    wtlaspotteda_MAX_RECOVERY_ATTEMPTSwkapowwnagcduUnable to compute factors p and q from exponent d.wpasortedDareversetu
    Compute factors p and q from the private exponent d. We assume that n has
    no more than two factors. This function is adapted from code in PyCrypto.
    uRSAPrivateNumbers p, q, d, dmp1, dmq1, iqmp arguments must all be an integers.aRSAPublicNumbersuRSAPrivateNumbers public_numbers must be an RSAPublicNumbers instance.a_pa_qa_da_dmp1a_dmq1a_iqmpa_public_numbersaload_rsa_private_numbersaRSAPrivateNumberswqwdadmp1admq1aiqmpapublic_numbersuRSAPublicNumbers arguments must be integers.a_ea_naload_rsa_public_numbersu<RSAPublicNumbers(e={0.e}, n={0.n})>wea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingamathTagcducryptography.hazmat.primitivesTa_serializationahashesa_serializationahashesucryptography.hazmat.primitives._asymmetricTaAsymmetricPaddingaAsymmetricPaddingucryptography.hazmat.primitives.asymmetricTautilsautilsaasym_utilsametaclassaABCMetaa__prepare__TaRSAPrivateKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.rsaa__module__aRSAPrivateKeya__qualname__aabstractmethodDaciphertextapaddingareturnabytesaAsymmetricPaddingabytesu
        Decrypts the provided ciphertext.
        adecryptuRSAPrivateKey.decryptapropertyDareturnaintu
        The bit length of the public modulus.
        akey_sizeuRSAPrivateKey.key_sizeDareturnaRSAPublicKeyu
        The RSAPublicKey associated with this private key.
        apublic_keyuRSAPrivateKey.public_keyDadataapaddingaalgorithmareturnabytesaAsymmetricPaddingutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]abytesu
        Signs the data.
        asignuRSAPrivateKey.signDareturnaRSAPrivateNumbersu
        Returns an RSAPrivateNumbers.
        aprivate_numbersuRSAPrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        Returns the key serialized as bytes.
        aprivate_bytesuRSAPrivateKey.private_bytesTaRSAPrivateKeyWithSerializationTaRSAPublicKeyTaRSAPublicKeyDaplaintextapaddingareturnabytesaAsymmetricPaddingabytesu
        Encrypts the given plaintext.
        aencryptuRSAPublicKey.encryptuRSAPublicKey.key_sizeDareturnaRSAPublicNumbersu
        Returns an RSAPublicNumbers
        uRSAPublicKey.public_numbersDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesapublic_bytesuRSAPublicKey.public_bytesDasignatureadataapaddingaalgorithmareturnabytespaAsymmetricPaddingutyping.Union[asym_utils.Prehashed, hashes.HashAlgorithm]aNoneu
        Verifies the signature of the data.
        averifyuRSAPublicKey.verifyDasignatureapaddingaalgorithmareturnabytesaAsymmetricPaddingutyping.Optional[hashes.HashAlgorithm]abytesu
        Recovers the original data from the signature.
        arecover_data_from_signatureuRSAPublicKey.recover_data_from_signatureDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uRSAPublicKey.__eq__aRSAPublicKeyWithSerializationTnDapublic_exponentakey_sizeabackendareturnaintputyping.AnyaRSAPrivateKeyagenerate_private_keyDapublic_exponentakey_sizeareturnaintpaNoneDwpwqaprivate_exponentadmp1admq1aiqmpapublic_exponentamodulusareturnaintpppppppaNonea_check_private_key_componentsDwewnareturnaintpaNonea_check_public_key_componentsDwewmareturnaintppDwpwqareturnaintpparsa_crt_iqmpDaprivate_exponentwpareturnaintpparsa_crt_dmp1Daprivate_exponentwqareturnaintpparsa_crt_dmq1lDwnwewdareturnaintpputyping.Tuple[int, int]arsa_recover_prime_factorsDwpwqwdadmp1admq1aiqmpapublic_numbersaintpppppaRSAPublicNumbersa__init__uRSAPrivateNumbers.__init__uRSAPrivateNumbers.puRSAPrivateNumbers.quRSAPrivateNumbers.duRSAPrivateNumbers.dmp1uRSAPrivateNumbers.dmq1uRSAPrivateNumbers.iqmpuRSAPrivateNumbers.public_numbersDaunsafe_skip_rsa_key_validationFDabackendaunsafe_skip_rsa_key_validationareturnutyping.AnyaboolaRSAPrivateKeyaprivate_keyuRSAPrivateNumbers.private_keyuRSAPrivateNumbers.__eq__a__hash__uRSAPrivateNumbers.__hash__DwewnaintpuRSAPublicNumbers.__init__uRSAPublicNumbers.euRSAPublicNumbers.nDabackendareturnutyping.AnyaRSAPublicKeyuRSAPublicNumbers.public_keyDareturnastra__repr__uRSAPublicNumbers.__repr__uRSAPublicNumbers.__eq__uRSAPublicNumbers.__hash__ucryptography\hazmat\primitives\asymmetric\rsa.pyu<module cryptography.hazmat.primitives.asymmetric.rsa>Ta__class__TaselfaotherTaselfTaselfwewnTaselfwpwqwdadmp1admq1aiqmpapublic_numbersTwpwqaprivate_exponentadmp1admq1aiqmpapublic_exponentamodulusTwewnTwewmax1ax2wawbwqwraxnTapublic_exponentakey_sizeTaselfaciphertextapaddingTaselfaplaintextapaddingTapublic_exponentakey_sizeabackendaosslTaselfaencodingaformataencryption_algorithmTaselfabackendaunsafe_skip_rsa_key_validationaosslTaselfaencodingaformatTaselfabackendaosslTaselfasignatureapaddingaalgorithmTaprivate_exponentwpTaprivate_exponentwqTwpwqTwnwewdaktotwtaspottedwawkacandwpwqwrTaselfadataapaddingaalgorithmTaselfasignatureadataapaddingaalgorithmu.cryptography.hazmat.primitives.asymmetric.typesIAa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingacryptographyTautilslautilsucryptography.hazmat.primitives.asymmetricTadhadsaaecaed448aed25519arsaax448ax25519adhadsaaecaed448aed25519arsaax448ax25519aUnionaDHPublicKeyaDSAPublicKeyaRSAPublicKeyaEllipticCurvePublicKeyaEd25519PublicKeyaEd448PublicKeyaX25519PublicKeyaX448PublicKeyaPublicKeyTypesaPUBLIC_KEY_TYPESadeprecateducryptography.hazmat.primitives.asymmetric.typesuUse PublicKeyTypes insteadaDeprecatedIn40DanameaPUBLIC_KEY_TYPESaDHPrivateKeyaEd25519PrivateKeyaEd448PrivateKeyaRSAPrivateKeyaDSAPrivateKeyaEllipticCurvePrivateKeyaX25519PrivateKeyaX448PrivateKeyaPrivateKeyTypesaPRIVATE_KEY_TYPESuUse PrivateKeyTypes insteadDanameaPRIVATE_KEY_TYPESaCertificateIssuerPrivateKeyTypesaCERTIFICATE_PRIVATE_KEY_TYPESuUse CertificateIssuerPrivateKeyTypes insteadDanameaCERTIFICATE_PRIVATE_KEY_TYPESaCertificateIssuerPublicKeyTypesaCERTIFICATE_ISSUER_PUBLIC_KEY_TYPESuUse CertificateIssuerPublicKeyTypes insteadDanameaCERTIFICATE_ISSUER_PUBLIC_KEY_TYPESaCertificatePublicKeyTypesaCERTIFICATE_PUBLIC_KEY_TYPESuUse CertificatePublicKeyTypes insteadDanameaCERTIFICATE_PUBLIC_KEY_TYPESucryptography\hazmat\primitives\asymmetric\types.pyu<module cryptography.hazmat.primitives.asymmetric.types>u.cryptography.hazmat.primitives.asymmetric.utils%ahashesaHashAlgorithmuExpected instance of HashAlgorithm.a_algorithmadigest_sizea_digest_sizea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucryptography.hazmat.bindings._rustTaasn1laasn1ucryptography.hazmat.primitivesTahashesadecode_dss_signatureaencode_dss_signatureucryptography.hazmat.primitives.asymmetric.utilsa__module__aPrehasheda__qualname__Daalgorithmuhashes.HashAlgorithma__init__uPrehashed.__init__DareturnaintuPrehashed.digest_sizeTucryptography\hazmat\primitives\asymmetric\utils.pyu<module cryptography.hazmat.primitives.asymmetric.utils>Ta__class__TaselfaalgorithmTaselfu.cryptography.hazmat.primitives.asymmetric.x25519M
_ucryptography.hazmat.backends.openssl.backendTabackendlabackendax25519_supportedaUnsupportedAlgorithmuX25519 is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_EXCHANGE_ALGORITHMax25519_load_public_bytesax25519_generate_keyax25519_load_private_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslucryptography.hazmat.primitivesTa_serializationa_serializationametaclassaABCMetaa__prepare__TaX25519PublicKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.x25519a__module__aX25519PublicKeya__qualname__aclassmethodDadataareturnabytesaX25519PublicKeyafrom_public_bytesuX25519PublicKey.from_public_bytesaabstractmethodDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        The serialized bytes of the public key.
        apublic_bytesuX25519PublicKey.public_bytesDareturnabytesu
        The raw bytes of the public key.
        Equivalent to public_bytes(Raw, Raw).
        apublic_bytes_rawuX25519PublicKey.public_bytes_rawDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uX25519PublicKey.__eq__Tax25519aregisterTaX25519PrivateKeyTaX25519PrivateKeyDareturnaX25519PrivateKeyagenerateuX25519PrivateKey.generateDadataareturnabytesaX25519PrivateKeyafrom_private_bytesuX25519PrivateKey.from_private_bytesDareturnaX25519PublicKeyu
        Returns the public key assosciated with this private key
        apublic_keyuX25519PrivateKey.public_keyDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        The serialized bytes of the private key.
        aprivate_bytesuX25519PrivateKey.private_bytesu
        The raw bytes of the private key.
        Equivalent to private_bytes(Raw, Raw, NoEncryption()).
        aprivate_bytes_rawuX25519PrivateKey.private_bytes_rawDapeer_public_keyareturnaX25519PublicKeyabytesu
        Performs a key exchange operation using the provided peer's public key.
        aexchangeuX25519PrivateKey.exchangeucryptography\hazmat\primitives\asymmetric\x25519.pyu<module cryptography.hazmat.primitives.asymmetric.x25519>Ta__class__TaselfaotherTaselfapeer_public_keyTaclsadataabackendTaclsabackendTaselfaencodingaformataencryption_algorithmTaselfTaselfaencodingaformatu.cryptography.hazmat.primitives.asymmetric.x448
_ucryptography.hazmat.backends.openssl.backendTabackendlabackendax448_supportedaUnsupportedAlgorithmuX448 is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_EXCHANGE_ALGORITHMax448_load_public_bytesax448_generate_keyax448_load_private_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslucryptography.hazmat.primitivesTa_serializationa_serializationametaclassaABCMetaa__prepare__TaX448PublicKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.x448a__module__aX448PublicKeya__qualname__aclassmethodDadataareturnabytesaX448PublicKeyafrom_public_bytesuX448PublicKey.from_public_bytesaabstractmethodDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        The serialized bytes of the public key.
        apublic_bytesuX448PublicKey.public_bytesDareturnabytesu
        The raw bytes of the public key.
        Equivalent to public_bytes(Raw, Raw).
        apublic_bytes_rawuX448PublicKey.public_bytes_rawDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uX448PublicKey.__eq__Tax448aregisterTaX448PrivateKeyTaX448PrivateKeyDareturnaX448PrivateKeyagenerateuX448PrivateKey.generateDadataareturnabytesaX448PrivateKeyafrom_private_bytesuX448PrivateKey.from_private_bytesDareturnaX448PublicKeyu
        Returns the public key associated with this private key
        apublic_keyuX448PrivateKey.public_keyDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        The serialized bytes of the private key.
        aprivate_bytesuX448PrivateKey.private_bytesu
        The raw bytes of the private key.
        Equivalent to private_bytes(Raw, Raw, NoEncryption()).
        aprivate_bytes_rawuX448PrivateKey.private_bytes_rawDapeer_public_keyareturnaX448PublicKeyabytesu
        Performs a key exchange operation using the provided peer's public key.
        aexchangeuX448PrivateKey.exchangeucryptography\hazmat\primitives\asymmetric\x448.pyu<module cryptography.hazmat.primitives.asymmetric.x448>Ta__class__TaselfaotherTaselfapeer_public_keyTaclsadataabackendTaclsabackendTaselfaencodingaformataencryption_algorithmTaselfTaselfaencodingaformatu.cryptography.hazmat.primitives.ciphers.aeadabackendaaead_cipher_supportedaexceptionsaUnsupportedAlgorithmuChaCha20Poly1305 is not supported by this version of OpenSSLa_ReasonsaUNSUPPORTED_CIPHERautilsa_check_byteslikeakeyuChaCha20Poly1305 key must be 32 bytes.a_keyaFixedPoola_create_fna_poolaosaurandomTl aaeada_aead_create_ctxca_MAX_SIZEuData or associated data too long. Max 2**31 - 1 bytesa_check_paramsaassociated_dataaacquirea__enter__a__exit__a_encryptlTnnna_decryptanonceadatauNonce must be 12 bytesTlll uAESCCM key must be 128, 192, or 256 bits.utag_length must be an integerTllll
llluInvalid tag_lengtha_tag_lengthuAESCCM is not supported by this version of OpenSSLubit_length must be an integerTlllubit_length must be 128, 192, or 256la_validate_lengthsluData too long for nonceuNonce must be between 7 and 13 bytesuAESGCM key must be 128, 192, or 256 bits.uNonce must be between 8 and 128 bytesuAESOCB3 key must be 128, 192, or 256 bits.uOCB3 is not supported by this version of OpenSSLuNonce must be between 12 and 15 bytesTl l0l@uAESSIV key must be 256, 384, or 512 bits.uAES-SIV is not supported by this version of OpenSSLTlllubit_length must be 256, 384, or 512aselfu<genexpr>uAESSIV.encrypt.<locals>.<genexpr>udata must not be zero lengthuassociated_data must be a list of bytes-like objects or Noneuassociated_data elementsa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingacryptographyTaexceptionsautilslucryptography.hazmat.backends.opensslTaaeaducryptography.hazmat.backends.openssl.backendTabackenducryptography.hazmat.bindings._rustTaFixedPoolucryptography.hazmat.primitives.ciphers.aeada__module__aChaCha20Poly1305a__qualname__qDakeyabytesa__init__uChaCha20Poly1305.__init__Dareturnabytesagenerate_keyuChaCha20Poly1305.generate_keyuChaCha20Poly1305._create_fnDanonceadataaassociated_dataareturnabytesputyping.Optional[bytes]abytesaencryptuChaCha20Poly1305.encryptadecryptuChaCha20Poly1305.decryptDanonceadataaassociated_dataareturnabytesppaNoneuChaCha20Poly1305._check_paramsTaAESCCMTlDakeyatag_lengthabytesaintuAESCCM.__init__Dabit_lengthareturnaintabytesuAESCCM.generate_keyuAESCCM.encryptuAESCCM.decryptDanonceadata_lenareturnabytesaintaNoneuAESCCM._validate_lengthsuAESCCM._check_paramsaAESGCMuAESGCM.__init__uAESGCM.generate_keyuAESGCM.encryptuAESGCM.decryptuAESGCM._check_paramsaAESOCB3uAESOCB3.__init__uAESOCB3.generate_keyuAESOCB3.encryptuAESOCB3.decryptuAESOCB3._check_paramsaAESSIVuAESSIV.__init__uAESSIV.generate_keyDadataaassociated_dataareturnabytesutyping.Optional[typing.List[bytes]]abytesuAESSIV.encryptuAESSIV.decryptDadataaassociated_dataareturnabytesutyping.List[bytes]aNoneuAESSIV._check_paramsucryptography\hazmat\primitives\ciphers\aead.pyTa.0aadaselfu<module cryptography.hazmat.primitives.ciphers.aead>TaselfakeyTaselfakeyatag_lengthTaselfadataaassociated_datawxTaselfanonceadataaassociated_dataTaselfTaselfanonceadata_lenal_valTaselfadataaassociated_dataTaselfanonceadataaassociated_dataactxTaclsTaclsabit_lengthu.cryptography.hazmat.primitives.ciphers.algorithmszautilsa_check_byteslikeakeylakey_sizesuInvalid key size ({}) for {}.anamea_verify_key_size:nlnanonceunonce must be 128-bits (16 bytes)a_noncea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsacryptographyTautilslucryptography.hazmat.primitives.ciphersTaBlockCipherAlgorithmaCipherAlgorithmaBlockCipherAlgorithmaCipherAlgorithmDaalgorithmakeyareturnaCipherAlgorithmabytespa__prepare__aAESa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.ciphers.algorithmsa__module__a__qualname__lablock_sizeafrozensetLllllPllllDakeyabytesa__init__uAES.__init__apropertyDareturnaintakey_sizeuAES.key_sizea__orig_bases__aAES128PluAES128.__init__aAES256lPluAES256.__init__aCamelliaacamellialPllluCamellia.__init__uCamellia.key_sizeaTripleDESu3DESl@Pl@lluTripleDES.__init__uTripleDES.key_sizeaBlowfisharangeTl ll;l lluBlowfish.__init__uBlowfish.key_sizea_BlowfishInternaladeprecateduBlowfish has been deprecatedaDeprecatedIn37DanameaBlowfishaCAST5Tl(ll;l(lluCAST5.__init__uCAST5.key_sizea_CAST5InternaluCAST5 has been deprecatedDanameaCAST5aARC4aRC4Ll(l8l@lPllllPl@lllll(lPl8uARC4.__init__uARC4.key_sizeaIDEAuIDEA.__init__uIDEA.key_sizea_IDEAInternaluIDEA has been deprecatedDanameaIDEAaSEEDuSEED.__init__uSEED.key_sizea_SEEDInternaluSEED has been deprecatedDanameaSEEDaChaCha20DakeyanonceabytespuChaCha20.__init__DareturnabytesuChaCha20.nonceuChaCha20.key_sizeaSM4uSM4.__init__uSM4.key_sizeucryptography\hazmat\primitives\ciphers\algorithms.pyu<module cryptography.hazmat.primitives.ciphers.algorithms>Ta__class__TaselfakeyTaselfakeyanonceTaalgorithmakeyTaselfu.cryptography.hazmat.primitives.ciphers.baseaCipherAlgorithmuExpected interface of CipherAlgorithm.amodesaModeavalidate_for_algorithmaalgorithmamodeaModeWithAuthenticationTagataguAuthentication tag must be None when encrypting.ucryptography.hazmat.backends.openssl.backendTabackendlabackendacreate_symmetric_encryption_ctxa_wrap_ctxDaencrypttacreate_symmetric_decryption_ctxDaencryptFa_AEADEncryptionContexta_AEADDecryptionContexta_CipherContexta_ctxaAlreadyFinalizedTuContext was already finalized.aupdateaupdate_intoafinalizea_bytes_processeda_aad_bytes_processeda_taga_updateda_modea_MAX_ENCRYPTED_BYTESu{} has a maximum encrypted byte limit of {}anamea_check_limitaAlreadyUpdatedTuUpdate has been called on this context.a_MAX_AAD_BYTESu{} has a maximum AAD byte limit of {}aauthenticate_additional_dataafinalize_with_tagaNotYetFinalizedTuYou must finalize encryption before getting the tag.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingucryptography.exceptionsTaAlreadyFinalizedaAlreadyUpdatedaNotYetFinalizeducryptography.hazmat.primitives._cipheralgorithmTaCipherAlgorithmucryptography.hazmat.primitives.ciphersTamodesametaclassaABCMetaa__prepare__TaCipherContextTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.ciphers.basea__module__aCipherContexta__qualname__aabstractmethodDadataareturnabytespu
        Processes the provided bytes through the cipher and returns the results
        as bytes.
        uCipherContext.updateDadataabufareturnabytespaintu
        Processes the provided bytes and writes the resulting data into the
        provided buffer. Returns the number of bytes written.
        uCipherContext.update_intoDareturnabytesu
        Returns the results of processing the final block as bytes.
        uCipherContext.finalizeTaAEADCipherContextDadataareturnabytesaNoneu
        Authenticates the provided bytes.
        uAEADCipherContext.authenticate_additional_dataa__orig_bases__aAEADDecryptionContextDatagareturnabytespu
        Returns the results of processing the final block as bytes and allows
        delayed passing of the authentication tag.
        uAEADDecryptionContext.finalize_with_tagaAEADEncryptionContextapropertyu
        Returns tag bytes. This is only available after encryption is
        finalized.
        uAEADEncryptionContext.tagaTypeVaraOptionalTaModeTaboundacovariantaGenericaCipherTnDaalgorithmamodeabackendareturnaCipherAlgorithmaModeutyping.AnyaNonea__init__uCipher.__init__aoverloadDaselfareturnuCipher[modes.ModeWithAuthenticationTag]aAEADEncryptionContextaencryptoruCipher.encryptorDaselfareturna_CIPHER_TYPEaCipherContextDaselfareturnuCipher[modes.ModeWithAuthenticationTag]aAEADDecryptionContextadecryptoruCipher.decryptorDactxaencryptareturna_BackendCipherContextaboolutyping.Union[AEADEncryptionContext, AEADDecryptionContext, CipherContext]uCipher._wrap_ctxaUnionaModeWithNonceaModeWithTweakaECBaModeWithInitializationVectora_CIPHER_TYPEa__annotations__utyping.Optional[_BackendCipherContext]Dactxareturna_BackendCipherContextaNoneu_CipherContext.__init__u_CipherContext.updateu_CipherContext.update_intou_CipherContext.finalizea_AEADCipherContextutyping.Optional[bytes]u_AEADCipherContext.__init__Dadata_sizeareturnaintaNoneu_AEADCipherContext._check_limitu_AEADCipherContext.updateu_AEADCipherContext.update_intou_AEADCipherContext.finalizeu_AEADCipherContext.authenticate_additional_datau_AEADDecryptionContext.finalize_with_tagu_AEADEncryptionContext.tagucryptography\hazmat\primitives\ciphers\base.pyu<module cryptography.hazmat.primitives.ciphers.base>Ta__class__TaselfaalgorithmamodeabackendTaselfactxTaselfadata_sizeTaselfactxaencryptTaselfadataTaselfTaselfabackendactxTaselfatagTaselfatagadataTaselfadataabufu.cryptography.hazmat.primitives.ciphers&a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\primitives\ciphersTaNUITKA_PACKAGE_cryptography_hazmatu\not_existinguprimitives\ciphersTaNUITKA_PACKAGE_cryptography_hazmat_primitivesu\not_existingaciphersTaNUITKA_PACKAGE_cryptography_hazmat_primitives_ciphersu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.hazmat.primitives._cipheralgorithmTaBlockCipherAlgorithmaCipherAlgorithmlaBlockCipherAlgorithmaCipherAlgorithmucryptography.hazmat.primitives.ciphers.baseTaAEADCipherContextaAEADDecryptionContextaAEADEncryptionContextaCipheraCipherContextaAEADCipherContextaAEADDecryptionContextaAEADEncryptionContextaCipheraCipherContextLaCipheraCipherAlgorithmaBlockCipherAlgorithmaCipherContextaAEADCipherContextaAEADDecryptionContextaAEADEncryptionContexta__all__ucryptography\hazmat\primitives\ciphers\__init__.pyu<module cryptography.hazmat.primitives.ciphers>u.cryptography.hazmat.primitives.ciphers.modesnakey_sizelanameaAESuOnly 128, 192, and 256 bit keys are allowed for this AES modeainitialization_vectorlablock_sizeuInvalid IV size ({}) for {}.aBlockCipherAlgorithmaUnsupportedAlgorithmuu requires a block cipher algorithma_ReasonsaUNSUPPORTED_CIPHERuInvalid nonce size (u) for w.a_check_aes_key_lengtha_check_iv_lengthautilsa_check_byteslikea_initialization_vectoratweakutweak must be 128-bits (16 bytes)a_tweakaalgorithmsaAES128aAES256uThe AES128 and AES256 classes do not support XTS, please use the standard AES class instead.TlluThe XTS specification requires a 256-bit key for AES-128-XTS and 512-bit key for AES-256-XTSanoncea_noncea_check_nonce_lengthuinitialization_vector must be between 8 and 128 bytes (64 and 1024 bits).a_check_bytesataglumin_tag_length must be >= 4uAuthentication tag must be {} bytes or longer.a_taga_min_tag_lengthuGCM requires a block cipher algorithmuAuthentication tag cannot be more than {} bytes.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypingacryptographyTautilsucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.primitives._cipheralgorithmTaBlockCipherAlgorithmaCipherAlgorithmaCipherAlgorithmucryptography.hazmat.primitives.ciphersTaalgorithmsametaclassaABCMetaa__prepare__TaModeTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.ciphers.modesa__module__aModea__qualname__apropertyaabstractmethodDareturnastru
        A string naming this mode (e.g. "ECB", "CBC").
        uMode.nameDaalgorithmareturnaCipherAlgorithmaNoneu
        Checks that all the necessary invariants of this (mode, algorithm)
        combination are met.
        avalidate_for_algorithmuMode.validate_for_algorithmTaModeWithInitializationVectorDareturnabytesu
        The value of the initialization vector for this mode as bytes.
        uModeWithInitializationVector.initialization_vectora__orig_bases__aModeWithTweaku
        The value of the tweak for this mode as bytes.
        uModeWithTweak.tweakaModeWithNonceu
        The value of the nonce for this mode as bytes.
        uModeWithNonce.nonceaModeWithAuthenticationTagDareturnutyping.Optional[bytes]u
        The value of the tag supplied to the constructor of this mode.
        uModeWithAuthenticationTag.tagDaselfaalgorithmareturnaModeaCipherAlgorithmaNoneDaselfaalgorithmareturnaModeWithInitializationVectoraBlockCipherAlgorithmaNoneDanonceanameaalgorithmareturnabytesastraCipherAlgorithmaNoneDaselfaalgorithmareturnaModeWithInitializationVectoraCipherAlgorithmaNonea_check_iv_and_key_lengthaCBCDainitialization_vectorabytesa__init__uCBC.__init__uCBC.initialization_vectoraXTSDatweakabytesuXTS.__init__uXTS.tweakuXTS.validate_for_algorithmaECBaOFBuOFB.__init__uOFB.initialization_vectoraCFBuCFB.__init__uCFB.initialization_vectoraCFB8uCFB8.__init__uCFB8.initialization_vectoraCTRDanonceabytesuCTR.__init__uCTR.nonceuCTR.validate_for_algorithmaGCMqa_MAX_ENCRYPTED_BYTESq a_MAX_AAD_BYTESTnlDainitialization_vectoratagamin_tag_lengthabytesutyping.Optional[bytes]aintuGCM.__init__uGCM.taguGCM.initialization_vectoruGCM.validate_for_algorithmucryptography\hazmat\primitives\ciphers\modes.pyu<module cryptography.hazmat.primitives.ciphers.modes>Ta__class__Taselfainitialization_vectorTaselfainitialization_vectoratagamin_tag_lengthTaselfanonceTaselfatweakTaselfaalgorithmTanonceanameaalgorithmTaselfTaselfaalgorithmablock_size_bytes.cryptography.hazmat.primitivesa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\primitivesTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingaprimitivesTaNUITKA_PACKAGE_cryptography_hazmat_primitivesu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ucryptography\hazmat\primitives\__init__.pyu<module cryptography.hazmat.primitives>u.cryptography.hazmat.primitives.constant_timeua and b must be bytes.ahmacacompare_digesta__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationslDwawbareturnabytespaboolabytes_equcryptography\hazmat\primitives\constant_time.pyu<module cryptography.hazmat.primitives.constant_time>Twawbu.cryptography.hazmat.primitives.hashes>
udigest_size must be an integerludigest_size must be a positive integera_digest_sizel@uDigest size must be 64l uDigest size must be 32a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypingucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslLaHashAlgorithmaHashContextaHashaExtendableOutputFunctionaSHA1aSHA512_224aSHA512_256aSHA224aSHA256aSHA384aSHA512aSHA3_224aSHA3_256aSHA3_384aSHA3_512aSHAKE128aSHAKE256aMD5aBLAKE2baBLAKE2saSM3a__all__ametaclassaABCMetaa__prepare__TaHashAlgorithmTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.hashesa__module__aHashAlgorithma__qualname__apropertyaabstractmethodDareturnastru
        A string naming this algorithm (e.g. "sha256", "md5").
        anameuHashAlgorithm.nameDareturnaintu
        The size of the resulting digest in bytes.
        adigest_sizeuHashAlgorithm.digest_sizeDareturnutyping.Optional[int]u
        The internal block size of the hash function, or None if the hash
        function does not use blocks internally (e.g. SHA3).
        ablock_sizeuHashAlgorithm.block_sizeTTaHashContextTaHashContextDareturnaHashAlgorithmu
        A HashAlgorithm that will be used by this context.
        aalgorithmuHashContext.algorithmDadataareturnabytesaNoneu
        Processes the provided bytes through the hash.
        aupdateuHashContext.updateDareturnabytesu
        Finalizes the hash context and returns the hash digest as bytes.
        afinalizeuHashContext.finalizeDareturnaHashContextu
        Return a HashContext that is a copy of the current context.
        acopyuHashContext.copyahashesaHasharegisterTaExtendableOutputFunctionTu
    An interface for extendable output functions.
    aExtendableOutputFunctionaSHA1asha1la__orig_bases__aSHA512_224usha512-224llaSHA512_256usha512-256aSHA224asha224aSHA256asha256aSHA384asha384l0aSHA512asha512aSHA3_224usha3-224aSHA3_256usha3-256aSHA3_384usha3-384aSHA3_512usha3-512aSHAKE128ashake128Dadigest_sizeainta__init__uSHAKE128.__init__uSHAKE128.digest_sizeaSHAKE256ashake256uSHAKE256.__init__uSHAKE256.digest_sizeaMD5amd5laBLAKE2bablake2ba_max_digest_sizea_min_digest_sizeuBLAKE2b.__init__uBLAKE2b.digest_sizeaBLAKE2sablake2suBLAKE2s.__init__uBLAKE2s.digest_sizeaSM3asm3ucryptography\hazmat\primitives\hashes.pyu<module cryptography.hazmat.primitives.hashes>Ta__class__Taselfadigest_sizeTaselfTaselfadatau.cryptography.hazmat.primitives.serialization.base#ucryptography.hazmat.backends.openssl.backendTabackendlabackendaload_pem_private_keyaload_pem_public_keyaload_pem_parametersaload_der_private_keyaload_der_public_keyaload_der_parametersa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.hazmat.primitives.asymmetricTadhadhucryptography.hazmat.primitives.asymmetric.typesTaPrivateKeyTypesaPublicKeyTypesaPrivateKeyTypesaPublicKeyTypesTnDaunsafe_skip_rsa_key_validationFDadataapasswordabackendaunsafe_skip_rsa_key_validationareturnabytesutyping.Optional[bytes]utyping.AnyaboolaPrivateKeyTypesDadataabackendareturnabytesutyping.AnyaPublicKeyTypesDadataabackendareturnabytesutyping.Anyudh.DHParametersucryptography\hazmat\primitives\serialization\base.pyu<module cryptography.hazmat.primitives.serialization.base>TadataabackendaosslTadataapasswordabackendaunsafe_skip_rsa_key_validationaosslu.cryptography.hazmat.primitives.serialization9a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\primitives\serializationTaNUITKA_PACKAGE_cryptography_hazmatu\not_existinguprimitives\serializationTaNUITKA_PACKAGE_cryptography_hazmat_primitivesu\not_existingaserializationTaNUITKA_PACKAGE_cryptography_hazmat_primitives_serializationu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.hazmat.primitives._serializationTaBestAvailableEncryptionaEncodingaKeySerializationEncryptionaNoEncryptionaParameterFormataPrivateFormataPublicFormata_KeySerializationEncryptionlaBestAvailableEncryptionaEncodingaKeySerializationEncryptionaNoEncryptionaParameterFormataPrivateFormataPublicFormata_KeySerializationEncryptionucryptography.hazmat.primitives.serialization.baseTaload_der_parametersaload_der_private_keyaload_der_public_keyaload_pem_parametersaload_pem_private_keyaload_pem_public_keyaload_der_parametersaload_der_private_keyaload_der_public_keyaload_pem_parametersaload_pem_private_keyaload_pem_public_keyucryptography.hazmat.primitives.serialization.sshT
aSSHCertificateaSSHCertificateBuilderaSSHCertificateTypeaSSHCertPrivateKeyTypesaSSHCertPublicKeyTypesaSSHPrivateKeyTypesaSSHPublicKeyTypesaload_ssh_private_keyaload_ssh_public_identityaload_ssh_public_keyaSSHCertificateaSSHCertificateBuilderaSSHCertificateTypeaSSHCertPrivateKeyTypesaSSHCertPublicKeyTypesaSSHPrivateKeyTypesaSSHPublicKeyTypesaload_ssh_private_keyaload_ssh_public_identityaload_ssh_public_keyLaload_der_parametersaload_der_private_keyaload_der_public_keyaload_pem_parametersaload_pem_private_keyaload_pem_public_keyaload_ssh_private_keyaload_ssh_public_identityaload_ssh_public_keyaEncodingaPrivateFormataPublicFormataParameterFormataKeySerializationEncryptionaBestAvailableEncryptionaNoEncryptiona_KeySerializationEncryptionaSSHCertificateBuilderaSSHCertificateaSSHCertificateTypeaSSHCertPublicKeyTypesaSSHCertPrivateKeyTypesaSSHPrivateKeyTypesaSSHPublicKeyTypesa__all__ucryptography\hazmat\primitives\serialization\__init__.pyu<module cryptography.hazmat.primitives.serialization>u.cryptography.hazmat.primitives.serialization.pkcs12zax509aCertificateuExpecting x509.Certificate objectufriendly_name must be bytes or Nonea_certa_friendly_nameaPKCS12Certificateacertificateafriendly_nameu<PKCS12Certificate({}, friendly_name={!r})>arsaaRSAPrivateKeyadsaaDSAPrivateKeyaecaEllipticCurvePrivateKeyaed25519aEd25519PrivateKeyaed448aEd448PrivateKeyuKey must be RSA, DSA, EllipticCurve, ED25519, or ED448 private key, or None.ucert must be a PKCS12Certificate object or Noneuall values in additional_certs must be PKCS12Certificate objectsa_keya_additional_certsu<genexpr>uPKCS12KeyAndCertificates.__init__.<locals>.<genexpr>aPKCS12KeyAndCertificatesakeyacertaadditional_certsu<PKCS12KeyAndCertificates(key={}, cert={}, additional_certs={})>ucryptography.hazmat.backends.openssl.backendTabackendlabackendaload_key_and_certificates_from_pkcs12aload_pkcs12ucert must be a certificate or Noneuall values in cas must be certificatesaserializationaKeySerializationEncryptionuKey encryption algorithm must be a KeySerializationEncryption instanceacasuYou must supply at least one of key, cert, or casaserialize_key_and_certificates_to_pkcs12userialize_key_and_certificates.<locals>.<genexpr>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingacryptographyTax509ucryptography.hazmat.primitivesTaserializationucryptography.hazmat.primitives._serializationTaPBESaPBESucryptography.hazmat.primitives.asymmetricTadsaaecaed448aed25519arsaucryptography.hazmat.primitives.asymmetric.typesTaPrivateKeyTypesaPrivateKeyTypesLaPBESaPKCS12PrivateKeyTypesaPKCS12CertificateaPKCS12KeyAndCertificatesaload_key_and_certificatesaload_pkcs12aserialize_key_and_certificatesa__all__aUnionaPKCS12PrivateKeyTypesucryptography.hazmat.primitives.serialization.pkcs12a__module__a__qualname__Dacertafriendly_nameux509.Certificateutyping.Optional[bytes]a__init__uPKCS12Certificate.__init__Dareturnutyping.Optional[bytes]uPKCS12Certificate.friendly_nameDareturnux509.CertificateuPKCS12Certificate.certificateDaotherareturnaobjectaboola__eq__uPKCS12Certificate.__eq__Dareturnainta__hash__uPKCS12Certificate.__hash__Dareturnastra__repr__uPKCS12Certificate.__repr__TDakeyacertaadditional_certsutyping.Optional[PrivateKeyTypes]utyping.Optional[PKCS12Certificate]utyping.List[PKCS12Certificate]uPKCS12KeyAndCertificates.__init__Dareturnutyping.Optional[PrivateKeyTypes]uPKCS12KeyAndCertificates.keyDareturnutyping.Optional[PKCS12Certificate]uPKCS12KeyAndCertificates.certDareturnutyping.List[PKCS12Certificate]uPKCS12KeyAndCertificates.additional_certsuPKCS12KeyAndCertificates.__eq__uPKCS12KeyAndCertificates.__hash__uPKCS12KeyAndCertificates.__repr__TnDadataapasswordabackendareturnabytesutyping.Optional[bytes]utyping.Anyutyping.Tuple[typing.Optional[PrivateKeyTypes], typing.Optional[x509.Certificate], typing.List[x509.Certificate]]aload_key_and_certificatesDadataapasswordabackendareturnabytesutyping.Optional[bytes]utyping.AnyaPKCS12KeyAndCertificatesa_PKCS12CATypesDanameakeyacertacasaencryption_algorithmareturnutyping.Optional[bytes]utyping.Optional[PKCS12PrivateKeyTypes]utyping.Optional[x509.Certificate]utyping.Optional[typing.Iterable[_PKCS12CATypes]]userialization.KeySerializationEncryptionabytesaserialize_key_and_certificatesucryptography\hazmat\primitives\serialization\pkcs12.pyTa.0aadd_certTa.0avalu<module cryptography.hazmat.primitives.serialization.pkcs12>Ta__class__TaselfaotherTaselfTaselfacertafriendly_nameTaselfakeyacertaadditional_certsTaselfafmtTadataapasswordabackendaosslTanameakeyacertacasaencryption_algorithmabackendu.cryptography.hazmat.primitives.serialization.sshnIaUnsupportedAlgorithmTuNeed bcrypt moduleaecaEllipticCurvePrivateKeya_ecdsa_key_typeapublic_keyaEllipticCurvePublicKeyarsaaRSAPrivateKeyaRSAPublicKeya_SSH_RSAadsaaDSAPrivateKeyaDSAPublicKeya_SSH_DSAaed25519aEd25519PrivateKeyaEd25519PublicKeya_SSH_ED25519uUnsupported key typeacurveanamea_ECDSA_KEY_TYPEuUnsupported curve for ssh private key: uuReturn SSH key_type and curve_name for private key.ca_base64_encodeluCorrupt data: missing paddinguRequire data to be full blocksuCorrupt data: unparsed datauAll data should have been parsed.uKey is password-protected.a_SSH_CIPHERSa_bcrypt_kdfakey_lenaiv_lenaCipheraalgamodeuGenerate key + iv and return cipher.uInvalid dataafrom_bytes:nlnDabyteorderabig:lnnaUint32:nln:lnnaUint64a_get_u32utoo many values to unpack (expected 2)uBytes with u32 length prefixa_get_sshstrlabiguBig integer.unegative mpint not allowedabit_lengthlautilsaint_to_bytesuStorage format for signed bigint.aflistaextendaappenduAdd plain bytesato_bytesTlabigTalengthabyteorderuBig-endian uint32TlabiguBig-endian uint64TObytesOmemoryviewObytearrayaput_u32asizeuBytes prefixed with u32 lengthaput_sshstra_to_mpintuBig-endian bigint prefixed with u32 lengthalenuCurrent number of bytesaposadstbufuWrite into bytearrayarenderatobytesuReturn as bytesa_get_mpintuRSA public fieldsaget_publicaRSAPublicNumbersuMake RSA public key from data.uCorrupt data: rsa field mismatcharsa_crt_dmp1arsa_crt_dmq1aRSAPrivateNumbersaprivate_keyuMake RSA private key from data.apublic_numbersaput_mpintwewnuWrite RSA public keyaprivate_numberswdaiqmpwpwquWrite RSA private keyuDSA public fieldsutoo many values to unpack (expected 4)aDSAParameterNumbersaDSAPublicNumbersa_validateuMake DSA public key from data.uCorrupt data: dsa field mismatchaDSAPrivateNumbersuMake DSA private key from data.aparameter_numberswgwyuWrite DSA public keyaencode_publicwxuWrite DSA private keyluSSH supports only 1024 bit DSA keysassh_curve_nameuCurve name mismatchluNeed uncompressed pointuECDSA public fieldsafrom_encoded_pointuMake ECDSA public key from data.uCorrupt data: ecdsa field mismatchaderive_private_keyuMake ECDSA private key from data.apublic_bytesaEncodingaX962aPublicFormataUncompressedPointuWrite ECDSA public keyaprivate_valueuWrite ECDSA private keyuEd25519 public fieldsutoo many values to unpack (expected 1)afrom_public_bytesuMake Ed25519 public key from data.:nl n:l nnuCorrupt data: ed25519 field mismatchafrom_private_bytesuMake Ed25519 private key from data.aRawuWrite Ed25519 public keyaprivate_bytesaPrivateFormataNoEncryptiona_FragListuWrite Ed25519 private keya_KEY_FORMATSuUnsupported key type: uReturn valid format or throw errora_check_byteslikeadataa_check_bytesapassworda_PEM_RCasearchuNot OpenSSH private key formatastartTlaendabinasciiaa2b_base64astartswitha_SK_MAGICluOnly one key supporteda_lookup_kformata_check_emptya_NONEuUnsupported cipher: a_BCRYPTuUnsupported KDF: ablock_lenatag_lenais_aeaduCorrupt data: invalid tag length for ciphera_check_block_sizea_init_cipheradecryptoraupdateaAEADDecryptionContextafinalize_with_tagatagafinalizeaedatauCorrupt data: broken checksumuCorrupt data: key type mismatchaload_privatea_PADDINGuCorrupt data: invalid paddingawarningsawarnuSSH DSA keys are deprecated and will be removed in a future release.aDeprecatedIn40DastacklevelluLoad private key from OpenSSH custom encoding.uSSH DSA key support is deprecated and will be removed in a future releaseDastacklevella_get_ssh_key_typea_DEFAULT_CIPHERa_DEFAULT_ROUNDSa_KeySerializationEncryptiona_kdf_roundsaencryption_algorithmaosaurandomTlTlaencode_privateTcaput_rawaciphernameaencryptoraupdate_intoa_ssh_pem_encodeuSerialize private key with OpenSSH custom encoding.a_noncea_public_keya_serialaSSHCertificateTypea_typeuInvalid certificate typea_key_ida_valid_principalsa_valid_aftera_valid_beforea_critical_optionsa_extensionsa_sig_typea_sig_keya_inner_sig_typea_signaturea_cert_key_typea_cert_bodya_tbs_cert_bodyatypingacastaSSHCertPublicKeyTypesaload_publicd ab2a_base64DanewlineFasignature_keyaverifyaasym_utilsaencode_dss_signaturea_get_ec_hash_algaECDSAahashesaSHA1a_SSH_RSA_SHA256aSHA256a_SSH_RSA_SHA512aSHA512apaddingaPKCS1v15aSECP256R1aSECP384R1aSHA384aSECP521R1a_SSH_PUBKEY_RCamatchuInvalid line formatagroupTlaendswitha_CERT_SUFFIXakey_typeTuDSA keys aren't supported in SSH certificatesaErroruInvalid formatarestuInvalid key formata_get_u64aprincipalsavalid_principalsa_parse_exts_optsTuDSA signatures aren't supported in SSH certificatesacert_bodyuSignature key type does not matchaSSHCertificateanoncea_load_ssh_public_identityaexts_optsaresultuDuplicate namealast_nameuFields not lexically sorteduThis certificate has an incorrect encoding for critical options or extensions. This will be an exception in cryptography 42aDeprecatedIn41aextrauUnexpected extra data after valueavalueDa_legacy_dsa_allowedtastripuOne-line public key format for OpenSSHa_valid_for_all_principalsupublic_key already setaSSHCertificateBuilderT
a_public_keya_seriala_typea_key_ida_valid_principalsa_valid_for_all_principalsa_valid_beforea_valid_aftera_critical_optionsa_extensionsuserial must be an integerg+userial must be between 0 and 2**64userial already setutype must be an SSHCertificateTypeutype already setukey_id must be bytesukey_id already setuPrincipals can't be set because the cert is valid for all principalsuprincipals must be a list of bytes and can't be emptyuvalid_principals already seta_SSHKEY_CERT_MAX_PRINCIPALSuReached or exceeded the maximum number of valid_principalsu<genexpr>uSSHCertificateBuilder.valid_principals.<locals>.<genexpr>uvalid_principals already set, can't set valid_for_all_principalsuvalid_for_all_principals already setTOintOfloatuvalid_before must be an int or floatuvalid_before must [0, 2**64)uvalid_before already setuvalid_after must be an int or floatuvalid_after must [0, 2**64)uvalid_after already setuname and value must be bytesuDuplicate critical option nameuDuplicate extension nameuUnsupported private key typeupublic_key must be setutype must be setuvalid_principals must be set if valid_for_all_principals is Falseuvalid_before must be setuvalid_after must be setuvalid_after must be earlier than valid_beforeasortu<lambda>uSSHCertificateBuilder.sign.<locals>.<lambda>TakeyTl aput_u64afprincipalsafcritafextasignadecode_dss_signatureaload_ssh_public_identitya__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsaenumareabase64TaencodebytesaencodebytesadataclassesTadataclassadataclassacryptographyTautilsucryptography.exceptionsTaUnsupportedAlgorithmucryptography.hazmat.primitivesTahashesucryptography.hazmat.primitives.asymmetricTadsaaecaed25519apaddingarsaucryptography.hazmat.primitives.ciphersTaAEADDecryptionContextaCipheraalgorithmsamodesaalgorithmsamodesucryptography.hazmat.primitives.serializationTaEncodingaKeySerializationEncryptionaNoEncryptionaPrivateFormataPublicFormata_KeySerializationEncryptionaKeySerializationEncryptionabcryptTakdfakdfa_bcrypt_supportedTFDapasswordasaltadesired_key_bytesaroundsaignore_few_roundsareturnabytespaintpaboolabytescssh-ed25519cssh-rsacssh-dsscecdsa-sha2-nistp256a_ECDSA_NISTP256cecdsa-sha2-nistp384a_ECDSA_NISTP384cecdsa-sha2-nistp521a_ECDSA_NISTP521c-cert-v01@openssh.comcrsa-sha2-256crsa-sha2-512acompileTc\A(\S+)[ \t]+(\S+)bopenssh-key-v1c-----BEGIN OPENSSH PRIVATE KEY-----a_SK_STARTc-----END OPENSSH PRIVATE KEY-----a_SK_ENDcbcryptcnonecaes256-ctrlc(.*?)aDOTALLB

ucryptography.hazmat.primitives.serialization.ssha__module__a_SSHCiphera__qualname__utyping.Type[algorithms.AES]aintutyping.Union[typing.Type[modes.CTR], typing.Type[modes.CBC], typing.Type[modes.GCM]]utyping.Optional[int]aboolTaAESl aCTRTaalgakey_lenamodeablock_lenaiv_lenatag_lenais_aeadcaes256-cbcaCBCcaes256-gcm@openssh.comaGCMlutyping.Dict[bytes, _SSHCipher]asecp256r1asecp384r1asecp521r1Dakeyareturnutyping.Union[SSHPrivateKeyTypes, SSHPublicKeyTypes]abytesDapublic_keyareturnuec.EllipticCurvePublicKeyabytesd
DadataaprefixasuffixareturnabytespppDadataablock_lenareturnabytesaintaNoneDadataareturnabytesaNoneDaciphernameapasswordasaltaroundsareturnabytesutyping.Optional[bytes]abytesaintuCipher[typing.Union[modes.CBC, modes.CTR, modes.GCM]]Dadataareturnamemoryviewutyping.Tuple[int, memoryview]Dadataareturnamemoryviewutyping.Tuple[memoryview, memoryview]DavalareturnaintabytesuBuild recursive structure without data copy.utyping.List[bytes]TnDainitareturnutyping.Optional[typing.List[bytes]]aNonea__init__u_FragList.__init__DavalareturnabytesaNoneu_FragList.put_rawDavalareturnaintaNoneu_FragList.put_u32u_FragList.put_u64Davalareturnutyping.Union[bytes, _FragList]aNoneu_FragList.put_sshstru_FragList.put_mpintDareturnaintu_FragList.sizeTlDadstbufaposareturnamemoryviewaintpu_FragList.renderDareturnabytesu_FragList.tobytesuFormat for RSA keys.

    Public:
        mpint e, n
    Private:
        mpint n, e, d, iqmp, p, q
    a_SSHFormatRSADadataamemoryviewu_SSHFormatRSA.get_publicDadataareturnamemoryviewutyping.Tuple[rsa.RSAPublicKey, memoryview]u_SSHFormatRSA.load_publicDadataareturnamemoryviewutyping.Tuple[rsa.RSAPrivateKey, memoryview]u_SSHFormatRSA.load_privateDapublic_keyaf_pubareturnursa.RSAPublicKeya_FragListaNoneu_SSHFormatRSA.encode_publicDaprivate_keyaf_privareturnursa.RSAPrivateKeya_FragListaNoneu_SSHFormatRSA.encode_privateuFormat for DSA keys.

    Public:
        mpint p, q, g, y
    Private:
        mpint p, q, g, y, x
    a_SSHFormatDSADadataareturnamemoryviewutyping.Tuple[typing.Tuple, memoryview]u_SSHFormatDSA.get_publicDadataareturnamemoryviewutyping.Tuple[dsa.DSAPublicKey, memoryview]u_SSHFormatDSA.load_publicDadataareturnamemoryviewutyping.Tuple[dsa.DSAPrivateKey, memoryview]u_SSHFormatDSA.load_privateDapublic_keyaf_pubareturnudsa.DSAPublicKeya_FragListaNoneu_SSHFormatDSA.encode_publicDaprivate_keyaf_privareturnudsa.DSAPrivateKeya_FragListaNoneu_SSHFormatDSA.encode_privateDapublic_numbersareturnudsa.DSAPublicNumbersaNoneu_SSHFormatDSA._validateuFormat for ECDSA keys.

    Public:
        str curve
        bytes point
    Private:
        str curve
        bytes point
        mpint secret
    a_SSHFormatECDSADassh_curve_nameacurveabytesuec.EllipticCurveu_SSHFormatECDSA.__init__u_SSHFormatECDSA.get_publicDadataareturnamemoryviewutyping.Tuple[ec.EllipticCurvePublicKey, memoryview]u_SSHFormatECDSA.load_publicDadataareturnamemoryviewutyping.Tuple[ec.EllipticCurvePrivateKey, memoryview]u_SSHFormatECDSA.load_privateDapublic_keyaf_pubareturnuec.EllipticCurvePublicKeya_FragListaNoneu_SSHFormatECDSA.encode_publicDaprivate_keyaf_privareturnuec.EllipticCurvePrivateKeya_FragListaNoneu_SSHFormatECDSA.encode_privateuFormat for Ed25519 keys.

    Public:
        bytes point
    Private:
        bytes point
        bytes secret_and_point
    a_SSHFormatEd25519u_SSHFormatEd25519.get_publicDadataareturnamemoryviewutyping.Tuple[ed25519.Ed25519PublicKey, memoryview]u_SSHFormatEd25519.load_publicDadataareturnamemoryviewutyping.Tuple[ed25519.Ed25519PrivateKey, memoryview]u_SSHFormatEd25519.load_privateDapublic_keyaf_pubareturnued25519.Ed25519PublicKeya_FragListaNoneu_SSHFormatEd25519.encode_publicDaprivate_keyaf_privareturnued25519.Ed25519PrivateKeya_FragListaNoneu_SSHFormatEd25519.encode_privatecnistp256cnistp384cnistp521Dakey_typeabytesaUnionaSSHPrivateKeyTypesDadataapasswordabackendareturnabytesutyping.Optional[bytes]utyping.AnyaSSHPrivateKeyTypesaload_ssh_private_keyDaprivate_keyapasswordaencryption_algorithmareturnaSSHPrivateKeyTypesabytesaKeySerializationEncryptionabytesa_serialize_ssh_private_keyaSSHPublicKeyTypesaEnuma__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>aUSERlaHOSTa__orig_bases__Da_noncea_public_keya_seriala_cctypea_key_ida_valid_principalsa_valid_aftera_valid_beforea_critical_optionsa_extensionsa_sig_typea_sig_keya_inner_sig_typea_signaturea_tbs_cert_bodya_cert_key_typea_cert_bodyamemoryviewaSSHPublicKeyTypesaintpamemoryviewutyping.List[bytes]aintputyping.Dict[bytes, bytes]utyping.Dict[bytes, bytes]amemoryviewppppabytesamemoryviewuSSHCertificate.__init__uSSHCertificate.nonceDareturnaSSHCertPublicKeyTypesuSSHCertificate.public_keyaserialuSSHCertificate.serialDareturnaSSHCertificateTypeatypeuSSHCertificate.typeakey_iduSSHCertificate.key_idDareturnutyping.List[bytes]uSSHCertificate.valid_principalsavalid_beforeuSSHCertificate.valid_beforeavalid_afteruSSHCertificate.valid_afterDareturnutyping.Dict[bytes, bytes]acritical_optionsuSSHCertificate.critical_optionsaextensionsuSSHCertificate.extensionsuSSHCertificate.signature_keyuSSHCertificate.public_bytesDareturnaNoneaverify_cert_signatureuSSHCertificate.verify_cert_signatureDacurveareturnuec.EllipticCurveuhashes.HashAlgorithmDadataareturnabytesutyping.Union[SSHCertificate, SSHPublicKeyTypes]Daexts_optsareturnamemoryviewutyping.Dict[bytes, bytes]Dadataabackendareturnabytesutyping.AnyaSSHPublicKeyTypesaload_ssh_public_keyDapublic_keyareturnaSSHPublicKeyTypesabytesaserialize_ssh_public_keyaSSHCertPrivateKeyTypeslD
a_public_keya_seriala_typea_key_ida_valid_principalsa_valid_for_all_principalsa_valid_beforea_valid_aftera_critical_optionsa_extensionsutyping.Optional[SSHCertPublicKeyTypes]utyping.Optional[int]utyping.Optional[SSHCertificateType]utyping.Optional[bytes]utyping.List[bytes]aboolutyping.Optional[int]utyping.Optional[int]utyping.List[typing.Tuple[bytes, bytes]]utyping.List[typing.Tuple[bytes, bytes]]uSSHCertificateBuilder.__init__Dapublic_keyareturnaSSHCertPublicKeyTypesaSSHCertificateBuilderuSSHCertificateBuilder.public_keyDaserialareturnaintaSSHCertificateBuilderuSSHCertificateBuilder.serialDatypeareturnaSSHCertificateTypeaSSHCertificateBuilderuSSHCertificateBuilder.typeDakey_idareturnabytesaSSHCertificateBuilderuSSHCertificateBuilder.key_idDavalid_principalsareturnutyping.List[bytes]aSSHCertificateBuilderuSSHCertificateBuilder.valid_principalsavalid_for_all_principalsuSSHCertificateBuilder.valid_for_all_principalsDavalid_beforeareturnutyping.Union[int, float]aSSHCertificateBuilderuSSHCertificateBuilder.valid_beforeDavalid_afterareturnutyping.Union[int, float]aSSHCertificateBuilderuSSHCertificateBuilder.valid_afterDanameavalueareturnabytespaSSHCertificateBuilderaadd_critical_optionuSSHCertificateBuilder.add_critical_optionaadd_extensionuSSHCertificateBuilder.add_extensionDaprivate_keyareturnaSSHCertPrivateKeyTypesaSSHCertificateuSSHCertificateBuilder.signucryptography\hazmat\primitives\serialization\ssh.pyTa.0wxTwxu<module cryptography.hazmat.primitives.serialization.ssh>Ta__class__Taselfa_noncea_public_keya_seriala_cctypea_key_ida_valid_principalsa_valid_aftera_valid_beforea_critical_optionsa_extensionsa_sig_typea_sig_keya_inner_sig_typea_signaturea_tbs_cert_bodya_cert_key_typea_cert_bodyTaselfa_public_keya_seriala_typea_key_ida_valid_principalsa_valid_for_all_principalsa_valid_beforea_valid_aftera_critical_optionsa_extensionsTaselfainitTaselfassh_curve_nameacurveTapasswordasaltadesired_key_bytesaroundsaignore_few_roundsTadataablock_lenTadataTapublic_keyacurveTacurveTadataavalTakeyakey_typeTadatawnTaciphernameapasswordasaltaroundsaciphaseedT"adataa_legacy_dsa_allowedwmakey_typeaorig_key_typeakey_bodyawith_certakformatarestacert_bodyainner_key_typeanonceapublic_keyaserialacctypeakey_idaprincipalsavalid_principalsaprincipalavalid_afteravalid_beforeacrit_optionsacritical_optionsaextsaextensionsw_asig_key_rawasig_typeasig_keyatbs_cert_bodyasignature_rawainner_sig_typeasig_restasignatureTakey_typeTaexts_optsaresultabnamealast_nameanameavalueaextraTaprivate_keyapasswordaencryption_algorithmakey_typeakformataf_kdfoptionsaciphernameablklenakdfnamearoundsasaltaciphankeysacheckvalacommentaf_public_keyaf_secretsaf_mainaslenamlenabufaofsTadataaprefixasuffixTavalanbytesTaselfapublic_numbersaparameter_numbersTaselfanameavalueTaselfTaselfaprivate_keyaf_privTaselfaprivate_keyaf_privaprivate_numbersapublic_numbersTaselfaprivate_keyaf_privapublic_keyaprivate_numbersTaselfaprivate_keyaf_privapublic_keyaraw_private_keyaraw_public_keyaf_keypairTaselfapublic_keyaf_pubapointTaselfapublic_keyaf_pubapublic_numbersaparameter_numbersTaselfapublic_keyaf_pubapubnTaselfapublic_keyaf_pubaraw_public_keyTaselfadataacurveapointTaselfadatawewnTaselfadatawpwqwgwyTaselfadataapointTaselfakey_idTaselfadataapubfieldsacurve_nameapointasecretaprivate_keyTaselfadataapubfieldswnwewdaiqmpwpwqadmp1admq1apublic_numbersaprivate_numbersaprivate_keyTaselfadataapubfieldswpwqwgwywxaparameter_numbersapublic_numbersaprivate_numbersaprivate_keyTaselfadataapubfieldsapointakeypairasecretapoint2aprivate_keyTaselfadataacurve_nameapointapublic_keyTaselfadatawewnapublic_numbersapublic_keyTaselfadatawpwqwgwyaparameter_numbersapublic_numbersapublic_keyTaselfadataapointapublic_keyTadataapasswordabackendwmap1ap2aciphernameakdfnameakdfoptionsankeysapubdataapub_key_typeakformatapubfieldsaciphername_bytesablklenatag_lenaedataatagasaltakbufaroundsaciphadecack1ack2akey_typeaprivate_keyacommentTadataabackendapublic_keyacert_or_keyTaselfapublic_keyTaselfavalTaselfadstbufaposafragaflenastartTaselfaserialTapublic_keyakey_typeakformataf_pubapubTaselfaprivate_keyaserialakey_idakey_typeacert_prefixanonceakformatwfafprincipalswpafcritanameavalueafoptvalafextafextvalaca_typeacaformatacafasignatureafsigahash_algwrwsafsigblobacert_dataTaselfasigformatasignature_keyasigkey_restTaselfabufTaselfatypeTaselfavalid_afterTaselfavalid_beforeTaselfavalid_principalsTaselfasignature_keywradatawsacomputed_sigahash_alg.cryptography.utilszuu must be bytesu must be bytes-likeato_bytesabit_lengthlllabigucryptography.hazmat.bindings._rustTa_opensslla_opensslaffiafrom_bufferacastauintptr_tavalueamessageawarning_classa__class__a__init__a__name__a_modulea_DeprecatedValueawarningsawarnDastacklevelladelattrasysamodulesa_ModuleWithDeprecationsa_cached_Dainstanceaobjectainnerucached_property.<locals>.inneracached_nameasentinelafuncw<w.a_name_u: a_value_w>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaenumatypesatypingaUserWarninga__prepare__aCryptographyDeprecationWarninga__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ucryptography.utilsa__module__a__qualname__a__orig_bases__aDeprecatedIn36aDeprecatedIn37aDeprecatedIn40aDeprecatedIn41DanameavalueareturnastrabytesaNonea_check_bytesa_check_byteslikeTnDaintegeralengthareturnaintutyping.Optional[int]abytesaint_to_bytesDaobjareturnutyping.Anyutyping.Tuple[typing.Any, int]a_extract_buffer_lengthTEExceptionaInterfaceNotImplementedDavalueamessageaobjectastru_DeprecatedValue.__init__TaModuleTypeDamoduleutypes.ModuleTypeu_ModuleWithDeprecations.__init__Daattrareturnastraobjecta__getattr__u_ModuleWithDeprecations.__getattr__DaattravalueareturnastraobjectaNonea__setattr__u_ModuleWithDeprecations.__setattr__DaattrareturnastraNonea__delattr__u_ModuleWithDeprecations.__delattr__Dareturnutyping.Sequence[str]a__dir__u_ModuleWithDeprecations.__dir__Davalueamodule_nameamessageawarning_classanameareturnaobjectastrputyping.Type[Warning]utyping.Optional[str]a_DeprecatedValueadeprecatedDafuncareturnutyping.Callableapropertyacached_propertyaEnumDareturnastra__repr__uEnum.__repr__a__str__uEnum.__str__ucryptography\utils.pyu<module cryptography.utils>Ta__class__TaselfaattraobjTaselfTaselfamodulea__class__Taselfavalueamessageawarning_classTaselfaattravalueTanameavalueTaobja_opensslabufTafuncacached_nameasentinelainnerTavalueamodule_nameamessageawarning_classanameamoduleadvTainstanceacachearesultacached_nameasentinelafuncTacached_nameafuncasentinelTaintegeralength.cryptography.x509.baseGa__class__a__init__aoidaextensionuThis extension has already been set.utoo many values to unpack (expected 3)uThis attribute has already been set.atzinfoautcoffsetadatetimeatimedeltaareplaceTnTatzinfouNormalizes a datetime to a naive datetime in UTC.

    time -- datetime to normalize. Assumed to be in UTC if not timezone
            aware.
    a_oida_valuea_typeu<Attribute(oid=uu, value=avalueu)>aAttributea_attributesu<Attributes(aAttributeNotFounduNo u attribute was foundaparsed_versiona_serial_numbera_revocation_datea_extensionsarust_x509aload_pem_x509_certificateaload_pem_x509_certificatesaload_der_x509_certificateaload_pem_x509_csraload_der_x509_csraload_pem_x509_crlaload_der_x509_crla_subject_nameu
        Creates an empty X.509 certificate request (v1).
        aNameuExpecting x509.Name object.uThe subject name may only be set once.aCertificateSigningRequestBuilderu
        Sets the certificate requestor's distinguished name.
        aExtensionTypeuextension must be an ExtensionTypeaExtensiona_reject_duplicate_extensionu
        Adds an X.509 extension to the certificate request.
        aObjectIdentifieruoid must be an ObjectIdentifieruvalue must be bytesa_ASN1Typeutag must be _ASN1Typea_reject_duplicate_attributeu
        Adds an X.509 attribute with an OID and associated value.
        uA CertificateSigningRequest must have a subjectacreate_x509_csru
        Signs the request using the requestor's private key.
        aVersionav3a_versiona_issuer_namea_public_keya_not_valid_beforea_not_valid_afteruThe issuer name may only be set once.aCertificateBuilderu
        Sets the CA's distinguished name.
        u
        Sets the requestor's distinguished name.
        adsaaDSAPublicKeyarsaaRSAPublicKeyaecaEllipticCurvePublicKeyaed25519aEd25519PublicKeyaed448aEd448PublicKeyax25519aX25519PublicKeyax448aX448PublicKeyuExpecting one of DSAPublicKey, RSAPublicKey, EllipticCurvePublicKey, Ed25519PublicKey, Ed448PublicKey, X25519PublicKey, or X448PublicKey.uThe public key may only be set once.u
        Sets the requestor's public key (as found in the signing request).
        uSerial number must be of integral type.uThe serial number may only be set once.luThe serial number should be positive.abit_lengthluThe serial number should not be more than 159 bits.u
        Sets the certificate serial number.
        uExpecting datetime object.uThe not valid before may only be set once.a_convert_to_naive_utc_timea_EARLIEST_UTC_TIMEuThe not valid before date must be on or after 1950 January 1).uThe not valid before date must be before the not valid after date.u
        Sets the certificate activation time.
        uThe not valid after may only be set once.uThe not valid after date must be on or after 1950 January 1.uThe not valid after date must be after the not valid before date.u
        Sets the certificate expiration time.
        u
        Adds an X.509 extension to the certificate.
        uA certificate must have a subject nameuA certificate must have an issuer nameuA certificate must have a serial numberuA certificate must have a not valid before timeuA certificate must have a not valid after timeuA certificate must have a public keyapaddingaPSSaPKCS1v15uPadding must be PSS or PKCS1v15aRSAPrivateKeyuPadding is only supported for RSA keysacreate_x509_certificateu
        Signs the certificate using the CA's private key.
        a_last_updatea_next_updatea_revoked_certificatesaCertificateRevocationListBuilderuLast update may only be set once.uThe last update date must be on or after 1950 January 1.uThe last update date must be before the next update date.uThe next update date must be after the last update date.u
        Adds an X.509 extension to the certificate revocation list.
        aRevokedCertificateuMust be an instance of RevokedCertificateu
        Adds a revoked certificate to the CRL.
        uA CRL must have an issuer nameuA CRL must have a last update timeuA CRL must have a next update timeacreate_x509_crluThe serial number should be positiveaRevokedCertificateBuilderuThe revocation date may only be set once.uThe revocation date must be on or after 1950 January 1.uA revoked certificate must have a serial numberuA revoked certificate must have a revocation datea_RawRevokedCertificateaExtensionsafrom_bytesaosaurandomTlabigla__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingacryptographyTautilsautilsucryptography.hazmat.bindings._rustTax509ax509ucryptography.hazmat.primitivesTahashesaserializationahashesaserializationucryptography.hazmat.primitives.asymmetricTadsaaecaed448aed25519apaddingarsaax448ax25519ucryptography.hazmat.primitives.asymmetric.typesTaCertificateIssuerPrivateKeyTypesaCertificateIssuerPublicKeyTypesaCertificatePublicKeyTypesaCertificateIssuerPrivateKeyTypesaCertificateIssuerPublicKeyTypesaCertificatePublicKeyTypesucryptography.x509.extensionsTaExtensionaExtensionsaExtensionTypea_make_sequence_methodsa_make_sequence_methodsucryptography.x509.nameTaNamea_ASN1Typeucryptography.x509.oidTaObjectIdentifierTllpaUnionaSHA224aSHA256aSHA384aSHA512aSHA3_224aSHA3_256aSHA3_384aSHA3_512a_AllowedHashTypesTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.basea__module__a__qualname__DamsgaoidareturnastraObjectIdentifieraNoneuAttributeNotFound.__init__a__orig_bases__DaextensionaextensionsareturnuExtension[ExtensionType]utyping.List[Extension[ExtensionType]]aNoneDaoidaattributesareturnaObjectIdentifierutyping.List[typing.Tuple[ObjectIdentifier, bytes, typing.Optional[int]]]aNoneDatimeareturnudatetime.datetimeudatetime.datetimeaUTF8StringDaoidavaluea_typeareturnaObjectIdentifierabytesaintaNoneuAttribute.__init__DareturnaObjectIdentifieruAttribute.oidDareturnabytesuAttribute.valueDareturnastra__repr__uAttribute.__repr__Daotherareturnaobjectaboola__eq__uAttribute.__eq__Dareturnainta__hash__uAttribute.__hash__TaAttributesDaattributesareturnutyping.Iterable[Attribute]aNoneuAttributes.__init__Ta_attributesa__len__a__iter__uAttributes.__repr__DaoidareturnaObjectIdentifieraAttributeaget_attribute_for_oiduAttributes.get_attribute_for_oidaEnumav1laInvalidVersionDamsgaparsed_versionareturnastraintaNoneuInvalidVersion.__init__ametaclassaABCMetaTaCertificateTaCertificateaabstractmethodDaalgorithmareturnuhashes.HashAlgorithmabytesu
        Returns bytes using digest passed.
        afingerprintuCertificate.fingerprintapropertyu
        Returns certificate serial number
        aserial_numberuCertificate.serial_numberDareturnaVersionu
        Returns the certificate version
        aversionuCertificate.versionDareturnaCertificatePublicKeyTypesu
        Returns the public key
        apublic_keyuCertificate.public_keyDareturnudatetime.datetimeu
        Not before time (represented as UTC datetime)
        anot_valid_beforeuCertificate.not_valid_beforeu
        Not after time (represented as UTC datetime)
        anot_valid_afteruCertificate.not_valid_afterDareturnaNameu
        Returns the issuer name object.
        aissueruCertificate.issueru
        Returns the subject name object.
        asubjectuCertificate.subjectDareturnutyping.Optional[hashes.HashAlgorithm]u
        Returns a HashAlgorithm corresponding to the type of the digest signed
        in the certificate.
        asignature_hash_algorithmuCertificate.signature_hash_algorithmu
        Returns the ObjectIdentifier of the signature algorithm.
        asignature_algorithm_oiduCertificate.signature_algorithm_oidDareturnutyping.Union[None, padding.PSS, padding.PKCS1v15, ec.ECDSA]u
        Returns the signature algorithm parameters.
        asignature_algorithm_parametersuCertificate.signature_algorithm_parametersDareturnaExtensionsu
        Returns an Extensions object.
        aextensionsuCertificate.extensionsu
        Returns the signature bytes.
        asignatureuCertificate.signatureu
        Returns the tbsCertificate payload bytes as defined in RFC 5280.
        atbs_certificate_bytesuCertificate.tbs_certificate_bytesu
        Returns the tbsCertificate payload bytes with the SCT list extension
        stripped.
        atbs_precertificate_bytesuCertificate.tbs_precertificate_bytesu
        Checks equality.
        uCertificate.__eq__u
        Computes a hash.
        uCertificate.__hash__Daencodingareturnuserialization.Encodingabytesu
        Serializes the certificate to PEM or DER format.
        apublic_bytesuCertificate.public_bytesDaissuerareturnaCertificateaNoneu
        This method verifies that certificate issuer name matches the
        issuer subject name and that the certificate is signed by the
        issuer's private key. No other validation is performed.
        averify_directly_issued_byuCertificate.verify_directly_issued_byaregisterTaRevokedCertificateTu
        Returns the serial number of the revoked certificate.
        uRevokedCertificate.serial_numberu
        Returns the date of when this certificate was revoked.
        arevocation_dateuRevokedCertificate.revocation_dateu
        Returns an Extensions object containing a list of Revoked extensions.
        uRevokedCertificate.extensionsDaserial_numberarevocation_dateaextensionsaintudatetime.datetimeaExtensionsu_RawRevokedCertificate.__init__u_RawRevokedCertificate.serial_numberu_RawRevokedCertificate.revocation_dateu_RawRevokedCertificate.extensionsTaCertificateRevocationListTaCertificateRevocationListu
        Serializes the CRL to PEM or DER format.
        uCertificateRevocationList.public_bytesuCertificateRevocationList.fingerprintDaserial_numberareturnaintutyping.Optional[RevokedCertificate]u
        Returns an instance of RevokedCertificate or None if the serial_number
        is not in the CRL.
        aget_revoked_certificate_by_serial_numberuCertificateRevocationList.get_revoked_certificate_by_serial_numberuCertificateRevocationList.signature_hash_algorithmuCertificateRevocationList.signature_algorithm_oidu
        Returns the X509Name with the issuer of this CRL.
        uCertificateRevocationList.issuerDareturnutyping.Optional[datetime.datetime]u
        Returns the date of next update for this CRL.
        anext_updateuCertificateRevocationList.next_updateu
        Returns the date of last update for this CRL.
        alast_updateuCertificateRevocationList.last_updateu
        Returns an Extensions object containing a list of CRL extensions.
        uCertificateRevocationList.extensionsuCertificateRevocationList.signatureu
        Returns the tbsCertList payload bytes as defined in RFC 5280.
        atbs_certlist_bytesuCertificateRevocationList.tbs_certlist_bytesuCertificateRevocationList.__eq__u
        Number of revoked certificates in the CRL.
        uCertificateRevocationList.__len__aoverloadDaidxareturnaintaRevokedCertificateuCertificateRevocationList.__getitem__Daidxareturnasliceutyping.List[RevokedCertificate]Daidxareturnutyping.Union[int, slice]utyping.Union[RevokedCertificate, typing.List[RevokedCertificate]]u
        Returns a revoked certificate (or slice of revoked certificates).
        Dareturnutyping.Iterator[RevokedCertificate]u
        Iterator over the revoked certificates
        uCertificateRevocationList.__iter__Dapublic_keyareturnaCertificateIssuerPublicKeyTypesaboolu
        Verifies signature of revocation list against given public key.
        ais_signature_validuCertificateRevocationList.is_signature_validTaCertificateSigningRequestTaCertificateSigningRequestuCertificateSigningRequest.__eq__uCertificateSigningRequest.__hash__uCertificateSigningRequest.public_keyuCertificateSigningRequest.subjectuCertificateSigningRequest.signature_hash_algorithmuCertificateSigningRequest.signature_algorithm_oidu
        Returns the extensions in the signing request.
        uCertificateSigningRequest.extensionsDareturnaAttributesu
        Returns an Attributes object.
        aattributesuCertificateSigningRequest.attributesu
        Encodes the request to PEM or DER format.
        uCertificateSigningRequest.public_bytesuCertificateSigningRequest.signatureu
        Returns the PKCS#10 CertificationRequestInfo bytes as defined in RFC
        2986.
        atbs_certrequest_bytesuCertificateSigningRequest.tbs_certrequest_bytesDareturnaboolu
        Verifies signature of signing request.
        uCertificateSigningRequest.is_signature_validDaoidareturnaObjectIdentifierabytesu
        Get the attribute value for a given OID.
        uCertificateSigningRequest.get_attribute_for_oidDadataabackendareturnabytesutyping.AnyaCertificateDadataareturnabytesutyping.List[Certificate]Dadataabackendareturnabytesutyping.AnyaCertificateSigningRequestDadataabackendareturnabytesutyping.AnyaCertificateRevocationListDasubject_nameaextensionsaattributesutyping.Optional[Name]utyping.List[Extension[ExtensionType]]utyping.List[typing.Tuple[ObjectIdentifier, bytes, typing.Optional[int]]]uCertificateSigningRequestBuilder.__init__DanameareturnaNameaCertificateSigningRequestBuilderasubject_nameuCertificateSigningRequestBuilder.subject_nameDaextvalacriticalareturnaExtensionTypeaboolaCertificateSigningRequestBuilderaadd_extensionuCertificateSigningRequestBuilder.add_extensionDa_tagnDaoidavaluea_tagareturnaObjectIdentifierabytesutyping.Optional[_ASN1Type]aCertificateSigningRequestBuilderaadd_attributeuCertificateSigningRequestBuilder.add_attributeDaprivate_keyaalgorithmabackendareturnaCertificateIssuerPrivateKeyTypesutyping.Optional[_AllowedHashTypes]utyping.AnyaCertificateSigningRequestasignuCertificateSigningRequestBuilder.signa__annotations__utyping.List[Extension[ExtensionType]]Daissuer_nameasubject_nameapublic_keyaserial_numberanot_valid_beforeanot_valid_afteraextensionsareturnutyping.Optional[Name]utyping.Optional[Name]utyping.Optional[CertificatePublicKeyTypes]utyping.Optional[int]utyping.Optional[datetime.datetime]utyping.Optional[datetime.datetime]utyping.List[Extension[ExtensionType]]aNoneuCertificateBuilder.__init__DanameareturnaNameaCertificateBuilderaissuer_nameuCertificateBuilder.issuer_nameuCertificateBuilder.subject_nameDakeyareturnaCertificatePublicKeyTypesaCertificateBuilderuCertificateBuilder.public_keyDanumberareturnaintaCertificateBuilderuCertificateBuilder.serial_numberDatimeareturnudatetime.datetimeaCertificateBuilderuCertificateBuilder.not_valid_beforeuCertificateBuilder.not_valid_afterDaextvalacriticalareturnaExtensionTypeaboolaCertificateBuilderuCertificateBuilder.add_extensionDarsa_paddingnDaprivate_keyaalgorithmabackendarsa_paddingareturnaCertificateIssuerPrivateKeyTypesutyping.Optional[_AllowedHashTypes]utyping.Anyutyping.Optional[typing.Union[padding.PSS, padding.PKCS1v15]]aCertificateuCertificateBuilder.signutyping.List[RevokedCertificate]Daissuer_namealast_updateanext_updateaextensionsarevoked_certificatesutyping.Optional[Name]utyping.Optional[datetime.datetime]utyping.Optional[datetime.datetime]utyping.List[Extension[ExtensionType]]utyping.List[RevokedCertificate]uCertificateRevocationListBuilder.__init__Daissuer_nameareturnaNameaCertificateRevocationListBuilderuCertificateRevocationListBuilder.issuer_nameDalast_updateareturnudatetime.datetimeaCertificateRevocationListBuilderuCertificateRevocationListBuilder.last_updateDanext_updateareturnudatetime.datetimeaCertificateRevocationListBuilderuCertificateRevocationListBuilder.next_updateDaextvalacriticalareturnaExtensionTypeaboolaCertificateRevocationListBuilderuCertificateRevocationListBuilder.add_extensionDarevoked_certificateareturnaRevokedCertificateaCertificateRevocationListBuilderaadd_revoked_certificateuCertificateRevocationListBuilder.add_revoked_certificateDaprivate_keyaalgorithmabackendareturnaCertificateIssuerPrivateKeyTypesutyping.Optional[_AllowedHashTypes]utyping.AnyaCertificateRevocationListuCertificateRevocationListBuilder.signDaserial_numberarevocation_dateaextensionsutyping.Optional[int]utyping.Optional[datetime.datetime]utyping.List[Extension[ExtensionType]]uRevokedCertificateBuilder.__init__DanumberareturnaintaRevokedCertificateBuilderuRevokedCertificateBuilder.serial_numberDatimeareturnudatetime.datetimeaRevokedCertificateBuilderuRevokedCertificateBuilder.revocation_dateDaextvalacriticalareturnaExtensionTypeaboolaRevokedCertificateBuilderuRevokedCertificateBuilder.add_extensionDabackendareturnutyping.AnyaRevokedCertificateabuilduRevokedCertificateBuilder.buildarandom_serial_numberucryptography\x509\base.pyu<module cryptography.x509.base>Ta__class__TaselfaotherTaselfaidxTaselfTaselfaattributesTaselfaissuer_namealast_updateanext_updateaextensionsarevoked_certificatesTaselfaissuer_nameasubject_nameapublic_keyaserial_numberanot_valid_beforeanot_valid_afteraextensionsTaselfamsgaoida__class__Taselfamsgaparsed_versiona__class__Taselfaoidavaluea_typeTaselfaserial_numberarevocation_dateaextensionsTaselfasubject_nameaextensionsaattributesTatimeaoffsetTaoidaattributesaattr_oidw_TaextensionaextensionsweTaselfaoidavaluea_tagatagTaselfaextvalacriticalaextensionTaselfarevoked_certificateTaselfabackendTaselfaalgorithmTaselfaoidTaselfaoidaattrTaselfaserial_numberTaselfapublic_keyTaselfaissuer_nameTaselfanameTaselfalast_updateTadataabackendTadataTaselfanext_updateTaselfatimeTaselfaencodingTaselfakeyTaselfanumberTaselfaprivate_keyaalgorithmabackendTaselfaprivate_keyaalgorithmabackendarsa_paddingTaselfaissuer.cryptography.x509.certificate_transparencyzXa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcladatetimeacryptographyTautilsautilsucryptography.hazmat.bindings._rustTax509ax509arust_x509ucryptography.hazmat.primitives.hashesTaHashAlgorithmaHashAlgorithmaEnuma__prepare__aLogEntryTypea__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.certificate_transparencya__module__a__qualname__aX509_CERTIFICATElaPRE_CERTIFICATEa__orig_bases__aVersionav1aSignatureAlgorithmu
    Signature algorithms that are valid for SCTs.

    These are exactly the same as SignatureAlgorithm in RFC 5246 (TLS 1.2).

    See: <https://datatracker.ietf.org/doc/html/rfc5246#section-7.4.1.4.1>
    aANONYMOUSaRSAlaDSAlaECDSAametaclassaABCMetaTaSignedCertificateTimestampTaSignedCertificateTimestampapropertyaabstractmethodDareturnaVersionu
        Returns the SCT version.
        aversionuSignedCertificateTimestamp.versionDareturnabytesu
        Returns an identifier indicating which log this SCT is for.
        alog_iduSignedCertificateTimestamp.log_idDareturnudatetime.datetimeu
        Returns the timestamp for this SCT.
        atimestampuSignedCertificateTimestamp.timestampDareturnaLogEntryTypeu
        Returns whether this is an SCT for a certificate or pre-certificate.
        aentry_typeuSignedCertificateTimestamp.entry_typeDareturnaHashAlgorithmu
        Returns the hash algorithm used for the SCT's signature.
        asignature_hash_algorithmuSignedCertificateTimestamp.signature_hash_algorithmDareturnaSignatureAlgorithmu
        Returns the signing algorithm used for the SCT's signature.
        asignature_algorithmuSignedCertificateTimestamp.signature_algorithmu
        Returns the signature for this SCT.
        asignatureuSignedCertificateTimestamp.signatureu
        Returns the raw bytes of any extensions for this SCT.
        aextension_bytesuSignedCertificateTimestamp.extension_bytesTaregisteraSctucryptography\x509\certificate_transparency.pyu<module cryptography.x509.certificate_transparency>Ta__class__Taselfu.cryptography.x509a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existingax509TaNUITKA_PACKAGE_cryptography_x509u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.x509Tacertificate_transparencylacertificate_transparencyucryptography.x509.baseTaAttributeaAttributeNotFoundaAttributesaCertificateaCertificateBuilderaCertificateRevocationListaCertificateRevocationListBuilderaCertificateSigningRequestaCertificateSigningRequestBuilderaInvalidVersionaRevokedCertificateaRevokedCertificateBuilderaVersionaload_der_x509_certificateaload_der_x509_crlaload_der_x509_csraload_pem_x509_certificateaload_pem_x509_certificatesaload_pem_x509_crlaload_pem_x509_csrarandom_serial_numberaAttributeaAttributeNotFoundaAttributesaCertificateaCertificateBuilderaCertificateRevocationListaCertificateRevocationListBuilderaCertificateSigningRequestaCertificateSigningRequestBuilderaInvalidVersionaRevokedCertificateaRevokedCertificateBuilderaVersionaload_der_x509_certificateaload_der_x509_crlaload_der_x509_csraload_pem_x509_certificateaload_pem_x509_certificatesaload_pem_x509_crlaload_pem_x509_csrarandom_serial_numberucryptography.x509.extensionsT+aAccessDescriptionaAuthorityInformationAccessaAuthorityKeyIdentifieraBasicConstraintsaCertificateIssueraCertificatePoliciesaCRLDistributionPointsaCRLNumberaCRLReasonaDeltaCRLIndicatoraDistributionPointaDuplicateExtensionaExtendedKeyUsageaExtensionaExtensionNotFoundaExtensionsaExtensionTypeaFreshestCRLaGeneralNamesaInhibitAnyPolicyaInvalidityDateaIssuerAlternativeNameaIssuingDistributionPointaKeyUsageaMSCertificateTemplateaNameConstraintsaNoticeReferenceaOCSPAcceptableResponsesaOCSPNoCheckaOCSPNonceaPolicyConstraintsaPolicyInformationaPrecertificateSignedCertificateTimestampsaPrecertPoisonaReasonFlagsaSignedCertificateTimestampsaSubjectAlternativeNameaSubjectInformationAccessaSubjectKeyIdentifieraTLSFeatureaTLSFeatureTypeaUnrecognizedExtensionaUserNoticeaAccessDescriptionaAuthorityInformationAccessaAuthorityKeyIdentifieraBasicConstraintsaCertificateIssueraCertificatePoliciesaCRLDistributionPointsaCRLNumberaCRLReasonaDeltaCRLIndicatoraDistributionPointaDuplicateExtensionaExtendedKeyUsageaExtensionaExtensionNotFoundaExtensionsaExtensionTypeaFreshestCRLaGeneralNamesaInhibitAnyPolicyaInvalidityDateaIssuerAlternativeNameaIssuingDistributionPointaKeyUsageaMSCertificateTemplateaNameConstraintsaNoticeReferenceaOCSPAcceptableResponsesaOCSPNoCheckaOCSPNonceaPolicyConstraintsaPolicyInformationaPrecertificateSignedCertificateTimestampsaPrecertPoisonaReasonFlagsaSignedCertificateTimestampsaSubjectAlternativeNameaSubjectInformationAccessaSubjectKeyIdentifieraTLSFeatureaTLSFeatureTypeaUnrecognizedExtensionaUserNoticeucryptography.x509.general_nameTaDirectoryNameaDNSNameaGeneralNameaIPAddressaOtherNameaRegisteredIDaRFC822NameaUniformResourceIdentifieraUnsupportedGeneralNameTypeaDirectoryNameaDNSNameaGeneralNameaIPAddressaOtherNameaRegisteredIDaRFC822NameaUniformResourceIdentifieraUnsupportedGeneralNameTypeucryptography.x509.nameTaNameaNameAttributeaRelativeDistinguishedNameaNameaNameAttributeaRelativeDistinguishedNameucryptography.x509.oidTaAuthorityInformationAccessOIDaCertificatePoliciesOIDaCRLEntryExtensionOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaObjectIdentifieraSignatureAlgorithmOIDaAuthorityInformationAccessOIDaCertificatePoliciesOIDaCRLEntryExtensionOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaObjectIdentifieraSignatureAlgorithmOIDaAUTHORITY_INFORMATION_ACCESSaOID_AUTHORITY_INFORMATION_ACCESSaAUTHORITY_KEY_IDENTIFIERaOID_AUTHORITY_KEY_IDENTIFIERaBASIC_CONSTRAINTSaOID_BASIC_CONSTRAINTSaCERTIFICATE_POLICIESaOID_CERTIFICATE_POLICIESaCRL_DISTRIBUTION_POINTSaOID_CRL_DISTRIBUTION_POINTSaEXTENDED_KEY_USAGEaOID_EXTENDED_KEY_USAGEaFRESHEST_CRLaOID_FRESHEST_CRLaINHIBIT_ANY_POLICYaOID_INHIBIT_ANY_POLICYaISSUER_ALTERNATIVE_NAMEaOID_ISSUER_ALTERNATIVE_NAMEaKEY_USAGEaOID_KEY_USAGEaNAME_CONSTRAINTSaOID_NAME_CONSTRAINTSaOCSP_NO_CHECKaOID_OCSP_NO_CHECKaPOLICY_CONSTRAINTSaOID_POLICY_CONSTRAINTSaPOLICY_MAPPINGSaOID_POLICY_MAPPINGSaSUBJECT_ALTERNATIVE_NAMEaOID_SUBJECT_ALTERNATIVE_NAMEaSUBJECT_DIRECTORY_ATTRIBUTESaOID_SUBJECT_DIRECTORY_ATTRIBUTESaSUBJECT_INFORMATION_ACCESSaOID_SUBJECT_INFORMATION_ACCESSaSUBJECT_KEY_IDENTIFIERaOID_SUBJECT_KEY_IDENTIFIERaDSA_WITH_SHA1aOID_DSA_WITH_SHA1aDSA_WITH_SHA224aOID_DSA_WITH_SHA224aDSA_WITH_SHA256aOID_DSA_WITH_SHA256aECDSA_WITH_SHA1aOID_ECDSA_WITH_SHA1aECDSA_WITH_SHA224aOID_ECDSA_WITH_SHA224aECDSA_WITH_SHA256aOID_ECDSA_WITH_SHA256aECDSA_WITH_SHA384aOID_ECDSA_WITH_SHA384aECDSA_WITH_SHA512aOID_ECDSA_WITH_SHA512aRSA_WITH_MD5aOID_RSA_WITH_MD5aRSA_WITH_SHA1aOID_RSA_WITH_SHA1aRSA_WITH_SHA224aOID_RSA_WITH_SHA224aRSA_WITH_SHA256aOID_RSA_WITH_SHA256aRSA_WITH_SHA384aOID_RSA_WITH_SHA384aRSA_WITH_SHA512aOID_RSA_WITH_SHA512aRSASSA_PSSaOID_RSASSA_PSSaCOMMON_NAMEaOID_COMMON_NAMEaCOUNTRY_NAMEaOID_COUNTRY_NAMEaDOMAIN_COMPONENTaOID_DOMAIN_COMPONENTaDN_QUALIFIERaOID_DN_QUALIFIERaEMAIL_ADDRESSaOID_EMAIL_ADDRESSaGENERATION_QUALIFIERaOID_GENERATION_QUALIFIERaGIVEN_NAMEaOID_GIVEN_NAMEaLOCALITY_NAMEaOID_LOCALITY_NAMEaORGANIZATIONAL_UNIT_NAMEaOID_ORGANIZATIONAL_UNIT_NAMEaORGANIZATION_NAMEaOID_ORGANIZATION_NAMEaPSEUDONYMaOID_PSEUDONYMaSERIAL_NUMBERaOID_SERIAL_NUMBERaSTATE_OR_PROVINCE_NAMEaOID_STATE_OR_PROVINCE_NAMEaSURNAMEaOID_SURNAMEaTITLEaOID_TITLEaCLIENT_AUTHaOID_CLIENT_AUTHaCODE_SIGNINGaOID_CODE_SIGNINGaEMAIL_PROTECTIONaOID_EMAIL_PROTECTIONaOCSP_SIGNINGaOID_OCSP_SIGNINGaSERVER_AUTHaOID_SERVER_AUTHaTIME_STAMPINGaOID_TIME_STAMPINGaANY_POLICYaOID_ANY_POLICYaCPS_QUALIFIERaOID_CPS_QUALIFIERaCPS_USER_NOTICEaOID_CPS_USER_NOTICEaCERTIFICATE_ISSUERaOID_CERTIFICATE_ISSUERaCRL_REASONaOID_CRL_REASONaINVALIDITY_DATEaOID_INVALIDITY_DATEaCA_ISSUERSaOID_CA_ISSUERSaOCSPaOID_OCSPLRacertificate_transparencyaload_pem_x509_certificateaload_pem_x509_certificatesaload_der_x509_certificateaload_pem_x509_csraload_der_x509_csraload_pem_x509_crlaload_der_x509_crlarandom_serial_numberaAttributeaAttributeNotFoundaAttributesaInvalidVersionaDeltaCRLIndicatoraDuplicateExtensionaExtensionNotFoundaUnsupportedGeneralNameTypeaNameAttributeaNameaRelativeDistinguishedNameaObjectIdentifieraExtensionTypeaExtensionsaExtensionaExtendedKeyUsageaFreshestCRLaIssuingDistributionPointaTLSFeatureaTLSFeatureTypeaOCSPAcceptableResponsesaOCSPNoCheckaBasicConstraintsaCRLNumberaKeyUsageaAuthorityInformationAccessaSubjectInformationAccessaAccessDescriptionaCertificatePoliciesaPolicyInformationaUserNoticeaNoticeReferenceaSubjectKeyIdentifieraNameConstraintsaCRLDistributionPointsaDistributionPointaReasonFlagsaInhibitAnyPolicyaSubjectAlternativeNameaIssuerAlternativeNameaAuthorityKeyIdentifieraGeneralNamesaGeneralNameaRFC822NameaDNSNameaUniformResourceIdentifieraRegisteredIDaDirectoryNameaIPAddressaOtherNameaCertificateaCertificateRevocationListaCertificateRevocationListBuilderaCertificateSigningRequestaRevokedCertificateaRevokedCertificateBuilderaCertificateSigningRequestBuilderaCertificateBuilderaVersionaOID_CA_ISSUERSaOID_OCSPaCertificateIssueraCRLReasonaInvalidityDateaUnrecognizedExtensionaPolicyConstraintsaPrecertificateSignedCertificateTimestampsaPrecertPoisonaOCSPNonceaSignedCertificateTimestampsaSignatureAlgorithmOIDaNameOIDaMSCertificateTemplatea__all__ucryptography\x509\__init__.pyu<module cryptography.x509>u.cryptography.x509.extensionsNjDaRSAPublicKeyapublic_bytesaserializationaEncodingaDERaPublicFormataPKCS1aEllipticCurvePublicKeyaX962aUncompressedPointaSubjectPublicKeyInfoaasn1aparse_spki_for_dataahashlibasha1adigestDareturnaintalen_methodu_make_sequence_methods.<locals>.len_methodaiter_methodu_make_sequence_methods.<locals>.iter_methodagetitem_methodu_make_sequence_methods.<locals>.getitem_methodafield_namea__class__a__init__aoidupublic_bytes is not implemented for extension type {!r}u
        Serializes the extension type to DER.
        a_extensionsaExtensionNotFounduNo uu extension was foundaUnrecognizedExtensionuUnrecognizedExtension can't be used with get_extension_for_class because more than one instance of the class may be present.avalueu<Extensions(u)>ucrl_number must be an integera_crl_numberaCRLNumberacrl_numberu<CRLNumber(arust_x509aencode_extension_valueuauthority_cert_issuer and authority_cert_serial_number must both be present or both Noneuauthority_cert_issuer must be a list of GeneralName objectsuauthority_cert_serial_number must be an integera_key_identifieraauthority_cert_issuera_authority_cert_issuera_authority_cert_serial_numberaGeneralNameu<genexpr>uAuthorityKeyIdentifier.__init__.<locals>.<genexpr>a_key_identifier_from_public_keyTakey_identifieraauthority_cert_issueraauthority_cert_serial_numberu<AuthorityKeyIdentifier(key_identifier={0.key_identifier!r}, authority_cert_issuer={0.authority_cert_issuer}, authority_cert_serial_number={0.authority_cert_serial_number})>aAuthorityKeyIdentifierakey_identifieraauthority_cert_serial_numbera_digestu<SubjectKeyIdentifier(digest=aSubjectKeyIdentifieraconstant_timeabytes_equEvery item in the descriptions list must be an AccessDescriptiona_descriptionsaAccessDescriptionuAuthorityInformationAccess.__init__.<locals>.<genexpr>u<AuthorityInformationAccess(aAuthorityInformationAccessuSubjectInformationAccess.__init__.<locals>.<genexpr>u<SubjectInformationAccess(aSubjectInformationAccessaObjectIdentifieruaccess_method must be an ObjectIdentifieruaccess_location must be a GeneralNamea_access_methoda_access_locationu<AccessDescription(access_method={0.access_method}, access_location={0.access_location})>aaccess_methodaaccess_locationuca must be a boolean valueupath_length must be None when ca is Falselupath_length must be a non-negative integer or Nonea_caa_path_lengthu<BasicConstraints(ca={0.ca}, path_length={0.path_length})>aBasicConstraintsacaapath_lengthaDeltaCRLIndicatoru<DeltaCRLIndicator(crl_number=udistribution_points must be a list of DistributionPoint objectsa_distribution_pointsaDistributionPointuCRLDistributionPoints.__init__.<locals>.<genexpr>u<CRLDistributionPoints(aCRLDistributionPointsuFreshestCRL.__init__.<locals>.<genexpr>u<FreshestCRL(aFreshestCRLuYou cannot provide both full_name and relative_name, at least one must be None.uEither full_name, relative_name or crl_issuer must be provided.ufull_name must be a list of GeneralName objectsaRelativeDistinguishedNameurelative_name must be a RelativeDistinguishedNameucrl_issuer must be None or a list of general namesureasons must be None or frozenset of ReasonFlagsareasonsaReasonFlagsaunspecifiedaremove_from_crluunspecified and remove_from_crl are not valid reasons in a DistributionPointafull_namea_full_namea_relative_namea_reasonsacrl_issuera_crl_issueruDistributionPoint.__init__.<locals>.<genexpr>u<DistributionPoint(full_name={0.full_name}, relative_name={0.relative_name}, reasons={0.reasons}, crl_issuer={0.crl_issuer})>arelative_nameurequire_explicit_policy must be a non-negative integer or Noneuinhibit_policy_mapping must be a non-negative integer or NoneuAt least one of require_explicit_policy and inhibit_policy_mapping must not be Nonea_require_explicit_policya_inhibit_policy_mappingu<PolicyConstraints(require_explicit_policy={0.require_explicit_policy}, inhibit_policy_mapping={0.inhibit_policy_mapping})>aPolicyConstraintsarequire_explicit_policyainhibit_policy_mappinguEvery item in the policies list must be a PolicyInformationa_policiesaPolicyInformationuCertificatePolicies.__init__.<locals>.<genexpr>u<CertificatePolicies(aCertificatePoliciesupolicy_identifier must be an ObjectIdentifiera_policy_identifierupolicy_qualifiers must be a list of strings and/or UserNotice objects or Noneapolicy_qualifiersa_policy_qualifiersaUserNoticeuPolicyInformation.__init__.<locals>.<genexpr>u<PolicyInformation(policy_identifier={0.policy_identifier}, policy_qualifiers={0.policy_qualifiers})>apolicy_identifieraNoticeReferenceunotice_reference must be None or a NoticeReferencea_notice_referencea_explicit_textu<UserNotice(notice_reference={0.notice_reference}, explicit_text={0.explicit_text!r})>anotice_referenceaexplicit_texta_organizationunotice_numbers must be a list of integersa_notice_numbersuNoticeReference.__init__.<locals>.<genexpr>u<NoticeReference(organization={0.organization!r}, notice_numbers={0.notice_numbers})>aorganizationanotice_numbersuEvery item in the usages list must be an ObjectIdentifiera_usagesuExtendedKeyUsage.__init__.<locals>.<genexpr>u<ExtendedKeyUsage(aExtendedKeyUsageaOCSPNoCheckaPrecertPoisonufeatures must be a list of elements from the TLSFeatureType enuma_featuresaTLSFeatureTypeuTLSFeature.__init__.<locals>.<genexpr>u<TLSFeature(features=aTLSFeatureuskip_certs must be an integeruskip_certs must be a non-negative integera_skip_certsu<InhibitAnyPolicy(skip_certs=askip_certsaInhibitAnyPolicyuencipher_only and decipher_only can only be true when key_agreement is truea_digital_signaturea_content_commitmenta_key_enciphermenta_data_enciphermenta_key_agreementa_key_cert_signa_crl_signa_encipher_onlya_decipher_onlyakey_agreementuencipher_only is undefined unless key_agreement is trueudecipher_only is undefined unless key_agreement is trueaencipher_onlyadecipher_onlyu<KeyUsage(digital_signature={0.digital_signature}, content_commitment={0.content_commitment}, key_encipherment={0.key_encipherment}, data_encipherment={0.data_encipherment}, key_agreement={0.key_agreement}, key_cert_sign={0.key_cert_sign}, crl_sign={0.crl_sign}, encipher_only={1}, decipher_only={2})>aKeyUsageadigital_signatureacontent_commitmentakey_enciphermentadata_enciphermentakey_cert_signacrl_signupermitted_subtrees must be a non-empty list or Noneupermitted_subtrees must be a list of GeneralName objects or Nonea_validate_treeuexcluded_subtrees must be a non-empty list or Noneuexcluded_subtrees must be a list of GeneralName objects or Noneaselfapermitted_subtreesaexcluded_subtreesuAt least one of permitted_subtrees and excluded_subtrees must not be Nonea_permitted_subtreesa_excluded_subtreesuNameConstraints.__init__.<locals>.<genexpr>aNameConstraintsa_validate_ip_namea_validate_dns_nameuIPAddress name constraints must be an IPv4Network or IPv6Network objectaIPAddressaipaddressaIPv4NetworkaIPv6NetworkuNameConstraints._validate_ip_name.<locals>.<genexpr>uDNSName name constraints must not contain the '*' wildcard characteraDNSNamew*uNameConstraints._validate_dns_name.<locals>.<genexpr>u<NameConstraints(permitted_subtrees={0.permitted_subtrees}, excluded_subtrees={0.excluded_subtrees})>uoid argument must be an ObjectIdentifier instance.ucritical must be a boolean valuea_oida_criticala_valueu<Extension(oid={0.oid}, critical={0.critical}, value={0.value})>aExtensionacriticaluEvery item in the general_names list must be an object conforming to the GeneralName interfacea_general_namesuGeneralNames.__init__.<locals>.<genexpr>aOtherNameatypeuGeneralNames.get_values_for_type.<locals>.<genexpr>u<GeneralNames(aGeneralNamesaget_values_for_typeu<SubjectAlternativeName(aSubjectAlternativeNameu<IssuerAlternativeName(aIssuerAlternativeNameu<CertificateIssuer(aCertificateIssuerureason must be an element from ReasonFlagsa_reasonu<CRLReason(reason=aCRLReasonareasonadatetimeuinvalidity_date must be a datetime.datetimea_invalidity_dateu<InvalidityDate(invalidity_date={})>aInvalidityDateainvalidity_dateuEvery item in the signed_certificate_timestamps list must be a SignedCertificateTimestampa_signed_certificate_timestampsaSignedCertificateTimestampuPrecertificateSignedCertificateTimestamps.__init__.<locals>.<genexpr>u<PrecertificateSignedCertificateTimestamps({})>aPrecertificateSignedCertificateTimestampsuSignedCertificateTimestamps.__init__.<locals>.<genexpr>u<SignedCertificateTimestamps(aSignedCertificateTimestampsunonce must be bytesa_nonceaOCSPNonceanonceu<OCSPNonce(nonce=uAll responses must be ObjectIdentifiersa_responsesuOCSPAcceptableResponses.__init__.<locals>.<genexpr>aOCSPAcceptableResponsesu<OCSPAcceptableResponses(responses=uonly_some_reasons must be None or frozenset of ReasonFlagsaonly_some_reasonsuunspecified and remove_from_crl are not valid reasons in an IssuingDistributionPointuonly_contains_user_certs, only_contains_ca_certs, indirect_crl and only_contains_attribute_certs must all be boolean.uOnly one of the following can be set to True: only_contains_user_certs, only_contains_ca_certs, indirect_crl, only_contains_attribute_certsuCannot create empty extension: if only_contains_user_certs, only_contains_ca_certs, indirect_crl, and only_contains_attribute_certs are all False, then either full_name, relative_name, or only_some_reasons must have a value.a_only_contains_user_certsa_only_contains_ca_certsa_indirect_crla_only_contains_attribute_certsa_only_some_reasonsuIssuingDistributionPoint.__init__.<locals>.<genexpr>u<IssuingDistributionPoint(full_name={0.full_name}, relative_name={0.relative_name}, only_contains_user_certs={0.only_contains_user_certs}, only_contains_ca_certs={0.only_contains_ca_certs}, only_some_reasons={0.only_some_reasons}, indirect_crl={0.indirect_crl}, only_contains_attribute_certs={0.only_contains_attribute_certs})>aIssuingDistributionPointaonly_contains_user_certsaonly_contains_ca_certsaindirect_crlaonly_contains_attribute_certsuoid must be an ObjectIdentifiera_template_idumajor_version and minor_version must be integers or Nonea_major_versiona_minor_versionu<MSCertificateTemplate(template_id=atemplate_idu, major_version=amajor_versionu, minor_version=aminor_versionaMSCertificateTemplateu<UnrecognizedExtension(oid={0.oid}, value={0.value!r})>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingacryptographyTautilsautilsucryptography.hazmat.bindings._rustTaasn1Tax509ax509ucryptography.hazmat.primitivesTaconstant_timeaserializationucryptography.hazmat.primitives.asymmetric.ecTaEllipticCurvePublicKeyucryptography.hazmat.primitives.asymmetric.rsaTaRSAPublicKeyucryptography.hazmat.primitives.asymmetric.typesTaCertificateIssuerPublicKeyTypesaCertificatePublicKeyTypesaCertificateIssuerPublicKeyTypesaCertificatePublicKeyTypesucryptography.x509.certificate_transparencyTaSignedCertificateTimestampucryptography.x509.general_nameTaDirectoryNameaDNSNameaGeneralNameaIPAddressaOtherNameaRegisteredIDaRFC822NameaUniformResourceIdentifiera_IPAddressTypesaDirectoryNameaRegisteredIDaRFC822NameaUniformResourceIdentifiera_IPAddressTypesucryptography.x509.nameTaNameaRelativeDistinguishedNameaNameucryptography.x509.oidTaCRLEntryExtensionOIDaExtensionOIDaObjectIdentifieraOCSPExtensionOIDaCRLEntryExtensionOIDaExtensionOIDaOCSPExtensionOIDaTypeVarTaExtensionTypeVaraExtensionTypetTaboundacovariantaExtensionTypeVarDapublic_keyareturnaCertificatePublicKeyTypesabytesDafield_nameastra_make_sequence_methodsTEExceptiona__prepare__aDuplicateExtensiona__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.extensionsa__module__a__qualname__DamsgaoidareturnastraObjectIdentifieraNoneuDuplicateExtension.__init__a__orig_bases__uExtensionNotFound.__init__ametaclassaABCMetaTaExtensionTypeTaExtensionTypea__annotations__utyping.ClassVar[ObjectIdentifier]DareturnabytesuExtensionType.public_bytesTaExtensionsDaextensionsareturnutyping.Iterable[Extension[ExtensionType]]aNoneuExtensions.__init__DaoidareturnaObjectIdentifieruExtension[ExtensionType]aget_extension_for_oiduExtensions.get_extension_for_oidDaextclassareturnutyping.Type[ExtensionTypeVar]uExtension[ExtensionTypeVar]aget_extension_for_classuExtensions.get_extension_for_classTa_extensionsutoo many values to unpack (expected 3)a__len__a__iter__Dareturnastra__repr__uExtensions.__repr__aCRL_NUMBERDacrl_numberareturnaintaNoneuCRLNumber.__init__Daotherareturnaobjectaboola__eq__uCRLNumber.__eq__a__hash__uCRLNumber.__hash__uCRLNumber.__repr__apropertyuCRLNumber.crl_numberuCRLNumber.public_bytesaAUTHORITY_KEY_IDENTIFIERDakey_identifieraauthority_cert_issueraauthority_cert_serial_numberareturnutyping.Optional[bytes]utyping.Optional[typing.Iterable[GeneralName]]utyping.Optional[int]aNoneuAuthorityKeyIdentifier.__init__aclassmethodDapublic_keyareturnaCertificateIssuerPublicKeyTypesaAuthorityKeyIdentifierafrom_issuer_public_keyuAuthorityKeyIdentifier.from_issuer_public_keyDaskiareturnaSubjectKeyIdentifieraAuthorityKeyIdentifierafrom_issuer_subject_key_identifieruAuthorityKeyIdentifier.from_issuer_subject_key_identifieruAuthorityKeyIdentifier.__repr__uAuthorityKeyIdentifier.__eq__uAuthorityKeyIdentifier.__hash__Dareturnutyping.Optional[bytes]uAuthorityKeyIdentifier.key_identifierDareturnutyping.Optional[typing.List[GeneralName]]uAuthorityKeyIdentifier.authority_cert_issuerDareturnutyping.Optional[int]uAuthorityKeyIdentifier.authority_cert_serial_numberuAuthorityKeyIdentifier.public_bytesaSUBJECT_KEY_IDENTIFIERDadigestareturnabytesaNoneuSubjectKeyIdentifier.__init__Dapublic_keyareturnaCertificatePublicKeyTypesaSubjectKeyIdentifierafrom_public_keyuSubjectKeyIdentifier.from_public_keyuSubjectKeyIdentifier.digestuSubjectKeyIdentifier.key_identifieruSubjectKeyIdentifier.__repr__uSubjectKeyIdentifier.__eq__uSubjectKeyIdentifier.__hash__uSubjectKeyIdentifier.public_bytesaAUTHORITY_INFORMATION_ACCESSDadescriptionsareturnutyping.Iterable[AccessDescription]aNoneuAuthorityInformationAccess.__init__Ta_descriptionsuAuthorityInformationAccess.__repr__uAuthorityInformationAccess.__eq__uAuthorityInformationAccess.__hash__uAuthorityInformationAccess.public_bytesaSUBJECT_INFORMATION_ACCESSuSubjectInformationAccess.__init__uSubjectInformationAccess.__repr__uSubjectInformationAccess.__eq__uSubjectInformationAccess.__hash__uSubjectInformationAccess.public_bytesDaaccess_methodaaccess_locationareturnaObjectIdentifieraGeneralNameaNoneuAccessDescription.__init__uAccessDescription.__repr__uAccessDescription.__eq__uAccessDescription.__hash__DareturnaObjectIdentifieruAccessDescription.access_methodDareturnaGeneralNameuAccessDescription.access_locationaBASIC_CONSTRAINTSDacaapath_lengthareturnaboolutyping.Optional[int]aNoneuBasicConstraints.__init__DareturnabooluBasicConstraints.cauBasicConstraints.path_lengthuBasicConstraints.__repr__uBasicConstraints.__eq__uBasicConstraints.__hash__uBasicConstraints.public_bytesaDELTA_CRL_INDICATORuDeltaCRLIndicator.__init__uDeltaCRLIndicator.crl_numberuDeltaCRLIndicator.__eq__uDeltaCRLIndicator.__hash__uDeltaCRLIndicator.__repr__uDeltaCRLIndicator.public_bytesaCRL_DISTRIBUTION_POINTSDadistribution_pointsareturnutyping.Iterable[DistributionPoint]aNoneuCRLDistributionPoints.__init__Ta_distribution_pointsuCRLDistributionPoints.__repr__uCRLDistributionPoints.__eq__uCRLDistributionPoints.__hash__uCRLDistributionPoints.public_bytesaFRESHEST_CRLuFreshestCRL.__init__uFreshestCRL.__repr__uFreshestCRL.__eq__uFreshestCRL.__hash__uFreshestCRL.public_bytesDafull_namearelative_nameareasonsacrl_issuerareturnutyping.Optional[typing.Iterable[GeneralName]]utyping.Optional[RelativeDistinguishedName]utyping.Optional[typing.FrozenSet[ReasonFlags]]utyping.Optional[typing.Iterable[GeneralName]]aNoneuDistributionPoint.__init__uDistributionPoint.__repr__uDistributionPoint.__eq__uDistributionPoint.__hash__uDistributionPoint.full_nameDareturnutyping.Optional[RelativeDistinguishedName]uDistributionPoint.relative_nameDareturnutyping.Optional[typing.FrozenSet[ReasonFlags]]uDistributionPoint.reasonsuDistributionPoint.crl_issueraEnumakeyCompromiseakey_compromiseacACompromiseaca_compromiseaaffiliationChangedaaffiliation_changedasupersededacessationOfOperationacessation_of_operationacertificateHoldacertificate_holdaprivilegeWithdrawnaprivilege_withdrawnaaACompromiseaaa_compromisearemoveFromCRLlllllllla_REASON_BIT_MAPPINGa_CRLREASONFLAGSaPOLICY_CONSTRAINTSDarequire_explicit_policyainhibit_policy_mappingareturnutyping.Optional[int]utyping.Optional[int]aNoneuPolicyConstraints.__init__uPolicyConstraints.__repr__uPolicyConstraints.__eq__uPolicyConstraints.__hash__uPolicyConstraints.require_explicit_policyuPolicyConstraints.inhibit_policy_mappinguPolicyConstraints.public_bytesaCERTIFICATE_POLICIESDapoliciesareturnutyping.Iterable[PolicyInformation]aNoneuCertificatePolicies.__init__Ta_policiesuCertificatePolicies.__repr__uCertificatePolicies.__eq__uCertificatePolicies.__hash__uCertificatePolicies.public_bytesDapolicy_identifierapolicy_qualifiersareturnaObjectIdentifierutyping.Optional[typing.Iterable[typing.Union[str, UserNotice]]]aNoneuPolicyInformation.__init__uPolicyInformation.__repr__uPolicyInformation.__eq__uPolicyInformation.__hash__uPolicyInformation.policy_identifierDareturnutyping.Optional[typing.List[typing.Union[str, UserNotice]]]uPolicyInformation.policy_qualifiersDanotice_referenceaexplicit_textareturnutyping.Optional[NoticeReference]utyping.Optional[str]aNoneuUserNotice.__init__uUserNotice.__repr__uUserNotice.__eq__uUserNotice.__hash__Dareturnutyping.Optional[NoticeReference]uUserNotice.notice_referenceDareturnutyping.Optional[str]uUserNotice.explicit_textDaorganizationanotice_numbersareturnutyping.Optional[str]utyping.Iterable[int]aNoneuNoticeReference.__init__uNoticeReference.__repr__uNoticeReference.__eq__uNoticeReference.__hash__uNoticeReference.organizationDareturnutyping.List[int]uNoticeReference.notice_numbersaEXTENDED_KEY_USAGEDausagesareturnutyping.Iterable[ObjectIdentifier]aNoneuExtendedKeyUsage.__init__Ta_usagesuExtendedKeyUsage.__repr__uExtendedKeyUsage.__eq__uExtendedKeyUsage.__hash__uExtendedKeyUsage.public_bytesaOCSP_NO_CHECKuOCSPNoCheck.__eq__uOCSPNoCheck.__hash__u<OCSPNoCheck()>uOCSPNoCheck.__repr__uOCSPNoCheck.public_bytesaPRECERT_POISONuPrecertPoison.__eq__uPrecertPoison.__hash__u<PrecertPoison()>uPrecertPoison.__repr__uPrecertPoison.public_bytesaTLS_FEATUREDafeaturesareturnutyping.Iterable[TLSFeatureType]aNoneuTLSFeature.__init__Ta_featuresuTLSFeature.__repr__uTLSFeature.__eq__uTLSFeature.__hash__uTLSFeature.public_bytesastatus_requestlastatus_request_v2a_TLS_FEATURE_TYPE_TO_ENUMaINHIBIT_ANY_POLICYDaskip_certsareturnaintaNoneuInhibitAnyPolicy.__init__uInhibitAnyPolicy.__repr__uInhibitAnyPolicy.__eq__uInhibitAnyPolicy.__hash__uInhibitAnyPolicy.skip_certsuInhibitAnyPolicy.public_bytesaKEY_USAGED
adigital_signatureacontent_commitmentakey_enciphermentadata_enciphermentakey_agreementakey_cert_signacrl_signaencipher_onlyadecipher_onlyareturnaboolppppppppaNoneuKeyUsage.__init__uKeyUsage.digital_signatureuKeyUsage.content_commitmentuKeyUsage.key_enciphermentuKeyUsage.data_enciphermentuKeyUsage.key_agreementuKeyUsage.key_cert_signuKeyUsage.crl_signuKeyUsage.encipher_onlyuKeyUsage.decipher_onlyuKeyUsage.__repr__uKeyUsage.__eq__uKeyUsage.__hash__uKeyUsage.public_bytesaNAME_CONSTRAINTSDapermitted_subtreesaexcluded_subtreesareturnutyping.Optional[typing.Iterable[GeneralName]]utyping.Optional[typing.Iterable[GeneralName]]aNoneuNameConstraints.__init__uNameConstraints.__eq__Datreeareturnutyping.Iterable[GeneralName]aNoneuNameConstraints._validate_treeuNameConstraints._validate_ip_nameuNameConstraints._validate_dns_nameuNameConstraints.__repr__uNameConstraints.__hash__uNameConstraints.permitted_subtreesuNameConstraints.excluded_subtreesuNameConstraints.public_bytesaGenericDaoidacriticalavalueareturnaObjectIdentifieraboolaExtensionTypeVaraNoneuExtension.__init__uExtension.oiduExtension.criticalDareturnaExtensionTypeVaruExtension.valueuExtension.__repr__uExtension.__eq__uExtension.__hash__Dageneral_namesareturnutyping.Iterable[GeneralName]aNoneuGeneralNames.__init__Ta_general_namesaoverloadDatypeareturnutyping.Union[typing.Type[DNSName], typing.Type[UniformResourceIdentifier], typing.Type[RFC822Name]]utyping.List[str]uGeneralNames.get_values_for_typeDatypeareturnutyping.Type[DirectoryName]utyping.List[Name]Datypeareturnutyping.Type[RegisteredID]utyping.List[ObjectIdentifier]Datypeareturnutyping.Type[IPAddress]utyping.List[_IPAddressTypes]Datypeareturnutyping.Type[OtherName]utyping.List[OtherName]Datypeareturnutyping.Union[typing.Type[DNSName], typing.Type[DirectoryName], typing.Type[IPAddress], typing.Type[OtherName], typing.Type[RFC822Name], typing.Type[RegisteredID], typing.Type[UniformResourceIdentifier]]utyping.Union[typing.List[_IPAddressTypes], typing.List[str], typing.List[OtherName], typing.List[Name], typing.List[ObjectIdentifier]]uGeneralNames.__repr__uGeneralNames.__eq__uGeneralNames.__hash__aSUBJECT_ALTERNATIVE_NAMEuSubjectAlternativeName.__init__uSubjectAlternativeName.get_values_for_typeuSubjectAlternativeName.__repr__uSubjectAlternativeName.__eq__uSubjectAlternativeName.__hash__uSubjectAlternativeName.public_bytesaISSUER_ALTERNATIVE_NAMEuIssuerAlternativeName.__init__uIssuerAlternativeName.get_values_for_typeuIssuerAlternativeName.__repr__uIssuerAlternativeName.__eq__uIssuerAlternativeName.__hash__uIssuerAlternativeName.public_bytesaCERTIFICATE_ISSUERuCertificateIssuer.__init__uCertificateIssuer.get_values_for_typeuCertificateIssuer.__repr__uCertificateIssuer.__eq__uCertificateIssuer.__hash__uCertificateIssuer.public_bytesaCRL_REASONDareasonareturnaReasonFlagsaNoneuCRLReason.__init__uCRLReason.__repr__uCRLReason.__eq__uCRLReason.__hash__DareturnaReasonFlagsuCRLReason.reasonuCRLReason.public_bytesaINVALIDITY_DATEDainvalidity_dateareturnudatetime.datetimeaNoneuInvalidityDate.__init__uInvalidityDate.__repr__uInvalidityDate.__eq__uInvalidityDate.__hash__Dareturnudatetime.datetimeuInvalidityDate.invalidity_dateuInvalidityDate.public_bytesaPRECERT_SIGNED_CERTIFICATE_TIMESTAMPSDasigned_certificate_timestampsareturnutyping.Iterable[SignedCertificateTimestamp]aNoneuPrecertificateSignedCertificateTimestamps.__init__Ta_signed_certificate_timestampsuPrecertificateSignedCertificateTimestamps.__repr__uPrecertificateSignedCertificateTimestamps.__hash__uPrecertificateSignedCertificateTimestamps.__eq__uPrecertificateSignedCertificateTimestamps.public_bytesaSIGNED_CERTIFICATE_TIMESTAMPSuSignedCertificateTimestamps.__init__uSignedCertificateTimestamps.__repr__uSignedCertificateTimestamps.__hash__uSignedCertificateTimestamps.__eq__uSignedCertificateTimestamps.public_bytesaNONCEDanonceareturnabytesaNoneuOCSPNonce.__init__uOCSPNonce.__eq__uOCSPNonce.__hash__uOCSPNonce.__repr__uOCSPNonce.nonceuOCSPNonce.public_bytesaACCEPTABLE_RESPONSESDaresponsesareturnutyping.Iterable[ObjectIdentifier]aNoneuOCSPAcceptableResponses.__init__uOCSPAcceptableResponses.__eq__uOCSPAcceptableResponses.__hash__uOCSPAcceptableResponses.__repr__Dareturnutyping.Iterator[ObjectIdentifier]uOCSPAcceptableResponses.__iter__uOCSPAcceptableResponses.public_bytesaISSUING_DISTRIBUTION_POINTDafull_namearelative_nameaonly_contains_user_certsaonly_contains_ca_certsaonly_some_reasonsaindirect_crlaonly_contains_attribute_certsareturnutyping.Optional[typing.Iterable[GeneralName]]utyping.Optional[RelativeDistinguishedName]aboolputyping.Optional[typing.FrozenSet[ReasonFlags]]aboolpaNoneuIssuingDistributionPoint.__init__uIssuingDistributionPoint.__repr__uIssuingDistributionPoint.__eq__uIssuingDistributionPoint.__hash__uIssuingDistributionPoint.full_nameuIssuingDistributionPoint.relative_nameuIssuingDistributionPoint.only_contains_user_certsuIssuingDistributionPoint.only_contains_ca_certsuIssuingDistributionPoint.only_some_reasonsuIssuingDistributionPoint.indirect_crluIssuingDistributionPoint.only_contains_attribute_certsuIssuingDistributionPoint.public_bytesaMS_CERTIFICATE_TEMPLATEDatemplate_idamajor_versionaminor_versionareturnaObjectIdentifierutyping.Optional[int]utyping.Optional[int]aNoneuMSCertificateTemplate.__init__uMSCertificateTemplate.template_iduMSCertificateTemplate.major_versionuMSCertificateTemplate.minor_versionuMSCertificateTemplate.__repr__uMSCertificateTemplate.__eq__uMSCertificateTemplate.__hash__uMSCertificateTemplate.public_bytesDaoidavalueareturnaObjectIdentifierabytesaNoneuUnrecognizedExtension.__init__uUnrecognizedExtension.oiduUnrecognizedExtension.valueuUnrecognizedExtension.__repr__uUnrecognizedExtension.__eq__uUnrecognizedExtension.__hash__uUnrecognizedExtension.public_bytesucryptography\x509\extensions.pyTa.0wiatypeTa.0anameTa.0wrTa.0asctTa.0wxu<module cryptography.x509.extensions>Ta__class__TaselfaotherTaselfTaselfaaciTaselfafnacrl_issuerTaselfapqTaselfapsaesTaselfaaccess_methodaaccess_locationTaselfacaapath_lengthTaselfacrl_numberTaselfadescriptionsTaselfadigestT
aselfadigital_signatureacontent_commitmentakey_enciphermentadata_enciphermentakey_agreementakey_cert_signacrl_signaencipher_onlyadecipher_onlyTaselfadistribution_pointsTaselfaextensionsTaselfafeaturesTaselfafull_namearelative_nameaonly_contains_user_certsaonly_contains_ca_certsaonly_some_reasonsaindirect_crlaonly_contains_attribute_certsacrl_constraintsTaselfafull_namearelative_nameareasonsacrl_issuerTaselfageneral_namesTaselfainvalidity_dateTaselfakey_identifieraauthority_cert_issueraauthority_cert_serial_numberTaselfamsgaoida__class__TaselfanonceTaselfanotice_referenceaexplicit_textTaselfaoidacriticalavalueTaselfaoidavalueTaselfaorganizationanotice_numbersTaselfapermitted_subtreesaexcluded_subtreesTaselfapoliciesTaselfapolicy_identifierapolicy_qualifiersTaselfareasonTaselfarequire_explicit_policyainhibit_policy_mappingTaselfaresponsesTaselfasigned_certificate_timestampsTaselfaskip_certsTaselfatemplate_idamajor_versionaminor_versionTaselfausagesTaselfaencipher_onlyadecipher_onlyTapublic_keyadataaserializedTafield_namealen_methodaiter_methodagetitem_methodTaselfatreeTaclsapublic_keyadigestTaclsaskiTaclsapublic_keyTaselfaextclassaextTaselfaoidaextTaselfatypeTaselfatypeaobjsTaselfaidxafield_nameTafield_nameTaselfafield_name.cryptography.x509.general_name
aencodeTaasciiuRFC822Name values should be passed as an A-label string. This means unicode characters should be encoded via a library like idna.uvalue must be stringaparseaddrutoo many values to unpack (expected 2)uInvalid rfc822name valuea_valuea__new__u<RFC822Name(value=avalueuu)>aRFC822NameuDNSName values should be passed as an A-label string. This means unicode characters should be encoded via a library like idna.u<DNSName(value=aDNSNameuURI values should be passed as an A-label string. This means unicode characters should be encoded via a library like idna.u<UniformResourceIdentifier(value=aUniformResourceIdentifieraNameuvalue must be a Nameu<DirectoryName(value=aDirectoryNameaObjectIdentifieruvalue must be an ObjectIdentifieru<RegisteredID(value=aRegisteredIDaipaddressaIPv4AddressaIPv6AddressaIPv4NetworkaIPv6Networkuvalue must be an instance of ipaddress.IPv4Address, ipaddress.IPv6Address, ipaddress.IPv4Network, or ipaddress.IPv6Networkapackedanetwork_addressanetmasku<IPAddress(value=aIPAddressutype_id must be an ObjectIdentifieruvalue must be a binary stringa_type_idu<OtherName(type_id={}, value={!r})>atype_idaOtherNamea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypinguemail.utilsTaparseaddrucryptography.x509.nameTaNameucryptography.x509.oidTaObjectIdentifieraUniona_IPAddressTypesTEExceptiona__prepare__aUnsupportedGeneralNameTypea__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.general_namea__module__a__qualname__a__orig_bases__ametaclassaABCMetaTaGeneralNameTaGeneralNameapropertyaabstractmethodDareturnutyping.Anyu
        Return the value of the object
        uGeneralName.valueTDavalueareturnastraNonea__init__uRFC822Name.__init__DareturnastruRFC822Name.valueaclassmethodDavalueareturnastraRFC822Namea_init_without_validationuRFC822Name._init_without_validationa__repr__uRFC822Name.__repr__Daotherareturnaobjectaboola__eq__uRFC822Name.__eq__Dareturnainta__hash__uRFC822Name.__hash__uDNSName.__init__uDNSName.valueDavalueareturnastraDNSNameuDNSName._init_without_validationuDNSName.__repr__uDNSName.__eq__uDNSName.__hash__uUniformResourceIdentifier.__init__uUniformResourceIdentifier.valueDavalueareturnastraUniformResourceIdentifieruUniformResourceIdentifier._init_without_validationuUniformResourceIdentifier.__repr__uUniformResourceIdentifier.__eq__uUniformResourceIdentifier.__hash__DavalueareturnaNameaNoneuDirectoryName.__init__DareturnaNameuDirectoryName.valueuDirectoryName.__repr__uDirectoryName.__eq__uDirectoryName.__hash__DavalueareturnaObjectIdentifieraNoneuRegisteredID.__init__DareturnaObjectIdentifieruRegisteredID.valueuRegisteredID.__repr__uRegisteredID.__eq__uRegisteredID.__hash__Davalueareturna_IPAddressTypesaNoneuIPAddress.__init__Dareturna_IPAddressTypesuIPAddress.valueDareturnabytesa_packeduIPAddress._packeduIPAddress.__repr__uIPAddress.__eq__uIPAddress.__hash__Datype_idavalueareturnaObjectIdentifierabytesaNoneuOtherName.__init__uOtherName.type_iduOtherName.valueuOtherName.__repr__uOtherName.__eq__uOtherName.__hash__ucryptography\x509\general_name.pyu<module cryptography.x509.general_name>Ta__class__TaselfaotherTaselfTaselfatype_idavalueTaselfavalueTaselfavalueanameaaddressTaclsavalueainstance.cryptography.x509.name1Euw#abinasciiahexlifyadecodeTautf8areplaceTw\u\\Tw"u\"Tw+u\+Tw,u\,Tw;u\;Tw<u\<Tw>u\>Twu\00lTw#w w\lw :nlnu\ uEscape special characters in RFC4514 Distinguished Name value.asubu_unescape_dn_value.<locals>.suba_RFC4514NameParsera_PAIR_REagroupTllaObjectIdentifieruoid argument must be an ObjectIdentifier instance.a_ASN1TypeaBitStringaNameOIDaX500_UNIQUE_IDENTIFIERuoid must be X500_UNIQUE_IDENTIFIER for BitString type.uvalue must be bytes for BitStringuvalue argument must be a straCOUNTRY_NAMEaJURISDICTION_COUNTRY_NAMEaencodeuCountry name must be a 2 character country codeawarningsawarnuCountry names should be two characters, but the attribute is {} characters in length.Dastacklevella_NAMEOID_DEFAULT_TYPEagetaUTF8Stringu_type must be from the _ASN1Type enumaoida_oidavaluea_valuea_typea_NAMEOID_TO_NAMEadotted_stringu
        The short attribute name (for example "CN") if available,
        otherwise the OID dotted string.
        arfc4514_attribute_namew=a_escape_dn_valueu
        Format as RFC4514 Distinguished Name string.

        Use short attribute name if available, otherwise fall back to OID
        dotted string.
        aNameAttributeu<NameAttribute(oid={0.oid}, value={0.value!r})>ua relative distinguished name cannot be emptyuattributes must be an iterable of NameAttributea_attributesa_attribute_setuduplicate attributes are not allowedu<genexpr>uRelativeDistinguishedName.__init__.<locals>.<genexpr>w+u
        Format as RFC4514 Distinguished Name string.

        Within each RDN, attributes are joined by '+', although that is rarely
        used in certificates.
        arfc4514_stringaattr_name_overridesuRelativeDistinguishedName.rfc4514_string.<locals>.<genexpr>aRelativeDistinguishedNameu<RelativeDistinguishedName(u)>atypingacastaListuattributes must be a list of NameAttribute or a list RelativeDistinguishedNameuName.__init__.<locals>.<genexpr>aparsew,u
        Format as RFC4514 Distinguished Name string.
        For example 'CN=foobar.com,O=Foo Corp,C=US'

        An X.509 name is a two-level structure: a list of sets of attributes.
        Each list element is separated by ',' and within each list element, set
        elements are separated by '+'. The latter is almost never used in
        real world certificates. According to RFC4514 section 2.1 the
        RDNSequence must be reversed when converting to string representation.
        uName.rfc4514_string.<locals>.<genexpr>arust_x509aencode_name_bytesaNameaselfa__iter__uName.__iter__uName.__len__.<locals>.<genexpr>u<Name(uName.__repr__.<locals>.<genexpr>a_dataa_idxa_attr_name_overridesa_has_dataa_peeklamatchTaposa_parse_rdna_read_charTw,ardnsaappendu
        Parses the `data` string and converts it to a Name.

        According to RFC4514 section 2.1 the RDNSequence must be
        reversed when converting to string representation. So, when
        we parse it, we need to reverse again to get the RDNs on the
        correct order.
        a_parse_naTw+anasa_read_rea_OID_REa_DESCR_REa_NAME_TO_NAMEOIDaoid_valueTw=a_HEXSTRING_REaunhexlify:lnna_STRING_REa_unescape_dn_valuea__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsareasysacryptographyTautilsautilsucryptography.hazmat.bindings._rustTax509ax509ucryptography.x509.oidTaNameOIDaObjectIdentifieraEnuma__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.namea__module__a__qualname__llaOctetStringllaNumericStringlaPrintableStringlaT61StringlaIA5StringlaUTCTimelaGeneralizedTimelaVisibleStringlaUniversalStringlaBMPStringa__orig_bases__a_ASN1_TYPE_TO_ENUMaSERIAL_NUMBERaDN_QUALIFIERaEMAIL_ADDRESSaDOMAIN_COMPONENTutyping.Dict[ObjectIdentifier, _ASN1Type]aMappinga_OidNameMapa_NameOidMapaCOMMON_NAMEaCNaLOCALITY_NAMEwLaSTATE_OR_PROVINCE_NAMEaSTaORGANIZATION_NAMEwOaORGANIZATIONAL_UNIT_NAMEaOUwCaSTREET_ADDRESSaSTREETaDCaUSER_IDaUIDaitemsutoo many values to unpack (expected 2)Davalareturnutyping.Union[str, bytes]astrDavalareturnastrpTnDa_validatetDaoidavaluea_typea_validateareturnaObjectIdentifierutyping.Union[str, bytes]utyping.Optional[_ASN1Type]aboolaNonea__init__uNameAttribute.__init__DareturnaObjectIdentifieruNameAttribute.oidDareturnutyping.Union[str, bytes]uNameAttribute.valueDareturnastruNameAttribute.rfc4514_attribute_nameDaattr_name_overridesareturnutyping.Optional[_OidNameMap]astruNameAttribute.rfc4514_stringDaotherareturnaobjectaboola__eq__uNameAttribute.__eq__Dareturnainta__hash__uNameAttribute.__hash__a__repr__uNameAttribute.__repr__TDaattributesutyping.Iterable[NameAttribute]uRelativeDistinguishedName.__init__DaoidareturnaObjectIdentifierutyping.List[NameAttribute]aget_attributes_for_oiduRelativeDistinguishedName.get_attributes_for_oiduRelativeDistinguishedName.rfc4514_stringuRelativeDistinguishedName.__eq__uRelativeDistinguishedName.__hash__Dareturnutyping.Iterator[NameAttribute]uRelativeDistinguishedName.__iter__a__len__uRelativeDistinguishedName.__len__uRelativeDistinguishedName.__repr__aoverloadDaattributesareturnutyping.Iterable[NameAttribute]aNoneuName.__init__Daattributesareturnutyping.Iterable[RelativeDistinguishedName]aNoneDaattributesareturnutyping.Iterable[typing.Union[NameAttribute, RelativeDistinguishedName]]aNoneDadataaattr_name_overridesareturnastrutyping.Optional[_NameOidMap]aNameafrom_rfc4514_stringuName.from_rfc4514_stringuName.rfc4514_stringuName.get_attributes_for_oidDareturnutyping.List[RelativeDistinguishedName]uName.rdnsDabackendareturnutyping.Anyabytesapublic_bytesuName.public_bytesuName.__eq__uName.__hash__uName.__len__uName.__repr__acompileTu(0|([1-9]\d*))(\.(0|([1-9]\d*)))+Tu[a-zA-Z][a-zA-Z\d-]*u\\([\\ #=\"\+,;<>]|[\da-zA-Z]{2})a_PAIRu[\x01-\x1f\x21\x24-\x2A\x2D-\x3A\x3D\x3F-\x5B\x5D-\x7F]a_LUTF1u[\x01-\x21\x23-\x2A\x2D-\x3A\x3D\x3F-\x5B\x5D-\x7F]a_SUTF1u[\x01-\x1F\x21\x23-\x2A\x2D-\x3A\x3D\x3F-\x5B\x5D-\x7F]a_TUTF1u[\x80-amaxunicodew]a_UTFMBw|a_LEADCHARa_STRINGCHARa_TRAILCHARu
        (
            (u)
            (
                (u)*
                (u)
            )?
        )?
        aVERBOSETu#([\da-zA-Z]{2})+Dadataaattr_name_overridesareturnastra_NameOidMapaNoneu_RFC4514NameParser.__init__Dareturnaboolu_RFC4514NameParser._has_dataDareturnutyping.Optional[str]u_RFC4514NameParser._peekDachareturnastraNoneu_RFC4514NameParser._read_charu_RFC4514NameParser._read_reDareturnaNameu_RFC4514NameParser.parseDareturnaRelativeDistinguishedNameu_RFC4514NameParser._parse_rdnDareturnaNameAttributeu_RFC4514NameParser._parse_naucryptography\x509\name.pyTa.0aattrTa.0aattraattr_name_overridesTa.0ardnTa.0wxu<module cryptography.x509.name>Ta__class__TaselfaotherTaselfTaselfaattributesTaselfadataaattr_name_overridesTaselfaoidavaluea_typea_validateac_lenTaselfardnaavaTaselfardnsTavalTaselfaoid_valueanameaoidavaluearaw_valueTaselfanasTaselfachTaselfapatamatchavalTavalasubTaclsadataaattr_name_overridesTaselfaoidTaselfabackendTaselfaattr_name_overridesTaselfaattr_name_overridesaattr_nameTwmaval.cryptography.x509.oidTa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucryptography.hazmat._oidTaAttributeOIDaAuthorityInformationAccessOIDaCertificatePoliciesOIDaCRLEntryExtensionOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaObjectIdentifieraOCSPExtensionOIDaSignatureAlgorithmOIDaSubjectInformationAccessOIDlaAttributeOIDaAuthorityInformationAccessOIDaCertificatePoliciesOIDaCRLEntryExtensionOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaObjectIdentifieraOCSPExtensionOIDaSignatureAlgorithmOIDaSubjectInformationAccessOIDLaAttributeOIDaAuthorityInformationAccessOIDaCRLEntryExtensionOIDaCertificatePoliciesOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaOCSPExtensionOIDaObjectIdentifieraSignatureAlgorithmOIDaSubjectInformationAccessOIDa__all__ucryptography\x509\oid.pyu<module cryptography.x509.oid>u.google.auth._cloud_sdk~Paosaenvironaenvironment_varsaCLOUD_SDK_CONFIG_DIRanameantapathajoinaexpanduserTw~u.configa_CONFIG_DIRECTORYa_WINDOWS_CONFIG_ROOT_ENV_VARagetTaSystemDriveuC:w\uReturns the absolute path the the Cloud SDK's configuration directory.

    Returns:
        str: The Cloud SDK config path.
    aget_config_patha_CREDENTIALS_FILENAMEuGets the path to the application default credentials file.

    The path may or may not exist.

    Returns:
        str: The full path to application default credentials.
    adevnullwwa__enter__a__exit__asubprocessacheck_outputTastderrTnnnaoutputu Return subprocess.check_output with the given command and ignores stderr.a_CLOUD_SDK_WINDOWS_COMMANDa_run_subprocess_ignore_stderra_CLOUD_SDK_CONFIG_GET_PROJECT_COMMANDa_helpersafrom_bytesastripaCalledProcessErroruGets the project ID from the Cloud SDK.

    Returns:
        Optional[str]: The project ID.
    a_CLOUD_SDK_USER_ACCESS_TOKEN_COMMANDu--account=aSTDOUTadecodeTuutf-8aexceptionsaUserAccessTokenErroruFailed to obtain access tokenuLoad user access token with the ``gcloud auth print-access-token`` command.

    Args:
        account (Optional[str]): Account to get the access token for. If not
            specified, the current active account will be used.

    Returns:
        str: The user access token.

    Raises:
        google.auth.exceptions.UserAccessTokenError: if failed to get access
            token from gcloud.
    uHelpers for reading the Google Cloud SDK's configuration.a__doc__a__file__a__spec__aoriginahas_locationa__cached__lugoogle.authTa_helpersTaenvironment_varsTaexceptionsagcloudaAPPDATAuapplication_default_credentials.jsona_CLOUD_SDK_POSIX_COMMANDugcloud.cmdTaconfigagetaprojectTaauthuprint-access-tokenu764086051850-6qr4p6gpi6hn506pt8ejuq83di341hur.apps.googleusercontent.comaCLOUD_SDK_CLIENT_IDaget_application_default_credentials_pathaget_project_idTnaget_auth_access_tokenugoogle\auth\_cloud_sdk.pyu<module google.auth._cloud_sdk>TacommandadevnullaoutputTaconfig_pathTaaccountacommandaaccess_tokenacaught_excanew_excTadriveTacommandaprojectu.google.auth._default7@ugoogle.authTa_cloud_sdkla_cloud_sdkaclient_idaCLOUD_SDK_CLIENT_IDawarningsawarna_CLOUD_SDK_CREDENTIALS_WARNINGuDetermines if the credentials are problematic.

    Credentials from the Cloud SDK that are associated with Cloud SDK's project
    are problematic because they may not have APIs enabled and have limited
    quota. If this is the case, warn about it.
    aexceptionsaDefaultCredentialsErroruFile {} was not found.aioaopenwra__enter__a__exit__ajsonaloaduFile {} is not a valid json file.Tnnna_load_credentials_from_infoainfouLoads Google credentials from a file.

    The credentials file must be a service account key, stored authorized
    user credentials, external account credentials, or impersonated service
    account credentials.

    Args:
        filename (str): The full path to the credentials file.
        scopes (Optional[Sequence[str]]): The list of scopes for the credentials. If
            specified, the credentials will automatically be scoped if
            necessary
        default_scopes (Optional[Sequence[str]]): Default scopes passed by a
            Google client library. Use 'scopes' for user-defined scopes.
        quota_project_id (Optional[str]):  The project ID used for
            quota and billing.
        request (Optional[google.auth.transport.Request]): An object used to make
            HTTP requests. This is used to determine the associated project ID
            for a workload identity pool resource (external account credentials).
            If not specified, then it will use a
            google.auth.transport.requests.Request client to make requests.

    Returns:
        Tuple[google.auth.credentials.Credentials, Optional[str]]: Loaded
            credentials and the project ID. Authorized user credentials do not
            have the project ID information. External account credentials project
            IDs may not always be determined.

    Raises:
        google.auth.exceptions.DefaultCredentialsError: if the file is in the
            wrong format or is missing.
    uinfo object was of type {} but dict type was expected.udict objectuLoads Google credentials from a dict.

    The credentials file must be a service account key, stored authorized
    user credentials, external account credentials, or impersonated service
    account credentials.

    Args:
        info (Dict[str, Any]): A dict object containing the credentials
        scopes (Optional[Sequence[str]]): The list of scopes for the credentials. If
            specified, the credentials will automatically be scoped if
            necessary
        default_scopes (Optional[Sequence[str]]): Default scopes passed by a
            Google client library. Use 'scopes' for user-defined scopes.
        quota_project_id (Optional[str]):  The project ID used for
            quota and billing.
        request (Optional[google.auth.transport.Request]): An object used to make
            HTTP requests. This is used to determine the associated project ID
            for a workload identity pool resource (external account credentials).
            If not specified, then it will use a
            google.auth.transport.requests.Request client to make requests.

    Returns:
        Tuple[google.auth.credentials.Credentials, Optional[str]]: Loaded
            credentials and the project ID. Authorized user credentials do not
            have the project ID information. External account credentials project
            IDs may not always be determined.

    Raises:
        google.auth.exceptions.DefaultCredentialsError: if the file is in the
            wrong format or is missing.
    ugoogle.auth.credentialsTaCredentialsWithQuotaProjectaCredentialsWithQuotaProjectagetTatypea_AUTHORIZED_USER_TYPEa_get_authorized_user_credentialsutoo many values to unpack (expected 2)a_SERVICE_ACCOUNT_TYPEa_get_service_account_credentialsa_EXTERNAL_ACCOUNT_TYPEa_get_external_account_credentialsTascopesadefault_scopesarequesta_EXTERNAL_ACCOUNT_AUTHORIZED_USER_TYPEa_get_external_account_authorized_user_credentialsa_IMPERSONATED_SERVICE_ACCOUNT_TYPEa_get_impersonated_service_account_credentialsa_GDCH_SERVICE_ACCOUNT_TYPEa_get_gdch_service_account_credentialsuThe file {file} does not have a valid type. Type is {type}, expected one of {valid_types}.a_VALID_TYPESTafileatypeavalid_typesa_apply_quota_project_ida_LOGGERadebugTuChecking Cloud SDK credentials as part of auth process...aget_application_default_credentials_pathTuCloud SDK credentials not found on disk; not using themTnnaload_credentials_from_fileTaquota_project_idaget_project_iduGets the credentials and project ID from the Cloud SDK.aosaenvironaenvironment_varsaCREDENTIALSuChecking %s for explicit credentials as part of auth process...uExplicit credentials path %s is the same as Cloud SDK credentials path, fall back to Cloud SDK credentials flow...a_get_gcloud_sdk_credentialsuGets credentials from the GOOGLE_APPLICATION_CREDENTIALS environment
    variable.aLEGACY_APPENGINE_RUNTIMEapython27TuChecking for App Engine runtime as part of auth process...ugoogle.auth.app_engineaauthaapp_engineawarningTuImport of App Engine auth library failed.aCredentialsTuNo App Engine library was found so cannot authentication via App Engine Identity Credentials.uGets Google App Engine App Identity credentials and project ID.Tacompute_engineacompute_engineugoogle.auth.compute_engineTa_metadataa_metadataTuImport of Compute Engine auth library failed.agoogleatransporta_http_clientaRequestais_on_gceTarequestaTransportErrorTuAuthentication failed using Compute Engine authentication due to unavailable metadata server.uGets credentials and project ID from the GCE Metadata Service.Tasubject_token_typea_AWS_SUBJECT_TOKEN_TYPETaawsaawsafrom_infoTascopesadefault_scopesTacredential_sourceTaexecutableTapluggableapluggableTaidentity_poolaidentity_pooluFailed to load external account credentials from {}ugoogle.auth.transport.requestsarequestsuLoads external account Credentials from the parsed external account info.

    The credentials information must correspond to a supported external account
    credentials.

    Args:
        info (Mapping[str, str]): The external account info in Google format.
        filename (str): The full path to the credentials file.
        scopes (Optional[Sequence[str]]): The list of scopes for the credentials. If
            specified, the credentials will automatically be scoped if
            necessary.
        default_scopes (Optional[Sequence[str]]): Default scopes passed by a
            Google client library. Use 'scopes' for user-defined scopes.
        request (Optional[google.auth.transport.Request]): An object used to make
            HTTP requests. This is used to determine the associated project ID
            for a workload identity pool resource (external account credentials).
            If not specified, then it will use a
            google.auth.transport.requests.Request client to make requests.

    Returns:
        Tuple[google.auth.credentials.Credentials, Optional[str]]: Loaded
            credentials and the project ID. External account credentials project
            IDs may not always be determined.

    Raises:
        google.auth.exceptions.DefaultCredentialsError: if the info dictionary
            is in the wrong format or is missing required information.
    Taexternal_account_authorized_useraexternal_account_authorized_useruFailed to load external account authorized user credentials from {}ugoogle.oauth2Tacredentialsacredentialsafrom_authorized_user_infoTascopesuFailed to load authorized user credentials from {}Taservice_accountaservice_accountafrom_service_account_infouFailed to load service account credentials from {}Taproject_idTaimpersonated_credentialsaimpersonated_credentialsTasource_credentialsaInvalidTypeusource credential of type {} is not supported.Taservice_account_impersonation_urlarfindTw/afindTu:generateAccessTokenlaInvalidValueuCannot extract target principal from {}lTadelegatesuFailed to load impersonated service account credentials from {}afilenameTagdch_credentialsagdch_credentialsaServiceAccountCredentialsuFailed to load GDCH service account credentials from {}TaprojectTaapi_keyaapi_keyuReturn credentials with the given API key.awith_quota_projectawith_quota_project_from_environmentaquota_project_ida_warn_about_problematic_credentialsTawith_scopes_if_requiredawith_scopes_if_requiredaPROJECTaLEGACY_PROJECTu<lambda>udefault.<locals>.<lambda>a_get_gae_credentialsTadefault_scopesacallablearequestuNo project ID could be determined. Consider running `gcloud config set project` or setting the %s environment variablea_CLOUD_SDK_MISSING_CREDENTIALSuGets the default credentials for the current environment.

    `Application Default Credentials`_ provides an easy way to obtain
    credentials to call Google APIs for server-to-server or local applications.
    This function acquires credentials from the environment in the following
    order:

    1. If the environment variable ``GOOGLE_APPLICATION_CREDENTIALS`` is set
       to the path of a valid service account JSON private key file, then it is
       loaded and returned. The project ID returned is the project ID defined
       in the service account file if available (some older files do not
       contain project ID information).

       If the environment variable is set to the path of a valid external
       account JSON configuration file (workload identity federation), then the
       configuration file is used to determine and retrieve the external
       credentials from the current environment (AWS, Azure, etc).
       These will then be exchanged for Google access tokens via the Google STS
       endpoint.
       The project ID returned in this case is the one corresponding to the
       underlying workload identity pool resource if determinable.

       If the environment variable is set to the path of a valid GDCH service
       account JSON file (`Google Distributed Cloud Hosted`_), then a GDCH
       credential will be returned. The project ID returned is the project
       specified in the JSON file.
    2. If the `Google Cloud SDK`_ is installed and has application default
       credentials set they are loaded and returned.

       To enable application default credentials with the Cloud SDK run::

            gcloud auth application-default login

       If the Cloud SDK has an active project, the project ID is returned. The
       active project can be set using::

            gcloud config set project

    3. If the application is running in the `App Engine standard environment`_
       (first generation) then the credentials and project ID from the
       `App Identity Service`_ are used.
    4. If the application is running in `Compute Engine`_ or `Cloud Run`_ or
       the `App Engine flexible environment`_ or the `App Engine standard
       environment`_ (second generation) then the credentials and project ID
       are obtained from the `Metadata Service`_.
    5. If no credentials are found,
       :class:`~google.auth.exceptions.DefaultCredentialsError` will be raised.

    .. _Application Default Credentials: https://developers.google.com            /identity/protocols/application-default-credentials
    .. _Google Cloud SDK: https://cloud.google.com/sdk
    .. _App Engine standard environment: https://cloud.google.com/appengine
    .. _App Identity Service: https://cloud.google.com/appengine/docs/python            /appidentity/
    .. _Compute Engine: https://cloud.google.com/compute
    .. _App Engine flexible environment: https://cloud.google.com            /appengine/flexible
    .. _Metadata Service: https://cloud.google.com/compute/docs            /storing-retrieving-metadata
    .. _Cloud Run: https://cloud.google.com/run
    .. _Google Distributed Cloud Hosted: https://cloud.google.com/blog/topics            /hybrid-cloud/announcing-google-distributed-cloud-edge-and-hosted

    Example::

        import google.auth

        credentials, project_id = google.auth.default()

    Args:
        scopes (Sequence[str]): The list of scopes for the credentials. If
            specified, the credentials will automatically be scoped if
            necessary.
        request (Optional[google.auth.transport.Request]): An object used to make
            HTTP requests. This is used to either detect whether the application
            is running on Compute Engine or to determine the associated project
            ID for a workload identity pool resource (external account
            credentials). If not specified, then it will either use the standard
            library http client to make requests for Compute Engine credentials
            or a google.auth.transport.requests.Request client for external
            account credentials.
        quota_project_id (Optional[str]): The project ID used for
            quota and billing.
        default_scopes (Optional[Sequence[str]]): Default scopes passed by a
            Google client library. Use 'scopes' for user-defined scopes.
    Returns:
        Tuple[~google.auth.credentials.Credentials, Optional[str]]:
            the current environment's credentials and project ID. Project ID
            may be None, which indicates that the Project ID could not be
            ascertained from the environment.

    Raises:
        ~google.auth.exceptions.DefaultCredentialsError:
            If no credentials were found, or if the credentials found were
            invalid.
    a_get_explicit_environ_credentialsa_get_gce_credentialsuApplication default credentials.

Implements application default credentials and project ID detection.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aloggingTaenvironment_varsTaexceptionsugoogle.auth.transport._http_clientagetLoggerTugoogle.auth._defaultaauthorized_useraexternal_accountaimpersonated_service_accountagdch_service_accountuYour default credentials were not found. To set up Application Default Credentials, see https://cloud.google.com/docs/authentication/external/set-up-adc for more information.uYour application has authenticated using end user credentials from Google Cloud SDK without a quota project. You might receive a "quota exceeded" or "API not enabled" error. See the following page for troubleshooting: https://cloud.google.com/docs/authentication/adc-troubleshooting/user-creds. uurn:ietf:params:aws:token-type:aws4_requestTnnnnaload_credentials_from_dictTnaget_api_key_credentialsadefaultugoogle\auth\_default.pyTarequestaquota_project_idTaquota_project_idarequestu<module google.auth._default>Tacredentialsaquota_project_idaauthorized_user_credentialsTafilenameainfoascopesacredentialsacaught_excamsganew_excTaquota_project_ida_cloud_sdkacloud_sdk_adc_pathaexplicit_fileacredentialsaproject_idTafilenameainfoascopesadefault_scopesarequestaexternal_account_authorized_useracredentialsT
ainfoafilenameascopesadefault_scopesarequestaawsacredentialsapluggableaidentity_poolagoogleTaapp_engineacredentialsaproject_idTarequestaquota_project_idacompute_enginea_metadataaproject_idacredTaquota_project_ida_cloud_sdkacredentials_filenameacredentialsaproject_idTafilenameainfoagdch_credentialsacredentialsacaught_excamsganew_excTafilenameainfoascopesaimpersonated_credentialsasource_credentials_infoasource_credentials_typeasource_credentialsw_aimpersonation_urlastart_indexaend_indexatarget_principaladelegatesaquota_project_idacredentialsacaught_excamsganew_excTafilenameainfoascopesadefault_scopesaservice_accountacredentialsacaught_excamsganew_excT
afilenameainfoascopesadefault_scopesaquota_project_idarequestaCredentialsWithQuotaProjectacredential_typeacredentialsaproject_idTacredentialsa_cloud_sdkT
ascopesarequestaquota_project_idadefault_scopesawith_scopes_if_requiredaCredentialsWithQuotaProjectaexplicit_project_idacheckersacheckeracredentialsaproject_idaeffective_project_idagoogleTakeyaapi_keyTainfoascopesadefault_scopesaquota_project_idarequestTafilenameascopesadefault_scopesaquota_project_idarequestafile_objainfoacaught_excanew_excu.google.auth._exponential_backoff/3a_total_attemptsa_initial_wait_secondsa_current_wait_in_secondsa_randomization_factora_multiplierla_backoff_countlarandomauniformatimeasleepuThe total amount of backoff attempts that will be made.uThe current amount of backoff attempts that have been made.a__doc__a__file__a__spec__aoriginahas_locationa__cached__la_DEFAULT_RETRY_TOTAL_ATTEMPTSf?a_DEFAULT_INITIAL_INTERVAL_SECONDSf?a_DEFAULT_RANDOMIZATION_FACTORf@a_DEFAULT_MULTIPLIERugoogle.auth._exponential_backoffa__module__uAn exponential backoff iterator. This can be used in a for loop to
    perform requests with exponential backoff.

    Args:
        total_attempts Optional[int]:
            The maximum amount of retries that should happen.
            The default value is 3 attempts.
        initial_wait_seconds Optional[int]:
            The amount of time to sleep in the first backoff. This parameter
            should be in seconds.
            The default value is 1 second.
        randomization_factor Optional[float]:
            The amount of jitter that should be in each backoff. For example,
            a value of 0.1 will introduce a jitter range of 10% to the
            current backoff period.
            The default value is 0.1.
        multiplier Optional[float]:
            The backoff multipler. This adjusts how much each backoff will
            increase. For example a value of 2.0 leads to a 200% backoff
            on each attempt. If the initial_wait is 1.0 it would look like
            this sequence [1.0, 2.0, 4.0, 8.0].
            The default value is 2.0.
    aExponentialBackoffa__qualname__a__init__uExponentialBackoff.__init__a__iter__uExponentialBackoff.__iter__a__next__uExponentialBackoff.__next__atotal_attemptsuExponentialBackoff.total_attemptsabackoff_countuExponentialBackoff.backoff_countTugoogle\auth\_exponential_backoff.pyu<module google.auth._exponential_backoff>Ta__class__Taselfatotal_attemptsainitial_wait_secondsarandomization_factoramultiplierTaselfTaselfajitter_varianceajitteru.google.auth._helpersLiuDecorator implementation.

        Args:
            method (Callable): The method to copy the docstring to.

        Returns:
            Callable: the same method passed in with an updated docstring.

        Raises:
            google.auth.exceptions.InvalidOperation: if the method already has a docstring.
        adecoratorucopy_docstring.<locals>.decoratoruDecorator that copies a method's docstring from another class.

    Args:
        source_class (type): The class that has the documented method.

    Returns:
        Callable: A decorator that will copy the docstring of the same
            named method in the source class to the decorated method.
    a__doc__aexceptionsaInvalidOperationTuMethod already has a docstring.asource_classa__name__aMessageucontent-typeaget_content_typeuParse a 'content-type' header value to get just the plain media-type (without parameters).

    This is done using the class Message from email.message as suggested in PEP 594
        (because the cgi is now deprecated and will be removed in python 3.13,
        see https://peps.python.org/pep-0594/#cgi).

    Args:
        header_value (str): The value of a 'content-type' header as a string.

    Returns:
        str: A string with just the lowercase media-type from the parsed 'content-type' header.
            If the provided content-type is not parsable, returns 'text/plain',
            the default value for textual files.
    adatetimeanowatimezoneautcareplaceTnTatzinfouReturns the current UTC datetime.

    Returns:
        datetime: The current time in UTC.
    acalendaratimegmautctimetupleuConvert a datetime object to the number of seconds since the UNIX epoch.

    Args:
        value (datetime): The datetime to convert.

    Returns:
        int: The number of seconds since the UNIX epoch.
    aencodeaInvalidValueu{0!r} could not be converted to bytesuConverts a string value to bytes, if necessary.

    Args:
        value (Union[str, bytes]): The value to be converted.
        encoding (str): The encoding to use to convert unicode to bytes.
            Defaults to "utf-8".

    Returns:
        bytes: The original value converted to bytes (if unicode) or as
            passed in if it started out as bytes.

    Raises:
        google.auth.exceptions.InvalidValue: If the value could not be converted to bytes.
    adecodeTuutf-8u{0!r} could not be converted to unicodeuConverts bytes to a string value, if necessary.

    Args:
        value (Union[str, bytes]): The value to be converted.

    Returns:
        str: The original value converted to unicode (if bytes) or as passed in
            if it started out as unicode.

    Raises:
        google.auth.exceptions.InvalidValue: If the value could not be converted to unicode.
    aurllibaparseaurlparseaparse_qsaqueryaupdateaitemsutoo many values to unpack (expected 2)aurlencodeDadoseqta_replaceTaqueryaurlunparseuUpdates a URL's query parameters.

    Replaces any current values if they are already present in the URL.

    Args:
        url (str): The URL to update.
        params (Mapping[str, str]): A mapping of query parameter
            keys to values.
        remove (Sequence[str]): Parameters to remove from the query string.

    Returns:
        str: The URL with updated query parameters.

    Examples:

        >>> url = 'http://example.com?a=1'
        >>> update_query(url, {'a': '2'})
        http://example.com?a=2
        >>> update_query(url, {'b': '3'})
        http://example.com?a=1&b=3
        >> update_query(url, {'b': '3'}, remove=['a'])
        http://example.com?b=3

    w uConverts scope value to a string suitable for sending to OAuth 2.0
    authorization servers.

    Args:
        scopes (Sequence[str]): The sequence of scopes to convert.

    Returns:
        str: The scopes formatted as a single string.
    asplitTw uConverts stringifed scopes value to a list.

    Args:
        scopes (Union[Sequence, str]): The string of space-separated scopes
            to convert.
    Returns:
        Sequence(str): The separated scopes.
    ato_bytesd=labase64aurlsafe_b64decodeuDecodes base64 strings lacking padding characters.

    Google infrastructure tends to omit the base64 padding characters.

    Args:
        value (Union[str, bytes]): The encoded value.

    Returns:
        bytes: The decoded value
    aurlsafe_b64encodearstripTd=uEncodes base64 strings removing any padding characters.

    `rfc 7515`_ defines Base64url to NOT include any padding
    characters, but the stdlib doesn't do that by default.

    _rfc7515: https://tools.ietf.org/html/rfc7515#page-6

    Args:
        value (Union[str|bytes]): The bytes-like value to encode

    Returns:
        Union[str|bytes]: The encoded value
    uHelper functions for commonly used utilities.a__file__a__spec__aoriginahas_locationa__cached__luemail.messageTaMessageasysugoogle.authTaexceptionsatimedeltaTll-TaminutesasecondsaREFRESH_THRESHOLDacopy_docstringaparse_content_typeautcnowadatetime_to_secsafrom_bytesaupdate_queryascopes_to_stringastring_to_scopesapadded_urlsafe_b64decodeaunpadded_urlsafe_b64encodeuCheck if the Python interpreter is Python 2 or 3.

    Returns:
        bool: True if the Python interpreter is Python 3 and False otherwise.
    ais_python_3ugoogle\auth\_helpers.pyu<module google.auth._helpers>Tasource_classadecoratorTavalueTamethodasource_methodasource_classTasource_classTavaluearesultTavalueab64stringapaddedTaheader_valuewmTascopesTavalueaencodingaresultTaurlaparamsaremoveapartsaquery_paramsanew_queryanew_partsTanowu.google.auth._refresh_workertRa_workerathreadingaLocka_lockuInitializes the manager.weaInvalidValueTuUnable to start refresh. cred and request must be valid and instantiated objects.a__enter__a__exit__a_error_infoais_aliveaRefreshThreadacopyadeepcopyTacredarequestastartTnnnuStarts a refresh thread for the given credentials.
        The credentials are refreshed using the request parameter.
        request and cred MUST not be None

        Returns True if a background refresh was kicked off. False otherwise.

        Args:
            cred: A credentials object.
            request: A request object.
        Returns:
          bool
        u
      Removes any errors that were stored from previous background refreshes.
      uPickle helper that serializes the _lock attribute.a_keyaupdateuPickle helper that deserializes the _lock attribute.a__class__a__init__a_creda_requestuInitializes the thread.

        Args:
            cred: A Credential object to refresh.
            request: A Request object used to perform a credential refresh.
            **kwargs: Additional keyword arguments.
        arefresha_LOGGERaerroruBackground refresh failed due to: uu
        Perform the credential refresh.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__laloggingugoogle.auth.exceptionsaauthaexceptionsagetLoggerTugoogle.auth._refresh_workerugoogle.auth._refresh_workera__module__u
    Organizes exactly one background job that refresh a token.
    aRefreshThreadManagera__qualname__uRefreshThreadManager.__init__astart_refreshuRefreshThreadManager.start_refreshaclear_erroruRefreshThreadManager.clear_errora__getstate__uRefreshThreadManager.__getstate__a__setstate__uRefreshThreadManager.__setstate__TaThreada__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>u
    Thread that refreshes credentials.
    uRefreshThread.__init__arunuRefreshThread.runa__orig_bases__ugoogle\auth\_refresh_worker.pyu<module google.auth._refresh_worker>Ta__class__TaselfastateTaselfTaselfacredarequestakwargsa__class__TaselfaerrTaselfacredarequest.google.auth._service_account_info})adifferenceakeysaexceptionsaMalformedErroruService account info was not in the expected format, missing fields {}.u, acryptaRSASignerafrom_service_account_infoaES256SigneruValidates a dictionary containing Google service account data.

    Creates and returns a :class:`google.auth.crypt.Signer` instance from the
    private key specified in the data.

    Args:
        data (Mapping[str, str]): The service account data
        require (Sequence[str]): List of keys required to be present in the
            info.
        use_rsa_signer (Optional[bool]): Whether to use RSA signer or EC signer.
            We use RSA signer by default.

    Returns:
        google.auth.crypt.Signer: A signer created from the private key in the
            service account file.

    Raises:
        MalformedError: if the data was in the wrong format, or if one of the
            required keys is missing.
    aioaopenwrDaencodinguutf-8a__enter__a__exit__ajsonaloadafrom_dictTarequireause_rsa_signerTnnnuReads a Google service account JSON file and returns its parsed info.

    Args:
        filename (str): The path to the service account .json file.
        require (Sequence[str]): List of keys required to be present in the
            info.
        use_rsa_signer (Optional[bool]): Whether to use RSA signer or EC signer.
            We use RSA signer by default.

    Returns:
        Tuple[ Mapping[str, str], google.auth.crypt.Signer ]: The verified
            info and a signer instance.
    uHelper functions for loading data from a Google service account file.a__doc__a__file__a__spec__aoriginahas_locationa__cached__lugoogle.authTacryptTaexceptionsTntafrom_filenameugoogle\auth\_service_account_info.pyu<module google.auth._service_account_info>Tadataarequireause_rsa_signerakeys_neededamissingasignerTafilenamearequireause_rsa_signerajson_fileadatau.google.auth.api_key9aCredentialsa__init__aexceptionsaInvalidValueTuToken must be a non-empty API key stringatokenu
        Args:
            token (str): API key string
        Raises:
            ValueError: If the provided API key is not a non-empty string.
        ux-goog-api-keyuApply the API key token to the x-goog-api-key header.
        Args:
            headers (Mapping): The HTTP request headers.
            token (Optional[str]): If specified, overrides the current access
                token.
        aapplyuPerforms credential-specific before request logic.
        Refreshes the credentials if necessary, then calls :meth:`apply` to
        apply the token to the x-goog-api-key header.
        Args:
            request (google.auth.transport.Request): The object used to make
                HTTP requests.
            method (str): The request's HTTP method or the RPC method being
                invoked.
            url (str): The request's URI or the RPC service's URI.
            headers (Mapping): The request's headers.
        uGoogle API key support.
This module provides authentication using the `API key`_.
.. _API key:
    https://cloud.google.com/docs/authentication/api-keys/
a__doc__a__file__a__spec__aoriginahas_locationa__cached__ugoogle.authTa_helpersla_helpersTacredentialsacredentialsTaexceptionsa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.api_keya__module__uAPI key credentials.
    These credentials use API key to provide authorization to applications.
    a__qualname__uCredentials.__init__apropertyaexpireduCredentials.expiredavaliduCredentials.validacopy_docstringarefreshuCredentials.refreshTnuCredentials.applyabefore_requestuCredentials.before_requesta__orig_bases__ugoogle\auth\api_key.pyu<module google.auth.api_key>Ta__class__Taselfatokena__class__TaselfaheadersatokenTaselfarequestamethodaurlaheadersTaselfTaselfarequestu.google.auth.app_engine
ca_helpersato_bytesaapp_identityasign_blobutoo many values to unpack (expected 2)aexceptionsaOSErrorTuThe App Engine APIs are not available.aget_application_iduGets the project ID for the current App Engine application.

    Returns:
        str: The project ID

    Raises:
        google.auth.exceptions.OSError: If the App Engine APIs are unavailable.
    aCredentialsa__init__a_scopesa_default_scopesa_service_account_idaSignera_signera_quota_project_idu
        Args:
            scopes (Sequence[str]): Scopes to request from the App Identity
                API.
            default_scopes (Sequence[str]): Default scopes passed by a
                Google client library. Use 'scopes' for user-defined scopes.
            service_account_id (str): The service account ID passed into
                :func:`google.appengine.api.app_identity.get_access_token`.
                If not specified, the default application service account
                ID will be used.
            quota_project_id (Optional[str]): The project ID used for quota
                and billing.

        Raises:
            google.auth.exceptions.OSError: If the App Engine APIs are unavailable.
        aget_access_tokenadatetimeautcfromtimestampatokenaexpiryaget_service_account_nameuThe service account email.uChecks if the credentials requires scopes.

        Returns:
            bool: True if there are no scopes set otherwise False.
        aquota_project_idTascopesadefault_scopesaservice_account_idaquota_project_idTascopesaservice_account_idaquota_project_idasignaservice_account_emailuGoogle App Engine standard environment support.

This module provides authentication and signing for applications running on App
Engine in the standard environment using the `App Identity API`_.


.. _App Identity API:
    https://cloud.google.com/appengine/docs/python/appidentity/
a__doc__a__file__a__spec__aoriginahas_locationa__cached__lugoogle.authTa_helpersTacredentialsacredentialsTacryptacryptTaexceptionsugoogle.appengine.apiTaapp_identitya__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.app_enginea__module__uSigns messages using the App Engine App Identity service.

    This can be used in place of :class:`google.auth.crypt.Signer` when
    running in the App Engine standard environment.
    a__qualname__apropertyuOptional[str]: The key ID used to identify this private key.

        .. warning::
           This is always ``None``. The key ID used by App Engine can not
           be reliably determined ahead of time.
        akey_iduSigner.key_idacopy_docstringuSigner.signa__orig_bases__aget_project_idaScopedaSigningaCredentialsWithQuotaProjectuApp Engine standard environment credentials.

    These credentials use the App Engine App Identity API to obtain access
    tokens.
    TnnnnuCredentials.__init__arefreshuCredentials.refreshuCredentials.service_account_emailarequires_scopesuCredentials.requires_scopesTnawith_scopesuCredentials.with_scopesawith_quota_projectuCredentials.with_quota_projectasign_bytesuCredentials.sign_bytesasigner_emailuCredentials.signer_emailasigneruCredentials.signerugoogle\auth\app_engine.pyu<module google.auth.app_engine>Ta__class__Taselfascopesadefault_scopesaservice_account_idaquota_project_ida__class__TaselfTaselfarequestascopesatokenattlaexpiryTaselfamessagew_asignatureTaselfamessageTaselfaquota_project_idTaselfascopesadefault_scopesu.google.auth.awsn?a_region_nameuInstantiates an AWS request signer used to compute authenticated signed
        requests to AWS APIs based on the AWS Signature Version 4 signing process.

        Args:
            region_name (str): The AWS region to use.
        agetTaaccess_key_idTasecret_access_keyTasecurity_tokenaurllibaparseaurlparseaurljoinaposixpathanormpathapathahostnameaschemeahttpsaexceptionsaInvalidResourceTuInvalid AWS service URLa_generate_authentication_header_mapw/a_get_canonical_querystringaqueryT
ahostacanonical_uriacanonical_querystringamethodaregionaaccess_keyasecret_keyasecurity_tokenarequest_payloadaadditional_headersaAuthorizationTaauthorization_headerahostaamz_dateTaamz_datea_AWS_DATE_HEADERaheadersa_AWS_SECURITY_TOKEN_HEADERaurlamethodadataasigned_requestuGenerates the signed request for the provided HTTP request for calling
        an AWS API. This follows the steps described at:
        https://docs.aws.amazon.com/general/latest/gr/sigv4_signing.html

        Args:
            aws_security_credentials (Mapping[str, str]): A dictionary containing
                the AWS security credentials.
            url (str): The AWS service URL containing the canonical URI and
                query string.
            method (str): The HTTP method used to call this API.
            request_payload (Optional[str]): The optional request payload if
                available.
            additional_headers (Optional[Mapping[str, str]]): The optional
                additional headers needed for the requested AWS API.

        Returns:
            Mapping[str, str]: The AWS signed request dictionary object.
        aparse_qsaquoteDasafeu-_.~aquerystring_encoded_mapaappendasortakeysaquerystring_encoded_pairsu{}={}w&uGenerates the canonical query string given a raw query string.
    Logic is based on
    https://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html

    Args:
        query (str): The raw query string.

    Returns:
        str: The canonical query string.
    ahmacanewaencodeTuutf-8ahashlibasha256adigestuCreates the HMAC-SHA256 hash of the provided message using the provided
    key.

    Args:
        key (str): The HMAC-SHA256 key to use.
        msg (str): The message to hash.

    Returns:
        str: The computed hash bytes.
    a_signaAWS4aaws4_requestuCalculates the signing key used to calculate the signature for
    AWS Signature Version 4 based on:
    https://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html

    Args:
        key (str): The AWS secret access key.
        date_stamp (str): The '%Y%m%d' date format.
        region_name (str): The AWS region.
        service_name (str): The AWS service name, eg. sts.

    Returns:
        str: The signing key bytes.
    asplitTw.la_helpersautcnowastrftimeTu%Y%m%dT%H%M%SZTu%Y%m%dafull_headersaloweradateuu{}{}:{}
acanonical_headersw;ahexdigestu{}
{}
{}
{}
{}
{}u{}/{}/{}/{}a_AWS_REQUEST_TYPEu{}
{}
{}
{}a_AWS_ALGORITHMuutf-8a_get_signing_keyu{} Credential={}/{}, SignedHeaders={}, Signature={}aauthorization_headeraauthentication_headeruGenerates the authentication header map needed for generating the AWS
    Signature Version 4 signed request.

    Args:
        host (str): The AWS service URL hostname.
        canonical_uri (str): The AWS service URL path name.
        canonical_querystring (str): The AWS service URL query string.
        method (str): The HTTP method used to call this API.
        region (str): The AWS region.
        access_key (str): The AWS access key ID.
        secret_key (str): The AWS secret access key.
        security_token (Optional[str]): The AWS security session token. This is
            available for temporary sessions.
        request_payload (Optional[str]): The optional request payload if
            available.
        additional_headers (Optional[Mapping[str, str]]): The optional
            additional headers needed for the requested AWS API.

    Returns:
        Mapping[str, str]: The AWS authentication header dictionary object.
            This contains the x-amz-date and authorization header information.
    aCredentialsa__init__aaudienceasubject_token_typeatoken_urlacredential_sourceTaenvironment_ida_environment_idTaregion_urla_region_urlTaurla_security_credentials_urlTaregional_cred_verification_urla_cred_verification_urlTaimdsv2_session_token_urla_imdsv2_session_token_urla_regiona_request_signera_target_resourceareamatchu^(aws)([\d]+)$agroupsutoo many values to unpack (expected 2)TnnaawsTuNo valid AWS 'credential_source' providedlaInvalidValueuaws version '{}' is not supported in the current build.uInstantiates an AWS workload external account credentials object.

        Args:
            audience (str): The STS audience field.
            subject_token_type (str): The subject token type.
            token_url (str): The STS endpoint URL.
            credential_source (Mapping): The credential source dictionary used
                to provide instructions on how to retrieve external credential
                to be exchanged for Google access tokens.
            args (List): Optional positional arguments passed into the underlying :meth:`~external_account.Credentials.__init__` method.
            kwargs (Mapping): Optional keyword arguments passed into the underlying :meth:`~external_account.Credentials.__init__` method.

        Raises:
            google.auth.exceptions.RefreshError: If an error is encountered during
                access token retrieval logic.
            ValueError: For invalid parameters.

        .. note:: Typically one of the helper constructors
            :meth:`from_file` or
            :meth:`from_info` are used instead of calling the constructor directly.
        a_should_use_metadata_serverDuX-aws-ec2-metadata-token-ttl-secondsu300aselfaPUTTaurlamethodaheadersastatuslaRefreshErroruUnable to retrieve AWS Session Tokena_get_regionaRequestSignera_get_security_credentialsaimdsv2_session_tokenaget_request_optionsareplaceu{region}aPOSTTaheadersux-goog-cloud-target-resourceTamethodasortedakeyavalueajsonadumpsDaseparatorsasort_keysTw,w:tuRetrieves the subject token using the credential_source object.
        The subject token is a serialized `AWS GetCallerIdentity signed request`_.

        The logic is summarized as:

        Retrieve the AWS region from the AWS_REGION or AWS_DEFAULT_REGION
        environment variable or from the AWS metadata server availability-zone
        if not found in the environment variable.

        Check AWS credentials in environment variables. If not found, retrieve
        from the AWS metadata server security-credentials endpoint.

        When retrieving AWS credentials from the metadata server
        security-credentials endpoint, the AWS role needs to be determined by
        calling the security-credentials endpoint without any argument. Then the
        credentials can be retrieved via: security-credentials/role_name

        Generate the signed request to AWS STS GetCallerIdentity action.

        Inject x-goog-cloud-target-resource into header and serialize the
        signed request. This will be the subject-token to pass to GCP STS.

        .. _AWS GetCallerIdentity signed request:
            https://cloud.google.com/iam/docs/access-resources-aws#exchange-token

        Args:
            request (google.auth.transport.Request): A callable used to make
                HTTP requests.
        Returns:
            str: The retrieved subject token.
        aosaenvironaenvironment_varsaAWS_REGIONaAWS_DEFAULT_REGIONTuUnable to determine AWS regionuX-aws-ec2-metadata-tokenaGETadecodeuUnable to retrieve AWS region:nlnuRetrieves the current AWS region from either the AWS_REGION or
        AWS_DEFAULT_REGION environment variable or from the AWS metadata server.

        Args:
            request (google.auth.transport.Request): A callable used to make
                HTTP requests.
            url (str): The AWS metadata server region URL.
            imdsv2_session_token (str): The AWS IMDSv2 session token to be added as a
                header in the requests to AWS metadata endpoint.

        Returns:
            str: The current AWS region.

        Raises:
            google.auth.exceptions.RefreshError: If an error occurs while
                retrieving the AWS region.
        aAWS_ACCESS_KEY_IDaAWS_SECRET_ACCESS_KEYaAWS_SESSION_TOKENaaccess_key_idasecret_access_keyasecurity_tokena_get_metadata_role_namea_get_metadata_security_credentialsTaAccessKeyIdTaSecretAccessKeyTaTokenuRetrieves the AWS security credentials required for signing AWS
        requests from either the AWS security credentials environment variables
        or from the AWS metadata server.

        Args:
            request (google.auth.transport.Request): A callable used to make
                HTTP requests.
            imdsv2_session_token (str): The AWS IMDSv2 session token to be added as a
                header in the requests to AWS metadata endpoint.

        Returns:
            Mapping[str, str]: The AWS security credentials dictionary object.

        Raises:
            google.auth.exceptions.RefreshError: If an error occurs while
                retrieving the AWS security credentials.
        DuContent-Typeuapplication/jsonu{}/{}ahttp_clientaOKuUnable to retrieve AWS security credentialsaloadsuRetrieves the AWS security credentials required for signing AWS
        requests from the AWS metadata server.

        Args:
            request (google.auth.transport.Request): A callable used to make
                HTTP requests.
            role_name (str): The AWS role name required by the AWS metadata
                server security_credentials endpoint in order to return the
                credentials.
            imdsv2_session_token (str): The AWS IMDSv2 session token to be added as a
                header in the requests to AWS metadata endpoint.

        Returns:
            Mapping[str, str]: The AWS metadata server security credentials
                response.

        Raises:
            google.auth.exceptions.RefreshError: If an error occurs while
                retrieving the AWS security credentials.
        TuUnable to determine the AWS metadata server security credentials endpointuUnable to retrieve AWS role nameuRetrieves the AWS role currently attached to the current AWS
        workload by querying the AWS metadata server. This is needed for the
        AWS metadata server security credentials endpoint in order to retrieve
        the AWS security credentials needed to sign requests to AWS APIs.

        Args:
            request (google.auth.transport.Request): A callable used to make
                HTTP requests.
            imdsv2_session_token (str): The AWS IMDSv2 session token to be added as a
                header in the requests to AWS metadata endpoint.

        Returns:
            str: The AWS role name.

        Raises:
            google.auth.exceptions.RefreshError: If an error occurs while
                retrieving the AWS role name.
        a_create_default_metrics_optionsasourceafrom_infouCreates an AWS Credentials instance from parsed external account info.

        Args:
            info (Mapping[str, str]): The AWS external account info in Google
                format.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.aws.Credentials: The constructed credentials.

        Raises:
            ValueError: For invalid parameters.
        afrom_fileuCreates an AWS Credentials instance from an external account json file.

        Args:
            filename (str): The path to the AWS external account json file.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.aws.Credentials: The constructed credentials.
        uAWS Credentials and AWS Signature V4 Request Signer.

This module provides credentials to access Google Cloud resources from Amazon
Web Services (AWS) workloads. These credentials are recommended over the
use of service account credentials in AWS as they do not involve the management
of long-live service account private keys.

AWS Credentials are initialized using external_account arguments which are
typically loaded from the external credentials JSON file.
Unlike other Credentials that can be initialized with a list of explicit
arguments, secrets or credentials, external account clients use the
environment and hints/guidelines provided by the external_account JSON
file to retrieve credentials and exchange them for Google access tokens.

This module also provides a basic implementation of the
`AWS Signature Version 4`_ request signing algorithm.

AWS Credentials use serialized signed requests to the
`AWS STS GetCallerIdentity`_ API that can be exchanged for Google access tokens
via the GCP STS endpoint.

.. _AWS Signature Version 4: https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html
.. _AWS STS GetCallerIdentity: https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uhttp.clientaclientuurllib.parseTaurljoinugoogle.authTa_helpersTaenvironment_varsTaexceptionsTaexternal_accountaexternal_accountuAWS4-HMAC-SHA256ux-amz-security-tokenux-amz-dateTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.awsa__module__uImplements an AWS request signer based on the AWS Signature Version 4 signing
    process.
    https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html
    a__qualname__uRequestSigner.__init__uRequestSigner.get_request_optionsa__orig_bases__uAWS external account credentials.
    This is used to exchange serialized AWS signature v4 signed requests to
    AWS STS GetCallerIdentity service for Google access tokens.
    TnuCredentials.__init__aretrieve_subject_tokenuCredentials.retrieve_subject_tokenuCredentials._get_regionuCredentials._get_security_credentialsuCredentials._get_metadata_security_credentialsuCredentials._get_metadata_role_nameuCredentials._should_use_metadata_serveruCredentials._create_default_metrics_optionsaclassmethoduCredentials.from_infouCredentials.from_fileugoogle\auth\aws.pyu<module google.auth.aws>Ta__class__Taselfaaudienceasubject_token_typeatoken_urlacredential_sourceaargsakwargsamatchesaenv_idaenv_versiona__class__Taselfaregion_nameTaselfametrics_optionsa__class__Tahostacanonical_uriacanonical_querystringamethodaregionaaccess_keyasecret_keyasecurity_tokenarequest_payloadaadditional_headersaservice_nameacurrent_timeaamz_dateadate_stampafull_headersakeyacanonical_headersaheader_keysasigned_headersapayload_hashacanonical_requestacredential_scopeastring_to_signasigning_keyasignatureaauthorization_headeraauthentication_headerTaqueryaquerystringaquerystring_encoded_mapakeyaquote_keyaitemasorted_keysaquerystring_encoded_pairsTaselfarequestaimdsv2_session_tokenaheadersaresponsearesponse_bodyTaselfarequestarole_nameaimdsv2_session_tokenaheadersaresponsearesponse_bodyacredentials_responseTaselfarequestaurlaimdsv2_session_tokenaenv_aws_regionaheadersaresponsearesponse_bodyTaselfarequestaimdsv2_session_tokenaenv_aws_access_key_idaenv_aws_secret_access_keyaenv_aws_session_tokenarole_nameacredentialsTakeyadate_stamparegion_nameaservice_nameak_dateak_regionak_serviceak_signingTaselfTakeyamsgTaclsafilenameakwargsa__class__Taclsainfoakwargsa__class__Taselfaaws_security_credentialsaurlamethodarequest_payloadaadditional_headersaaccess_keyasecret_keyasecurity_tokenaurianormalized_uriaheader_mapaheadersakeyasigned_requestT
aselfarequestaheadersaimdsv2_session_token_responseaimdsv2_session_tokenaaws_security_credentialsarequest_optionsarequest_headersaaws_signed_reqakey.google.auth.compute_engine._metadataapinguChecks to see if the code runs on Google Compute Engine

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.

    Returns:
        bool: True if the code runs on Google Compute Engine, False otherwise.
    a_GCE_PRODUCT_NAME_FILEwra__enter__a__exit__areadastripTnnnacontentastartswitha_GOOGLEuDetect Google Compute Engine residency by smbios check on Linux

    Returns:
        bool: True if the GCE product name file is detected, False otherwise.
    la_METADATA_HEADERSacopyametricsamds_pingaAPI_CLIENT_HEADERaretriesaretry_countarequesta_METADATA_IP_ROOTaGETaheadersatimeoutTaurlamethodaheadersatimeoutageta_METADATA_FLAVOR_HEADERastatusahttp_clientaOKa_METADATA_FLAVOR_VALUEaexceptionsaTransportErrora_LOGGERawarninguCompute Engine Metadata server unavailable on attempt %s of %s. Reason: %sluChecks to see if the metadata server is available.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        timeout (int): How long to wait for the metadata server to respond.
        retry_count (int): How many times to attempt connecting to metadata
            server using above timeout.

    Returns:
        bool: True if the metadata server is reachable, False otherwise.
    aurljoinaupdateatruearecursivea_helpersaupdate_queryaquery_paramsaurlaheaders_to_useTaurlamethodaheadersuFailed to retrieve {} from the Google Compute Engine metadata service. Compute Engine Metadata server unavailableafrom_bytesaresponseadataaNOT_FOUNDainfouCompute Engine Metadata server call to %s returned 404, reason: %saparse_content_typeucontent-typeuapplication/jsonajsonaloadsuReceived invalid JSON from the Google Compute Engine metadata service: {:.20}uFailed to retrieve {} from the Google Compute Engine metadata service. Status: {} Response:
{}uFetch a resource from the metadata server.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        path (str): The resource to retrieve. For example,
            ``'instance/service-accounts/default'``.
        root (str): The full path to the metadata server root.
        params (Optional[Mapping[str, str]]): A mapping of query parameter
            keys to values.
        recursive (bool): Whether to do a recursive query of metadata. See
            https://cloud.google.com/compute/docs/metadata#aggcontents for more
            details.
        retry_count (int): How many times to attempt connecting to metadata
            server using above timeout.
        headers (Optional[Mapping[str, str]]): Headers for the request.
        return_none_for_not_found_error (Optional[bool]): If True, returns None
            for 404 error instead of throwing an exception.

    Returns:
        Union[Mapping, str]: If the metadata server returns JSON, a mapping of
            the decoded JSON is return. Otherwise, the response content is
            returned as a string.

    Raises:
        google.auth.exceptions.TransportError: if an error occurred while
            retrieving metadata.
    uproject/project-iduGet the Google Cloud Project ID from the metadata server.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.

    Returns:
        str: The project ID

    Raises:
        google.auth.exceptions.TransportError: if an error occurred while
            retrieving metadata.
    uuniverse/universe_domainDareturn_none_for_not_found_errortugoogleapis.comuGet the universe domain value from the metadata server.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.

    Returns:
        str: The universe domain value. If the universe domain endpoint is not
        not found, return the default value, which is googleapis.com

    Raises:
        google.auth.exceptions.TransportError: if an error other than
            404 occurs while retrieving metadata.
    uinstance/service-accounts/{0}/DaparamsDarecursiveatrueuGet information about a service account from the metadata server.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        service_account (str): The string 'default' or a service account email
            address. The determines which service account for which to acquire
            information.

    Returns:
        Mapping: The service account's information, for example::

            {
                'email': '...',
                'scopes': ['scope', ...],
                'aliases': ['default', '...']
            }

    Raises:
        google.auth.exceptions.TransportError: if an error occurred while
            retrieving metadata.
    w,ascopesatoken_request_access_token_mdsuinstance/service-accounts/{0}/tokenTaparamsaheadersautcnowadatetimeatimedeltaaexpires_inTasecondsaaccess_tokenuGet the OAuth 2.0 access token for a service account.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        service_account (str): The string 'default' or a service account email
            address. The determines which service account for which to acquire
            an access token.
        scopes (Optional[Union[str, List[str]]]): Optional string or list of
            strings with auth scopes.
    Returns:
        Tuple[str, datetime]: The access token and its expiration.

    Raises:
        google.auth.exceptions.TransportError: if an error occurred while
            retrieving metadata.
    uProvides helper methods for talking to the Compute Engine metadata server.

See https://cloud.google.com/compute/docs/metadata for more details.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uhttp.clientaclientaloggingaosuurllib.parseTaurljoinugoogle.authTa_helpersTaenvironment_varsaenvironment_varsTaexceptionsTametricsagetLoggerTugoogle.auth.compute_engine._metadataagetenvaGCE_METADATA_HOSTa_GCE_METADATA_HOSTaGCE_METADATA_ROOTumetadata.google.internaluhttp://{}/computeMetadata/v1/a_METADATA_ROOTuhttp://{}aGCE_METADATA_IPu169.254.169.254umetadata-flavoraGoogleTaGCE_METADATA_TIMEOUTla_METADATA_DEFAULT_TIMEOUTlu/sys/class/dmi/id/product_nameais_on_gceadetect_gce_residency_linuxlaget_project_idaget_universe_domainTadefaultaget_service_account_infoTadefaultnaget_service_account_tokenugoogle\auth\compute_engine\_metadata.pyu<module google.auth.compute_engine._metadata>Tafile_objacontentTarequestapatharootaparamsarecursivearetry_countaheadersareturn_none_for_not_found_errorabase_urlaquery_paramsaheaders_to_useaurlaretriesaresponseweacontentacaught_excanew_excTarequestTarequestaservice_accountapathTarequestaservice_accountascopesaparamsametrics_headerapathatoken_jsonatoken_expiryTarequestauniverse_domainTarequestatimeoutaretry_countaretriesaheadersaresponseametadata_flavorweu.google.auth.compute_engine uGoogle Compute Engine authentication.a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_googleu\not_existinguauth\compute_engineTaNUITKA_PACKAGE_google_authu\not_existingacompute_engineTaNUITKA_PACKAGE_google_auth_compute_engineu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ugoogle.auth.compute_engine._metadataTadetect_gce_residency_linuxladetect_gce_residency_linuxugoogle.auth.compute_engine.credentialsTaCredentialsaCredentialsTaIDTokenCredentialsaIDTokenCredentialsa__all__ugoogle\auth\compute_engine\__init__.pyu<module google.auth.compute_engine>u.google.auth.compute_engine.credentialsP(aCredentialsa__init__a_service_account_emaila_quota_project_ida_scopesa_default_scopesa_universe_domain_cachedagoogle_auth_requestsaRequesta_universe_domain_requestu
        Args:
            service_account_email (str): The service account email to use, or
                'default'. A Compute Engine instance may have multiple service
                accounts.
            quota_project_id (Optional[str]): The project ID used for quota and
                billing.
            scopes (Optional[Sequence[str]]): The list of scopes for the credentials.
            default_scopes (Optional[Sequence[str]]): Default scopes passed by a
                Google client library. Use 'scopes' for user-defined scopes.
        a_metadataaget_service_account_infoTaservice_accountaemailascopesuRetrieve information about the service account.

        Updates the scopes and retrieves the full service account email.

        Args:
            request (google.auth.transport.Request): The object used to make
                HTTP requests.
        ametricsaCRED_TYPE_SA_MDSa_retrieve_infoaget_service_account_tokenTaservice_accountascopesutoo many values to unpack (expected 2)atokenaexpiryaexceptionsaTransportErroraRefreshErroruRefresh the access token and scopes.

        Args:
            request (google.auth.transport.Request): The object used to make
                HTTP requests.

        Raises:
            google.auth.exceptions.RefreshError: If the Compute Engine metadata
                service can't be reached if if the instance has not
                credentials.
        uThe service account email.

        .. note:: This is not guaranteed to be set until :meth:`refresh` has been
            called.
        a_universe_domainaget_universe_domainTaservice_account_emailaquota_project_idascopesTascopesadefault_scopesaservice_account_emailaquota_project_idaIDTokenCredentialsa_use_metadata_identity_endpointa_target_audienceaMalformedErrorTuIf use_metadata_identity_endpoint is set, token_uri, additional_claims, service_account_email, signer arguments must not be seta_token_uria_additional_claimsa_signeraiamaSignerTarequestacredentialsaservice_account_emaila_DEFAULT_TOKEN_URIu
        Args:
            request (google.auth.transport.Request): The object used to make
                HTTP requests.
            target_audience (str): The intended audience for these credentials,
                used when requesting the ID Token. The ID Token's ``aud`` claim
                will be set to this string.
            token_uri (str): The OAuth 2.0 Token URI.
            additional_claims (Mapping[str, str]): Any additional claims for
                the JWT assertion used in the authorization grant.
            service_account_email (str): Optional explicit service account to
                use to sign JWT tokens.
                By default, this is the default GCE service account.
            signer (google.auth.crypt.Signer): The signer used to sign JWTs.
                In case the signer is specified, the request argument will be
                ignored.
            use_metadata_identity_endpoint (bool): Whether to use GCE metadata
                identity endpoint. For backward compatibility the default value
                is False. If set to True, ``token_uri``, ``additional_claims``,
                ``service_account_email``, ``signer`` argument should not be set;
                otherwise ValueError will be raised.
            quota_project_id (Optional[str]): The project ID used for quota and
                billing.

        Raises:
            ValueError:
                If ``use_metadata_identity_endpoint`` is set to True, and one of
                ``token_uri``, ``additional_claims``, ``service_account_email``,
                 ``signer`` arguments is set.
        TnTatarget_audienceause_metadata_identity_endpointaquota_project_idacopyasignerTaservice_account_emailatoken_uriatarget_audienceaadditional_claimsasignerause_metadata_identity_endpointaquota_project_iduCreate a copy of these credentials with the specified target
        audience.
        Args:
            target_audience (str): The intended audience for these credentials,
            used when requesting the ID Token.
        Returns:
            google.auth.service_account.IDTokenCredentials: A new credentials
                instance.
        TuIf use_metadata_identity_endpoint is set, token_uri must not be setaquota_project_ida_helpersautcnowadatetimeatimedeltaa_DEFAULT_TOKEN_LIFETIME_SECSTasecondsaiatadatetime_to_secsaexpaissaservice_account_emailaaudatarget_audienceajwtaencodeuCreate the OAuth 2.0 assertion.
        This assertion is used during the OAuth 2.0 grant to acquire an
        ID token.
        Returns:
            bytes: The authorization grant assertion.
        aaudienceaformatafullaAPI_CLIENT_HEADERatoken_request_id_token_mdsagetuinstance/service-accounts/default/identityTaparamsaheadersa_unverified_decodeutoo many values to unpack (expected 4)autcfromtimestampuRequest ID token from metadata identity endpoint.

        Args:
            request (google.auth.transport.Request): The object used to make
                HTTP requests.

        Returns:
            Tuple[str, datetime.datetime]: The ID token and the expiry of the ID token.

        Raises:
            google.auth.exceptions.RefreshError: If the Compute Engine metadata
                service can't be reached or if the instance has no credentials.
            ValueError: If extracting expiry from the obtained ID token fails.
        a_call_metadata_identity_endpointa_make_authorization_grant_assertiona_clientaid_token_jwt_grantutoo many values to unpack (expected 3)uRefreshes the ID token.

        Args:
            request (google.auth.transport.Request): The object used to make
                HTTP requests.

        Raises:
            google.auth.exceptions.RefreshError: If the credentials could
                not be refreshed.
            ValueError: If extracting expiry from the obtained ID token fails.
        aInvalidOperationTuSigner is not available if metadata identity endpoint is usedasignuSigns the given message.

        Args:
            message (bytes): The message to sign.

        Returns:
            bytes: The message's cryptographic signature.

        Raises:
            ValueError:
                Signer is not available if metadata identity endpoint is used.
        uThe service account email.uGoogle Compute Engine credentials.

This module provides authentication for an application running on Google
Compute Engine using the Compute Engine metadata server.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__lugoogle.authTa_helpersTacredentialsacredentialsTaexceptionsTaiamTajwtTametricsugoogle.auth.compute_engineTa_metadataugoogle.auth.transportTarequestsarequestsugoogle.oauth2Ta_clientaScopedaCredentialsWithQuotaProjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.compute_engine.credentialsa__module__uCompute Engine Credentials.

    These credentials use the Google Compute Engine metadata server to obtain
    OAuth 2.0 access tokens associated with the instance's service account,
    and are also used for Cloud Run, Flex and App Engine (except for the Python
    2.7 runtime, which is supported only on older versions of this library).

    For more information about Compute Engine authentication, including how
    to configure scopes, see the `Compute Engine authentication
    documentation`_.

    .. note:: On Compute Engine the metadata server ignores requested scopes.
        On Cloud Run, Flex and App Engine the server honours requested scopes.

    .. _Compute Engine authentication documentation:
        https://cloud.google.com/compute/docs/authentication#using
    a__qualname__TadefaultnnnuCredentials.__init__uCredentials._retrieve_infoa_metric_header_for_usageuCredentials._metric_header_for_usagearefreshuCredentials.refreshapropertyuCredentials.service_account_emailarequires_scopesuCredentials.requires_scopesauniverse_domainuCredentials.universe_domainacopy_docstringawith_quota_projectuCredentials.with_quota_projectawith_scopesuCredentials.with_scopesa__orig_bases__luhttps://www.googleapis.com/oauth2/v4/tokenaSigningaCredentialsWithTokenUriuOpen ID Connect ID Token-based service account credentials.

    These credentials relies on the default service account of a GCE instance.

    ID token can be requested from `GCE metadata server identity endpoint`_, IAM
    token endpoint or other token endpoints you specify. If metadata server
    identity endpoint is not used, the GCE instance must have been started with
    a service account that has access to the IAM Cloud API.

    .. _GCE metadata server identity endpoint:
        https://cloud.google.com/compute/docs/instances/verifying-instance-identity
    TnnnnFnuIDTokenCredentials.__init__awith_target_audienceuIDTokenCredentials.with_target_audienceuIDTokenCredentials.with_quota_projectawith_token_uriuIDTokenCredentials.with_token_uriuIDTokenCredentials._make_authorization_grant_assertionuIDTokenCredentials._call_metadata_identity_endpointuIDTokenCredentials.refreshuIDTokenCredentials.signerasign_bytesuIDTokenCredentials.sign_bytesuIDTokenCredentials.service_account_emailasigner_emailuIDTokenCredentials.signer_emailugoogle\auth\compute_engine\credentials.pyu<module google.auth.compute_engine.credentials>Ta__class__Taselfarequestatarget_audienceatoken_uriaadditional_claimsaservice_account_emailasignerause_metadata_identity_endpointaquota_project_idasa_infoa__class__Taselfaservice_account_emailaquota_project_idascopesadefault_scopesa__class__T
aselfarequestapathaparamsametrics_headeraid_tokenacaught_excanew_excw_apayloadTaselfanowalifetimeaexpiryapayloadatokenTaselfTaselfarequestainfoTaselfarequestaassertionaaccess_tokenaexpiryw_Taselfarequestascopesacaught_excanew_excTaselfamessageTaselfaquota_project_idTaselfascopesadefault_scopesTaselfatarget_audienceTaselfatoken_uriu.google.auth2uGoogle Auth Library for Python.a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_googleu\not_existingaauthTaNUITKA_PACKAGE_google_authu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__alogginglasysawarningsugoogle.authTaversionaversionagoogle_auth_versionugoogle.auth._defaultTadefaultaload_credentials_from_dictaload_credentials_from_fileadefaultaload_credentials_from_dictaload_credentials_from_filea__version__a__all__aDeprecationWarninga__prepare__aPython37DeprecationWarninga__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>a__module__u
    Deprecation warning raised when Python 3.7 runtime is detected.
    Python 3.7 support will be dropped after January 1, 2024.
    a__qualname__a__orig_bases__agetLoggerTugoogle.authaaddHandleraNullHandlerugoogle\auth\__init__.pyu<module google.auth>u.google.auth.credentials3atokenaexpirya_quota_project_ida_trust_boundaryugoogleapis.coma_universe_domaina_use_non_blocking_refreshaRefreshThreadManagera_refresh_workera_helpersaREFRESH_THRESHOLDautcnowuChecks if the credentials are expired.

        Note that credentials can be invalid but not expired because
        Credentials with :attr:`expiry` set to None is considered to never
        expire.

        .. deprecated:: v2.24.0
          Prefer checking :attr:`token_state` instead.
        aexpireduChecks the validity of the credentials.

        This is True if the credentials have a :attr:`token` and the token
        is not :attr:`expired`.

        .. deprecated:: v2.24.0
          Prefer checking :attr:`token_state` instead.
        aTokenStateaINVALIDaFRESHaSTALEu
        See `:obj:`TokenState`
        uProject to use for quota and billing purposes.uThe universe domain value.uRefresh must be implementeduRefreshes the access token.

        Args:
            request (google.auth.transport.Request): The object used to make
                HTTP requests.

        Raises:
            google.auth.exceptions.RefreshError: If the credentials could
                not be refreshed.
        uBearer {}afrom_bytesaauthorizationaselfaencoded_locationsux-allowed-locationsaquota_project_idux-goog-user-projectuApply the token to the authentication header.

        Args:
            headers (Mapping): The HTTP request headers.
            token (Optional[str]): If specified, overrides the current access
                token.
        avalidarefreshatoken_stateastart_refresharequestaclear_errora_non_blocking_refresha_blocking_refreshametricsaadd_metric_headera_metric_header_for_usageaapplyuPerforms credential-specific before request logic.

        Refreshes the credentials if necessary, then calls :meth:`apply` to
        apply the token to the authentication header.

        Args:
            request (google.auth.transport.Request): The object used to make
                HTTP requests.
            method (str): The request's HTTP method or the RPC method being
                invoked.
            url (str): The request's URI or the RPC service's URI.
            headers (Mapping): The request's headers.
        uThis credential does not support quota project.uReturns a copy of these credentials with a modified quota project.

        Args:
            quota_project_id (str): The project to use for quota and
                billing purposes

        Returns:
            google.auth.credentials.Credentials: A new credentials instance.
        aosaenvironagetaenvironment_varsaGOOGLE_CLOUD_QUOTA_PROJECTawith_quota_projectuThis credential does not use token uri.uReturns a copy of these credentials with a modified token uri.

        Args:
            token_uri (str): The uri to use for fetching/exchanging tokens

        Returns:
            google.auth.credentials.Credentials: A new credentials instance.
        uThis credential does not support with_universe_domain.uReturns a copy of these credentials with a modified universe domain.

        Args:
            universe_domain (str): The universe domain to use

        Returns:
            google.auth.credentials.Credentials: A new credentials instance.
        aexceptionsaInvalidOperationTuAnonymous credentials cannot be refreshed.uRaises :class:``InvalidOperation``, anonymous credentials cannot be
        refreshed.aInvalidValueTuAnonymous credentials don't support tokens.uAnonymous credentials do nothing to the request.

        The optional ``token`` argument is not supported.

        Raises:
            google.auth.exceptions.InvalidValue: If a token was specified.
        aReadOnlyScopeda__init__a_scopesa_default_scopesuSequence[str]: the credentials' current set of scopes.uSequence[str]: the credentials' current set of default scopes.aissubsetuChecks if the credentials have the given scopes.

        .. warning: This method is not guaranteed to be accurate if the
            credentials are :attr:`~Credentials.invalid`.

        Args:
            scopes (Sequence[str]): The list of scopes to check.

        Returns:
            bool: True if the credentials have the given scopes.
        uThis class does not require scoping.uCreate a copy of these credentials with the specified scopes.

        Args:
            scopes (Sequence[str]): The list of scopes to attach to the
                current credentials.

        Raises:
            NotImplementedError: If the credentials' scopes can not be changed.
                This can be avoided by checking :attr:`requires_scopes` before
                calling this method.
        aScopedarequires_scopesacredentialsawith_scopesTadefault_scopesuCreates a copy of the credentials with scopes if scoping is required.

    This helper function is useful when you do not know (or care to know) the
    specific type of credentials you are using (such as when you use
    :func:`google.auth.default`). This function will call
    :meth:`Scoped.with_scopes` if the credentials are scoped credentials and if
    the credentials require scoping. Otherwise, it will return the credentials
    as-is.

    Args:
        credentials (google.auth.credentials.Credentials): The credentials to
            scope if necessary.
        scopes (Sequence[str]): The list of scopes to use.
        default_scopes (Sequence[str]): Default scopes passed by a
            Google client library. Use 'scopes' for user-defined scopes.

    Returns:
        google.auth.credentials.Credentials: Either a new set of scoped
            credentials, or the passed in credentials instance if no scoping
            was required.
    uSign bytes must be implemented.uSigns the given message.

        Args:
            message (bytes): The message to sign.

        Returns:
            bytes: The message's cryptographic signature.
        uSigner email must be implemented.uOptional[str]: An email address that identifies the signer.uSigner must be implemented.ugoogle.auth.crypt.Signer: The signer used to sign bytes.uInterfaces for credentials.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabclaenumTaEnumaEnumugoogle.authTa_helpersaenvironment_varsTaexceptionsTametricsugoogle.auth._refresh_workerTaRefreshThreadManagerametaclassaABCMetaa__prepare__TaCredentialsTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.credentialsa__module__uBase class for all credentials.

    All credentials have a :attr:`token` that is used for authentication and
    may also optionally set an :attr:`expiry` to indicate when the token will
    no longer be valid.

    Most credentials will be :attr:`invalid` until :meth:`refresh` is called.
    Credentials can do this automatically before the first HTTP request in
    :meth:`before_request`.

    Although the token and expiration will change as the credentials are
    :meth:`refreshed <refresh>` and used, credentials should be considered
    immutable. Various credentials will accept configuration such as private
    keys, scopes, and other options. These options are not changeable after
    construction. Some classes will provide mechanisms to copy the credentials
    with modifications such as :meth:`ScopedCredentials.with_scopes`.
    aCredentialsa__qualname__uCredentials.__init__apropertyuCredentials.expireduCredentials.validuCredentials.token_stateuCredentials.quota_project_idauniverse_domainuCredentials.universe_domainaabstractmethoduCredentials.refreshuThe x-goog-api-client header for token usage metric.

        This header will be added to the API service requests in before_request
        method. For example, "cred-type/sa-jwt" means service account self
        signed jwt access token is used in the API service request
        authorization header. Children credentials classes need to override
        this method to provide the header value, if the token usage metric is
        needed.

        Returns:
            str: The x-goog-api-client header value.
        uCredentials._metric_header_for_usageTnuCredentials.applyuCredentials._blocking_refreshuCredentials._non_blocking_refreshabefore_requestuCredentials.before_requestawith_non_blocking_refreshuCredentials.with_non_blocking_refreshTaCredentialsWithQuotaProjectuAbstract base for credentials supporting ``with_quota_project`` factoryuCredentialsWithQuotaProject.with_quota_projectawith_quota_project_from_environmentuCredentialsWithQuotaProject.with_quota_project_from_environmenta__orig_bases__aCredentialsWithTokenUriuAbstract base for credentials supporting ``with_token_uri`` factoryawith_token_uriuCredentialsWithTokenUri.with_token_uriaCredentialsWithUniverseDomainuAbstract base for credentials supporting ``with_universe_domain`` factoryawith_universe_domainuCredentialsWithUniverseDomain.with_universe_domainaAnonymousCredentialsuCredentials that do not provide any authentication information.

    These are useful in the case of services that support anonymous access or
    local service emulators that do not use credentials.
    uReturns `False`, anonymous credentials never expire.uAnonymousCredentials.expireduReturns `True`, anonymous credentials are always valid.uAnonymousCredentials.validuAnonymousCredentials.refreshuAnonymousCredentials.applyuAnonymous credentials do nothing to the request.uAnonymousCredentials.before_requestTaReadOnlyScopedTuInterface for credentials whose scopes can be queried.

    OAuth 2.0-based credentials allow limiting access using scopes as described
    in `RFC6749 Section 3.3`_.
    If a credential class implements this interface then the credentials either
    use scopes in their implementation.

    Some credentials require scopes in order to obtain a token. You can check
    if scoping is necessary with :attr:`requires_scopes`::

        if credentials.requires_scopes:
            # Scoping is required.
            credentials = credentials.with_scopes(scopes=['one', 'two'])

    Credentials that require scopes must either be constructed with scopes::

        credentials = SomeScopedCredentials(scopes=['one', 'two'])

    Or must copy an existing instance using :meth:`with_scopes`::

        scoped_credentials = credentials.with_scopes(scopes=['one', 'two'])

    Some credentials have scopes but do not allow or require scopes to be set,
    these credentials can be used as-is.

    .. _RFC6749 Section 3.3: https://tools.ietf.org/html/rfc6749#section-3.3
    uReadOnlyScoped.__init__ascopesuReadOnlyScoped.scopesadefault_scopesuReadOnlyScoped.default_scopesaabstractpropertyuTrue if these credentials require scopes to obtain an access token.
        uReadOnlyScoped.requires_scopesahas_scopesuReadOnlyScoped.has_scopesuInterface for credentials whose scopes can be replaced while copying.

    OAuth 2.0-based credentials allow limiting access using scopes as described
    in `RFC6749 Section 3.3`_.
    If a credential class implements this interface then the credentials either
    use scopes in their implementation.

    Some credentials require scopes in order to obtain a token. You can check
    if scoping is necessary with :attr:`requires_scopes`::

        if credentials.requires_scopes:
            # Scoping is required.
            credentials = credentials.create_scoped(['one', 'two'])

    Credentials that require scopes must either be constructed with scopes::

        credentials = SomeScopedCredentials(scopes=['one', 'two'])

    Or must copy an existing instance using :meth:`with_scopes`::

        scoped_credentials = credentials.with_scopes(scopes=['one', 'two'])

    Some credentials have scopes but do not allow or require scopes to be set,
    these credentials can be used as-is.

    .. _RFC6749 Section 3.3: https://tools.ietf.org/html/rfc6749#section-3.3
    uScoped.with_scopesawith_scopes_if_requiredTaSigningTuInterface for credentials that can cryptographically sign messages.aSigningasign_bytesuSigning.sign_bytesasigner_emailuSigning.signer_emailasigneruSigning.signeru
    Tracks the state of a token.
    FRESH: The token is valid. It is not expired or close to expired, or the token has no expiry.
    STALE: The token is close to expired, and should be refreshed. The token can be used normally.
    INVALID: The token is expired or invalid. The token cannot be used for a normal operation.
    lllugoogle\auth\credentials.pyu<module google.auth.credentials>Ta__class__TaselfTaselfa__class__TaselfarequestTaselfarequestause_blocking_refresh_fallbackTaselfaheadersatokenTaselfarequestamethodaurlaheadersTaselfaskewed_expiryTaselfascopesacredential_scopesTaselfamessageTaselfaexpiredais_staleTaselfaquota_project_idTaselfaquota_from_envTaselfascopesadefault_scopesTacredentialsascopesadefault_scopesTaselfatoken_uriTaselfauniverse_domainu.google.auth.crypt._cryptography_rsana_pubkeya_helpersato_bytesaverifya_PADDINGa_SHA256acryptographyaexceptionsaInvalidSignaturea_CERTIFICATE_MARKERax509aload_pem_x509_certificatea_BACKENDapublic_keyaserializationaload_pem_public_keyuConstruct an Verifier instance from a public key or public
        certificate string.

        Args:
            public_key (Union[str, bytes]): The public key in PEM format or the
                x509 public key certificate.

        Returns:
            Verifier: The constructed verifier.

        Raises:
            ValueError: If the public key can't be parsed.
        a_keya_key_idasignaload_pem_private_keyTapasswordabackendTakey_iduConstruct a RSASigner from a private key in PEM format.

        Args:
            key (Union[bytes, str]): Private key in PEM format.
            key_id (str): An optional key id used to identify the private key.

        Returns:
            google.auth.crypt._cryptography_rsa.RSASigner: The
            constructed signer.

        Raises:
            ValueError: If ``key`` is not ``bytes`` or ``str`` (unicode).
            UnicodeDecodeError: If ``key`` is ``bytes`` but cannot be decoded
                into a UTF-8 ``str``.
            ValueError: If ``cryptography`` "Could not deserialize key data."
        acopyaprivate_bytesaEncodingaPEMaPrivateFormataPKCS8aNoEncryptionTaencodingaformataencryption_algorithmuPickle helper that serializes the _key attribute.aupdateuPickle helper that deserializes the _key attribute.uRSA verifier and signer that use the ``cryptography`` library.

This is a much faster implementation than the default (in
``google.auth.crypt._python_rsa``), which depends on the pure-Python
``rsa`` library.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__ucryptography.exceptionslucryptography.hazmatTabackendsabackendsucryptography.hazmat.primitivesTahashesahashesTaserializationucryptography.hazmat.primitives.asymmetricTapaddingapaddingucryptography.x509ugoogle.authTa_helpersugoogle.auth.cryptTabaseabasec-----BEGIN CERTIFICATE-----adefault_backendaPKCS1v15aSHA256aVerifiera__prepare__aRSAVerifiera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.crypt._cryptography_rsaa__module__uVerifies RSA cryptographic signatures using public keys.

    Args:
        public_key (
                cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey):
            The public key used to verify signatures.
    a__qualname__a__init__uRSAVerifier.__init__acopy_docstringuRSAVerifier.verifyaclassmethodafrom_stringuRSAVerifier.from_stringa__orig_bases__aSigneraFromServiceAccountMixinaRSASigneruSigns messages with an RSA private key.

    Args:
        private_key (
                cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey):
            The private key to sign with.
        key_id (str): Optional key ID used to identify this private key. This
            can be useful to associate the private key with its associated
            public key or certificate.
    TnuRSASigner.__init__apropertyakey_iduRSASigner.key_iduRSASigner.signuRSASigner.from_stringa__getstate__uRSASigner.__getstate__a__setstate__uRSASigner.__setstate__ugoogle\auth\crypt\_cryptography_rsa.pyu<module google.auth.crypt._cryptography_rsa>Ta__class__TaselfastateTaselfaprivate_keyakey_idTaselfapublic_keyTaclsakeyakey_idaprivate_keyTaclsapublic_keyapublic_key_dataacertapubkeyTaselfTaselfamessageTaselfamessageasignatureu.google.auth.crypt._python_rsa0Blla_POW2abyte_valsaappenduConverts an iterable of 1s and 0s to bytes.

    Combines the list 8 at a time, treating each group of 8 bits
    as a single byte.

    Args:
        bit_list (Sequence): Sequence of 1s and 0s.

    Returns:
        bytes: The decoded bytes.
    utoo many values to unpack (expected 2)u<genexpr>u_bit_list_to_bytes.<locals>.<genexpr>a_pubkeya_helpersato_bytesarsaapkcs1averifyaVerificationErrora_CERTIFICATE_MARKERapemaload_pemaCERTIFICATEadecoderadecodeaCertificateTaasn1SpeccaexceptionsaInvalidValueuUnused bytesatbsCertificateasubjectPublicKeyInfoa_bit_list_to_bytesasubjectPublicKeyaPublicKeyaload_pkcs1aDERaPEMuConstruct an Verifier instance from a public key or public
        certificate string.

        Args:
            public_key (Union[str, bytes]): The public key in PEM format or the
                x509 public key certificate.

        Returns:
            google.auth.crypt._python_rsa.RSAVerifier: The constructed verifier.

        Raises:
            ValueError: If the public_key can't be parsed.
        a_keya_key_idasignuSHA-256afrom_bytesareadPemBlocksFromFileaStringIOa_PKCS1_MARKERa_PKCS8_MARKERakeyaPrivateKeyDaformataDERla_PKCS8_SPECagetComponentByNameTaprivateKeyaasOctetsaMalformedErrorTuNo key could be detected.Takey_iduConstruct an Signer instance from a private key in PEM format.

        Args:
            key (str): Private key in PEM format.
            key_id (str): An optional key id used to identify the private key.

        Returns:
            google.auth.crypt.Signer: The constructed signer.

        Raises:
            ValueError: If the key cannot be parsed as PKCS#1 or PKCS#8 in
                PEM format.
        uPure-Python RSA cryptography implementation.

Uses the ``rsa``, ``pyasn1`` and ``pyasn1_modules`` packages
to parse PEM files storing PKCS#1 or PKCS#8 keys as well as
certificates. There is no support for p12 files.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importaioupyasn1.codec.derTadecoderapyasn1_modulesTapemupyasn1_modules.rfc2459TaCertificateupyasn1_modules.rfc5208TaPrivateKeyInfoaPrivateKeyInfougoogle.authTa_helpersTaexceptionsugoogle.auth.cryptTabaseabaseTll@l lllllc-----BEGIN CERTIFICATE-----Tu-----BEGIN RSA PRIVATE KEY-----u-----END RSA PRIVATE KEY-----Tu-----BEGIN PRIVATE KEY-----u-----END PRIVATE KEY-----aVerifiera__prepare__aRSAVerifiera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.crypt._python_rsaa__module__uVerifies RSA cryptographic signatures using public keys.

    Args:
        public_key (rsa.key.PublicKey): The public key used to verify
            signatures.
    a__qualname__a__init__uRSAVerifier.__init__acopy_docstringuRSAVerifier.verifyaclassmethodafrom_stringuRSAVerifier.from_stringa__orig_bases__aSigneraFromServiceAccountMixinaRSASigneruSigns messages with an RSA private key.

    Args:
        private_key (rsa.key.PrivateKey): The private key to sign with.
        key_id (str): Optional key ID used to identify this private key. This
            can be useful to associate the private key with its associated
            public key or certificate.
    TnuRSASigner.__init__apropertyakey_iduRSASigner.key_iduRSASigner.signuRSASigner.from_stringugoogle\auth\crypt\_python_rsa.pyTa.0avaladigitu<module google.auth.crypt._python_rsa>Ta__class__Taselfaprivate_keyakey_idTaselfapublic_keyTabit_listanum_bitsabyte_valsastartacurr_bitsachar_valTaclsakeyakey_idamarker_idakey_bytesaprivate_keyakey_infoaremainingaprivate_key_infoTaclsapublic_keyais_x509_certaderaasn1_certaremainingacert_infoakey_bytesapubkeyTaselfTaselfamessageTaselfamessageasignatureu.google.auth.crypt.base-UuVerify must be implementeduVerifies a message against a cryptographic signature.

        Args:
            message (Union[str, bytes]): The message to verify.
            signature (Union[str, bytes]): The cryptography signature to check.

        Returns:
            bool: True if message was signed by the private key associated
            with the public key that this object was constructed with.
        uKey id must be implementeduOptional[str]: The key ID used to identify this private key.uSign must be implementeduSigns a message.

        Args:
            message (Union[str, bytes]): The message to be signed.

        Returns:
            bytes: The signature of the message.
        ufrom_string must be implementeduConstruct an Signer instance from a private key string.

        Args:
            key (str): Private key as a string.
            key_id (str): An optional key id used to identify the private key.

        Returns:
            google.auth.crypt.Signer: The constructed signer.

        Raises:
            ValueError: If the key cannot be parsed.
        a_JSON_FILE_PRIVATE_KEYaexceptionsaMalformedErrorTuThe private_key field was not found in the service account info.afrom_stringageta_JSON_FILE_PRIVATE_KEY_IDuCreates a Signer instance instance from a dictionary containing
        service account info in Google format.

        Args:
            info (Mapping[str, str]): The service account info in Google
                format.

        Returns:
            google.auth.crypt.Signer: The constructed signer.

        Raises:
            ValueError: If the info is not in the expected format.
        aioaopenwrDaencodinguutf-8a__enter__a__exit__ajsonaloadTnnnafrom_service_account_infoadatauCreates a Signer instance from a service account .json file
        in Google format.

        Args:
            filename (str): The path to the service account .json file.

        Returns:
            google.auth.crypt.Signer: The constructed signer.
        uBase classes for cryptographic signers and verifiers.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabclugoogle.authTaexceptionsaprivate_keyaprivate_key_idametaclassaABCMetaa__prepare__TaVerifierTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.crypt.basea__module__uAbstract base class for crytographic signature verifiers.aVerifiera__qualname__aabstractmethodaverifyuVerifier.verifyTTaSignerTuAbstract base class for cryptographic signers.aSigneraabstractpropertyakey_iduSigner.key_idasignuSigner.signTaFromServiceAccountMixinTuMix-in to enable factory constructors for a Signer.aFromServiceAccountMixinTnuFromServiceAccountMixin.from_stringaclassmethoduFromServiceAccountMixin.from_service_account_infoafrom_service_account_fileuFromServiceAccountMixin.from_service_account_fileugoogle\auth\crypt\base.pyu<module google.auth.crypt.base>Ta__class__Taclsafilenameajson_fileadataTaclsainfoTaclsakeyakey_idTaselfTaselfamessageTaselfamessageasignatureu.google.auth.crypt]0TOstrObytesaverifier_clsafrom_stringaverifyamessageasignatureuVerify an RSA or ECDSA cryptographic signature.

    Checks that the provided ``signature`` was generated from ``bytes`` using
    the private key associated with the ``cert``.

    Args:
        message (Union[str, bytes]): The plaintext message.
        signature (Union[str, bytes]): The cryptographic signature to check.
        certs (Union[Sequence, str, bytes]): The certificate or certificates
            to use to check the signature.
        verifier_cls (Optional[~google.auth.crypt.base.Signer]): Which verifier
            class to use for verification. This can be used to select different
            algorithms, such as RSA or ECDSA. Default value is :class:`RSAVerifier`.

    Returns:
        bool: True if the signature is valid, otherwise False.
    uCryptography helpers for verifying and signing messages.

The simplest way to verify signatures is using :func:`verify_signature`::

    cert = open('certs.pem').read()
    valid = crypt.verify_signature(message, signature, cert)

If you're going to verify many messages with the same certificate, you can use
:class:`RSAVerifier`::

    cert = open('certs.pem').read()
    verifier = crypt.RSAVerifier.from_string(cert)
    valid = verifier.verify(message, signature)

To sign messages use :class:`RSASigner` with a private key::

    private_key = open('private_key.pem').read()
    signer = crypt.RSASigner.from_string(private_key)
    signature = signer.sign(message)

The code above also works for :class:`ES256Signer` and :class:`ES256Verifier`.
Note that these two classes are only available if your `cryptography` dependency
version is at least 1.4.0.
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_googleu\not_existinguauth\cryptTaNUITKA_PACKAGE_google_authu\not_existingacryptTaNUITKA_PACKAGE_google_auth_cryptu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ugoogle.auth.cryptTabaselabaseTarsaarsaTaes256aes256LaES256SigneraES256VerifieraRSASigneraRSAVerifieraSigneraVerifiera__all__LaRSASigneraRSAVerifieraSigneraVerifieraSigneraVerifieraRSASigneraRSAVerifieraES256SigneraES256Verifieraverify_signatureugoogle\auth\crypt\__init__.pyu<module google.auth.crypt>Tamessageasignatureacertsaverifier_clsacertaverifieru.google.auth.crypt.es256a_pubkeya_helpersato_bytesais_python_3afrom_bytes:nl nDabyteorderabigautilsaint_from_bytes:l nnaencode_dss_signatureaverifyaecaECDSAahashesaSHA256acryptographyaexceptionsaInvalidSignaturea_CERTIFICATE_MARKERax509aload_pem_x509_certificatea_BACKENDapublic_keyaserializationaload_pem_public_keyuConstruct an Verifier instance from a public key or public
        certificate string.

        Args:
            public_key (Union[str, bytes]): The public key in PEM format or the
                x509 public key certificate.

        Returns:
            Verifier: The constructed verifier.

        Raises:
            ValueError: If the public key can't be parsed.
        a_keya_key_idasignadecode_dss_signatureutoo many values to unpack (expected 2)Tl abigTabyteorderaint_to_bytesl aload_pem_private_keyTapasswordabackendTakey_iduConstruct a RSASigner from a private key in PEM format.

        Args:
            key (Union[bytes, str]): Private key in PEM format.
            key_id (str): An optional key id used to identify the private key.

        Returns:
            google.auth.crypt._cryptography_rsa.RSASigner: The
            constructed signer.

        Raises:
            ValueError: If ``key`` is not ``bytes`` or ``str`` (unicode).
            UnicodeDecodeError: If ``key`` is ``bytes`` but cannot be decoded
                into a UTF-8 ``str``.
            ValueError: If ``cryptography`` "Could not deserialize key data."
        acopyaprivate_bytesaEncodingaPEMaPrivateFormataPKCS8aNoEncryptionTaencodingaformataencryption_algorithmuPickle helper that serializes the _key attribute.aupdateuPickle helper that deserializes the _key attribute.uECDSA (ES256) verifier and signer that use the ``cryptography`` library.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__Tautilslucryptography.exceptionsucryptography.hazmatTabackendsabackendsucryptography.hazmat.primitivesTahashesTaserializationucryptography.hazmat.primitives.asymmetricTaecTapaddingapaddingucryptography.hazmat.primitives.asymmetric.utilsTadecode_dss_signatureTaencode_dss_signatureucryptography.x509ugoogle.authTa_helpersugoogle.auth.cryptTabaseabasec-----BEGIN CERTIFICATE-----adefault_backendaPKCS1v15a_PADDINGaVerifiera__prepare__aES256Verifiera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.crypt.es256a__module__uVerifies ECDSA cryptographic signatures using public keys.

    Args:
        public_key (
                cryptography.hazmat.primitives.asymmetric.ec.ECDSAPublicKey):
            The public key used to verify signatures.
    a__qualname__a__init__uES256Verifier.__init__acopy_docstringuES256Verifier.verifyaclassmethodafrom_stringuES256Verifier.from_stringa__orig_bases__aSigneraFromServiceAccountMixinaES256SigneruSigns messages with an ECDSA private key.

    Args:
        private_key (
                cryptography.hazmat.primitives.asymmetric.ec.ECDSAPrivateKey):
            The private key to sign with.
        key_id (str): Optional key ID used to identify this private key. This
            can be useful to associate the private key with its associated
            public key or certificate.
    TnuES256Signer.__init__apropertyakey_iduES256Signer.key_iduES256Signer.signuES256Signer.from_stringa__getstate__uES256Signer.__getstate__a__setstate__uES256Signer.__setstate__ugoogle\auth\crypt\es256.pyu<module google.auth.crypt.es256>Ta__class__TaselfastateTaselfaprivate_keyakey_idTaselfapublic_keyTaclsakeyakey_idaprivate_keyTaclsapublic_keyapublic_key_dataacertapubkeyTaselfTaselfamessageaasn1_signaturewrwsTaselfamessageasignatureasig_byteswrwsaasn1_sigu.google.auth.crypt.rsauRSA cryptography signer and verifier.a__doc__a__file__a__spec__aoriginahas_locationa__cached__ugoogle.auth.cryptTa_cryptography_rsala_cryptography_rsaaRSASigneraRSAVerifierTa_python_rsaa_python_rsaugoogle\auth\crypt\rsa.pyu<module google.auth.crypt.rsa>u.google.auth.environment_varsRuEnvironment variables used by :mod:`google.auth`.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aGOOGLE_CLOUD_PROJECTaPROJECTaGCLOUD_PROJECTaLEGACY_PROJECTaGOOGLE_CLOUD_QUOTA_PROJECTaGOOGLE_APPLICATION_CREDENTIALSaCREDENTIALSaCLOUDSDK_CONFIGaCLOUD_SDK_CONFIG_DIRaGCE_METADATA_HOSTaGCE_METADATA_ROOTaGCE_METADATA_IPaGOOGLE_API_USE_CLIENT_CERTIFICATEaAPPENGINE_RUNTIMEaLEGACY_APPENGINE_RUNTIMEaAWS_ACCESS_KEY_IDaAWS_SECRET_ACCESS_KEYaAWS_SESSION_TOKENaAWS_REGIONaAWS_DEFAULT_REGIONugoogle\auth\environment_vars.pyu<module google.auth.environment_vars>u.google.auth.exceptions CaGoogleAuthErrora__init__aretryablea_retryableaReauthFailErroruReauthentication failed. {0}uExceptions used in the google.auth package.a__doc__a__file__a__spec__aoriginahas_locationa__cached__TEExceptionla__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.exceptionsa__module__uBase class for all google.auth errors.a__qualname__uGoogleAuthError.__init__apropertyuGoogleAuthError.retryablea__orig_bases__aTransportErroruUsed to indicate an error occurred during an HTTP request.aRefreshErroruUsed to indicate that an refreshing the credentials' access token
    failed.aUserAccessTokenErroruUsed to indicate ``gcloud auth print-access-token`` command failed.aDefaultCredentialsErroruUsed to indicate that acquiring default credentials failed.aMutualTLSChannelErroruUsed to indicate that mutual TLS channel creation is failed, or mutual
    TLS channel credentials is missing or invalid.aClientCertErroruUsed to indicate that client certificate is missing or invalid.uClientCertError.retryableaOAuthErroruUsed to indicate an error occurred during an OAuth related HTTP
    request.uAn exception for when reauth failed.TnuReauthFailError.__init__aReauthSamlChallengeFailErroruAn exception for SAML reauth challenge failures.aMalformedErroruAn exception for malformed data.aInvalidResourceuAn exception for URL error.aInvalidOperationuAn exception for invalid operation.aInvalidValueuUsed to wrap general ValueError of python.aInvalidTypeuUsed to wrap general TypeError of python.aOSErroruUsed to wrap EnvironmentError(OSError after python3.3).ugoogle\auth\exceptions.pyu<module google.auth.exceptions>Ta__class__Taselfaargsakwargsaretryablea__class__Taselfamessageakwargsa__class__Taselfu.google.auth.external_account=0aCredentialsa__init__a_audiencea_subject_token_typea_token_urla_token_info_urla_credential_sourcea_service_account_impersonation_urla_service_account_impersonation_optionsa_client_ida_client_secreta_quota_project_ida_scopesa_default_scopesa_workforce_pool_user_projecta_DEFAULT_UNIVERSE_DOMAINa_universe_domainDalocationsaencoded_locationsLu0x0a_trust_boundaryautilsaClientAuthenticationaClientAuthTypeabasica_client_authastsaClienta_sts_clienta_create_default_metrics_optionsa_metrics_optionsa_initialize_impersonated_credentialsa_impersonated_credentialsa_project_idais_workforce_poolaexceptionsaInvalidValueTuworkforce_pool_user_project should not be set for non-workforce pool credentialsuInstantiates an external account credentials object.

        Args:
            audience (str): The STS audience field.
            subject_token_type (str): The subject token type.
            token_url (str): The STS endpoint URL.
            credential_source (Mapping): The credential source dictionary.
            service_account_impersonation_url (Optional[str]): The optional service account
                impersonation generateAccessToken URL.
            client_id (Optional[str]): The optional client ID.
            client_secret (Optional[str]): The optional client secret.
            token_info_url (str): The optional STS endpoint URL for token introspection.
            quota_project_id (Optional[str]): The optional quota project ID.
            scopes (Optional[Sequence[str]]): Optional scopes to request during the
                authorization grant.
            default_scopes (Optional[Sequence[str]]): Default scopes passed by a
                Google client library. Use 'scopes' for user-defined scopes.
            workforce_pool_user_project (Optona[str]): The optional workforce pool user
                project number when the credential corresponds to a workforce pool and not
                a workload identity pool. The underlying principal must still have
                serviceusage.services.use IAM permission to use the project for
                billing/quota.
            universe_domain (str): The universe domain. The default universe
                domain is googleapis.com.
            trust_boundary (str): String representation of trust boundary meta.
        Raises:
            google.auth.exceptions.RefreshError: If the generateAccessToken
                endpoint returned an error.
        a_constructor_argsaupdatea_EXTERNAL_ACCOUNT_JSON_TYPEapopTaservice_account_impersonation_optionsnTatypeaservice_account_impersonationTascopesnTadefault_scopesnaitemsutoo many values to unpack (expected 2)uGenerates the dictionary representation of the current credentials.

        Returns:
            Mapping: The dictionary representation of the credentials. This is the
                reverse of "from_info" defined on the subclasses of this class. It is
                useful for serializing the current credentials so it can deserialized
                later.
        aaudienceasubject_token_typeatoken_urlatoken_info_urlaservice_account_impersonation_urlaservice_account_impersonation_optionsacopyadeepcopyacredential_sourceaquota_project_idaclient_idaclient_secretaworkforce_pool_user_projectascopesadefault_scopesauniverse_domainaargsarfindTw/afindTu:generateAccessTokenlluReturns the service account email if service account impersonation is used.

        Returns:
            Optional[str]: The service account email if impersonation is used. Otherwise
                None is returned.
        uReturns whether the credentials represent a user (True) or workload (False).
        Workloads behave similarly to service accounts. Currently workloads will use
        service account impersonation but will eventually not require impersonation.
        As a result, this property is more reliable than the service account email
        property in determining if the credentials represent a user or workload.

        Returns:
            bool: True if the credentials represent a user. False if they represent a
                workload.
        areacompileTu//iam\.googleapis\.com/locations/[^/]+/workforcePools/amatchuuReturns whether the credentials represent a workforce pool (True) or
        workload (False) based on the credentials' audience.

        This will also return True for impersonated workforce pool credentials.

        Returns:
            bool: True if the credentials represent a workforce pool. False if they
                represent a workload.
        uChecks if the credentials requires scopes.

        Returns:
            bool: True if there are no scopes set otherwise False.
        asplitaindexTaprojectsuOptional[str]: The project number corresponding to the workload identity pool.uOptional[str]: The STS token introspection endpoint.Tascopesadefault_scopesuretrieve_subject_token must be implementeduRetrieves the subject token using the credential_source object.

        Args:
            request (google.auth.transport.Request): A callable used to make
                HTTP requests.
        Returns:
            str: The retrieved subject token.
        aproject_numbera_CLOUD_RESOURCE_MANAGERabefore_requestaGETTaurlamethodaheadersadataadecodeTuutf-8ajsonaloadsastatuslagetTaprojectIduRetrieves the project ID corresponding to the workload identity or workforce pool.
        For workforce pool credentials, it returns the project ID corresponding to
        the workforce_pool_user_project.

        When not determinable, None is returned.

        This is introduced to support the current pattern of using the Auth library:

            credentials, project_id = google.auth.default()

        The resource may not have permission (resourcemanager.projects.get) to
        call this API or the required scopes may not be selected:
        https://cloud.google.com/resource-manager/reference/rest/v1/projects/get#authorization-scopes

        Args:
            request (google.auth.transport.Request): A callable used to make
                HTTP requests.
        Returns:
            Optional[str]: The project ID corresponding to the workload identity pool
                or workforce pool if determinable.
        arefreshatokenaexpirya_helpersautcnowauserProjectametricsaAPI_CLIENT_HEADERabyoid_metrics_headeraexchange_tokena_STS_GRANT_TYPEaretrieve_subject_tokena_STS_REQUESTED_TOKEN_TYPETarequestagrant_typeasubject_tokenasubject_token_typeaaudienceascopesarequested_token_typeaadditional_optionsaadditional_headersTaaccess_tokenTaexpires_inadatetimeatimedeltaTasecondsTaquota_project_idTatoken_urlTauniverse_domainTnDTaservice_account_impersonation_urlaservice_account_impersonation_optionsaservice_account_emailaRefreshErrorTuUnable to determine target principal from service account impersonation URL.aimpersonated_credentialsTatoken_lifetime_secondsTasource_credentialsatarget_principalatarget_scopesaquota_project_idaiam_endpoint_overridealifetimeuGenerates an impersonated credentials.

        For more details, see `projects.serviceAccounts.generateAccessToken`_.

        .. _projects.serviceAccounts.generateAccessToken: https://cloud.google.com/iam/docs/reference/credentials/rest/v1/projects.serviceAccounts/generateAccessToken

        Returns:
            impersonated_credentials.Credential: The impersonated credentials
                object.

        Raises:
            google.auth.exceptions.RefreshError: If the generateAccessToken
                endpoint returned an error.
        atrueusa-impersonationafalseametrics_optionsuconfig-lifetimeTaaudienceTasubject_token_typeTatoken_info_urlTaservice_account_impersonation_urlTaservice_account_impersonationTaclient_idTaclient_secretTacredential_sourceTaworkforce_pool_user_projectuCreates a Credentials instance from parsed external account info.

        Args:
            info (Mapping[str, str]): The external account info in Google
                format.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.identity_pool.Credentials: The constructed
                credentials.

        Raises:
            InvalidValue: For invalid parameters.
        aioaopenwrDaencodinguutf-8a__enter__a__exit__aloadafrom_infoTnnnuCreates a Credentials instance from an external account json file.

        Args:
            filename (str): The path to the external account json file.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.identity_pool.Credentials: The constructed
                credentials.
        uExternal Account Credentials.

This module provides credentials that exchange workload identity pool external
credentials for Google access tokens. This facilitates accessing Google Cloud
Platform resources from on-prem and non-Google Cloud platforms (e.g. AWS,
Microsoft Azure, OIDC identity providers), using native credentials retrieved
from the current environment without the need to copy, save and manage
long-lived service account credentials.

Specifically, this is intended to use access tokens acquired using the GCP STS
token exchange endpoint following the `OAuth 2.0 Token Exchange`_ spec.

.. _OAuth 2.0 Token Exchange: https://tools.ietf.org/html/rfc8693
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabclugoogle.authTa_helpersTacredentialsacredentialsTaexceptionsTaimpersonated_credentialsTametricsugoogle.oauth2TastsTautilsaexternal_accountuurn:ietf:params:oauth:grant-type:token-exchangeuurn:ietf:params:oauth:token-type:access_tokenuhttps://cloudresourcemanager.googleapis.com/v1/projects/ugoogleapis.comaScopedaCredentialsWithQuotaProjectaCredentialsWithTokenUriametaclassaABCMetaa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.external_accounta__module__uBase class for all external account credentials.

    This is used to instantiate Credentials for exchanging external account
    credentials for Google access token and authorizing requests to Google APIs.
    The base class implements the common logic for exchanging external account
    credentials for Google access tokens.
    a__qualname__uCredentials.__init__apropertyainfouCredentials.infouCredentials._constructor_argsuCredentials.service_account_emailais_useruCredentials.is_useruCredentials.is_workforce_poolarequires_scopesuCredentials.requires_scopesuCredentials.project_numberuCredentials.token_info_urlacopy_docstringTnawith_scopesuCredentials.with_scopesaabstractmethoduCredentials.retrieve_subject_tokenaget_project_iduCredentials.get_project_iduCredentials.refreshawith_quota_projectuCredentials.with_quota_projectawith_token_uriuCredentials.with_token_uriaCredentialsWithUniverseDomainawith_universe_domainuCredentials.with_universe_domainuCredentials._initialize_impersonated_credentialsuCredentials._create_default_metrics_optionsaclassmethoduCredentials.from_infoafrom_fileuCredentials.from_filea__orig_bases__ugoogle\auth\external_account.pyu<module google.auth.external_account>Ta__class__Taselfaaudienceasubject_token_typeatoken_urlacredential_sourceaservice_account_impersonation_urlaservice_account_impersonation_optionsaclient_idaclient_secretatoken_info_urlaquota_project_idascopesadefault_scopesaworkforce_pool_user_projectauniverse_domainatrust_boundarya__class__TaselfaargsTaselfametrics_optionsTaselfakwargsasource_credentialsatarget_principalascopesTaclsafilenameakwargsajson_fileadataTaclsainfoakwargsTaselfarequestascopesaproject_numberaheadersaurlaresponsearesponse_bodyaresponse_dataTaselfaconfig_infoTaselfTaselfwpTaselfacomponentsaproject_indexTaselfarequestascopesanowaadditional_optionsaadditional_headersaresponse_dataaexpires_inalifetimeTaselfarequestTaselfaurlastart_indexaend_indexTaselfaquota_project_idakwargsanew_credTaselfascopesadefault_scopesakwargsascopedTaselfatoken_uriakwargsanew_credTaselfauniverse_domainakwargsanew_cred.google.auth.external_account_authorized_user#aCredentialsa__init__atokenaexpirya_audiencea_refresh_tokena_token_urla_token_info_urla_client_ida_client_secreta_revoke_urla_quota_project_ida_scopesa_DEFAULT_UNIVERSE_DOMAINa_universe_domainavalidacan_refreshaexceptionsaInvalidOperationTuToken should be created with fields to make it valid (`token` and `expiry`), or fields to allow it to refresh (`refresh_token`, `token_url`, `client_id`, `client_secret`).a_client_authautilsaClientAuthenticationaClientAuthTypeabasicastsaClienta_sts_clientuInstantiates a external account authorized user credentials object.

        Args:
        token (str): The OAuth 2.0 access token. Can be None if refresh information
            is provided.
        expiry (datetime.datetime): The optional expiration datetime of the OAuth 2.0 access
            token.
        refresh_token (str): The optional OAuth 2.0 refresh token. If specified,
            credentials can be refreshed.
        audience (str): The optional STS audience which contains the resource name for the workforce
            pool and the provider identifier in that pool.
        client_id (str): The OAuth 2.0 client ID. Must be specified for refresh, can be left as
            None if the token can not be refreshed.
        client_secret (str): The OAuth 2.0 client secret. Must be specified for refresh, can be
            left as None if the token can not be refreshed.
        token_url (str): The optional STS token exchange endpoint for refresh. Must be specified for
            refresh, can be left as None if the token can not be refreshed.
        token_info_url (str): The optional STS endpoint URL for token introspection.
        revoke_url (str): The optional STS endpoint URL for revoking tokens.
        quota_project_id (str): The optional project ID used for quota and billing.
            This project may be different from the project used to
            create the credentials.
        universe_domain (Optional[str]): The universe domain. The default value
            is googleapis.com.

        Returns:
            google.auth.external_account_authorized_user.Credentials: The
                constructed credentials.
        aconstructor_argsaupdatea_EXTERNAL_ACCOUNT_AUTHORIZED_USER_JSON_TYPETatypeaisoformatwZaitemsutoo many values to unpack (expected 2)uGenerates the serializable dictionary representation of the current
        credentials.

        Returns:
            Mapping: The dictionary representation of the credentials. This is the
                reverse of the "from_info" method defined in this class. It is
                useful for serializing the current credentials so it can deserialized
                later.
        aaudiencearefresh_tokenatoken_urlatoken_info_urlaclient_idaclient_secretarevoke_urlascopesaquota_project_idauniverse_domainuOptional[str]: The OAuth 2.0 permission scopes.uOptional[str]: The OAuth 2.0 client ID.uOptional[str]: The OAuth 2.0 client secret.uOptional[str]: The STS audience which contains the resource name for the
            workforce pool and the provider identifier in that pool.uOptional[str]: The OAuth 2.0 refresh token.uOptional[str]: The STS token exchange endpoint for refresh.uOptional[str]: The STS endpoint for token info.uOptional[str]: The STS endpoint for token revocation.ajsonadumpsainfouUtility function that creates a JSON representation of this
        credential.
        Args:
            strip (Sequence[str]): Optional list of members to exclude from the
                                   generated JSON.
        Returns:
            str: A JSON representation of this instance. When converted into
            a dictionary, it can be passed to from_info()
            to create a new instance.
        aRefreshErrorTuThe credentials do not contain the necessary fields need to refresh the access token. You must specify refresh_token, token_url, client_id, and client_secret.a_helpersautcnowa_make_sts_requestagetTaaccess_tokenadatetimeatimedeltaTaexpires_inTasecondsuRefreshes the access token.

        Args:
            request (google.auth.transport.Request): The object used to make
                HTTP requests.

        Raises:
            google.auth.exceptions.RefreshError: If the credentials could
                not be refreshed.
        Taquota_project_idTatoken_urlTauniverse_domainTaexpiryastrptimearstripTwZasplitTw.lu%Y-%m-%dT%H:%M:%STaaudienceTarefresh_tokenTatoken_info_urlTaclient_idTaclient_secretTatokenTarevoke_urlTascopesuCreates a Credentials instance from parsed external account info.

        Args:
            info (Mapping[str, str]): The external account info in Google
                format.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.external_account_authorized_user.Credentials: The
                constructed credentials.

        Raises:
            ValueError: For invalid parameters.
        aioaopenwrDaencodinguutf-8a__enter__a__exit__aloadafrom_infoTnnnuCreates a Credentials instance from an external account json file.

        Args:
            filename (str): The path to the external account json file.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.external_account_authorized_user.Credentials: The
                constructed credentials.
        uExternal Account Authorized User Credentials.
This module provides credentials based on OAuth 2.0 access and refresh tokens.
These credentials usually access resources on behalf of a user (resource
owner).

Specifically, these are sourced using external identities via Workforce Identity Federation.

Obtaining the initial access and refresh token can be done through the Google Cloud CLI.

Example credential:
{
  "type": "external_account_authorized_user",
  "audience": "//iam.googleapis.com/locations/global/workforcePools/$WORKFORCE_POOL_ID/providers/$PROVIDER_ID",
  "refresh_token": "refreshToken",
  "token_url": "https://sts.googleapis.com/v1/oauth/token",
  "token_info_url": "https://sts.googleapis.com/v1/instrospect",
  "client_id": "clientId",
  "client_secret": "clientSecret"
}
a__doc__a__file__a__spec__aoriginahas_locationa__cached__ugoogle.authTa_helpersTacredentialsacredentialsTaexceptionsugoogle.oauth2TastsTautilsugoogleapis.comaexternal_account_authorized_useraCredentialsWithQuotaProjectaReadOnlyScopedaCredentialsWithTokenUria__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.external_account_authorized_usera__module__uCredentials for External Account Authorized Users.

    This is used to instantiate Credentials for exchanging refresh tokens from
    authorized users for Google access token and authorizing requests to Google
    APIs.

    The credentials are considered immutable. If you want to modify the
    quota project, use `with_quota_project` and if you want to modify the token
    uri, use `with_token_uri`.
    a__qualname__uCredentials.__init__apropertyuCredentials.infouCredentials.constructor_argsuCredentials.scopesu False: OAuth 2.0 credentials have their scopes set when
        the initial token is requested and can not be changed.arequires_scopesuCredentials.requires_scopesuCredentials.client_iduCredentials.client_secretuCredentials.audienceuCredentials.refresh_tokenuCredentials.token_urluCredentials.token_info_urluCredentials.revoke_urlu True: This credential always represents a user.ais_useruCredentials.is_useruCredentials.can_refreshTnuRetrieves the project ID corresponding to the workload identity or workforce pool.
        For workforce pool credentials, it returns the project ID corresponding to
        the workforce_pool_user_project.

        When not determinable, None is returned.

        Args:
            request (google.auth.transport.requests.Request): Request object.
                Unused here, but passed from _default.default().

        Return:
          str: project ID is not determinable for this credential type so it returns None
        aget_project_iduCredentials.get_project_idato_jsonuCredentials.to_jsonarefreshuCredentials.refreshuCredentials._make_sts_requestacopy_docstringawith_quota_projectuCredentials.with_quota_projectawith_token_uriuCredentials.with_token_uriaCredentialsWithUniverseDomainawith_universe_domainuCredentials.with_universe_domainaclassmethoduCredentials.from_infoafrom_fileuCredentials.from_filea__orig_bases__ugoogle\auth\external_account_authorized_user.pyu<module google.auth.external_account_authorized_user>Ta__class__Taselfatokenaexpiryarefresh_tokenaaudienceaclient_idaclient_secretatoken_urlatoken_info_urlarevoke_urlascopesaquota_project_idauniverse_domaina__class__TaselfarequestTaselfTaclsafilenameakwargsajson_fileadataTaclsainfoakwargsaexpiryTaselfaconfig_infoTaselfarequestanowaresponse_dataalifetimeTaselfastripTaselfaquota_project_idakwargsTaselfatoken_uriakwargsTaselfauniverse_domainakwargsu.google.auth.iam<
Oa_requesta_credentialsa_service_account_emailu
        Args:
            request (google.auth.transport.Request): The object used to make
                HTTP requests.
            credentials (google.auth.credentials.Credentials): The credentials
                that will be used to authenticate the request to the IAM API.
                The credentials must have of one the following scopes:

                - https://www.googleapis.com/auth/iam
                - https://www.googleapis.com/auth/cloud-platform
            service_account_email (str): The service account email identifying
                which service account to use to sign bytes. Often, this can
                be the same as the service account email in the given
                credentials.
        a_helpersato_bytesa_SIGN_BLOB_URIaformatDuContent-Typeuapplication/jsonajsonadumpsapayloadabase64ab64encodeadecodeTuutf-8aencodeabefore_requestaPOSTTaurlamethodabodyaheadersastatusahttp_clientaOKaexceptionsaTransportErroruError calling the IAM signBlob API: {}adataaloadsuMakes a request to the API signBlob API.a_make_signing_requestab64decodeasignedBlobuTools for using the Google `Cloud Identity and Access Management (IAM)
API`_'s auth-related functionality.

.. _Cloud Identity and Access Management (IAM) API:
    https://cloud.google.com/iam/docs/
a__doc__a__file__a__spec__aoriginahas_locationa__cached__luhttp.clientaclientugoogle.authTa_helpersTacryptacryptTaexceptionsuhttps://iamcredentials.googleapis.com/v1a_IAM_API_ROOT_URIu/projects/-/serviceAccounts/{}:signBlob?alt=jsonaSignera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.iama__module__uSigns messages using the IAM `signBlob API`_.

    This is useful when you need to sign bytes but do not have access to the
    credential's private key file.

    .. _signBlob API:
        https://cloud.google.com/iam/reference/rest/v1/projects.serviceAccounts
        /signBlob
    a__qualname__a__init__uSigner.__init__uSigner._make_signing_requestapropertyuOptional[str]: The key ID used to identify this private key.

        .. warning::
           This is always ``None``. The key ID used by IAM can not
           be reliably determined ahead of time.
        akey_iduSigner.key_idacopy_docstringasignuSigner.signa__orig_bases__ugoogle\auth\iam.pyu<module google.auth.iam>Ta__class__Taselfarequestacredentialsaservice_account_emailTaselfamessageamethodaurlaheadersabodyaresponseTaselfTaselfamessagearesponseu.google.auth.identity_poolyaCredentialsa__init__aaudienceasubject_token_typeatoken_urlacredential_sourceaMappinga_credential_source_filea_credential_source_urlagetTafileTaurlTaheadersa_credential_source_headersaformatTatypeatexta_credential_source_format_typeaenvironment_idaexceptionsaMalformedErrorTuInvalid Identity Pool credential_source field 'environment_id'ajsonuInvalid credential_source format '{}'Tasubject_token_field_namea_credential_source_field_nameTuMissing subject_token_field_name for JSON credential_source formataselfTuAmbiguous credential_source. 'file' is mutually exclusive with 'url'.TuMissing credential_source. A 'file' or 'url' must be provided.uInstantiates an external account credentials object from a file/URL.

        Args:
            audience (str): The STS audience field.
            subject_token_type (str): The subject token type.
            token_url (str): The STS endpoint URL.
            credential_source (Mapping): The credential source dictionary used to
                provide instructions on how to retrieve external credential to be
                exchanged for Google access tokens.

                Example credential_source for url-sourced credential::

                    {
                        "url": "http://www.example.com",
                        "format": {
                            "type": "json",
                            "subject_token_field_name": "access_token",
                        },
                        "headers": {"foo": "bar"},
                    }

                Example credential_source for file-sourced credential::

                    {
                        "file": "/path/to/token/file.txt"
                    }
            args (List): Optional positional arguments passed into the underlying :meth:`~external_account.Credentials.__init__` method.
            kwargs (Mapping): Optional keyword arguments passed into the underlying :meth:`~external_account.Credentials.__init__` method.

        Raises:
            google.auth.exceptions.RefreshError: If an error is encountered during
                access token retrieval logic.
            ValueError: For invalid parameters.

        .. note:: Typically one of the helper constructors
            :meth:`from_file` or
            :meth:`from_info` are used instead of calling the constructor directly.
        a_parse_token_dataa_get_token_dataa_get_file_dataa_get_url_dataaRefreshErroruFile '{}' was not found.aioaopenwrDaencodinguutf-8a__enter__a__exit__areadTnnnaGETTaurlamethodaheadersadataadecodeTuutf-8astatusluUnable to retrieve Identity Pool subject tokenutoo many values to unpack (expected 2)aloadsTEKeyErrorEValueErroruUnable to parse subject_token from JSON file '{}' using key '{}'TuMissing subject_token in the credential_source filea_create_default_metrics_optionsa_credential_sourceafileasourceaurlametrics_optionsafrom_infouCreates an Identity Pool Credentials instance from parsed external account info.

        Args:
            info (Mapping[str, str]): The Identity Pool external account info in Google
                format.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.identity_pool.Credentials: The constructed
                credentials.

        Raises:
            ValueError: For invalid parameters.
        afrom_fileuCreates an IdentityPool Credentials instance from an external account json file.

        Args:
            filename (str): The path to the IdentityPool external account json file.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.identity_pool.Credentials: The constructed
                credentials.
        uIdentity Pool Credentials.

This module provides credentials to access Google Cloud resources from on-prem
or non-Google Cloud platforms which support external credentials (e.g. OIDC ID
tokens) retrieved from local file locations or local servers. This includes
Microsoft Azure and OIDC identity providers (e.g. K8s workloads registered with
Hub with Hub workload identity enabled).

These credentials are recommended over the use of service account credentials
in on-prem/non-Google Cloud platforms as they do not involve the management of
long-live service account private keys.

Identity Pool Credentials are initialized using external_account
arguments which are typically loaded from an external credentials file or
an external credentials URL. Unlike other Credentials that can be initialized
with a list of explicit arguments, secrets or credentials, external account
clients use the environment and hints/guidelines provided by the
external_account JSON file to retrieve credentials and exchange them for Google
access tokens.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__ucollections.abcTaMappinglacollectionsaosugoogle.authTa_helpersa_helpersTaexceptionsTaexternal_accountaexternal_accounta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.identity_poola__module__uExternal account credentials sourced from files and URLs.a__qualname__uCredentials.__init__acopy_docstringaretrieve_subject_tokenuCredentials.retrieve_subject_tokenuCredentials._get_token_datauCredentials._get_file_datauCredentials._get_url_dataTatextnuCredentials._parse_token_datauCredentials._create_default_metrics_optionsaclassmethoduCredentials.from_infouCredentials.from_filea__orig_bases__ugoogle\auth\identity_pool.pyu<module google.auth.identity_pool>Ta__class__Taselfaaudienceasubject_token_typeatoken_urlacredential_sourceaargsakwargsacredential_source_formata__class__Taselfametrics_optionsa__class__Taselfafilenameafile_objTaselfarequestTaselfarequestaurlaheadersaresponsearesponse_bodyTaselfatoken_contentaformat_typeasubject_token_field_nameacontentafilenameatokenaresponse_dataTaclsafilenameakwargsa__class__Taclsainfoakwargsa__class__u.google.auth.impersonated_credentials'a_IAM_ENDPOINTaformatajsonadumpsaencodeTuutf-8aPOSTTaurlamethodaheadersabodyadataadecodeastatusahttp_clientaOKaexceptionsaRefreshErrora_REFRESH_ERRORaloadsaaccessTokenadatetimeastrptimeaexpireTimeu%Y-%m-%dT%H:%M:%SZTEKeyErrorEValueErroru{}: No access token or invalid expiration in response.uMakes a request to the Google Cloud IAM service for an access token.
    Args:
        request (Request): The Request object to use.
        principal (str): The principal to request an access token for.
        headers (Mapping[str, str]): Map of headers to transmit.
        body (Mapping[str, str]): JSON Payload body for the iamcredentials
            API call.
        iam_endpoint_override (Optiona[str]): The full IAM endpoint override
            with the target_principal embedded. This is useful when supporting
            impersonation with regional endpoints.

    Raises:
        google.auth.exceptions.TransportError: Raised if there is an underlying
            HTTP connection error
        google.auth.exceptions.RefreshError: Raised if the impersonated
            credentials are not available.  Common reasons are
            `iamcredentials.googleapis.com` is not enabled or the
            `Service Account Token Creator` is not assigned
    aCredentialsa__init__acopya_source_credentialsacredentialsaScopedawith_scopesa_IAM_SCOPEa_create_self_signed_jwta_always_use_jwt_accessTna_target_principala_target_scopesa_delegatesa_DEFAULT_TOKEN_LIFETIME_SECSa_lifetimeatokena_helpersautcnowaexpirya_quota_project_ida_iam_endpoint_overrideu
        Args:
            source_credentials (google.auth.Credentials): The source credential
                used as to acquire the impersonated credentials.
            target_principal (str): The service account to impersonate.
            target_scopes (Sequence[str]): Scopes to request during the
                authorization grant.
            delegates (Sequence[str]): The chained list of delegates required
                to grant the final access_token.  If set, the sequence of
                identities must have "Service Account Token Creator" capability
                granted to the prceeding identity.  For example, if set to
                [serviceAccountB, serviceAccountC], the source_credential
                must have the Token Creator role on serviceAccountB.
                serviceAccountB must have the Token Creator on
                serviceAccountC.
                Finally, C must have Token Creator on target_principal.
                If left unset, source_credential must have that role on
                target_principal.
            lifetime (int): Number of seconds the delegated credential should
                be valid for (upto 3600).
            quota_project_id (Optional[str]): The project ID used for quota and billing.
                This project may be different from the project used to
                create the credentials.
            iam_endpoint_override (Optiona[str]): The full IAM endpoint override
                with the target_principal embedded. This is useful when supporting
                impersonation with regional endpoints.
        ametricsaCRED_TYPE_SA_IMPERSONATEa_update_tokenatoken_stateaTokenStateaSTALEaINVALIDarefreshadelegatesascopealifetimewsuContent-Typeuapplication/jsonaAPI_CLIENT_HEADERatoken_request_access_token_impersonateaapplya_make_iam_token_requestarequestTarequestaprincipalaheadersabodyaiam_endpoint_overrideutoo many values to unpack (expected 2)uUpdates credentials with a new access_token representing
        the impersonated account.

        Args:
            request (google.auth.transport.requests.Request): Request object
                to use for refreshing credentials.
        ugoogle.auth.transport.requestsTaAuthorizedSessionlaAuthorizedSessiona_IAM_SIGN_ENDPOINTapayloadabase64ab64encodeDuContent-Typeuapplication/jsonapostTaurlaheadersajsonacloseastatus_codeaTransportErroruError calling sign_bytes: {}ab64decodeasignedBlobTatarget_principalatarget_scopesadelegatesalifetimeaquota_project_idaiam_endpoint_overrideaIDTokenCredentialsaGoogleAuthErrorTuProvided Credential must be impersonated_credentialsa_target_credentialsa_target_audiencea_include_emailu
        Args:
            target_credentials (google.auth.Credentials): The target
                credential used as to acquire the id tokens for.
            target_audience (string): Audience to issue the token for.
            include_email (bool): Include email in IdToken
            quota_project_id (Optional[str]):  The project ID used for
                quota and billing.
        Tatarget_credentialsatarget_audienceainclude_emailaquota_project_ida_IAM_IDTOKEN_ENDPOINTasigner_emailaaudienceaincludeEmailatoken_request_id_token_impersonateTaauth_requestTaurlaheadersadatauError getting ID token: {}autcfromtimestampajwtDaverifyFaexpuGoogle Cloud Impersonated credentials.

This module provides authentication for applications where local credentials
impersonates a remote service account using `IAM Credentials API`_.

This class can be used to impersonate a service account as long as the original
Credential object has the "Service Account Token Creator" role on the target
service account.

    .. _IAM Credentials API:
        https://cloud.google.com/iam/credentials/reference/rest/
a__doc__a__file__a__spec__aoriginahas_locationa__cached__Tadatetimeuhttp.clientaclientugoogle.authTa_helpersTacredentialsTaexceptionsTajwtTametricsuhttps://www.googleapis.com/auth/iamuhttps://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/{}:generateAccessTokenuhttps://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/{}:signBlobuhttps://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/{}:generateIdTokenuUnable to acquire impersonated credentialsluhttps://oauth2.googleapis.com/tokena_DEFAULT_TOKEN_URIaCredentialsWithQuotaProjectaSigninga__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.impersonated_credentialsa__module__uThis module defines impersonated credentials which are essentially
    impersonated identities.

    Impersonated Credentials allows credentials issued to a user or
    service account to impersonate another. The target service account must
    grant the originating credential principal the
    `Service Account Token Creator`_ IAM role:

    For more information about Token Creator IAM role and
    IAMCredentials API, see
    `Creating Short-Lived Service Account Credentials`_.

    .. _Service Account Token Creator:
        https://cloud.google.com/iam/docs/service-accounts#the_service_account_token_creator_role

    .. _Creating Short-Lived Service Account Credentials:
        https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials

    Usage:

    First grant source_credentials the `Service Account Token Creator`
    role on the target account to impersonate.   In this example, the
    service account represented by svc_account.json has the
    token creator role on
    `impersonated-account@_project_.iam.gserviceaccount.com`.

    Enable the IAMCredentials API on the source project:
    `gcloud services enable iamcredentials.googleapis.com`.

    Initialize a source credential which does not have access to
    list bucket::

        from google.oauth2 import service_account

        target_scopes = [
            'https://www.googleapis.com/auth/devstorage.read_only']

        source_credentials = (
            service_account.Credentials.from_service_account_file(
                '/path/to/svc_account.json',
                scopes=target_scopes))

    Now use the source credentials to acquire credentials to impersonate
    another service account::

        from google.auth import impersonated_credentials

        target_credentials = impersonated_credentials.Credentials(
          source_credentials=source_credentials,
          target_principal='impersonated-account@_project_.iam.gserviceaccount.com',
          target_scopes = target_scopes,
          lifetime=500)

    Resource access is granted::

        client = storage.Client(credentials=target_credentials)
        buckets = client.list_buckets(project='your_project')
        for bucket in buckets:
          print(bucket.name)
    a__qualname__uCredentials.__init__a_metric_header_for_usageuCredentials._metric_header_for_usageacopy_docstringuCredentials.refreshuCredentials._update_tokenasign_bytesuCredentials.sign_bytesapropertyuCredentials.signer_emailaservice_account_emailuCredentials.service_account_emailasigneruCredentials.signerarequires_scopesuCredentials.requires_scopesawith_quota_projectuCredentials.with_quota_projectuCredentials.with_scopesa__orig_bases__uOpen ID Connect ID Token-based service account credentials.

    TnFnuIDTokenCredentials.__init__afrom_credentialsuIDTokenCredentials.from_credentialsawith_target_audienceuIDTokenCredentials.with_target_audienceawith_include_emailuIDTokenCredentials.with_include_emailuIDTokenCredentials.with_quota_projectuIDTokenCredentials.refreshugoogle\auth\impersonated_credentials.pyu<module google.auth.impersonated_credentials>Ta__class__Taselfasource_credentialsatarget_principalatarget_scopesadelegatesalifetimeaquota_project_idaiam_endpoint_overridea__class__Taselfatarget_credentialsatarget_audienceainclude_emailaquota_project_ida__class__T
arequestaprincipalaheadersabodyaiam_endpoint_overrideaiam_endpointaresponsearesponse_bodyatoken_responseatokenaexpiryacaught_excanew_excTaselfTaselfarequestabodyaheadersTaselfatarget_credentialsatarget_audienceTaselfarequestTaselfarequestaAuthorizedSessionaiam_sign_endpointabodyaheadersaauthed_sessionaresponseaid_tokenTaselfamessageaAuthorizedSessionaiam_sign_endpointabodyaheadersaauthed_sessionaresponseTaselfainclude_emailTaselfaquota_project_idTaselfascopesadefault_scopesTaselfatarget_audienceu.google.auth.jwtMakey_idaupdateDatypaJWTaalgaes256asigneraES256SignerDaalgaES256DaalgaRS256akida_helpersaunpadded_urlsafe_b64encodeajsonadumpsaencodeTuutf-8d.asignuMake a signed JWT.

    Args:
        signer (google.auth.crypt.Signer): The signer used to sign the JWT.
        payload (Mapping[str, str]): The JWT payload.
        header (Mapping[str, str]): Additional JWT header payload.
        key_id (str): The key id to add to the JWT header. If the
            signer has a key id it will be used as the default. If this is
            specified it will override the signer's key id.

    Returns:
        bytes: The encoded JWT.
    apadded_urlsafe_b64decodealoadsadecodeaexceptionsaMalformedErroruCan't parse segment: {0}uDecodes a single JWT segment.ato_bytesacountTd.luWrong number of segments in token: {0}asplitutoo many values to unpack (expected 3)a_decode_jwt_segmentaMappinguHeader segment should be a JSON object: {0}uPayload segment should be a JSON object: {0}uDecodes a token and does no verification.

    Args:
        token (Union[str, bytes]): The encoded JWT.

    Returns:
        Tuple[Mapping, Mapping, str, str]: header, payload, signed_section, and
            signature.

    Raises:
        google.auth.exceptions.MalformedError: if there are an incorrect amount of segments in the token or segments of the wrong type.
    a_unverified_decodeutoo many values to unpack (expected 4)uReturn the decoded header of a token.

    No verification is done. This is useful to extract the key id from
    the header in order to acquire the appropriate certificate to verify
    the token.

    Args:
        token (Union[str, bytes]): the encoded JWT.

    Returns:
        Mapping: The decoded JWT header.
    adatetime_to_secsautcnowTaiataexpuToken does not contain required claim {}aiataInvalidValueuToken used too early, {} < {}. Check that your computer's clock is set correctly.aexpuToken expired, {} < {}uVerifies the ``iat`` (Issued At) and ``exp`` (Expires) claims in a token
    payload.

    Args:
        payload (Mapping[str, str]): The JWT payload.
        clock_skew_in_seconds (int): The clock skew used for `iat` and `exp`
            validation.

    Raises:
        google.auth.exceptions.InvalidValue: if value validation failed.
        google.auth.exceptions.MalformedError: if schema validation failed.
    agetTaalgTakida_ALGORITHM_TO_VERIFIER_CLASSa_CRYPTOGRAPHY_BASED_ALGORITHMSuThe key algorithm {} requires the cryptography package to be installed.uUnsupported signature algorithm {}uCertificate for key id {} not found.avaluesacryptaverify_signatureTuCould not verify token signature.a_verify_iat_and_expTaauduToken has wrong audience {}, expected one of {}uDecode and verify a JWT.

    Args:
        token (str): The encoded JWT.
        certs (Union[str, bytes, Mapping[str, Union[str, bytes]]]): The
            certificate used to validate the JWT signature. If bytes or string,
            it must the the public key certificate in PEM format. If a mapping,
            it must be a mapping of key IDs to public key certificates in PEM
            format. The mapping must contain the same key ID that's specified
            in the token's header.
        verify (bool): Whether to perform signature and claim validation.
            Verification is done by default.
        audience (str or list): The audience claim, 'aud', that this JWT should
            contain. Or a list of audience claims. If None then the JWT's 'aud'
            parameter is not verified.
        clock_skew_in_seconds (int): The clock skew used for `iat` and `exp`
            validation.

    Returns:
        Mapping[str, str]: The deserialized JSON payload in the JWT.

    Raises:
        google.auth.exceptions.InvalidValue: if value validation failed.
        google.auth.exceptions.MalformedError: if schema validation failed.
    aCredentialsa__init__a_signera_issuera_subjecta_audiencea_token_lifetimea_quota_project_ida_additional_claimsu
        Args:
            signer (google.auth.crypt.Signer): The signer used to sign JWTs.
            issuer (str): The `iss` claim.
            subject (str): The `sub` claim.
            audience (str): the `aud` claim. The intended audience for the
                credentials.
            additional_claims (Mapping[str, str]): Any additional claims for
                the JWT payload.
            token_lifetime (int): The amount of time in seconds for
                which the token is valid. Defaults to 1 hour.
            quota_project_id (Optional[str]): The project ID used for quota
                and billing.
        asubjectaclient_emailasetdefaultaissueruCreates a Credentials instance from a signer and service account
        info.

        Args:
            signer (google.auth.crypt.Signer): The signer used to sign JWTs.
            info (Mapping[str, str]): The service account info.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.jwt.Credentials: The constructed credentials.

        Raises:
            google.auth.exceptions.MalformedError: If the info is not in the expected format.
        a_service_account_infoafrom_dictDarequireLaclient_emaila_from_signer_and_infouCreates an Credentials instance from a dictionary.

        Args:
            info (Mapping[str, str]): The service account info in Google
                format.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.jwt.Credentials: The constructed credentials.

        Raises:
            google.auth.exceptions.MalformedError: If the info is not in the expected format.
        afrom_filenameutoo many values to unpack (expected 2)uCreates a Credentials instance from a service account .json file
        in Google format.

        Args:
            filename (str): The path to the service account .json file.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.jwt.Credentials: The constructed credentials.
        asigner_emailaaudienceuCreates a new :class:`google.auth.jwt.Credentials` instance from an
        existing :class:`google.auth.credentials.Signing` instance.

        The new instance will use the same signer as the existing instance and
        will use the existing instance's signer email as the issuer and
        subject by default.

        Example::

            svc_creds = service_account.Credentials.from_service_account_file(
                'service_account.json')
            audience = (
                'https://pubsub.googleapis.com/google.pubsub.v1.Publisher')
            jwt_creds = jwt.Credentials.from_signing_credentials(
                svc_creds, audience=audience)

        Args:
            credentials (google.auth.credentials.Signing): The credentials to
                use to construct the new credentials.
            audience (str): the `aud` claim. The intended audience for the
                credentials.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.jwt.Credentials: A new Credentials instance.
        acopyadeepcopyTaissuerasubjectaaudienceaadditional_claimsaquota_project_iduReturns a copy of these credentials with modified claims.

        Args:
            issuer (str): The `iss` claim. If unspecified the current issuer
                claim will be used.
            subject (str): The `sub` claim. If unspecified the current subject
                claim will be used.
            audience (str): the `aud` claim. If unspecified the current
                audience claim will be used.
            additional_claims (Mapping[str, str]): Any additional claims for
                the JWT payload. This will be merged with the current
                additional claims.

        Returns:
            google.auth.jwt.Credentials: A new credentials instance.
        adatetimeatimedeltaTasecondsaissasubaaudapayloaduMake a signed JWT.

        Returns:
            Tuple[bytes, datetime]: The encoded JWT and the expiration.
        a_make_jwtatokenaexpiryuRefreshes the access token.

        Args:
            request (Any): Unused.
        u Additional claims the JWT object was created with.aOnDemandCredentialsacachetoolsaLRUCacheTamaxsizea_cacheu
        Args:
            signer (google.auth.crypt.Signer): The signer used to sign JWTs.
            issuer (str): The `iss` claim.
            subject (str): The `sub` claim.
            additional_claims (Mapping[str, str]): Any additional claims for
                the JWT payload.
            token_lifetime (int): The amount of time in seconds for
                which the token is valid. Defaults to 1 hour.
            max_cache_size (int): The maximum number of JWT tokens to keep in
                cache. Tokens are cached using :class:`cachetools.LRUCache`.
            quota_project_id (Optional[str]): The project ID used for quota
                and billing.

        uCreates an OnDemandCredentials instance from a signer and service
        account info.

        Args:
            signer (google.auth.crypt.Signer): The signer used to sign JWTs.
            info (Mapping[str, str]): The service account info.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.jwt.OnDemandCredentials: The constructed credentials.

        Raises:
            google.auth.exceptions.MalformedError: If the info is not in the expected format.
        uCreates an OnDemandCredentials instance from a dictionary.

        Args:
            info (Mapping[str, str]): The service account info in Google
                format.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.jwt.OnDemandCredentials: The constructed credentials.

        Raises:
            google.auth.exceptions.MalformedError: If the info is not in the expected format.
        uCreates an OnDemandCredentials instance from a service account .json
        file in Google format.

        Args:
            filename (str): The path to the service account .json file.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.jwt.OnDemandCredentials: The constructed credentials.
        uCreates a new :class:`google.auth.jwt.OnDemandCredentials` instance
        from an existing :class:`google.auth.credentials.Signing` instance.

        The new instance will use the same signer as the existing instance and
        will use the existing instance's signer email as the issuer and
        subject by default.

        Example::

            svc_creds = service_account.Credentials.from_service_account_file(
                'service_account.json')
            jwt_creds = jwt.OnDemandCredentials.from_signing_credentials(
                svc_creds)

        Args:
            credentials (google.auth.credentials.Signing): The credentials to
                use to construct the new credentials.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.jwt.Credentials: A new Credentials instance.
        amaxsizeTaissuerasubjectaadditional_claimsamax_cache_sizeaquota_project_iduReturns a copy of these credentials with modified claims.

        Args:
            issuer (str): The `iss` claim. If unspecified the current issuer
                claim will be used.
            subject (str): The `sub` claim. If unspecified the current subject
                claim will be used.
            additional_claims (Mapping[str, str]): Any additional claims for
                the JWT payload. This will be merged with the current
                additional claims.

        Returns:
            google.auth.jwt.OnDemandCredentials: A new credentials instance.
        uMake a new JWT for the given audience.

        Args:
            audience (str): The intended audience.

        Returns:
            Tuple[bytes, datetime]: The encoded JWT and the expiration.
        Tnna_make_jwt_for_audienceuGet a JWT For a given audience.

        If there is already an existing, non-expired token in the cache for
        the audience, that token is used. Otherwise, a new token will be
        created.

        Args:
            audience (str): The intended audience.

        Returns:
            bytes: The encoded JWT.
        aRefreshErrorTuOnDemandCredentials can not be directly refreshed.uRaises an exception, these credentials can not be directly
        refreshed.

        Args:
            request (Any): Unused.

        Raises:
            google.auth.RefreshError
        aurllibaparseaurlsplitaurlunsplitaschemeanetlocapathua_get_jwt_for_audienceaapplyTatokenuPerforms credential-specific before request logic.

        Args:
            request (Any): Unused. JWT credentials do not need to make an
                HTTP request to refresh.
            method (str): The request's HTTP method.
            url (str): The request's URI. This is used as the audience claim
                when generating the JWT.
            headers (Mapping): The request's headers.
        uJSON Web Tokens

Provides support for creating (encoding) and verifying (decoding) JWTs,
especially JWTs generated and consumed by Google infrastructure.

See `rfc7519`_ for more details on JWTs.

To encode a JWT use :func:`encode`::

    from google.auth import crypt
    from google.auth import jwt

    signer = crypt.Signer(private_key)
    payload = {'some': 'payload'}
    encoded = jwt.encode(signer, payload)

To decode a JWT and verify claims use :func:`decode`::

    claims = jwt.decode(encoded, certs=public_certs)

You can also skip verification::

    claims = jwt.decode(encoded, verify=False)

.. _rfc7519: https://tools.ietf.org/html/rfc7519

a__doc__a__file__a__spec__aoriginahas_locationa__cached__ucollections.abcTaMappinglacollectionsugoogle.authTa_helpersTa_service_account_infoTacryptTaexceptionsugoogle.auth.credentialsagoogleugoogle.auth.cryptTaes256la_DEFAULT_TOKEN_LIFETIME_SECSl
a_DEFAULT_MAX_CACHE_SIZEaRS256aRSAVerifierPaES256aES256VerifieraES256adecode_headerTlTntnlaauthacredentialsaSigningaCredentialsWithQuotaProjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.jwta__module__uCredentials that use a JWT as the bearer token.

    These credentials require an "audience" claim. This claim identifies the
    intended recipient of the bearer token.

    The constructor arguments determine the claims for the JWT that is
    sent with requests. Usually, you'll construct these credentials with
    one of the helper constructors as shown in the next section.

    To create JWT credentials using a Google service account private key
    JSON file::

        audience = 'https://pubsub.googleapis.com/google.pubsub.v1.Publisher'
        credentials = jwt.Credentials.from_service_account_file(
            'service-account.json',
            audience=audience)

    If you already have the service account file loaded and parsed::

        service_account_info = json.load(open('service_account.json'))
        credentials = jwt.Credentials.from_service_account_info(
            service_account_info,
            audience=audience)

    Both helper methods pass on arguments to the constructor, so you can
    specify the JWT claims::

        credentials = jwt.Credentials.from_service_account_file(
            'service-account.json',
            audience=audience,
            additional_claims={'meta': 'data'})

    You can also construct the credentials directly if you have a
    :class:`~google.auth.crypt.Signer` instance::

        credentials = jwt.Credentials(
            signer,
            issuer='your-issuer',
            subject='your-subject',
            audience=audience)

    The claims are considered immutable. If you want to modify the claims,
    you can easily create another instance using :meth:`with_claims`::

        new_audience = (
            'https://pubsub.googleapis.com/google.pubsub.v1.Subscriber')
        new_credentials = credentials.with_claims(audience=new_audience)
    a__qualname__uCredentials.__init__aclassmethoduCredentials._from_signer_and_infoafrom_service_account_infouCredentials.from_service_account_infoafrom_service_account_fileuCredentials.from_service_account_fileafrom_signing_credentialsuCredentials.from_signing_credentialsTnnnnawith_claimsuCredentials.with_claimsacopy_docstringawith_quota_projectuCredentials.with_quota_projectuCredentials._make_jwtarefreshuCredentials.refreshasign_bytesuCredentials.sign_bytesapropertyuCredentials.signer_emailuCredentials.signeraadditional_claimsuCredentials.additional_claimsa__orig_bases__uOn-demand JWT credentials.

    Like :class:`Credentials`, this class uses a JWT as the bearer token for
    authentication. However, this class does not require the audience at
    construction time. Instead, it will generate a new token on-demand for
    each request using the request URI as the audience. It caches tokens
    so that multiple requests to the same URI do not incur the overhead
    of generating a new token every time.

    This behavior is especially useful for `gRPC`_ clients. A gRPC service may
    have multiple audience and gRPC clients may not know all of the audiences
    required for accessing a particular service. With these credentials,
    no knowledge of the audiences is required ahead of time.

    .. _grpc: http://www.grpc.io/
    uOnDemandCredentials.__init__uOnDemandCredentials._from_signer_and_infouOnDemandCredentials.from_service_account_infouOnDemandCredentials.from_service_account_fileuOnDemandCredentials.from_signing_credentialsTnnnuOnDemandCredentials.with_claimsuOnDemandCredentials.with_quota_projectuChecks the validity of the credentials.

        These credentials are always valid because it generates tokens on
        demand.
        avaliduOnDemandCredentials.validuOnDemandCredentials._make_jwt_for_audienceuOnDemandCredentials._get_jwt_for_audienceuOnDemandCredentials.refreshabefore_requestuOnDemandCredentials.before_requestuOnDemandCredentials.sign_bytesuOnDemandCredentials.signer_emailuOnDemandCredentials.signerugoogle\auth\jwt.pyu<module google.auth.jwt>Ta__class__Taselfasigneraissuerasubjectaadditional_claimsatoken_lifetimeamax_cache_sizeaquota_project_ida__class__Taselfasigneraissuerasubjectaaudienceaadditional_claimsatoken_lifetimeaquota_project_ida__class__Taencoded_sectionasection_bytesacaught_excanew_excTaclsasignerainfoakwargsTaselfaaudienceatokenaexpiryTaselfanowalifetimeaexpiryapayloadajwtTaselfaaudienceanowalifetimeaexpiryapayloadajwtTatokenaencoded_headeraencoded_payloadasignatureasigned_sectionaheaderapayloadTapayloadaclock_skew_in_secondsanowakeyaiataearliestaexpalatestTaselfTaselfarequestamethodaurlaheadersapartsaaudienceatokenTatokenacertsaverifyaaudienceaclock_skew_in_secondsaheaderapayloadasigned_sectionasignatureakey_algakey_idaverifier_clsaexcacerts_to_checkaclaim_audienceTatokenaheaderw_Tasignerapayloadaheaderakey_idasegmentsasigning_inputasignatureTaclsafilenameakwargsainfoasignerTaclsainfoakwargsasignerTaclsacredentialsaaudienceakwargsTaclsacredentialsakwargsTaselfarequestTaselfamessageTaselfaissuerasubjectaadditional_claimsanew_additional_claimsTaselfaissuerasubjectaaudienceaadditional_claimsanew_additional_claimsTaselfaquota_project_id.google.auth.metricsAugl-python/{} auth/{}aplatformapython_versionaversiona__version__u{} {} {}apython_and_auth_lib_versionaREQUEST_TYPE_ACCESS_TOKENaCRED_TYPE_SA_MDSaREQUEST_TYPE_ID_TOKENaCRED_TYPE_SA_IMPERSONATEaCRED_TYPE_SA_ASSERTIONu{} {}aCRED_TYPE_USERaREQUEST_TYPE_MDS_PINGaREQUEST_TYPE_REAUTH_STARTaREQUEST_TYPE_REAUTH_CONTINUEaBYOID_HEADER_SECTIONaitemsutoo many values to unpack (expected 2)u{} {}/{}aheaderaAPI_CLIENT_HEADERw uAdd x-goog-api-client header with the given value.

    Args:
        headers (Mapping[str, str]): The headers to which we will add the
            metric header.
        metric_header_value (Optional[str]): If value is None, do nothing;
            if headers already has a x-goog-api-client header, append the value
            to the existing header; otherwise add a new x-goog-api-client
            header with the given value.
    u We use x-goog-api-client header to report metrics. This module provides
the constants and helper methods to construct x-goog-api-client header.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__lugoogle.authTaversionux-goog-api-clientugoogle-byoid-sdkuauth-request-type/atuauth-request-type/ituauth-request-type/mdsuauth-request-type/re-startuauth-request-type/re-contucred-type/uucred-type/saucred-type/jwtaCRED_TYPE_SA_JWTucred-type/mdsucred-type/impatoken_request_access_token_mdsatoken_request_id_token_mdsatoken_request_access_token_impersonateatoken_request_id_token_impersonateatoken_request_access_token_sa_assertionatoken_request_id_token_sa_assertionatoken_request_useramds_pingareauth_startareauth_continueabyoid_metrics_headeraadd_metric_headerugoogle\auth\metrics.pyu<module google.auth.metrics>Taheadersametric_header_valueTametrics_optionsaheaderakeyavalueu.google.auth.pluggable;!ainteractiveaCredentialsa__init__aaudienceasubject_token_typeatoken_urlacredential_sourceaMappinga_credential_source_executableaexceptionsaMalformedErrorTuMissing credential_source. The credential_source is not a dict.agetTaexecutableTuMissing credential_source. An 'executable' must be provided.Tacommanda_credential_source_executable_commandTatimeout_millisa_credential_source_executable_timeout_millisTainteractive_timeout_millisa_credential_source_executable_interactive_timeout_millisTaoutput_filea_credential_source_executable_output_fileua_tokeninfo_usernameTuMissing command field. Executable command must be provided.aEXECUTABLE_TIMEOUT_MILLIS_DEFAULTaEXECUTABLE_TIMEOUT_MILLIS_LOWER_BOUNDaEXECUTABLE_TIMEOUT_MILLIS_UPPER_BOUNDaInvalidValueTuTimeout must be between 5 and 120 seconds.aEXECUTABLE_INTERACTIVE_TIMEOUT_MILLIS_LOWER_BOUNDaEXECUTABLE_INTERACTIVE_TIMEOUT_MILLIS_UPPER_BOUNDTuInteractive timeout must be between 30 seconds and 30 minutes.uInstantiates an external account credentials object from a executables.

        Args:
            audience (str): The STS audience field.
            subject_token_type (str): The subject token type.
            token_url (str): The STS endpoint URL.
            credential_source (Mapping): The credential source dictionary used to
                provide instructions on how to retrieve external credential to be
                exchanged for Google access tokens.

                Example credential_source for pluggable credential:

                    {
                        "executable": {
                            "command": "/path/to/get/credentials.sh --arg1=value1 --arg2=value2",
                            "timeout_millis": 5000,
                            "output_file": "/path/to/generated/cached/credentials"
                        }
                    }
            args (List): Optional positional arguments passed into the underlying :meth:`~external_account.Credentials.__init__` method.
            kwargs (Mapping): Optional keyword arguments passed into the underlying :meth:`~external_account.Credentials.__init__` method.

        Raises:
            google.auth.exceptions.RefreshError: If an error is encountered during
                access token retrieval logic.
            google.auth.exceptions.InvalidValue: For invalid parameters.
            google.auth.exceptions.MalformedError: For invalid parameters.

        .. note:: Typically one of the helper constructors
            :meth:`from_file` or
            :meth:`from_info` are used instead of calling the constructor directly.
        a_validate_running_modeuutf-8a__enter__a__exit__ajsonaloadTnnna_parse_subject_tokenaresponseaexpiration_timeaRefreshErrorasubject_tokena_helpersais_python_3TuPluggable auth is only supported for python 3.7+aosaenvironacopya_inject_env_variablesw0aGOOGLE_EXTERNAL_ACCOUNT_REVOKElasysastdinastdoutasubprocessaPIPEaSTDOUTarunasplitTatimeoutastdinastdoutastderraenvareturncodeluExecutable exited with non-zero return code {}. Error: {}aloadsadecodeTuutf-8TuRevoke is only enabled under interactive mode.w1TatimeoutastdoutastderraenvuAuth revoke failed on executable. Exit with non-zero return code {}. Error: {}a_validate_revoke_responseuRevokes the subject token using the credential_source object.

        Args:
            request (google.auth.transport.Request): A callable used to make
                HTTP requests.
        Raises:
            google.auth.exceptions.RefreshError: If the executable revocation
                not properly executed.

        aservice_account_emailuReturns the external account identifier.

        When service account impersonation is used the identifier is the service
        account email.

        Without service account impersonation, this returns None, unless it is
        being used by the Google Cloud CLI which populates this field.
        afrom_infouCreates a Pluggable Credentials instance from parsed external account info.

        Args:
            info (Mapping[str, str]): The Pluggable external account info in Google
                format.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.pluggable.Credentials: The constructed
                credentials.

        Raises:
            google.auth.exceptions.InvalidValue: For invalid parameters.
            google.auth.exceptions.MalformedError: For invalid parameters.
        afrom_fileuCreates an Pluggable Credentials instance from an external account json file.

        Args:
            filename (str): The path to the Pluggable external account json file.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.pluggable.Credentials: The constructed
                credentials.
        a_audienceaGOOGLE_EXTERNAL_ACCOUNT_AUDIENCEa_subject_token_typeaGOOGLE_EXTERNAL_ACCOUNT_TOKEN_TYPEaexternal_account_idaGOOGLE_EXTERNAL_ACCOUNT_IDaGOOGLE_EXTERNAL_ACCOUNT_INTERACTIVEa_service_account_impersonation_urlaGOOGLE_EXTERNAL_ACCOUNT_IMPERSONATED_EMAILaGOOGLE_EXTERNAL_ACCOUNT_OUTPUT_FILEa_validate_response_schemaasuccessacodeamessageTuError code and message fields are required in the response.uExecutable returned unsuccessful response: code: {}, message: {}.atimeTuThe token returned by the executable is expired.atoken_typeTuThe executable response is missing the token_type field.uurn:ietf:params:oauth:token-type:jwtuurn:ietf:params:oauth:token-type:id_tokenaid_tokenuurn:ietf:params:oauth:token-type:saml2asaml_responseTuExecutable returned unsupported token type.TuRevoke failed with unsuccessful response.aversionTuThe executable response is missing the version field.aEXECUTABLE_SUPPORTED_MAX_VERSIONuExecutable returned unsupported version {}.TuThe executable response is missing the success field.TaGOOGLE_EXTERNAL_ACCOUNT_ALLOW_EXECUTABLESTuExecutables need to be explicitly allowed (set GOOGLE_EXTERNAL_ACCOUNT_ALLOW_EXECUTABLES to '1') to run.TuAn output_file must be specified in the credential configuration for interactive mode.aInvalidOperationTuInteractive mode cannot run without an interactive timeout.ais_workforce_poolTuInteractive mode is only enabled for workforce pool.a_create_default_metrics_optionsaexecutableasourceuPluggable Credentials.
Pluggable Credentials are initialized using external_account arguments which
are typically loaded from third-party executables. Unlike other
credentials that can be initialized with a list of explicit arguments, secrets
or credentials, external account clients use the environment and hints/guidelines
provided by the external_account JSON file to retrieve credentials and exchange
them for Google access tokens.

Example credential_source for pluggable credential:
{
    "executable": {
        "command": "/path/to/get/credentials.sh --arg1=value1 --arg2=value2",
        "timeout_millis": 5000,
        "output_file": "/path/to/generated/cached/credentials"
    }
}
a__doc__a__file__a__spec__aoriginahas_locationa__cached__ucollections.abcTaMappingacollectionsugoogle.authTa_helpersTaexceptionsTaexternal_accountaexternal_accountll0ulll@wa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.pluggablea__module__uExternal account credentials sourced from executables.a__qualname__uCredentials.__init__acopy_docstringaretrieve_subject_tokenuCredentials.retrieve_subject_tokenarevokeuCredentials.revokeapropertyuCredentials.external_account_idaclassmethoduCredentials.from_infouCredentials.from_fileuCredentials._inject_env_variablesuCredentials._parse_subject_tokenuCredentials._validate_revoke_responseuCredentials._validate_response_schemauCredentials._validate_running_modeuCredentials._create_default_metrics_optionsa__orig_bases__ugoogle\auth\pluggable.pyu<module google.auth.pluggable>Ta__class__Taselfaaudienceasubject_token_typeatoken_urlacredential_sourceaargsakwargsa__class__Taselfametrics_optionsa__class__TaselfaenvTaselfaresponseTaselfaenv_allow_executablesTaselfTaclsafilenameakwargsa__class__Taclsainfoakwargsa__class__Taselfarequestaoutput_filearesponseasubject_tokenaenvaexe_timeoutaexe_stdinaexe_stdoutaexe_stderraresultTaselfarequestaenvaresultaresponse.google.auth.transport._custom_tls_signeractypesacastacffiaFFIaintptr_tac_void_pa_LOGGERadebuguloading offload library from %saCDLLlaSIGN_CALLBACK_CTYPEac_char_paConfigureSslContextaargtypesac_intarestypeuloading signer library from %saGetCertPemForPythonaSignForPythonuloading provider library from %saECP_attach_to_ctxucryptography.hazmat.primitivesTahashesahashesastring_ataHashaSHA256aupdateafinalizeasign_callbackuget_sign_callback.<locals>.sign_callbackTucalling sign callback...a_compute_sha256_digestac_characreate_string_bufferTlasigner_libaconfig_file_pathaencodeafrom_bufferlasiglaexceptionsaMutualTLSChannelErrorTufailed to get certificatea_enterprise_cert_file_patha_certa_sign_callbacka_provider_libu
        This class loads the offload and signer library, and calls APIs from
        these libraries to obtain the cert and a signing callback, and attach
        them to SSL context. The cert and the signing callback will be used
        for client authentication in TLS handshake.

        Args:
            enterprise_cert_file_path (str): the path to a enterprise cert JSON
                file. The file should contain the following field:

                    {
                        "libs": {
                            "ecp_client": "...",
                            "tls_offload": "..."
                        }
                    }
        wra__enter__a__exit__ajsonaloadagetalibsTaecp_clientnTatls_offloadnTaecp_providernTnnnaprovider_libraryaload_provider_libaoffload_libraryasigner_libraryaload_offload_liba_offload_libaload_signer_liba_signer_libaset_up_custom_keyTuenterprise cert file is invalidaget_certaget_sign_callbacka_cast_ssl_ctx_to_void_pa_ctxa_contextTaasciiTufailed to configure ECP Provider SSL contextTufailed to configure ECP Offload SSL contextTuInvalid ECP configuration.u
Code for configuring client side TLS to offload the signing operation to
signing libraries.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aloggingaosasysugoogle.authTaexceptionsagetLoggerTugoogle.auth.transport._custom_tls_signeraCFUNCTYPEaPOINTERac_ubyteac_size_tTOobjecta__prepare__aCustomTlsSignera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.transport._custom_tls_signera__module__a__qualname__a__init__uCustomTlsSigner.__init__aload_librariesuCustomTlsSigner.load_librariesuCustomTlsSigner.set_up_custom_keyaattach_to_ssl_contextuCustomTlsSigner.attach_to_ssl_contexta__orig_bases__ugoogle\auth\transport\_custom_tls_signer.pyu<module google.auth.transport._custom_tls_signer>Ta__class__Taselfaenterprise_cert_file_pathTassl_ctxTato_be_signedato_be_signed_lenahashesadataahashTaselfactxTasigner_libaconfig_file_pathacert_lenacert_holderTasigner_libaconfig_file_pathasign_callbackTaselfwfaenterprise_cert_jsonalibsasigner_libraryaoffload_libraryaprovider_libraryTaoffload_lib_pathalibTaprovider_lib_pathalibTasigner_lib_pathalibTaselfT
asigasig_lenatbsatbs_lenadigestadigestArrayasig_holder_lenasig_holderasignature_lenabswiasigner_libaconfig_file_pathTaconfig_file_pathasigner_libu.google.auth.transport._http_clientTastatusa_statusagetheadersutoo many values to unpack (expected 2)alowera_headersareada_dataasocketa_GLOBAL_DEFAULT_TIMEOUTaurllibaparseaurlsplitaurlunsplituapathaqueryafragmentaschemeahttpaexceptionsaTransportErroruhttp.client transport only supports the http scheme, {}was specifiedahttp_clientaHTTPConnectionanetlocTatimeouta_LOGGERadebuguMaking request: %s %sarequestabodyaheadersagetresponseaResponseaHTTPExceptionaerroracloseuMake an HTTP request using http.client.

        Args:
            url (str): The URI to be requested.
            method (str): The HTTP method to use for the request. Defaults
                to 'GET'.
            body (bytes): The payload / body in HTTP request.
            headers (Mapping): Request headers.
            timeout (Optional(int)): The number of seconds to wait for a
                response from the server. If not specified or if None, the
                socket global default timeout will be used.
            kwargs: Additional arguments passed throught to the underlying
                :meth:`~http.client.HTTPConnection.request` method.

        Returns:
            Response: The HTTP response.

        Raises:
            google.auth.exceptions.TransportError: If any exception occurred.
        uTransport adapter for http.client, for internal use only.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uhttp.clientlaclientaloggingugoogle.authTaexceptionsTatransportatransportagetLoggerTugoogle.auth.transport._http_clienta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.transport._http_clienta__module__uhttp.client transport response adapter.

    Args:
        response (http.client.HTTPResponse): The raw http client response.
    a__qualname__a__init__uResponse.__init__apropertyuResponse.statusuResponse.headersadatauResponse.dataa__orig_bases__aRequestuhttp.client transport request adapter.TaGETnnna__call__uRequest.__call__ugoogle\auth\transport\_http_client.pyu<module google.auth.transport._http_client>Ta__class__T
aselfaurlamethodabodyaheadersatimeoutakwargsapartsapathaconnectionaresponseacaught_excanew_excTaselfaresponseTaself.google.auth.transport._mtls_helper{`apathaexpandusera_LOGGERadebugu%s is not found, skip client SSL authentication.uChecks for context aware metadata. If it exists, returns the absolute path;
    otherwise returns None.

    Args:
        metadata_path (str): context aware metadata path.

    Returns:
        str: absolute path if exists and None otherwise.
    a__enter__a__exit__ajsonaloadTnnnaexceptionsaClientCertErrorametadatauLoads context aware metadata from the given path.

    Args:
        metadata_path (str): context aware metadata path.

    Returns:
        Dict[str, str]: The metadata.

    Raises:
        google.auth.exceptions.ClientCertError: If failed to parse metadata as JSON.
    asubprocessaPopenaPIPETastdoutastderracommunicateutoo many values to unpack (expected 2)areturncodeluCert provider command returns non-zero status code %sareafindalla_CERT_REGEXTuClient SSL certificate is missing or invalida_KEY_REGEXTuClient SSL key is missing or invalida_PASSPHRASE_REGEXTuPassphrase is missing or invalidcENCRYPTEDTuEncrypted private key is expectedastripTuEncrypted private key is not expectedTuPassphrase is not expecteduRun the provided command, and return client side mTLS cert, key and
    passphrase.

    Args:
        command (List[str]): cert provider command.
        expect_encrypted_key (bool): If encrypted private key is expected.

    Returns:
        Tuple[bytes, bytes, bytes]: client certificate bytes in PEM format, key
            bytes in PEM format and passphrase bytes.

    Raises:
        google.auth.exceptions.ClientCertError: if problems occurs when running
            the cert provider command or generating cert, key and passphrase.
    a_check_dca_metadata_patha_read_dca_metadata_filea_CERT_PROVIDER_COMMANDTuCert provider command is not foundu--with_passphraseaappendTu--with_passphrasea_run_cert_provider_commandacommandTaexpect_encrypted_keyutoo many values to unpack (expected 3)TFnnnuReturns the client side certificate, private key and passphrase.

    Args:
        generate_encrypted_key (bool): If set to True, encrypted private key
            and passphrase will be generated; otherwise, unencrypted private key
            will be generated and passphrase will be None.
        context_aware_metadata_path (str): The context_aware_metadata.json file path.

    Returns:
        Tuple[bool, bytes, bytes, bytes]:
            A boolean indicating if cert, key and passphrase are obtained, the
            cert bytes and key bytes both in PEM format, and passphrase bytes.

    Raises:
        google.auth.exceptions.ClientCertError: if problems occurs when getting
            the cert, key and passphrase.
    aget_client_ssl_credentialsTFTagenerate_encrypted_keyutoo many values to unpack (expected 4)uReturns the client side certificate and private key. The function first
    tries to get certificate and key from client_cert_callback; if the callback
    is None or doesn't provide certificate and key, the function tries application
    default SSL credentials.

    Args:
        client_cert_callback (Optional[Callable[[], (bytes, bytes)]]): An
            optional callback which returns client certificate bytes and private
            key bytes both in PEM format.

    Returns:
        Tuple[bool, bytes, bytes]:
            A boolean indicating if cert and key are obtained, the cert bytes
            and key bytes both in PEM format.

    Raises:
        google.auth.exceptions.ClientCertError: if problems occurs when getting
            the cert and key.
    aOpenSSLTacryptoacryptoaload_privatekeyaFILETYPE_PEMTapassphraseadump_privatekeyuA helper function to decrypt the private key with the given passphrase.
    google-auth library doesn't support passphrase protected private key for
    mutual TLS channel. This helper function can be used to decrypt the
    passphrase protected private key in order to estalish mutual TLS channel.

    For example, if you have a function which produces client cert, passphrase
    protected private key and passphrase, you can convert it to a client cert
    callback function accepted by google-auth::

        from google.auth.transport import _mtls_helper

        def your_client_cert_function():
            return cert, encrypted_key, passphrase

        # callback accepted by google-auth for mutual TLS channel.
        def client_cert_callback():
            cert, encrypted_key, passphrase = your_client_cert_function()
            decrypted_key = _mtls_helper.decrypt_private_key(encrypted_key,
                passphrase)
            return cert, decrypted_key

    Args:
        key (bytes): The private key bytes in PEM format.
        passphrase (bytes): The passphrase bytes.

    Returns:
        bytes: The decrypted private key in PEM format.

    Raises:
        ImportError: If pyOpenSSL is not installed.
        OpenSSL.crypto.Error: If there is any problem decrypting the private key.
    uHelper functions for getting mTLS cert and key.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aloggingugoogle.authTaexceptionsu~/.secureConnect/context_aware_metadata.jsonaCONTEXT_AWARE_METADATA_PATHacert_provider_commandacompilec-----BEGIN CERTIFICATE-----.+-----END CERTIFICATE-----
?
?aDOTALLc-----BEGIN [A-Z ]*PRIVATE KEY-----.+-----END [A-Z ]*PRIVATE KEY-----
?
?agetLoggerTugoogle.auth.transport._mtls_helperc-----BEGIN PASSPHRASE-----(.+)-----END PASSPHRASE-----Tnaget_client_cert_and_keyadecrypt_private_keyugoogle\auth\transport\_mtls_helper.pyu<module google.auth.transport._mtls_helper>Tametadata_pathTametadata_pathwfametadataacaught_excanew_excT
acommandaexpect_encrypted_keyaprocessastdoutastderracaught_excanew_excacert_matchakey_matchapassphrase_matchTakeyapassphraseacryptoapkeyTaclient_cert_callbackacertakeyahas_certw_Tagenerate_encrypted_keyacontext_aware_metadata_pathametadata_pathametadata_jsonacommandacertakeyapassphraseu.google.auth.transport
Kustatus must be implemented.uint: The HTTP status code.uheaders must be implemented.uMapping[str, str]: The HTTP response headers.udata must be implemented.ubytes: The response body.u__call__ must be implemented.uMake an HTTP request.

        Args:
            url (str): The URI to be requested.
            method (str): The HTTP method to use for the request. Defaults
                to 'GET'.
            body (bytes): The payload / body in HTTP request.
            headers (Mapping[str, str]): Request headers.
            timeout (Optional[int]): The number of seconds to wait for a
                response from the server. If not specified or if None, the
                transport-specific default timeout will be used.
            kwargs: Additionally arguments passed on to the transport's
                request method.

        Returns:
            Response: The HTTP response.

        Raises:
            google.auth.exceptions.TransportError: If any exception occurred.
        uTransport - HTTP client library support.

:mod:`google.auth` is designed to work with various HTTP client libraries such
as urllib3 and requests. In order to work across these libraries with different
interfaces some abstraction is needed.

This module provides two interfaces that are implemented by transport adapters
to support HTTP libraries. :class:`Request` defines the interface expected by
:mod:`google.auth` to make requests. :class:`Response` defines the interface
for the return value of :class:`Request`.
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_googleu\not_existinguauth\transportTaNUITKA_PACKAGE_google_authu\not_existingatransportTaNUITKA_PACKAGE_google_auth_transportu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aabcluhttp.clientaclientahttp_clientaINTERNAL_SERVER_ERRORaSERVICE_UNAVAILABLEaREQUEST_TIMEOUTaTOO_MANY_REQUESTSaDEFAULT_RETRYABLE_STATUS_CODESaUNAUTHORIZEDaDEFAULT_REFRESH_STATUS_CODESlaDEFAULT_MAX_REFRESH_ATTEMPTSametaclassaABCMetaa__prepare__TaResponseTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.transporta__module__uHTTP Response data.aResponsea__qualname__aabstractpropertyastatusuResponse.statusaheadersuResponse.headersadatauResponse.dataTTaRequestTuInterface for a callable that makes HTTP requests.

    Specific transport implementations should provide an implementation of
    this that adapts their specific request / response API.

    .. automethod:: __call__
    aRequestaabstractmethodTaGETnnna__call__uRequest.__call__ugoogle\auth\transport\__init__.pyu<module google.auth.transport>Ta__class__TaselfaurlamethodabodyaheadersatimeoutakwargsTaselfu.google.auth.transport.requests93a_responseastatus_codeaheadersacontenta_timeoutaremaining_timeouta_timeout_error_typeatimea_startanumbersaNumberlaminaelapsedu<genexpr>uTimeoutGuard.__exit__.<locals>.<genexpr>arequestsaSessionasessionaselfaclosea_LOGGERadebuguMaking request: %s %sarequestadataatimeouta_ResponseaexceptionsaRequestExceptionaTransportErroruMake an HTTP request using requests.

        Args:
            url (str): The URI to be requested.
            method (str): The HTTP method to use for the request. Defaults
                to 'GET'.
            body (bytes): The payload or body in HTTP request.
            headers (Mapping[str, str]): Request headers.
            timeout (Optional[int]): The number of seconds to wait for a
                response from the server. If not specified or if None, the
                requests default timeout will be used.
            kwargs: Additional arguments passed through to the underlying
                requests :meth:`~requests.Session.request` method.

        Returns:
            google.auth.transport.Response: The HTTP response.

        Raises:
            google.auth.exceptions.TransportError: If any exception occurred.
        acertifiaOpenSSLTacryptoacryptouurllib3.contrib.pyopensslacontribapyopensslainject_into_urllib3aload_privatekeyaFILETYPE_PEMaload_certificateacreate_urllib3_contextaload_verify_locationsawhereTacafilea_ctxause_certificateause_privatekeya_ctx_poolmanagera_ctx_proxymanagera_MutualTlsAdaptera__init__assl_contextainit_poolmanageraproxy_manager_forugoogle.auth.transportTa_custom_tls_signera_custom_tls_signeraCustomTlsSignerasigneraload_librariesaattach_to_ssl_contexta_MutualTlsOffloadAdapteraAuthorizedSessionacredentialsa_refresh_status_codesa_max_refresh_attemptsa_refresh_timeouta_is_mtlsa_default_hosta_auth_request_sessionaadaptersaHTTPAdapterTlTamax_retriesamountuhttps://aRequesta_auth_requestaservice_accountaCredentialsa_create_self_signed_jwtuhttps://{}/aosagetenvaenvironment_varsaGOOGLE_API_USE_CLIENT_CERTIFICATEafalseatrueaMutualTLSChannelErroragoogleaauthatransporta_mtls_helperaget_client_cert_and_keyutoo many values to unpack (expected 3)aClientCertErroraErroruConfigure the client certificate and key for SSL connection.

        The function does nothing unless `GOOGLE_API_USE_CLIENT_CERTIFICATE` is
        explicitly set to `true`. In this case if client certificate and key are
        successfully obtained (from the given client_cert_callback or from application
        default SSL credentials), a :class:`_MutualTlsAdapter` instance will be mounted
        to "https://" prefix.

        Args:
            client_cert_callback (Optional[Callable[[], (bytes, bytes)]]):
                The optional callback returns the client certificate and private
                key bytes both in PEM format.
                If the callback is None, application default SSL credentials
                will be used.

        Raises:
            google.auth.exceptions.MutualTLSChannelError: If mutual TLS channel
                creation failed for any reason.
        a_credential_refresh_attemptacopyapartialTatimeoutaTimeoutGuarda__enter__a__exit__abefore_requestTnnnaresponseainfouRefreshing credentials due to a %s response. Attempt %s/%s.larefreshamax_allowed_timeuImplementation of Requests' request.

        Args:
            timeout (Optional[Union[float, Tuple[float, float]]]):
                The amount of time in seconds to wait for the server response
                with each individual request. Can also be passed as a tuple
                ``(connect_timeout, read_timeout)``. See :meth:`requests.Session.request`
                documentation for details.
            max_allowed_time (Optional[float]):
                If the method runs longer than this, a ``Timeout`` exception is
                automatically raised. Unlike the ``timeout`` parameter, this
                value applies to the total method execution time, even if
                multiple requests are made under the hood.

                Mind that it is not guaranteed that the timeout error is raised
                at ``max_allowed_time``. It might take longer, for example, if
                an underlying request takes a lot of time, but the request
                itself does not timeout, e.g. if a large file is being
                transmitted. The timout error will be raised after such
                request completes.
        uIndicates if the created SSL channel is mutual TLS.uTransport adapter for Requests.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importafunctoolsaloggingacaught_excuThe requests library is not installed from please install the requests package to use the requests transport.urequests.adaptersurequests.exceptionsuurllib3.util.ssl_Tacreate_urllib3_contextugoogle.authTaenvironment_varsTaexceptionsTatransportugoogle.auth.transport._mtls_helperugoogle.oauth2Taservice_accountagetLoggerTugoogle.auth.transport.requestslxa_DEFAULT_TIMEOUTaResponsea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.auth.transport.requestsa__module__uRequests transport response adapter.

    Args:
        response (requests.Response): The raw Requests response.
    a__qualname__u_Response.__init__apropertyastatusu_Response.statusu_Response.headersu_Response.dataa__orig_bases__TOobjectuA context manager raising an error if the suite execution took too long.

    Args:
        timeout (Union[None, Union[float, Tuple[float, float]]]):
            The maximum number of seconds a suite can run without the context
            manager raising a timeout exception on exit. If passed as a tuple,
            the smaller of the values is taken as a timeout. If ``None``, a
            timeout error is never raised.
        timeout_error_type (Optional[Exception]):
            The type of the error to raise on timeout. Defaults to
            :class:`requests.exceptions.Timeout`.
    aTimeoutuTimeoutGuard.__init__uTimeoutGuard.__enter__uTimeoutGuard.__exit__uRequests request adapter.

    This class is used internally for making requests using various transports
    in a consistent way. If you use :class:`AuthorizedSession` you do not need
    to construct or use this class directly.

    This class can be useful if you want to manually refresh a
    :class:`~google.auth.credentials.Credentials` instance::

        import google.auth.transport.requests
        import requests

        request = google.auth.transport.requests.Request()

        credentials.refresh(request)

    Args:
        session (requests.Session): An instance :class:`requests.Session` used
            to make HTTP requests. If not specified, a session will be created.

    .. automethod:: __call__
    TnuRequest.__init__a__del__uRequest.__del__aGETa__call__uRequest.__call__u
    A TransportAdapter that enables mutual TLS.

    Args:
        cert (bytes): client certificate in PEM format
        key (bytes): client private key in PEM format

    Raises:
        ImportError: if certifi or pyOpenSSL is not installed
        OpenSSL.crypto.Error: if client cert or key is invalid
    u_MutualTlsAdapter.__init__u_MutualTlsAdapter.init_poolmanageru_MutualTlsAdapter.proxy_manager_foru
    A TransportAdapter that enables mutual TLS and offloads the client side
    signing operation to the signing library.

    Args:
        enterprise_cert_file_path (str): the path to a enterprise cert JSON
            file. The file should contain the following field:

                {
                    "libs": {
                        "signer_library": "...",
                        "offload_library": "..."
                    }
                }

    Raises:
        ImportError: if certifi or pyOpenSSL is not installed
        google.auth.exceptions.MutualTLSChannelError: If mutual TLS channel
            creation failed for any reason.
    u_MutualTlsOffloadAdapter.__init__u_MutualTlsOffloadAdapter.init_poolmanageru_MutualTlsOffloadAdapter.proxy_manager_foruA Requests Session class with credentials.

    This class is used to perform requests to API endpoints that require
    authorization::

        from google.auth.transport.requests import AuthorizedSession

        authed_session = AuthorizedSession(credentials)

        response = authed_session.request(
            'GET', 'https://www.googleapis.com/storage/v1/b')


    The underlying :meth:`request` implementation handles adding the
    credentials' headers to the request and refreshing credentials as needed.

    This class also supports mutual TLS via :meth:`configure_mtls_channel`
    method. In order to use this method, the `GOOGLE_API_USE_CLIENT_CERTIFICATE`
    environment variable must be explicitly set to ``true``, otherwise it does
    nothing. Assume the environment is set to ``true``, the method behaves in the
    following manner:

    If client_cert_callback is provided, client certificate and private
    key are loaded using the callback; if client_cert_callback is None,
    application default SSL credentials will be used. Exceptions are raised if
    there are problems with the certificate, private key, or the loading process,
    so it should be called within a try/except block.

    First we set the environment variable to ``true``, then create an :class:`AuthorizedSession`
    instance and specify the endpoints::

        regular_endpoint = 'https://pubsub.googleapis.com/v1/projects/{my_project_id}/topics'
        mtls_endpoint = 'https://pubsub.mtls.googleapis.com/v1/projects/{my_project_id}/topics'

        authed_session = AuthorizedSession(credentials)

    Now we can pass a callback to :meth:`configure_mtls_channel`::

        def my_cert_callback():
            # some code to load client cert bytes and private key bytes, both in
            # PEM format.
            some_code_to_load_client_cert_and_key()
            if loaded:
                return cert, key
            raise MyClientCertFailureException()

        # Always call configure_mtls_channel within a try/except block.
        try:
            authed_session.configure_mtls_channel(my_cert_callback)
        except:
            # handle exceptions.

        if authed_session.is_mtls:
            response = authed_session.request('GET', mtls_endpoint)
        else:
            response = authed_session.request('GET', regular_endpoint)


    You can alternatively use application default SSL credentials like this::

        try:
            authed_session.configure_mtls_channel()
        except:
            # handle exceptions.

    Args:
        credentials (google.auth.credentials.Credentials): The credentials to
            add to the request.
        refresh_status_codes (Sequence[int]): Which HTTP status codes indicate
            that credentials should be refreshed and the request should be
            retried.
        max_refresh_attempts (int): The maximum number of times to attempt to
            refresh the credentials and retry the request.
        refresh_timeout (Optional[int]): The timeout value in seconds for
            credential refresh HTTP requests.
        auth_request (google.auth.transport.requests.Request):
            (Optional) An instance of
            :class:`~google.auth.transport.requests.Request` used when
            refreshing credentials. If not passed,
            an instance of :class:`~google.auth.transport.requests.Request`
            is created.
        default_host (Optional[str]): A host like "pubsub.googleapis.com".
            This is used when a self-signed JWT is created from service
            account credentials.
    aDEFAULT_REFRESH_STATUS_CODESaDEFAULT_MAX_REFRESH_ATTEMPTSuAuthorizedSession.__init__aconfigure_mtls_channeluAuthorizedSession.configure_mtls_channeluAuthorizedSession.requestais_mtlsuAuthorizedSession.is_mtlsuAuthorizedSession.closeugoogle\auth\transport\requests.pyTa.0wxaelapsedu<module google.auth.transport.requests>Ta__class__T
aselfaurlamethodabodyaheadersatimeoutakwargsaresponseacaught_excanew_excTaselfTaselfaexc_typeaexc_valueatracebackaelapsedadeadline_hitTaselfacertakeyacertifiacryptoaurllib3apkeyax509actx_poolmanageractx_proxymanagera__class__Taselfacredentialsarefresh_status_codesamax_refresh_attemptsarefresh_timeoutaauth_requestadefault_hostaretry_adaptera__class__Taselfaenterprise_cert_file_pathacertifiaurllib3a_custom_tls_signerapoolmanageraproxymanagera__class__TaselfaresponseTaselfasessionTaselfatimeoutatimeout_error_typeTaselfa__class__Taselfaclient_cert_callbackause_client_certaOpenSSLacaught_excanew_excacertakeyamtls_adapterTaselfaargsakwargsa__class__Taselfamethodaurladataaheadersamax_allowed_timeatimeoutakwargsa_credential_refresh_attemptarequest_headersaauth_requestaremaining_timeaguardaresponsea__class__u.google.auth.versiona__doc__a__file__a__spec__aoriginahas_locationa__cached__u2.26.1a__version__ugoogle\auth\version.pyu<module google.auth.version>u.googlea_NamespacePathlagoogleapathadirnameaenvironagetTaNUITKA_PACKAGE_googleu\not_existinga__path__usite-packages\googleu.google.oauth2._client[-aexceptionsaRefreshErrorTaretryableu{}: {}aerroragetTaerror_descriptionTEKeyErrorEValueErrorajsonadumpsuTranslates an error response into an exception.

    Args:
        response_data (Mapping | str): The decoded response data.
        retryable_error Optional[bool]: A boolean indicating if an error is retryable.
            Defaults to False.

    Raises:
        google.auth.exceptions.RefreshError: The errors contained in response_data.
    atransportaDEFAULT_RETRYABLE_STATUS_CODESuTaerrorSatemporarily_unavailableaserver_errorainternal_failureuChecks if a request can be retried by inspecting the status code
    and response body of the request.

    Args:
        status_code (int): The response status code.
        response_data (Mapping | str): The decoded response data.

    Returns:
      bool: True if the response is retryable. False otherwise.
    aretryable_error_descriptionsu<genexpr>u_can_retry.<locals>.<genexpr>Taexpires_inna_helpersautcnowadatetimeatimedeltaTasecondsuParses the expiry field from a response into a datetime.

    Args:
        response_data (Mapping): The JSON-parsed response data.

    Returns:
        Optional[datetime]: The expiration or ``None`` if no expiration was
            specified.
    uContent-Typea_JSON_CONTENT_TYPEaencodeTuutf-8a_URLENCODED_CONTENT_TYPEaurllibaparseaurlencodeuBearer {}aheaders_to_useaAuthorizationaupdatea_perform_requestu_token_endpoint_request_no_throw.<locals>._perform_requestutoo many values to unpack (expected 3)a_exponential_backoffaExponentialBackoffaresponse_dataaretryable_erroruMakes a request to the OAuth 2.0 authorization server's token endpoint.
    This function doesn't throw on response errors.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        token_uri (str): The OAuth 2.0 authorizations server's token endpoint
            URI.
        body (Mapping[str, str]): The parameters to send in the request body.
        access_token (Optional(str)): The access token needed to make the request.
        use_json (Optional(bool)): Use urlencoded format or json format for the
            content type. The default value is False.
        can_retry (bool): Enable or disable request retry behavior.
        headers (Optional[Mapping[str, str]]): The headers for the request.
        kwargs: Additional arguments passed on to the request method. The
            kwargs will be passed to `requests.request` method, see:
            https://docs.python-requests.org/en/latest/api/#requests.request.
            For example, you can use `cert=("cert_pem_path", "key_pem_path")`
            to set up client side SSL certificate, and use
            `verify="ca_bundle_path"` to set up the CA certificates for sever
            side SSL certificate verification.

    Returns:
        Tuple(bool, Mapping[str, str], Optional[bool]): A boolean indicating
          if the request is successful, a mapping for the JSON-decoded response
          data and in the case of an error a boolean indicating if the error
          is retryable.
    arequestamethodaPOSTaurlatoken_uriaheadersabodyakwargsadataadecodealoadsastatusahttp_clientaOKa_can_retryTastatus_codearesponse_dataa_token_endpoint_request_no_throwaaccess_tokenause_jsonacan_retrya_handle_error_responseuMakes a request to the OAuth 2.0 authorization server's token endpoint.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        token_uri (str): The OAuth 2.0 authorizations server's token endpoint
            URI.
        body (Mapping[str, str]): The parameters to send in the request body.
        access_token (Optional(str)): The access token needed to make the request.
        use_json (Optional(bool)): Use urlencoded format or json format for the
            content type. The default value is False.
        can_retry (bool): Enable or disable request retry behavior.
        headers (Optional[Mapping[str, str]]): The headers for the request.
        kwargs: Additional arguments passed on to the request method. The
            kwargs will be passed to `requests.request` method, see:
            https://docs.python-requests.org/en/latest/api/#requests.request.
            For example, you can use `cert=("cert_pem_path", "key_pem_path")`
            to set up client side SSL certificate, and use
            `verify="ca_bundle_path"` to set up the CA certificates for sever
            side SSL certificate verification.

    Returns:
        Mapping[str, str]: The JSON-decoded response data.

    Raises:
        google.auth.exceptions.RefreshError: If the token endpoint returned
            an error.
    aassertionagrant_typea_JWT_GRANT_TYPEa_token_endpoint_requestametricsaAPI_CLIENT_HEADERatoken_request_access_token_sa_assertionTacan_retryaheadersuNo access token in response.DaretryableFa_parse_expiryuImplements the JWT Profile for OAuth 2.0 Authorization Grants.

    For more details, see `rfc7523 section 4`_.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        token_uri (str): The OAuth 2.0 authorizations server's token endpoint
            URI.
        assertion (str): The OAuth 2.0 assertion.
        can_retry (bool): Enable or disable request retry behavior.

    Returns:
        Tuple[str, Optional[datetime], Mapping[str, str]]: The access token,
            expiration, and additional data returned by the token endpoint.

    Raises:
        google.auth.exceptions.RefreshError: If the token endpoint returned
            an error.

    .. _rfc7523 section 4: https://tools.ietf.org/html/rfc7523#section-4
    aaudienceaincludeEmailatrueauseEmailAzpa_IAM_IDTOKEN_ENDPOINTaformatTaaccess_tokenause_jsonatokenuNo ID token in response.ajwtDaverifyFautcfromtimestampaexpuCall iam.generateIdToken endpoint to get ID token.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        signer_email (str): The signer email used to form the IAM
            generateIdToken endpoint.
        audience (str): The audience for the ID token.
        access_token (str): The access token used to call the IAM endpoint.

    Returns:
        Tuple[str, datetime]: The ID token and expiration.
    atoken_request_id_token_sa_assertionaid_tokenuImplements the JWT Profile for OAuth 2.0 Authorization Grants, but
    requests an OpenID Connect ID Token instead of an access token.

    This is a variant on the standard JWT Profile that is currently unique
    to Google. This was added for the benefit of authenticating to services
    that require ID Tokens instead of access tokens or JWT bearer tokens.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        token_uri (str): The OAuth 2.0 authorization server's token endpoint
            URI.
        assertion (str): JWT token signed by a service account. The token's
            payload must include a ``target_audience`` claim.
        can_retry (bool): Enable or disable request retry behavior.

    Returns:
        Tuple[str, Optional[datetime], Mapping[str, str]]:
            The (encoded) Open ID Connect ID Token, expiration, and additional
            data returned by the endpoint.

    Raises:
        google.auth.exceptions.RefreshError: If the token endpoint returned
            an error.
    arefresh_tokenuExtract tokens from refresh grant response.

    Args:
        response_data (Mapping[str, str]): Refresh grant response data.
        refresh_token (str): Current refresh token.

    Returns:
        Tuple[str, str, Optional[datetime], Mapping[str, str]]: The access token,
            refresh token, expiration, and additional data returned by the token
            endpoint. If response_data doesn't have refresh token, then the current
            refresh token will be returned.

    Raises:
        google.auth.exceptions.RefreshError: If the token endpoint returned
            an error.
    a_REFRESH_GRANT_TYPEaclient_idaclient_secretw ascopearaptTacan_retrya_handle_refresh_grant_responseuImplements the OAuth 2.0 refresh token grant.

    For more details, see `rfc678 section 6`_.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        token_uri (str): The OAuth 2.0 authorizations server's token endpoint
            URI.
        refresh_token (str): The refresh token to use to get a new access
            token.
        client_id (str): The OAuth 2.0 application's client ID.
        client_secret (str): The Oauth 2.0 appliaction's client secret.
        scopes (Optional(Sequence[str])): Scopes to request. If present, all
            scopes must be authorized for the refresh token. Useful if refresh
            token has a wild card scope (e.g.
            'https://www.googleapis.com/auth/any-api').
        rapt_token (Optional(str)): The reauth Proof Token.
        can_retry (bool): Enable or disable request retry behavior.

    Returns:
        Tuple[str, str, Optional[datetime], Mapping[str, str]]: The access
            token, new or current refresh token, expiration, and additional data
            returned by the token endpoint.

    Raises:
        google.auth.exceptions.RefreshError: If the token endpoint returned
            an error.

    .. _rfc6748 section 6: https://tools.ietf.org/html/rfc6749#section-6
    uOAuth 2.0 client.

This is a client for interacting with an OAuth 2.0 authorization server's
token endpoint.

For more information about the token endpoint, see
`Section 3.1 of rfc6749`_

.. _Section 3.1 of rfc6749: https://tools.ietf.org/html/rfc6749#section-3.2
a__doc__a__file__a__spec__aoriginahas_locationa__cached__luhttp.clientaclientugoogle.authTa_exponential_backoffTa_helpersTaexceptionsTajwtTametricsTatransportuapplication/x-www-form-urlencodeduapplication/jsonuurn:ietf:params:oauth:grant-type:jwt-beareruhttps://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/{}:generateIdTokenTnFtnTtajwt_grantacall_iam_generate_id_token_endpointaid_token_jwt_grantTnntarefresh_grantugoogle\oauth2\_client.pyTa.0wearetryable_error_descriptionsu<module google.oauth2._client>Tastatus_codearesponse_dataaerror_descaerror_codearetryable_error_descriptionsTaresponse_dataaretryable_erroraerror_detailsTaresponse_dataarefresh_tokenaaccess_tokenacaught_excanew_excaexpiryTaresponse_dataaexpires_inTaresponsearesponse_bodyaresponse_dataaretryable_errorarequestatoken_uriaheaders_to_useabodyakwargsTabodyaheaders_to_useakwargsarequestatoken_uriTarequestatoken_uriabodyaaccess_tokenause_jsonacan_retryaheadersakwargsaresponse_status_okaresponse_dataaretryable_errorTarequestatoken_uriabodyaaccess_tokenause_jsonacan_retryaheadersakwargsaheaders_to_usea_perform_requestarequest_succeededaresponse_dataaretryable_erroraretriesw_Tarequestasigner_emailaaudienceaaccess_tokenabodyaresponse_dataaid_tokenacaught_excanew_excapayloadaexpiryTarequestatoken_uriaassertionacan_retryabodyaresponse_dataaid_tokenacaught_excanew_excapayloadaexpiryT
arequestatoken_uriaassertionacan_retryabodyaresponse_dataaaccess_tokenacaught_excanew_excaexpiryT
arequestatoken_uriarefresh_tokenaclient_idaclient_secretascopesarapt_tokenacan_retryabodyaresponse_data.google.oauth2.challenges}agetpassuGet password from user.

    Override this function with a different logic if you are using this library
    outside a CLI.

    Args:
        text (str): message for the password prompt.

    Returns:
        str: password string.
    uname property must be implementeduReturns the name of the challenge.uis_locally_eligible property must be implementeduReturns true if a challenge is supported locally on this machine.uobtain_challenge_input method must be implementeduPerforms logic required to obtain credentials and returns it.

        Args:
            metadata (Mapping): challenge metadata returned in the 'challenges' field in
                the initial reauth request. Includes the 'challengeType' field
                and other challenge-specific fields.

        Returns:
            response that will be send to the reauth service as the content of
            the 'proposalResponse' field in the request body. Usually a dict
            with the keys specific to the challenge. For example,
            ``{'credential': password}`` for password challenge.
        aget_user_passwordTuPlease enter your password:w acredentialupyu2f.convenience.authenticatorlupyu2f.errorsupyu2f.modelaexceptionsaReauthFailErrorTupyu2f dependency is required to use Security key reauth feature. It can be installed via `pip install pyu2f` or `pip install google-auth[reauth]`.asecurityKeyachallengesaapplicationIdarelyingPartyIdakeyHandleaencodeTaasciiapyu2famodelaRegisteredKeyabase64aurlsafe_b64decodeachallengeachallenge_dataaappendakeyatrieslaconvenienceaauthenticatoraCreateCompositeAuthenticatoraREAUTH_ORIGINaAuthenticateasysastderrawriteTaprint_callbackaerrorsaU2FErroracodeaDEVICE_INELIGIBLETuIneligible security key.
aTIMEOUTTuTimed out while waiting for security key touch.
aPluginErroruPlugin error: {}.
aNoDeviceFoundErrorTuNo security key found.
aReauthSamlChallengeFailErroraSAML_CHALLENGE_MESSAGEu Challenges for reauthentication.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabcugoogle.authTa_helpersa_helpersTaexceptionsuhttps://accounts.google.comuPlease run `gcloud auth login` to complete reauthentication with SAML.ametaclassaABCMetaa__prepare__TaReauthChallengeTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.oauth2.challengesa__module__uBase class for reauth challenges.aReauthChallengea__qualname__apropertyaabstractmethodanameuReauthChallenge.nameais_locally_eligibleuReauthChallenge.is_locally_eligibleaobtain_challenge_inputuReauthChallenge.obtain_challenge_inputTaPasswordChallengeuChallenge that asks for user's password.aPASSWORDuPasswordChallenge.nameuPasswordChallenge.is_locally_eligibleacopy_docstringuPasswordChallenge.obtain_challenge_inputa__orig_bases__aSecurityKeyChallengeuChallenge that asks for user's security key touch.aSECURITY_KEYuSecurityKeyChallenge.nameuSecurityKeyChallenge.is_locally_eligibleuSecurityKeyChallenge.obtain_challenge_inputaSamlChallengeuChallenge that asks the users to browse to their ID Providers.

    Currently SAML challenge is not supported. When obtaining the challenge
    input, exception will be raised to instruct the users to run
    `gcloud auth login` for reauthentication.
    aSAMLuSamlChallenge.nameuSamlChallenge.is_locally_eligibleuSamlChallenge.obtain_challenge_inputaAVAILABLE_CHALLENGESugoogle\oauth2\challenges.pyu<module google.oauth2.challenges>Ta__class__TatextTaselfTaselfametadataTaselfametadataapyu2faskachallengesaapplication_idarelying_party_idaapplication_parametersachallenge_datawcakhakeyachallengeatriesaapp_idaapiaresponseweTaselfaunused_metadataapasswdu.google.oauth2#uGoogle OAuth 2.0 Library for Python.a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_googleu\not_existingaoauth2TaNUITKA_PACKAGE_google_oauth2u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__asysawarningslaDeprecationWarninga__prepare__aPython37DeprecationWarninga__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.oauth2a__module__u
    Deprecation warning raised when Python 3.7 runtime is detected.
    Python 3.7 support will be dropped after January 1, 2024.
    a__qualname__a__orig_bases__ugoogle\oauth2\__init__.pyu<module google.oauth2>u.google.oauth2.credentialso7aCredentialsa__init__atokenaexpirya_refresh_tokena_id_tokena_scopesa_default_scopesa_granted_scopesa_token_uria_client_ida_client_secreta_quota_project_ida_rapt_tokenarefresh_handlera_enable_reauth_refresha_trust_boundarya_DEFAULT_UNIVERSE_DOMAINa_universe_domainu
        Args:
            token (Optional(str)): The OAuth 2.0 access token. Can be None
                if refresh information is provided.
            refresh_token (str): The OAuth 2.0 refresh token. If specified,
                credentials can be refreshed.
            id_token (str): The Open ID Connect ID Token.
            token_uri (str): The OAuth 2.0 authorization server's token
                endpoint URI. Must be specified for refresh, can be left as
                None if the token can not be refreshed.
            client_id (str): The OAuth 2.0 client ID. Must be specified for
                refresh, can be left as None if the token can not be refreshed.
            client_secret(str): The OAuth 2.0 client secret. Must be specified
                for refresh, can be left as None if the token can not be
                refreshed.
            scopes (Sequence[str]): The scopes used to obtain authorization.
                This parameter is used by :meth:`has_scopes`. OAuth 2.0
                credentials can not request additional scopes after
                authorization. The scopes must be derivable from the refresh
                token if refresh information is provided (e.g. The refresh
                token scopes are a superset of this or contain a wild card
                scope like 'https://www.googleapis.com/auth/any-api').
            default_scopes (Sequence[str]): Default scopes passed by a
                Google client library. Use 'scopes' for user-defined scopes.
            quota_project_id (Optional[str]): The project ID used for quota and billing.
                This project may be different from the project used to
                create the credentials.
            rapt_token (Optional[str]): The reauth Proof Token.
            refresh_handler (Optional[Callable[[google.auth.transport.Request, Sequence[str]], [str, datetime]]]):
                A callable which takes in the HTTP request callable and the list of
                OAuth scopes and when called returns an access token string for the
                requested scopes and its expiry datetime. This is useful when no
                refresh tokens are provided and tokens are obtained by calling
                some external process on demand. It is particularly useful for
                retrieving downscoped tokens from a token broker.
            enable_reauth_refresh (Optional[bool]): Whether reauth refresh flow
                should be used. This flag is for gcloud to use only.
            granted_scopes (Optional[Sequence[str]]): The scopes that were consented/granted by the user.
                This could be different from the requested scopes and it could be empty if granted
                and requested scopes were same.
            trust_boundary (str): String representation of trust boundary meta.
            universe_domain (Optional[str]): The universe domain. The default
                universe domain is googleapis.com.
        acopya_refresh_handlera_refresh_workeruA __getstate__ method must exist for the __setstate__ to be called
        This is identical to the default implementation.
        See https://docs.python.org/3.7/library/pickle.html#object.__setstate__
        agetTatokenTaexpiryTa_refresh_tokenTa_id_tokenTa_scopesTa_default_scopesTa_granted_scopesTa_token_uriTa_client_idTa_client_secretTa_quota_project_idTa_rapt_tokenTa_enable_reauth_refreshTa_trust_boundaryTa_universe_domainTa_use_non_blocking_refreshFa_use_non_blocking_refreshuCredentials pickled with older versions of the class do not have
        all the attributes.uOptional[str]: The OAuth 2.0 refresh token.uOptional[str]: The OAuth 2.0 permission scopes.uOptional[Sequence[str]]: The OAuth 2.0 permission scopes that were granted by the user.uOptional[str]: The OAuth 2.0 authorization server's token endpoint
        URI.uOptional[str]: The Open ID Connect ID Token.

        Depending on the authorization server and the scopes requested, this
        may be populated when credentials are obtained and updated when
        :meth:`refresh` is called. This token is a JWT. It can be verified
        and decoded using :func:`google.oauth2.id_token.verify_oauth2_token`.
        uOptional[str]: The OAuth 2.0 client ID.uOptional[str]: The OAuth 2.0 client secret.uOptional[str]: The reauth Proof Token.uReturns the refresh handler if available.

        Returns:
           Optional[Callable[[google.auth.transport.Request, Sequence[str]], [str, datetime]]]:
               The current refresh handler.
        acallableuThe provided refresh_handler is not a callable or None.uUpdates the current refresh handler.

        Args:
            value (Optional[Callable[[google.auth.transport.Request, Sequence[str]], [str, datetime]]]):
                The updated value of the refresh handler.

        Raises:
            TypeError: If the value is not a callable or None.
        arefresh_tokenaid_tokenatoken_uriaclient_idaclient_secretascopesadefault_scopesagranted_scopesarapt_tokenT
arefresh_tokenaid_tokenatoken_uriaclient_idaclient_secretascopesadefault_scopesagranted_scopesaquota_project_idarapt_tokenaenable_reauth_refreshatrust_boundaryauniverse_domainaquota_project_idametricsaCRED_TYPE_USERaexceptionsaRefreshErroruUser credential refresh is only supported in the default googleapis.com universe domain, but the current universe domain is {}. If you created the credential with an access token, it's likely that the provided token is expired now, please update your code with a valid token.Tascopesutoo many values to unpack (expected 2)TuThe refresh_handler returned token is not a string.adatetimeTuThe refresh_handler returned expiry is not a datetime object.a_helpersautcnowaREFRESH_THRESHOLDTuThe credentials returned by the refresh_handler are already expired.TuThe credentials do not contain the necessary fields need to refresh the access token. You must specify refresh_token, token_uri, client_id, and client_secret.areautharefresh_grantTascopesarapt_tokenaenable_reauth_refreshutoo many values to unpack (expected 5)Taid_tokenascopeasplita_LOGGERawarninguNot all requested scopes were granted by the authorization server, missing scopes {}.u, Sarefresh_tokenaclient_secretaclient_idadifferenceakeysuAuthorized user info was not in the expected format, missing fields {}.astrptimearstripTwZTw.lu%Y-%m-%dT%H:%M:%STw Tarefresh_tokena_GOOGLE_OAUTH2_TOKEN_ENDPOINTTaclient_idTaclient_secretTaquota_project_idTarapt_tokenTatrust_boundaryTauniverse_domainTatokenarefresh_tokenatoken_uriascopesaclient_idaclient_secretaquota_project_idaexpiryarapt_tokenatrust_boundaryauniverse_domainuCreates a Credentials instance from parsed authorized user info.

        Args:
            info (Mapping[str, str]): The authorized user info in Google
                format.
            scopes (Sequence[str]): Optional list of scopes to include in the
                credentials.

        Returns:
            google.oauth2.credentials.Credentials: The constructed
                credentials.

        Raises:
            ValueError: If the info is not in the expected format.
        aioaopenwrDaencodinguutf-8a__enter__a__exit__ajsonaloadafrom_authorized_user_infoTnnnuCreates a Credentials instance from an authorized user json file.

        Args:
            filename (str): The path to the authorized user json file.
            scopes (Sequence[str]): Optional list of scopes to include in the
                credentials.

        Returns:
            google.oauth2.credentials.Credentials: The constructed
                credentials.

        Raises:
            ValueError: If the file is not in the expected format.
        auniverse_domainaisoformatwZaprepaitemsadumpsuUtility function that creates a JSON representation of a Credentials
        object.

        Args:
            strip (Sequence[str]): Optional list of members to exclude from the
                                   generated JSON.

        Returns:
            str: A JSON representation of this instance. When converted into
            a dictionary, it can be passed to from_authorized_user_info()
            to create a new credential instance.
        awarningsawarnTuUserAccessTokenCredentials is deprecated, please use google.oauth2.credentials.Credentials instead. To use that credential type, simply run `gcloud auth application-default login` and let the client libraries pick up the application default credentials.aUserAccessTokenCredentialsa_accountTaaccountaquota_project_iduCreate a new instance with the given account.

        Args:
            account (str): Account to get the access token for.

        Returns:
            google.oauth2.credentials.UserAccessTokenCredentials: The created
                credentials with the given account.
        a_cloud_sdkaget_auth_access_tokenuRefreshes the access token.

        Args:
            request (google.auth.transport.Request): This argument is required
                by the base class interface but not used in this implementation,
                so just set it to `None`.

        Raises:
            google.auth.exceptions.UserAccessTokenError: If the access token
                refresh failed.
        arefreshaapplyuOAuth 2.0 Credentials.

This module provides credentials based on OAuth 2.0 access and refresh tokens.
These credentials usually access resources on behalf of a user (resource
owner).

Specifically, this is intended to use access tokens acquired using the
`Authorization Code grant`_ and can refresh those tokens using a
optional `refresh token`_.

Obtaining the initial access and refresh token is outside of the scope of this
module. Consult `rfc6749 section 4.1`_ for complete details on the
Authorization Code grant flow.

.. _Authorization Code grant: https://tools.ietf.org/html/rfc6749#section-1.3.1
.. _refresh token: https://tools.ietf.org/html/rfc6749#section-6
.. _rfc6749 section 4.1: https://tools.ietf.org/html/rfc6749#section-4.1
a__doc__a__file__a__spec__aoriginahas_locationa__cached__Tadatetimealoggingugoogle.authTa_cloud_sdkTa_helpersTacredentialsacredentialsTaexceptionsTametricsugoogle.oauth2TareauthagetLoggerTugoogle.oauth2.credentialsuhttps://oauth2.googleapis.com/tokenugoogleapis.comaReadOnlyScopedaCredentialsWithQuotaProjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.oauth2.credentialsa__module__uCredentials using OAuth 2.0 access and refresh tokens.

    The credentials are considered immutable except the tokens and the token
    expiry, which are updated after refresh. If you want to modify the quota
    project, use :meth:`with_quota_project` or ::

        credentials = credentials.with_quota_project('myproject-123')

    Reauth is disabled by default. To enable reauth, set the
    `enable_reauth_refresh` parameter to True in the constructor. Note that
    reauth feature is intended for gcloud to use only.
    If reauth is enabled, `pyu2f` dependency has to be installed in order to use security
    key reauth feature. Dependency can be installed via `pip install pyu2f` or `pip install
    google-auth[reauth]`.
    a__qualname__uCredentials.__init__a__getstate__uCredentials.__getstate__a__setstate__uCredentials.__setstate__apropertyuCredentials.refresh_tokenuCredentials.scopesuCredentials.granted_scopesuCredentials.token_uriuCredentials.id_tokenuCredentials.client_iduCredentials.client_secretuFalse: OAuth 2.0 credentials have their scopes set when
        the initial token is requested and can not be changed.arequires_scopesuCredentials.requires_scopesuCredentials.rapt_tokenuCredentials.refresh_handlerasetteracopy_docstringawith_quota_projectuCredentials.with_quota_projectaCredentialsWithTokenUriawith_token_uriuCredentials.with_token_uriaCredentialsWithUniverseDomainawith_universe_domainuCredentials.with_universe_domaina_metric_header_for_usageuCredentials._metric_header_for_usageuCredentials.refreshaclassmethodTnuCredentials.from_authorized_user_infoafrom_authorized_user_fileuCredentials.from_authorized_user_fileato_jsonuCredentials.to_jsona__orig_bases__uAccess token credentials for user account.

    Obtain the access token for a given user account or the current active
    user account with the ``gcloud auth print-access-token`` command.

    Args:
        account (Optional[str]): Account to get the access token for. If not
            specified, the current active account will be used.
        quota_project_id (Optional[str]): The project ID used for quota
            and billing.
    TnnuUserAccessTokenCredentials.__init__awith_accountuUserAccessTokenCredentials.with_accountuUserAccessTokenCredentials.with_quota_projectuUserAccessTokenCredentials.refreshabefore_requestuUserAccessTokenCredentials.before_requestugoogle\oauth2\credentials.pyu<module google.oauth2.credentials>Ta__class__Taselfastate_dictTaselfaaccountaquota_project_ida__class__Taselfatokenarefresh_tokenaid_tokenatoken_uriaclient_idaclient_secretascopesadefault_scopesaquota_project_idaexpiryarapt_tokenarefresh_handleraenable_reauth_refreshagranted_scopesatrust_boundaryauniverse_domaina__class__TaselfwdTaselfTaselfarequestamethodaurlaheadersTaclsafilenameascopesajson_fileadataTaclsainfoascopesakeys_neededamissingaexpiryTaselfarequestTaselfarequestascopesatokenaexpiryaaccess_tokenarefresh_tokenagrant_responsearapt_tokenarequested_scopesagranted_scopesascopes_requested_but_not_grantedTaselfavalueTaselfastripaprepTaselfaaccountTaselfaquota_project_idTaselfatoken_uriTaselfauniverse_domainu.google.oauth2.gdch_credentials{aServiceAccountCredentialsa__init__a_signera_service_identity_namea_projecta_audiencea_token_uria_ca_cert_pathu
        Args:
            signer (google.auth.crypt.Signer): The signer used to sign JWTs.
            service_identity_name (str): The service identity name. It will be
                used as the `iss` and `sub` claim in the self signed JWT.
            project (str): The project.
            audience (str): The audience for the final token.
            token_uri (str): The token server uri.
            ca_cert_path (str): The CA cert path for token server side TLS
                certificate verification. If the token server uses well known
                CA, then this parameter can be `None`.
        a_helpersautcnowaJWT_LIFETIMEusystem:serviceaccount:{}:{}aissasubaaudaiatadatetime_to_secsaexpafrom_bytesajwtaencodeugoogle.auth.transport.requestslaauthatransportarequestsaRequestaexceptionsaRefreshErrorTuFor GDCH service account credentials, request must be a google.auth.transport.requests.Request objecta_create_jwtagrant_typeaTOKEN_EXCHANGE_TYPEaaudiencearequested_token_typeaACCESS_TOKEN_TOKEN_TYPEasubject_tokenasubject_token_typeaSERVICE_ACCOUNT_TOKEN_TYPEa_clienta_token_endpoint_requestTaaccess_tokenause_jsonaverifya_handle_refresh_grant_responseutoo many values to unpack (expected 4)atokenaexpiryuCreate a copy of GDCH credentials with the specified audience.

        Args:
            audience (str): The intended audience for GDCH credentials.
        aformat_versionw1uOnly format version 1 is supportedanameaprojectatoken_uriagetTaca_cert_pathnuCreates a Credentials instance from a signer and service account
        info.

        Args:
            signer (google.auth.crypt.Signer): The signer used to sign JWTs.
            info (Mapping[str, str]): The service account info.

        Returns:
            google.oauth2.gdch_credentials.ServiceAccountCredentials: The constructed
                credentials.

        Raises:
            ValueError: If the info is not in the expected format.
        a_service_account_infoafrom_dictDarequireause_rsa_signerLaformat_versionaprivate_key_idaprivate_keyanameaprojectatoken_uriFa_from_signer_and_infouCreates a Credentials instance from parsed service account info.

        Args:
            info (Mapping[str, str]): The service account info in Google
                format.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.oauth2.gdch_credentials.ServiceAccountCredentials: The constructed
                credentials.

        Raises:
            ValueError: If the info is not in the expected format.
        afrom_filenameutoo many values to unpack (expected 2)uCreates a Credentials instance from a service account json file.

        Args:
            filename (str): The path to the service account json file.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.oauth2.gdch_credentials.ServiceAccountCredentials: The constructed
                credentials.
        uExperimental GDCH credentials support.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__adatetimeugoogle.authTa_helpersTa_service_account_infoTacredentialsacredentialsTaexceptionsTajwtugoogle.oauth2Ta_clientuurn:ietf:params:oauth:token-type:token-exchangeuurn:ietf:params:oauth:token-type:access_tokenuurn:k8s:params:oauth:token-type:serviceaccountatimedeltaTlTasecondsaCredentialsa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.oauth2.gdch_credentialsa__module__uCredentials for GDCH (`Google Distributed Cloud Hosted`_) for service
    account users.

    .. _Google Distributed Cloud Hosted:
        https://cloud.google.com/blog/topics/hybrid-cloud/            announcing-google-distributed-cloud-edge-and-hosted

    To create a GDCH service account credential, first create a JSON file of
    the following format::

        {
            "type": "gdch_service_account",
            "format_version": "1",
            "project": "<project name>",
            "private_key_id": "<key id>",
            "private_key": "-----BEGIN EC PRIVATE KEY-----
<key bytes>
-----END EC PRIVATE KEY-----
",
            "name": "<service identity name>",
            "ca_cert_path": "<CA cert path>",
            "token_uri": "https://service-identity.<Domain>/authenticate"
        }

    The "format_version" field stands for the format of the JSON file. For now
    it is always "1". The `private_key_id` and `private_key` is used for signing.
    The `ca_cert_path` is used for token server TLS certificate verification.

    After the JSON file is created, set `GOOGLE_APPLICATION_CREDENTIALS` environment
    variable to the JSON file path, then use the following code to create the
    credential::

        import google.auth

        credential, _ = google.auth.default()
        credential = credential.with_gdch_audience("<the audience>")

    We can also create the credential directly::

        from google.oauth import gdch_credentials

        credential = gdch_credentials.ServiceAccountCredentials.from_service_account_file("<the json file path>")
        credential = credential.with_gdch_audience("<the audience>")

    The token is obtained in the following way. This class first creates a
    self signed JWT. It uses the `name` value as the `iss` and `sub` claim, and
    the `token_uri` as the `aud` claim, and signs the JWT with the `private_key`.
    It then sends the JWT to the `token_uri` to exchange a final token for
    `audience`.
    a__qualname__uServiceAccountCredentials.__init__uServiceAccountCredentials._create_jwtacopy_docstringarefreshuServiceAccountCredentials.refreshawith_gdch_audienceuServiceAccountCredentials.with_gdch_audienceaclassmethoduServiceAccountCredentials._from_signer_and_infoafrom_service_account_infouServiceAccountCredentials.from_service_account_infoafrom_service_account_fileuServiceAccountCredentials.from_service_account_filea__orig_bases__ugoogle\oauth2\gdch_credentials.pyu<module google.oauth2.gdch_credentials>Ta__class__Taselfasigneraservice_identity_nameaprojectaaudienceatoken_uriaca_cert_patha__class__Taselfanowaexpiryaiss_sub_valueapayloadTaclsasignerainfoTaclsafilenameainfoasignerTaclsainfoasignerTaselfarequestagoogleajwt_tokenarequest_bodyaresponse_dataw_Taselfaaudienceu.google.oauth2.reauthx}asysastdinaisattyuCheck if we are in an interractive environment.

    Override this function with a different logic if you are using this library
    outside a CLI.

    If the rapt token needs refreshing, the user needs to answer the challenges.
    If the user is not in an interractive environment, the challenges can not
    be answered and we just wait for timeout for no reason.

    Returns:
        bool: True if is interactive environment, False otherwise.
    asupportedChallengeTypesaoauthScopesForDomainPolicyLookupametricsaAPI_CLIENT_HEADERareauth_starta_clienta_token_endpoint_requesta_REAUTH_APIu:startabodyTaaccess_tokenause_jsonaheadersuDoes initial request to reauth API to get the challenges.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        supported_challenge_types (Sequence[str]): list of challenge names
            supported by the manager.
        access_token (str): Access token with reauth scopes.
        requested_scopes (Optional(Sequence[str])): Authorized scopes for the credentials.

    Returns:
        dict: The response from the reauth API.
    asessionIdachallengeIdaactionaRESPONDaproposalResponseareauth_continueu/{}:continueuAttempt to refresh access token by sending next challenge result.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        session_id (str): session id returned by the initial reauth call.
        challenge_id (str): challenge id returned by the initial reauth call.
        client_input: dict with a challenge-specific client input. For example:
            ``{'credential': password}`` for password challenge.
        access_token (str): Access token with reauth scopes.

    Returns:
        dict: The response from the reauth API.
    achallengesastatusaREADYaAVAILABLE_CHALLENGESagetachallengeTypeaexceptionsaReauthFailErroruUnsupported challenge type {0}. Supported types: {1}w,akeysais_locally_eligibleuChallenge {0} is not locally eligibleaobtain_challenge_inputa_send_challenge_resultuGet the next challenge from msg and run it.

    Args:
        msg (dict): Reauth API response body (either from the initial request to
            https://reauth.googleapis.com/v2/sessions:start or from sending the
            previous challenge response to
            https://reauth.googleapis.com/v2/sessions/id:continue)
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        access_token (str): reauth access token

    Returns:
        dict: The response from the reauth API.

    Raises:
        google.auth.exceptions.ReauthError: if reauth failed.
    a_get_challengesa_AUTHENTICATEDaencodedProofOfReauthTokenlaRUN_CHALLENGE_RETRY_LIMITamsga_CHALLENGE_REQUIREDa_CHALLENGE_PENDINGuReauthentication challenge failed due to API error: {}ais_interactiveTuReauthentication challenge could not be answered because you are not in an interactive session.a_run_next_challengearequestaaccess_tokenTuFailed to obtain rapt token.uGiven an http request method and reauth access token, get rapt token.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        access_token (str): reauth access token
        requested_scopes (Sequence[str]): scopes required by the client application

    Returns:
        str: The rapt token.

    Raises:
        google.auth.exceptions.ReauthError: if reauth failed
    awriteTuReauthentication required.
arefresh_granta_REAUTH_SCOPETarequestaclient_idaclient_secretarefresh_tokenatoken_uriascopesutoo many values to unpack (expected 4)a_obtain_raptTarequested_scopesuGiven an http request method and refresh_token, get rapt token.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        client_id (str): client id to get access token for reauth scope.
        client_secret (str): client secret for the client_id
        refresh_token (str): refresh token to refresh access token
        token_uri (str): uri to refresh access token
        scopes (Optional(Sequence[str])): scopes required by the client application

    Returns:
        str: The rapt token.
    Raises:
        google.auth.exceptions.RefreshError: If reauth failed.
    agrant_typea_REFRESH_GRANT_TYPEaclient_idaclient_secretarefresh_tokenw ascopearaptatoken_request_usera_token_endpoint_request_no_throwTaheadersutoo many values to unpack (expected 3)aRefreshErrorDaretryableFTaerrora_REAUTH_NEEDED_ERRORTaerror_subtypea_REAUTH_NEEDED_ERROR_INVALID_RAPTa_REAUTH_NEEDED_ERROR_RAPT_REQUIREDTuReauthentication is needed. Please run `gcloud auth application-default login` to reauthenticate.aget_rapt_tokenTascopesa_handle_error_responsearesponse_dataa_handle_refresh_grant_responsearapt_tokenuImplements the reauthentication flow.

    Args:
        request (google.auth.transport.Request): A callable used to make
            HTTP requests.
        token_uri (str): The OAuth 2.0 authorizations server's token endpoint
            URI.
        refresh_token (str): The refresh token to use to get a new access
            token.
        client_id (str): The OAuth 2.0 application's client ID.
        client_secret (str): The Oauth 2.0 appliaction's client secret.
        scopes (Optional(Sequence[str])): Scopes to request. If present, all
            scopes must be authorized for the refresh token. Useful if refresh
            token has a wild card scope (e.g.
            'https://www.googleapis.com/auth/any-api').
        rapt_token (Optional(str)): The rapt token for reauth.
        enable_reauth_refresh (Optional[bool]): Whether reauth refresh flow
            should be used. The default value is False. This option is for
            gcloud only, other users should use the default value.

    Returns:
        Tuple[str, Optional[str], Optional[datetime], Mapping[str, str], str]: The
            access token, new refresh token, expiration, the additional data
            returned by the token endpoint, and the rapt token.

    Raises:
        google.auth.exceptions.RefreshError: If the token endpoint returned
            an error.
    uA module that provides functions for handling rapt authentication.

Reauth is a process of obtaining additional authentication (such as password,
security token, etc.) while refreshing OAuth 2.0 credentials for a user.

Credentials that use the Reauth flow must have the reauth scope,
``https://www.googleapis.com/auth/accounts.reauth``.

This module provides a high-level function for executing the Reauth process,
:func:`refresh_grant`, and lower-level helpers for doing the individual
steps of the reauth process.

Those steps are:

1. Obtaining a list of challenges from the reauth server.
2. Running through each challenge and sending the result back to the reauth
   server.
3. Refreshing the access token using the returned rapt token.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__ugoogle.authTaexceptionsTametricsugoogle.oauth2Ta_clientTachallengesuhttps://www.googleapis.com/auth/accounts.reauthuhttps://reauth.googleapis.com/v2/sessionsainvalid_grantainvalid_raptarapt_requiredaAUTHENTICATEDaCHALLENGE_REQUIREDaCHALLENGE_PENDINGlTnTnnFugoogle\oauth2\reauth.pyu<module google.oauth2.reauth>Tarequestasupported_challenge_typesaaccess_tokenarequested_scopesabodyametrics_headerTarequestaaccess_tokenarequested_scopesamsgw_Tamsgarequestaaccess_tokenachallengewcaclient_inputTarequestasession_idachallenge_idaclient_inputaaccess_tokenabodyametrics_headerTarequestaclient_idaclient_secretarefresh_tokenatoken_uriascopesaaccess_tokenw_arapt_tokenT
arequestatoken_uriarefresh_tokenaclient_idaclient_secretascopesarapt_tokenaenable_reauth_refreshabodyametrics_headeraresponse_status_okaresponse_dataaretryable_erroru.google.oauth2.service_accountMaCredentialsa__init__a_scopesa_default_scopesa_signera_service_account_emaila_subjecta_project_ida_quota_project_ida_token_uria_always_use_jwt_accessa_DEFAULT_UNIVERSE_DOMAINa_universe_domaina_jwt_credentialsa_additional_claimsDalocationsaencoded_locationsLu0x0a_trust_boundaryu
        Args:
            signer (google.auth.crypt.Signer): The signer used to sign JWTs.
            service_account_email (str): The service account's email.
            scopes (Sequence[str]): User-defined scopes to request during the
                authorization grant.
            default_scopes (Sequence[str]): Default scopes passed by a
                Google client library. Use 'scopes' for user-defined scopes.
            token_uri (str): The OAuth 2.0 Token URI.
            subject (str): For domain-wide delegation, the email address of the
                user to for which to request delegated access.
            project_id  (str): Project ID associated with the service account
                credential.
            quota_project_id (Optional[str]): The project ID used for quota and
                billing.
            additional_claims (Mapping[str, str]): Any additional claims for
                the JWT assertion used in the authorization grant.
            always_use_jwt_access (Optional[bool]): Whether self signed JWT should
                be always used.
            universe_domain (str): The universe domain. The default
                universe domain is googleapis.com. For default value self
                signed jwt is used for token refresh.
            trust_boundary (str): String representation of trust boundary meta.

        .. note:: Typically one of the helper constructors
            :meth:`from_service_account_file` or
            :meth:`from_service_account_info` are used instead of calling the
            constructor directly.
        aservice_account_emailaclient_emailatoken_uriaproject_idagetTaproject_idauniverse_domainatrust_boundaryTatrust_boundaryuCreates a Credentials instance from a signer and service account
        info.

        Args:
            signer (google.auth.crypt.Signer): The signer used to sign JWTs.
            info (Mapping[str, str]): The service account info.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.jwt.Credentials: The constructed credentials.

        Raises:
            ValueError: If the info is not in the expected format.
        a_service_account_infoafrom_dictDarequireLaclient_emailatoken_uria_from_signer_and_infouCreates a Credentials instance from parsed service account info.

        Args:
            info (Mapping[str, str]): The service account info in Google
                format.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.service_account.Credentials: The constructed
                credentials.

        Raises:
            ValueError: If the info is not in the expected format.
        afrom_filenameutoo many values to unpack (expected 2)uCreates a Credentials instance from a service account json file.

        Args:
            filename (str): The path to the service account json file.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.service_account.Credentials: The constructed
                credentials.
        uThe service account email.uProject ID associated with this credential.uChecks if the credentials requires scopes.

        Returns:
            bool: True if there are no scopes set otherwise False.
        acopyT
aservice_account_emailascopesadefault_scopesatoken_uriasubjectaproject_idaquota_project_idaadditional_claimsaalways_use_jwt_accessauniverse_domaina_make_copyaexceptionsaInvalidValueTualways_use_jwt_access should be True for non-default universe domainuCreate a copy of these credentials with the specified always_use_jwt_access value.

        Args:
            always_use_jwt_access (bool): Whether always use self signed JWT or not.

        Returns:
            google.auth.service_account.Credentials: A new credentials
                instance.
        Raises:
            google.auth.exceptions.InvalidValue: If the universe domain is not
                default and always_use_jwt_access is False.
        uCreate a copy of these credentials with the specified subject.

        Args:
            subject (str): The subject claim.

        Returns:
            google.auth.service_account.Credentials: A new credentials
                instance.
        adeepcopyaupdateuReturns a copy of these credentials with modified claims.

        Args:
            additional_claims (Mapping[str, str]): Any additional claims for
                the JWT payload. This will be merged with the current
                additional claims.

        Returns:
            google.auth.service_account.Credentials: A new credentials
                instance.
        a_helpersautcnowadatetimeatimedeltaa_DEFAULT_TOKEN_LIFETIME_SECSTasecondsaiatadatetime_to_secsaexpaissaauda_GOOGLE_OAUTH2_TOKEN_ENDPOINTascopeascopes_to_stringTasubajwtaencodeuCreate the OAuth 2.0 assertion.

        This assertion is used during the OAuth 2.0 grant to acquire an
        access token.

        Returns:
            bytes: The authorization grant assertion.
        a_use_self_signed_jwtametricsaCRED_TYPE_SA_JWTaCRED_TYPE_SA_ASSERTIONa_create_self_signed_jwtTnaRefreshErrorTudomain wide delegation is not supported for non-default universe domainarefreshatokenadecodeaexpirya_make_authorization_grant_assertiona_clientajwt_grantutoo many values to unpack (expected 3)w aadditional_claimsafrom_signing_credentialsTaadditional_claimsa_audienceuCreate a self-signed JWT from the credentials if requirements are met.

        Args:
            audience (str): The service URL. ``https://[API_ENDPOINT]/``
        asignaIDTokenCredentialsa_target_audiencea_use_iam_endpointu
        Args:
            signer (google.auth.crypt.Signer): The signer used to sign JWTs.
            service_account_email (str): The service account's email.
            token_uri (str): The OAuth 2.0 Token URI.
            target_audience (str): The intended audience for these credentials,
                used when requesting the ID Token. The ID Token's ``aud`` claim
                will be set to this string.
            additional_claims (Mapping[str, str]): Any additional claims for
                the JWT assertion used in the authorization grant.
            quota_project_id (Optional[str]): The project ID used for quota and billing.
            universe_domain (str): The universe domain. The default
                universe domain is googleapis.com. For default value IAM ID
                token endponint is used for token refresh. Note that
                iam.serviceAccountTokenCreator role is required to use the IAM
                endpoint.
        .. note:: Typically one of the helper constructors
            :meth:`from_service_account_file` or
            :meth:`from_service_account_info` are used instead of calling the
            constructor directly.
        asetdefaultuCreates a credentials instance from a signer and service account
        info.

        Args:
            signer (google.auth.crypt.Signer): The signer used to sign JWTs.
            info (Mapping[str, str]): The service account info.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.jwt.IDTokenCredentials: The constructed credentials.

        Raises:
            ValueError: If the info is not in the expected format.
        uCreates a credentials instance from parsed service account info.

        Args:
            info (Mapping[str, str]): The service account info in Google
                format.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.service_account.IDTokenCredentials: The constructed
                credentials.

        Raises:
            ValueError: If the info is not in the expected format.
        uCreates a credentials instance from a service account json file.

        Args:
            filename (str): The path to the service account json file.
            kwargs: Additional arguments to pass to the constructor.

        Returns:
            google.auth.service_account.IDTokenCredentials: The constructed
                credentials.
        aquota_project_idTaservice_account_emailatoken_uriatarget_audienceaadditional_claimsaquota_project_idauniverse_domainuCreate a copy of these credentials with the specified target
        audience.

        Args:
            target_audience (str): The intended audience for these credentials,
            used when requesting the ID Token.

        Returns:
            google.auth.service_account.IDTokenCredentials: A new credentials
                instance.
        Tuuse_iam_endpoint should be True for non-default universe domainuCreate a copy of these credentials with the use_iam_endpoint value.

        Args:
            use_iam_endpoint (bool): If True, IAM generateIdToken endpoint will
                be used instead of the token_uri. Note that
                iam.serviceAccountTokenCreator role is required to use the IAM
                endpoint. The default value is False. This feature is currently
                experimental and subject to change without notice.

        Returns:
            google.auth.service_account.IDTokenCredentials: A new credentials
                instance.
        Raises:
            google.auth.exceptions.InvalidValue: If the universe domain is not
                default and use_iam_endpoint is False.
        atarget_audienceuCreate the OAuth 2.0 assertion.

        This assertion is used during the OAuth 2.0 grant to acquire an
        ID token.

        Returns:
            bytes: The authorization grant assertion.
        Daadditional_claimsDascopeuhttps://www.googleapis.com/auth/iamacall_iam_generate_id_token_endpointasigner_emailuUse IAM generateIdToken endpoint to obtain an ID token.

        It works as follows:

        1. First we create a self signed jwt with
        https://www.googleapis.com/auth/iam being the scope.

        2. Next we use the self signed jwt as the access token, and make a POST
        request to IAM generateIdToken endpoint. The request body is:
            {
                "audience": self._target_audience,
                "includeEmail": "true",
                "useEmailAzp": "true",
            }

        If the request is succesfully, it will return {"token":"the ID token"},
        and we can extract the ID token and compute its expiry.
        a_refresh_with_iam_endpointaid_token_jwt_grantuService Accounts: JSON Web Token (JWT) Profile for OAuth 2.0

This module implements the JWT Profile for OAuth 2.0 Authorization Grants
as defined by `RFC 7523`_ with particular support for how this RFC is
implemented in Google's infrastructure. Google refers to these credentials
as *Service Accounts*.

Service accounts are used for server-to-server communication, such as
interactions between a web application server and a Google service. The
service account belongs to your application instead of to an individual end
user. In contrast to other OAuth 2.0 profiles, no users are involved and your
application "acts" as the service account.

Typically an application uses a service account when the application uses
Google APIs to work with its own data rather than a user's data. For example,
an application that uses Google Cloud Datastore for data persistence would use
a service account to authenticate its calls to the Google Cloud Datastore API.
However, an application that needs to access a user's Drive documents would
use the normal OAuth 2.0 profile.

Additionally, Google Apps domain administrators can grant service accounts
`domain-wide delegation`_ authority to access user data on behalf of users in
the domain.

This profile uses a JWT to acquire an OAuth 2.0 access token. The JWT is used
in place of the usual authorization token returned during the standard
OAuth 2.0 Authorization Code grant. The JWT is only used for this purpose, as
the acquired access token is used as the bearer token when making requests
using these credentials.

This profile differs from normal OAuth 2.0 profile because no user consent
step is required. The use of the private key allows this profile to assert
identity directly.

This profile also differs from the :mod:`google.auth.jwt` authentication
because the JWT credentials use the JWT directly as the bearer token. This
profile instead only uses the JWT to obtain an OAuth 2.0 access token. The
obtained OAuth 2.0 access token is used as the bearer token.

Domain-wide delegation
----------------------

Domain-wide delegation allows a service account to access user data on
behalf of any user in a Google Apps domain without consent from the user.
For example, an application that uses the Google Calendar API to add events to
the calendars of all users in a Google Apps domain would use a service account
to access the Google Calendar API on behalf of users.

The Google Apps administrator must explicitly authorize the service account to
do this. This authorization step is referred to as "delegating domain-wide
authority" to a service account.

You can use domain-wise delegation by creating a set of credentials with a
specific subject using :meth:`~Credentials.with_subject`.

.. _RFC 7523: https://tools.ietf.org/html/rfc7523
a__doc__a__file__a__spec__aoriginahas_locationa__cached__lugoogle.authTa_helpersTa_service_account_infoTacredentialsacredentialsTaexceptionsTajwtTametricsugoogle.oauth2Ta_clientlugoogleapis.comuhttps://oauth2.googleapis.com/tokenaSigningaScopedaCredentialsWithQuotaProjectaCredentialsWithTokenUria__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.oauth2.service_accounta__module__uService account credentials

    Usually, you'll create these credentials with one of the helper
    constructors. To create credentials using a Google service account
    private key JSON file::

        credentials = service_account.Credentials.from_service_account_file(
            'service-account.json')

    Or if you already have the service account file loaded::

        service_account_info = json.load(open('service_account.json'))
        credentials = service_account.Credentials.from_service_account_info(
            service_account_info)

    Both helper methods pass on arguments to the constructor, so you can
    specify additional scopes and a subject if necessary::

        credentials = service_account.Credentials.from_service_account_file(
            'service-account.json',
            scopes=['email'],
            subject='user@example.com')

    The credentials are considered immutable. If you want to modify the scopes
    or the subject used for delegation, use :meth:`with_scopes` or
    :meth:`with_subject`::

        scoped_credentials = credentials.with_scopes(['email'])
        delegated_credentials = credentials.with_subject(subject)

    To add a quota project, use :meth:`with_quota_project`::

        credentials = credentials.with_quota_project('myproject-123')
    a__qualname__uCredentials.__init__aclassmethoduCredentials._from_signer_and_infoafrom_service_account_infouCredentials.from_service_account_infoafrom_service_account_fileuCredentials.from_service_account_fileapropertyuCredentials.service_account_emailuCredentials.project_idarequires_scopesuCredentials.requires_scopesuCredentials._make_copyacopy_docstringawith_scopesuCredentials.with_scopesawith_always_use_jwt_accessuCredentials.with_always_use_jwt_accessaCredentialsWithUniverseDomainawith_universe_domainuCredentials.with_universe_domainawith_subjectuCredentials.with_subjectawith_claimsuCredentials.with_claimsawith_quota_projectuCredentials.with_quota_projectawith_token_uriuCredentials.with_token_uriuCredentials._make_authorization_grant_assertionuCredentials._use_self_signed_jwta_metric_header_for_usageuCredentials._metric_header_for_usageuCredentials.refreshuCredentials._create_self_signed_jwtasign_bytesuCredentials.sign_bytesasigneruCredentials.signeruCredentials.signer_emaila__orig_bases__uOpen ID Connect ID Token-based service account credentials.

    These credentials are largely similar to :class:`.Credentials`, but instead
    of using an OAuth 2.0 Access Token as the bearer token, they use an Open
    ID Connect ID Token as the bearer token. These credentials are useful when
    communicating to services that require ID Tokens and can not accept access
    tokens.

    Usually, you'll create these credentials with one of the helper
    constructors. To create credentials using a Google service account
    private key JSON file::

        credentials = (
            service_account.IDTokenCredentials.from_service_account_file(
                'service-account.json'))


    Or if you already have the service account file loaded::

        service_account_info = json.load(open('service_account.json'))
        credentials = (
            service_account.IDTokenCredentials.from_service_account_info(
                service_account_info))


    Both helper methods pass on arguments to the constructor, so you can
    specify additional scopes and a subject if necessary::

        credentials = (
            service_account.IDTokenCredentials.from_service_account_file(
                'service-account.json',
                scopes=['email'],
                subject='user@example.com'))


    The credentials are considered immutable. If you want to modify the scopes
    or the subject used for delegation, use :meth:`with_scopes` or
    :meth:`with_subject`::

        scoped_credentials = credentials.with_scopes(['email'])
        delegated_credentials = credentials.with_subject(subject)

    uIDTokenCredentials.__init__uIDTokenCredentials._from_signer_and_infouIDTokenCredentials.from_service_account_infouIDTokenCredentials.from_service_account_fileuIDTokenCredentials._make_copyawith_target_audienceuIDTokenCredentials.with_target_audiencea_with_use_iam_endpointuIDTokenCredentials._with_use_iam_endpointuIDTokenCredentials.with_quota_projectuIDTokenCredentials.with_token_uriuIDTokenCredentials._make_authorization_grant_assertionuIDTokenCredentials._refresh_with_iam_endpointuIDTokenCredentials.refreshuIDTokenCredentials.service_account_emailuIDTokenCredentials.sign_bytesuIDTokenCredentials.signeruIDTokenCredentials.signer_emailugoogle\oauth2\service_account.pyu<module google.oauth2.service_account>Ta__class__Taselfasigneraservice_account_emailatoken_uriascopesadefault_scopesasubjectaproject_idaquota_project_idaadditional_claimsaalways_use_jwt_accessauniverse_domainatrust_boundarya__class__Taselfasigneraservice_account_emailatoken_uriatarget_audienceaadditional_claimsaquota_project_idauniverse_domaina__class__Taselfaaudienceaadditional_claimsTaclsasignerainfoakwargsTaselfanowalifetimeaexpiryapayloadatokenTaselfacredTaselfTaselfarequestajwt_credentialsTaselfause_iam_endpointacredTaclsafilenameakwargsainfoasignerTaclsainfoakwargsasignerTaselfarequestaassertionaaccess_tokenaexpiryw_TaselfamessageTaselfaalways_use_jwt_accessacredTaselfaadditional_claimsanew_additional_claimsacredTaselfaquota_project_idacredTaselfascopesadefault_scopesacredTaselfasubjectacredTaselfatarget_audienceacredTaselfatoken_uriacredTaselfauniverse_domainacredu.google.oauth2.stsSaClienta__init__a_token_exchange_endpointuInitializes an STS client instance.

        Args:
            token_exchange_endpoint (str): The token exchange endpoint.
            client_authentication (Optional(google.oauth2.oauth2_utils.ClientAuthentication)):
                The optional OAuth client authentication credentials if available.
        a_URLENCODED_HEADERSacopyutoo many values to unpack (expected 2)arequest_headersaapply_client_authentication_optionsaPOSTaurllibaparseaurlencodeaencodeTuutf-8Taurlamethodaheadersabodyadataadecodeastatusahttp_clientaOKautilsahandle_error_responseajsonaloadsaresponse_bodyagrant_typearesourceaaudienceascopew arequested_token_typeasubject_tokenasubject_token_typeaactor_tokenaactor_token_typeaoptionsaquoteadumpsarequest_bodyua_make_requestuExchanges the provided token for another type of token based on the
        rfc8693 spec.

        Args:
            request (google.auth.transport.Request): A callable used to make
                HTTP requests.
            grant_type (str): The OAuth 2.0 token exchange grant type.
            subject_token (str): The OAuth 2.0 token exchange subject token.
            subject_token_type (str): The OAuth 2.0 token exchange subject token type.
            resource (Optional[str]): The optional OAuth 2.0 token exchange resource field.
            audience (Optional[str]): The optional OAuth 2.0 token exchange audience field.
            scopes (Optional[Sequence[str]]): The optional list of scopes to use.
            requested_token_type (Optional[str]): The optional OAuth 2.0 token exchange requested
                token type.
            actor_token (Optional[str]): The optional OAuth 2.0 token exchange actor token.
            actor_token_type (Optional[str]): The optional OAuth 2.0 token exchange actor token type.
            additional_options (Optional[Mapping[str, str]]): The optional additional
                non-standard Google specific options.
            additional_headers (Optional[Mapping[str, str]]): The optional additional
                headers to pass to the token exchange endpoint.

        Returns:
            Mapping[str, str]: The token exchange JSON-decoded response data containing
                the requested token and its expiration time.

        Raises:
            google.auth.exceptions.OAuthError: If the token endpoint returned
                an error.
        arefresh_tokenuExchanges a refresh token for an access token based on the
        RFC6749 spec.

        Args:
            request (google.auth.transport.Request): A callable used to make
                HTTP requests.
            subject_token (str): The OAuth 2.0 refresh token.
        uOAuth 2.0 Token Exchange Spec.

This module defines a token exchange utility based on the `OAuth 2.0 Token
Exchange`_ spec. This will be mainly used to exchange external credentials
for GCP access tokens in workload identity pools to access Google APIs.

The implementation will support various types of client authentication as
allowed in the spec.

A deviation on the spec will be for additional Google specific options that
cannot be easily mapped to parameters defined in the RFC.

The returned dictionary response will be based on the `rfc8693 section 2.2.1`_
spec JSON response.

.. _OAuth 2.0 Token Exchange: https://tools.ietf.org/html/rfc8693
.. _rfc8693 section 2.2.1: https://tools.ietf.org/html/rfc8693#section-2.2.1
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uhttp.clientlaclientugoogle.oauth2TautilsDuContent-Typeuapplication/x-www-form-urlencodedaOAuthClientAuthHandlera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.oauth2.stsa__module__uImplements the OAuth 2.0 token exchange spec based on
    https://tools.ietf.org/html/rfc8693.
    a__qualname__TnuClient.__init__uClient._make_requestTnnnnnnnnaexchange_tokenuClient.exchange_tokenuClient.refresh_tokena__orig_bases__ugoogle\oauth2\sts.pyu<module google.oauth2.sts>Ta__class__Taselfatoken_exchange_endpointaclient_authenticationa__class__T
aselfarequestaheadersarequest_bodyarequest_headerswkwvaresponsearesponse_bodyaresponse_dataTaselfarequestagrant_typeasubject_tokenasubject_token_typearesourceaaudienceascopesarequested_token_typeaactor_tokenaactor_token_typeaadditional_optionsaadditional_headersarequest_bodywkwvTaselfarequestarefresh_token.google.oauth2.utilsUaclient_auth_typeaclient_idaclient_secretuInstantiates a client authentication object containing the client ID
        and secret credentials for basic and response-body auth.

        Args:
            client_auth_type (google.oauth2.oauth_utils.ClientAuthType): The
                client authentication type.
            client_id (str): The client ID.
            client_secret (Optional[str]): The client secret.
        aOAuthClientAuthHandlera__init__a_client_authenticationuInstantiates an OAuth client authentication handler.

        Args:
            client_authentication (Optional[google.oauth2.utils.ClientAuthentication]):
                The OAuth client authentication credentials if available.
        a_inject_authenticated_headersa_inject_authenticated_request_bodyuApplies client authentication on the OAuth request's headers or POST
        body.

        Args:
            headers (Mapping[str, str]): The HTTP request header.
            request_body (Optional[Mapping[str, str]]): The HTTP request body
                dictionary. For requests that do not support request body, this
                is None and will be ignored.
            bearer_token (Optional[str]): The optional bearer token.
        uBearer %saAuthorizationaClientAuthTypeabasicuabase64ab64encodeu%s:%sadecodeuBasic %sarequest_bodyaexceptionsaOAuthErrorTuHTTP request does not support request-bodyajsonaloadsuError code {}aerroraerror_descriptionu: {}aerror_uriu - {}TEKeyErrorEValueErroruTranslates an error response from an OAuth operation into an
    OAuthError exception.

    Args:
        response_body (str): The decoded response data.

    Raises:
        google.auth.exceptions.OAuthError
    uOAuth 2.0 Utilities.

This module provides implementations for various OAuth 2.0 utilities.
This includes `OAuth error handling`_ and
`Client authentication for OAuth flows`_.

OAuth error handling
--------------------
This will define interfaces for handling OAuth related error responses as
stated in `RFC 6749 section 5.2`_.
This will include a common function to convert these HTTP error responses to a
:class:`google.auth.exceptions.OAuthError` exception.


Client authentication for OAuth flows
-------------------------------------
We introduce an interface for defining client authentication credentials based
on `RFC 6749 section 2.3.1`_. This will expose the following
capabilities:

    * Ability to support basic authentication via request header.
    * Ability to support bearer token authentication via request header.
    * Ability to support client ID / secret authentication via request body.

.. _RFC 6749 section 2.3.1: https://tools.ietf.org/html/rfc6749#section-2.3.1
.. _RFC 6749 section 5.2: https://tools.ietf.org/html/rfc6749#section-5.2
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabclaenumugoogle.authTaexceptionsaEnuma__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle.oauth2.utilsa__module__a__qualname__lla__orig_bases__TOobjectaClientAuthenticationuDefines the client authentication credentials for basic and request-body
    types based on https://tools.ietf.org/html/rfc6749#section-2.3.1.
    TnuClientAuthentication.__init__ametaclassaABCMetaTaOAuthClientAuthHandlerTuAbstract class for handling client authentication in OAuth-based
    operations.
    uOAuthClientAuthHandler.__init__Tnnaapply_client_authentication_optionsuOAuthClientAuthHandler.apply_client_authentication_optionsuOAuthClientAuthHandler._inject_authenticated_headersuOAuthClientAuthHandler._inject_authenticated_request_bodyTahandle_error_responseugoogle\oauth2\utils.pyu<module google.oauth2.utils>Ta__class__Taselfaclient_auth_typeaclient_idaclient_secretTaselfaclient_authenticationa__class__Taselfaheadersabearer_tokenausernameapasswordacredentialsTaselfarequest_bodyTaselfaheadersarequest_bodyabearer_tokenTaresponse_bodyaerror_componentsaerror_dataaerror_details.google_auth_oauthlibuoauthlib integration for Google Auth

This library provides `oauthlib <https://oauthlib.readthedocs.io/>`__
integration with `google-auth <https://google-auth.readthedocs.io/>`__.
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_google_auth_oauthlibu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ainteractiveTaget_user_credentialslaget_user_credentialsla__all__ugoogle_auth_oauthlib\__init__.pyu<module google_auth_oauthlib>u.google_auth_oauthlib.flow:aclient_typeaclient_configaoauth2sessionaredirect_uriacode_verifieraautogenerate_code_verifieru
        Args:
            oauth2session (requests_oauthlib.OAuth2Session):
                The OAuth 2.0 session from ``requests-oauthlib``.
            client_type (str): The client type, either ``web`` or
                ``installed``.
            client_config (Mapping[str, Any]): The client
                configuration in the Google `client secrets`_ format.
            redirect_uri (str): The OAuth 2.0 redirect URI if known at flow
                creation time. Otherwise, it will need to be set using
                :attr:`redirect_uri`.
            code_verifier (str): random string of 43-128 chars used to verify
                the key exchange.using PKCE.
            autogenerate_code_verifier (bool): If true, auto-generate a
                code_verifier.
        .. _client secrets:
            https://github.com/googleapis/google-api-python-client/blob
            /main/docs/client-secrets.md
        awebainstalleduClient secrets must be for a web or installed app.apopTaautogenerate_code_verifiernagoogle_auth_oauthlibahelpersasession_from_client_configutoo many values to unpack (expected 2)agetTaredirect_urinuCreates a :class:`requests_oauthlib.OAuth2Session` from client
        configuration loaded from a Google-format client secrets file.

        Args:
            client_config (Mapping[str, Any]): The client
                configuration in the Google `client secrets`_ format.
            scopes (Sequence[str]): The list of scopes to request during the
                flow.
            kwargs: Any additional parameters passed to
                :class:`requests_oauthlib.OAuth2Session`

        Returns:
            Flow: The constructed Flow instance.

        Raises:
            ValueError: If the client configuration is not in the correct
                format.

        .. _client secrets:
            https://github.com/googleapis/google-api-python-client/blob/main/docs/client-secrets.md
        wra__enter__a__exit__ajsonaloadTnnnafrom_client_configascopesuCreates a :class:`Flow` instance from a Google client secrets file.

        Args:
            client_secrets_file (str): The path to the client secrets .json
                file.
            scopes (Sequence[str]): The list of scopes to request during the
                flow.
            kwargs: Any additional parameters passed to
                :class:`requests_oauthlib.OAuth2Session`

        Returns:
            Flow: The constructed Flow instance.
        uThe OAuth 2.0 redirect URI. Pass-through to
        ``self.oauth2session.redirect_uri``.aaccess_typeaofflineaascii_lettersadigitsu-._~aSystemRandom;lllarndachoiceacharsuahashlibasha256aupdateaencodeadigestaurlsafe_b64encodeadecodeasplitTw=lasetdefaultacode_challengeTacode_challenge_methodaS256aauthorization_urlaauth_uriuGenerates an authorization URL.

        This is the first step in the OAuth 2.0 Authorization Flow. The user's
        browser should be redirected to the returned URL.

        This method calls
        :meth:`requests_oauthlib.OAuth2Session.authorization_url`
        and specifies the client configuration's authorization URI (usually
        Google's authorization server) and specifies that "offline" access is
        desired. This is required in order to obtain a refresh token.

        Args:
            kwargs: Additional arguments passed through to
                :meth:`requests_oauthlib.OAuth2Session.authorization_url`

        Returns:
            Tuple[str, str]: The generated authorization URL and state. The
                user must visit the URL to complete the flow. The state is used
                when completing the flow to verify that the request originated
                from your application. If your application is using a different
                :class:`Flow` instance to obtain the token, you will need to
                specify the ``state`` when constructing the :class:`Flow`.
        aclient_secretafetch_tokenatoken_uriuCompletes the Authorization Flow and obtains an access token.

        This is the final step in the OAuth 2.0 Authorization Flow. This is
        called after the user consents.

        This method calls
        :meth:`requests_oauthlib.OAuth2Session.fetch_token`
        and specifies the client configuration's token URI (usually Google's
        token server).

        Args:
            kwargs: Arguments passed through to
                :meth:`requests_oauthlib.OAuth2Session.fetch_token`. At least
                one of ``code`` or ``authorization_response`` must be
                specified.

        Returns:
            Mapping[str, str]: The obtained tokens. Typically, you will not use
                return value of this function and instead use
                :meth:`credentials` to obtain a
                :class:`~google.auth.credentials.Credentials` instance.
        acredentials_from_sessionuReturns credentials from the OAuth 2.0 session.

        :meth:`fetch_token` must be called before accessing this. This method
        constructs a :class:`google.oauth2.credentials.Credentials` class using
        the session's token and the client config.

        Returns:
            google.oauth2.credentials.Credentials: The constructed credentials.

        Raises:
            ValueError: If there is no access token in the session.
        agoogleaauthatransportarequestsaAuthorizedSessionacredentialsuReturns a :class:`requests.Session` authorized with credentials.

        :meth:`fetch_token` must be called before this method. This method
        constructs a :class:`google.auth.transport.requests.AuthorizedSession`
        class using this flow's :attr:`credentials`.

        Returns:
            google.auth.transport.requests.AuthorizedSession: The constructed
                session.
        a_RedirectWSGIAppawsgirefasimple_serveraWSGIServeraallow_reuse_addressamake_servera_WSGIRequestHandlerTahandler_classuhttp://{}:{}/uhttp://{}:{}aserver_portawebbrowseraopenDanewaautoraiseltaprintaformataauth_urlTaurlatimeoutahandle_requestalast_request_uriareplaceTahttpahttpsTaauthorization_responseaaudienceaserver_closeuRun the flow using the server strategy.

        The server strategy instructs the user to open the authorization URL in
        their browser and will attempt to automatically open the URL for them.
        It will start a local web server to listen for the authorization
        response. Once authorization is complete the authorization server will
        redirect the user's browser to the local web server. The web server
        will get the authorization code from the response and shutdown. The
        code is then exchanged for a token.

        Args:
            host (str): The hostname for the local redirect server. This will
                be served over http, not https.
            bind_addr (str): Optionally provide an ip address for the redirect
                server to listen on when it is not the same as host
                (e.g. in a container). Default value is None,
                which means that the redirect server will listen
                on the ip address specified in the host parameter.
            port (int): The port for the local redirect server.
            authorization_prompt_message (str | None): The message to display to tell
                the user to navigate to the authorization URL. If None or empty,
                don't display anything.
            success_message (str): The message to display in the web browser
                the authorization flow is complete.
            open_browser (bool): Whether or not to open the authorization URL
                in the user's browser.
            redirect_uri_trailing_slash (bool): whether or not to add trailing
                slash when constructing the redirect_uri. Default value is True.
            timeout_seconds (int): It will raise an error after the timeout timing
                if there are no credentials response. The value is in seconds.
                When set to None there is no timeout.
                Default value is None.
            token_audience (str): Passed along with the request for an access
                token. Determines the endpoints with which the token can be
                used. Optional.
            browser (str): specify which browser to open for authentication. If not
                specified this defaults to default browser.
            kwargs: Additional keyword arguments passed through to
                :meth:`authorization_url`.

        Returns:
            google.oauth2.credentials.Credentials: The OAuth 2.0 credentials
                for the user.
        a_LOGGERainfoa_success_messageu
        Args:
            success_message (str): The message to display in the web browser
                the authorization flow is complete.
        u200 OKTuContent-typeutext/plain; charset=utf-8autilarequest_uriTuutf-8uWSGI Callable.

        Args:
            environ (Mapping[str, Any]): The WSGI environment.
            start_response (Callable[str, list]): The WSGI start_response
                callable.

        Returns:
            Iterable[bytes]: The response body.
        uOAuth 2.0 Authorization Flow

This module provides integration with `requests-oauthlib`_ for running the
`OAuth 2.0 Authorization Flow`_ and acquiring user credentials.  See
`Using OAuth 2.0 to Access Google APIs`_ for an overview of OAuth 2.0
authorization scenarios Google APIs support.

Here's an example of using :class:`InstalledAppFlow`::

    from google_auth_oauthlib.flow import InstalledAppFlow

    # Create the flow using the client secrets file from the Google API
    # Console.
    flow = InstalledAppFlow.from_client_secrets_file(
        'client_secrets.json',
        scopes=['profile', 'email'])

    flow.run_local_server()

    # You can use flow.credentials, or you can just get a requests session
    # using flow.authorized_session.
    session = flow.authorized_session()

    profile_info = session.get(
        'https://www.googleapis.com/userinfo/v2/me').json()

    print(profile_info)
    # {'name': '...',  'email': '...', ...}

.. _requests-oauthlib: http://requests-oauthlib.readthedocs.io/en/latest/
.. _OAuth 2.0 Authorization Flow:
    https://tools.ietf.org/html/rfc6749#section-1.2
.. _Using OAuth 2.0 to Access Google APIs:
    https://developers.google.com/identity/protocols/oauth2

a__doc__a__file__a__spec__aoriginahas_locationa__cached__abase64Taurlsafe_b64encodealoggingasecretsTaSystemRandomarandomastringTaascii_lettersadigitsuwsgiref.simple_serveruwsgiref.utilugoogle.auth.transport.requestsugoogle.oauth2.credentialsugoogle_auth_oauthlib.helpersagetLoggerTugoogle_auth_oauthlib.flowTOobjecta__prepare__aFlowa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugoogle_auth_oauthlib.flowa__module__uOAuth 2.0 Authorization Flow

    This class uses a :class:`requests_oauthlib.OAuth2Session` instance at
    :attr:`oauth2session` to perform all of the OAuth 2.0 logic. This class
    just provides convenience methods and sane defaults for doing Google's
    particular flavors of OAuth 2.0.

    Typically you'll construct an instance of this flow using
    :meth:`from_client_secrets_file` and a `client secrets file`_ obtained
    from the `Google API Console`_.

    .. _client secrets file:
        https://developers.google.com/identity/protocols/oauth2/web-server
        #creatingcred
    .. _Google API Console:
        https://console.developers.google.com/apis/credentials
    a__qualname__Tnnta__init__uFlow.__init__aclassmethoduFlow.from_client_configafrom_client_secrets_fileuFlow.from_client_secrets_fileapropertyuFlow.redirect_uriasetteruFlow.authorization_urluFlow.fetch_tokenuFlow.credentialsaauthorized_sessionuFlow.authorized_sessiona__orig_bases__aInstalledAppFlowuAuthorization flow helper for installed applications.

    This :class:`Flow` subclass makes it easier to perform the
    `Installed Application Authorization Flow`_. This flow is useful for
    local development or applications that are installed on a desktop operating
    system.

    This flow uses a local server strategy provided by :meth:`run_local_server`.

    Example::

        from google_auth_oauthlib.flow import InstalledAppFlow

        flow = InstalledAppFlow.from_client_secrets_file(
            'client_secrets.json',
            scopes=['profile', 'email'])

        flow.run_local_server()

        session = flow.authorized_session()

        profile_info = session.get(
            'https://www.googleapis.com/userinfo/v2/me').json()

        print(profile_info)
        # {'name': '...',  'email': '...', ...}


    Note that this isn't the only way to accomplish the installed
    application flow, just one of the most common. You can use the
    :class:`Flow` class to perform the same flow with different methods of
    presenting the authorization URL to the user or obtaining the authorization
    response, such as using an embedded web view.

    .. _Installed Application Authorization Flow:
        https://github.com/googleapis/google-api-python-client/blob/main/docs/oauth-installed.md
    uPlease visit this URL to authorize this application: {url}a_DEFAULT_AUTH_PROMPT_MESSAGEuEnter the authorization code: a_DEFAULT_AUTH_CODE_MESSAGEuThe authentication flow has completed. You may close this window.a_DEFAULT_WEB_SUCCESS_MESSAGEalocalhostlarun_local_serveruInstalledAppFlow.run_local_serveraWSGIRequestHandleruCustom WSGIRequestHandler.

    Uses a named logger instead of printing to stderr.
    alog_messageu_WSGIRequestHandler.log_messageuWSGI app to handle the authorization redirect.

    Stores the request URI and displays the given success message.
    u_RedirectWSGIApp.__init__a__call__u_RedirectWSGIApp.__call__ugoogle_auth_oauthlib\flow.pyu<module google_auth_oauthlib.flow>Ta__class__Taselfaenvironastart_responseTaselfaoauth2sessionaclient_typeaclient_configaredirect_uriacode_verifieraautogenerate_code_verifierTaselfasuccess_messageTaselfakwargsacharsarndarandom_verifieracode_hashaunencoded_challengeab64_challengeacode_challengeaurlastateTaselfTaselfakwargsTaclsaclient_configascopesakwargsaclient_typeacode_verifieraautogenerate_code_verifierasessionaredirect_uriTaclsaclient_secrets_fileascopesakwargsajson_fileaclient_configTaselfaformataargsTaselfavalueTaselfahostabind_addraportaauthorization_prompt_messageasuccess_messageaopen_browseraredirect_uri_trailing_slashatimeout_secondsatoken_audienceabrowserakwargsawsgi_appalocal_serveraredirect_uri_formataauth_urlw_aauthorization_response.google_auth_oauthlib.helpers`BawebainstalleduClient secrets must be for a web or installed app.a_REQUIRED_CONFIG_KEYSaissubsetakeysuClient secrets is not in the correct format.arequests_oauthlibaOAuth2Sessionaclient_idascopeuCreates a :class:`requests_oauthlib.OAuth2Session` from client
    configuration loaded from a Google-format client secrets file.

    Args:
        client_config (Mapping[str, Any]): The client
            configuration in the Google `client secrets`_ format.
        scopes (Sequence[str]): The list of scopes to request during the
            flow.
        kwargs: Any additional parameters passed to
            :class:`requests_oauthlib.OAuth2Session`

    Raises:
        ValueError: If the client configuration is not in the correct
            format.

    Returns:
        Tuple[requests_oauthlib.OAuth2Session, Mapping[str, Any]]: The new
            oauthlib session and the validated client configuration.

    .. _client secrets:
        https://github.com/googleapis/google-api-python-client/blob/main/docs/client-secrets.md
    wra__enter__a__exit__ajsonaloadTnnnasession_from_client_configaclient_configuCreates a :class:`requests_oauthlib.OAuth2Session` instance from a
    Google-format client secrets file.

    Args:
        client_secrets_file (str): The path to the `client secrets`_ .json
            file.
        scopes (Sequence[str]): The list of scopes to request during the
            flow.
        kwargs: Any additional parameters passed to
            :class:`requests_oauthlib.OAuth2Session`

    Returns:
        Tuple[requests_oauthlib.OAuth2Session, Mapping[str, Any]]: The new
            oauthlib session and the validated client configuration.

    .. _client secrets:
        https://github.com/googleapis/google-api-python-client/blob/main/docs/client-secrets.md
    atokenuThere is no access token for this session, did you call fetch_token?u3piaexternal_account_authorized_useraCredentialsaaccess_tokenagetTarefresh_tokenTatoken_uriTaclient_idTaclient_secretTatoken_info_urlTatokenarefresh_tokenatoken_urlaclient_idaclient_secretatoken_info_urlascopesagoogleaoauth2acredentialsTaid_tokenTascopeTarefresh_tokenaid_tokenatoken_uriaclient_idaclient_secretascopesagranted_scopesadatetimeautcfromtimestampaexpires_ataexpiryuCreates :class:`google.oauth2.credentials.Credentials` from a
    :class:`requests_oauthlib.OAuth2Session`.

    :meth:`fetch_token` must be called on the session before before calling
    this. This uses the session's auth token and the provided client
    configuration to create :class:`google.oauth2.credentials.Credentials`.
    This allows you to use the credentials from the session with Google
    API client libraries.

    Args:
        session (requests_oauthlib.OAuth2Session): The OAuth 2.0 session.
        client_config (Mapping[str, Any]): The subset of the client
            configuration to use. For example, if you have a web client
            you would pass in `client_config['web']`.

    Returns:
        google.oauth2.credentials.Credentials: The constructed credentials.

    Raises:
        ValueError: If there is no access token in the session.
    uIntegration helpers.

This module provides helpers for integrating with `requests-oauthlib`_.
Typically, you'll want to use the higher-level helpers in
:mod:`google_auth_oauthlib.flow`.

.. _requests-oauthlib: http://requests-oauthlib.readthedocs.io/en/latest/
a__doc__a__file__a__spec__aoriginahas_locationa__cached__lugoogle.authTaexternal_account_authorized_userugoogle.oauth2.credentialsPatoken_uriaclient_idaauth_uriasession_from_client_secrets_fileTnacredentials_from_sessionugoogle_auth_oauthlib\helpers.pyu<module google_auth_oauthlib.helpers>Tasessionaclient_configacredentialsTaclient_configascopesakwargsaconfigasessionTaclient_secrets_fileascopesakwargsajson_fileaclient_configu.google_auth_oauthlib.interactive9acontextlibaclosingasocketaAF_INETaSOCK_STREAMa__enter__a__exit__abindaLOCALHOSTalistenTlaerrorTnnnais_openuCheck if a port is open on localhost.
    Based on StackOverflow answer: https://stackoverflow.com/a/43238489/101923
    Parameters
    ----------
    port : int
        A port to check on localhost.
    Returns
    -------
    is_open : bool
        True if a socket can be opened at the requested port.
    aDEFAULT_PORTS_TO_TRYastartais_port_openuFind an open port between ``start`` and ``stop``.
    Parameters
    ----------
    start : Optional[int]
        Beginning of range of ports to try. Defaults to 8080.
    stop : Optional[int]
        End of range of ports to try (not including exactly equals ``stop``).
        This function tries 100 possible ports if no ``stop`` is specified.
    Returns
    -------
    Optional[int]
        ``None`` if no open port is found, otherwise an integer indicating an
        open port.
    ainstalledaclient_idaclient_secretaauth_uriuhttps://accounts.google.com/o/oauth2/authatoken_uriuhttps://oauth2.googleapis.com/tokenagoogle_auth_oauthlibaflowaInstalledAppFlowafrom_client_configTascopesafind_open_portTastartastopuCould not find open port.arun_local_serverTahostaportuGets credentials associated with your Google user account.

    This function authenticates using your user credentials by going through
    the OAuth 2.0 flow. You'll open a browser window to authenticate to your
    Google account. The permissions it requests correspond to the scopes
    you've provided.

    To obtain the ``client_id`` and ``client_secret``, create an **OAuth
    client ID** with application type **Other** from the `Credentials page on
    the Google Developer's Console
    <https://console.developers.google.com/apis/credentials>`_. Learn more
    with the `Authenticating as an end user
    <https://cloud.google.com/docs/authentication/end-user>`_ guide.

    Args:
        scopes (Sequence[str]):
            A list of scopes to use when authenticating to Google APIs. See
            the `list of OAuth 2.0 scopes for Google APIs
            <https://developers.google.com/identity/protocols/googlescopes>`_.
        client_id (str):
            A string that identifies your application to Google APIs. Find
            this value in the `Credentials page on the Google Developer's
            Console
            <https://console.developers.google.com/apis/credentials>`_.
        client_secret (str):
            A string that verifies your application to Google APIs. Find this
            value in the `Credentials page on the Google Developer's Console
            <https://console.developers.google.com/apis/credentials>`_.
        minimum_port (int):
            Beginning of range of ports to try for redirect URI HTTP server.
            Defaults to 8080.
        maximum_port (Optional[int]):
            End of range of ports to try (not including exactly equals ``stop``).
            This function tries 100 possible ports if no ``stop`` is specified.

    Returns:
        google.oauth2.credentials.Credentials:
            The OAuth 2.0 credentials for the user.

    Examples:
        Get credentials for your user account and use them to run a query
        with BigQuery::

            import google_auth_oauthlib

            # TODO: Create a client ID for your project.
            client_id = "YOUR-CLIENT-ID.apps.googleusercontent.com"
            client_secret = "abc_ThIsIsAsEcReT"

            # TODO: Choose the needed scopes for your applications.
            scopes = ["https://www.googleapis.com/auth/cloud-platform"]

            credentials = google_auth_oauthlib.get_user_credentials(
                scopes, client_id, client_secret
            )

            # 1. Open the link.
            # 2. Authorize the application to have access to your account.
            # 3. Copy and paste the authorization code to the prompt.

            # Use the credentials to construct a client for Google APIs.
            from google.cloud import bigquery

            bigquery_client = bigquery.Client(
                credentials=credentials, project="your-project-id"
            )
            print(list(bigquery_client.query("SELECT 1").result()))
    uGet user credentials from interactive code environments.

This module contains helpers for getting user credentials from interactive
code environments installed on a development machine, such as Jupyter
notebooks.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importlugoogle_auth_oauthlib.flowalocalhostldTlnaget_user_credentialsugoogle_auth_oauthlib\interactive.pyu<module google_auth_oauthlib.interactive>TastartastopaportTascopesaclient_idaclient_secretaminimum_portamaximum_portaclient_configaapp_flowaportTaportasockais_openu.gspread.auth)raPathaosaenvironaAPPDATAahomeu.configuConstruct a config dir path.

    By default:
        * `%APPDATA%\gspread` on Windows
        * `~/.config/gspread` everywhere else

    aClientadeprecation_warningTu6.0.0uclient_factory will be replaced by gspread.http_client typesTaversionamsgTaauthuLogin to Google API using OAuth2 credentials.
    This is a shortcut/helper function which
    instantiates a client using `client_factory`.
    By default :class:`gspread.Client` is used (but could also use
    :class:`gspread.BackoffClient` to avoid rate limiting).

    :returns: An instance of the class produced by `client_factory`.
    :rtype: :class:`gspread.client.Client`
    aInstalledAppFlowafrom_client_configarun_local_serverTaportuRun an OAuth flow using a local server strategy.

    Creates an OAuth flow and runs `google_auth_oauthlib.flow.InstalledAppFlow.run_local_server <https://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_local_server>`_.
    This will start a local web server and open the authorization URL in
    the user's browser.

    Pass this function to ``flow`` parameter of :meth:`~gspread.oauth` to run
    a local server flow.
    awarningsawarnTuThe gspread.auth.console_flow flow won't succeed.
The OAuth out-of-band (OOB) flow is deprecated. New clients will be unable to use this flow starting on Feb 28, 2022. This flow will be deprecated for all clients on Oct 3, 2022. Migrate to an alternative flow: gspread.auth.local_server_flowsee: https://developers.googleblog.com/2022/02/making-oauth-flows-safer.html?m=1#disallowed-oobarun_consoleuRun an OAuth flow using a console strategy.

    Creates an OAuth flow and runs `google_auth_oauthlib.flow.InstalledAppFlow.run_console <https://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_console>`_.

    Pass this function to ``flow`` parameter of :meth:`~gspread.oauth` to run
    a console strategy.
    aexistsaCredentialsafrom_authorized_user_fileaparentamkdirTtpTaparentsaexist_okaopenTwwa__enter__a__exit__awriteato_jsonTnnnaload_credentialsTafilenameajsonaloadaclient_configTaclient_configascopesastore_credentialsacredsuAuthenticate with OAuth Client ID.

    By default this function will use the local server strategy and open
    the authorization URL in the user's browser::

        gc = gspread.oauth()

    Another option is to run a console strategy. This way, the user is
    instructed to open the authorization URL in their browser. Once the
    authorization is complete, the user must then copy & paste the
    authorization code into the application::

        gc = gspread.oauth(flow=gspread.auth.console_flow)


    ``scopes`` parameter defaults to read/write scope available in
    ``gspread.auth.DEFAULT_SCOPES``. It's read/write for Sheets
    and Drive API::

        DEFAULT_SCOPES =[
            'https://www.googleapis.com/auth/spreadsheets',
            'https://www.googleapis.com/auth/drive'
        ]

    You can also use ``gspread.auth.READONLY_SCOPES`` for read only access.
    Obviously any method of ``gspread`` that updates a spreadsheet
    **will not work** in this case::

        gc = gspread.oauth(scopes=gspread.auth.READONLY_SCOPES)

        sh = gc.open("A spreadsheet")
        sh.sheet1.update('A1', '42')   # <-- this will not work

    If you're storing your user credentials in a place other than the
    default, you may provide a path to that file like so::

        gc = gspread.oauth(
            credentials_filename='/alternative/path/credentials.json',
            authorized_user_filename='/alternative/path/authorized_user.json',
        )

    :param list scopes: The scopes used to obtain authorization.
    :param function flow: OAuth flow to use for authentication.
        Defaults to :meth:`~gspread.auth.local_server_flow`
    :param str credentials_filename: Filepath (including name) pointing to a
        credentials `.json` file.
        Defaults to DEFAULT_CREDENTIALS_FILENAME:

            * `%APPDATA%\gspread\credentials.json` on Windows
            * `~/.config/gspread/credentials.json` everywhere else
    :param str authorized_user_filename: Filepath (including name) pointing to
        an authorized user `.json` file.
        Defaults to DEFAULT_AUTHORIZED_USER_FILENAME:

            * `%APPDATA%\gspread\authorized_user.json` on Windows
            * `~/.config/gspread/authorized_user.json` everywhere else
    :type client_factory: :class:`gspread.ClientFactory`
    :param client_factory: A factory function that returns a client class.
        Defaults to :class:`gspread.Client` (but could also use
        :class:`gspread.BackoffClient` to avoid rate limiting)

    :rtype: :class:`gspread.client.Client`
    afrom_authorized_user_infoascopesTatokenuAuthenticate with OAuth Client ID.

    By default this function will use the local server strategy and open
    the authorization URL in the user's browser::

        gc = gspread.oauth_from_dict()

    Another option is to run a console strategy. This way, the user is
    instructed to open the authorization URL in their browser. Once the
    authorization is complete, the user must then copy & paste the
    authorization code into the application::

        gc = gspread.oauth_from_dict(flow=gspread.auth.console_flow)


    ``scopes`` parameter defaults to read/write scope available in
    ``gspread.auth.DEFAULT_SCOPES``. It's read/write for Sheets
    and Drive API::

        DEFAULT_SCOPES =[
            'https://www.googleapis.com/auth/spreadsheets',
            'https://www.googleapis.com/auth/drive'
        ]

    You can also use ``gspread.auth.READONLY_SCOPES`` for read only access.
    Obviously any method of ``gspread`` that updates a spreadsheet
    **will not work** in this case::

        gc = gspread.oauth_from_dict(scopes=gspread.auth.READONLY_SCOPES)

        sh = gc.open("A spreadsheet")
        sh.sheet1.update('A1', '42')   # <-- this will not work

    This function requires you to pass the credentials directly as
    a python dict. After the first authentication the function returns
    the authenticated user info, this can be passed again to authenticate
    the user without the need to run the flow again.

    ..
        code block below must be explicitly announced using code-block

    .. code-block:: python

        gc = gspread.oauth_from_dict(
                credentials=my_creds,
                authorized_user_info=my_auth_user
        )

    :param dict credentials: The credentials from google cloud platform
    :param dict authorized_user_info: The authenticated user
        if already authenticated.
    :param list scopes: The scopes used to obtain authorization.
    :param function flow: OAuth flow to use for authentication.
        Defaults to :meth:`~gspread.auth.local_server_flow`
    :type client_factory: :class:`gspread.ClientFactory`
    :param client_factory: A factory function that returns a client class.
        Defaults to :class:`gspread.Client` (but could also use
        :class:`gspread.BackoffClient` to avoid rate limiting)

    :rtype: (`gspread.client.Client`, str)
    aServiceAccountCredentialsafrom_service_account_fileTascopesuAuthenticate using a service account.

    ``scopes`` parameter defaults to read/write scope available in
    ``gspread.auth.DEFAULT_SCOPES``. It's read/write for Sheets
    and Drive API::

        DEFAULT_SCOPES =[
            'https://www.googleapis.com/auth/spreadsheets',
            'https://www.googleapis.com/auth/drive'
        ]

    You can also use ``gspread.auth.READONLY_SCOPES`` for read only access.
    Obviously any method of ``gspread`` that updates a spreadsheet
    **will not work** in this case.

    :param str filename: The path to the service account json file.
    :param list scopes: The scopes used to obtain authorization.
    :type client_factory: :class:`gspread.ClientFactory`
    :param client_factory: A factory function that returns a client class.
        Defaults to :class:`gspread.Client` (but could also use
        :class:`gspread.BackoffClient` to avoid rate limiting)

    :rtype: :class:`gspread.client.Client`
    afrom_service_account_infoTainfoascopesuAuthenticate using a service account (json).

    ``scopes`` parameter defaults to read/write scope available in
    ``gspread.auth.DEFAULT_SCOPES``. It's read/write for Sheets
    and Drive API::

        DEFAULT_SCOPES =[
            'https://www.googleapis.com/auth/spreadsheets',
            'https://www.googleapis.com/auth/drive'
        ]

    You can also use ``gspread.auth.READONLY_SCOPES`` for read only access.
    Obviously any method of ``gspread`` that updates a spreadsheet
    **will not work** in this case.

    :param info (Mapping[str, str]): The service account info in Google format
    :param list scopes: The scopes used to obtain authorization.
    :type client_factory: :class:`gspread.ClientFactory`
    :param client_factory: A factory function that returns a client class.
        Defaults to :class:`gspread.Client` (but could also use
        :class:`gspread.BackoffClient` to avoid rate limiting)

    :rtype: :class:`gspread.client.Client`
    u
gspread.auth
~~~~~~~~~~~~

Simple authentication with OAuth.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__lapathlibTaPathugoogle.oauth2.credentialsTaCredentialsugoogle.oauth2.service_accountugoogle_auth_oauthlib.flowTaInstalledAppFlowaclientTaClientlautilsTadeprecation_warninguhttps://www.googleapis.com/auth/spreadsheetsuhttps://www.googleapis.com/auth/driveaDEFAULT_SCOPESuhttps://www.googleapis.com/auth/spreadsheets.readonlyuhttps://www.googleapis.com/auth/drive.readonlyaREADONLY_SCOPESTagspreadtaget_config_diraDEFAULT_CONFIG_DIRucredentials.jsonaDEFAULT_CREDENTIALS_FILENAMEuauthorized_user.jsonaDEFAULT_AUTHORIZED_USER_FILENAMEuservice_account.jsonaDEFAULT_SERVICE_ACCOUNT_FILENAMETnaauthorizeTlalocal_server_flowaconsole_flowatokenaoauthaoauth_from_dictaservice_accountaservice_account_from_dictugspread\auth.pyu<module gspread.auth>Tacredentialsaclient_factoryTaclient_configascopesaflowTaconfig_dir_nameaos_is_windowsTaclient_configascopesaportaflowTascopesaflowacredentials_filenameaauthorized_user_filenameaclient_factoryacredsajson_fileaclient_configTacredentialsaauthorized_user_infoascopesaflowaclient_factoryacredsaclientTafilenameascopesaclient_factoryacredsTainfoascopesaclient_factoryacredsTacredsafilenameastripwfu.gspread.cell9a_rowa_colavalueaa1_to_rowcoluInstantiate a new :class:`~gspread.cell.Cell`
        from an A1 notation address and a value

        :param string label: the A1 label of the returned cell
        :param string value: the value for the returned cell
        :rtype: Cell
        u<{} R{}C{} {}>a__name__arowacoluRow number of the cell.

        :type: int
        uColumn number of the cell.

        :type: int
        anumericiseDadefault_blanknuNumeric value of this cell.

        Will try to numericise this cell value,
        upon success will return its numeric value
        with the appropriate type.

        :type: int or float
        arowcol_to_a1uCell address in A1 notation.

        :type: str
        u
gspread.cell
~~~~~~~~~~~~

This module contains common cells' models.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__autilsTaa1_to_rowcolanumericisearowcol_to_a1llugspread.cella__module__uAn instance of this class represents a single cell
    in a :class:`~gspread.worksheet.Worksheet`.
    aCella__qualname__Tua__init__uCell.__init__afrom_addressuCell.from_addressa__repr__uCell.__repr__a__eq__uCell.__eq__uCell.rowuCell.colanumeric_valueuCell.numeric_valueaaddressuCell.addressTugspread\cell.pyu<module gspread.cell>Ta__class__Taselfaotherasame_rowasame_colasame_valueTaselfarowacolavalueTaselfTaclsalabelavalueTaselfanumeric_valueu.gspread.client<3aconvert_credentialsaauthaAuthorizedSessionasessionaselfatimeoutugoogle.auth.transport.requestsTaRequestlaRequestarefreshaheadersaupdateaAuthorizationuBearer %satokenuHow long to wait for the server to send
        data before giving up, as a float, or a ``(connect timeout,
        read timeout)`` tuple.

        Value for ``timeout`` is in seconds (s).
        TajsonaparamsadataafilesaheadersatimeoutaokaAPIErroraDRIVE_FILES_API_V3_URLu/{}DasupportsAllDrivesaincludeItemsFromAllDrivesafieldstpuid,name,createdTime,modifiedTimearequestagetTaparamsajsonuGet the metadata from the Drive API for a specific file
        This method is mainly here to retrieve the create/update time
        of a file (these metadata are only accessible from the Drive API).
        a_list_spreadsheet_filesTatitleafolder_idutoo many values to unpack (expected 2)uList all the spreadsheet files

        Will list all spreadsheet files owned by/shared with this user account.

        :param str title: Filter only spreadsheet files with this title
        :param str folder_id: Only look for spreadsheet files in this folder
            The parameter ``folder_id`` can be obtained from the URL when looking at
            a folder in a web browser as follow:
            ``https://drive.google.com/drive/u/0/folders/<folder_id>``

        :returns: a list of dicts containing the keys id, name, createdTime and modifiedTime.
        uumimeType="aMimeTypeagoogle_sheetsw"u and name = "u and parents in "wqapageSizelasupportsAllDrivesaincludeItemsFromAllDrivesafieldsukind,nextPageToken,files(id,name,createdTime,modifiedTime)apage_tokenaparamsapageTokenaurlafilesaextendTanextPageTokennafinditemu<lambda>uClient.open.<locals>.<lambda>aSpreadsheetNotFoundanameatitleaSpreadsheetuOpens a spreadsheet.

        :param str title: A title of a spreadsheet.
        :param str folder_id: (optional) If specified can be used to filter
            spreadsheets by parent folder ID.
        :returns: a :class:`~gspread.models.Spreadsheet` instance.

        If there's more than one spreadsheet with same title the first one
        will be opened.

        :raises gspread.SpreadsheetNotFound: if no spreadsheet with
                                             specified `title` is found.

        >>> gc.open('My fancy spreadsheet')
        aidaresponseastatus_codeaHTTPStatusaNOT_FOUNDaFORBIDDENuOpens a spreadsheet specified by `key` (a.k.a Spreadsheet ID).

        :param str key: A key of a spreadsheet as it appears in a URL in a browser.
        :returns: a :class:`~gspread.models.Spreadsheet` instance.

        >>> gc.open_by_key('0BmgG6nO_6dprdS1MN3d3MkdPa142WFRrdnRRUWl1UFE')
        aopen_by_keyaextract_id_from_urluOpens a spreadsheet specified by `url`.

        :param str url: URL of a spreadsheet as it appears in a browser.

        :returns: a :class:`~gspread.models.Spreadsheet` instance.

        :raises gspread.SpreadsheetNotFound: if no spreadsheet with
                                             specified `url` is found.

        >>> gc.open_by_url('https://docs.google.com/spreadsheet/ccc?key=0Bm...FE&hl')
        alist_spreadsheet_filesuOpens all available spreadsheets.

        :param str title: (optional) If specified can be used to filter
            spreadsheets by title.

        :returns: a list of :class:`~gspread.models.Spreadsheet` instances.
        amimeTypeDasupportsAllDrivestaparentsapostapayloadTajsonaparamsuCreates a new spreadsheet.

        :param str title: A title of a new spreadsheet.

        :param str folder_id: Id of the folder where we want to save
            the spreadsheet.

        :returns: a :class:`~gspread.models.Spreadsheet` instance.

        aExportFormataUnSupportedExportFormatu{}/{}/exportacontentuExport the spreadsheet in the given format.

        :param str file_id: The key of the spreadsheet to export

        :param str format: The format of the resulting file.
            Possible values are:

                * ``ExportFormat.PDF``
                * ``ExportFormat.EXCEL``
                * ``ExportFormat.CSV``
                * ``ExportFormat.OPEN_OFFICE_SHEET``
                * ``ExportFormat.TSV``
                * ``ExportFormat.ZIPPED_HTML``

            See `ExportFormat`_ in the Drive API.

        :type format: :namedtuple:`~gspread.utils.ExportFormat`

        :returns bytes: The content of the exported file.

        .. _ExportFormat: https://developers.google.com/drive/api/guides/ref-export-formats
        u{}/{}/copyalist_permissionsTadeletedanew_spreadsheetashareaemailAddressatypearoleTavalueaperm_typearoleanotifyaDRIVE_FILES_API_V3_COMMENTS_URLafile_idDafieldsaincludeDeletedapageSizeucomments/content,comments/anchor,nextPageTokenFldasource_urlacommentsDafieldsaidadestination_urluCopies a spreadsheet.

        :param str file_id: A key of a spreadsheet to copy.
        :param str title: (optional) A title for the new spreadsheet.

        :param bool copy_permissions: (optional) If True, copy permissions from
            the original spreadsheet to the new spreadsheet.

        :param str folder_id: Id of the folder where we want to save
            the spreadsheet.

        :param bool copy_comments: (optional) If True, copy the comments from
            the original spreadsheet to the new spreadsheet.

        :returns: a :class:`~gspread.models.Spreadsheet` instance.

        .. versionadded:: 3.1.0

        .. note::

           If you're using custom credentials without the Drive scope, you need to add
           ``https://www.googleapis.com/auth/drive`` to your OAuth scope in order to use
           this method.

           Example::

              scope = [
                  'https://www.googleapis.com/auth/spreadsheets',
                  'https://www.googleapis.com/auth/drive'
              ]

           Otherwise, you will get an ``Insufficient Permission`` error
           when you try to copy a spreadsheet.

        u{}/{}adeleteuDeletes a spreadsheet.

        :param str file_id: a spreadsheet ID (a.k.a file ID).
        aencodeTuutf-8DuContent-Typeutext/csvaDRIVE_FILES_UPLOAD_API_V2_URLaputDauploadTypeaconvertasupportsAllDrivesamediatpTadataaparamsaheadersuImports data into the first page of the spreadsheet.

        :param str data: A CSV string of data.

        Example:

        .. code::

            # Read CSV file contents
            content = open('file_to_import.csv', 'r').read()

            gc.import_csv(spreadsheet.id, content)

        .. note::

           This method removes all other worksheets and then entirely
           replaces the contents of the first worksheet.

        u{}/{}/permissionsDasupportsAllDrivesafieldstunextPageToken,permissionsapermissionsuRetrieve a list of permissions for a file.

        :param str file_id: a spreadsheet ID (aka file ID).
        awithLinkDasupportsAllDrivesatrueadomainSauseragroupasendNotificationEmailaemailMessageaanyoneuInvalid permission type: {}uCreates a new permission for a file.

        :param str file_id: a spreadsheet ID (aka file ID).
        :param value: user or group e-mail address, domain name
            or None for 'default' type.
        :type value: str, None
        :param str perm_type: (optional) The account type.
            Allowed values are: ``user``, ``group``, ``domain``, ``anyone``
        :param str role: (optional) The primary role for this user.
            Allowed values are: ``owner``, ``writer``, ``reader``
        :param bool notify: (optional) Whether to send an email to the target
            user/domain.
        :param str email_message: (optional) An email message to be sent
            if ``notify=True``.
        :param bool with_link: (optional) Whether the link is required for this
            permission to be active.

        :returns dict: the newly created permission

        Examples::

            # Give write permissions to otto@example.com

            gc.insert_permission(
                '0BmgG6nO_6dprnRRUWl1UFE',
                'otto@example.org',
                perm_type='user',
                role='writer'
            )

            # Make the spreadsheet publicly readable

            gc.insert_permission(
                '0BmgG6nO_6dprnRRUWl1UFE',
                None,
                perm_type='anyone',
                role='reader'
            )

        u{}/{}/permissions/{}uDeletes a permission from a file.

        :param str file_id: a spreadsheet ID (aka file ID.)
        :param str permission_id: an ID for the permission.
        adeprecation_warningTu6.0.0uthis class will be deprecated and moved to gspread.http_client packageTaversionamsga__class__a__init__aerroracodea_HTTP_ERROR_CODESa_MAX_BACKOFF_REACHEDa_NR_BACKOFFlaminla_MAX_BACKOFFatimeasleepu
gspread.client
~~~~~~~~~~~~~~

This module contains Client class responsible for communicating with
Google API.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__ahttpTaHTTPStatusaAnyaDictaListaTupleaTypeTaAuthorizedSessionarequestsTaResponseaResponseaexceptionsTaAPIErroraSpreadsheetNotFoundaUnSupportedExportFormataspreadsheetTaSpreadsheetaurlsTaDRIVE_FILES_API_V3_COMMENTS_URLaDRIVE_FILES_API_V3_URLaDRIVE_FILES_UPLOAD_API_V2_URLautilsTaExportFormataMimeTypeaconvert_credentialsadeprecation_warningaextract_id_from_urlafinditemugspread.clienta__module__uAn instance of this class communicates with Google API.

    :param auth: An OAuth2 credential object. Credential objects
        created by `google-auth <https://github.com/googleapis/google-auth-library-python>`_.

    :param session: (optional) A session object capable of making HTTP requests
        while persisting some parameters across requests.
        Defaults to `google.auth.transport.requests.AuthorizedSession <https://google-auth.readthedocs.io/en/latest/reference/google.auth.transport.requests.html#google.auth.transport.requests.AuthorizedSession>`_.

    >>> c = gspread.Client(auth=OAuthCredentialObject)
    aClienta__qualname__TnuClient.__init__aloginuClient.loginaset_timeoutuClient.set_timeoutTnnnnnuClient.requestaget_file_drive_metadatauClient.get_file_drive_metadataTnnareturnuClient.list_spreadsheet_filesuClient._list_spreadsheet_filesaopenuClient.openuClient.open_by_keyaopen_by_urluClient.open_by_urlaopenalluClient.openallacreateuClient.createaPDFaexportuClient.exportTnFntacopyuClient.copyadel_spreadsheetuClient.del_spreadsheetaimport_csvuClient.import_csvuClient.list_permissionsTtnFainsert_permissionuClient.insert_permissionaremove_permissionuClient.remove_permissionTa__prepare__aBackoffClienta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uBackoffClient is a gspread client with exponential
    backoff retries.

    In case a request fails due to some API rate limits,
    it will wait for some time, then retry the request.

    This can help by trying the request after some time and
    prevent the application from failing (by raising an APIError exception).

    .. Warning::
        This Client is not production ready yet.
        Use it at your own risk !

    .. note::
        To use with the `auth` module, make sure to pass this backoff
        client factory using the ``client_factory`` parameter of the
        method used.

    .. note::
        Currently known issues are:

        * will retry exponentially even when the error should
          raise instantly. Due to the Drive API that raises
          403 (Forbidden) errors for forbidden access and
          for api rate limit exceeded.aREQUEST_TIMEOUTaTOO_MANY_REQUESTSluBackoffClient.__init__uBackoffClient.requesta__orig_bases__aClientFactoryugspread\client.pyTwxatitleTatitleu<module gspread.client>Ta__class__Taselfaautha__class__TaselfaauthasessionT
aselfatitleafolder_idafilesapage_tokenaurlaqueryaparamsaresponsearesponse_jsonTaselfafile_idatitleacopy_permissionsafolder_idacopy_commentsaurlapayloadaparamswraspreadsheet_idanew_spreadsheetaoriginalapermissionswpasource_urlapage_tokenacommentsaresadestination_urlacommentTaselfatitleafolder_idapayloadaparamswraspreadsheet_idTaselfafile_idaurlaparamsTaselfafile_idaformataurlaparamswrTaselfaidaurlaparamsaresTaselfafile_idadataaheadersaurlTaselfafile_idavalueaperm_typearoleanotifyaemail_messageawith_linkaurlapayloadaparamsTaselfafile_idaurlaparamsatokenapermissionswrTaselfatitleafolder_idafilesw_TaselfaRequestTaselfatitleafolder_idaspreadsheet_filesaresponseapropertiesaexTaselfakeyaspreadsheetaexTaselfaurlTaselfatitleaspreadsheet_filesTaselfafile_idapermission_idaurlaparamsT
aselfaargsakwargsaerradataacodeawaitatimearesponsea__class__TaselfamethodaendpointaparamsadataajsonafilesaheadersaresponseTaselfatimeout.gspreada3uGoogle Spreadsheets Python APIa__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_gspreadu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__u5.12.4a__version__uAnton Burnasheva__author__aauthTaauthorizeaoauthaoauth_from_dictaservice_accountaservice_account_from_dictlaauthorizelaoauthaoauth_from_dictaservice_accountaservice_account_from_dictacellTaCellaCellaclientTaBackoffClientaClientaClientFactoryaBackoffClientaClientaClientFactoryaexceptionsTaGSpreadExceptionaIncorrectCellLabelaNoValidUrlKeyFoundaSpreadsheetNotFoundaWorksheetNotFoundaGSpreadExceptionaIncorrectCellLabelaNoValidUrlKeyFoundaSpreadsheetNotFoundaWorksheetNotFoundaspreadsheetTaSpreadsheetaSpreadsheetaworksheetTaWorksheetaWorksheetugspread\__init__.pyu<module gspread>u.gspread.exceptions5a__class__a__init__a_extract_textaresponsea_text_from_detailatextajsonaerrorTEAttributeErrorEKeyErrorEValueErroru
gspread.exceptions
~~~~~~~~~~~~~~~~~~

Exceptions used in gspread.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__TEExceptionla__prepare__aUnSupportedExportFormata__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugspread.exceptionsa__module__uRaised when export format is not supported.a__qualname__a__orig_bases__aGSpreadExceptionuA base class for gspread's exceptions.aWorksheetNotFounduTrying to open non-existent or inaccessible worksheet.aNoValidUrlKeyFounduNo valid key found in URL.aIncorrectCellLabeluThe cell label is incorrect.aInvalidInputValueuThe provided values is incorrect.aAPIErroruErrors coming from the API itself,
    such as when we attempt to retrieve things that don't exist.uAPIError.__init__uAPIError._extract_textuAPIError._text_from_detailaSpreadsheetNotFounduTrying to open non-existent or inaccessible spreadsheet.ugspread\exceptions.pyu<module gspread.exceptions>Ta__class__Taselfaresponsea__class__TaselfaresponseTaselfaresponseaerrorsu.gspread.spreadsheetH<aclienta_propertiesafetch_sheet_metadataaupdateapropertiesaiduSpreadsheet ID.atitleuSpreadsheet title.aSPREADSHEET_DRIVE_URLuSpreadsheet URL.acreatedTimeaupdate_drive_metadatauSpreadsheet Creation time.adeprecation_warningTu6.0.0ulastUpdateTime will be removed. Please use get_lastUpdateTime()TaversionamsgamodifiedTimeuSpreadsheet last updated time.
        Only updated on initialisation.
        For actual last updated time, use get_lastUpdateTime().awarningsawarnuSpreadsheet.updated() is deprecated, this feature is not supported in Sheets API v4aDeprecationWarningDastacklevellu.. deprecated:: 2.0

        This feature is not supported in Sheets API v4.
        atimeZoneuSpreadsheet timeZonealocaleuSpreadsheet localeaget_worksheetTluShortcut property for getting the first worksheet.aselfaworksheetsa__iter__uSpreadsheet.__iter__u<{} {} id:{}>a__name__arequestapostaSPREADSHEET_BATCH_UPDATE_URLTajsonajsonuLower-level method that directly calls `spreadsheets/<ID>:batchUpdate <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/batchUpdate>`_.

        :param dict body: `Request body <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/batchUpdate#request-body>`_.
        :returns: `Response body <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/batchUpdate#response-body>`_.
        :rtype: dict

        .. versionadded:: 3.0
        aSPREADSHEET_VALUES_APPEND_URLaquoteTaparamsajsonuLower-level method that directly calls `spreadsheets/<ID>/values:append <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/append>`_.

        :param str range: The `A1 notation <https://developers.google.com/sheets/api/guides/concepts#a1_notation>`_
                          of a range to search for a logical table of data. Values will be appended after the last row of the table.
        :param dict params: `Query parameters <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/append#query-parameters>`_.
        :param dict body: `Request body`_.
        :returns: `Response body`_.
        :rtype: dict

        .. versionadded:: 3.0
        aSPREADSHEET_VALUES_CLEAR_URLuLower-level method that directly calls `spreadsheets/<ID>/values:clear <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/clear>`_.

        :param str range: The `A1 notation <https://developers.google.com/sheets/api/guides/concepts#a1_notation>`_ of the values to clear.
        :returns: `Response body`_.
        :rtype: dict

        .. versionadded:: 3.0
        aSPREADSHEET_VALUES_BATCH_CLEAR_URLaSPREADSHEET_VALUES_URLagetTaparamsuLower-level method that directly calls `spreadsheets/<ID>/values/<range> <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/get>`_.

        :param str range: The `A1 notation <https://developers.google.com/sheets/api/guides/concepts#a1_notation>`_ of the values to retrieve.
        :param dict params: (optional) `Query parameters`_.
        :returns: `Response body`_.
        :rtype: dict

        .. versionadded:: 3.0
        TarangesaSPREADSHEET_VALUES_BATCH_URLuLower-level method that directly calls `spreadsheets/<ID>/values:batchGet <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/batchGet>`_.

        :param ranges: List of ranges in the `A1 notation <https://developers.google.com/sheets/api/guides/concepts#a1_notation>`_ of the values to retrieve.
        :param dict params: (optional) `Query parameters`_.
        :returns: `Response body`_.
        :rtype: dict
        aputuLower-level method that directly calls `spreadsheets/<ID>/values/<range>`_.

        :param str range: The `A1 notation <https://developers.google.com/sheets/api/guides/concepts#a1_notation>`_ of the values to update.
        :param dict params: (optional) `Query parameters`_.
        :param dict body: (optional) `Request body`_.
        :returns: `Response body`_.
        :rtype: dict

        Example::

            sh.values_update(
                'Sheet1!A2',
                params={
                    'valueInputOption': 'USER_ENTERED'
                },
                body={
                    'values': [[1, 2, 3]]
                }
            )

        .. versionadded:: 3.0
        aSPREADSHEET_VALUES_BATCH_UPDATE_URLaSPREADSHEET_URLuA method stub that directly calls `spreadsheets.get <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/get>`_.aSPREADSHEET_SHEETS_COPY_TO_URLadestinationSpreadsheetIduLower-level method that directly calls `spreadsheets.sheets.copyTo <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.sheets/copyTo>`_.DaincludeGridDataafalseasheetsaWorksheetTEKeyErrorEIndexErroraWorksheetNotFounduindex {} not founduReturns a worksheet with specified `index`.

        :param index: An index of a worksheet. Indexes start from zero.
        :type index: int

        :returns: an instance of :class:`gspread.worksheet.Worksheet`.

        :raises:
            :class:`~gspread.exceptions.WorksheetNotFound`: if can't find the worksheet

        Example. To get third worksheet of a spreadsheet:

        >>> sht = client.open('My fancy spreadsheet')
        >>> worksheet = sht.get_worksheet(2)
        uid should be intafinditemu<lambda>uSpreadsheet.get_worksheet_by_id.<locals>.<lambda>TEStopIterationEKeyErroruid {} not founduReturns a worksheet with specified `worksheet id`.

        :param id: The id of a worksheet. it can be seen in the url as the value of the parameter 'gid'.
        :type id: str | int

        :returns: an instance of :class:`gspread.worksheet.Worksheet`.
        :raises:
            :class:`~gspread.exceptions.WorksheetNotFound`: if can't find the worksheet

        Example. To get the worksheet 123456 of a spreadsheet:

        >>> sht = client.open('My fancy spreadsheet')
        >>> worksheet = sht.get_worksheet_by_id(123456)
        asheetIdaworksheet_id_intaisSheetHiddenuReturns a list of all :class:`worksheets <gspread.worksheet.Worksheet>`
        in a spreadsheet.

        :param exclude_hidden: (optional) If set to ``True`` will only return
                                 visible worksheets. Default is ``False``.
        :type exclude_hidden: bool

        :returns: a list of :class:`worksheets <gspread.worksheet.Worksheet>`.
        :rtype: list
        uSpreadsheet.worksheet.<locals>.<lambda>uReturns a worksheet with specified `title`.

        :param title: A title of a worksheet. If there're multiple
                      worksheets with the same title, first one will
                      be returned.
        :type title: str

        :returns: an instance of :class:`gspread.worksheet.Worksheet`.

        :raises:
            WorksheetNotFound: if can't find the worksheet

        Example. Getting worksheet named 'Annual bonuses'

        >>> sht = client.open('Sample one')
        >>> worksheet = sht.worksheet('Annual bonuses')
        arequestsaaddSheetasheetTypeaGRIDagridPropertiesarowCountacolumnCountlaindexabatch_updatearepliesuAdds a new worksheet to a spreadsheet.

        :param title: A title of a new worksheet.
        :type title: str
        :param rows: Number of rows.
        :type rows: int
        :param cols: Number of columns.
        :type cols: int
        :param index: Position of the sheet.
        :type index: int

        :returns: a newly created :class:`worksheets <gspread.worksheet.Worksheet>`.
        aduplicateSheetasourceSheetIdainsertSheetIndexanewSheetIdanewSheetNameuDuplicates the contents of a sheet.

        :param int source_sheet_id: The sheet ID to duplicate.
        :param int insert_sheet_index: (optional) The zero-based index
                                       where the new sheet should be inserted.
                                       The index of all sheets after this are
                                       incremented.
        :param int new_sheet_id: (optional) The ID of the new sheet.
                                 If not set, an ID is chosen. If set, the ID
                                 must not conflict with any existing sheet ID.
                                 If set, it must be non-negative.
        :param str new_sheet_name: (optional) The name of the new sheet.
                                   If empty, a new name is chosen for you.

        :returns: a newly created :class:`gspread.worksheet.Worksheet`

        .. versionadded:: 3.1
        adeleteSheetuDeletes a worksheet from a spreadsheet.

        :param worksheet: The worksheet to be deleted.
        :type worksheet: :class:`~gspread.worksheet.Worksheet`
        u
        Deletes a Worksheet by id
        utoo many values to unpack (expected 2)aidx_mapaidxlaitemsaupdateSheetPropertiesafieldsuUpdates the ``index`` property of each Worksheet to reflect
        its index in the provided sequence of Worksheets.

        :param worksheets_in_desired_order: Iterable of Worksheet objects in desired order.

        Note: If you omit some of the Spreadsheet's existing Worksheet objects from
        the provided sequence, those Worksheets will be appended to the end of the sequence
        in the order that they appear in the list returned by :meth:`gspread.spreadsheet.Spreadsheet.worksheets`.

        .. versionadded:: 3.4
        ainsert_permissionTavalueaperm_typearoleanotifyaemail_messageawith_linkuShare the spreadsheet with other accounts.

        :param value: user or group e-mail address, domain name
                      or None for 'default' type.
        :type value: str, None
        :param perm_type: The account type.
               Allowed values are: ``user``, ``group``, ``domain``,
               ``anyone``.
        :type perm_type: str
        :param role: The primary role for this user.
               Allowed values are: ``owner``, ``writer``, ``reader``.
        :type role: str
        :param notify: (optional) Whether to send an email to the target user/domain.
        :type notify: bool
        :param email_message: (optional) The email to be sent if notify=True
        :type email_message: str
        :param with_link: (optional) Whether the link is required for this permission
        :type with_link: bool

        Example::

            # Give Otto a write permission on this spreadsheet
            sh.share('otto@example.com', perm_type='user', role='writer')

            # Give Otto's family a read permission on this spreadsheet
            sh.share('otto-familly@example.com', perm_type='group', role='reader')
        aexportuExport the spreadsheet in the given format.

        :param str file_id: A key of a spreadsheet to export

        :param format: The format of the resulting file.
            Possible values are:

                ``ExportFormat.PDF``,
                ``ExportFormat.EXCEL``,
                ``ExportFormat.CSV``,
                ``ExportFormat.OPEN_OFFICE_SHEET``,
                ``ExportFormat.TSV``,
                and ``ExportFormat.ZIPPED_HTML``.

            See `ExportFormat`_ in the Drive API.
            Default value is ``ExportFormat.PDF``.
        :type format: :namedtuple:`~gspread.utils.ExportFormat`

        :returns bytes: The content of the exported file.

        .. _ExportFormat: https://developers.google.com/drive/api/guides/ref-export-formats
        alist_permissionsuLists the spreadsheet's permissions.w@aemailAddressadomainakeyaroleaanyaremove_permissionuRemove permissions from a user or domain.

        :param value: User or domain to remove permissions from
        :type value: str
        :param role: (optional) Permission to remove. Defaults to all
                     permissions.
        :type role: str

        Example::

            # Remove Otto's write permission for this spreadsheet
            sh.remove_permissions('otto@example.com', role='writer')

            # Remove all Otto's permissions for this spreadsheet
            sh.remove_permissions('otto@example.com')
        u{}/{}/permissions/{}aDRIVE_FILES_API_V3_URLDaroleapendingOwnerawritertapatchuTransfer the ownership of this file to a new user.

        It is necessary to first create the permission with the new owner's email address,
        get the permission ID then use this method to transfer the ownership.

        .. note::

           You can list all permissions using :meth:`gspread.spreadsheet.Spreadsheet.list_permissions`.

        .. warning::

           You can only transfer ownership to a new user, you cannot transfer ownership to a group
           or a domain email address.
        DaroleaownerDatransferOwnershiptTajsonaparamsuAccept the pending ownership request on that file.

        It is necessary to edit the permission with the pending ownership.

        .. note::

           You can only accept ownership transfer for the user currently being used.
        asheet1arangeureturn a list of :class:`gspread.cell.Cell` objects from
        the specified named range.

        :param named_range: A string with a named range value to fetch.
        :type named_range: str
        TDafieldsanamedRangesanamedRangesuLists the spreadsheet's named ranges.aupdateSpreadsheetPropertiesuRenames the spreadsheet.

        :param str title: A new title.
        uUpdates the current spreadsheet timezone.
        Can be any timezone in CLDR format such as "America/New_York"
        or a custom time zone such as GMT-07:00.
        uUpdate the locale of the spreadsheet.
        Can be any of the ISO 639-1 language codes, such as: de, fr, en, ...
        Or an ISO 639-2 if no ISO 639-1 exists.
        Or a combination of the ISO language code and country code,
        such as en_US, de_CH, fr_FR, ...

        .. note::
            Note: when updating this field, not all locales/languages are supported.
        TDafieldsusheets.properties,sheets.protectedRangesuSpreadsheet.list_protected_ranges.<locals>.<lambda>uworksheet id {} not foundaprotectedRangesuLists the spreadsheet's protected named rangesasheetidTu6.0.0urefresh_lastUpdateTime will be removed. Please use get_lastUpdateTime()aget_lastUpdateTimeuUpdates the cached value of lastUpdateTime.aget_file_drive_metadatauGet the lastUpdateTime metadata from the Drive API.
        Also updates the cached value in the _properties dict.
        uFetches the drive metadata from the Drive API
        and updates the cached values in _properties dict.u
gspread.spreadsheet
~~~~~~~~~~~~~~

This module contains common spreadsheets' models.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__aUnionaexceptionsTaWorksheetNotFoundaurlsTaDRIVE_FILES_API_V3_URLaSPREADSHEET_BATCH_UPDATE_URLaSPREADSHEET_DRIVE_URLaSPREADSHEET_SHEETS_COPY_TO_URLaSPREADSHEET_URLaSPREADSHEET_VALUES_APPEND_URLaSPREADSHEET_VALUES_BATCH_CLEAR_URLaSPREADSHEET_VALUES_BATCH_UPDATE_URLaSPREADSHEET_VALUES_BATCH_URLaSPREADSHEET_VALUES_CLEAR_URLaSPREADSHEET_VALUES_URLautilsTaExportFormatadeprecation_warningafinditemaquoteaExportFormataworksheetTaWorksheetugspread.spreadsheeta__module__uThe class that represents a spreadsheet.aSpreadsheeta__qualname__a__init__uSpreadsheet.__init__uSpreadsheet.iduSpreadsheet.titleaurluSpreadsheet.urlacreationTimeuSpreadsheet.creationTimealastUpdateTimeuSpreadsheet.lastUpdateTimeaupdateduSpreadsheet.updatedatimezoneuSpreadsheet.timezoneuSpreadsheet.localeuSpreadsheet.sheet1a__repr__uSpreadsheet.__repr__uSpreadsheet.batch_updateavalues_appenduSpreadsheet.values_appendavalues_clearuSpreadsheet.values_clearTnnavalues_batch_clearuSpreadsheet.values_batch_clearTnavalues_getuSpreadsheet.values_getavalues_batch_getuSpreadsheet.values_batch_getavalues_updateuSpreadsheet.values_updateavalues_batch_updateuSpreadsheet.values_batch_updatea_spreadsheets_getuSpreadsheet._spreadsheets_geta_spreadsheets_sheets_copy_touSpreadsheet._spreadsheets_sheets_copy_touSpreadsheet.fetch_sheet_metadatauSpreadsheet.get_worksheetTOstrOintaget_worksheet_by_iduSpreadsheet.get_worksheet_by_idTFDaexclude_hiddenObooluSpreadsheet.worksheetsuSpreadsheet.worksheetaadd_worksheetuSpreadsheet.add_worksheetTnnnaduplicate_sheetuSpreadsheet.duplicate_sheetadel_worksheetuSpreadsheet.del_worksheetaworksheet_idadel_worksheet_by_iduSpreadsheet.del_worksheet_by_idareorder_worksheetsuSpreadsheet.reorder_worksheetsTtnFashareuSpreadsheet.shareaPDFuSpreadsheet.exportuSpreadsheet.list_permissionsTaanyaremove_permissionsuSpreadsheet.remove_permissionsatransfer_ownershipuSpreadsheet.transfer_ownershipaaccept_ownershipuSpreadsheet.accept_ownershipanamed_rangeuSpreadsheet.named_rangealist_named_rangesuSpreadsheet.list_named_rangesaupdate_titleuSpreadsheet.update_titleaupdate_timezoneuSpreadsheet.update_timezoneaupdate_localeuSpreadsheet.update_localealist_protected_rangesuSpreadsheet.list_protected_rangesDareturnnarefresh_lastUpdateTimeuSpreadsheet.refresh_lastUpdateTimeDareturnOstruSpreadsheet.get_lastUpdateTimeuSpreadsheet.update_drive_metadataTugspread\spreadsheet.pyTasheetasheetidTasheetidTwxatitleTatitleTwxaworksheet_id_intTaworksheet_id_intu<module gspread.spreadsheet>Ta__class__TaselfaclientapropertiesametadataTaselfTaselfaparamsaurlwrTaselfasheet_idadestination_spreadsheet_idaurlabodywrTaselfapermission_idaurlapayloadaparamsTaselfatitlearowsacolsaindexabodyadataapropertiesaworksheetTaselfabodywrTaselfaworksheetabodyTaselfaworksheet_idaworksheet_id_intaexabodyTaselfasource_sheet_idainsert_sheet_indexanew_sheet_idanew_sheet_nameabodyadataapropertiesaworksheetTaselfaformatTaselfametadataTaselfaindexasheet_dataapropertiesTaselfaidasheet_dataaworksheet_id_intaexaitemTaselfasheetidasheetsasheetTaselfanamed_rangeTaselfavaluearoleapermission_listakeyafiltered_id_listapermission_idTaselfaworksheets_in_desired_orderaidx_mapaidxwwabodyTaselfaemail_addressaperm_typearoleanotifyaemail_messageawith_linkTaselfapermission_idaurlapayloadTaselfadrive_metadataTaselfalocaleabodyaresTaselfatimezoneabodyaresTaselfatitleabodyaresTaselfarangeaparamsabodyaurlwrTaselfaparamsabodyaurlwrTaselfarangesaparamsaurlwrTaselfarangeaurlwrTaselfarangeaparamsaurlwrTaselfatitleasheet_dataaitemTaselfaexclude_hiddenasheet_dataaworksheetsu.gspread.urls(u
gspread.urls
~~~~~~~~~~~~

Google API urls.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__uhttps://sheets.googleapis.com/v4/spreadsheetsaSPREADSHEETS_API_V4_BASE_URLu/%saSPREADSHEET_URLu/%s:batchUpdateaSPREADSHEET_BATCH_UPDATE_URLu/%s/values/%saSPREADSHEET_VALUES_URLu/%s/values:batchGetaSPREADSHEET_VALUES_BATCH_URLu/%s/values:batchUpdateaSPREADSHEET_VALUES_BATCH_UPDATE_URLu/%s/values:batchClearaSPREADSHEET_VALUES_BATCH_CLEAR_URLu:appendaSPREADSHEET_VALUES_APPEND_URLu:clearaSPREADSHEET_VALUES_CLEAR_URLu/sheets/%s:copyToaSPREADSHEET_SHEETS_COPY_TO_URLuhttps://www.googleapis.com/drive/v3/filesaDRIVE_FILES_API_V3_URLuhttps://www.googleapis.com/upload/drive/v2/filesaDRIVE_FILES_UPLOAD_API_V2_URLuhttps://www.googleapis.com/drive/v3/files/%s/commentsaDRIVE_FILES_API_V3_COMMENTS_URLuhttps://docs.google.com/spreadsheets/d/%saSPREADSHEET_DRIVE_URLu#gid=%saWORKSHEET_DRIVE_URLugspread\urls.pyu<module gspread.urls>u.gspread.utils&BUa__module__a__name__aoauth2clientaServiceAccountCredentialsa_convert_service_accountTaOAuth2CredentialsaAccessTokenCredentialsaGoogleCredentialsa_convert_oauthaCredentialsuCredentials need to be from either oauth2client or from google-auth.aUserCredentialsaaccess_tokenarefresh_tokenaid_tokenatoken_uriaclient_idaclient_secretascopesaserialization_dataa_scopesasplituhttps://www.googleapis.com/auth/driveuhttps://spreadsheets.google.com/feedsafrom_service_account_infoTascopesuFinds and returns first item in iterable for which func(item) is True.afuncu<genexpr>ufinditem.<locals>.<genexpr>w_areplaceTw_uTw,uulavalueuReturns a value that depends on the input:

        - Float if input is a string that can be converted to Float
        - Integer if input is a string that can be converted to integer
        - Zero if the input is a string that is empty and empty2zero flag is set
        - The unmodified input value, otherwise.

    Examples::

        >>> numericise("faa")
        'faa'

    >>> numericise("3")
    3

    >>> numericise("3_2", allow_underscores_in_numeric_literals=False)
    '3_2'

    >>> numericise("3_2", allow_underscores_in_numeric_literals=True)
    32

    >>> numericise("3.1")
    3.1

    >>> numericise("2,000.1")
    2000.1

    >>> numericise("", empty2zero=True)
    0

    >>> numericise("", empty2zero=False)
    ''

    >>> numericise("", default_blank=None)
    >>>

    >>> numericise("", default_blank="foo")
    'foo'

    >>> numericise("")
    ''

    >>> numericise(None)
    >>>
    lanumericiseaempty2zeroadefault_blankaallow_underscores_in_numeric_literalsTaempty2zeroadefault_blankaallow_underscores_in_numeric_literalsuReturns a list of numericised values from strings except those from the
    row specified as ignore.

    :param list values: Input row
    :param bool empty2zero: (optional) Whether or not to return empty cells
        as 0 (zero). Defaults to ``False``.
    :param str default_blank: Which value to use for blank cells,
        defaults to empty string.
    :param bool allow_underscores_in_numeric_literals: Whether or not to allow
        visual underscores in numeric literals
    :param list ignore: List of ints of indices of the row (index 1) to ignore
        numericising.
    aIncorrectCellLabelu({}, {})adivlutoo many values to unpack (expected 2)aMAGIC_NUMBERacolumn_labelu{}{}uTranslates a row and column cell address to A1 notation.

    :param row: The row of the cell to be converted.
        Rows start at index 1.
    :type row: int, str

    :param col: The column of the cell to be converted.
        Columns start at index 1.
    :type row: int, str

    :returns: a string containing the cell's coordinates in A1 notation.

    Example:

    >>> rowcol_to_a1(1, 1)
    A1

    aCELL_ADDR_REamatchagroupTlaupperTlacoluTranslates a cell's address in A1 notation to a tuple of integers.

    :param str label: A cell label in A1 notation, e.g. 'B1'.
        Letter case is ignored.
    :returns: a tuple containing `row` and `column` numbers. Both indexed
              from 1 (one).
    :rtype: tuple

    Example:

    >>> a1_to_rowcol('A1')
    (1, 1)

    aA1_ADDR_ROW_COL_REagroupsainfuTranslates a cell's address in A1 notation to a tuple of integers.

    Same as `a1_to_rowcol()` but allows for missing row or column part
    (e.g. "A" for the first column)

    :returns: a tuple containing `row` and `column` numbers. Both indexed
        from 1 (one).
    :rtype: tuple

    Example:

    >>> _a1_to_rowcol_unbounded('A1')
    (1, 1)

    >>> _a1_to_rowcol_unbounded('A')
    (inf, 1)

    >>> _a1_to_rowcol_unbounded('1')
    (1, inf)

    >>> _a1_to_rowcol_unbounded('ABC123')
    (123, 731)

    >>> _a1_to_rowcol_unbounded('ABC')
    (inf, 731)

    >>> _a1_to_rowcol_unbounded('123')
    (123, inf)

    >>> _a1_to_rowcol_unbounded('1A')
    Traceback (most recent call last):
        ...
    gspread.exceptions.IncorrectCellLabel: 1A

    >>> _a1_to_rowcol_unbounded('')
    (inf, inf)

    apartitionTw:utoo many values to unpack (expected 3)a_a1_to_rowcol_unboundedastartRowIndexaendRowIndexastartColumnIndexaendColumnIndexasheetIdagrid_rangeuConverts a range defined in A1 notation to a dict representing
    a `GridRange`_.

    All indexes are zero-based. Indexes are half open, e.g the start
    index is inclusive and the end index is exclusive: [startIndex, endIndex).

    Missing indexes indicate the range is unbounded on that side.

    .. _GridRange: https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/other#GridRange

    Examples::

        >>> a1_range_to_grid_range('A1:A1')
        {'startRowIndex': 0, 'endRowIndex': 1, 'startColumnIndex': 0, 'endColumnIndex': 1}

    >>> a1_range_to_grid_range('A3:B4')
    {'startRowIndex': 2, 'endRowIndex': 4, 'startColumnIndex': 0, 'endColumnIndex': 2}

    >>> a1_range_to_grid_range('A:B')
    {'startColumnIndex': 0, 'endColumnIndex': 2}

    >>> a1_range_to_grid_range('A5:B')
    {'startRowIndex': 4, 'startColumnIndex': 0, 'endColumnIndex': 2}

    >>> a1_range_to_grid_range('A1')
    {'startRowIndex': 0, 'endRowIndex': 1, 'startColumnIndex': 0, 'endColumnIndex': 1}

    >>> a1_range_to_grid_range('A')
    {'startColumnIndex': 0, 'endColumnIndex': 1}

    >>> a1_range_to_grid_range('1')
    {'startRowIndex': 0, 'endRowIndex': 1}

    >>> a1_range_to_grid_range('A1', sheet_id=0)
    {'sheetId': 0, 'startRowIndex': 0, 'endRowIndex': 1, 'startColumnIndex': 0, 'endColumnIndex': 1}
    aInvalidInputValueuinvalid value: {}, must be a column letteruConverts a column letter to its numerical index.

    This is useful when using the method :meth:`gspread.worksheet.Worksheet.col_values`.
    Which requires a column index.

    This function is case-insensitive.

    Raises :exc:`gspread.exceptions.InvalidInputValue` in case of invalid input.

    Examples::

        >>> column_letter_to_index("a")
        1

    >>> column_letter_to_index("A")
    1

    >>> column_letter_to_index("AZ")
    52

    >>> column_letter_to_index("!@#$%^&")
    ...
    gspread.exceptions.InvalidInputValue: invalid value: !@#$%^&, must be a column letter
    awrapsawrapperucast_to_a1_notation.<locals>.wrapperuDecorator function casts wrapped arguments to A1 notation in range
    method calls.
    arowcol_to_a1:nln:lnnw::lnnamethodaargsaURL_KEY_V2_REasearchaURL_KEY_V1_REaNoValidUrlKeyFound:lnnllZ{l$uCalculate gid of a worksheet from its wid.amaxLLwLarightpadamax_colsapadding_valueTapadding_valueuFill gaps in a list of lists.
    e.g.,::

        >>> L = [
        ... [1, 2, 3],
        ... ]
        >>> fill_gaps(L, 2, 4)
        [
            [1, 2, 3, ""],
            ["", "", "", ""]
        ]

    :param L: List of lists to fill gaps in.
    :param rows: Number of rows to fill.
    :param cols: Number of columns to fill.
    :param padding_value: Default value to fill gaps with.

    :type L: list[list[T]]
    :type rows: int
    :type cols: int
    :type padding_value: T

    :return: List of lists with gaps filled.
    :rtype: list[list[T]]:
    ufill_gaps.<locals>.<genexpr>adefaultdictTOdictaminarowsasetdefaultarowarow_offsetacol_offsetachainafrom_iterableavaluesakeysarect_colsagetucell_list_to_rect.<locals>.<genexpr>auquoteaencodeu'{}'Tw'u''u{}!{}uReturn an absolutized path of a range.

    >>> absolute_range_name("Sheet1", "A1:B1")
    "'Sheet1'!A1:B1"

    >>> absolute_range_name("Sheet1", "A1")
    "'Sheet1'!A1"

    >>> absolute_range_name("Sheet1")
    "'Sheet1'"

    >>> absolute_range_name("Sheet'1")
    "'Sheet''1'"

    >>> absolute_range_name("Sheet''1")
    "'Sheet''''1'"

    >>> absolute_range_name("''sheet12''", "A1:B2")
    "'''''sheet12'''''!A1:B2"
    aSequenceuReturn True if the value is scalar.

    A scalar is not a sequence but can be a string.

    >>> is_scalar([])
    False

    >>> is_scalar([1, 2])
    False

    >>> is_scalar(42)
    True

    >>> is_scalar('nice string')
    True

    >>> is_scalar({})
    True

    >>> is_scalar(set())
    True
    aitemsuReturn a shallow copy of D with all `None` values excluded.

    >>> filter_dict_values({'a': 1, 'b': 2, 'c': None})
    {'a': 1, 'b': 2}

    >>> filter_dict_values({'a': 1, 'b': 2, 'c': 0})
    {'a': 1, 'b': 2, 'c': 0}

    >>> filter_dict_values({})
    {}

    >>> filter_dict_values({'imnone': None})
    {}
    adecorateuaccepted_kwargs.<locals>.decorateu
    >>> @accepted_kwargs(d='d', e=None)
    ... def foo(a, b, c='c', **kwargs):
    ...     return {
    ...         'a': a,
    ...         'b': b,
    ...         'c': c,
    ...         'd': kwargs['d'],
    ...         'e': kwargs['e'],
    ...     }
    ...

    >>> foo('a', 'b')
    {'a': 'a', 'b': 'b', 'c': 'c', 'd': 'd', 'e': None}

    >>> foo('a', 'b', 'NEW C')
    {'a': 'a', 'b': 'b', 'c': 'NEW C', 'd': 'd', 'e': None}

    >>> foo('a', 'b', e='Not None')
    {'a': 'a', 'b': 'b', 'c': 'c', 'd': 'd', 'e': 'Not None'}

    >>> foo('a', 'b', d='NEW D')
    {'a': 'a', 'b': 'b', 'c': 'c', 'd': 'NEW D', 'e': None}

    >>> foo('a', 'b', a_typo='IS DETECTED')
    Traceback (most recent call last):
    ...
    TypeError: foo got unexpected keyword arguments: ['a_typo']

    >>> foo('a', 'b', d='NEW D', c='THIS DOES NOT WORK BECAUSE OF d')
    Traceback (most recent call last):
    ...
    TypeError: foo got unexpected keyword arguments: ['c']

    uaccepted_kwargs.<locals>.decorate.<locals>.wrapperadefault_kwargsu%s got unexpected keyword arguments: %swfaREQUIRED_KWARGSakwargsamergesastart_row_indexastart_col_indexacol_indicesatop_left_valueuFor each merged region, replace all values with the value of the top-left cell of the region.
    e.g., replaces
    [
    [1, None, None],
    [None, None, None],
    ]
    with
    [
    [1, 1, None],
    [1, 1, None],
    ]
    if the top-left four cells are merged.

    :param worksheet_metadata: The metadata returned by the Google API for the worksheet.
        Should have a "merges" key.

    :param values: The values returned by the Google API for the worksheet. 2D array.

    :param start_row_index: The index of the first row of the values in the worksheet.
        e.g., if the values are in rows 3-5, this should be 2.

    :param start_col_index: The index of the first column of the values in the worksheet.
        e.g., if the values are in columns C-E, this should be 2.
    alstripTw#:nlnahex_colorluHex color code must be in the format '#RRGGBB'.ared:llnllagreen:llnablue:llnuInvalid character in hex color string: #uConvert a hex color code to RGB color values.

    :param str hex_color: Hex color code in the format "#RRGGBB".

    :returns: Dict containing the color's red, green and blue values between 0 and 1.
    :rtype: dict

    :raises:
        ValueError: If the input hex string is not in the correct format or length.

    Examples:
        >>> convert_hex_to_colors_dict("#3300CC")
        {'red': 0.2, 'green': 0.0, 'blue': 0.8}

        >>> convert_hex_to_colors_dict("#30C")
        {'red': 0.2, 'green': 0.0, 'blue': 0.8}

    DavalueareturnOfloatOstru
        Convert an integer to a 2-digit uppercase hex string.
        ato_hexuconvert_colors_to_hex_value.<locals>.to_hexuColor value out of accepted range 0-1.w#uConvert RGB color values to a hex color code.

    :param float red: Red color value (0-1).
    :param float green: Green color value (0-1).
    :param float blue: Blue color value (0-1).

    :returns: Hex color code in the format "#RRGGBB".
    :rtype: str

    :raises:
        ValueError: If any color value is out of the accepted range (0-1).

    Example:

        >>> convert_colors_to_hex_value(0.2, 0, 0.8)
        '#3300CC'

        >>> convert_colors_to_hex_value(green=0.5)
        '#008000'
    around:lnnazfilluconvert_colors_to_hex_value.<locals>.<genexpr>aA1_ADDR_FULL_REuCheck if the range name is a full A1 notation.
    "A1:B2", "Sheet1!A1:B2" are full A1 notations
    "A1:B", "A1" are not

    Args:
        range_name (str): The range name to check.

    Returns:
        bool: True if the range name is a full A1 notation, False otherwise.

    Examples:

        >>> is_full_a1_notation("A1:B2")
        True

        >>> is_full_a1_notation("A1:B")
        False
    w!Tw!uGet the A1 notation from an absolute range name.
    "Sheet1!A1:B2" -> "A1:B2"
    "A1:B2" -> "A1:B2"

    Args:
        range_name (str): The range name to check.

    Returns:
        str: The A1 notation of the range name stripped of the sheet.
    aosagetenvaSILENCE_WARNINGS_ENV_KEYw0w1awarningsawarnaDEPRECATION_WARNING_TEMPLATEaformatTav_deprecatedamsg_deprecatedaDeprecationWarningluEmit a deprecation warning.

    ..note::

        This warning can be silenced by setting the environment variable:
        GSPREAD_SILENCE_WARNINGS=1
    u
gspread.utils
~~~~~~~~~~~~~

This module contains utility functions.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__areacollectionsTadefaultdictanamedtupleanamedtupleucollections.abcTaSequenceaitertoolsTachainamathTainfaMappinguurllib.parseTaquoteaquoteugoogle.auth.credentialsTaCredentialsugoogle.oauth2.credentialsugoogle.oauth2.service_accountaexceptionsTaIncorrectCellLabelaInvalidInputValueaNoValidUrlKeyFoundl@acompileTu([A-Za-z]+)([1-9]\d*)Tu([A-Za-z]+)?([1-9]\d*)?$Tu[A-Za-z]+\d+:[A-Za-z]+\d+Tukey=([^&#]+)Tu/spreadsheets/d/([a-zA-Z0-9-_]+)aDimensionacolsTaROWSaCOLUMNSaValueRenderOptionaformattedaunformattedaformulaTaFORMATTED_VALUEaUNFORMATTED_VALUEaFORMULAaValueInputOptionarawauser_enteredTaRAWaUSER_ENTEREDaDateTimeOptionaserial_numberaformatted_stringaformated_stringTaSERIAL_NUMBERaFORMATTED_STRINGaFORMATTED_STRINGaMimeTypeLagoogle_sheetsapdfaexcelacsvaopen_office_sheetatsvazipTuapplication/vnd.google-apps.spreadsheetuapplication/pdfuapplication/vnd.openxmlformats-officedocument.spreadsheetml.sheetutext/csvuapplication/vnd.oasis.opendocument.spreadsheetutext/tab-separated-valuesuapplication/zipaExportFormatLaPDFaEXCELaCSVaOPEN_OFFICE_SHEETaTSVaZIPPED_HTMLapdfaexcelacsvaopen_office_sheetatsvazipaPasteTypeLanormalavaluesaformatano_bordersaformulaadata_validationaconditional_formatingTaPASTE_NORMALaPASTE_VALUESaPASTE_FORMATaPASTE_NO_BORDERSaPASTE_FORMULAaPASTE_DATA_VALIDATIONaPASTE_CONDITIONAL_FORMATTINGaPasteOrientationanormalatransposeTaNORMALaTRANSPOSEaMergeTypeamerge_allamerge_columnsamerge_rowsTaMERGE_ALLaMERGE_COLUMNSaMERGE_ROWSu[Deprecated][in version {v_deprecated}]: {msg_deprecated}arequiredaGSPREAD_SILENCE_WARNINGSaconvert_credentialsafinditemTFuFanumericise_allaa1_to_rowcolTnaa1_range_to_grid_rangeacolumn_letter_to_indexacast_to_a1_notationaextract_id_from_urlawid_to_gidTuTnnuafill_gapsacell_list_to_rectTuuutf-8aabsolute_range_nameais_scalarafilter_dict_valuesaaccepted_kwargsacombined_merge_valuesareturnTOstrOfloataconvert_hex_to_colors_dictTZZZDaredagreenablueareturnOfloatppOstraconvert_colors_to_hex_valueDarange_nameareturnOstrOboolais_full_a1_notationDarange_nameareturnOstrpaget_a1_from_absolute_rangeDaversionamsgareturnOstrpnadeprecation_warningugspread\utils.pyTa.0wcTa.0aitemafuncTa.0arowTa.0avalueu<module gspread.utils>Talabelwmacolumn_labelarowacolwiwcTacredentialsTacredentialsadataascopesT
anameasheet_idastart_labelw_aend_labelastart_row_indexastart_column_indexaend_row_indexaend_column_indexagrid_rangeTasheet_namearange_nameTadefault_kwargsadecorateTamethodawrapperTacell_listarowsarow_offsetacol_offsetacellarowaall_row_keysarect_colsarect_rowsTacolumnw_aindexTaworksheet_metadataavaluesastart_row_indexastart_col_indexamergesanew_valuesamax_row_indexamax_col_indexamergeamerge_start_rowamerge_end_rowamerge_start_colamerge_end_colatop_left_valuearow_indicesacol_indicesarow_indexacol_indexTaredagreenablueato_hexTacredentialsamoduleaclsTahex_colorargb_coloraexTwfawrapperTadefault_kwargsTaversionamsgTaurlam2am1TwLarowsacolsapadding_valueamax_colsamax_rowsapad_rowsTwDTafuncaseqTarange_nameTwxTavalueaempty2zeroadefault_blankaallow_underscores_in_numeric_literalsacleaned_valueaint_valueafloat_valueTavaluesaempty2zeroadefault_blankaallow_underscores_in_numeric_literalsaignoreanumericised_listTavalueasafeaencodingTarowamax_lenapadding_valueapad_lenTarowacoladivacolumn_labelamodalabelTavalueahex_valueTawidawidvalaxorvalTaargsakwargsaunexpected_kwargsaerrwkwvadefault_kwargswfTadefault_kwargswfTaselfaargsakwargsarange_startarange_endarange_nameamethodTamethod.gspread.worksheet'1agetavaluesarangeamajorDimensiona_jsonuThe range of the valuesuThe major dimension of this range

        Can be one of:

        * ``ROW``: the first list level holds rows of values
        * ``COLUMNS``: the first list level holds columns of values
        luReturns the value of a first cell in a range.

        If the range is empty, return the default value.
        aspreadsheetaclienta_propertiesu<{} {} id:{}>a__name__atitleaidasheetIduWorksheet ID.uWorksheet title.aWORKSHEET_DRIVE_URLuWorksheet URL.aindexuWorksheet index.TahiddenFuWorksheet hidden status.awarningsawarnuWorksheet.updated() is deprecated, this feature is not supported in Sheets API v4aDeprecationWarningDastacklevellu.. deprecated:: 2.0

        This feature is not supported in Sheets API v4.
        agridPropertiesarowCountuNumber of rows.acolumnCountuNumber of columns.acol_countuNumber of columnsTafrozenRowCountluNumber of frozen rows.TafrozenColumnCountluNumber of frozen columns.TahideGridlinesFuWhether or not gridlines hidden. Boolean.
        True if hidden. False if shown.
        adeprecation_warningTu6.0.0ucolor format will change to hex format "#RRGGBB".
                To suppress warning, use "get_tab_color()" and convert back to dict format, use gspread.utils.convert_hex_to_colors_dict.
                However, we recommend changing your code to use hex format.TaversionamsgatabColorStyleTargbColornuTab color style. Dict with RGB color values.
        If any of R, G, B are 0, they will not be present in the dict.
        aconvert_colors_to_hex_valueuTab color style in hex format. String.afetch_sheet_metadataafinditemu<lambda>uWorksheet._get_sheet_property.<locals>.<lambda>asheetsureturn a property of this worksheet or default value if not foundapropertiesaselfacellaa1_to_rowcolavalue_render_optionuReturns an instance of a :class:`gspread.cell.Cell`.

        :param label: Cell label in A1 notation
                      Letter case is ignored.
        :type label: str
        :param value_render_option: (optional) Determines how values should be
                                    rendered in the output. See
                                    `ValueRenderOption`_ in the Sheets API.
        :type value_render_option: :namedtuple:`~gspread.utils.ValueRenderOption`

        .. _ValueRenderOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueRenderOption

        Example:

        >>> worksheet.acell('A1')
        <Cell R1C1 "I'm cell A1">
        arowcol_to_a1Tavalue_render_optionafirstuaCelluReturns an instance of a :class:`gspread.cell.Cell` located at
        `row` and `col` column.

        :param row: Row number.
        :type row: int
        :param col: Column number.
        :type col: int
        :param value_render_option: (optional) Determines how values should be
                                    rendered in the output. See
                                    `ValueRenderOption`_ in the Sheets API.
        :type value_render_option: :namedtuple:`~gspread.utils.ValueRenderOption`

        .. _ValueRenderOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueRenderOption

        Example:

        >>> worksheet.cell(1, 1)
        <Cell R1C1 "I'm cell A1">

        :rtype: :class:`gspread.cell.Cell`
        aabsolute_range_nameavalues_getw:Tarangeuw!asplitTw!laa1_range_to_grid_rangeanameadataTastartRowIndexlTastartColumnIndexlaendRowIndexarow_countaendColumnIndexafill_gapsTarowsacolsutoo many values to unpack (expected 2)wiarow_offsetacolumn_offsetTarowacolavalueuReturns a list of :class:`gspread.cell.Cell` objects from a specified range.

        :param name: A string with range value in A1 notation (e.g. 'A1:A5')
                     or the named range to fetch.
        :type name: str

        Alternatively, you may specify numeric boundaries. All values
        index from 1 (one):

        :param int first_row: First row number
        :param int first_col: First column number
        :param int last_row: Last row number
        :param int last_col: Last column number

        :rtype: list

        Example::

            >>> # Using A1 notation
            >>> worksheet.range('A1:B7')
            [<Cell R1C1 "42">, ...]

            >>> # Same with numeric boundaries
            >>> worksheet.range(1, 1, 7, 2)
            [<Cell R1C1 "42">, ...]

            >>> # Named ranges work as well
            >>> worksheet.range('NamedRange')
            [<Cell R1C1 "42">, ...]

            >>> # All values in a single API call
            >>> worksheet.range()
            [<Cell R1C1 'Hi mom'>, ...]

        uWorksheet.get_values.<locals>.<lambda>anamedRangesaget_a1_from_absolute_rangeabasicFilteracombined_merge_valuesaworksheet_metaTaworksheet_metadataavaluesastart_row_indexastart_col_indexuReturns a list of lists containing all values from specified range.

        By default values are returned as strings. See ``value_render_option``
        to change the default format.

        :param str range_name: (optional) Cell range in the A1 notation or
            a named range. If not specified the method returns values from all
            non empty cells.

        :param str major_dimension: (optional) The major dimension of the
            values. `Dimension.rows` ("ROWS") or `Dimension.cols` ("COLUMNS").
            Defaults to Dimension.rows
        :type major_dimension: :namedtuple:`~gspread.utils.Dimension`

        :param bool combine_merged_cells: (optional) If True, then all cells that
            are part of a merged cell will have the same value as the top-left
            cell of the merged cell. Defaults to False.

            .. warning::

                Setting this to True will cause an additional API request to be
                made to retrieve the values of all merged cells.


        :param str value_render_option: (optional) Determines how values should
            be rendered in the output. See `ValueRenderOption`_ in
            the Sheets API.

            Possible values are:

            ``ValueRenderOption.formatted``
                (default) Values will be calculated and formatted according
                to the cell's formatting. Formatting is based on the
                spreadsheet's locale, not the requesting user's locale.

            ``ValueRenderOption.unformatted``
                Values will be calculated, but not formatted in the reply.
                For example, if A1 is 1.23 and A2 is =A1 and formatted as
                currency, then A2 would return the number 1.23.

            ``ValueRenderOption.formula``
                Values will not be calculated. The reply will include
                the formulas. For example, if A1 is 1.23 and A2 is =A1 and
                formatted as currency, then A2 would return "=A1".

            .. _ValueRenderOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueRenderOption
        :type value_render_option: :namedtuple:`~gspread.utils.ValueRenderOption`


        :param str date_time_render_option: (optional) How dates, times, and
            durations should be represented in the output.

            Possible values are:

            ``DateTimeOption.serial_number``
                (default) Instructs date, time, datetime, and duration fields
                to be output as doubles in "serial number" format,
                as popularized by Lotus 1-2-3.

            ``DateTimeOption.formatted_string``
                Instructs date, time, datetime, and duration fields to be output
                as strings in their given number format
                (which depends on the spreadsheet locale).

            .. note::

                This is ignored if ``value_render_option`` is ``ValueRenderOption.formatted``.

            The default ``date_time_render_option`` is ``DateTimeOption.serial_number``.
        :type date_time_render_option: :namedtuple:`~gspread.utils.DateTimeOption`

        .. note::

            Empty trailing rows and columns will not be included.

        :param bool maintain_size: (optional) Returns a matrix of values matching the size of the requested range.

            .. warning::

                This can only work if the requested range is a complete bounded A1 notation.
                Example: ``A1:D4``: OK, ``C3:F``: Not OK, we don't know the end size of the requested range.

                This does not work with ``named_range`` either.

            Examples::

                # Works
                >>> worksheet.get("A1:B2", maintain_size=True)
                [['A1', 'B1'], ['A2', '']]

                # Does NOT maintain the requested size
                >>> worksheet.get("A1:B", maintain_size=True)
                [['A1', 'B1'], ['A2'], [], ['A4', 'B4'], ['A5']]

        Examples::

            # Return all values from the sheet
            worksheet.get_values()

            # Return all values from columns "A" and "B"
            worksheet.get_values('A:B')

            # Return values from range "A2:C10"
            worksheet.get_values('A2:C10')

            # Return values from named range "my_range"
            worksheet.get_values('my_range')

            # Return unformatted values (e.g. numbers as numbers)
            worksheet.get_values('A2:B4', value_render_option=ValueRenderOption.unformatted)

            # Return cell values without calculating formulas
            worksheet.get_values('A2:B4', value_render_option=ValueRenderOption.formula)
        Tanamearange_nameu<genexpr>uWorksheet.get_values.<locals>.<genexpr>aget_valuesuReturns a list of lists containing all cells' values as strings.

        This is an alias to :meth:`~gspread.worksheet.Worksheet.get_values`

        .. note::

            This is a legacy method.
            Use :meth:`~gspread.worksheet.Worksheet.get_values` instead.

        Examples::

            # Return all values from the sheet
            worksheet.get_all_values()

            # Is equivalent to
            worksheet.get_values()
        aget_recordsuReturns a list of dictionaries, all of them having the contents of
        the spreadsheet with the head row as keys and each of these
        dictionaries holding the contents of subsequent rows of cells as
        values.

        Cell values are numericised (strings that can be read as ints or floats
        are converted), unless specified in numericise_ignore

        :param bool empty2zero: (optional) Determines whether empty cells are
            converted to zeros.
        :param int head: (optional) Determines which row to use as keys,
            starting from 1 following the numeration of the spreadsheet.
        :param str default_blank: (optional) Determines which value to use for
            blank cells, defaults to empty string.
        :param bool allow_underscores_in_numeric_literals: (optional) Allow
            underscores in numeric literals, as introduced in PEP 515
        :param list numericise_ignore: (optional) List of ints of indices of
            the columns (starting at 1) to ignore numericising, special use
            of ['all'] to ignore numericising on all columns.
        :param value_render_option: (optional) Determines how values should
            be rendered in the output. See `ValueRenderOption`_ in
            the Sheets API.
        :type value_render_option: :namedtuple:`~gspread.utils.ValueRenderOption`

        :param list expected_headers: (optional) List of expected headers, they must be unique.

            .. note::

                returned dictionaries will contain all headers even if not included in this list

        Tu6.0.0uuse_index in get_records does nothing.It will be removed. Please do not use it.ufirst_index must be greater than the head rowufirst_index must be less than or equal to the number of rows in the worksheetulast_index must be greater than or equal to first_indexulast_index must be an integer less than or equal to the number of rows in the worksheetu{first_index}:{last_index}Tafirst_indexalast_indexLLu{head}:{head}TaheadaextendTacolsapadding_valueTarowsaGSpreadExceptionTuthe header row in the worksheet is not uniqueTuthe given 'expected_headers' are not uniquesuthe given 'expected_headers' contains unknown headers: {}aallanumericise_allaempty2zeroadefault_blankaallow_underscores_in_numeric_literalsanumericise_ignoreuReturns a list of dictionaries, all of them having the contents of
        the spreadsheet range selected with the head row/col as keys and each of these
        dictionaries holding the contents of subsequent selected rows/cols of cells as
        values.

        Cell values are numericised (strings that can be read as ints or floats
        are converted), unless specified in numericise_ignore

        :param bool empty2zero: (optional) Determines whether empty cells are
            converted to zeros.
        :param int head: (optional) Determines which index to use as keys,
            starting from 1 following the numeration of the spreadsheet.
        :param int use_index: (optional) Deprecated. Please ignore.
        :param int first_index: (optional) row to start reading data from (inclusive) (1-based).
        :param int last_index: (optional) row to stop reading at (inclusive) (1-based).
        :param str default_blank: (optional) Determines which value to use for
            blank cells, defaults to empty string.
        :param bool allow_underscores_in_numeric_literals: (optional) Allow
            underscores in numeric literals, as introduced in PEP 515
        :param list numericise_ignore: (optional) List of ints of indices of
            the columns (starting at 1) to ignore numericising, special use
            of ['all'] to ignore numericising on all columns.
        :param value_render_option: (optional) Determines how values should
            be rendered in the output. See `ValueRenderOption`_ in
            the Sheets API.
        :type value_render_option: :namedtuple:`~gspread.utils.ValueRenderOption`

        :param list expected_headers: (optional) Set this to allow reading a spreadsheet with duplicate headers. Set this to a list of unique headers that you want to read. Other headers not included in this list may be overwritten and data lost.

            .. note::

                returned dictionaries will contain all headers even if not included in this list

        Examples::

            # Sheet data:
            #      A    B    C
            #
            # 1    A1   B2   C3
            # 2    A6   B7   C8
            # 3    A11  B12  C13

            # Read all rows from the sheet
            >>> worksheet.get_records()
            {
                {"A1": "A6", "B2": "B7", "C3": "C8"},
                {"A1": "A11", "B2": "B12", "C3": "C13"}
            }
        akeysuWorksheet.get_records.<locals>.<genexpr>uReturns a list of all `Cell` of the current sheet.uA{}:{}uReturns a list of all values in a `row`.

        Empty cells in this list will be rendered as :const:`None`.

        :param int row: Row number (one-based).
        :param value_render_option: (optional) Determines how values should
            be rendered in the output. See `ValueRenderOption`_ in
            the Sheets API.

            Possible values are:

            ``ValueRenderOption.formatted``
                (default) Values will be calculated and formatted according
                to the cell's formatting. Formatting is based on the
                spreadsheet's locale, not the requesting user's locale.

            ``ValueRenderOption.unformatted``
                Values will be calculated, but not formatted in the reply.
                For example, if A1 is 1.23 and A2 is =A1 and formatted as
                currency, then A2 would return the number 1.23.

            ``ValueRenderOption.formula``
                Values will not be calculated. The reply will include
                the formulas. For example, if A1 is 1.23 and A2 is =A1 and
                formatted as currency, then A2 would return "=A1".

            .. _ValueRenderOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueRenderOption

        :type value_render_option: :namedtuple:`~gspread.utils.ValueRenderOption`

        :param date_time_render_option: (optional) How dates, times, and
            durations should be represented in the output.

            Possible values are:

            ``DateTimeOption.serial_number``
                (default) Instructs date, time, datetime, and duration fields
                to be output as doubles in "serial number" format,
                as popularized by Lotus 1-2-3.

            ``DateTimeOption.formatted_string``
                Instructs date, time, datetime, and duration fields to be output
                as strings in their given number format
                (which depends on the spreadsheet locale).

            .. note::

                This is ignored if ``value_render_option`` is ``ValueRenderOption.formatted``.

            The default ``date_time_render_option`` is ``DateTimeOption.serial_number``.
        :type date_time_render_option: :namedtuple:`~gspread.utils.DateTimeOption`
        u{}:{}:nlnavalueRenderOptionaDimensionacolsTaparamsuReturns a list of all values in column `col`.

        Empty cells in this list will be rendered as :const:`None`.

        :param int col: Column number (one-based).
        :param str value_render_option: (optional) Determines how values should
            be rendered in the output. See `ValueRenderOption`_ in
            the Sheets API.
        :type value_render_option: :namedtuple:`~gspread.utils.ValueRenderOption`

        .. _ValueRenderOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueRenderOption
        aupdate_cellavalueuUpdates the value of a cell.

        :param str label: Cell label in A1 notation.
        :param value: New value.

        Example::

            worksheet.update_acell('A1', '42')
        avalues_updateavalueInputOptionaValueInputOptionauser_enteredTaparamsabodyuUpdates the value of a cell.

        :param int row: Row number.
        :param int col: Column number.
        :param value: New value.

        Example::

            worksheet.update_cell(1, 1, '42')
        acell_list_to_rectaminamaxuUpdates many cells at once.

        :param list cell_list: List of :class:`gspread.cell.Cell` objects to update.
        :param  value_input_option: (optional) How the input data should be
            interpreted. Possible values are:

            ``ValueInputOption.raw``
                The values the user has entered will not be parsed and will be
                stored as-is.

            ``ValueInputOption.user_entered``
                The values will be parsed as if the user typed them into the
                UI. Numbers will stay as numbers, but strings may be converted
                to numbers, dates, etc. following the same rules that are
                applied when entering text into a cell via
                the Google Sheets UI.

            See `ValueInputOption`_ in the Sheets API.

        :type value_input_option: :namedtuple:`~gspread.utils.ValueInputOption`

        .. _ValueInputOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueInputOption

        Example::

            # Select a range
            cell_list = worksheet.range('A1:C7')

            for cell in cell_list:
                cell.value = 'O_o'

            # Update in batch
            worksheet.update_cells(cell_list)
        arowuWorksheet.update_cells.<locals>.<genexpr>acolafilter_dict_valuesamajor_dimensionadateTimeRenderOptionadate_time_render_optionamaintain_sizeais_full_a1_notationastartRowIndexastartColumnIndexaValueRangeafrom_jsonuReads values of a single range or a cell of a sheet.

         :param str range_name: (optional) Cell range in the A1 notation or
             a named range.

         :param str major_dimension: (optional) The major dimension that results
             should use. Either ``ROWS`` or ``COLUMNS``.

         :param value_render_option: (optional) Determines how values should
             be rendered in the output. See `ValueRenderOption`_ in
             the Sheets API.

             Possible values are:

             ``ValueRenderOption.formatted``
                 (default) Values will be calculated and formatted according
                 to the cell's formatting. Formatting is based on the
                 spreadsheet's locale, not the requesting user's locale.

             ``ValueRenderOption.unformatted``
                 Values will be calculated, but not formatted in the reply.
                 For example, if A1 is 1.23 and A2 is =A1 and formatted as
                 currency, then A2 would return the number 1.23.

             ``ValueRenderOption.formula``
                 Values will not be calculated. The reply will include
                 the formulas. For example, if A1 is 1.23 and A2 is =A1 and
                 formatted as currency, then A2 would return "=A1".

             .. _ValueRenderOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueRenderOption

        :type value_render_option: :namedtuple:`~gspread.utils.ValueRenderOption`

        :param str date_time_render_option: (optional) How dates, times, and
             durations should be represented in the output.

             Possible values are:

             ``DateTimeOption.serial_number``
                 (default) Instructs date, time, datetime, and duration fields
                 to be output as doubles in "serial number" format,
                 as popularized by Lotus 1-2-3.

             ``DateTimeOption.formatted_string``
                 Instructs date, time, datetime, and duration fields to be output
                 as strings in their given number format
                 (which depends on the spreadsheet locale).

            .. note::

                This is ignored if ``value_render_option`` is ``ValueRenderOption.formatted``.

             The default ``date_time_render_option`` is ``DateTimeOption.serial_number``.

        :param bool maintain_size: (optional) Returns a matrix of values matching the size of the requested range.

            .. warning::

                This can only work if the requested range is a complete bounded A1 notation.
                Example: ``A1:D4``: OK, ``C3:F``: Not OK, we don't know the end size of the requested range.

                This does not work with ``named_range`` either.

            Examples::

                # Works
                >>> worksheet.get("A1:B2", maintain_size=True)
                [['A1', 'B1'], ['A2', '']]

                # Does NOT maintain the requested size
                >>> worksheet.get("A1:B", maintain_size=True)
                [['A1', 'B1'], ['A2'], [], ['A4', 'B4'], ['A5']]

        :type date_time_render_option: :namedtuple:`~gspread.utils.DateTimeOption`

         :rtype: :class:`gspread.worksheet.ValueRange`

         Examples::

             # Return all values from the sheet
             worksheet.get()

             # Return value of 'A1' cell
             worksheet.get('A1')

             # Return values of 'A1:B2' range
             worksheet.get('A1:B2')

             # Return values of 'my_range' named range
             worksheet.get('my_range')

         .. versionadded:: 3.3
        avalues_batch_getTarangesaparamsavalueRangesuReturns one or more ranges of values from the sheet.

        :param list ranges: List of cell ranges in the A1 notation or named
            ranges.

        :param str major_dimension: (optional) The major dimension that results
            should use. Either ``ROWS`` or ``COLUMNS``.

        :param value_render_option: (optional) Determines how values should
            be rendered in the output. See `ValueRenderOption`_ in
            the Sheets API.

            Possible values are:

            ``ValueRenderOption.formatted``
                (default) Values will be calculated and formatted according
                to the cell's formatting. Formatting is based on the
                spreadsheet's locale, not the requesting user's locale.

            ``ValueRenderOption.unformatted``
                Values will be calculated, but not formatted in the reply.
                For example, if A1 is 1.23 and A2 is =A1 and formatted as
                currency, then A2 would return the number 1.23.

            ``ValueRenderOption.formula``
                Values will not be calculated. The reply will include
                the formulas. For example, if A1 is 1.23 and A2 is =A1 and
                formatted as currency, then A2 would return "=A1".

            .. _ValueRenderOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueRenderOption

        :type value_render_option: :namedtuple:`~gspread.utils.ValueRenderOption`

        :param str date_time_render_option: (optional) How dates, times, and
            durations should be represented in the output.

            Possible values are:

            ``DateTimeOption.serial_number``
                (default) Instructs date, time, datetime, and duration fields
                to be output as doubles in "serial number" format,
                as popularized by Lotus 1-2-3.

            ``DateTimeOption.formatted_string``
                Instructs date, time, datetime, and duration fields to be output
                as strings in their given number format
                (which depends on the spreadsheet locale).

            .. note::

                This is ignored if ``value_render_option`` is ``ValueRenderOption.formatted``.

            The default ``date_time_render_option`` is ``DateTimeOption.serial_number``.
        :type date_time_render_option: :namedtuple:`~gspread.utils.DateTimeOption`

        .. versionadded:: 3.3

        Examples::

            # Read values from 'A1:B2' range and 'F12' cell
            worksheet.batch_get(['A1:B2', 'F12'])
        Tu6.0.0uMethod signature's arguments 'range_name' and 'values' will change their order. We recommend using named arguments for minimal impact. In addition, the argument 'values' will be mandatory of type: 'List[List]'. (ex) Worksheet.update(values = [[]], range_name=) ais_scalaravalue_input_optionarawakwargsaincludeValuesInResponseainclude_values_in_responsearesponseValueRenderOptionaresponse_value_render_optionaresponseDateTimeRenderOptionaresponse_date_time_render_optionuSets values in a cell range of the sheet.

        :param str range_name: The A1 notation of the values
            to update.
        :param list values: The data to be written.

        :param bool raw: The values will not be parsed by Sheets API and will
            be stored as-is. For example, formulas will be rendered as plain
            strings. Defaults to ``True``. This is a shortcut for
            the ``value_input_option`` parameter.

        :param str major_dimension: (optional) The major dimension of the
            values. Either ``ROWS`` or ``COLUMNS``.

        :param str value_input_option: (optional) How the input data should be
            interpreted. Possible values are:

            ``ValueInputOption.raw``
                The values the user has entered will not be parsed and will be
                stored as-is.

            ``ValueInputOption.user_entered``
                The values will be parsed as if the user typed them into the
                UI. Numbers will stay as numbers, but strings may be converted
                to numbers, dates, etc. following the same rules that are
                applied when entering text into a cell via
                the Google Sheets UI.

        :type value_input_option: :namedtuple:`~gspread.utils.ValueInputOption`

        :param response_value_render_option: (optional) Determines how values should
            be rendered in the output. See `ValueRenderOption`_ in
            the Sheets API.

            Possible values are:

            ``ValueRenderOption.formatted``
                (default) Values will be calculated and formatted according
                to the cell's formatting. Formatting is based on the
                spreadsheet's locale, not the requesting user's locale.

            ``ValueRenderOption.unformatted``
                Values will be calculated, but not formatted in the reply.
                For example, if A1 is 1.23 and A2 is =A1 and formatted as
                currency, then A2 would return the number 1.23.

            ``ValueRenderOption.formula``
                Values will not be calculated. The reply will include
                the formulas. For example, if A1 is 1.23 and A2 is =A1 and
                formatted as currency, then A2 would return "=A1".

            .. _ValueRenderOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueRenderOption

        :type response_value_render_option: :namedtuple:`~gspread.utils.ValueRenderOption`

        :param str response_date_time_render_option: (optional) How dates, times, and
            durations should be represented in the output.

            Possible values are:

            ``DateTimeOption.serial_number``
                (default) Instructs date, time, datetime, and duration fields
                to be output as doubles in "serial number" format,
                as popularized by Lotus 1-2-3.

            ``DateTimeOption.formatted_string``
                Instructs date, time, datetime, and duration fields to be output
                as strings in their given number format
                (which depends on the spreadsheet locale).

            .. note::

                This is ignored if ``value_render_option`` is ``ValueRenderOption.formatted``.

            The default ``date_time_render_option`` is ``DateTimeOption.serial_number``.
        :type date_time_render_option: :namedtuple:`~gspread.utils.DateTimeOption`

        Examples::

            # Sets 'Hello world' in 'A2' cell
            worksheet.update('A2', 'Hello world')

            # Updates cells A1, B1, C1 with values 42, 43, 44 respectively
            worksheet.update([42, 43, 44])

            # Updates A2 and A3 with values 42 and 43
            # Note that update range can be bigger than values array
            worksheet.update('A2:B4', [[42], [43]])

            # Add a formula
            worksheet.update('A5', '=SUM(A1:A4)', raw=False)

            # Update 'my_range' named range with values 42 and 43
            worksheet.update('my_range', [[42], [43]])

            # Note: named ranges are defined in the scope of
            # a spreadsheet, so even if `my_range` does not belong to
            # this sheet it is still updated

        .. versionadded:: 3.3
        avalues_batch_updateTabodyuSets values in one or more cell ranges of the sheet at once.

        :param list data: List of dictionaries in the form of
            `{'range': '...', 'values': [[.., ..], ...]}` where `range`
            is a target range to update in A1 notation or a named range,
            and `values` is a list of lists containing new values.

        :param str value_input_option: (optional) How the input data should be
            interpreted. Possible values are:

            * ``ValueInputOption.raw``

              The values the user has entered will not be parsed and will be
              stored as-is.

            * ``ValueInputOption.user_entered``

              The values will be parsed as if the user typed them into the
              UI. Numbers will stay as numbers, but strings may be converted
              to numbers, dates, etc. following the same rules that are
              applied when entering text into a cell via
              the Google Sheets UI.

        :type value_input_option: :namedtuple:`~gspread.utils.ValueInputOption`

        :param response_value_render_option: (optional) Determines how values should
            be rendered in the output. See `ValueRenderOption`_ in
            the Sheets API.

            Possible values are:

            ``ValueRenderOption.formatted``
                (default) Values will be calculated and formatted according
                to the cell's formatting. Formatting is based on the
                spreadsheet's locale, not the requesting user's locale.

            ``ValueRenderOption.unformatted``
                Values will be calculated, but not formatted in the reply.
                For example, if A1 is 1.23 and A2 is =A1 and formatted as
                currency, then A2 would return the number 1.23.

            ``ValueRenderOption.formula``
                Values will not be calculated. The reply will include
                the formulas. For example, if A1 is 1.23 and A2 is =A1 and
                formatted as currency, then A2 would return "=A1".

            .. _ValueRenderOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueRenderOption

        :type response_value_render_option: :namedtuple:`~gspread.utils.ValueRenderOption`

        :param str response_date_time_render_option: (optional) How dates, times, and
            durations should be represented in the output.

            Possible values are:

            ``DateTimeOption.serial_number``
                (default) Instructs date, time, datetime, and duration fields
                to be output as doubles in "serial number" format,
                as popularized by Lotus 1-2-3.

            ``DateTimeOption.formatted_string``
                Instructs date, time, datetime, and duration fields to be output
                as strings in their given number format
                (which depends on the spreadsheet locale).

            .. note::

                This is ignored if ``value_render_option`` is ``ValueRenderOption.formatted``.

            The default ``date_time_render_option`` is ``DateTimeOption.serial_number``.
        :type date_time_render_option: :namedtuple:`~gspread.utils.DateTimeOption`

        Examples::

            worksheet.batch_update([{
                'range': 'A1:B1',
                'values': [['42', '43']],
            }, {
                'range': 'my_range',
                'values': [['44', '45']],
            }])

            # Note: named ranges are defined in the scope of
            # a spreadsheet, so even if `my_range` does not belong to
            # this sheet it is still updated

        .. versionadded:: 3.3
        DarequestsLaformatuuserEnteredFormat(%s)w,arequestsaappendarepeatCellauserEnteredFormatafieldsabatch_updateuFormats cells in batch.

        :param list formats: List of ranges to format and the new format to apply
            to each range.

            The list is composed of dict objects with the following keys/values:

            * range : A1 range notation
            * format : a valid dict object with the format to apply
              for that range see `CellFormat`_ in the Sheets API for available fields.

        .. _CellFormat: https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/cells#cellformat

        Examples::

            # Format the range ``A1:C1`` with bold text
            # and format the range ``A2:C2`` a font size of 16

            formats = [
                {
                    "range": "A1:C1",
                    "format": {
                        "textFormat": {
                            "bold": True,
                        },
                    },
                },
                {
                    "range": "A2:C2",
                    "format": {
                        "textFormat": {
                            "fontSize": 16,
                        },
                    },
                },
            ]
            worksheet.batch_format(formats)

        .. versionadded:: 5.4
        arangesabatch_formatuFormat a list of ranges with the given format.

        :param str|list ranges: Target ranges in the A1 notation.
        :param dict format: Dictionary containing the fields to update.
            See `CellFormat`_ in the Sheets API for available fields.

        Examples::

            # Set 'A4' cell's text format to bold
            worksheet.format("A4", {"textFormat": {"bold": True}})

            # Set 'A1:D4' and 'A10:D10' cells's text format to bold
            worksheet.format(["A1:D4", "A10:D10"], {"textFormat": {"bold": True}})

            # Color the background of 'A2:B2' cell range in black,
            # change horizontal alignment, text color and font size
            worksheet.format("A2:B2", {
                "backgroundColor": {
                  "red": 0.0,
                  "green": 0.0,
                  "blue": 0.0
                },
                "horizontalAlignment": "CENTER",
                "textFormat": {
                  "foregroundColor": {
                    "red": 1.0,
                    "green": 1.0,
                    "blue": 1.0
                  },
                  "fontSize": 12,
                  "bold": True
                }
            })

        .. versionadded:: 3.3
        agrid_propertiesuEither 'rows' or 'cols' should be specified.aupdateSheetPropertiesuResizes the worksheet. Specify one of ``rows`` or ``cols``.

        :param int rows: (optional) New number of rows.
        :param int cols: (optional) New number columns.
        ugridProperties/%suWorksheet.resize.<locals>.<genexpr>Tu6.0.0uThis function signature will change, arguments will swap places:  sort(range, specs)Tw:aascaASCENDINGadesaDESCENDINGuEither 'asc' or 'des' should be specified as sort order.adimensionIndexasortOrderarequest_sort_specsasortRangeasortSpecsuSorts worksheet using given sort orders.

        :param list specs: The sort order per column. Each sort order
            represented by a tuple where the first element is a column index
            and the second element is the order itself: 'asc' or 'des'.
        :param str range: The range to sort in A1 notation. By default sorts
            the whole sheet excluding frozen rows.

        Example::

            # Sort sheet A -> Z by column 'B'
            wks.sort((2, 'asc'))

            # Sort range A2:G8 basing on column 'G' A -> Z
            # and column 'B' Z -> A
            wks.sort((7, 'asc'), (2, 'des'), range='A2:G8')

        Warning::

            This function signature will change, arguments will swap places:  sort(range, specs)

        .. versionadded:: 3.4
        uRenames the worksheet.

        :param str title: A new title.
        aconvert_hex_to_colors_dictTu6.0.0ucolor format will change to hex format "#RRGGBB".
                    To suppress this warning, first convert color to hex with "gspread.utils.convert_colors_to_hex_value(color)aredagreenablueutoo many values to unpack (expected 3)argbColoruChanges the worksheet's tab color.
        Use clear_tab_color() to remove the color.

        :param dict color: The red, green and blue values of the color, between 0 and 1.
        DargbColornapopTatabColorStyleuClears the worksheet's tab color.
        Use update_tab_color() to set the color.
        uUpdates the ``index`` property for the worksheet.

        See the `Sheets API documentation
        <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets#sheetproperties>`_
        for information on how updating the index property affects the order of worksheets
        in a spreadsheet.

        To reorder all worksheets in a spreadsheet, see `Spreadsheet.reorder_worksheets`.

        .. versionadded:: 3.4
        aautoResizeDimensionsadimensionsadimensionastartIndexaendIndexuUpdates the size of rows or columns in the  worksheet.

        Index start from 0

        :param start_index: The index (inclusive) to begin resizing
        :param end_index: The index (exclusive) to finish resizing
        :param dimension: Specifies whether to resize the row or column


        .. versionadded:: 5.3.3
        a_auto_resizeuUpdates the size of rows or columns in the  worksheet.

        Index start from 0

        :param start_column_index: The index (inclusive) to begin resizing
        :param end_column_index: The index (exclusive) to finish resizing


        .. versionadded:: 3.4
        .. versionchanged:: 5.3.3
        arowsuUpdates the size of rows or columns in the  worksheet.

        Index start from 0

        :param start_row_index: The index (inclusive) to begin resizing
        :param end_row_index: The index (exclusive) to finish resizing


        .. versionadded:: 5.3.3
        aresizeuAdds rows to worksheet.

        :param rows: Number of new rows to add.
        :type rows: int

        TacolsuAdds columns to worksheet.

        :param cols: Number of new columns to add.
        :type cols: int

        aappend_rowsTavalue_input_optionainsert_data_optionatable_rangeainclude_values_in_responseuAdds a row to the worksheet and populates it with values.

        Widens the worksheet if there are more values than columns.

        :param list values: List of values for the new row.
        :param value_input_option: (optional) Determines how the input data
            should be interpreted. See `ValueInputOption`_ in the Sheets API
            reference.
        :type value_input_option: :namedtuple:`~gspread.utils.ValueInputOption`
        :param str insert_data_option: (optional) Determines how the input data
            should be inserted. See `InsertDataOption`_ in the Sheets API
            reference.
        :param str table_range: (optional) The A1 notation of a range to search
            for a logical table of data. Values are appended after the last row
            of the table. Examples: ``A1`` or ``B2:D4``
        :param bool include_values_in_response: (optional) Determines if the
            update response should include the values of the cells that were
            appended. By default, responses do not include the updated values.

        .. _ValueInputOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueInputOption
        .. _InsertDataOption: https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/append#InsertDataOption

        ainsertDataOptionavalues_appenduAdds multiple rows to the worksheet and populates them with values.

        Widens the worksheet if there are more values than columns.

        :param list values: List of rows each row is List of values for
            the new row.
        :param str value_input_option: (optional) Determines how input data
            should be interpreted. Possible values are ``ValueInputOption.raw``
            or ``ValueInputOption.user_entered``.
            See `ValueInputOption`_ in the Sheets API.
        :type value_input_option: :namedtuple:`~gspread.utils.ValueInputOption`
        :param str insert_data_option: (optional) Determines how the input data
            should be inserted. See `InsertDataOption`_ in the Sheets API
            reference.
        :param str table_range: (optional) The A1 notation of a range to search
            for a logical table of data. Values are appended after the last row
            of the table. Examples: ``A1`` or ``B2:D4``
        :param bool include_values_in_response: (optional) Determines if the
            update response should include the values of the cells that were
            appended. By default, responses do not include the updated values.

        .. _ValueInputOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueInputOption
        .. _InsertDataOption: https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/append#InsertDataOption
        ainsert_rowsTavalue_input_optionainherit_from_beforeuAdds a row to the worksheet at the specified index and populates it
        with values.

        Widens the worksheet if there are more values than columns.

        :param list values: List of values for the new row.
        :param int index: (optional) Offset for the newly inserted row.
        :param str value_input_option: (optional) Determines how input data
            should be interpreted. Possible values are ``ValueInputOption.raw``
            or ``ValueInputOption.user_entered``.
            See `ValueInputOption`_ in the Sheets API.
        :type value_input_option: :namedtuple:`~gspread.utils.ValueInputOption`
        :param bool inherit_from_before: (optional) If True, the new row will
            inherit its properties from the previous row. Defaults to False,
            meaning that the new row acquires the properties of the row
            immediately after it.

            .. warning::

               `inherit_from_before` must be False when adding a row to the top
               of a spreadsheet (`index=1`), and must be True when adding to
               the bottom of the spreadsheet.

        .. _ValueInputOption: https://developers.google.com/sheets/api/reference/rest/v4/ValueInputOption
        Tucan't insert row in worksheet with colon ':' in its name. See issue: https://issuetracker.google.com/issues/36761154Tuinherit_from_before cannot be used when inserting row(s) at the top of a spreadsheetainsertDimensionainheritFromBeforeuA%suAdds multiple rows to the worksheet at the specified index and
        populates them with values.

        :param list values: List of row lists. a list of lists, with the lists
            each containing one row's values. Widens the worksheet if there are
            more values than columns.
        :param int row: Start row to update (one-based). Defaults to 1 (one).
        :param str value_input_option: (optional) Determines how input data
            should be interpreted. Possible values are ``ValueInputOption.raw``
            or ``ValueInputOption.user_entered``.
            See `ValueInputOption`_ in the Sheets API.
        :type value_input_option: :namedtuple:`~gspread.utils.ValueInputOption`
        :param bool inherit_from_before: (optional) If true, new rows will
            inherit their properties from the previous row. Defaults to False,
            meaning that new rows acquire the properties of the row immediately
            after them.

            .. warning::

               `inherit_from_before` must be False when adding rows to the top
               of a spreadsheet (`row=1`), and must be True when adding to
               the bottom of the spreadsheet.
        Tuinherit_from_before cannot be used when inserting column(s) at the left edge of a spreadsheetuAdds multiple new cols to the worksheet at specified index and
        populates them with values.

        :param list values: List of col lists. a list of lists, with the lists
            each containing one col's values. Increases the number of rows
            if there are more values than columns.
        :param int col: Start col to update (one-based). Defaults to 1 (one).
        :param str value_input_option: (optional) Determines how input data
            should be interpreted. Possible values are ``ValueInputOption.raw``
            or ``ValueInputOption.user_entered``.
            See `ValueInputOption`_ in the Sheets API.
        :type value_input_option: :namedtuple:`~gspread.utils.ValueInputOption`
        :param bool inherit_from_before: (optional) If True, new columns will
            inherit their properties from the previous column. Defaults to
            False, meaning that new columns acquire the properties of the
            column immediately after them.

            .. warning::

               `inherit_from_before` must be False if adding at the left edge
               of a spreadsheet (`col=1`), and must be True if adding at the
               right edge of the spreadsheet.
        uWorksheet.delete_row() is deprecated, Please use `Worksheet.delete_rows()` instead.adelete_rowsu.. deprecated:: 5.0

        Deletes the row from the worksheet at the specified index.

        :param int index: Index of a row for deletion.
        aaddProtectedRangeaprotectedRangeadescriptionawarningOnlyarequestingUserCanEditaeditorsausersagroupsuAdd protected range to the sheet. Only the editors can edit
        the protected range.

        Google API will automatically add the owner of this SpreadSheet.
        The list ``editor_users_emails`` must at least contain the e-mail
        address used to open that SpreadSheet.

        ``editor_users_emails`` must only contain e-mail addresses
        who already have a write access to the spreadsheet.

        :param str name: A string with range value in A1 notation,
            e.g. 'A1:A5'.

        Alternatively, you may specify numeric boundaries. All values
        index from 1 (one):

        :param int first_row: First row number
        :param int first_col: First column number
        :param int last_row: Last row number
        :param int last_col: Last column number

        For both A1 and numeric notation:

        :param list editor_users_emails: The email addresses of
            users with edit access to the protected range.
            This must include your e-mail address at least.
        :param list editor_groups_emails: (optional) The email addresses of
            groups with edit access to the protected range.
        :param str description: (optional) Description for the protected
            ranges.
        :param boolean warning_only: (optional) When true this protected range
            will show a warning when editing. Defaults to ``False``.
        :param boolean requesting_user_can_edit: (optional) True if the user
            who requested this protected range can edit the protected cells.
            Defaults to ``False``.
        adeleteProtectedRangeaprotectedRangeIduDelete protected range identified by the ID ``id``.

        To retrieve the ID of a protected range use the following method
        to list them all: :func:`~gspread.Spreadsheet.list_protected_ranges`
        adeleteDimensionastart_indexuDeletes multi rows from the worksheet at the specified index.

        :param dimension: A dimension to delete. ``Dimension.rows`` or ``Dimension.cols``.
        :type dimension: :namedtuple:`~gspread.utils.Dimension`
        :param int start_index: Index of a first row for deletion.
        :param int end_index: Index of a last row for deletion. When
            ``end_index`` is not specified this method only deletes a single
            row at ``start_index``.
        adelete_dimensionuDeletes multiple rows from the worksheet at the specified index.

        :param int start_index: Index of a first row for deletion.
        :param int end_index: Index of a last row for deletion.
            When end_index is not specified this method only deletes a single
            row at ``start_index``.

        Example::

            # Delete rows 5 to 10 (inclusive)
            worksheet.delete_rows(5, 10)

            # Delete only the second row
            worksheet.delete_rows(2)

        uDeletes multiple columns from the worksheet at the specified index.

        :param int start_index: Index of a first column for deletion.
        :param int end_index: Index of a last column for deletion.
            When end_index is not specified this method only deletes a single
            column at ``start_index``.
        avalues_clearuClears all cells in the worksheet.avalues_batch_clearuClears multiple ranges of cells with 1 API call.

        `Batch Clear`_

        .. _Batch Clear: https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/batchClear

        Examples::

            worksheet.batch_clear(['A1:B1','my_range'])

            # Note: named ranges are defined in the scope of
            # a spreadsheet, so even if `my_range` does not belong to
            # this sheet it is still updated

        .. versionadded:: 3.8.0

        a_list_cellsamatchuWorksheet._finder.<locals>.matchacase_sensitiveaqueryacasefoldasearchuEither 'in_row' or 'in_column' should be specified.ain_columnain_rowuReturns a list of ``Cell`` instances scoped by optional
        ``in_row``` or ``in_column`` values (both one-based).
        a_finderuFinds the first cell matching the query.

        :param query: A literal string to match or compiled regular expression.
        :type query: str, :py:class:`re.RegexObject`
        :param int in_row: (optional) One-based row number to scope the search.
        :param int in_column: (optional) One-based column number to scope
            the search.
        :param bool case_sensitive: (optional) comparison is case sensitive if
            set to True, case insensitive otherwise. Default is True.
            Does not apply to regular expressions.
        :returns: the first matching cell or None otherwise
        :rtype: :class:`gspread.cell.Cell`
        uFinds all cells matching the query.

        Returns a list of :class:`gspread.cell.Cell`.

        :param query: A literal string to match or compiled regular expression.
        :type query: str, :py:class:`re.RegexObject`
        :param int in_row: (optional) One-based row number to scope the search.
        :param int in_column: (optional) One-based column number to scope
            the search.
        :param bool case_sensitive: (optional) comparison is case sensitive if
            set to True, case insensitive otherwise. Default is True.
            Does not apply to regular expressions.
        :returns: the list of all matching cells or empty list otherwise
        :rtype: list
        afrozenRowCountafrozenColumnCountuFreeze rows and/or columns on the worksheet.

        :param rows: Number of rows to freeze.
        :param cols: Number of columns to freeze.
        uWorksheet.freeze.<locals>.<genexpr>asetBasicFilterafilteruAdd a basic filter to the worksheet. If a range or boundaries
        are passed, the filter will be limited to the given range.

        :param str name: A string with range value in A1 notation,
            e.g. ``A1:A5``.

        Alternatively, you may specify numeric boundaries. All values
        index from 1 (one):

        :param int first_row: First row number
        :param int first_col: First column number
        :param int last_row: Last row number
        :param int last_col: Last column number

        .. versionadded:: 3.4
        aclearBasicFilteruRemove the basic filter from a worksheet.

        .. versionadded:: 3.4
        uWorksheet.export() is deprecated, this feature is not supported in Sheets API v4aduplicate_sheetuDuplicate the sheet.

        :param int insert_sheet_index: (optional) The zero-based index
            where the new sheet should be inserted. The index of all sheets
            after this are incremented.
        :param int new_sheet_id: (optional) The ID of the new sheet.
            If not set, an ID is chosen. If set, the ID must not conflict with
            any existing sheet ID. If set, it must be non-negative.
        :param str new_sheet_name: (optional) The name of the new sheet.
            If empty, a new name is chosen for you.

        :returns: a newly created :class:`gspread.worksheet.Worksheet`.

        .. versionadded:: 3.1
        a_spreadsheets_sheets_copy_touCopies this sheet to another spreadsheet.

        :param str spreadsheet_id: The ID of the spreadsheet to copy
            the sheet to.
        :returns: a dict with the response containing information about
            the newly created sheet.
        :rtype: dict
        amergeCellsamergeTypeuMerge cells.

        :param str name: Range name in A1 notation, e.g. 'A1:A5'.
        :param merge_type: (optional) one of ``MergeType.merge_all``,
            ``MergeType.merge_columns``, or ``MergeType.merge_rows``. Defaults to ``MergeType.merge_all``.
            See `MergeType`_ in the Sheets API reference.
        :type merge_type: :namedtuple:`~gspread.utils.MergeType`

        Alternatively, you may specify numeric boundaries. All values
        index from 1 (one):

        :param int first_row: First row number
        :param int first_col: First column number
        :param int last_row: Last row number
        :param int last_col: Last column number

        :returns: the response body from the request
        :rtype: dict

        .. _MergeType: https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#MergeType

        aunmergeCellsuUnmerge cells.

        Unmerge previously merged cells.

        :param str name: Range name in A1 notation, e.g. 'A1:A5'.

        Alternatively, you may specify numeric boundaries. All values
        index from 1 (one):

        :param int first_row: First row number
        :param int first_col: First column number
        :param int last_row: Last row number
        :param int last_col: Last column number

        :returns: the response body from the request
        :rtype: dict
        aSPREADSHEET_URLusheets/data/rowData/values/notearequestaraise_for_statusajsonarowDataanoteTEIndexErrorEKeyErroruGet the content of the note located at `cell`, or the empty string if the
        cell does not have a note.

        :param str cell: A string with cell coordinates in A1 notation,
            e.g. 'D7'.
        aitemsuOnly string allowed as content for a note: '{} - {}'aupdateCellsuupdate multiple notes. The notes are attached to a certain cell.

        :param notes dict: A dict of notes with their cells coordinates and respective content

            dict format is:

            * key: the cell coordinates as A1 range format
            * value: the string content of the cell

            Example::

                {
                    "D7": "Please read my notes",
                    "GH42": "this one is too far",
                }

        .. versionadded:: 5.9
        aupdate_notesuUpdate the content of the note located at `cell`.

        :param str cell: A string with cell coordinates in A1 notation,
            e.g. 'D7'.
        :param str note: The text note to insert.

        .. versionadded:: 3.7
        uInsert a note. The note is attached to a certain cell.

        :param str cell: A string with cell coordinates in A1 notation,
            e.g. 'D7'.
        :param str content: The text note to insert.

        Alternatively, you may specify numeric boundaries. All values
        index from 1 (one):

        :param int first_row: First row number
        :param int first_col: First column number
        :param int last_row: Last row number
        :param int last_col: Last column number

        .. versionadded:: 3.7
        uinsert multiple notes. The notes are attached to a certain cell.

        :param notes dict: A dict of notes with their cells coordinates and respective content

            dict format is:

            * key: the cell coordinates as A1 range format
            * value: the string content of the cell

            Example::

                {
                    "D7": "Please read my notes",
                    "GH42": "this one is too far",
                }

        .. versionadded:: 5.9
        uClear all notes located at the at the coordinates
        pointed to by ``ranges``.

        :param ranges list: List of A1 coordinates where to clear the notes.
            e.g. ``["A1", "GH42", "D7"]``
        uClear a note. The note is attached to a certain cell.

        :param str cell: A string with cell coordinates in A1 notation,
            e.g. 'D7'.

        Alternatively, you may specify numeric boundaries. All values
        index from 1 (one):

        :param int first_row: First row number
        :param int first_col: First column number
        :param int last_row: Last row number
        :param int last_col: Last column number

        .. versionadded:: 3.7
        aaddNamedRangeanamedRangeu
        :param str name: A string with range value in A1 notation,
            e.g. 'A1:A5'.

        Alternatively, you may specify numeric boundaries. All values
        index from 1 (one):

        :param int first_row: First row number
        :param int first_col: First column number
        :param int last_row: Last row number
        :param int last_col: Last column number

        :param range_name: The name to assign to the range of cells

        :returns: the response body from the request
        :rtype: dict
        adeleteNamedRangeanamedRangeIdu
        :param str named_range_id: The ID of the named range to delete.
            Can be obtained with Spreadsheet.list_named_ranges()

        :returns: the response body from the request
        :rtype: dict
        aaddDimensionGroupu
        update this sheet by grouping 'dimension'

        :param int start: The start (inclusive) of the group
        :param int end: The end (exclusive) of the grou
        :param str dimension: The dimension to group, can be one of
            ``ROWS`` or ``COLUMNS``.
        a_add_dimension_groupu
        Group columns in order to hide them in the UI.

        .. note::

            API behavior with nested groups and non-matching ``[start:end)``
            range can be found here: `Add Dimension Group Request`_

            .. _Add Dimension Group Request: https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AddDimensionGroupRequest

        :param int start: The start (inclusive) of the group
        :param int end: The end (exclusive) of the group
        u
        Group rows in order to hide them in the UI.

        .. note::

            API behavior with nested groups and non-matching ``[start:end)``
            range can be found here `Add Dimension Group Request`_

        :param int start: The start (inclusive) of the group
        :param int end: The end (exclusive) of the group
        adeleteDimensionGroupudelete a dimension group in this sheeta_delete_dimension_groupu
        Remove the grouping of a set of columns.

        .. note::

            API behavior with nested groups and non-matching ``[start:end)``
            range can be found here `Delete Dimension Group Request`_

            .. _Delete Dimension Group Request: https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteDimensionGroupRequest

        :param int start: The start (inclusive) of the group
        :param int end: The end (exclusive) of the group
        u
        Remove the grouping of a set of rows.

        .. note::
            API behavior with nested groups and non-matching ``[start:end)``
            range can be found here `Delete Dimension Group Request`_

        :param int start: The start (inclusive) of the group
        :param int end: The end (exclusive) of the group
        a_get_sheet_propertyacolumnGroupsu
        List all the grouped columns in this worksheet.

        :returns: list of the grouped columns
        :rtype: list
        arowGroupsu
        List all the grouped rows in this worksheet.

        :returns: list of the grouped rows
        :rtype: list
        aupdateDimensionPropertiesDahiddenByUsertahiddenByUseru
        Update this sheet by hiding the given 'dimension'

        Index starts from 0.

        :param int start: The (inclusive) start of the dimension to hide
        :param int end: The (exclusive) end of the dimension to hide
        :param str dimension: The dimension to hide, can be one of
            ``ROWS`` or ``COLUMNS``.
        :type diension: :namedtuple:`~gspread.utils.Dimension`
        a_hide_dimensionu
        Explicitly hide the given column index range.

        Index starts from 0.

        :param int start: The (inclusive) starting column to hide
        :param int end: The (exclusive) end column to hide
        u
        Explicitly hide the given row index range.

        Index starts from 0.

        :param int start: The (inclusive) starting row to hide
        :param int end: The (exclusive) end row to hide
        DahiddenByUserFu
        Update this sheet by unhiding the given 'dimension'

        Index starts from 0.

        :param int start: The (inclusive) start of the dimension to unhide
        :param int end: The (inclusive) end of the dimension to unhide
        :param str dimension: The dimension to hide, can be one of
            ``ROWS`` or ``COLUMNS``.
        :type dimension: :namedtuple:`~gspread.utils.Dimension`
        a_unhide_dimensionu
        Explicitly unhide the given column index range.

        Index start from 0.

        :param int start: The (inclusive) starting column to hide
        :param int end: The (exclusive) end column to hide
        u
        Explicitly unhide the given row index range.

        Index start from 0.

        :param int start: The (inclusive) starting row to hide
        :param int end: The (exclusive) end row to hide
        ahiddenuSend the appropriate request to hide/show the current worksheeta_set_hidden_flagTtuHides the current worksheet from the UI.TFuShow the current worksheet in the UI.ahideGridlinesugridProperties.hideGridlinesuHide/show gridlines on the current worksheeta_set_gridlines_hidden_flaguHide gridlines on the current worksheetuShow gridlines on the current worksheetacopyPasteasourceadestinationapasteTypeapasteOrientationuCopies a range of data from source to dest

        .. note::

           ``paste_type`` values are explained here: `Paste Types`_

           .. _Paste Types: https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#pastetype

        :param str source: The A1 notation of the source range to copy
        :param str dest: The A1 notation of the destination where to paste the data
            Can be the A1 notation of the top left corner where the range must be paste
            ex: G16, or a complete range notation ex: G16:I20.
            The dimensions of the destination range is not checked and has no effect,
            if the destination range does not match the source range dimension, the entire
            source range is copies anyway.
        :param paste_type: the paste type to apply. Many paste type are available from
            the Sheet API, see above note for detailed values for all values and their effects.
            Defaults to ``PasteType.normal``
        :type paste_type: :namedtuple:`~gspread.utils.PasteType`
        :param paste_orientation: The paste orient to apply.
            Possible values are: ``normal`` to keep the same orientation, ``transpose`` where all rows become columns and vice versa.
        :type paste_orientation: :namedtuple:`~gspread.utils.PasteOrientation`
        acutPastearowIndexacolumnIndexuMoves a range of data form source to dest

        .. note::

           ``paste_type`` values are explained here: `Paste Types`_

           .. _Paste Types: https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#pastetype

        :param str source: The A1 notation of the source range to move
        :param str dest: The A1 notation of the destination where to paste the data
            **it must be a single cell** in the A1 notation. ex: G16
        :param paste_type: the paste type to apply. Many paste type are available from
            the Sheet API, see above note for detailed values for all values and their effects.
            Defaults to ``PasteType.normal``
        :type paste_type: :namedtuple:`~gspread.utils.PasteType`
        u
gspread.worksheet
~~~~~~~~~~~~~~~~~

This module contains common worksheets' models.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__aUnionTaCellaexceptionsTaGSpreadExceptionaurlsTaSPREADSHEET_URLaWORKSHEET_DRIVE_URLautilsTaREQUIRED_KWARGSaDimensionaMergeTypeaPasteOrientationaPasteTypeaValueInputOptionaValueRenderOptionaa1_range_to_grid_rangeaa1_to_rowcolaabsolute_range_nameaaccepted_kwargsacast_to_a1_notationacell_list_to_rectacombined_merge_valuesaconvert_colors_to_hex_valueaconvert_hex_to_colors_dictadeprecation_warningafill_gapsafilter_dict_valuesafinditemaget_a1_from_absolute_rangeais_full_a1_notationais_scalaranumericise_allarowcol_to_a1aREQUIRED_KWARGSaMergeTypeaPasteOrientationaPasteTypeaValueRenderOptionaaccepted_kwargsacast_to_a1_notationTOlista__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ugspread.worksheeta__module__uThe class holds the returned values.

    This class inherit the :const:`list` object type.
    It behaves exactly like a list.

    The values are stored in a matrix.

    The property :meth:`gspread.worksheet.ValueRange.major_dimension`
    holds the major dimension of the first list level.

    The inner lists will contain the actual values.

    Examples::

        >>> worksheet.get("A1:B2")
        [
            [
                "A1 value",
                "B1 values",
            ],
            [
                "A2 value",
                "B2 value",
            ]
        ]

        >>> worksheet.get("A1:B2").major_dimension
        ROW

    .. note::

       This class should never be instantiated manually.
       It will be instantiated using the response from the sheet API.
    a__qualname__aclassmethoduValueRange.from_jsonapropertyuValueRange.rangeuValueRange.major_dimensionTnuValueRange.firsta__orig_bases__uThe class that represents a single sheet in a spreadsheet
    (aka "worksheet").
    aWorksheeta__init__uWorksheet.__init__a__repr__uWorksheet.__repr__uWorksheet.iduWorksheet.titleaurluWorksheet.urluWorksheet.indexaisSheetHiddenuWorksheet.isSheetHiddenaupdateduWorksheet.updateduWorksheet.row_countuWorksheet.col_countacolumn_countuWorksheet.column_countafrozen_row_countuWorksheet.frozen_row_countafrozen_col_countuWorksheet.frozen_col_countais_gridlines_hiddenuWorksheet.is_gridlines_hiddenatab_coloruWorksheet.tab_colorareturnTOstrnaget_tab_coloruWorksheet.get_tab_coloruWorksheet._get_sheet_propertyaformattedaacelluWorksheet.acelluWorksheet.cellTuuWorksheet.rangeTnFnnFTamajor_dimensionacombine_merged_cellsavalue_render_optionadate_time_render_optionamaintain_sizeTnFuWorksheet.get_valuesTnnnTamajor_dimensionavalue_render_optionadate_time_render_optionaget_all_valuesuWorksheet.get_all_valuesTFluFLnnTaempty2zeroaheadadefault_blankaallow_underscores_in_numeric_literalsanumericise_ignoreavalue_render_optionaexpected_headersaget_all_recordsuWorksheet.get_all_recordsuWorksheet.get_recordsaget_all_cellsuWorksheet.get_all_cellsarow_valuesuWorksheet.row_valuesacol_valuesuWorksheet.col_valuesaupdate_acelluWorksheet.update_acelluWorksheet.update_cellaupdate_cellsuWorksheet.update_cellsTnnnFTamajor_dimensionavalue_render_optionadate_time_render_optionamaintain_sizeuWorksheet.getabatch_getuWorksheet.batch_getTarange_nameavaluesarawamajor_dimensionavalue_input_optionainclude_values_in_responsearesponse_value_render_optionaresponse_date_time_render_optionaupdateuWorksheet.updateTtnnnnTarawavalue_input_optionainclude_values_in_responsearesponse_value_render_optionaresponse_date_time_render_optionuWorksheet.batch_updateuWorksheet.batch_formatuWorksheet.formatTnnuWorksheet.resizeasortuWorksheet.sortaupdate_titleuWorksheet.update_titleacolorTOdictOstraupdate_tab_coloruWorksheet.update_tab_coloraclear_tab_coloruWorksheet.clear_tab_coloraupdate_indexuWorksheet.update_indexuWorksheet._auto_resizeacolumns_auto_resizeuWorksheet.columns_auto_resizearows_auto_resizeuWorksheet.rows_auto_resizeaadd_rowsuWorksheet.add_rowsaadd_colsuWorksheet.add_colsaappend_rowuWorksheet.append_rowuWorksheet.append_rowsainsert_rowuWorksheet.insert_rowuWorksheet.insert_rowsainsert_colsuWorksheet.insert_colsadelete_rowuWorksheet.delete_rowaadd_protected_rangeuWorksheet.add_protected_rangeadelete_protected_rangeuWorksheet.delete_protected_rangeuWorksheet.delete_dimensionuWorksheet.delete_rowsadelete_columnsuWorksheet.delete_columnsaclearuWorksheet.clearabatch_clearuWorksheet.batch_clearuWorksheet._finderuWorksheet._list_cellsTnntafinduWorksheet.findafindalluWorksheet.findallafreezeuWorksheet.freezeaset_basic_filteruWorksheet.set_basic_filteraclear_basic_filteruWorksheet.clear_basic_filteraexportuWorksheet.exportaduplicateuWorksheet.duplicateacopy_touWorksheet.copy_toamerge_allamerge_cellsuWorksheet.merge_cellsaunmerge_cellsuWorksheet.unmerge_cellsaget_noteuWorksheet.get_noteuWorksheet.update_notesaupdate_noteuWorksheet.update_noteainsert_noteuWorksheet.insert_noteainsert_notesuWorksheet.insert_notesaclear_notesuWorksheet.clear_notesaclear_noteuWorksheet.clear_noteadefine_named_rangeuWorksheet.define_named_rangeadelete_named_rangeuWorksheet.delete_named_rangeuWorksheet._add_dimension_groupaadd_dimension_group_columnsuWorksheet.add_dimension_group_columnsaadd_dimension_group_rowsuWorksheet.add_dimension_group_rowsuWorksheet._delete_dimension_groupadelete_dimension_group_columnsuWorksheet.delete_dimension_group_columnsadelete_dimension_group_rowsuWorksheet.delete_dimension_group_rowsalist_dimension_group_columnsuWorksheet.list_dimension_group_columnsalist_dimension_group_rowsuWorksheet.list_dimension_group_rowsuWorksheet._hide_dimensionahide_columnsuWorksheet.hide_columnsahide_rowsuWorksheet.hide_rowsuWorksheet._unhide_dimensionaunhide_columnsuWorksheet.unhide_columnsaunhide_rowsuWorksheet.unhide_rowsuWorksheet._set_hidden_flagahideuWorksheet.hideashowuWorksheet.showuWorksheet._set_gridlines_hidden_flagahide_gridlinesuWorksheet.hide_gridlinesashow_gridlinesuWorksheet.show_gridlinesanormalacopy_rangeuWorksheet.copy_rangeacut_rangeuWorksheet.cut_rangeTugspread\worksheet.pyTa.0wcTa.0aheaderakeysTa.0wpTa.0ass_namedRangearange_nameTwxarange_nameTarange_nameTwxaselfTaselfu<module gspread.worksheet>Ta__class__TaselfaspreadsheetapropertiesTaselfastartaendadimensionabodyTaselfastart_indexaend_indexadimensionabodyT
aselfafuncaqueryacase_sensitiveain_rowain_columnadataavaluesacellsamatchTaselfapropertyadefault_valueametaasheetTaselfavaluesain_rowain_columnTaselfahiddenabodyaresTaselfalabelavalue_render_optionTaselfacolsTaselfastartaendTaselfanameaeditor_users_emailsaeditor_groups_emailsadescriptionawarning_onlyarequesting_user_can_editagrid_rangeabodyTaselfarowsTaselfavaluesavalue_input_optionainsert_data_optionatable_rangeainclude_values_in_responseTaselfavaluesavalue_input_optionainsert_data_optionatable_rangeainclude_values_in_responsearange_labelaparamsabodyaresanum_new_rowsTaselfarangesabodyaresponseTaselfaformatsabodyaformatarange_nameacell_formatagrid_rangeafieldsTaselfarangesakwargsaparamsaresponseTaselfadataakwargsabodyaresponseTaselfarowacolavalue_render_optionadataavalueTaselfabodyTaselfacellTaselfarangesanotesTaselfabodyaresponseTaselfacolavalue_render_optionastart_labelarange_labelarange_nameadataTaselfastart_column_indexaend_column_indexTaselfasourceadestapaste_typeapaste_orientationabodyTaselfaspreadsheet_idTaselfasourceadestapaste_typeagrid_destabodyTaselfanamearange_nameabodyTaselfastart_indexaend_indexTaselfadimensionastart_indexaend_indexabodyaresanum_deletedTaselfanamed_range_idabodyTaselfaidabodyTaselfaindexawarningsTaselfainsert_sheet_indexanew_sheet_idanew_sheet_nameTaselfaformatawarningsTaselfaqueryain_rowain_columnacase_sensitiveTaselfadefaultTaselfarangesaformataformatsTaselfarowsacolsagrid_propertiesafieldsabodyaresTaclsajsonavaluesanew_objT
aselfarange_nameakwargsaparamsaresponseavaluesaa1_rangeagrid_rangearowsacolsTaselfakwargsTaselfacellaabsolute_cellaurlaparamsaresponsearesponse_jsonanoteTaselfaempty2zeroaheadause_indexafirst_indexalast_indexadefault_blankaallow_underscores_in_numeric_literalsanumericise_ignoreavalue_render_optionaexpected_headersalast_index_setavaluesakeys_rowakeysavalues_widthakeys_widthavalues_wider_than_keys_byaheader_row_is_uniqueaexpected_headers_are_uniqueaformatted_recordsTaselfatab_colorTaselfarange_nameacombine_merged_cellsakwargsavalsaspreadsheet_metaaworksheet_metaanamed_rangesass_named_rangeagrid_rangeaa1T
aselfavaluesacolavalue_input_optionainherit_from_beforeabodyarange_labelaparamsaresanum_new_colsTaselfacellacontentTaselfanotesTaselfavaluesaindexavalue_input_optionainherit_from_beforeT
aselfavaluesarowavalue_input_optionainherit_from_beforeabodyarange_labelaparamsaresanum_new_rowsTwxacase_sensitiveaqueryTacase_sensitiveaqueryTwxaqueryTaqueryTaselfanameamerge_typeagrid_rangeabodyTaselfanamearange_labeladataagrid_rangeavaluesarow_offsetacolumn_offsetalast_rowalast_columnarect_valuesTaselfarowakwargsadataTaselfastart_row_indexaend_row_indexTaselfanameagrid_rangeabodyTaselfaspecsakwargsarange_nameastart_a1aend_a1astart_rowastart_colaend_rowaend_colarequest_rangearequest_sort_specsacolaorderarequest_orderarequest_sort_specabodyaresponseTaselfarange_nameavaluesakwargsaparamsaresponseTaselfalabelavalueTaselfarowacolavaluearange_nameadataTaselfacell_listavalue_input_optionavalues_rectastartaendarange_nameadataTaselfaindexabodyaresTaselfanotesabodyarangeacontentareqTaselfacoloraredagreenablueabodyaresponseasheet_colorTaselfatitleabodyaresponseTaselfawarnings.gspread_formatting.batch=aSpreadsheetBatchUpdateraspreadsheetarequestsuBatchUpdater has un-executed requests pending, cannot be __enter__edaexecuteabatch_update:nnnawrapswfu_wrap_for_batch_updater.<locals>.fuWorksheet %r belongs to spreadsheet %r, not batch updater's spreadsheet %raappendafunca__doc__a__file__a__spec__aoriginahas_locationa__cached__ugspread_formatting.functionslagspread_formattingugspread_formatting.dataframeTabatch_updateraSpreadsheetBatchUpdatera__all__abatch_updaterTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugspread_formatting.batcha__module__a__qualname__a__init__uSpreadsheetBatchUpdater.__init__a__enter__uSpreadsheetBatchUpdater.__enter__a__exit__uSpreadsheetBatchUpdater.__exit__uSpreadsheetBatchUpdater.executea__orig_bases__a_wrap_for_batch_updaterabatch_update_requestsafnameaformat_with_dataframeadataframea_format_with_dataframeugspread_formatting\batch.pyu<module gspread_formatting.batch>Ta__class__TaselfTaselfaexc_typeaexc_valaexc_tbTaselfaspreadsheetTafuncwfTaspreadsheetTaselfarespsTaselfaworksheetaargsakwargsafuncTafuncu.gspread_formatting.batch_update_requests.Dutoo many values to unpack (expected 2)aupdateDimensionPropertiesarangea_range_to_dimensionrange_objectaworksheetaidapropertiesapixelSizeafieldsuUpdate a row or range of rows in the given ``Worksheet``
    to have the specified height in pixels.

    :param worksheet: The ``Worksheet`` object.
    :param ranges: An iterable whose elements are pairs of:
        a string with row range value in A1 notation, e.g. '1' or '1:50',
        and a integer specifying height in pixels.
    aset_row_heightsuUpdate a row or range of rows in the given ``Worksheet``
    to have the specified height in pixels.

    :param worksheet: The ``Worksheet`` object.
    :param label: string representing a single row or range of rows, e.g. ``1`` or ``3:400``.
    :param height: An integer greater than or equal to 0.

    uUpdate a column or range of columns in the given ``Worksheet``
    to have the specified width in pixels.

    :param worksheet: The ``Worksheet`` object.
    :param ranges: An iterable whose elements are pairs of:
                   a string with column range value in A1 notation, e.g. 'A:C',
                   and a integer specifying width in pixels.

    aset_column_widthsuUpdate a column or range of columns in the given ``Worksheet``
    to have the specified width in pixels.

    :param worksheet: The ``Worksheet`` object.
    :param label: string representing a single column or range of columns, e.g. ``A`` or ``B:D``.
    :param height: An integer greater than or equal to 0.

    a_build_repeat_cell_requestuUpdate a list of Cell object ranges of :class:`Cell` objects
    in the given ``Worksheet`` to have the accompanying ``CellFormat``.

    :param worksheet: The ``Worksheet`` object.
    :param ranges: An iterable whose elements are pairs of:
        a string with range value in A1 notation, e.g. 'A1:A5',
        and a ``CellFormat`` object).

    aformat_cell_rangesuUpdate a range of :class:`Cell` objects in the given Worksheet
    to have the specified ``CellFormat``.

    :param worksheet: The ``Worksheet`` object.
    :param name: A string with range value in A1 notation, e.g. 'A1:A5'.
    :param cell_format: A ``CellFormat`` object.

    adataValidationuUpdate a list of Cell object ranges of :class:`Cell` objects
    in the given ``Worksheet`` to have the accompanying ``DataValidationRule``.

    :param worksheet: The ``Worksheet`` object.
    :param ranges: An iterable whose elements are pairs of:
                   a string with range value in A1 notation, e.g. 'A1:A5',
                   and a ``DataValidationRule`` object or None to clear the data
                   validation rule).

    aset_data_validation_for_cell_rangesuUpdate a Cell range in the given ``Worksheet``
    to have the accompanying ``DataValidationRule`` (or no rule).

    :param worksheet: The ``Worksheet`` object.
    :param range: A string with range value in A1 notation, e.g. 'A1:A5'.
    :param rule: A DataValidationRule object, or None to remove data validation rule for cells..

    aupdateSheetPropertiesasheetIdarightToLeftuMust specify at least one of rows and colsafrozenRowCountagrid_propertiesafrozenColumnCountw,akeysagridPropertiesugridProperties.%su<genexpr>uset_frozen.<locals>.<genexpr>u
This module provides functions that generate request objects compatible with the
"batchUpdate" API call in Google Sheets. Both the ``.functions`` and
``.batch`` modules make use of these request functions, wrapping them
in functions that make the API call or calls using the generated request objects.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__autilTa_build_repeat_cell_requesta_range_to_dimensionrange_objectllawrapsT
aformat_cell_rangesaformat_cell_rangeaset_frozenaset_right_to_leftaset_data_validation_for_cell_rangeaset_data_validation_for_cell_rangesaset_row_heightaset_row_heightsaset_column_widthaset_column_widthsa__all__aset_row_heightaset_column_widthaformat_cell_rangeaset_data_validation_for_cell_rangeaset_right_to_leftTnnaset_frozenugspread_formatting\batch_update_requests.pyTa.0wpu<module gspread_formatting.batch_update_requests>Taworksheetanameacell_formatTaworksheetarangesTaworksheetalabelawidthTaworksheetarangearuleTaworksheetarowsacolsagrid_propertiesafieldsTaworksheetaright_to_leftTaworksheetalabelaheightu.gspread_formatting.conditionals
aspreadsheetafetch_sheet_metadataasheetsapropertiesasheetIdaworksheetaidagetaconditionalFormatsaConditionalFormatRuleafrom_propsaConditionalFormatRulesadeleteConditionalFormatRuleaindexaaddConditionalFormatRulearuleato_propslaIterablearulesa_original_rulesa_enforce_type:nnnainsertutoo many values to unpack (expected 2)a_make_delete_rule_requestaselfareversea_make_add_rule_requestarequestsabatch_updateaconditionaformatTOlistOtuplea_parse_string_enumatypeaBooleanConditionaTYPESuvalues parameter must always be list/tuple of values, even for a single elementacallableuBooleanCondition.values has inappropriate length/content for condition type %savaluesaConditionValueaRelativeDateTarelativeDateTauserEnteredValueavalueaVALUESarelativeDateauserEnteredValueacoloracolorStyleaInterpolationPointDarequiredtSaMINaMAXuInterpolationPoint.type %s requires a value of MIN or MAX if no value specifiedaminpointamidpointDarequiredFamaxpointabooleanRuleaBooleanRuleaillegal_types_for_conditional_formattinguBooleanCondition.type for conditional formatting must not be one of: %sagradientRuleaGradientRuleuMust specify exactly one of: booleanRule, gradientRuleaGridRangearangeswpaillegal_types_for_data_validationuBooleanCondition.type for data validation must not be one of: %sainputMessageastrictashowCustomUia__doc__a__file__a__spec__aoriginahas_locationa__cached__autilTa_parse_string_enuma_underlowera_enforce_typela_underloweramodelsTaFormattingComponentaGridRangea_CLASSESaFormattingComponenta_CLASSESucollections.abcTaMutableSequenceaIterableaMutableSequenceacollectionsaget_conditional_format_rulesa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugspread_formatting.conditionalsa__module__a__qualname__a__init__uConditionalFormatRules.__init__uConditionalFormatRules.__getitem__a__setitem__uConditionalFormatRules.__setitem__a__delitem__uConditionalFormatRules.__delitem__a__len__uConditionalFormatRules.__len__aclearuConditionalFormatRules.clearuConditionalFormatRules.insertasaveuConditionalFormatRules.savea__orig_bases__aConditionalFormattingComponentDaconditionaformatabooleanConditionacellFormata_FIELDSTnnuBooleanRule.__init__SaBLANKaTEXT_STARTS_WITHaTEXT_ENDS_WITHaNOT_BLANKSaDATE_BETWEENaDATE_IS_VALIDaDATE_ON_OR_BEFOREaTEXT_IS_EMAILaTEXT_IS_URLaONE_OF_LISTBOOLEANaDATE_NOT_BETWEENaDATE_ON_OR_AFTERaONE_OF_RANGETatypeavaluesaNUMBER_GREATERaNUMBER_GREATER_THAN_EQaNUMBER_LESSaNUMBER_LESS_THAN_EQaNUMBER_EQaNUMBER_NOT_EQaNUMBER_BETWEENlaNUMBER_NOT_BETWEENaTEXT_CONTAINSaTEXT_NOT_CONTAINSaTEXT_STARTS_WITHaTEXT_ENDS_WITHaTEXT_EQaTEXT_IS_EMAILaTEXT_IS_URLaDATE_EQaDATE_BEFOREaDATE_AFTERaDATE_ON_OR_BEFOREaDATE_ON_OR_AFTERaDATE_BETWEENaDATE_NOT_BETWEENaDATE_IS_VALIDaONE_OF_RANGEaONE_OF_LISTu<lambda>uBooleanCondition.<lambda>aBLANKaNOT_BLANKaCUSTOM_FORMULAaBOOLEANTnTuBooleanCondition.__init__uBooleanCondition.to_propsasetLaPAST_YEARaPAST_MONTHaPAST_WEEKaYESTERDAYaTODAYaTOMORROWSaPAST_YEARaPAST_MONTHaPAST_WEEKaYESTERDAYaTOMORROWaTODAYTnuRelativeDate.__init__uRelativeDate.to_propsTarelativeDateauserEnteredValueuConditionValue.__init__TacoloracolorStyleatypeavalueLaMINaMAXaNUMBERaPERCENTaPERCENTILESaPERCENTILEaMINaMAXaNUMBERaPERCENTTnnnnuInterpolationPoint.__init__DaminpointamidpointamaxpointainterpolationPointainterpolationPointainterpolationPointTnnnuGradientRule.__init__TarangesabooleanRuleagradientRuleuConditionalFormatRule.__init__uConditionalFormatRule.to_propsaDataValidationRuleabooleanConditionastrabooluDataValidationRule.__init__aitemsa_ca_kugspread_formatting\conditionals.pyTwxu<module gspread_formatting.conditionals>Ta__class__TaselfaidxTaselfacoloracolorStyleatypeavalueTaselfaconditionaformatTaselfaconditionainputMessageastrictashowCustomUiTaselfaminpointamaxpointamidpointTaselfarangesabooleanRuleagradientRuleTaselfarelativeDateauserEnteredValueTaselfatypeavaluesavalidatoravalidTaselfavalueTaselfaworksheetarulesTaselfTaselfaidxavalueTaworksheetarulearuleIndexTaworksheetaresparulesasheetTaselfadelete_requestsaadd_requestsabodyarespTaselfwpu.gspread_formatting)a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_gspread_formattingu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__afunctionsTw*lamodelsaconditionalsabatchugspread_formatting\__init__.pyu<module gspread_formatting>u.gspread_formatting.dataframe alevshapelaDEFAULT_FORMATTERacolumnsa_determine_index_or_columns_sizeaindexareset_indexutoo many values to unpack (expected 2)aformatteraformat_for_columnacoladataframeato_propsu{}:{}arowcol_to_a1arowashapelaformatting_rangesaappendacolumn_fmtanamesanameaformat_for_headerashould_freeze_headeracolumn_header_sizearowsaindex_column_sizeafreeze_argsacolsazip_longestavaluesaformat_for_cellay_idxaformat_for_data_rowaformat_cell_rangesarequestsaset_frozenaworksheetu
    Modifies the cell formatting of an area of the provided Worksheet, using
    the provided DataFrame to determine the area to be formatted and the formats
    to be used.

    :param worksheet: the gspread worksheet to set with content of DataFrame.
    :param dataframe: the DataFrame.
    :param formatter: an optional instance of ``DataFrameFormatter`` class, which
                      will examine the contents of the DataFrame and
                      assemble a set of ``gspread_formatter`` operations
                      to be performed after the DataFrame contents
                      are written to the given Worksheet. The formatting
                      operations are performed after the contents are written
                      and before this function returns. Defaults to
                      ``DEFAULT_FORMATTER``.
    :param row: number of row at which to begin formatting. Defaults to 1.
    :param col: number of column at which to begin formatting. Defaults to 1.
    :param include_index: if True, include the DataFrame's index as an
            additional column when performing formatting. Defaults to False.
    :param include_column_header: if True, format a header row before data.
            Defaults to True.
    aspreadsheetabatch_updatea_format_with_dataframeanumberFormatu
        A utility class method that resolves a value to a ``NumberFormat`` object,
        whether that value is a ``NumberFormat`` object or a pattern string.
        Optional ``type`` parameter is to specify ``NumberFormat`` enum value.
        aformat_with_dataframeTarowacolainclude_indexainclude_column_headeru
        Convenience method that will call this module's ``format_with_dataframe`` function with
        this ``DataFrameFormatter`` object as the formatter.
        u
        Called by ``format_with_dataframe`` once for each header row (if ``include_column_header``
        parameter is ``True``) or column (if ``include_index`` parameter is also ``True``)..

        :param series: A sequence of elements representing the values in the row or column.
                 Can be a simple list, or a ``pandas.Series`` or ``pandas.Index`` object.
        :param dataframe: The ``pandas.DataFrame`` object, as additional context.

        :return: Either a ``CellFormat`` object or ``None``.
        u
        Called by ``format_with_dataframe`` once for each column in the dataframe.

        :param column: A ``pandas.Series`` object representing the column.
        :param col_number: The index (starting with 1) of the column in the worksheet.
        :param dataframe: The ``pandas.DataFrame`` object, as additional context.

        :return: Either a ``CellFormat`` object or ``None``.
        u
        Called by ``format_with_dataframe`` once for each data row in the dataframe.
        Allows for row-specific additional formatting to complement any
        column-based formatting.

        :param values: The values in the row, obtained directly from the ``DataFrame``.
                 If ``include_index`` parameter to ``format_with_dataframe`` is ``True``,
                 then the first element in this sequence is the index value for the row.
        :param row_number: The index (starting with 1) of the row in the worksheet.
        :param dataframe: The ``pandas.DataFrame`` object, as additional context.

        :return: Either a ``CellFormat`` object or ``None``.
        u
        Called by ``format_with_dataframe`` once for each cell in the dataframe.
        Allows for cell-specific additional formatting to complement any column
        or row formatting.

        :param value: The value of the cell, obtained directly from the ``DataFrame``.
        :param row_number: The index (starting with 1) of the row in the worksheet.
        :param col_number: The index (starting with 1) of the column in the worksheet.
        :param dataframe: The ``pandas.DataFrame`` object, as additional context.

        :return: Either a ``CellFormat`` object or ``None``.
        u
        Called by ``format_with_dataframe`` once for each header row or column.

        :param series: A sequence of elements representing the values in the row or column.
                 Can be a simple list, or a ``pandas.Series`` or ``pandas.Index`` object.
        :param dataframe: The ``pandas.DataFrame`` object, as additional context.

        :return: boolean value
        aDEFAULT_HEADER_BACKGROUND_COLORu
        Returns an instance of this class, with any unspecified parameters
        being substituted with this package's default values for the parameters.
        Instantiate the class directly if you want unspecified parameters to be ``None``
        and thus always be omitted from formatting operations.
        aheader_background_coloraheader_text_coloraBasicFormatteraresolve_number_formatuaDATEadate_formataNUMBERadecimal_formatainteger_formatafreeze_headersacolumn_formatsacellFormatatextFormatTaboldaforegroundColorTabackgroundColoratextFormatadtypeakindwOainfer_objectswfaRIGHTTanumberFormatahorizontalAlignmentwiwMaCENTERaLEFTTahorizontalAlignmenta__doc__a__file__a__spec__aoriginahas_locationa__cached__aitertoolsTazip_longestTaizip_longestaizip_longestugspread_formatting.batch_update_requestsTaformat_cell_rangesaset_frozenugspread_formatting.modelsTacellFormatanumberFormataColoratextFormataColorugspread.utilsTarowcol_to_a1awrapsTaformat_with_dataframeaDataFrameFormatteraBasicFormatteraDEFAULT_FORMATTERaDEFAULT_HEADER_BACKGROUND_COLORa__all__TfP?fP?fP?TnlpFtTOobjecta__prepare__aDataFrameFormattera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ugspread_formatting.dataframea__module__u
    An abstract base class defining the interface for producing formats
    for a worksheet based on a given DataFrame.
    a__qualname__aclassmethodTnuDataFrameFormatter.resolve_number_formatTlpFtuDataFrameFormatter.format_with_dataframeuDataFrameFormatter.format_for_headeruDataFrameFormatter.format_for_columnuDataFrameFormatter.format_for_data_rowuDataFrameFormatter.format_for_celluDataFrameFormatter.should_freeze_headera__orig_bases__u
    A basic formatter class that offers: selection of format based on
    inferred data type of each column; bold headers with a custom background color;
    frozen header row (and column if index is included); and column-specific
    override formats.
    Tnnnnnnnawith_defaultsuBasicFormatter.with_defaultsa__init__uBasicFormatter.__init__uBasicFormatter.format_for_headeruBasicFormatter.format_for_columnuBasicFormatter.format_for_celluBasicFormatter.format_for_data_rowuBasicFormatter.should_freeze_headerugspread_formatting\dataframe.pyu<module gspread_formatting.dataframe>Ta__class__Taselfaheader_background_coloraheader_text_coloradate_formatadecimal_formatainteger_formatafreeze_headersacolumn_formatsTaobjTaworksheetadataframeaformatterarowacolainclude_indexainclude_column_headeraformatting_rangesacolumnsaindex_column_sizeacolumn_header_sizeareset_dfaindex_eltsaidxacolumnacolumn_fmtarangeafreeze_argsaeltsaindex_namesaheader_fmtavaluesavalue_rowaindex_valueaindex_valuesay_idxax_idxacell_valueacell_fmtarow_fmtarequestsTaselfavaluearow_numberacol_numberadataframeTaselfacolumnacol_numberadataframeTaselfacolumnacol_numberadataframeadtypeTaselfavaluesarow_numberadataframeTaselfaseriesadataframeTaselfaworksheetadataframearowacolainclude_indexainclude_column_headerTaworksheetaargsakwargsTaclsavalueatypeTaclsaheader_background_coloraheader_text_coloradate_formatadecimal_formatainteger_formatafreeze_headersacolumn_formats.gspread_formatting.functionsmawrapswfu_wrap_as_standalone_function.<locals>.faspreadsheetabatch_updatearequestsafuncu%s!%satitlearowcol_to_a1aa1_to_rowcolafetch_sheet_metadataaincludeGridDataarangesafieldsusheets.data.rowData.values.effectiveFormat,sheets.data.rowData.values.dataValidationasheetsladataagetarowDataLDavaluesTadataValidationaDataValidationRuleafrom_propsuReturns a DataValidationRule object or None representing the
    data validation in effect for the cell identified by ``label``.

    :param worksheet: Worksheet object containing the cell whose data
                      validation rule is desired.
    :param label: String with cell label in common format, e.g. 'B1'.
                  Letter case is ignored.

    Example:
    >>> get_data_validation_rule(worksheet, 'A1')
    <DataValidationRule condition=(bold=True)>
    >>> get_data_validation_rule(worksheet, 'A2')
    None
    a_fetch_with_updated_propertiesadefaultFormataCellFormatuReturn Default CellFormat for spreadsheet, or None if no default formatting was specified.usheets.data.rowData.values.effectiveFormatTaeffectiveFormatuReturns a CellFormat object or None representing the effective formatting directives,
    if any, for the cell; that is a combination of default formatting, user-entered formatting,
    and conditional formatting.

    :param worksheet: Worksheet object containing the cell whose format is desired.
    :param label: String with cell label in common format, e.g. 'B1'.
                  Letter case is ignored.

    Example:

    >>> get_effective_format(worksheet, 'A1')
    <CellFormat textFormat=(bold=True)>
    >>> get_effective_format(worksheet, 'A2')
    None
    usheets.data.rowData.values.userEnteredFormatTauserEnteredFormatuReturns a CellFormat object or None representing the user-entered formatting directives,
    if any, for the cell.

    :param worksheet: Worksheet object containing the cell whose format is desired.
    :param label: String with cell label in common format, e.g. 'B1'.
                  Letter case is ignored.

    Example:

    >>> get_user_entered_format(worksheet, 'A1')
    <CellFormat textFormat=(bold=True)>
    >>> get_user_entered_format(worksheet, 'A2')
    None
    DaincludeGridDatatafinditemu<lambda>uget_frozen_row_count.<locals>.<lambda>apropertiesagridPropertiesTafrozenRowCountaworksheetuget_frozen_column_count.<locals>.<lambda>TafrozenColumnCountuget_right_to_left.<locals>.<lambda>aboolTarightToLeftuReturns True or False (never None) if worksheet is rightToLeft.DaincludeGridDataafalseaSPREADSHEET_URLaidaclientarequestTaparamsajsona__doc__a__file__a__spec__aoriginahas_locationa__cached__autilTa_build_repeat_cell_requesta_fetch_with_updated_propertiesa_range_to_dimensionrange_objectla_build_repeat_cell_requesta_range_to_dimensionrange_objectamodelsTaCellFormataconditionalsTaDataValidationRuleugspread_formatting.batch_update_requestsTw*agspread_formattingugspread.utilsTaa1_to_rowcolarowcol_to_a1afinditemagspreadTaSpreadsheetaSpreadsheetugspread.urlsTaSPREADSHEET_URLTaget_default_formataget_effective_formataget_user_entered_formataget_frozen_row_countaget_frozen_column_countaget_right_to_leftaget_data_validation_ruleabatch_update_requestsa__all__a_wrap_as_standalone_functiona_fnameaget_data_validation_ruleaget_default_formataget_effective_formataget_user_entered_formataget_frozen_row_countaget_frozen_column_countaget_right_to_leftTnugspread_formatting\functions.pyTwiaworksheetTaworksheetu<module gspread_formatting.functions>TafuncwfTaworksheetaargsakwargsafuncTafuncTaselfaparamsaurlwrTaworksheetalabelarespadataapropsTaspreadsheetafmtTaworksheetamdasheet_dataagrid_propsTaworksheetamdasheet_dataapru.gspread_formatting.modelsa_props_to_componenta_CLASSESa_underlowera__name__w<w w>a_FIELDSaFormattingComponentwpaappendw(w)w;utoo many values to unpack (expected 2)u%s=%saselfa_DEFAULTSageta_extract_propswaafieldsaextenda_extract_fieldrefsaprefixaothera__eq__aCellFormatComponentaaddanew_propsafrom_propsaintersectionadifferenceaGridRangea_range_to_gridrange_objectaidlasheetIdastartRowIndexaendRowIndexastartColumnIndexaendColumnIndexanumberFormatabackgroundColorabordersapaddinga_parse_string_enumahorizontalAlignmentSaLEFTaCENTERaRIGHTaverticalAlignmentSaBOTTOMaTOPaMIDDLEawrapStrategySaOVERFLOW_CELLaLEGACY_WRAPaWRAPaCLIPatextDirectionSaRIGHT_TO_LEFTaLEFT_TO_RIGHTatextFormatahyperlinkDisplayTypeSaLINKEDaPLAIN_TEXTatextRotationabackgroundColorStyleatypeaNumberFormataTYPESapatternathemeColorargbColoraredagreenablueaalphaa_HEX_PATTERNasearchuColor string given: %s: Hex string must be of the form: "#RRGGBB" or "#RRGGBBAA"agroupslfo@lu02xu#{0}{1}{2}{3}uastyleaBorderaSTYLESawidthacoloracolorStyleatopabottomaleftarightauriaforegroundColorafontFamilyafontSizeaboldaitalicastrikethroughaunderlineaforegroundColorStylealinkuEither angle or vertical must be specified, not both or neitheraangleaverticala__doc__a__file__a__spec__aoriginahas_locationa__cached__autilTa_props_to_componenta_extract_propsa_extract_fieldrefsa_parse_string_enuma_underlowera_range_to_gridrange_objectlareTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ugspread_formatting.modelsa__module__a__qualname__TaclassmethoduFormattingComponent.from_propsa__repr__uFormattingComponent.__repr__a__str__uFormattingComponent.__str__ato_propsuFormattingComponent.to_propsaaffected_fieldsuFormattingComponent.affected_fieldsuFormattingComponent.__eq__a__ne__uFormattingComponent.__ne__uFormattingComponent.adda__add__uFormattingComponent.intersectiona__and__uFormattingComponent.differencea__sub__a__orig_bases__TasheetIdastartRowIndexaendRowIndexastartColumnIndexaendColumnIndexafrom_a1_rangeuGridRange.from_a1_rangeTnnnnna__init__uGridRange.__init__aCellFormatDanumberFormatabackgroundColorabordersapaddingahorizontalAlignmentaverticalAlignmentawrapStrategyatextDirectionatextFormatahyperlinkDisplayTypeatextRotationabackgroundColorStylenacolornnnnnnnnnacolorStyleTnnnnnnnnnnnnuCellFormat.__init__TatypeapatternasetLaTEXTaNUMBERaPERCENTaCURRENCYaDATEaTIMEaDATE_TIMEaSCIENTIFICSaSCIENTIFICaDATE_TIMEaTIMEaDATEaCURRENCYaNUMBERaTEXTaPERCENTTnnuNumberFormat.__init__aColorStyleDathemeColorargbColornacoloruColorStyle.__init__aColoracompileu^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})?$aIGNORECASETaredagreenablueaalphaDaredagreenablueaalphaZZZf?TnnnnuColor.__init__afromHexuColor.fromHexatoHexuColor.toHexTastyleacoloracolorStyleLaDOTTEDaDASHEDaSOLIDaSOLID_MEDIUMaSOLID_THICKaNONEaDOUBLESaSOLIDaDOUBLEaNONEaDASHEDaSOLID_MEDIUMaDOTTEDaSOLID_THICKuBorder.__init__aBordersDatopabottomaleftarightaborderaborderaborderaborderuBorders.__init__aPaddingTatoparightabottomaleftuPadding.__init__aLinkTauriTnuLink.__init__aTextFormatDaforegroundColorafontFamilyafontSizeaboldaitalicastrikethroughaunderlineaforegroundColorStylealinkacolornnnnnnacolorStylenTnnnnnnnnnuTextFormat.__init__aTextRotationTaangleaverticaluTextRotation.__init__aitemsa_ca_kugspread_formatting\models.pyu<module gspread_formatting.models>Ta__class__Taselfaotherwaaself_vaother_vTaselfaangleaverticalT
aselfaforegroundColorafontFamilyafontSizeaboldaitalicastrikethroughaunderlineaforegroundColorStylealinkT
aselfanumberFormatabackgroundColorabordersapaddingahorizontalAlignmentaverticalAlignmentawrapStrategyatextDirectionatextFormatahyperlinkDisplayTypeatextRotationabackgroundColorStyleTaselfaredagreenablueaalphaTaselfasheetIdastartRowIndexaendRowIndexastartColumnIndexaendColumnIndexTaselfastyleacolorawidthacolorStyleTaselfathemeColorargbColorTaselfatopabottomaleftarightTaselfatoparightabottomaleftTaselfatypeapatternTaselfauriTaselfaotherTaselfTaselfwpwawvTaselfaotheranew_propswaaself_vaother_vathis_vTaselfaprefixafieldswawvTaclsahexcoloramatchTaclsarangeaworksheetTaclsapropsTaselfaRRaGGaBBaAA.gspread_formatting.utilK_arepeatCellarangea_range_to_gridrange_objectaidacellato_propsafieldsw,aaffected_fieldsa_propertiesafetch_sheet_metadataaupdateapropertiesa_CELL_ADDR_REamatchagroupTlaupperTllutoo many values to unpack (expected 2)acola_MAGIC_NUMBERlastartRowIndexaendRowIndexastartColumnIndexaendColumnIndexuRange for dimension must specify only column(s) or only row(s), not both: %sasheetIdaROWSadimensionaendIndexastartIndexaCOLUMNSaobjasplitTw:lua_a1_to_rowcoluNo format component named '%s'aitemsaclsa_FIELDSagetwka_props_to_componentaclass_registryakwargsa_DEFAULTSw_alower:lnnu%s value is requiredu%s value must be one of: %savalueu%s value must be instance of: %sw.a__doc__a__file__a__spec__aoriginahas_locationa__cached__areTauserEnteredFormata_build_repeat_cell_requestTna_fetch_with_updated_propertiesl@acompileTu([A-Za-z]+)?([1-9]\d*)?a_range_to_dimensionrange_objectTFa_ul_repla_underlowera_parse_string_enuma_enforce_typea_extract_propsa_extract_fieldrefsugspread_formatting\util.pyu<module gspread_formatting.util>Talabelwmacolumn_labelarowacolwiwcTaworksheetarangeacell_formatacelldata_fieldTanameaclsavaluearequiredTanameavalueaprefixTavalueTaspreadsheetakeyaparamsametadataTanameavalueaset_of_valuesarequiredT
aclass_registryaclass_aliasavalueanone_if_emptyaclsakwargswkwvaitem_aliasarvTarangeaworksheet_idagridrangeais_row_rangeais_column_rangeaobjT
arangeaworksheet_idapartsastartaendarow_offsetacolumn_offsetalast_rowalast_columnaobjTwmTaname.idnas.a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_idnau\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__apackage_dataTa__version__la__version__lacoreTaIDNABidiErroraIDNAErroraInvalidCodepointaInvalidCodepointContextaalabelacheck_bidiacheck_hyphen_okacheck_initial_combineracheck_labelacheck_nfcadecodeaencodeaulabelauts46_remapavalid_contextjavalid_contextoavalid_label_lengthavalid_string_lengthaIDNABidiErroraIDNAErroraInvalidCodepointaInvalidCodepointContextaalabelacheck_bidiacheck_hyphen_okacheck_initial_combineracheck_labelacheck_nfcadecodeaencodeaulabelauts46_remapavalid_contextjavalid_contextoavalid_label_lengthavalid_string_lengthaintrangesTaintranges_containaintranges_containLaIDNABidiErroraIDNAErroraInvalidCodepointaInvalidCodepointContextaalabelacheck_bidiacheck_hyphen_okacheck_initial_combineracheck_labelacheck_nfcadecodeaencodeaintranges_containaulabelauts46_remapavalid_contextjavalid_contextoavalid_label_lengthavalid_string_lengtha__all__uidna\__init__.pyu<module idna>u.idna.corepaunicodedataacombininglanameuUnknown character in unicodedataaintranges_containaidnadataascriptsaencodeTapunycodeuU+{:04X}lllutoo many values to unpack (expected 2)abidirectionaluaIDNABidiErroruUnknown directionality in label {} at position {}wRaALaANabidi_labelwLuFirst codepoint in label {} must be directionality L, R or ALL
wRaALaANaENaESaCSaETaONaBNaNSMuInvalid direction for codepoint at position {} in a right-to-left labelLwRaALaENaANaNSMaENanumber_typeTuCan not mix numeral types in a right-to-left labelLwLaENaESaCSaETaONaBNaNSMuInvalid direction for codepoint at position {} in a left-to-right labelavalid_endingTuLabel ends with illegal codepoint directionalityacategorywMaIDNAErrorTuLabel begins with an illegal combining character:llnu--TuLabel has disallowed hyphens in 3rd and 4th positionw-lTuLabel must not start or end with a hyphenanormalizeaNFCTuLabel must be in Normalization Form Cl a_combining_classa_virama_combining_classaposajoining_typesagetlTlLlDlRl
 lalabellllua_is_scriptaGreekllaHebrewl0u・aHiraganaaKatakanaaHanl`lillTObytesObytearrayadecodeTuutf-8TuEmpty Labelacheck_nfcacheck_hyphen_okacheck_initial_combineracodepoint_classesaPVALIDaCONTEXTJavalid_contextjaInvalidCodepointContextuJoiner {} not allowed at position {} in {}a_unotuUnknown codepoint adjacent to joiner {} at position {} in {}aCONTEXTOavalid_contextouCodepoint {} not allowed at position {} in {}aInvalidCodepointuCodepoint {} at position {} of {} not allowedacheck_bidiTaasciiaulabelavalid_label_lengthTuLabel too longTuNo Inputacheck_labela_punycodea_alabel_prefixalowerastartswithTuMalformed A-label, no Punycode eligible content foundTuA-label must not end with a hyphenTuInvalid A-labelauts46dataTauts46datalabisectabisect_leftwZlwVwDw3aoutputwIacode_pointuRe-map the characters in the string according to UTS46 processing.aasciiTushould pass a unicode string to the function rather than a byte string.auts46_remapasplitTw.a_unicode_dots_reTuEmpty domainaalabelaresultaappendTuEmpty labelTcd.avalid_string_lengthTuDomain too longTuInvalid ASCII in A-labelTuw.a__doc__a__file__a__spec__aoriginahas_locationa__cached__TaidnadataareaUnionaOptionalaintrangesTaintranges_containlcxn--acompileTu[.。．｡]TEUnicodeErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uidna.corea__module__u Base exception for all IDNA-encoding related problems a__qualname__a__orig_bases__u Exception when bidirectional requirements are not satisfied u Exception when a disallowed or unallocated codepoint is used u Exception when the codepoint is not valid in the context it is used DacpareturnOintpDacpascriptareturnOstrpOboolDwsareturnOstrObytesDwsareturnOintOstrTObytesOstrareturnatrailing_dotTFDalabelacheck_ltrareturnOstrOboolpDalabelareturnOstrOboolDalabelareturnOstrnDalabelaposareturnOstrOintOboolDalabelaposaexceptionareturnOstrOintOboolpTOstrObytesObytearrayDalabelareturnOstrObytesTtFDadomainastd3_rulesatransitionalareturnOstrOboolpOstrTFpppwsastrictauts46astd3_rulesatransitionalTFppuidna\core.pyu<module idna.core>TacpwvTacpascriptTwsTalabelalabel_bytesTalabelacheck_ltrabidi_labelaidxacpadirectionartlavalid_endinganumber_typeTalabelTalabelaposacpacp_valueTwsastrictauts46astd3_rulesatrailing_dotaresultalabelsalabelTwsastrictauts46astd3_rulesatransitionalatrailing_dotaresultalabelsalabelTadomainastd3_rulesatransitionalauts46dataaoutputaposacharacode_pointauts46rowastatusareplacementTalabelaposacp_valueaokwiajoining_typeTalabelaposaexceptionacp_valueacpTalabelatrailing_dot.idna.idnadataDa__doc__a__file__a__spec__aoriginahas_locationa__cached__u15.1.0a__version__DaGreekaHanaHebrewaHiraganaaKatakanaT$qtpqxuq~zqqqqqqqqq+&qb]qkfqqqqF qNHqXPqZYq\[q^]q~_qqqqqqqq'!&!qfeq@qqFTq..q..q//q00q00q*0!0q<080qM4qNqnqpqooqooqq:q@q qq^qqKq#PTqqqq7q=8q?>qB@qECqPFTq0A0q00q q32qSPqTq00q10q21q22qX33qpfqqqqqqq# qVUqhdascriptsDlllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlnlolqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/lMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllll@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXl`lalblcldlelflglhliljlplqlrlsltlulvlwlxlylzl{l|l}l~lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
ll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlllllllllllllllllllllllllllllllllllllllllll l
 l/ lf lg lh li l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsl
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
llllllllllllllllllllllllll
l
l
l
l
l
l
l
l
l
l

l
l
l

l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l!
l"
l#
l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElQlRlSlTlplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClKlUppppppplDlUlRppplDlRlDlRlDpppplRppplDpppppppppppplClDpppppplRlDppplRpplUlRpplDppppppppppppppplRppppppppppppppppplDppppppppppppppppppppppppppppppppppppplRlDplRpppppppplDlRlDlRlDplRpplUlRplDppplTlRlDpplRpppplDppplRlDpppppppplRlDlRlDlRlDplRplDpppppppppplRpplDpppppppppppppplRplDppplRlDlRplDpplRplDpppppppppppppppppppppppppppppppppppppplClRlDpppplRplDlRlDppppppppplRlDlRpplDlUlDppplUlRlDlRpppppppppppppppppppplCpplDlUplDpppplRlUplDppppppppplRpplUlRlDplRplDppppplRlDpppppppppppppplUplDlClUlDpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplUpppplTplDpppppppppppppppppppppppppppppppppplUlClUpppplDppppppppppppppppppppppppppppppppppppppppppppppppplLlUlDpppplRlUlRlUlRplUplLlRpppplDppplLlDpppplRlDpplRlUplRlDppplRlDlRlDlRpplDpplRlDplRlDlRplDlRpppplDplUlLlDpppppppppppppppppppppppppppppppplRlDppplRlDpppppppppppppppplUlDpplRlDppplRplDpppppppppppplUlDplRpplUlDlRplDplRlDplUlDlRplDlUppplRlDlLlUplDppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplTajoining_typesDaPVALIDaCONTEXTJaCONTEXTOTq.-q:0q{aqqqqqqq
qq
qqqqqqqqq q"!q$#q&%q('q*)q,+q.-q0/q21q65q97q;:q=<q?>qCBqEDqGFqIHqLKqNMqPOqRQqTSqVUqXWqZYq\[q^]q`_qbaqdcqfeqhgqjiqlkqnmqpoqrqqtsqvuqxwq{zq}|q~qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qq
qqqqqqqqq q"!q$#q&%q('q*)q,+q.-q0/q21q:3q=<qA?qCBqHGqJIqLKqNMqOqqqqq@qCBqOFqpPqrqqtsqxwq~{qqqqqqqqqqqqqqqqqqq`0qbaqdcqfeqhgqjiqlkqnmqpoqrqqtsqvuqxwqzyq|{q~}qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qq
qqqqqqqqq q"!q$#q&%q('q*)q,+q.-q0/qZYq`qqqqqqqqqq@ q`AqunqyqqqqqKqMqqq.q\@qk`qpqqqXqd`qpfqqqqqqqqqqqqqqqqq

q

q

q)

q1
*
q3
2
q6
5
q:
8
q=
<
qC
>
qI
G
qN
K
qR
Q
q]
\
qv
f
q

q

q

q

q

q

q

q

q

q

q

q

q

q
qq
qq)q1*q42q:5qE<qIGqNKqXUqd_qpfqrqqqqqqqqqqqqqqqqqq
qq)q:*qE<qIFqNJqWUq[Xq^]qd`qpfqqqqqqqqqqqqqqq


q

qE

qI
F
qO
J
qX
T
qd
_
qp
f
q
z
q

q

q

q

q

q

q

q

q

q

q

q

q3q;4qO@qZPqqqqqqqqqqqqqqqq* q65q87q:9qC>qHDqMIqRNqWSq\Xqi]qmjqsqqutqzqqqqqqqqqqqJqPqqqIqNJqWPqYXq^Zq`qqqqqqqqqq[q`]qqqmqoqqqqq5qT@qm`qqnqtrqqqqqqqy qqqq, q<0qnFqupqqqqq_ q}`qqqqqqMqZPqtkqq8qJ@q~Mqqq,q0/q<;qONqxkqyqqqqqq
qq
qqqqqqqqq q"!q$#q&%q('q*)q,+q.-q0/q21q43q65q87q:9q<;q>=q@?qBAqDCqFEqHGqJIqLKqNMqPOqRQqTSqVUqXWqZYq\[q^]q`_qbaqdcqfeqhgqjiqlkqnmqpoqrqqtsqvuqxwqzyq|{q~}qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq( q80qF@qXPqh`qqpqsrqutqwvqyxq{zq}|qqqqqqqqqO!N!q!!q`,0,qb,a,qg,e,qi,h,qk,j,qm,l,qr,q,qu,s,q|,v,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q,,q&--q(-'-q.---qh-0-q--q--q--q--q--q--q--q--q--q.-q0./.q00q.0*0q=0<0q0A0q00q00q00q00q011q11q21qM4qNqФq
q,qBAqDCqFEqHGqJIqLKqNMqPOqRQqTSqVUqXWqZYq\[q^]q`_qbaqdcqfeqhgqjiqlkqpmq~tqqqqqqqqqqqqqqqqqq q$#q&%q('q*)q,+q.-q2/q43q65q87q:9q<;q>=q@?qBAqDCqFEqHGqJIqLKqNMqPOqRQqTSqVUqXWqZYq\[q^]q`_qbaqdcqfeqhgqjiqlkqnmqpoqyqq{zq}|qqqqqqqqqqqqqqqqqqqqqqqqqqq§qħçqɧȧq˧ʧqҧѧqԧӧq֧էqاקqڧ٧qq(q-,qt@qƨqڨШqqq.qT0qqکϩqq7qN@qZPqw`qêzqު۪qqqqqq' q/(q[0qi`qqqqqqqq q"!q%#q*'qq0 qtsqq'
q;(q><qN?q^Pqqqqqq qA-qJBq{Pqqqq(qqq(qd0qqqqq7qV@qh`qqqq6
q97q=<qV?qw`qqqqq: qqq

q

q

q

q6

q;
8
q@
?
q}
`
q

q

q

q6qV@qs`qqIqq(

q:
0
qqqqq('qQ0qpqqqGqvfqqqqq5q@6qHDqtPqwvqqqqqq8qB>qqqqqqqqq
qq)q1*q42q:5qE;qIGqNKqQPqXWqd]qmfqupqKqZPqb^qqqqqqqAqEDqZPqqqq,q:0qG@q;qqq
qqq6q97qD;qZPqqqqq?qHGqPqqqq7
qA8qZPqrqqqq
q7q;:q><qH?qZPqf`qigqjqqqqqq;qC>qZPqq# qD%$q//q040qV4@4qGFDq9jhq_j@jqjj`jqjpjqjjqjjqjjq7kkqDk@kqZkPkqxkckqk}kqn`nqKooqoOoqooqooqooqooqpq֌qqqqq#q32qSPqVUqhdqpqkq}pqqqq.qG0q7qm;qvuqqqqq+%qqq"q%#q+&qn0qq-q>0qJ@qONqqqqqqqqqqL"qZPqq:q@q qq^qKq#PTq  Tqqvuqqj`qq00acodepoint_classesuidna\idnadata.pyu<module idna.idnadata>u.idna.intrangesk*asortedllalast_writearangesaappenda_encode_rangeluRepresent a list of integers as a sequence of ranges:
    ((start_0, end_0), (start_1, end_1), ...), such that the original
    integers are exactly those x such that start_i <= x < end_i for some i.

    Ranges are encoded as single integers (start << 32 | end), not as tuples.
    l qabisectabisect_lefta_decode_rangeutoo many values to unpack (expected 2)aposuDetermine if `int_` falls into one of the ranges in `ranges`.u
Given a list of integers, made up of (hopefully) a small number of long runs
of consecutive integers, compute a representation of the form
((start1, end1), (start2, end2) ...). Then answer the question "was x present
in the original list?" in time O(log(# runs)).
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aListaTuplealist_areturnTOintQaintranges_from_listDastartaendareturnOintppwrTOintpaint_aintranges_containuidna\intranges.pyu<module idna.intranges>TwrTastartaendTaint_arangesatuple_aposaleftarightw_Talist_asorted_listarangesalast_writewiacurrent_rangeu.idna.package_dataa__doc__a__file__a__spec__aoriginahas_locationa__cached__u3.6a__version__uidna\package_data.pyu<module idna.package_data>u.idna.uts46dataLdTlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tl
w3Tlw3Tlw3Tl
w3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tl w3Tl!w3Tl"w3Tl#w3Tl$w3Tl%w3Tl&w3Tl'w3Tl(w3Tl)w3Tl*w3Tl+w3Tl,w3Tl-wVTl.wVTl/w3Tl0wVTl1wVTl2wVTl3wVTl4wVTl5wVTl6wVTl7wVTl8wVTl9wVTl:w3Tl;w3Tl<w3Tl=w3Tl>w3Tl?w3Tl@w3TlAwMwaTlBwMwbTlCwMwcTlDwMwdTlEwMweTlFwMwfTlGwMwgTlHwMwhTlIwMwiTlJwMwjTlKwMwkTlLwMwlTlMwMwmTlNwMwnTlOwMwoTlPwMwpTlQwMwqTlRwMwrTlSwMwsTlTwMwtTlUwMwuTlVwMwvTlWwMwwTlXwMwxTlYwMwyTlZwMwzTl[w3Tl\w3Tl]w3Tl^w3Tl_w3Tl`w3TlawVTlbwVTlcwVLdTldwVTlewVTlfwVTlgwVTlhwVTliwVTljwVTlkwVTllwVTlmwVTlnwVTlowVTlpwVTlqwVTlrwVTlswVTltwVTluwVTlvwVTlwwVTlxwVTlywVTlzwVTl{w3Tl|w3Tl}w3Tl~w3Tlw3TlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlw3w TlwVTlwVTlwVTlwVTlwVTlwVTlwVTlw3u ̈TlwVTlwMwaTlwVTlwVTlwITlwVTlw3u ̄TlwVTlwVTlwMw2TlwMw3Tlw3u ́TlwMuμTlwVTlwVTlw3u ̧TlwMw1TlwMwoTlwVTlwMu1⁄4TlwMu1⁄2TlwMu3⁄4TlwVTlwMuàTlwMuáTlwMuâTlwMuãTlwMuäTlwMuåTlwMuæTlwMuçLdTlwMuèTlwMuéTlwMuêTlwMuëTlwMuìTlwMuíTlwMuîTlwMuïTlwMuðTlwMuñTlwMuòTlwMuóTlwMuôTlwMuõTlwMuöTlwVTlwMuøTlwMuùTlwMuúTlwMuûTlwMuüTlwMuýTlwMuþTlwDassTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwMuāTlwVTlwMuăTlwVTlwMuąTlwVTlwMućTlwVTlwMuĉTlwVTl
wMuċTlwVTlwMučTl
wVTlwMuďTlwVTlwMuđTlwVTlwMuēTlwVTlwMuĕTlwVTlwMuėTlwVTlwMuęTlwVTlwMuěTlwVTlwMuĝTlwVTlwMuğTlwVTl wMuġTl!wVTl"wMuģTl#wVTl$wMuĥTl%wVTl&wMuħTl'wVTl(wMuĩTl)wVTl*wMuīTl+wVLdTl,wMuĭTl-wVTl.wMuįTl/wVTl0wMui̇Tl1wVTl2wMaijTl4wMuĵTl5wVTl6wMuķTl7wVTl9wMuĺTl:wVTl;wMuļTl<wVTl=wMuľTl>wVTl?wMul·TlAwMułTlBwVTlCwMuńTlDwVTlEwMuņTlFwVTlGwMuňTlHwVTlIwMuʼnTlJwMuŋTlKwVTlLwMuōTlMwVTlNwMuŏTlOwVTlPwMuőTlQwVTlRwMuœTlSwVTlTwMuŕTlUwVTlVwMuŗTlWwVTlXwMuřTlYwVTlZwMuśTl[wVTl\wMuŝTl]wVTl^wMuşTl_wVTl`wMušTlawVTlbwMuţTlcwVTldwMuťTlewVTlfwMuŧTlgwVTlhwMuũTliwVTljwMuūTlkwVTllwMuŭTlmwVTlnwMuůTlowVTlpwMuűTlqwVTlrwMuųTlswVTltwMuŵTluwVTlvwMuŷTlwwVTlxwMuÿTlywMuźTlzwVTl{wMużTl|wVTl}wMužTl~wVTlwMwsTlwVTlwMuɓTlwMuƃTlwVTlwMuƅTlwVTlwMuɔTlwMuƈTlwVTlwMuɖTlwMuɗTlwMuƌTlwVTlwMuǝTlwMuəTlwMuɛTlwMuƒTlwVTlwMuɠLdTlwMuɣTlwVTlwMuɩTlwMuɨTlwMuƙTlwVTlwMuɯTlwMuɲTlwVTlwMuɵTlwMuơTlwVTlwMuƣTlwVTlwMuƥTlwVTlwMuʀTlwMuƨTlwVTlwMuʃTlwVTlwMuƭTlwVTlwMuʈTlwMuưTlwVTlwMuʊTlwMuʋTlwMuƴTlwVTlwMuƶTlwVTlwMuʒTlwMuƹTlwVTlwMuƽTlwVTlwMudžTlwMaljTlwManjTlwMuǎTlwVTlwMuǐTlwVTlwMuǒTlwVTlwMuǔTlwVTlwMuǖTlwVTlwMuǘTlwVTlwMuǚTlwVTlwMuǜTlwVTlwMuǟTlwVTlwMuǡTlwVTlwMuǣTlwVTlwMuǥTlwVTlwMuǧTlwVTlwMuǩTlwVTlwMuǫTlwVTlwMuǭTlwVTlwMuǯTlwVTlwMadzTlwMuǵTlwVTlwMuƕTlwMuƿTlwMuǹTlwVTlwMuǻTlwVTlwMuǽTlwVTlwMuǿTlwVTlwMuȁTlwVTlwMuȃTlwVTlwMuȅTlwVTlwMuȇTlwVTlwMuȉTlwVTl
wMuȋTlwVTlwMuȍLdTl
wVTlwMuȏTlwVTlwMuȑTlwVTlwMuȓTlwVTlwMuȕTlwVTlwMuȗTlwVTlwMușTlwVTlwMuțTlwVTlwMuȝTlwVTlwMuȟTlwVTl wMuƞTl!wVTl"wMuȣTl#wVTl$wMuȥTl%wVTl&wMuȧTl'wVTl(wMuȩTl)wVTl*wMuȫTl+wVTl,wMuȭTl-wVTl.wMuȯTl/wVTl0wMuȱTl1wVTl2wMuȳTl3wVTl:wMuⱥTl;wMuȼTl<wVTl=wMuƚTl>wMuⱦTl?wVTlAwMuɂTlBwVTlCwMuƀTlDwMuʉTlEwMuʌTlFwMuɇTlGwVTlHwMuɉTlIwVTlJwMuɋTlKwVTlLwMuɍTlMwVTlNwMuɏTlOwVTlwMwhTlwMuɦTlwMwjTlwMwrTlwMuɹTlwMuɻTlwMuʁTlwMwwTlwMwyTlwVTlw3u ̆Tlw3u ̇Tlw3u ̊Tlw3u ̨Tlw3u ̃Tlw3u ̋TlwVTlwMuɣTlwMwlTlwMwsTlwMwxTlwMuʕTlwVTl@wMùTlAwMúTlBwVTlCwMu̓TlDwMǘTlEwMuιTlFwVTlOwITlPwVTlpwMuͱTlqwVTlrwMuͳTlswVTltwMuʹTluwVTlvwMuͷTlwwVLdTlxwXTlzw3u ιTl{wVTl~w3w;TlwMuϳTlwXTlw3u ́Tlw3u ̈́TlwMuάTlwMu·TlwMuέTlwMuήTlwMuίTlwXTlwMuόTlwXTlwMuύTlwMuώTlwVTlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwXTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMuϊTlwMuϋTlwVTlwDuσTlwVTlwMuϗTlwMuβTlwMuθTlwMuυTlwMuύTlwMuϋTlwMuφTlwMuπTlwVTlwMuϙTlwVTlwMuϛTlwVTlwMuϝTlwVTlwMuϟTlwVTlwMuϡTlwVTlwMuϣTlwVTlwMuϥTlwVTlwMuϧTlwVTlwMuϩTlwVTlwMuϫTlwVTlwMuϭTlwVTlwMuϯTlwVTlwMuκTlwMuρTlwMuσTlwVTlwMuθTlwMuεTlwVTlwMuϸTlwVTlwMuσTlwMuϻTlwVTlwMuͻTlwMuͼTlwMuͽTlwMuѐTlwMuёTlwMuђLdTlwMuѓTlwMuєTlwMuѕTlwMuіTlwMuїTlwMuјTlwMuљTl
wMuњTlwMuћTlwMuќTl
wMuѝTlwMuўTlwMuџTlwMuаTlwMuбTlwMuвTlwMuгTlwMuдTlwMuеTlwMuжTlwMuзTlwMuиTlwMuйTlwMuкTlwMuлTlwMuмTlwMuнTlwMuоTlwMuпTl wMuрTl!wMuсTl"wMuтTl#wMuуTl$wMuфTl%wMuхTl&wMuцTl'wMuчTl(wMuшTl)wMuщTl*wMuъTl+wMuыTl,wMuьTl-wMuэTl.wMuюTl/wMuяTl0wVTl`wMuѡTlawVTlbwMuѣTlcwVTldwMuѥTlewVTlfwMuѧTlgwVTlhwMuѩTliwVTljwMuѫTlkwVTllwMuѭTlmwVTlnwMuѯTlowVTlpwMuѱTlqwVTlrwMuѳTlswVTltwMuѵTluwVTlvwMuѷTlwwVTlxwMuѹTlywVTlzwMuѻTl{wVTl|wMuѽTl}wVTl~wMuѿTlwVTlwMuҁTlwVTlwMuҋTlwVTlwMuҍTlwVTlwMuҏTlwVTlwMuґTlwVTlwMuғTlwVTlwMuҕTlwVTlwMuҗTlwVTlwMuҙTlwVTlwMuқTlwVTlwMuҝTlwVLdTlwMuҟTlwVTlwMuҡTlwVTlwMuңTlwVTlwMuҥTlwVTlwMuҧTlwVTlwMuҩTlwVTlwMuҫTlwVTlwMuҭTlwVTlwMuүTlwVTlwMuұTlwVTlwMuҳTlwVTlwMuҵTlwVTlwMuҷTlwVTlwMuҹTlwVTlwMuһTlwVTlwMuҽTlwVTlwMuҿTlwVTlwXTlwMuӂTlwVTlwMuӄTlwVTlwMuӆTlwVTlwMuӈTlwVTlwMuӊTlwVTlwMuӌTlwVTlwMuӎTlwVTlwMuӑTlwVTlwMuӓTlwVTlwMuӕTlwVTlwMuӗTlwVTlwMuәTlwVTlwMuӛTlwVTlwMuӝTlwVTlwMuӟTlwVTlwMuӡTlwVTlwMuӣTlwVTlwMuӥTlwVTlwMuӧTlwVTlwMuөTlwVTlwMuӫTlwVTlwMuӭTlwVTlwMuӯTlwVTlwMuӱTlwVTlwMuӳTlwVTlwMuӵTlwVTlwMuӷTlwVTlwMuӹTlwVTlwMuӻTlwVTlwMuӽTlwVTlwMuӿTlwVTlwMuԁTlwVTlwMuԃLdTlwVTlwMuԅTlwVTlwMuԇTlwVTlwMuԉTlwVTl
wMuԋTlwVTlwMuԍTl
wVTlwMuԏTlwVTlwMuԑTlwVTlwMuԓTlwVTlwMuԕTlwVTlwMuԗTlwVTlwMuԙTlwVTlwMuԛTlwVTlwMuԝTlwVTlwMuԟTlwVTl wMuԡTl!wVTl"wMuԣTl#wVTl$wMuԥTl%wVTl&wMuԧTl'wVTl(wMuԩTl)wVTl*wMuԫTl+wVTl,wMuԭTl-wVTl.wMuԯTl/wVTl0wXTl1wMuաTl2wMuբTl3wMuգTl4wMuդTl5wMuեTl6wMuզTl7wMuէTl8wMuըTl9wMuթTl:wMuժTl;wMuիTl<wMuլTl=wMuխTl>wMuծTl?wMuկTl@wMuհTlAwMuձTlBwMuղTlCwMuճTlDwMuմTlEwMuյTlFwMuնTlGwMuշTlHwMuոTlIwMuչTlJwMuպTlKwMuջTlLwMuռTlMwMuսTlNwMuվTlOwMuտTlPwMuրTlQwMuցTlRwMuւTlSwMuփTlTwMuքTlUwMuօTlVwMuֆTlWwXTlYwVTlwMuեւTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVLdTluwMuاٴTlvwMuوٴTlwwMuۇٴTlxwMuيٴTlywVTlwXTlwVTlwXTlwVTlKwXTlMwVTlwXTlwVTlwXTlwVTl.wXTl0wVTl?wXTl@wVTl\wXTl^wVTl_wXTl`wVTlkwXTlpwVTlwXTlwVTlwXTlwVTlXwMuक़TlYwMuख़TlZwMuग़Tl[wMuज़Tl\wMuड़Tl]wMuढ़Tl^wMuफ़Tl_wMuय़Tl`wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMuড়TlwMuঢ়TlwXTlwMuয়TlwVTlwXTlwVTlwXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl)
wXTl*
wVTl1
wXTl2
wVTl3
wMuਲ਼Tl4
wXTl5
wVTl6
wMuਸ਼Tl7
wXTl8
wVTl:
wXTl<
wVTl=
wXTl>
wVTlC
wXTlG
wVTlI
wXTlK
wVTlN
wXTlQ
wVTlR
wXTlY
wMuਖ਼TlZ
wMuਗ਼Tl[
wMuਜ਼Tl\
wVTl]
wXLdTl^
wMuਫ਼Tl_
wXTlf
wVTlw
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTlwXTlwVTlwXTlwVTl
wXTlwVTlwXTlwVTl)wXTl*wVTl1wXTl2wVTl4wXTl5wVTl:wXTl<wVTlEwXTlGwVTlIwXTlKwVTlNwXTlUwVTlXwXTl\wMuଡ଼Tl]wMuଢ଼Tl^wXTl_wVTldwXTlfwVTlxwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl
wXTlwVTlwXTlwVTl)wXTl*wVLdTl:wXTl<wVTlEwXTlFwVTlIwXTlJwVTlNwXTlUwVTlWwXTlXwVTl[wXTl]wVTl^wXTl`wVTldwXTlfwVTlpwXTlwwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTl
wVTl

wXTl
wVTl
wXTl
wVTlE
wXTlF
wVTlI
wXTlJ
wVTlP
wXTlT
wVTld
wXTlf
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTlwVTl3wMuําTl4wVTl;wXTl?wVTl\wXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwMuໍາTlwVLdTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMuຫນTlwMuຫມTlwVTlwXTlwVTlwMu་Tl
wVTlCwMuགྷTlDwVTlHwXTlIwVTlMwMuཌྷTlNwVTlRwMuདྷTlSwVTlWwMuབྷTlXwVTl\wMuཛྷTl]wVTliwMuཀྵTljwVTlmwXTlqwVTlswMuཱིTltwVTluwMuཱུTlvwMuྲྀTlwwMuྲཱྀTlxwMuླྀTlywMuླཱྀTlzwVTlwMuཱྀTlwVTlwMuྒྷTlwVTlwXTlwVTlwMuྜྷTlwVTlwMuྡྷTlwVTlwMuྦྷTlwVTlwMuྫྷTlwVTlwMuྐྵTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMuⴧTlwXTlwMuⴭTlwXTlwVTlwMuნTlwVTl_wXTlawVTlIwXTlJwVTlNwXTlPwVTlWwXTlXwVTlYwXTlZwVTl^wXTl`wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVLdTlwXTlwVTl[wXTl]wVTl}wXTlwVTlwXTlwVTlwXTlwMuᏰTlwMuᏱTlwMuᏲTlwMuᏳTlwMuᏴTlwMuᏵTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl7wXTl@wVTlTwXTl`wVTlmwXTlnwVTlqwXTlrwVTltwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwITlwXTlwITlwVTlwXTl wVTlywXTlwVTlwXTlwVTlwXTlwVTlwXTl wVTl,wXTl0wVTl<wXTl@wVTlAwXTlDwVTlnwXTlpwVTluwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl_wXTl`wVTl}wXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlMwXTlPwVTlwXTlwVTlwXTlwVTl8wXTl;wVTlJwXTlMwVTlwMuвLdTlwMuдTlwMuоTlwMuсTlwMuтTlwMuъTlwMuѣTlwMuꙋTlwXTlwMuაTlwMuბTlwMuგTlwMuდTlwMuეTlwMuვTlwMuზTlwMuთTlwMuიTlwMuკTlwMuლTlwMuმTlwMuნTlwMuოTlwMuპTlwMuჟTlwMuრTlwMuსTlwMuტTlwMuუTlwMuფTlwMuქTlwMuღTlwMuყTlwMuშTlwMuჩTlwMuცTlwMuძTlwMuწTlwMuჭTlwMuხTlwMuჯTlwMuჰTlwMuჱTlwMuჲTlwMuჳTlwMuჴTlwMuჵTlwMuჶTlwMuჷTlwMuჸTlwMuჹTlwMuჺTlwXTlwMuჽTlwMuჾTlwMuჿTlwVTlwXTlwVTlwXTlwVTl,wMwaTl-wMuæTl.wMwbTl/wVTl0wMwdTl1wMweTl2wMuǝTl3wMwgTl4wMwhTl5wMwiTl6wMwjTl7wMwkTl8wMwlTl9wMwmTl:wMwnTl;wVTl<wMwoTl=wMuȣTl>wMwpTl?wMwrTl@wMwtTlAwMwuTlBwMwwTlCwMwaTlDwMuɐTlEwMuɑTlFwMuᴂTlGwMwbTlHwMwdTlIwMweTlJwMuəTlKwMuɛTlLwMuɜTlMwMwgTlNwVTlOwMwkTlPwMwmTlQwMuŋTlRwMwoTlSwMuɔLdTlTwMuᴖTlUwMuᴗTlVwMwpTlWwMwtTlXwMwuTlYwMuᴝTlZwMuɯTl[wMwvTl\wMuᴥTl]wMuβTl^wMuγTl_wMuδTl`wMuφTlawMuχTlbwMwiTlcwMwrTldwMwuTlewMwvTlfwMuβTlgwMuγTlhwMuρTliwMuφTljwMuχTlkwVTlxwMuнTlywVTlwMuɒTlwMwcTlwMuɕTlwMuðTlwMuɜTlwMwfTlwMuɟTlwMuɡTlwMuɥTlwMuɨTlwMuɩTlwMuɪTlwMuᵻTlwMuʝTlwMuɭTlwMuᶅTlwMuʟTlwMuɱTlwMuɰTlwMuɲTlwMuɳTlwMuɴTlwMuɵTlwMuɸTlwMuʂTlwMuʃTlwMuƫTlwMuʉTlwMuʊTlwMuᴜTlwMuʋTlwMuʌTlwMwzTlwMuʐTlwMuʑTlwMuʒTlwMuθTlwVTlwMuḁTlwVTlwMuḃTlwVTlwMuḅTlwVTlwMuḇTlwVTlwMuḉTlwVTl
wMuḋTlwVTlwMuḍTl
wVTlwMuḏTlwVTlwMuḑTlwVTlwMuḓTlwVTlwMuḕTlwVTlwMuḗTlwVTlwMuḙTlwVTlwMuḛTlwVTlwMuḝTlwVTlwMuḟTlwVTl wMuḡTl!wVTl"wMuḣTl#wVLdTl$wMuḥTl%wVTl&wMuḧTl'wVTl(wMuḩTl)wVTl*wMuḫTl+wVTl,wMuḭTl-wVTl.wMuḯTl/wVTl0wMuḱTl1wVTl2wMuḳTl3wVTl4wMuḵTl5wVTl6wMuḷTl7wVTl8wMuḹTl9wVTl:wMuḻTl;wVTl<wMuḽTl=wVTl>wMuḿTl?wVTl@wMuṁTlAwVTlBwMuṃTlCwVTlDwMuṅTlEwVTlFwMuṇTlGwVTlHwMuṉTlIwVTlJwMuṋTlKwVTlLwMuṍTlMwVTlNwMuṏTlOwVTlPwMuṑTlQwVTlRwMuṓTlSwVTlTwMuṕTlUwVTlVwMuṗTlWwVTlXwMuṙTlYwVTlZwMuṛTl[wVTl\wMuṝTl]wVTl^wMuṟTl_wVTl`wMuṡTlawVTlbwMuṣTlcwVTldwMuṥTlewVTlfwMuṧTlgwVTlhwMuṩTliwVTljwMuṫTlkwVTllwMuṭTlmwVTlnwMuṯTlowVTlpwMuṱTlqwVTlrwMuṳTlswVTltwMuṵTluwVTlvwMuṷTlwwVTlxwMuṹTlywVTlzwMuṻTl{wVTl|wMuṽTl}wVTl~wMuṿTlwVTlwMuẁTlwVTlwMuẃTlwVTlwMuẅTlwVTlwMuẇTlwVLdTlwMuẉTlwVTlwMuẋTlwVTlwMuẍTlwVTlwMuẏTlwVTlwMuẑTlwVTlwMuẓTlwVTlwMuẕTlwVTlwMuaʾTlwMuṡTlwVTlwMußTlwVTlwMuạTlwVTlwMuảTlwVTlwMuấTlwVTlwMuầTlwVTlwMuẩTlwVTlwMuẫTlwVTlwMuậTlwVTlwMuắTlwVTlwMuằTlwVTlwMuẳTlwVTlwMuẵTlwVTlwMuặTlwVTlwMuẹTlwVTlwMuẻTlwVTlwMuẽTlwVTlwMuếTlwVTlwMuềTlwVTlwMuểTlwVTlwMuễTlwVTlwMuệTlwVTlwMuỉTlwVTlwMuịTlwVTlwMuọTlwVTlwMuỏTlwVTlwMuốTlwVTlwMuồTlwVTlwMuổTlwVTlwMuỗTlwVTlwMuộTlwVTlwMuớTlwVTlwMuờTlwVTlwMuởTlwVTlwMuỡTlwVTlwMuợTlwVTlwMuụTlwVTlwMuủTlwVTlwMuứTlwVTlwMuừTlwVTlwMuửTlwVTlwMuữTlwVTlwMuựLdTlwVTlwMuỳTlwVTlwMuỵTlwVTlwMuỷTlwVTlwMuỹTlwVTlwMuỻTlwVTlwMuỽTlwVTlwMuỿTlwVTlwMuἀTlwMuἁTl
wMuἂTlwMuἃTlwMuἄTl
wMuἅTlwMuἆTlwMuἇTlwVTlwXTlwMuἐTlwMuἑTlwMuἒTlwMuἓTlwMuἔTlwMuἕTlwXTl wVTl(wMuἠTl)wMuἡTl*wMuἢTl+wMuἣTl,wMuἤTl-wMuἥTl.wMuἦTl/wMuἧTl0wVTl8wMuἰTl9wMuἱTl:wMuἲTl;wMuἳTl<wMuἴTl=wMuἵTl>wMuἶTl?wMuἷTl@wVTlFwXTlHwMuὀTlIwMuὁTlJwMuὂTlKwMuὃTlLwMuὄTlMwMuὅTlNwXTlPwVTlXwXTlYwMuὑTlZwXTl[wMuὓTl\wXTl]wMuὕTl^wXTl_wMuὗTl`wVTlhwMuὠTliwMuὡTljwMuὢTlkwMuὣTllwMuὤTlmwMuὥTlnwMuὦTlowMuὧTlpwVTlqwMuάTlrwVTlswMuέTltwVTluwMuήTlvwVTlwwMuίTlxwVTlywMuόTlzwVTl{wMuύTl|wVTl}wMuώTl~wXTlwMuἀιTlwMuἁιTlwMuἂιTlwMuἃιTlwMuἄιTlwMuἅιTlwMuἆιTlwMuἇιLdTlwMuἀιTlwMuἁιTlwMuἂιTlwMuἃιTlwMuἄιTlwMuἅιTlwMuἆιTlwMuἇιTlwMuἠιTlwMuἡιTlwMuἢιTlwMuἣιTlwMuἤιTlwMuἥιTlwMuἦιTlwMuἧιTlwMuἠιTlwMuἡιTlwMuἢιTlwMuἣιTlwMuἤιTlwMuἥιTlwMuἦιTlwMuἧιTlwMuὠιTlwMuὡιTlwMuὢιTlwMuὣιTlwMuὤιTlwMuὥιTlwMuὦιTlwMuὧιTlwMuὠιTlwMuὡιTlwMuὢιTlwMuὣιTlwMuὤιTlwMuὥιTlwMuὦιTlwMuὧιTlwVTlwMuὰιTlwMuαιTlwMuάιTlwXTlwVTlwMuᾶιTlwMuᾰTlwMuᾱTlwMuὰTlwMuάTlwMuαιTlw3u ̓TlwMuιTlw3u ̓Tlw3u ͂Tlw3u ̈͂TlwMuὴιTlwMuηιTlwMuήιTlwXTlwVTlwMuῆιTlwMuὲTlwMuέTlwMuὴTlwMuήTlwMuηιTlw3u ̓̀Tlw3u ̓́Tlw3u ̓͂TlwVTlwMuΐTlwXTlwVTlwMuῐTlwMuῑTlwMuὶTlwMuίTlwXTlw3u ̔̀Tlw3u ̔́Tlw3u ̔͂TlwVTlwMuΰTlwVTlwMuῠTlwMuῡTlwMuὺTlwMuύTlwMuῥTlw3u ̈̀Tlw3u ̈́Tlw3w`TlwXTlwMuὼιTlwMuωιTlwMuώιTlwXTlwVLdTlwMuῶιTlwMuὸTlwMuόTlwMuὼTlwMuώTlwMuωιTlw3u ́Tlw3u ̔TlwXTl w3w Tl wITl wDuTl wXTl wVTl wMu‐Tl wVTl w3u ̳Tl wVTl$ wXTl' wVTl( wXTl/ w3w Tl0 wVTl3 wMu′′Tl4 wMu′′′Tl5 wVTl6 wMu‵‵Tl7 wMu‵‵‵Tl8 wVTl< w3u!!Tl= wVTl> w3u ̅Tl? wVTlG w3u??TlH w3u?!TlI w3u!?TlJ wVTlW wMu′′′′TlX wVTl_ w3w Tl` wITla wXTld wITle wXTlp wMw0Tlq wMwiTlr wXTlt wMw4Tlu wMw5Tlv wMw6Tlw wMw7Tlx wMw8Tly wMw9Tlz w3w+Tl{ wMu−Tl| w3w=Tl} w3w(Tl~ w3w)Tl wMwnTl wMw0Tl wMw1Tl wMw2Tl wMw3Tl wMw4Tl wMw5Tl wMw6Tl wMw7Tl wMw8Tl wMw9Tl w3w+Tl wMu−Tl w3w=Tl w3w(Tl w3w)Tl wXTl wMwaTl wMweTl wMwoTl wMwxTl wMuəTl wMwhTl wMwkTl wMwlTl wMwmTl wMwnTl wMwpTl wMwsTl wMwtTl wXTl wVTl wMarsTl wVTl wXTl wVTl wXTl!w3ua/cTl!w3ua/sTl!wMwcTl!wMu°cTl!wVLdTl!w3uc/oTl!w3uc/uTl!wMuɛTl!wVTl!wMu°fTl
!wMwgTl!wMwhTl!wMuħTl!wMwiTl!wMwlTl!wVTl!wMwnTl!wManoTl!wVTl!wMwpTl!wMwqTl!wMwrTl!wVTl !wMasmTl!!wMatelTl"!wMatmTl#!wVTl$!wMwzTl%!wVTl&!wMuωTl'!wVTl(!wMwzTl)!wVTl*!wMwkTl+!wMuåTl,!wMwbTl-!wMwcTl.!wVTl/!wMweTl1!wMwfTl2!wXTl3!wMwmTl4!wMwoTl5!wMuאTl6!wMuבTl7!wMuגTl8!wMuדTl9!wMwiTl:!wVTl;!wMafaxTl<!wMuπTl=!wMuγTl?!wMuπTl@!wMu∑TlA!wVTlE!wMwdTlG!wMweTlH!wMwiTlI!wMwjTlJ!wVTlP!wMu1⁄7TlQ!wMu1⁄9TlR!wMu1⁄10TlS!wMu1⁄3TlT!wMu2⁄3TlU!wMu1⁄5TlV!wMu2⁄5TlW!wMu3⁄5TlX!wMu4⁄5TlY!wMu1⁄6TlZ!wMu5⁄6Tl[!wMu1⁄8Tl\!wMu3⁄8Tl]!wMu5⁄8Tl^!wMu7⁄8Tl_!wMu1⁄Tl`!wMwiTla!wMaiiTlb!wMaiiiTlc!wMaivTld!wMwvTle!wMaviTlf!wMaviiTlg!wMaviiiTlh!wMaixTli!wMwxTlj!wMaxiTlk!wMaxiiTll!wMwlTlm!wMwcTln!wMwdTlo!wMwmTlp!wMwiTlq!wMaiiTlr!wMaiiiTls!wMaivTlt!wMwvTlu!wMaviTlv!wMaviiTlw!wMaviiiTlx!wMaixTly!wMwxTlz!wMaxiTl{!wMaxiiTl|!wMwlLdTl}!wMwcTl~!wMwdTl!wMwmTl!wVTl!wXTl!wVTl!wMu0⁄3Tl!wVTl!wXTl!wVTl,"wMu∫∫Tl-"wMu∫∫∫Tl."wVTl/"wMu∮∮Tl0"wMu∮∮∮Tl1"wVTl)#wMu〈Tl*#wMu〉Tl+#wVTl'$wXTl@$wVTlK$wXTl`$wMw1Tla$wMw2Tlb$wMw3Tlc$wMw4Tld$wMw5Tle$wMw6Tlf$wMw7Tlg$wMw8Tlh$wMw9Tli$wMu10Tlj$wMu11Tlk$wMu12Tll$wMu13Tlm$wMu14Tln$wMu15Tlo$wMu16Tlp$wMu17Tlq$wMu18Tlr$wMu19Tls$wMu20Tlt$w3u(1)Tlu$w3u(2)Tlv$w3u(3)Tlw$w3u(4)Tlx$w3u(5)Tly$w3u(6)Tlz$w3u(7)Tl{$w3u(8)Tl|$w3u(9)Tl}$w3u(10)Tl~$w3u(11)Tl$w3u(12)Tl$w3u(13)Tl$w3u(14)Tl$w3u(15)Tl$w3u(16)Tl$w3u(17)Tl$w3u(18)Tl$w3u(19)Tl$w3u(20)Tl$wXTl$w3u(a)Tl$w3u(b)Tl$w3u(c)Tl$w3u(d)Tl$w3u(e)Tl$w3u(f)Tl$w3u(g)Tl$w3u(h)Tl$w3u(i)Tl$w3u(j)Tl$w3u(k)Tl$w3u(l)Tl$w3u(m)Tl$w3u(n)Tl$w3u(o)Tl$w3u(p)Tl$w3u(q)Tl$w3u(r)Tl$w3u(s)Tl$w3u(t)Tl$w3u(u)Tl$w3u(v)Tl$w3u(w)Tl$w3u(x)Tl$w3u(y)Tl$w3u(z)Tl$wMwaTl$wMwbTl$wMwcTl$wMwdTl$wMweTl$wMwfTl$wMwgTl$wMwhTl$wMwiTl$wMwjTl$wMwkLdTl$wMwlTl$wMwmTl$wMwnTl$wMwoTl$wMwpTl$wMwqTl$wMwrTl$wMwsTl$wMwtTl$wMwuTl$wMwvTl$wMwwTl$wMwxTl$wMwyTl$wMwzTl$wMwaTl$wMwbTl$wMwcTl$wMwdTl$wMweTl$wMwfTl$wMwgTl$wMwhTl$wMwiTl$wMwjTl$wMwkTl$wMwlTl$wMwmTl$wMwnTl$wMwoTl$wMwpTl$wMwqTl$wMwrTl$wMwsTl$wMwtTl$wMwuTl$wMwvTl$wMwwTl$wMwxTl$wMwyTl$wMwzTl$wMw0Tl$wVTl*wMu∫∫∫∫Tl
*wVTlt*w3u::=Tlu*w3u==Tlv*w3u===Tlw*wVTl*wMu⫝̸Tl*wVTlt+wXTlv+wVTl+wXTl+wVTl,wMuⰰTl,wMuⰱTl,wMuⰲTl,wMuⰳTl,wMuⰴTl,wMuⰵTl,wMuⰶTl,wMuⰷTl,wMuⰸTl,wMuⰹTl
,wMuⰺTl,wMuⰻTl,wMuⰼTl
,wMuⰽTl,wMuⰾTl,wMuⰿTl,wMuⱀTl,wMuⱁTl,wMuⱂTl,wMuⱃTl,wMuⱄTl,wMuⱅTl,wMuⱆTl,wMuⱇTl,wMuⱈTl,wMuⱉTl,wMuⱊTl,wMuⱋTl,wMuⱌTl,wMuⱍTl,wMuⱎTl,wMuⱏTl ,wMuⱐTl!,wMuⱑTl",wMuⱒTl#,wMuⱓTl$,wMuⱔTl%,wMuⱕTl&,wMuⱖTl',wMuⱗTl(,wMuⱘTl),wMuⱙTl*,wMuⱚTl+,wMuⱛTl,,wMuⱜLdTl-,wMuⱝTl.,wMuⱞTl/,wMuⱟTl0,wVTl`,wMuⱡTla,wVTlb,wMuɫTlc,wMuᵽTld,wMuɽTle,wVTlg,wMuⱨTlh,wVTli,wMuⱪTlj,wVTlk,wMuⱬTll,wVTlm,wMuɑTln,wMuɱTlo,wMuɐTlp,wMuɒTlq,wVTlr,wMuⱳTls,wVTlu,wMuⱶTlv,wVTl|,wMwjTl},wMwvTl~,wMuȿTl,wMuɀTl,wMuⲁTl,wVTl,wMuⲃTl,wVTl,wMuⲅTl,wVTl,wMuⲇTl,wVTl,wMuⲉTl,wVTl,wMuⲋTl,wVTl,wMuⲍTl,wVTl,wMuⲏTl,wVTl,wMuⲑTl,wVTl,wMuⲓTl,wVTl,wMuⲕTl,wVTl,wMuⲗTl,wVTl,wMuⲙTl,wVTl,wMuⲛTl,wVTl,wMuⲝTl,wVTl,wMuⲟTl,wVTl,wMuⲡTl,wVTl,wMuⲣTl,wVTl,wMuⲥTl,wVTl,wMuⲧTl,wVTl,wMuⲩTl,wVTl,wMuⲫTl,wVTl,wMuⲭTl,wVTl,wMuⲯTl,wVTl,wMuⲱTl,wVTl,wMuⲳTl,wVTl,wMuⲵTl,wVTl,wMuⲷTl,wVTl,wMuⲹTl,wVTl,wMuⲻTl,wVTl,wMuⲽTl,wVTl,wMuⲿTl,wVTl,wMuⳁTl,wVTl,wMuⳃTl,wVTl,wMuⳅTl,wVTl,wMuⳇLdTl,wVTl,wMuⳉTl,wVTl,wMuⳋTl,wVTl,wMuⳍTl,wVTl,wMuⳏTl,wVTl,wMuⳑTl,wVTl,wMuⳓTl,wVTl,wMuⳕTl,wVTl,wMuⳗTl,wVTl,wMuⳙTl,wVTl,wMuⳛTl,wVTl,wMuⳝTl,wVTl,wMuⳟTl,wVTl,wMuⳡTl,wVTl,wMuⳣTl,wVTl,wMuⳬTl,wVTl,wMuⳮTl,wVTl,wMuⳳTl,wVTl,wXTl,wVTl&-wXTl'-wVTl(-wXTl--wVTl.-wXTl0-wVTlh-wXTlo-wMuⵡTlp-wVTlq-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl-wXTl-wVTl^.wXTl.wVTl.wXTl.wVTl.wMu母Tl.wVTl.wMu龟Tl.wXTl/wMu一Tl/wMu丨Tl/wMu丶Tl/wMu丿Tl/wMu乙Tl/wMu亅Tl/wMu二Tl/wMu亠Tl/wMu人Tl/wMu儿Tl
/wMu入Tl/wMu八Tl/wMu冂Tl
/wMu冖Tl/wMu冫Tl/wMu几Tl/wMu凵Tl/wMu刀Tl/wMu力Tl/wMu勹Tl/wMu匕Tl/wMu匚Tl/wMu匸Tl/wMu十Tl/wMu卜Tl/wMu卩LdTl/wMu厂Tl/wMu厶Tl/wMu又Tl/wMu口Tl/wMu囗Tl/wMu土Tl /wMu士Tl!/wMu夂Tl"/wMu夊Tl#/wMu夕Tl$/wMu大Tl%/wMu女Tl&/wMu子Tl'/wMu宀Tl(/wMu寸Tl)/wMu小Tl*/wMu尢Tl+/wMu尸Tl,/wMu屮Tl-/wMu山Tl./wMu巛Tl//wMu工Tl0/wMu己Tl1/wMu巾Tl2/wMu干Tl3/wMu幺Tl4/wMu广Tl5/wMu廴Tl6/wMu廾Tl7/wMu弋Tl8/wMu弓Tl9/wMu彐Tl:/wMu彡Tl;/wMu彳Tl</wMu心Tl=/wMu戈Tl>/wMu戶Tl?/wMu手Tl@/wMu支TlA/wMu攴TlB/wMu文TlC/wMu斗TlD/wMu斤TlE/wMu方TlF/wMu无TlG/wMu日TlH/wMu曰TlI/wMu月TlJ/wMu木TlK/wMu欠TlL/wMu止TlM/wMu歹TlN/wMu殳TlO/wMu毋TlP/wMu比TlQ/wMu毛TlR/wMu氏TlS/wMu气TlT/wMu水TlU/wMu火TlV/wMu爪TlW/wMu父TlX/wMu爻TlY/wMu爿TlZ/wMu片Tl[/wMu牙Tl\/wMu牛Tl]/wMu犬Tl^/wMu玄Tl_/wMu玉Tl`/wMu瓜Tla/wMu瓦Tlb/wMu甘Tlc/wMu生Tld/wMu用Tle/wMu田Tlf/wMu疋Tlg/wMu疒Tlh/wMu癶Tli/wMu白Tlj/wMu皮Tlk/wMu皿Tll/wMu目Tlm/wMu矛Tln/wMu矢Tlo/wMu石Tlp/wMu示Tlq/wMu禸Tlr/wMu禾Tls/wMu穴Tlt/wMu立Tlu/wMu竹Tlv/wMu米Tlw/wMu糸Tlx/wMu缶Tly/wMu网Tlz/wMu羊Tl{/wMu羽Tl|/wMu老Tl}/wMu而LdTl~/wMu耒Tl/wMu耳Tl/wMu聿Tl/wMu肉Tl/wMu臣Tl/wMu自Tl/wMu至Tl/wMu臼Tl/wMu舌Tl/wMu舛Tl/wMu舟Tl/wMu艮Tl/wMu色Tl/wMu艸Tl/wMu虍Tl/wMu虫Tl/wMu血Tl/wMu行Tl/wMu衣Tl/wMu襾Tl/wMu見Tl/wMu角Tl/wMu言Tl/wMu谷Tl/wMu豆Tl/wMu豕Tl/wMu豸Tl/wMu貝Tl/wMu赤Tl/wMu走Tl/wMu足Tl/wMu身Tl/wMu車Tl/wMu辛Tl/wMu辰Tl/wMu辵Tl/wMu邑Tl/wMu酉Tl/wMu釆Tl/wMu里Tl/wMu金Tl/wMu長Tl/wMu門Tl/wMu阜Tl/wMu隶Tl/wMu隹Tl/wMu雨Tl/wMu靑Tl/wMu非Tl/wMu面Tl/wMu革Tl/wMu韋Tl/wMu韭Tl/wMu音Tl/wMu頁Tl/wMu風Tl/wMu飛Tl/wMu食Tl/wMu首Tl/wMu香Tl/wMu馬Tl/wMu骨Tl/wMu高Tl/wMu髟Tl/wMu鬥Tl/wMu鬯Tl/wMu鬲Tl/wMu鬼Tl/wMu魚Tl/wMu鳥Tl/wMu鹵Tl/wMu鹿Tl/wMu麥Tl/wMu麻Tl/wMu黃Tl/wMu黍Tl/wMu黑Tl/wMu黹Tl/wMu黽Tl/wMu鼎Tl/wMu鼓Tl/wMu鼠Tl/wMu鼻Tl/wMu齊Tl/wMu齒Tl/wMu龍Tl/wMu龜Tl/wMu龠Tl/wXTl0w3w Tl0wVTl0wMw.Tl0wVTl60wMu〒Tl70wVTl80wMu十Tl90wMu卄Tl:0wMu卅Tl;0wVTl@0wXLdTlA0wVTl0wXTl0wVTl0w3u ゙Tl0w3u ゚Tl0wVTl0wMuよりTl0wVTl0wMuコトTl1wXTl1wVTl01wXTl11wMuᄀTl21wMuᄁTl31wMuᆪTl41wMuᄂTl51wMuᆬTl61wMuᆭTl71wMuᄃTl81wMuᄄTl91wMuᄅTl:1wMuᆰTl;1wMuᆱTl<1wMuᆲTl=1wMuᆳTl>1wMuᆴTl?1wMuᆵTl@1wMuᄚTlA1wMuᄆTlB1wMuᄇTlC1wMuᄈTlD1wMuᄡTlE1wMuᄉTlF1wMuᄊTlG1wMuᄋTlH1wMuᄌTlI1wMuᄍTlJ1wMuᄎTlK1wMuᄏTlL1wMuᄐTlM1wMuᄑTlN1wMuᄒTlO1wMuᅡTlP1wMuᅢTlQ1wMuᅣTlR1wMuᅤTlS1wMuᅥTlT1wMuᅦTlU1wMuᅧTlV1wMuᅨTlW1wMuᅩTlX1wMuᅪTlY1wMuᅫTlZ1wMuᅬTl[1wMuᅭTl\1wMuᅮTl]1wMuᅯTl^1wMuᅰTl_1wMuᅱTl`1wMuᅲTla1wMuᅳTlb1wMuᅴTlc1wMuᅵTld1wXTle1wMuᄔTlf1wMuᄕTlg1wMuᇇTlh1wMuᇈTli1wMuᇌTlj1wMuᇎTlk1wMuᇓTll1wMuᇗTlm1wMuᇙTln1wMuᄜTlo1wMuᇝTlp1wMuᇟTlq1wMuᄝTlr1wMuᄞTls1wMuᄠTlt1wMuᄢTlu1wMuᄣTlv1wMuᄧTlw1wMuᄩTlx1wMuᄫTly1wMuᄬTlz1wMuᄭTl{1wMuᄮTl|1wMuᄯTl}1wMuᄲTl~1wMuᄶTl1wMuᅀTl1wMuᅇTl1wMuᅌTl1wMuᇱTl1wMuᇲTl1wMuᅗTl1wMuᅘTl1wMuᅙTl1wMuᆄTl1wMuᆅLdTl1wMuᆈTl1wMuᆑTl1wMuᆒTl1wMuᆔTl1wMuᆞTl1wMuᆡTl1wXTl1wVTl1wMu一Tl1wMu二Tl1wMu三Tl1wMu四Tl1wMu上Tl1wMu中Tl1wMu下Tl1wMu甲Tl1wMu乙Tl1wMu丙Tl1wMu丁Tl1wMu天Tl1wMu地Tl1wMu人Tl1wVTl1wXTl1wVTl2w3u(ᄀ)Tl2w3u(ᄂ)Tl2w3u(ᄃ)Tl2w3u(ᄅ)Tl2w3u(ᄆ)Tl2w3u(ᄇ)Tl2w3u(ᄉ)Tl2w3u(ᄋ)Tl2w3u(ᄌ)Tl2w3u(ᄎ)Tl
2w3u(ᄏ)Tl2w3u(ᄐ)Tl2w3u(ᄑ)Tl
2w3u(ᄒ)Tl2w3u(가)Tl2w3u(나)Tl2w3u(다)Tl2w3u(라)Tl2w3u(마)Tl2w3u(바)Tl2w3u(사)Tl2w3u(아)Tl2w3u(자)Tl2w3u(차)Tl2w3u(카)Tl2w3u(타)Tl2w3u(파)Tl2w3u(하)Tl2w3u(주)Tl2w3u(오전)Tl2w3u(오후)Tl2wXTl 2w3u(一)Tl!2w3u(二)Tl"2w3u(三)Tl#2w3u(四)Tl$2w3u(五)Tl%2w3u(六)Tl&2w3u(七)Tl'2w3u(八)Tl(2w3u(九)Tl)2w3u(十)Tl*2w3u(月)Tl+2w3u(火)Tl,2w3u(水)Tl-2w3u(木)Tl.2w3u(金)Tl/2w3u(土)Tl02w3u(日)Tl12w3u(株)Tl22w3u(有)Tl32w3u(社)Tl42w3u(名)Tl52w3u(特)Tl62w3u(財)Tl72w3u(祝)Tl82w3u(労)Tl92w3u(代)Tl:2w3u(呼)Tl;2w3u(学)Tl<2w3u(監)Tl=2w3u(企)Tl>2w3u(資)Tl?2w3u(協)Tl@2w3u(祭)TlA2w3u(休)TlB2w3u(自)TlC2w3u(至)TlD2wMu問TlE2wMu幼TlF2wMu文TlG2wMu箏TlH2wVTlP2wMapteTlQ2wMu21LdTlR2wMu22TlS2wMu23TlT2wMu24TlU2wMu25TlV2wMu26TlW2wMu27TlX2wMu28TlY2wMu29TlZ2wMu30Tl[2wMu31Tl\2wMu32Tl]2wMu33Tl^2wMu34Tl_2wMu35Tl`2wMuᄀTla2wMuᄂTlb2wMuᄃTlc2wMuᄅTld2wMuᄆTle2wMuᄇTlf2wMuᄉTlg2wMuᄋTlh2wMuᄌTli2wMuᄎTlj2wMuᄏTlk2wMuᄐTll2wMuᄑTlm2wMuᄒTln2wMu가Tlo2wMu나Tlp2wMu다Tlq2wMu라Tlr2wMu마Tls2wMu바Tlt2wMu사Tlu2wMu아Tlv2wMu자Tlw2wMu차Tlx2wMu카Tly2wMu타Tlz2wMu파Tl{2wMu하Tl|2wMu참고Tl}2wMu주의Tl~2wMu우Tl2wVTl2wMu一Tl2wMu二Tl2wMu三Tl2wMu四Tl2wMu五Tl2wMu六Tl2wMu七Tl2wMu八Tl2wMu九Tl2wMu十Tl2wMu月Tl2wMu火Tl2wMu水Tl2wMu木Tl2wMu金Tl2wMu土Tl2wMu日Tl2wMu株Tl2wMu有Tl2wMu社Tl2wMu名Tl2wMu特Tl2wMu財Tl2wMu祝Tl2wMu労Tl2wMu秘Tl2wMu男Tl2wMu女Tl2wMu適Tl2wMu優Tl2wMu印Tl2wMu注Tl2wMu項Tl2wMu休Tl2wMu写Tl2wMu正Tl2wMu上Tl2wMu中Tl2wMu下Tl2wMu左Tl2wMu右Tl2wMu医Tl2wMu宗Tl2wMu学Tl2wMu監Tl2wMu企Tl2wMu資Tl2wMu協Tl2wMu夜Tl2wMu36Tl2wMu37Tl2wMu38Tl2wMu39Tl2wMu40LdTl2wMu41Tl2wMu42Tl2wMu43Tl2wMu44Tl2wMu45Tl2wMu46Tl2wMu47Tl2wMu48Tl2wMu49Tl2wMu50Tl2wMu1月Tl2wMu2月Tl2wMu3月Tl2wMu4月Tl2wMu5月Tl2wMu6月Tl2wMu7月Tl2wMu8月Tl2wMu9月Tl2wMu10月Tl2wMu11月Tl2wMu12月Tl2wMahgTl2wMaergTl2wMaevTl2wMaltdTl2wMuアTl2wMuイTl2wMuウTl2wMuエTl2wMuオTl2wMuカTl2wMuキTl2wMuクTl2wMuケTl2wMuコTl2wMuサTl2wMuシTl2wMuスTl2wMuセTl2wMuソTl2wMuタTl2wMuチTl2wMuツTl2wMuテTl2wMuトTl2wMuナTl2wMuニTl2wMuヌTl2wMuネTl2wMuノTl2wMuハTl2wMuヒTl2wMuフTl2wMuヘTl2wMuホTl2wMuマTl2wMuミTl2wMuムTl2wMuメTl2wMuモTl2wMuヤTl2wMuユTl2wMuヨTl2wMuラTl2wMuリTl2wMuルTl2wMuレTl2wMuロTl2wMuワTl2wMuヰTl2wMuヱTl2wMuヲTl2wMu令和Tl3wMuアパートTl3wMuアルファTl3wMuアンペアTl3wMuアールTl3wMuイニングTl3wMuインチTl3wMuウォンTl3wMuエスクードTl3wMuエーカーTl3wMuオンスTl
3wMuオームTl3wMuカイリTl3wMuカラットTl
3wMuカロリーTl3wMuガロンTl3wMuガンマTl3wMuギガTl3wMuギニーTl3wMuキュリーTl3wMuギルダーTl3wMuキロTl3wMuキログラムTl3wMuキロメートルTl3wMuキロワットTl3wMuグラムTl3wMuグラムトンLdTl3wMuクルゼイロTl3wMuクローネTl3wMuケースTl3wMuコルナTl3wMuコーポTl3wMuサイクルTl 3wMuサンチームTl!3wMuシリングTl"3wMuセンチTl#3wMuセントTl$3wMuダースTl%3wMuデシTl&3wMuドルTl'3wMuトンTl(3wMuナノTl)3wMuノットTl*3wMuハイツTl+3wMuパーセントTl,3wMuパーツTl-3wMuバーレルTl.3wMuピアストルTl/3wMuピクルTl03wMuピコTl13wMuビルTl23wMuファラッドTl33wMuフィートTl43wMuブッシェルTl53wMuフランTl63wMuヘクタールTl73wMuペソTl83wMuペニヒTl93wMuヘルツTl:3wMuペンスTl;3wMuページTl<3wMuベータTl=3wMuポイントTl>3wMuボルトTl?3wMuホンTl@3wMuポンドTlA3wMuホールTlB3wMuホーンTlC3wMuマイクロTlD3wMuマイルTlE3wMuマッハTlF3wMuマルクTlG3wMuマンションTlH3wMuミクロンTlI3wMuミリTlJ3wMuミリバールTlK3wMuメガTlL3wMuメガトンTlM3wMuメートルTlN3wMuヤードTlO3wMuヤールTlP3wMuユアンTlQ3wMuリットルTlR3wMuリラTlS3wMuルピーTlT3wMuルーブルTlU3wMuレムTlV3wMuレントゲンTlW3wMuワットTlX3wMu0点TlY3wMu1点TlZ3wMu2点Tl[3wMu3点Tl\3wMu4点Tl]3wMu5点Tl^3wMu6点Tl_3wMu7点Tl`3wMu8点Tla3wMu9点Tlb3wMu10点Tlc3wMu11点Tld3wMu12点Tle3wMu13点Tlf3wMu14点Tlg3wMu15点Tlh3wMu16点Tli3wMu17点Tlj3wMu18点Tlk3wMu19点Tll3wMu20点Tlm3wMu21点Tln3wMu22点Tlo3wMu23点Tlp3wMu24点Tlq3wMahpaTlr3wMadaTls3wMaauTlt3wMabarTlu3wMaovTlv3wMapcTlw3wMadmTlx3wMadm2Tly3wMadm3Tlz3wMaiuTl{3wMu平成Tl|3wMu昭和Tl}3wMu大正LdTl~3wMu明治Tl3wMu株式会社Tl3wMapaTl3wManaTl3wMuμaTl3wMamaTl3wMakaTl3wMakbTl3wMambTl3wMagbTl3wMacalTl3wMakcalTl3wMapfTl3wManfTl3wMuμfTl3wMuμgTl3wMamgTl3wMakgTl3wMahzTl3wMakhzTl3wMamhzTl3wMaghzTl3wMathzTl3wMuμlTl3wMamlTl3wMadlTl3wMaklTl3wMafmTl3wManmTl3wMuμmTl3wMammTl3wMacmTl3wMakmTl3wMamm2Tl3wMacm2Tl3wMam2Tl3wMakm2Tl3wMamm3Tl3wMacm3Tl3wMam3Tl3wMakm3Tl3wMum∕sTl3wMum∕s2Tl3wMapaTl3wMakpaTl3wMampaTl3wMagpaTl3wMaradTl3wMurad∕sTl3wMurad∕s2Tl3wMapsTl3wMansTl3wMuμsTl3wMamsTl3wMapvTl3wManvTl3wMuμvTl3wMamvTl3wMakvTl3wMamvTl3wMapwTl3wManwTl3wMuμwTl3wMamwTl3wMakwTl3wMamwTl3wMukωTl3wMumωTl3wXTl3wMabqTl3wMaccTl3wMacdTl3wMuc∕kgTl3wXTl3wMadbTl3wMagyTl3wMahaTl3wMahpTl3wMainTl3wMakkTl3wMakmTl3wMaktTl3wMalmTl3wMalnTl3wMalogTl3wMalxTl3wMambTl3wMamilTl3wMamolTl3wMaphTl3wXTl3wMappmTl3wMaprTl3wMasrTl3wMasvTl3wMawbTl3wMuv∕mTl3wMua∕mTl3wMu1日Tl3wMu2日LdTl3wMu3日Tl3wMu4日Tl3wMu5日Tl3wMu6日Tl3wMu7日Tl3wMu8日Tl3wMu9日Tl3wMu10日Tl3wMu11日Tl3wMu12日Tl3wMu13日Tl3wMu14日Tl3wMu15日Tl3wMu16日Tl3wMu17日Tl3wMu18日Tl3wMu19日Tl3wMu20日Tl3wMu21日Tl3wMu22日Tl3wMu23日Tl3wMu24日Tl3wMu25日Tl3wMu26日Tl3wMu27日Tl3wMu28日Tl3wMu29日Tl3wMu30日Tl3wMu31日Tl3wMagalTl4wVTlwXTlwVTlǤwXTlФwVTl,wXTl@wMuꙁTlAwVTlBwMuꙃTlCwVTlDwMuꙅTlEwVTlFwMuꙇTlGwVTlHwMuꙉTlIwVTlJwMuꙋTlKwVTlLwMuꙍTlMwVTlNwMuꙏTlOwVTlPwMuꙑTlQwVTlRwMuꙓTlSwVTlTwMuꙕTlUwVTlVwMuꙗTlWwVTlXwMuꙙTlYwVTlZwMuꙛTl[wVTl\wMuꙝTl]wVTl^wMuꙟTl_wVTl`wMuꙡTlawVTlbwMuꙣTlcwVTldwMuꙥTlewVTlfwMuꙧTlgwVTlhwMuꙩTliwVTljwMuꙫTlkwVTllwMuꙭTlmwVTlwMuꚁTlwVTlwMuꚃTlwVTlwMuꚅTlwVTlwMuꚇTlwVTlwMuꚉTlwVTlwMuꚋTlwVTlwMuꚍTlwVTlwMuꚏTlwVTlwMuꚑTlwVLdTlwMuꚓTlwVTlwMuꚕTlwVTlwMuꚗTlwVTlwMuꚙTlwVTlwMuꚛTlwVTlwMuъTlwMuьTlwVTlwXTlwVTl"wMuꜣTl#wVTl$wMuꜥTl%wVTl&wMuꜧTl'wVTl(wMuꜩTl)wVTl*wMuꜫTl+wVTl,wMuꜭTl-wVTl.wMuꜯTl/wVTl2wMuꜳTl3wVTl4wMuꜵTl5wVTl6wMuꜷTl7wVTl8wMuꜹTl9wVTl:wMuꜻTl;wVTl<wMuꜽTl=wVTl>wMuꜿTl?wVTl@wMuꝁTlAwVTlBwMuꝃTlCwVTlDwMuꝅTlEwVTlFwMuꝇTlGwVTlHwMuꝉTlIwVTlJwMuꝋTlKwVTlLwMuꝍTlMwVTlNwMuꝏTlOwVTlPwMuꝑTlQwVTlRwMuꝓTlSwVTlTwMuꝕTlUwVTlVwMuꝗTlWwVTlXwMuꝙTlYwVTlZwMuꝛTl[wVTl\wMuꝝTl]wVTl^wMuꝟTl_wVTl`wMuꝡTlawVTlbwMuꝣTlcwVTldwMuꝥTlewVTlfwMuꝧTlgwVTlhwMuꝩTliwVTljwMuꝫTlkwVTllwMuꝭTlmwVTlnwMuꝯTlowVTlpwMuꝯTlqwVTlywMuꝺTlzwVTl{wMuꝼTl|wVTl}wMuᵹTl~wMuꝿTlwVLdTlwMuꞁTlwVTlwMuꞃTlwVTlwMuꞅTlwVTlwMuꞇTlwVTlwMuꞌTlwVTlwMuɥTlwVTlwMuꞑTlwVTlwMuꞓTlwVTlwMuꞗTlwVTlwMuꞙTlwVTlwMuꞛTlwVTlwMuꞝTlwVTlwMuꞟTlwVTlwMuꞡTlwVTlwMuꞣTlwVTlwMuꞥTlwVTlwMuꞧTlwVTlwMuꞩTlwVTlwMuɦTlwMuɜTlwMuɡTlwMuɬTlwMuɪTlwVTlwMuʞTlwMuʇTlwMuʝTlwMuꭓTlwMuꞵTlwVTlwMuꞷTlwVTlwMuꞹTlwVTlwMuꞻTlwVTlwMuꞽTlwVTlwMuꞿTlwVTlwMuꟁTlwVTl§wMuꟃTlçwVTlħwMuꞔTlŧwMuʂTlƧwMuᶎTlǧwMuꟈTlȧwVTlɧwMuꟊTlʧwVTl˧wXTlЧwMuꟑTlѧwVTlҧwXTlӧwVTlԧwXTlէwVTl֧wMuꟗTlקwVTlاwMuꟙTl٧wVTlڧwXTlwMwcTlwMwfTlwMwqTlwMuꟶTlwVTlwMuħTlwMuœTlwVTl-wXTl0wVTl:wXTl@wVTlxwXTlwVTlƨwXTlΨwVTlڨwXTlwVTlTwXLdTl_wVTl}wXTlwVTlΩwXTlϩwVTlکwXTlީwVTlwXTlwVTl7wXTl@wVTlNwXTlPwVTlZwXTl\wVTlêwXTl۪wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTl wVTl'wXTl(wVTl/wXTl0wVTl\wMuꜧTl]wMuꬷTl^wMuɫTl_wMuꭒTl`wVTliwMuʍTljwVTllwXTlpwMuᎠTlqwMuᎡTlrwMuᎢTlswMuᎣTltwMuᎤTluwMuᎥTlvwMuᎦTlwwMuᎧTlxwMuᎨTlywMuᎩTlzwMuᎪTl{wMuᎫTl|wMuᎬTl}wMuᎭTl~wMuᎮTlwMuᎯTlwMuᎰTlwMuᎱTlwMuᎲTlwMuᎳTlwMuᎴTlwMuᎵTlwMuᎶTlwMuᎷTlwMuᎸTlwMuᎹTlwMuᎺTlwMuᎻTlwMuᎼTlwMuᎽTlwMuᎾTlwMuᎿTlwMuᏀTlwMuᏁTlwMuᏂTlwMuᏃTlwMuᏄTlwMuᏅTlwMuᏆTlwMuᏇTlwMuᏈTlwMuᏉTlwMuᏊTlwMuᏋTlwMuᏌTlwMuᏍTlwMuᏎTlwMuᏏTlwMuᏐTlwMuᏑTlwMuᏒTlwMuᏓTlwMuᏔTlwMuᏕTlwMuᏖTlwMuᏗTlwMuᏘTlwMuᏙTlwMuᏚTlwMuᏛTlwMuᏜTlwMuᏝTlwMuᏞLdTlwMuᏟTlwMuᏠTlwMuᏡTlwMuᏢTlwMuᏣTlwMuᏤTlwMuᏥTlwMuᏦTlwMuᏧTlwMuᏨTlwMuᏩTlwMuᏪTlwMuᏫTlwMuᏬTlwMuᏭTlwMuᏮTlwMuᏯTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMu豈TlwMu更TlwMu車TlwMu賈TlwMu滑TlwMu串TlwMu句TlwMu龜TlwMu契Tl
wMu金TlwMu喇TlwMu奈Tl
wMu懶TlwMu癩TlwMu羅TlwMu蘿TlwMu螺TlwMu裸TlwMu邏TlwMu樂TlwMu洛TlwMu烙TlwMu珞TlwMu落TlwMu酪TlwMu駱TlwMu亂TlwMu卵TlwMu欄TlwMu爛TlwMu蘭Tl wMu鸞Tl!wMu嵐Tl"wMu濫Tl#wMu藍Tl$wMu襤Tl%wMu拉Tl&wMu臘Tl'wMu蠟Tl(wMu廊Tl)wMu朗Tl*wMu浪Tl+wMu狼Tl,wMu郎Tl-wMu來Tl.wMu冷Tl/wMu勞Tl0wMu擄Tl1wMu櫓Tl2wMu爐Tl3wMu盧Tl4wMu老Tl5wMu蘆Tl6wMu虜Tl7wMu路Tl8wMu露Tl9wMu魯Tl:wMu鷺Tl;wMu碌Tl<wMu祿Tl=wMu綠Tl>wMu菉Tl?wMu錄Tl@wMu鹿TlAwMu論TlBwMu壟TlCwMu弄TlDwMu籠TlEwMu聾TlFwMu牢TlGwMu磊TlHwMu賂TlIwMu雷LdTlJwMu壘TlKwMu屢TlLwMu樓TlMwMu淚TlNwMu漏TlOwMu累TlPwMu縷TlQwMu陋TlRwMu勒TlSwMu肋TlTwMu凜TlUwMu凌TlVwMu稜TlWwMu綾TlXwMu菱TlYwMu陵TlZwMu讀Tl[wMu拏Tl\wMu樂Tl]wMu諾Tl^wMu丹Tl_wMu寧Tl`wMu怒TlawMu率TlbwMu異TlcwMu北TldwMu磻TlewMu便TlfwMu復TlgwMu不TlhwMu泌TliwMu數TljwMu索TlkwMu參TllwMu塞TlmwMu省TlnwMu葉TlowMu說TlpwMu殺TlqwMu辰TlrwMu沈TlswMu拾TltwMu若TluwMu掠TlvwMu略TlwwMu亮TlxwMu兩TlywMu凉TlzwMu梁Tl{wMu糧Tl|wMu良Tl}wMu諒Tl~wMu量TlwMu勵TlwMu呂TlwMu女TlwMu廬TlwMu旅TlwMu濾TlwMu礪TlwMu閭TlwMu驪TlwMu麗TlwMu黎TlwMu力TlwMu曆TlwMu歷TlwMu轢TlwMu年TlwMu憐TlwMu戀TlwMu撚TlwMu漣TlwMu煉TlwMu璉TlwMu秊TlwMu練TlwMu聯TlwMu輦TlwMu蓮TlwMu連TlwMu鍊TlwMu列TlwMu劣TlwMu咽TlwMu烈TlwMu裂TlwMu說TlwMu廉TlwMu念TlwMu捻TlwMu殮TlwMu簾TlwMu獵TlwMu令TlwMu囹TlwMu寧TlwMu嶺TlwMu怜TlwMu玲LdTlwMu瑩TlwMu羚TlwMu聆TlwMu鈴TlwMu零TlwMu靈TlwMu領TlwMu例TlwMu禮TlwMu醴TlwMu隸TlwMu惡TlwMu了TlwMu僚TlwMu寮TlwMu尿TlwMu料TlwMu樂TlwMu燎TlwMu療TlwMu蓼TlwMu遼TlwMu龍TlwMu暈TlwMu阮TlwMu劉TlwMu杻TlwMu柳TlwMu流TlwMu溜TlwMu琉TlwMu留TlwMu硫TlwMu紐TlwMu類TlwMu六TlwMu戮TlwMu陸TlwMu倫TlwMu崙TlwMu淪TlwMu輪TlwMu律TlwMu慄TlwMu栗TlwMu率TlwMu隆TlwMu利TlwMu吏TlwMu履TlwMu易TlwMu李TlwMu梨TlwMu泥TlwMu理TlwMu痢TlwMu罹TlwMu裏TlwMu裡TlwMu里TlwMu離TlwMu匿TlwMu溺TlwMu吝TlwMu燐TlwMu璘TlwMu藺TlwMu隣TlwMu鱗TlwMu麟TlwMu林TlwMu淋TlwMu臨TlwMu立TlwMu笠TlwMu粒TlwMu狀TlwMu炙TlwMu識TlwMu什TlwMu茶TlwMu刺TlwMu切TlwMu度TlwMu拓TlwMu糖TlwMu宅TlwMu洞TlwMu暴TlwMu輻TlwMu行TlwMu降Tl
wMu見TlwMu廓TlwMu兀Tl
wMu嗀TlwVTlwMu塚TlwVTlwMu晴LdTlwVTlwMu凞TlwMu猪TlwMu益TlwMu礼TlwMu神TlwMu祥TlwMu福TlwMu靖TlwMu精TlwMu羽TlwVTl wMu蘒Tl!wVTl"wMu諸Tl#wVTl%wMu逸Tl&wMu都Tl'wVTl*wMu飯Tl+wMu飼Tl,wMu館Tl-wMu鶴Tl.wMu郞Tl/wMu隷Tl0wMu侮Tl1wMu僧Tl2wMu免Tl3wMu勉Tl4wMu勤Tl5wMu卑Tl6wMu喝Tl7wMu嘆Tl8wMu器Tl9wMu塀Tl:wMu墨Tl;wMu層Tl<wMu屮Tl=wMu悔Tl>wMu慨Tl?wMu憎Tl@wMu懲TlAwMu敏TlBwMu既TlCwMu暑TlDwMu梅TlEwMu海TlFwMu渚TlGwMu漢TlHwMu煮TlIwMu爫TlJwMu琢TlKwMu碑TlLwMu社TlMwMu祉TlNwMu祈TlOwMu祐TlPwMu祖TlQwMu祝TlRwMu禍TlSwMu禎TlTwMu穀TlUwMu突TlVwMu節TlWwMu練TlXwMu縉TlYwMu繁TlZwMu署Tl[wMu者Tl\wMu臭Tl]wMu艹Tl_wMu著Tl`wMu褐TlawMu視TlbwMu謁TlcwMu謹TldwMu賓TlewMu贈TlfwMu辶TlgwMu逸TlhwMu難TliwMu響TljwMu頻TlkwMu恵TllwMu𤋮TlmwMu舘TlnwXTlpwMu並TlqwMu况TlrwMu全TlswMu侀TltwMu充TluwMu冀TlvwMu勇TlwwMu勺TlxwMu喝TlywMu啕TlzwMu喙Tl{wMu嗢Tl|wMu塚LdTl}wMu墳Tl~wMu奄TlwMu奔TlwMu婢TlwMu嬨TlwMu廒TlwMu廙TlwMu彩TlwMu徭TlwMu惘TlwMu慎TlwMu愈TlwMu憎TlwMu慠TlwMu懲TlwMu戴TlwMu揄TlwMu搜TlwMu摒TlwMu敖TlwMu晴TlwMu朗TlwMu望TlwMu杖TlwMu歹TlwMu殺TlwMu流TlwMu滛TlwMu滋TlwMu漢TlwMu瀞TlwMu煮TlwMu瞧TlwMu爵TlwMu犯TlwMu猪TlwMu瑱TlwMu甆TlwMu画TlwMu瘝TlwMu瘟TlwMu益TlwMu盛TlwMu直TlwMu睊TlwMu着TlwMu磌TlwMu窱TlwMu節TlwMu类TlwMu絛TlwMu練TlwMu缾TlwMu者TlwMu荒TlwMu華TlwMu蝹TlwMu襁TlwMu覆TlwMu視TlwMu調TlwMu諸TlwMu請TlwMu謁TlwMu諾TlwMu諭TlwMu謹TlwMu變TlwMu贈TlwMu輸TlwMu遲TlwMu醙TlwMu鉶TlwMu陼TlwMu難TlwMu靖TlwMu韛TlwMu響TlwMu頋TlwMu頻TlwMu鬒TlwMu龜TlwMu𢡊TlwMu𢡄TlwMu𣏕TlwMu㮝TlwMu䀘TlwMu䀹TlwMu𥉉TlwMu𥳐TlwMu𧻓TlwMu齃TlwMu龎TlwXTlwMaffTlwMafiTlwMaflTlwMaffiTlwMafflTlwMastLdTlwXTlwMuմնTlwMuմեTlwMuմիTlwMuվնTlwMuմխTlwXTlwMuיִTlwVTlwMuײַTl wMuעTl!wMuאTl"wMuדTl#wMuהTl$wMuכTl%wMuלTl&wMuםTl'wMuרTl(wMuתTl)w3w+Tl*wMuשׁTl+wMuשׂTl,wMuשּׁTl-wMuשּׂTl.wMuאַTl/wMuאָTl0wMuאּTl1wMuבּTl2wMuגּTl3wMuדּTl4wMuהּTl5wMuוּTl6wMuזּTl7wXTl8wMuטּTl9wMuיּTl:wMuךּTl;wMuכּTl<wMuלּTl=wXTl>wMuמּTl?wXTl@wMuנּTlAwMuסּTlBwXTlCwMuףּTlDwMuפּTlEwXTlFwMuצּTlGwMuקּTlHwMuרּTlIwMuשּTlJwMuתּTlKwMuוֹTlLwMuבֿTlMwMuכֿTlNwMuפֿTlOwMuאלTlPwMuٱTlRwMuٻTlVwMuپTlZwMuڀTl^wMuٺTlbwMuٿTlfwMuٹTljwMuڤTlnwMuڦTlrwMuڄTlvwMuڃTlzwMuچTl~wMuڇTlwMuڍTlwMuڌTlwMuڎTlwMuڈTlwMuژTlwMuڑTlwMuکTlwMuگTlwMuڳTlwMuڱTlwMuںTlwMuڻTlwMuۀTlwMuہTlwMuھTlwMuےTlwMuۓTlwVTlwXTlwMuڭTlwMuۇTlwMuۆTlwMuۈTlwMuۇٴTlwMuۋTlwMuۅTlwMuۉTlwMuېTlwMuىLdTlwMuئاTlwMuئەTlwMuئوTlwMuئۇTlwMuئۆTlwMuئۈTlwMuئېTlwMuئىTlwMuیTlwMuئجTlwMuئحTlwMuئمTlwMuئىTlwMuئيTlwMuبجTlwMuبحTlwMuبخTlwMuبمTlwMuبىTl
wMuبيTlwMuتجTlwMuتحTl
wMuتخTlwMuتمTlwMuتىTlwMuتيTlwMuثجTlwMuثمTlwMuثىTlwMuثيTlwMuجحTlwMuجمTlwMuحجTlwMuحمTlwMuخجTlwMuخحTlwMuخمTlwMuسجTlwMuسحTlwMuسخTlwMuسمTl wMuصحTl!wMuصمTl"wMuضجTl#wMuضحTl$wMuضخTl%wMuضمTl&wMuطحTl'wMuطمTl(wMuظمTl)wMuعجTl*wMuعمTl+wMuغجTl,wMuغمTl-wMuفجTl.wMuفحTl/wMuفخTl0wMuفمTl1wMuفىTl2wMuفيTl3wMuقحTl4wMuقمTl5wMuقىTl6wMuقيTl7wMuكاTl8wMuكجTl9wMuكحTl:wMuكخTl;wMuكلTl<wMuكمTl=wMuكىTl>wMuكيTl?wMuلجTl@wMuلحTlAwMuلخTlBwMuلمTlCwMuلىTlDwMuليTlEwMuمجTlFwMuمحTlGwMuمخTlHwMuممTlIwMuمىTlJwMuميTlKwMuنجTlLwMuنحTlMwMuنخTlNwMuنمTlOwMuنىTlPwMuنيTlQwMuهجTlRwMuهمTlSwMuهىTlTwMuهيTlUwMuيجTlVwMuيحTlWwMuيخTlXwMuيمTlYwMuيىTlZwMuييLdTl[wMuذٰTl\wMuرٰTl]wMuىٰTl^w3u ٌّTl_w3u ٍّTl`w3u َّTlaw3u ُّTlbw3u ِّTlcw3u ّٰTldwMuئرTlewMuئزTlfwMuئمTlgwMuئنTlhwMuئىTliwMuئيTljwMuبرTlkwMuبزTllwMuبمTlmwMuبنTlnwMuبىTlowMuبيTlpwMuترTlqwMuتزTlrwMuتمTlswMuتنTltwMuتىTluwMuتيTlvwMuثرTlwwMuثزTlxwMuثمTlywMuثنTlzwMuثىTl{wMuثيTl|wMuفىTl}wMuفيTl~wMuقىTlwMuقيTlwMuكاTlwMuكلTlwMuكمTlwMuكىTlwMuكيTlwMuلمTlwMuلىTlwMuليTlwMuماTlwMuممTlwMuنرTlwMuنزTlwMuنمTlwMuننTlwMuنىTlwMuنيTlwMuىٰTlwMuيرTlwMuيزTlwMuيمTlwMuينTlwMuيىTlwMuييTlwMuئجTlwMuئحTlwMuئخTlwMuئمTlwMuئهTlwMuبجTlwMuبحTlwMuبخTlwMuبمTlwMuبهTlwMuتجTlwMuتحTlwMuتخTlwMuتمTlwMuتهTlwMuثمTlwMuجحTlwMuجمTlwMuحجTlwMuحمTlwMuخجTlwMuخمTlwMuسجTlwMuسحTlwMuسخTlwMuسمTlwMuصحTlwMuصخTlwMuصمTlwMuضجTlwMuضحTlwMuضخTlwMuضمTlwMuطحTlwMuظمTlwMuعجTlwMuعمTlwMuغجTlwMuغمTlwMuفجLdTlwMuفحTlwMuفخTlwMuفمTlwMuقحTlwMuقمTlwMuكجTlwMuكحTlwMuكخTlwMuكلTlwMuكمTlwMuلجTlwMuلحTlwMuلخTlwMuلمTlwMuلهTlwMuمجTlwMuمحTlwMuمخTlwMuممTlwMuنجTlwMuنحTlwMuنخTlwMuنمTlwMuنهTlwMuهجTlwMuهمTlwMuهٰTlwMuيجTlwMuيحTlwMuيخTlwMuيمTlwMuيهTlwMuئمTlwMuئهTlwMuبمTlwMuبهTlwMuتمTlwMuتهTlwMuثمTlwMuثهTlwMuسمTlwMuسهTlwMuشمTlwMuشهTlwMuكلTlwMuكمTlwMuلمTlwMuنمTlwMuنهTlwMuيمTlwMuيهTlwMuـَّTlwMuـُّTlwMuـِّTlwMuطىTlwMuطيTlwMuعىTlwMuعيTlwMuغىTlwMuغيTlwMuسىTlwMuسيTlwMuشىTlwMuشيTlwMuحىTlwMuحيTlwMuجىTlwMuجيTlwMuخىTlwMuخيTlwMuصىTlwMuصيTlwMuضىTlwMuضيTlwMuشجTl
wMuشحTlwMuشخTlwMuشمTl
wMuشرTlwMuسرTlwMuصرTlwMuضرTlwMuطىTlwMuطيTlwMuعىTlwMuعيTlwMuغىTlwMuغيTlwMuسىTlwMuسيTlwMuشىTlwMuشيTlwMuحىTlwMuحيTlwMuجىTlwMuجيTlwMuخىTl wMuخيTl!wMuصىTl"wMuصيLdTl#wMuضىTl$wMuضيTl%wMuشجTl&wMuشحTl'wMuشخTl(wMuشمTl)wMuشرTl*wMuسرTl+wMuصرTl,wMuضرTl-wMuشجTl.wMuشحTl/wMuشخTl0wMuشمTl1wMuسهTl2wMuشهTl3wMuطمTl4wMuسجTl5wMuسحTl6wMuسخTl7wMuشجTl8wMuشحTl9wMuشخTl:wMuطمTl;wMuظمTl<wMuاًTl>wVTlPwMuتجمTlQwMuتحجTlSwMuتحمTlTwMuتخمTlUwMuتمجTlVwMuتمحTlWwMuتمخTlXwMuجمحTlZwMuحميTl[wMuحمىTl\wMuسحجTl]wMuسجحTl^wMuسجىTl_wMuسمحTlawMuسمجTlbwMuسممTldwMuصححTlfwMuصممTlgwMuشحمTliwMuشجيTljwMuشمخTllwMuشممTlnwMuضحىTlowMuضخمTlqwMuطمحTlswMuطممTltwMuطميTluwMuعجمTlvwMuعممTlxwMuعمىTlywMuغممTlzwMuغميTl{wMuغمىTl|wMuفخمTl~wMuقمحTlwMuقممTlwMuلحمTlwMuلحيTlwMuلحىTlwMuلججTlwMuلخمTlwMuلمحTlwMuمحجTlwMuمحمTlwMuمحيTlwMuمجحTlwMuمجمTlwMuمخجTlwMuمخمTlwXTlwMuمجخTlwMuهمجTlwMuهممTlwMuنحمTlwMuنحىTlwMuنجمTlwMuنجىTlwMuنميTlwMuنمىTlwMuيممTlwMuبخيTlwMuتجيTlwMuتجىTlwMuتخيTlwMuتخىTlwMuتميTlwMuتمىTlwMuجميTlwMuجحىTlwMuجمىTlwMuسخىTlwMuصحيTlwMuشحيLdTlwMuضحيTlwMuلجيTlwMuلميTlwMuيحيTlwMuيجيTlwMuيميTlwMuمميTlwMuقميTlwMuنحيTlwMuقمحTlwMuلحمTlwMuعميTlwMuكميTlwMuنجحTlwMuمخيTlwMuلجمTlwMuكممTlwMuلجمTlwMuنجحTlwMuجحيTlwMuحجيTlwMuمجيTlwMuفميTlwMuبحيTlwMuكممTlwMuعجمTlwMuصممTlwMuسخيTlwMuنجيTlwXTlwVTlwXTlwMuصلےTlwMuقلےTlwMuاللهTlwMuاكبرTlwMuمحمدTlwMuصلعمTlwMuرسولTlwMuعليهTlwMuوسلمTlwMuصلىTlw3uصلى الله عليه وسلمTlw3uجل جلالهTlwMuریالTlwVTlwITlw3w,TlwMu、TlwXTlw3w:Tlw3w;Tlw3w!Tlw3w?TlwMu〖TlwMu〗TlwXTl wVTl0wXTl1wMu—Tl2wMu–Tl3w3w_Tl5w3w(Tl6w3w)Tl7w3w{Tl8w3w}Tl9wMu〔Tl:wMu〕Tl;wMu【Tl<wMu】Tl=wMu《Tl>wMu》Tl?wMu〈Tl@wMu〉TlAwMu「TlBwMu」TlCwMu『TlDwMu』TlEwVTlGw3w[TlHw3w]TlIw3u ̅TlMw3w_TlPw3w,TlQwMu、TlRwXTlTw3w;TlUw3w:TlVw3w?TlWw3w!TlXwMu—TlYw3w(TlZw3w)Tl[w3w{Tl\w3w}Tl]wMu〔Tl^wMu〕Tl_w3w#Tl`w3w&Tlaw3w*LdTlbw3w+TlcwMw-Tldw3w<Tlew3w>Tlfw3w=TlgwXTlhw3w\Tliw3w$Tljw3w%Tlkw3w@TllwXTlpw3u ًTlqwMuـًTlrw3u ٌTlswVTltw3u ٍTluwXTlvw3u َTlwwMuـَTlxw3u ُTlywMuـُTlzw3u ِTl{wMuـِTl|w3u ّTl}wMuـّTl~w3u ْTlwMuـْTlwMuءTlwMuآTlwMuأTlwMuؤTlwMuإTlwMuئTlwMuاTlwMuبTlwMuةTlwMuتTlwMuثTlwMuجTlwMuحTlwMuخTlwMuدTlwMuذTlwMuرTlwMuزTlwMuسTlwMuشTlwMuصTlwMuضTlwMuطTlwMuظTlwMuعTlwMuغTlwMuفTlwMuقTlwMuكTlwMuلTlwMuمTlwMuنTlwMuهTlwMuوTlwMuىTlwMuيTlwMuلآTlwMuلأTlwMuلإTlwMuلاTlwXTlwITlwXTlw3w!Tlw3w"Tlw3w#Tlw3w$Tlw3w%Tlw3w&Tlw3w'Tlw3w(Tlw3w)Tl
w3w*Tlw3w+Tlw3w,Tl
wMw-TlwMw.Tlw3w/TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9Tlw3w:Tlw3w;Tlw3w<Tlw3w=Tlw3w>LdTlw3w?Tl w3w@Tl!wMwaTl"wMwbTl#wMwcTl$wMwdTl%wMweTl&wMwfTl'wMwgTl(wMwhTl)wMwiTl*wMwjTl+wMwkTl,wMwlTl-wMwmTl.wMwnTl/wMwoTl0wMwpTl1wMwqTl2wMwrTl3wMwsTl4wMwtTl5wMwuTl6wMwvTl7wMwwTl8wMwxTl9wMwyTl:wMwzTl;w3w[Tl<w3w\Tl=w3w]Tl>w3w^Tl?w3w_Tl@w3w`TlAwMwaTlBwMwbTlCwMwcTlDwMwdTlEwMweTlFwMwfTlGwMwgTlHwMwhTlIwMwiTlJwMwjTlKwMwkTlLwMwlTlMwMwmTlNwMwnTlOwMwoTlPwMwpTlQwMwqTlRwMwrTlSwMwsTlTwMwtTlUwMwuTlVwMwvTlWwMwwTlXwMwxTlYwMwyTlZwMwzTl[w3w{Tl\w3w|Tl]w3w}Tl^w3w~Tl_wMu⦅Tl`wMu⦆TlawMw.TlbwMu「TlcwMu」TldwMu、TlewMu・TlfwMuヲTlgwMuァTlhwMuィTliwMuゥTljwMuェTlkwMuォTllwMuャTlmwMuュTlnwMuョTlowMuッTlpwMuーTlqwMuアTlrwMuイTlswMuウTltwMuエTluwMuオTlvwMuカTlwwMuキTlxwMuクTlywMuケTlzwMuコTl{wMuサTl|wMuシTl}wMuスTl~wMuセTlwMuソTlwMuタTlwMuチTlwMuツLdTlwMuテTlwMuトTlwMuナTlwMuニTlwMuヌTlwMuネTlwMuノTlwMuハTlwMuヒTlwMuフTlwMuヘTlwMuホTlwMuマTlwMuミTlwMuムTlwMuメTlwMuモTlwMuヤTlwMuユTlwMuヨTlwMuラTlwMuリTlwMuルTlwMuレTlwMuロTlwMuワTlwMuンTlwMu゙TlwMu゚TlwXTlwMuᄀTlwMuᄁTlwMuᆪTlwMuᄂTlwMuᆬTlwMuᆭTlwMuᄃTlwMuᄄTlwMuᄅTlwMuᆰTlwMuᆱTlwMuᆲTlwMuᆳTlwMuᆴTlwMuᆵTlwMuᄚTlwMuᄆTlwMuᄇTlwMuᄈTlwMuᄡTlwMuᄉTlwMuᄊTlwMuᄋTlwMuᄌTlwMuᄍTlwMuᄎTlwMuᄏTlwMuᄐTlwMuᄑTlwMuᄒTlwXTlwMuᅡTlwMuᅢTlwMuᅣTlwMuᅤTlwMuᅥTlwMuᅦTlwXTlwMuᅧTlwMuᅨTlwMuᅩTlwMuᅪTlwMuᅫTlwMuᅬTlwXTlwMuᅭTlwMuᅮTlwMuᅯTlwMuᅰTlwMuᅱTlwMuᅲTlwXTlwMuᅳTlwMuᅴTlwMuᅵTlwXTlwMu¢TlwMu£TlwMu¬Tlw3u ̄TlwMu¦TlwMu¥TlwMu₩TlwXTlwMu│TlwMu←TlwMu↑TlwMu→TlwMu↓TlwMu■LdTlwMu○TlwXTlwVTlwXTl
wVTl'wXTl(wVTl;wXTl<wVTl>wXTl?wVTlNwXTlPwVTl^wXTlwVTlwXTlwVTlwXTlwVTl4wXTl7wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl$wXTl-wVTlKwXTlPwVTl{wXTlwVTlwXTlwVTlwXTlwVTlwXTlwMu𐐨TlwMu𐐩TlwMu𐐪TlwMu𐐫TlwMu𐐬TlwMu𐐭TlwMu𐐮TlwMu𐐯TlwMu𐐰TlwMu𐐱Tl
wMu𐐲TlwMu𐐳TlwMu𐐴Tl
wMu𐐵TlwMu𐐶TlwMu𐐷TlwMu𐐸TlwMu𐐹TlwMu𐐺TlwMu𐐻TlwMu𐐼TlwMu𐐽TlwMu𐐾TlwMu𐐿TlwMu𐑀TlwMu𐑁TlwMu𐑂TlwMu𐑃TlwMu𐑄TlwMu𐑅TlwMu𐑆TlwMu𐑇Tl wMu𐑈Tl!wMu𐑉Tl"wMu𐑊Tl#wMu𐑋Tl$wMu𐑌Tl%wMu𐑍Tl&wMu𐑎Tl'wMu𐑏Tl(wVTlwXTlwVTlwXTlwMu𐓘TlwMu𐓙TlwMu𐓚TlwMu𐓛TlwMu𐓜TlwMu𐓝TlwMu𐓞TlwMu𐓟TlwMu𐓠TlwMu𐓡LdTlwMu𐓢TlwMu𐓣TlwMu𐓤TlwMu𐓥TlwMu𐓦TlwMu𐓧TlwMu𐓨TlwMu𐓩TlwMu𐓪TlwMu𐓫TlwMu𐓬TlwMu𐓭TlwMu𐓮TlwMu𐓯TlwMu𐓰TlwMu𐓱TlwMu𐓲TlwMu𐓳TlwMu𐓴TlwMu𐓵TlwMu𐓶TlwMu𐓷TlwMu𐓸TlwMu𐓹TlwMu𐓺TlwMu𐓻TlwXTlwVTlwXTlwVTl(wXTl0wVTldwXTlowVTlpwMu𐖗TlqwMu𐖘TlrwMu𐖙TlswMu𐖚TltwMu𐖛TluwMu𐖜TlvwMu𐖝TlwwMu𐖞TlxwMu𐖟TlywMu𐖠TlzwMu𐖡Tl{wXTl|wMu𐖣Tl}wMu𐖤Tl~wMu𐖥TlwMu𐖦TlwMu𐖧TlwMu𐖨TlwMu𐖩TlwMu𐖪TlwMu𐖫TlwMu𐖬TlwMu𐖭TlwMu𐖮TlwMu𐖯TlwMu𐖰TlwMu𐖱TlwXTlwMu𐖳TlwMu𐖴TlwMu𐖵TlwMu𐖶TlwMu𐖷TlwMu𐖸TlwMu𐖹TlwXTlwMu𐖻TlwMu𐖼TlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl7wXTl@wVTlVwXTl`wVTlhwXTlwVTlwMuːTlwMuˑTlwMuæTlwMuʙTlwMuɓTlwXTlwMuʣTlwMuꭦTlwMuʥTlwMuʤTlwMuɖTlwMuɗLdTlwMuᶑTlwMuɘTlwMuɞTlwMuʩTlwMuɤTlwMuɢTlwMuɠTlwMuʛTlwMuħTlwMuʜTlwMuɧTlwMuʄTlwMuʪTlwMuʫTlwMuɬTlwMu𝼄TlwMuꞎTlwMuɮTlwMu𝼅TlwMuʎTlwMu𝼆TlwMuøTlwMuɶTlwMuɷTlwMwqTlwMuɺTlwMu𝼈TlwMuɽTlwMuɾTlwMuʀTlwMuʨTlwMuʦTlwMuꭧTlwMuʧTlwMuʈTlwMuⱱTlwXTlwMuʏTlwMuʡTlwMuʢTlwMuʘTlwMuǀTlwMuǁTlwMuǂTlwMu𝼊TlwMu𝼞TlwXTlwVTlwXTlwVTlwXTl
wVTl6wXTl7wVTl9wXTl<wVTl=wXTl?wVTlVwXTlWwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl:wXTl?wVTl@wXTlwVTlwXTlwVTlwXTlwVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTl6
wXTl8
wVTl;
wXTl?
wVTlI
wXTlP
wVTlY
wXTl`
wVTl
wXTl
wVTl
wXTl
wVTl
wXTlwVLdTl6wXTl9wVTlVwXTlXwVTlswXTlxwVTlwXTlwVTlwXTlwVTlwXTlwVTlIwXTlwMu𐳀TlwMu𐳁TlwMu𐳂TlwMu𐳃TlwMu𐳄TlwMu𐳅TlwMu𐳆TlwMu𐳇TlwMu𐳈TlwMu𐳉TlwMu𐳊TlwMu𐳋TlwMu𐳌TlwMu𐳍TlwMu𐳎TlwMu𐳏TlwMu𐳐TlwMu𐳑TlwMu𐳒TlwMu𐳓TlwMu𐳔TlwMu𐳕TlwMu𐳖TlwMu𐳗TlwMu𐳘TlwMu𐳙TlwMu𐳚TlwMu𐳛TlwMu𐳜TlwMu𐳝TlwMu𐳞TlwMu𐳟TlwMu𐳠TlwMu𐳡TlwMu𐳢TlwMu𐳣TlwMu𐳤TlwMu𐳥TlwMu𐳦TlwMu𐳧TlwMu𐳨TlwMu𐳩TlwMu𐳪TlwMu𐳫TlwMu𐳬TlwMu𐳭TlwMu𐳮TlwMu𐳯TlwMu𐳰TlwMu𐳱TlwMu𐳲TlwXTlwVTlwXTlwVTl(
wXTl0
wVTl:
wXTl`wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl(wXTl0wVTlZwXTlpwVTlwXTlwVTlwXTlwVTlwXTlwVTlNwXTlRwVTlvwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVLdTlwXTlwVTl5wXTl6wVTlHwXTlPwVTlwwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlBwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl
wXTlwVTlwXTlwVTl)wXTl*wVTl1wXTl2wVTl4wXTl5wVTl:wXTl;wVTlEwXTlGwVTlIwXTlKwVTlNwXTlPwVTlQwXTlWwVTlXwXTl]wVTldwXTlfwVTlmwXTlpwVTluwXTlwVTl\wXTl]wVTlbwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlEwXTlPwVTlZwXTl`wVTlmwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl,wXTl0wVTlGwXTlwVTl<wXTlwMu𑣀TlwMu𑣁TlwMu𑣂TlwMu𑣃TlwMu𑣄TlwMu𑣅TlwMu𑣆TlwMu𑣇TlwMu𑣈TlwMu𑣉TlwMu𑣊LdTlwMu𑣋TlwMu𑣌TlwMu𑣍TlwMu𑣎TlwMu𑣏TlwMu𑣐TlwMu𑣑TlwMu𑣒TlwMu𑣓TlwMu𑣔TlwMu𑣕TlwMu𑣖TlwMu𑣗TlwMu𑣘TlwMu𑣙TlwMu𑣚TlwMu𑣛TlwMu𑣜TlwMu𑣝TlwMu𑣞TlwMu𑣟TlwVTlwXTlwVTlwXTlwVTl
wXTlwVTlwXTlwVTlwXTlwVTl6wXTl7wVTl9wXTl;wVTlGwXTlPwVTlZwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlHwXTlPwVTlwXTlwVTlwXTlwVTl
wXTlwVTlwXTl
wVTl7wXTl8wVTlFwXTlPwVTlmwXTlpwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl
wXTlwVTl7wXTl:wVTl;wXTl<wVTl>wXTl?wVTlHwXTlPwVTlZwXTl`wVTlfwXTlgwVTliwXTljwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl;wXTl>wVLdTlZwXTlwVTlwXTlwVTlwXTlwVTl#wXTl$wVTlo$wXTlp$wVTlu$wXTl$wVTlD%wXTl/wVTl/wXTl0wVTl04wXTl@4wVTlV4wXTlDwVTlGFwXTlhwVTl9jwXTl@jwVTl_jwXTl`jwVTljjwXTlnjwVTljwXTljwVTljwXTljwVTljwXTljwVTljwXTlkwVTlFkwXTlPkwVTlZkwXTl[kwVTlbkwXTlckwVTlxkwXTl}kwVTlkwXTl@nwMu𖹠TlAnwMu𖹡TlBnwMu𖹢TlCnwMu𖹣TlDnwMu𖹤TlEnwMu𖹥TlFnwMu𖹦TlGnwMu𖹧TlHnwMu𖹨TlInwMu𖹩TlJnwMu𖹪TlKnwMu𖹫TlLnwMu𖹬TlMnwMu𖹭TlNnwMu𖹮TlOnwMu𖹯TlPnwMu𖹰TlQnwMu𖹱TlRnwMu𖹲TlSnwMu𖹳TlTnwMu𖹴TlUnwMu𖹵TlVnwMu𖹶TlWnwMu𖹷TlXnwMu𖹸TlYnwMu𖹹TlZnwMu𖹺Tl[nwMu𖹻Tl\nwMu𖹼Tl]nwMu𖹽Tl^nwMu𖹾Tl_nwMu𖹿Tl`nwVTlnwXTlowVTlKowXTlOowVTlowXTlowVTlowXTlowVTlowXTlowVTlowXTlpwVTlwXTlwVTl֌wXTlwVTlwXTlwVTlwXTlwVTlwXTlwVLdTlwXTlwVTl#wXTl2wVTl3wXTlPwVTlSwXTlUwVTlVwXTldwVTlhwXTlpwVTlwXTlwVTlkwXTlpwVTl}wXTlwVTlwXTlwVTlwXTlwVTlwITlwXTlwVTl.wXTl0wVTlGwXTlPwVTlwXTlwVTlwXTlwVTl'wXTl)wVTl^wMu𝅗𝅥Tl_wMu𝅘𝅥Tl`wMu𝅘𝅥𝅮TlawMu𝅘𝅥𝅯TlbwMu𝅘𝅥𝅰TlcwMu𝅘𝅥𝅱TldwMu𝅘𝅥𝅲TlewVTlswXTl{wVTlwMu𝆹𝅥TlwMu𝆺𝅥TlwMu𝆹𝅥𝅮TlwMu𝆺𝅥𝅮TlwMu𝆹𝅥𝅯TlwMu𝆺𝅥𝅯TlwVTlwXTlwVTlFwXTlwVTlwXTlwVTlwXTlwVTlWwXTl`wVTlywXTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTl
wMwkTlwMwlTlwMwmTl
wMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTl wMwgTl!wMwhTl"wMwiTl#wMwjTl$wMwkLdTl%wMwlTl&wMwmTl'wMwnTl(wMwoTl)wMwpTl*wMwqTl+wMwrTl,wMwsTl-wMwtTl.wMwuTl/wMwvTl0wMwwTl1wMwxTl2wMwyTl3wMwzTl4wMwaTl5wMwbTl6wMwcTl7wMwdTl8wMweTl9wMwfTl:wMwgTl;wMwhTl<wMwiTl=wMwjTl>wMwkTl?wMwlTl@wMwmTlAwMwnTlBwMwoTlCwMwpTlDwMwqTlEwMwrTlFwMwsTlGwMwtTlHwMwuTlIwMwvTlJwMwwTlKwMwxTlLwMwyTlMwMwzTlNwMwaTlOwMwbTlPwMwcTlQwMwdTlRwMweTlSwMwfTlTwMwgTlUwXTlVwMwiTlWwMwjTlXwMwkTlYwMwlTlZwMwmTl[wMwnTl\wMwoTl]wMwpTl^wMwqTl_wMwrTl`wMwsTlawMwtTlbwMwuTlcwMwvTldwMwwTlewMwxTlfwMwyTlgwMwzTlhwMwaTliwMwbTljwMwcTlkwMwdTllwMweTlmwMwfTlnwMwgTlowMwhTlpwMwiTlqwMwjTlrwMwkTlswMwlTltwMwmTluwMwnTlvwMwoTlwwMwpTlxwMwqTlywMwrTlzwMwsTl{wMwtTl|wMwuTl}wMwvTl~wMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgLdTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwXTlwMwcTlwMwdTlwXTlwMwgTlwXTlwMwjTlwMwkTlwXTlwMwnTlwMwoTlwMwpTlwMwqTlwXTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwXTlwMwfTlwXTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwXTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfLdTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwXTlwMwdTlwMweTlwMwfTl
wMwgTlwXTl
wMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwXTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwXTlwMwaTlwMwbTl wMwcTl!wMwdTl"wMweTl#wMwfTl$wMwgTl%wMwhTl&wMwiTl'wMwjTl(wMwkTl)wMwlTl*wMwmTl+wMwnTl,wMwoTl-wMwpTl.wMwqTl/wMwrTl0wMwsTl1wMwtTl2wMwuTl3wMwvTl4wMwwTl5wMwxTl6wMwyTl7wMwzTl8wMwaTl9wMwbTl:wXTl;wMwdTl<wMweTl=wMwfTl>wMwgTl?wXTl@wMwiTlAwMwjTlBwMwkTlCwMwlTlDwMwmTlEwXTlFwMwoTlGwXTlJwMwsTlKwMwtTlLwMwuTlMwMwvTlNwMwwTlOwMwxTlPwMwyTlQwXTlRwMwaTlSwMwbTlTwMwcTlUwMwdTlVwMweLdTlWwMwfTlXwMwgTlYwMwhTlZwMwiTl[wMwjTl\wMwkTl]wMwlTl^wMwmTl_wMwnTl`wMwoTlawMwpTlbwMwqTlcwMwrTldwMwsTlewMwtTlfwMwuTlgwMwvTlhwMwwTliwMwxTljwMwyTlkwMwzTllwMwaTlmwMwbTlnwMwcTlowMwdTlpwMweTlqwMwfTlrwMwgTlswMwhTltwMwiTluwMwjTlvwMwkTlwwMwlTlxwMwmTlywMwnTlzwMwoTl{wMwpTl|wMwqTl}wMwrTl~wMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaLdTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTl
wMwcTlwMwdTlwMweTl
wMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwLdTlwMwxTl wMwyTl!wMwzTl"wMwaTl#wMwbTl$wMwcTl%wMwdTl&wMweTl'wMwfTl(wMwgTl)wMwhTl*wMwiTl+wMwjTl,wMwkTl-wMwlTl.wMwmTl/wMwnTl0wMwoTl1wMwpTl2wMwqTl3wMwrTl4wMwsTl5wMwtTl6wMwuTl7wMwvTl8wMwwTl9wMwxTl:wMwyTl;wMwzTl<wMwaTl=wMwbTl>wMwcTl?wMwdTl@wMweTlAwMwfTlBwMwgTlCwMwhTlDwMwiTlEwMwjTlFwMwkTlGwMwlTlHwMwmTlIwMwnTlJwMwoTlKwMwpTlLwMwqTlMwMwrTlNwMwsTlOwMwtTlPwMwuTlQwMwvTlRwMwwTlSwMwxTlTwMwyTlUwMwzTlVwMwaTlWwMwbTlXwMwcTlYwMwdTlZwMweTl[wMwfTl\wMwgTl]wMwhTl^wMwiTl_wMwjTl`wMwkTlawMwlTlbwMwmTlcwMwnTldwMwoTlewMwpTlfwMwqTlgwMwrTlhwMwsTliwMwtTljwMwuTlkwMwvTllwMwwTlmwMwxTlnwMwyTlowMwzTlpwMwaTlqwMwbTlrwMwcTlswMwdTltwMweTluwMwfTlvwMwgTlwwMwhTlxwMwiTlywMwjTlzwMwkTl{wMwlTl|wMwmTl}wMwnTl~wMwoTlwMwpTlwMwqTlwMwrTlwMwsLdTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMuıTlwMuȷTlwXTlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuθTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∇TlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∂TlwMuεTlwMuθTlwMuκTlwMuφTlwMuρTlwMuπTlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηLdTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuθTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∇TlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTl
wMuοTlwMuπTlwMuρTl
wMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∂TlwMuεTlwMuθTlwMuκTlwMuφTlwMuρTlwMuπTlwMuαTlwMuβTlwMuγTlwMuδTl wMuεTl!wMuζTl"wMuηTl#wMuθTl$wMuιTl%wMuκTl&wMuλTl'wMuμTl(wMuνTl)wMuξTl*wMuοTl+wMuπTl,wMuρTl-wMuθTl.wMuσTl/wMuτTl0wMuυTl1wMuφTl2wMuχTl3wMuψTl4wMuωTl5wMu∇Tl6wMuαTl7wMuβTl8wMuγTl9wMuδTl:wMuεTl;wMuζTl<wMuηTl=wMuθTl>wMuιTl?wMuκTl@wMuλTlAwMuμTlBwMuνTlCwMuξTlDwMuοTlEwMuπTlFwMuρTlGwMuσTlIwMuτTlJwMuυTlKwMuφTlLwMuχTlMwMuψTlNwMuωLdTlOwMu∂TlPwMuεTlQwMuθTlRwMuκTlSwMuφTlTwMuρTlUwMuπTlVwMuαTlWwMuβTlXwMuγTlYwMuδTlZwMuεTl[wMuζTl\wMuηTl]wMuθTl^wMuιTl_wMuκTl`wMuλTlawMuμTlbwMuνTlcwMuξTldwMuοTlewMuπTlfwMuρTlgwMuθTlhwMuσTliwMuτTljwMuυTlkwMuφTllwMuχTlmwMuψTlnwMuωTlowMu∇TlpwMuαTlqwMuβTlrwMuγTlswMuδTltwMuεTluwMuζTlvwMuηTlwwMuθTlxwMuιTlywMuκTlzwMuλTl{wMuμTl|wMuνTl}wMuξTl~wMuοTlwMuπTlwMuρTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∂TlwMuεTlwMuθTlwMuκTlwMuφTlwMuρTlwMuπTlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuθTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∇TlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκLdTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∂TlwMuεTlwMuθTlwMuκTlwMuφTlwMuρTlwMuπTlwMuϝTlwXTlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTl%wVTl+wXTlwVTlwXTlwVTlwXTlwVTl"wXTl#wVTl%wXTl&wVTl+wXTl0wMuаTl1wMuбTl2wMuвTl3wMuгTl4wMuдTl5wMuеTl6wMuжLdTl7wMuзTl8wMuиTl9wMuкTl:wMuлTl;wMuмTl<wMuоTl=wMuпTl>wMuрTl?wMuсTl@wMuтTlAwMuуTlBwMuфTlCwMuхTlDwMuцTlEwMuчTlFwMuшTlGwMuыTlHwMuэTlIwMuюTlJwMuꚉTlKwMuәTlLwMuіTlMwMuјTlNwMuөTlOwMuүTlPwMuӏTlQwMuаTlRwMuбTlSwMuвTlTwMuгTlUwMuдTlVwMuеTlWwMuжTlXwMuзTlYwMuиTlZwMuкTl[wMuлTl\wMuоTl]wMuпTl^wMuсTl_wMuуTl`wMuфTlawMuхTlbwMuцTlcwMuчTldwMuшTlewMuъTlfwMuыTlgwMuґTlhwMuіTliwMuѕTljwMuџTlkwMuҫTllwMuꙑTlmwMuұTlnwXTlwVTlwXTlwVTl-wXTl0wVTl>wXTl@wVTlJwXTlNwVTlPwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMu𞤢TlwMu𞤣TlwMu𞤤TlwMu𞤥TlwMu𞤦TlwMu𞤧TlwMu𞤨TlwMu𞤩TlwMu𞤪TlwMu𞤫Tl
wMu𞤬TlwMu𞤭TlwMu𞤮Tl
wMu𞤯LdTlwMu𞤰TlwMu𞤱TlwMu𞤲TlwMu𞤳TlwMu𞤴TlwMu𞤵TlwMu𞤶TlwMu𞤷TlwMu𞤸TlwMu𞤹TlwMu𞤺TlwMu𞤻TlwMu𞤼TlwMu𞤽TlwMu𞤾TlwMu𞤿TlwMu𞥀TlwMu𞥁Tl wMu𞥂Tl!wMu𞥃Tl"wVTlLwXTlPwVTlZwXTl^wVTl`wXTlqwVTlwXTlwVTl>wXTlwMuاTlwMuبTlwMuجTlwMuدTlwXTlwMuوTlwMuزTlwMuحTlwMuطTlwMuيTl
wMuكTlwMuلTlwMuمTl
wMuنTlwMuسTlwMuعTlwMuفTlwMuصTlwMuقTlwMuرTlwMuشTlwMuتTlwMuثTlwMuخTlwMuذTlwMuضTlwMuظTlwMuغTlwMuٮTlwMuںTlwMuڡTlwMuٯTl wXTl!wMuبTl"wMuجTl#wXTl$wMuهTl%wXTl'wMuحTl(wXTl)wMuيTl*wMuكTl+wMuلTl,wMuمTl-wMuنTl.wMuسTl/wMuعTl0wMuفTl1wMuصTl2wMuقTl3wXTl4wMuشTl5wMuتTl6wMuثTl7wMuخTl8wXTl9wMuضTl:wXTl;wMuغTl<wXTlBwMuجTlCwXTlGwMuحTlHwXTlIwMuيTlJwXTlKwMuلTlLwXTlMwMuنTlNwMuسLdTlOwMuعTlPwXTlQwMuصTlRwMuقTlSwXTlTwMuشTlUwXTlWwMuخTlXwXTlYwMuضTlZwXTl[wMuغTl\wXTl]wMuںTl^wXTl_wMuٯTl`wXTlawMuبTlbwMuجTlcwXTldwMuهTlewXTlgwMuحTlhwMuطTliwMuيTljwMuكTlkwXTllwMuمTlmwMuنTlnwMuسTlowMuعTlpwMuفTlqwMuصTlrwMuقTlswXTltwMuشTluwMuتTlvwMuثTlwwMuخTlxwXTlywMuضTlzwMuظTl{wMuغTl|wMuٮTl}wXTl~wMuڡTlwXTlwMuاTlwMuبTlwMuجTlwMuدTlwMuهTlwMuوTlwMuزTlwMuحTlwMuطTlwMuيTlwXTlwMuلTlwMuمTlwMuنTlwMuسTlwMuعTlwMuفTlwMuصTlwMuقTlwMuرTlwMuشTlwMuتTlwMuثTlwMuخTlwMuذTlwMuضTlwMuظTlwMuغTlwXTlwMuبTlwMuجTlwMuدTlwXTlwMuوTlwMuزTlwMuحTlwMuطTlwMuيTlwXTlwMuلTlwMuمTlwMuنTlwMuسTlwMuعTlwMuفTlwMuصTlwMuقTlwMuرTlwMuشTlwMuتTlwMuثTlwMuخTlwMuذLdTlwMuضTlwMuظTlwMuغTlwXTlwVTlwXTlwVTl,wXTl0wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlw3u0,Tlw3u1,Tlw3u2,Tlw3u3,Tlw3u4,Tlw3u5,Tlw3u6,Tlw3u7,Tlw3u8,Tl
w3u9,TlwVTlw3u(a)Tlw3u(b)Tlw3u(c)Tlw3u(d)Tlw3u(e)Tlw3u(f)Tlw3u(g)Tlw3u(h)Tlw3u(i)Tlw3u(j)Tlw3u(k)Tlw3u(l)Tlw3u(m)Tlw3u(n)Tlw3u(o)Tlw3u(p)Tl w3u(q)Tl!w3u(r)Tl"w3u(s)Tl#w3u(t)Tl$w3u(u)Tl%w3u(v)Tl&w3u(w)Tl'w3u(x)Tl(w3u(y)Tl)w3u(z)Tl*wMu〔s〕Tl+wMwcTl,wMwrTl-wMacdTl.wMawzTl/wVTl0wMwaTl1wMwbTl2wMwcTl3wMwdTl4wMweTl5wMwfTl6wMwgTl7wMwhTl8wMwiTl9wMwjTl:wMwkTl;wMwlTl<wMwmTl=wMwnTl>wMwoTl?wMwpTl@wMwqTlAwMwrTlBwMwsTlCwMwtTlDwMwuTlEwMwvTlFwMwwTlGwMwxTlHwMwyTlIwMwzTlJwMahvTlKwMamvTlLwMasdTlMwMassTlNwMappvTlOwMawcTlPwVTljwMamcTlkwMamdTllwMamrTlmwVTlwMadjTlwVLdTlwXTlwVTlwMuほかTlwMuココTlwMuサTlwXTlwMu手TlwMu字TlwMu双TlwMuデTlwMu二TlwMu多TlwMu解TlwMu天TlwMu交TlwMu映TlwMu無TlwMu料TlwMu前TlwMu後TlwMu再TlwMu新Tl wMu初Tl!wMu終Tl"wMu生Tl#wMu販Tl$wMu声Tl%wMu吹Tl&wMu演Tl'wMu投Tl(wMu捕Tl)wMu一Tl*wMu三Tl+wMu遊Tl,wMu左Tl-wMu中Tl.wMu右Tl/wMu指Tl0wMu走Tl1wMu打Tl2wMu禁Tl3wMu空Tl4wMu合Tl5wMu満Tl6wMu有Tl7wMu月Tl8wMu申Tl9wMu割Tl:wMu営Tl;wMu配Tl<wXTl@wMu〔本〕TlAwMu〔三〕TlBwMu〔二〕TlCwMu〔安〕TlDwMu〔点〕TlEwMu〔打〕TlFwMu〔盗〕TlGwMu〔勝〕TlHwMu〔敗〕TlIwXTlPwMu得TlQwMu可TlRwXTl`wVTlfwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwwXTl{wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlHwXTlPwVTlZwXTl`wVTlwXTlwVTlwXTlwVTlwXTlwVTlTwXTl`wVTlnwXTlpwVTl}wXTlwVTlwXLdTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwXTlwVTlwXTlwVTl:wXTl@wVTlwXTl wVTlwXTlwVTlwXTlwVTl^wXTlwMu丽TlwMu丸TlwMu乁TlwMu𠄢TlwMu你TlwMu侮TlwMu侻TlwMu倂TlwMu偺TlwMu備Tl
wMu僧TlwMu像TlwMu㒞Tl
wMu𠘺TlwMu免TlwMu兔TlwMu兤TlwMu具TlwMu𠔜TlwMu㒹TlwMu內TlwMu再TlwMu𠕋TlwMu冗TlwMu冤TlwMu仌TlwMu冬TlwMu况TlwMu𩇟TlwMu凵TlwMu刃TlwMu㓟Tl wMu刻Tl!wMu剆Tl"wMu割Tl#wMu剷Tl$wMu㔕Tl%wMu勇Tl&wMu勉Tl'wMu勤Tl(wMu勺Tl)wMu包Tl*wMu匆Tl+wMu北Tl,wMu卉Tl-wMu卑Tl.wMu博Tl/wMu即Tl0wMu卽Tl1wMu卿Tl4wMu𠨬Tl5wMu灰Tl6wMu及Tl7wMu叟Tl8wMu𠭣Tl9wMu叫Tl:wMu叱Tl;wMu吆Tl<wMu咞Tl=wMu吸Tl>wMu呈Tl?wMu周Tl@wMu咢LdTlAwMu哶TlBwMu唐TlCwMu啓TlDwMu啣TlEwMu善TlGwMu喙TlHwMu喫TlIwMu喳TlJwMu嗂TlKwMu圖TlLwMu嘆TlMwMu圗TlNwMu噑TlOwMu噴TlPwMu切TlQwMu壮TlRwMu城TlSwMu埴TlTwMu堍TlUwMu型TlVwMu堲TlWwMu報TlXwMu墬TlYwMu𡓤TlZwMu売Tl[wMu壷Tl\wMu夆Tl]wMu多Tl^wMu夢Tl_wMu奢Tl`wMu𡚨TlawMu𡛪TlbwMu姬TlcwMu娛TldwMu娧TlewMu姘TlfwMu婦TlgwMu㛮TlhwXTliwMu嬈TljwMu嬾TllwMu𡧈TlmwMu寃TlnwMu寘TlowMu寧TlpwMu寳TlqwMu𡬘TlrwMu寿TlswMu将TltwXTluwMu尢TlvwMu㞁TlwwMu屠TlxwMu屮TlywMu峀TlzwMu岍Tl{wMu𡷤Tl|wMu嵃Tl}wMu𡷦Tl~wMu嵮TlwMu嵫TlwMu嵼TlwMu巡TlwMu巢TlwMu㠯TlwMu巽TlwMu帨TlwMu帽TlwMu幩TlwMu㡢TlwMu𢆃TlwMu㡼TlwMu庰TlwMu庳TlwMu庶TlwMu廊TlwMu𪎒TlwMu廾TlwMu𢌱TlwMu舁TlwMu弢TlwMu㣇TlwMu𣊸TlwMu𦇚TlwMu形TlwMu彫TlwMu㣣TlwMu徚TlwMu忍TlwMu志TlwMu忹TlwMu悁TlwMu㤺TlwMu㤜TlwMu悔TlwMu𢛔TlwMu惇TlwMu慈TlwMu慌TlwMu慎LdTlwMu慌TlwMu慺TlwMu憎TlwMu憲TlwMu憤TlwMu憯TlwMu懞TlwMu懲TlwMu懶TlwMu成TlwMu戛TlwMu扝TlwMu抱TlwMu拔TlwMu捐TlwMu𢬌TlwMu挽TlwMu拼TlwMu捨TlwMu掃TlwMu揤TlwMu𢯱TlwMu搢TlwMu揅TlwMu掩TlwMu㨮TlwMu摩TlwMu摾TlwMu撝TlwMu摷TlwMu㩬TlwMu敏TlwMu敬TlwMu𣀊TlwMu旣TlwMu書TlwMu晉TlwMu㬙TlwMu暑TlwMu㬈TlwMu㫤TlwMu冒TlwMu冕TlwMu最TlwMu暜TlwMu肭TlwMu䏙TlwMu朗TlwMu望TlwMu朡TlwMu杞TlwMu杓TlwMu𣏃TlwMu㭉TlwMu柺TlwMu枅TlwMu桒TlwMu梅TlwMu𣑭TlwMu梎TlwMu栟TlwMu椔TlwMu㮝TlwMu楂TlwMu榣TlwMu槪TlwMu檨TlwMu𣚣TlwMu櫛TlwMu㰘TlwMu次TlwMu𣢧TlwMu歔TlwMu㱎TlwMu歲TlwMu殟TlwMu殺TlwMu殻TlwMu𣪍TlwMu𡴋TlwMu𣫺TlwMu汎TlwMu𣲼TlwMu沿TlwMu泍TlwMu汧TlwMu洖TlwMu派TlwMu海TlwMu流TlwMu浩TlwMu浸TlwMu涅TlwMu𣴞TlwMu洴TlwMu港TlwMu湮Tl
wMu㴳TlwMu滋TlwMu滇LdTl
wMu𣻑TlwMu淹TlwMu潮TlwMu𣽞TlwMu𣾎TlwMu濆TlwMu瀹TlwMu瀞TlwMu瀛TlwMu㶖TlwMu灊TlwMu災TlwMu灷TlwMu炭TlwMu𠔥TlwMu煅TlwMu𤉣TlwMu熜TlwXTl wMu爨Tl!wMu爵Tl"wMu牐Tl#wMu𤘈Tl$wMu犀Tl%wMu犕Tl&wMu𤜵Tl'wMu𤠔Tl(wMu獺Tl)wMu王Tl*wMu㺬Tl+wMu玥Tl,wMu㺸Tl.wMu瑇Tl/wMu瑜Tl0wMu瑱Tl1wMu璅Tl2wMu瓊Tl3wMu㼛Tl4wMu甤Tl5wMu𤰶Tl6wMu甾Tl7wMu𤲒Tl8wMu異Tl9wMu𢆟Tl:wMu瘐Tl;wMu𤾡Tl<wMu𤾸Tl=wMu𥁄Tl>wMu㿼Tl?wMu䀈Tl@wMu直TlAwMu𥃳TlBwMu𥃲TlCwMu𥄙TlDwMu𥄳TlEwMu眞TlFwMu真TlHwMu睊TlIwMu䀹TlJwMu瞋TlKwMu䁆TlLwMu䂖TlMwMu𥐝TlNwMu硎TlOwMu碌TlPwMu磌TlQwMu䃣TlRwMu𥘦TlSwMu祖TlTwMu𥚚TlUwMu𥛅TlVwMu福TlWwMu秫TlXwMu䄯TlYwMu穀TlZwMu穊Tl[wMu穏Tl\wMu𥥼Tl]wMu𥪧Tl_wXTl`wMu䈂TlawMu𥮫TlbwMu篆TlcwMu築TldwMu䈧TlewMu𥲀TlfwMu糒TlgwMu䊠TlhwMu糨TliwMu糣TljwMu紀TlkwMu𥾆TllwMu絣TlmwMu䌁TlnwMu緇TlowMu縂TlpwMu繅TlqwMu䌴TlrwMu𦈨TlswMu𦉇LdTltwMu䍙TluwMu𦋙TlvwMu罺TlwwMu𦌾TlxwMu羕TlywMu翺TlzwMu者Tl{wMu𦓚Tl|wMu𦔣Tl}wMu聠Tl~wMu𦖨TlwMu聰TlwMu𣍟TlwMu䏕TlwMu育TlwMu脃TlwMu䐋TlwMu脾TlwMu媵TlwMu𦞧TlwMu𦞵TlwMu𣎓TlwMu𣎜TlwMu舁TlwMu舄TlwMu辞TlwMu䑫TlwMu芑TlwMu芋TlwMu芝TlwMu劳TlwMu花TlwMu芳TlwMu芽TlwMu苦TlwMu𦬼TlwMu若TlwMu茝TlwMu荣TlwMu莭TlwMu茣TlwMu莽TlwMu菧TlwMu著TlwMu荓TlwMu菊TlwMu菌TlwMu菜TlwMu𦰶TlwMu𦵫TlwMu𦳕TlwMu䔫TlwMu蓱TlwMu蓳TlwMu蔖TlwMu𧏊TlwMu蕤TlwMu𦼬TlwMu䕝TlwMu䕡TlwMu𦾱TlwMu𧃒TlwMu䕫TlwMu虐TlwMu虜TlwMu虧TlwMu虩TlwMu蚩TlwMu蚈TlwMu蜎TlwMu蛢TlwMu蝹TlwMu蜨TlwMu蝫TlwMu螆TlwXTlwMu蟡TlwMu蠁TlwMu䗹TlwMu衠TlwMu衣TlwMu𧙧TlwMu裗TlwMu裞TlwMu䘵TlwMu裺TlwMu㒻TlwMu𧢮TlwMu𧥦TlwMu䚾TlwMu䛇TlwMu誠TlwMu諭TlwMu變TlwMu豕TlwMu𧲨TlwMu貫TlwMu賁TlwMu贛TlwMu起LLTlwMu𧼯TlwMu𠠄TlwMu跋TlwMu趼TlwMu跰TlwMu𠣞TlwMu軔TlwMu輸TlwMu𨗒TlwMu𨗭TlwMu邔TlwMu郱TlwMu鄑TlwMu𨜮TlwMu鄛TlwMu鈸TlwMu鋗TlwMu鋘TlwMu鉼TlwMu鏹TlwMu鐕TlwMu𨯺TlwMu開TlwMu䦕TlwMu閷TlwMu𨵷TlwMu䧦TlwMu雃TlwMu嶲TlwMu霣TlwMu𩅅TlwMu𩈚TlwMu䩮TlwMu䩶TlwMu韠TlwMu𩐊TlwMu䪲TlwMu𩒖TlwMu頋TlwMu頩TlwMu𩖶TlwMu飢TlwMu䬳TlwMu餩TlwMu馧TlwMu駂TlwMu駾TlwMu䯎TlwMu𩬰Tl
wMu鬒TlwMu鱀TlwMu鳽Tl
wMu䳎TlwMu䳭TlwMu鵧TlwMu𪃎TlwMu䳸TlwMu𪄅TlwMu𪈎TlwMu𪊑TlwMu麻TlwMu䵖TlwMu黹TlwMu黾TlwMu鼅TlwMu鼏TlwMu鼖TlwMu鼻TlwMu𪘀TlwXTlwVTlKwXTlPwVTl#wXTlwITlwXa__doc__a__file__a__spec__aoriginahas_locationa__cached__aListlaTupleaUnionu15.1.0a__version__areturnTOintOstrTOintOstrpa_seg_0a_seg_1a_seg_2a_seg_3a_seg_4a_seg_5a_seg_6a_seg_7a_seg_8a_seg_9a_seg_10a_seg_11a_seg_12a_seg_13a_seg_14a_seg_15a_seg_16a_seg_17a_seg_18a_seg_19a_seg_20a_seg_21a_seg_22a_seg_23a_seg_24a_seg_25a_seg_26a_seg_27a_seg_28a_seg_29a_seg_30a_seg_31a_seg_32a_seg_33a_seg_34a_seg_35a_seg_36a_seg_37a_seg_38a_seg_39a_seg_40a_seg_41a_seg_42a_seg_43a_seg_44a_seg_45a_seg_46a_seg_47a_seg_48a_seg_49a_seg_50a_seg_51a_seg_52a_seg_53a_seg_54a_seg_55a_seg_56a_seg_57a_seg_58a_seg_59a_seg_60a_seg_61a_seg_62a_seg_63a_seg_64a_seg_65a_seg_66a_seg_67a_seg_68a_seg_69a_seg_70a_seg_71a_seg_72a_seg_73a_seg_74a_seg_75a_seg_76a_seg_77a_seg_78a_seg_79a_seg_80a_seg_81auts46datauidna\uts46data.pyu<module idna.uts46data>u.lz4.blockma__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_lz4u\not_existingablockTaNUITKA_PACKAGE_lz4_blocku\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__a_blockTacompressadecompressaLZ4BlockErrorlacompressladecompressaLZ4BlockErrorulz4\block\__init__.pyu<module lz4.block>u.lz4ka__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_lz4u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aversionTaversionlla__version__a_versionTalibrary_version_numberalibrary_version_stringalibrary_version_numberalibrary_version_stringaVERSIONulz4\__init__.pyu<module lz4>u.lz4.versiona__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aTYPE_CHECKINGaVERSION_TUPLEaversiona__version__a__version_tuple__aversion_tupleu4.3.3Tllpulz4\version.pyu<module lz4.version>u.multiprocessing-postLoadtaim_selfagetattraim_classaim_funca__name__a__doc__a__file__a__spec__aoriginahas_locationa__cached__umultiprocessing.forkingTaForkingPicklerlaForkingPicklerumultiprocessing.reductionumultiprocessing-postLoada__module__wCa__qualname__wfuC.fTa_reduce_compiled_methodaregisterumultiprocessing-postLoad.pyu<module multiprocessing-postLoad>Twmu.multiprocessing-preLoada__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaoslafrozenaargvlaargv0aendswithTu.exeu.exea__nuitka_binary_exeaexecutablea_base_executableumultiprocessing-preLoad.pyu<module multiprocessing-preLoad>u.oauthlib.common6aencodeTuutf-8a_quoteadecodea_unquoteaencode_params_utf8a_urlencodeutoo many values to unpack (expected 2)aencodedaappenduEnsures that all parameters in a list of 2-element tuples are encoded to
    bytestrings using UTF-8
    adecodeduEnsures that all parameters in a list of 2-element tuples are decoded to
    unicode using UTF-8.
    aurlencodeduError trying to decode a non urlencoded string. Found invalid characters: %s in the string: '%s'. Please ensure the request/response body is x-www-form-urlencoded.aqueryaINVALID_HEX_PATTERNasearchuInvalid hex encoding in query string.aurlparseaparse_qslDakeep_blank_valuestadecode_params_utf8uDecode a query string in x-www-form-urlencoded format into a sequence
    of two-element tuples.

    Unlike urlparse.parse_qsl(..., strict_parsing=True) urldecode will enforce
    correct formatting of the query string by validation. If validation fails
    a ValueError will be raised. urllib.parse_qsl will only raise errors if
    any of name-value pairs omits the equals sign.
    TObytesOstraurldecodea__iter__aitemsaparamsuExtract parameters and return them as a list of 2-tuples.

    Will successfully extract parameters from urlencoded query strings,
    dicts, or lists of 2-tuples. Empty strings/dicts/lists will return an
    empty list of parameters. Any other input will result in a return
    value of None.
    arandbitsTl@agenerate_timestampuGenerate pseudorandom nonce that is unlikely to repeat.

    Per `section 3.3`_ of the OAuth 1 RFC 5849 spec.
    Per `section 3.2.1`_ of the MAC Access Authentication spec.

    A random 64-bit number is appended to the epoch timestamp for both
    randomness and to decrease the likelihood of collisions.

    .. _`section 3.2.1`: https://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-01#section-3.2.1
    .. _`section 3.3`: https://tools.ietf.org/html/rfc5849#section-3.3
    atimeuGet seconds since epoch (UTC).

    Per `section 3.3`_ of the OAuth 1 RFC 5849 spec.
    Per `section 3.2.1`_ of the MAC Access Authentication spec.

    .. _`section 3.2.1`: https://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-01#section-3.2.1
    .. _`section 3.3`: https://tools.ietf.org/html/rfc5849#section-3.3
    aSystemRandomuuGenerates a non-guessable OAuth token

    OAuth (1 and 2) does not specify the format of tokens except that they
    should be strings of random characters. Tokens should not be guessable
    and entropy when generating the random characters is important. Which is
    why SystemRandom is used instead of the default random.choice method.
    arandachoiceacharsu<genexpr>ugenerate_token.<locals>.<genexpr>ajwtladatetimeautcnowascopeaexpatimedeltaaexpires_inTasecondsaclaimsaRS256ato_unicodeuUTF-8DaalgorithmsLaRS256agenerate_tokenuGenerates an OAuth client_id

    OAuth 2 specify the format of client_id in
    https://tools.ietf.org/html/rfc6749#appendix-A.
    aextendaurlencodeuExtend a query with a list of two-tuples.utoo many values to unpack (expected 6)aadd_params_to_qsaurlunparseuAdd a list of two-tuples to the uri query components.aresultu Near-constant time string comparison.

    Used in order to avoid timing attacks on sensitive information such
    as secret keys during request verification (`rootLabs`_).

    .. _`rootLabs`: http://rdist.root.org/2010/01/07/timing-independent-array-comparison/

    aencodinguConvert a number of different types of objects to unicode.uto_unicode.<locals>.<genexpr>aloweraproxyaselfa__class__a__delitem__a__getitem__a__setitem__aupdateu<lambda>uRequest.__init__.<locals>.<lambda>auriahttp_methodaCaseInsensitiveDictaheadersabodyaextract_paramsadecoded_bodyaoauth_paramsavalidator_logDaaccess_tokenaclientaclient_idaclient_secretacodeacode_challengeacode_challenge_methodacode_verifieraextra_credentialsagrant_typearedirect_uriarefresh_tokenarequest_tokenaresponse_typeascopeascopesastateatokenauseratoken_type_hintaresponse_modeanonceadisplayapromptaclaimsamax_ageaui_localesaid_token_hintalogin_hintaacr_valuesnnnnnnnnnnnnnnnnnnnnnnnnnnnnnna_paramsauri_queryaget_debugu<oauthlib.Request SANITIZED>acopyaSANITIZE_PATTERNasubu<SANITIZED>aAuthorizationu<SANITIZED>u<oauthlib.Request url="{}", http_method="{}", headers="{}", body="{}">Dakeep_blank_valuesastrict_parsingtpacollectionsadefaultdictTOintauri_query_paramsaseen_keysluRequest.duplicate_params.<locals>.<genexpr>u
oauthlib.common
~~~~~~~~~~~~~~

This module provides data structures and utilities common
to all implementations of OAuth.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aloggingareuurllib.parseaparseTaquoteaunquoteaurlencodeaquoteaunquoteTaget_debugasecretsTaSystemRandomarandbitsarandomTaSystemRandomagetrandbitsagetrandbitsaabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789aUNICODE_ASCII_CHARACTER_SETu !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}aCLIENT_ID_CHARACTER_SETacompileu([^&;]*(?:password|token)[^=]*=)[^&;]+aIGNORECASETu%[^0-9A-Fa-f]|%[0-9A-Fa-f][^0-9A-Fa-f]uABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_.-aalways_safeagetLoggerTaoauthlibalogTd/Sw?w=w/w:w~w@w*w(w!w$w;w%w&w,w)w+w'agenerate_noncelagenerate_signed_tokenaverify_signed_tokenagenerate_client_idTFaadd_params_to_uriasafe_string_equalsTuUTF-8TOdicta__prepare__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.commona__module__uBasic case insensitive dict with strings only keys.a__qualname__a__init__uCaseInsensitiveDict.__init__a__contains__uCaseInsensitiveDict.__contains__uCaseInsensitiveDict.__delitem__uCaseInsensitiveDict.__getitem__TnagetuCaseInsensitiveDict.getuCaseInsensitiveDict.__setitem__uCaseInsensitiveDict.updatea__orig_bases__uA malleable representation of a signable HTTP request.

    Body argument may contain any data, but parameters will only be decoded if
    they are one of:

    * urlencoded query string
    * dict
    * list of 2-tuples

    Anything else will be treated as raw body data to be passed through
    unmolested.
    aRequestTaGETnnuutf-8uRequest.__init__a__getattr__uRequest.__getattr__a__repr__uRequest.__repr__uRequest.uri_queryuRequest.uri_query_paramsaduplicate_paramsuRequest.duplicate_paramsTuoauthlib\common.pyTa.0wiaencodingTa.0wpTa.0wxarandacharsTwxaencodingTaencodingu<module oauthlib.common>Ta__class__TaselfwkTaselfwkakeya__class__TaselfanameTaselfadatawkTaselfauriahttp_methodabodyaheadersaencodingaencodeTaselfabodyaheadersTaselfwkwva__class__TaqueryaparamsaqueryparamsTauriaparamsafragmentaschanetapathaparaqueryafraTaparamsadecodedwkwvTaselfaseen_keysaall_keyswkTaparamsaencodedwkwvTarawaparamsTalengthacharsTaprivate_pemarequestajwtanowaclaimsatokenTalengthacharsarandTaselfwkadefaultTwsasafeTwawbaresultwxwyTadataaencodingTwsTaselfaargsakwargswka__class__TaselfTaqueryaerroraparamsTaparamsautf8_paramsaurlencodedTapublic_pematokenajwt.oauthlib"a_DEBUGuSet value of debug flag

    :param debug_val: Value to set. Must be a bool value.
uGet debug mode value.

:return: `True` if debug mode is on, `False` otherwise
u
    oauthlib
    ~~~~~~~~

    A generic, spec-compliant, thorough implementation of the OAuth
    request-signing logic.

    :copyright: (c) 2019 by The OAuthlib Community
    :license: BSD, see LICENSE for details.
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_oauthlibu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__alogginglTaNullHandleraNullHandleruThe OAuthlib Communitya__author__u3.2.2a__version__agetLoggerTaoauthlibaaddHandleraset_debugaget_debuguoauthlib\__init__.pyu<module oauthlib>Tadebug_valu.oauthlib.oauth17u
oauthlib.oauth1
~~~~~~~~~~~~~~

This module is a wrapper for the most recent implementation of OAuth 1.0 Client
and Server classes.
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_oauthlibu\not_existingaoauth1TaNUITKA_PACKAGE_oauthlib_oauth1u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__arfc5849T
aSIGNATURE_HMACaSIGNATURE_HMAC_SHA1aSIGNATURE_HMAC_SHA256aSIGNATURE_HMAC_SHA512aSIGNATURE_PLAINTEXTaSIGNATURE_RSAaSIGNATURE_RSA_SHA1aSIGNATURE_RSA_SHA256aSIGNATURE_RSA_SHA512aSIGNATURE_TYPE_AUTH_HEADERaSIGNATURE_TYPE_BODYaSIGNATURE_TYPE_QUERYaClientlaSIGNATURE_HMAClaSIGNATURE_HMAC_SHA1aSIGNATURE_HMAC_SHA256aSIGNATURE_HMAC_SHA512aSIGNATURE_PLAINTEXTaSIGNATURE_RSAaSIGNATURE_RSA_SHA1aSIGNATURE_RSA_SHA256aSIGNATURE_RSA_SHA512aSIGNATURE_TYPE_AUTH_HEADERaSIGNATURE_TYPE_BODYaSIGNATURE_TYPE_QUERYaClienturfc5849.endpointsTaAccessTokenEndpointaAuthorizationEndpointaRequestTokenEndpointaResourceEndpointaSignatureOnlyEndpointaWebApplicationServeraAccessTokenEndpointaAuthorizationEndpointaRequestTokenEndpointaResourceEndpointaSignatureOnlyEndpointaWebApplicationServerurfc5849.errorsTaInsecureTransportErroraInvalidClientErroraInvalidRequestErroraInvalidSignatureMethodErroraOAuth1ErroraInsecureTransportErroraInvalidClientErroraInvalidRequestErroraInvalidSignatureMethodErroraOAuth1Errorurfc5849.request_validatorTaRequestValidatoraRequestValidatoruoauthlib\oauth1\__init__.pyu<module oauthlib.oauth1>u.oauthlib.oauth1.rfc5849OaSIGNATURE_METHODSu<lambda>uClient.__init__.<locals>.<lambda>aclient_keyaclient_secretaresource_owner_keyaresource_owner_secretasignature_methodasignature_typeacallback_uriarsa_keyaverifierarealmaencodingadecodinganonceatimestampuCreate an OAuth 1 client.

        :param client_key: Client key (consumer key), mandatory.
        :param resource_owner_key: Resource owner key (oauth token).
        :param resource_owner_secret: Resource owner secret (oauth token secret).
        :param callback_uri: Callback used when obtaining request token.
        :param signature_method: SIGNATURE_HMAC, SIGNATURE_RSA or SIGNATURE_PLAINTEXT.
        :param signature_type: SIGNATURE_TYPE_AUTH_HEADER (default),
                               SIGNATURE_TYPE_QUERY or SIGNATURE_TYPE_BODY
                               depending on where you want to embed the oauth
                               credentials.
        :param rsa_key: RSA key used with SIGNATURE_RSA.
        :param verifier: Verifier used when obtaining an access token.
        :param realm: Realm (scope) to which access is being requested.
        :param encoding: If you provide non-unicode input you may use this
                         to have oauthlib automatically convert.
        :param decoding: If you wish that the returned uri, headers and body
                         from sign be encoded back from unicode, then set
                         decoding to your preferred encoding, i.e. utf-8.
        :param nonce: Use this nonce instead of generating one. (Mainly for testing)
        :param timestamp: Use this timestamp instead of using current. (Mainly for testing)
        ato_unicodeacopyu****u, aitemsu<{} {}>a__name__utoo many values to unpack (expected 2)u{}={}u<genexpr>uClient.__repr__.<locals>.<genexpr>aSIGNATURE_PLAINTEXTasignatureasign_plaintexta_renderutoo many values to unpack (expected 3)acollect_parametersaurlparseaqueryTauri_queryabodyaheadersalogadebuguCollected params: {}anormalize_parametersabase_string_uriagetTaHostnuNormalized params: {}uNormalized URI: {}asignature_base_stringahttp_methoduSigning: signature base string: {}uInvalid signature method.uSignature: {}uGet an OAuth signature to be used in signing a request

        To satisfy `section 3.4.1.2`_ item 2, if the request argument's
        headers dict attribute contains a Host item, its value will
        replace any netloc part of the request argument's uri attribute
        value.

        .. _`section 3.4.1.2`: https://tools.ietf.org/html/rfc5849#section-3.4.1.2
        agenerate_nonceagenerate_timestampaoauth_nonceaoauth_timestampTaoauth_versionu1.0aoauth_signature_methodaoauth_consumer_keyaoauth_tokenaparamsaoauth_callbackaappendaoauth_verifieraheadersTuContent-TypenafindTuapplication/x-www-form-urlencodedlabodyaoauth_body_hashabase64ab64encodeahashlibasha1aencodeTuutf-8adigestadecodeuGet the basic OAuth parameters to be used in generating a signature.
        auriaSIGNATURE_TYPE_AUTH_HEADERaparametersaprepare_headersaoauth_paramsTarealmaSIGNATURE_TYPE_BODYadecoded_bodyaprepare_form_encoded_bodyaurlencodeuapplication/x-www-form-urlencodeduContent-TypeaSIGNATURE_TYPE_QUERYaprepare_request_uri_queryuUnknown signature type specified.uRender a signed request according to signature type

        Returns a 3-tuple containing the request URI, headers, and body.

        If the formencode argument is True and the body contains parameters, it
        is escaped and returned as a valid formencoded string.
        aRequestTaencodingastartswithTumultipart/acontent_typeaCONTENT_TYPE_FORM_URLENCODEDuHeaders indicate a multipart body but body contains parameters.uHeaders indicate a formencoded body but body was not decodable.uBody contains parameters but Content-Type header was {} instead of {}unot setuBody signatures may only be used with form-urlencoded contentaupperTaGETaHEADuGET/HEAD requests should not include body.aget_oauth_paramsaoauth_signatureaget_oauth_signatureTaformencodearealmuEncoding URI, headers and body to %s.aselfanew_headersuSign a request

        Signs an HTTP request with the specified parts.

        Returns a 3-tuple of the signed request's URI, headers, and body.
        Note that http_method is not returned as it is unaffected by the OAuth
        signing process. Also worth noting is that duplicate parameters
        will be included in the signature, regardless of where they are
        specified (query, body).

        The body argument may be a dict, a list of 2-tuples, or a formencoded
        string. The Content-Type header must be 'application/x-www-form-urlencoded'
        if it is present.

        If the body argument is not one of the above, it will be returned
        verbatim as it is unaffected by the OAuth signing process. Attempting to
        sign a request with non-formencoded data using the OAuth body signature
        type is invalid and will raise an exception.

        If the body does contain parameters, it will be returned as a properly-
        formatted formencoded string.

        Body may not be included if the http_method is either GET or HEAD as
        this changes the semantic meaning of the request.

        All string data MUST be unicode or be encoded with the same encoding
        scheme supplied to the Client constructor, default utf-8. This includes
        strings inside body dicts, for example.
        u
oauthlib.oauth1.rfc5849
~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for signing and checking OAuth 1.0 RFC 5849 requests.

It supports all three standard signature methods defined in RFC 5849:

- HMAC-SHA1
- RSA-SHA1
- PLAINTEXT

It also supports signature methods that are not defined in RFC 5849. These are
based on the standard ones but replace SHA-1 with the more secure SHA-256:

- HMAC-SHA256
- RSA-SHA256

a__doc__a__file__apathadirnameajoinaenvironTaNUITKA_PACKAGE_oauthlibu\not_existinguoauth1\rfc5849TaNUITKA_PACKAGE_oauthlib_oauth1u\not_existingarfc5849TaNUITKA_PACKAGE_oauthlib_oauth1_rfc5849u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__alogginguurllib.parseaparseuoauthlib.commonTaRequestagenerate_nonceagenerate_timestampato_unicodeaurlencodeuTaparametersasignaturelagetLoggerTuoauthlib.oauth1.rfc5849uHMAC-SHA1aSIGNATURE_HMAC_SHA1uHMAC-SHA256aSIGNATURE_HMAC_SHA256uHMAC-SHA512aSIGNATURE_HMAC_SHA512aSIGNATURE_HMACuRSA-SHA1aSIGNATURE_RSA_SHA1uRSA-SHA256aSIGNATURE_RSA_SHA256uRSA-SHA512aSIGNATURE_RSA_SHA512aSIGNATURE_RSAaPLAINTEXTaAUTH_HEADERaQUERYaBODYuoauthlib.oauth1.rfc5849a__module__uA client used to sign OAuth 1.0 RFC 5849 requests.aClienta__qualname__asign_hmac_sha1_with_clientasign_hmac_sha256_with_clientasign_hmac_sha512_with_clientasign_rsa_sha1_with_clientasign_rsa_sha256_with_clientasign_rsa_sha512_with_clientasign_plaintext_with_clientaregister_signature_methoduClient.register_signature_methoduutf-8a__init__uClient.__init__a__repr__uClient.__repr__uClient.get_oauth_signatureuClient.get_oauth_paramsTFnuClient._renderTaGETnnnasignuClient.signTuoauthlib\oauth1\rfc5849\__init__.pyTa.0wkwvTwxaencodingu<module oauthlib.oauth1.rfc5849>Ta__class__Taselfaclient_keyaclient_secretaresource_owner_keyaresource_owner_secretacallback_uriasignature_methodasignature_typearsa_keyaverifierarealmaencodingadecodinganonceatimestampaencodeTaselfaattrsaattribute_strTaselfarequestaformencodearealmauriaheadersabodyTaselfarequestanonceatimestampaparamsacontent_typeacontent_type_eligibleT
aselfarequestauriaheadersabodyacollected_paramsanormalized_paramsanormalized_uriabase_stringasigTaclsamethod_nameamethod_callbackTaselfauriahttp_methodabodyaheadersarealmarequestacontent_typeamultipartashould_have_paramsahas_paramsanew_headerswkwv.oauthlib.oauth1.rfc5849.endpoints.access_tokenfarequest_validatoraget_realmsaresource_owner_keyarealmsaoauth_tokenatoken_generatoraoauth_token_secretaoauth_authorized_realmsw asave_access_tokenaurlencodeuCreate and save a new access token.

        Similar to OAuth 2, indication of granted scopes will be included as a
        space separated list in ``oauth_authorized_realms``.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: The token as an urlencoded string.
        DuContent-Typeuapplication/x-www-form-urlencodeda_create_requestavalidate_access_token_requestutoo many values to unpack (expected 2)acreate_access_tokenainvalidate_request_tokenaclient_keylTDnlaerrorsaOAuth1Erroraurlencodedastatus_codeuCreate an access token response, with a new request token if valid.

        :param uri: The full URI of the token request.
        :param http_method: A valid HTTP verb, i.e. GET, POST, PUT, HEAD, etc.
        :param body: The request body as a string.
        :param headers: The request headers as a dict.
        :param credentials: A list of extra credentials to include in the token.
        :returns: A tuple of 3 elements.
                  1. A dict of headers to set on the response.
                  2. The response body as a string.
                  3. The response status code as an integer.

        An example of a valid request::

            >>> from your_validator import your_validator
            >>> from oauthlib.oauth1 import AccessTokenEndpoint
            >>> endpoint = AccessTokenEndpoint(your_validator)
            >>> h, b, s = endpoint.create_access_token_response(
            ...     'https://your.provider/access_token?foo=bar',
            ...     headers={
            ...         'Authorization': 'OAuth oauth_token=234lsdkf....'
            ...     },
            ...     credentials={
            ...         'my_specific': 'argument',
            ...     })
            >>> h
            {'Content-Type': 'application/x-www-form-urlencoded'}
            >>> b
            'oauth_token=lsdkfol23w54jlksdef&oauth_token_secret=qwe089234lkjsdf&oauth_authorized_realms=movies+pics&my_specific=argument'
            >>> s
            200

        An response to invalid request would have a different body and status::

            >>> b
            'error=invalid_request&description=missing+resource+owner+key'
            >>> s
            400

        The same goes for an an unauthorized request:

            >>> b
            ''
            >>> s
            401
        a_check_transport_securitya_check_mandatory_parametersaInvalidRequestErrorTuMissing resource owner.Tadescriptionacheck_request_tokenTuInvalid resource owner key format.averifierTuMissing verifier.acheck_verifierTuInvalid verifier format.avalidate_timestamp_and_nonceatimestampanonceTarequest_tokenavalidate_client_keyadummy_clientavalidate_request_tokenadummy_request_tokenavalidate_verifiera_check_signatureDais_token_requesttavalidator_logaclientaresource_ownerasignaturealogainfoTu[Failure] request verification failed.uValid client:, %suValid token:, %suValid verifier:, %suValid signature:, %suValidate an access token request.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :raises: OAuth1Error if the request is invalid.
        :returns: A tuple of 2 elements.
                  1. The validation result (True or False).
                  2. The request object.
        u
oauthlib.oauth1.rfc5849.endpoints.access_token
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of the access token provider logic of
OAuth 1.0 RFC 5849. It validates the correctness of access token requests,
creates and persists tokens as well as create the proper response to be
returned to the client.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aloggingluoauthlib.commonTaurlencodeuTaerrorslabaseTaBaseEndpointlaBaseEndpointagetLoggerTuoauthlib.oauth1.rfc5849.endpoints.access_tokena__prepare__aAccessTokenEndpointa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth1.rfc5849.endpoints.access_tokena__module__uAn endpoint responsible for providing OAuth 1 access tokens.

    Typical use is to instantiate with a request validator and invoke the
    ``create_access_token_response`` from a view function. The tuple returned
    has all information necessary (body, status, headers) to quickly form
    and return a proper response. See :doc:`/oauth1/validator` for details on which
    validator methods to implement for this endpoint.
    a__qualname__uAccessTokenEndpoint.create_access_tokenTaGETnnnacreate_access_token_responseuAccessTokenEndpoint.create_access_token_responseuAccessTokenEndpoint.validate_access_token_requesta__orig_bases__uoauthlib\oauth1\rfc5849\endpoints\access_token.pyu<module oauthlib.oauth1.rfc5849.endpoints.access_token>Ta__class__TaselfarequestacredentialsatokenTaselfauriahttp_methodabodyaheadersacredentialsaresp_headersarequestavalidaprocessed_requestatokenweTaselfarequestavalid_clientavalid_resource_owneravalid_verifieravalid_signaturewv.oauthlib.oauth1.rfc5849.endpoints.authorizationZJaoauth_tokenaresource_owner_keyaoauth_verifieratoken_generatorarequest_validatorasave_verifieruCreate and save a new request token.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param credentials: A dict of extra token credentials.
        :returns: The verifier as a dict.
        a_create_requestTahttp_methodabodyaheadersaerrorsaInvalidRequestErrorTuMissing mandatory parameter oauth_token.averify_request_tokenaInvalidClientErrorarealmsaverify_realmsTuUser granted access to realms outside of what the client may request.Tadescriptionacreate_verifieraget_redirect_uriaoobDuContent-Typeuapplication/x-www-form-urlencodedaurlencodelaadd_params_to_uriaitemsaLocationl.uCreate an authorization response, with a new request token if valid.

        :param uri: The full URI of the token request.
        :param http_method: A valid HTTP verb, i.e. GET, POST, PUT, HEAD, etc.
        :param body: The request body as a string.
        :param headers: The request headers as a dict.
        :param credentials: A list of credentials to include in the verifier.
        :returns: A tuple of 3 elements.
                  1. A dict of headers to set on the response.
                  2. The response body as a string.
                  3. The response status code as an integer.

        If the callback URI tied to the current token is "oob", a response with
        a 200 status code will be returned. In this case, it may be desirable to
        modify the response to better display the verifier to the client.

        An example of an authorization request::

            >>> from your_validator import your_validator
            >>> from oauthlib.oauth1 import AuthorizationEndpoint
            >>> endpoint = AuthorizationEndpoint(your_validator)
            >>> h, b, s = endpoint.create_authorization_response(
            ...     'https://your.provider/authorize?oauth_token=...',
            ...     credentials={
            ...         'extra': 'argument',
            ...     })
            >>> h
            {'Location': 'https://the.client/callback?oauth_verifier=...&extra=argument'}
            >>> b
            None
            >>> s
            302

        An example of a request with an "oob" callback::

            >>> from your_validator import your_validator
            >>> from oauthlib.oauth1 import AuthorizationEndpoint
            >>> endpoint = AuthorizationEndpoint(your_validator)
            >>> h, b, s = endpoint.create_authorization_response(
            ...     'https://your.provider/authorize?foo=bar',
            ...     credentials={
            ...         'extra': 'argument',
            ...     })
            >>> h
            {'Content-Type': 'application/x-www-form-urlencoded'}
            >>> b
            'oauth_verifier=...&extra=argument'
            >>> s
            200
        aget_realmsuFetch realms and credentials for the presented request token.

        :param uri: The full URI of the token request.
        :param http_method: A valid HTTP verb, i.e. GET, POST, PUT, HEAD, etc.
        :param body: The request body as a string.
        :param headers: The request headers as a dict.
        :returns: A tuple of 2 elements.
                  1. A list of request realms.
                  2. A dict of credentials which may be useful in creating the
                  authorization form.
        u
oauthlib.oauth1.rfc5849.endpoints.authorization
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for signing and checking OAuth 1.0 RFC 5849 requests.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uurllib.parseTaurlencodeluoauthlib.commonTaadd_params_to_uriuTaerrorslabaseTaBaseEndpointlaBaseEndpointa__prepare__aAuthorizationEndpointa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth1.rfc5849.endpoints.authorizationa__module__uAn endpoint responsible for letting authenticated users authorize access
    to their protected resources to a client.

    Typical use would be to have two views, one for displaying the authorization
    form and one to process said form on submission.

    The first view will want to utilize ``get_realms_and_credentials`` to fetch
    requested realms and useful client credentials, such as name and
    description, to be used when creating the authorization form.

    During form processing you can use ``create_authorization_response`` to
    validate the request, create a verifier as well as prepare the final
    redirection URI used to send the user back to the client.

    See :doc:`/oauth1/validator` for details on which validator methods to implement
    for this endpoint.
    a__qualname__uAuthorizationEndpoint.create_verifierTaGETnnnnacreate_authorization_responseuAuthorizationEndpoint.create_authorization_responseTaGETnnaget_realms_and_credentialsuAuthorizationEndpoint.get_realms_and_credentialsa__orig_bases__uoauthlib\oauth1\rfc5849\endpoints\authorization.pyu<module oauthlib.oauth1.rfc5849.endpoints.authorization>Ta__class__T
aselfauriahttp_methodabodyaheadersarealmsacredentialsarequestaverifieraredirect_uriaresponse_headersaresponse_bodyapopulated_redirectTaselfarequestacredentialsaverifierTaselfauriahttp_methodabodyaheadersarequestarealms.oauthlib.oauth1.rfc5849.endpoints.base
arequest_validatoragenerate_tokenatoken_generatorasignatureacollect_parametersaheadersTaheadersaexclude_oauth_signatureawith_realmabodyTabodyaexclude_oauth_signatureauri_queryTauri_queryaexclude_oauth_signatureu<lambda>uBaseEndpoint._get_signature_type_and_params.<locals>.<lambda>aSIGNATURE_TYPE_AUTH_HEADERautilsafilter_oauth_paramsaSIGNATURE_TYPE_BODYaSIGNATURE_TYPE_QUERYlaerrorsaInvalidRequestErroruoauth_ params must come from only 1 signaturetype but were found in %su, Tadescriptionutoo many values to unpack (expected 3)TuMissing mandatory OAuth parameters.uExtracts parameters from query, headers and body. Signature type
        is set to the source in which parameters were found.
        laCaseInsensitiveDictuContent-TypeaCONTENT_TYPE_FORM_URLENCODEDaRequestua_get_signature_type_and_paramsTuDuplicate OAuth1 entries.aoauth_signatureaoauth_consumer_keyaclient_keyaoauth_tokenaresource_owner_keyaoauth_nonceanonceaoauth_timestampatimestampaoauth_callbackaredirect_uriaoauth_verifieraverifieraoauth_signature_methodasignature_methodarealmaoauth_paramsutoo many values to unpack (expected 2)aparamsagetTaAuthorizationuaenforce_sslaurialowerastartswithTuhttps://aInsecureTransportErroraallowed_signature_methodsaInvalidSignatureMethodErroruInvalid signature, {} not in {!r}.aoauth_versionu1.0TuInvalid OAuth version.TuInvalid timestamp sizeTuTimestamp must be an integer.atimeatimestamp_lifetimeuTimestamp given is invalid, differ from allowed by over %s seconds.acheck_client_keyTuInvalid client key format.acheck_nonceTuInvalid nonce format.aSIGNATURE_RSA_SHA1aSIGNATURE_RSA_SHA256aSIGNATURE_RSA_SHA512aget_rsa_keyaverify_rsa_sha1averify_rsa_sha256averify_rsa_sha512aget_client_secretaget_request_token_secretaget_access_token_secretaSIGNATURE_HMAC_SHA1averify_hmac_sha1aSIGNATURE_HMAC_SHA256averify_hmac_sha256aSIGNATURE_HMAC_SHA512averify_hmac_sha512aSIGNATURE_PLAINTEXTaverify_plaintextu
oauthlib.oauth1.rfc5849.endpoints.base
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for signing and checking OAuth 1.0 RFC 5849 requests.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uoauthlib.commonTaCaseInsensitiveDictaRequestagenerate_tokenTaCONTENT_TYPE_FORM_URLENCODEDaSIGNATURE_HMAC_SHA1aSIGNATURE_HMAC_SHA256aSIGNATURE_HMAC_SHA512aSIGNATURE_PLAINTEXTaSIGNATURE_RSA_SHA1aSIGNATURE_RSA_SHA256aSIGNATURE_RSA_SHA512aSIGNATURE_TYPE_AUTH_HEADERaSIGNATURE_TYPE_BODYaSIGNATURE_TYPE_QUERYaerrorsasignatureautilsuoauthlib.oauth1.rfc5849.endpoints.basea__module__aBaseEndpointa__qualname__Tna__init__uBaseEndpoint.__init__uBaseEndpoint._get_signature_type_and_paramsa_create_requestuBaseEndpoint._create_requesta_check_transport_securityuBaseEndpoint._check_transport_securitya_check_mandatory_parametersuBaseEndpoint._check_mandatory_parametersTFa_check_signatureuBaseEndpoint._check_signatureTuoauthlib\oauth1\rfc5849\endpoints\base.pyTwsu<module oauthlib.oauth1.rfc5849.endpoints.base>Taselfarequest_validatoratoken_generatorTaselfarequestatsTaselfarequestais_token_requestarsa_keyavalid_signatureaclient_secretaresource_owner_secretTaselfarequestTaselfauriahttp_methodabodyaheadersarequestasignature_typeaparamsaoauth_paramsT
aselfarequestaheader_paramsabody_paramsaquery_paramsaparamsasignature_types_with_oauth_paramsafound_typesasignature_typeaoauth_params.oauthlib.oauth1.rfc5849.endpoints.a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_oauthlibu\not_existinguoauth1\rfc5849\endpointsTaNUITKA_PACKAGE_oauthlib_oauth1u\not_existingurfc5849\endpointsTaNUITKA_PACKAGE_oauthlib_oauth1_rfc5849u\not_existingaendpointsTaNUITKA_PACKAGE_oauthlib_oauth1_rfc5849_endpointsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aaccess_tokenTaAccessTokenEndpointlaAccessTokenEndpointlaauthorizationTaAuthorizationEndpointaAuthorizationEndpointabaseTaBaseEndpointaBaseEndpointarequest_tokenTaRequestTokenEndpointaRequestTokenEndpointaresourceTaResourceEndpointaResourceEndpointasignature_onlyTaSignatureOnlyEndpointaSignatureOnlyEndpointapre_configuredTaWebApplicationServeraWebApplicationServeruoauthlib\oauth1\rfc5849\endpoints\__init__.pyu<module oauthlib.oauth1.rfc5849.endpoints>u.oauthlib.oauth1.rfc5849.endpoints.pre_configuredaRequestTokenEndpointa__init__aAuthorizationEndpointaAccessTokenEndpointaResourceEndpointa__doc__a__file__a__spec__aoriginahas_locationa__cached__uTaAccessTokenEndpointaAuthorizationEndpointaRequestTokenEndpointaResourceEndpointlla__prepare__aWebApplicationServera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth1.rfc5849.endpoints.pre_configureda__module__a__qualname__uWebApplicationServer.__init__a__orig_bases__uoauthlib\oauth1\rfc5849\endpoints\pre_configured.pyu<module oauthlib.oauth1.rfc5849.endpoints.pre_configured>Ta__class__Taselfarequest_validator.oauthlib.oauth1.rfc5849.endpoints.request_tokenIdaoauth_tokenatoken_generatoraoauth_token_secretaoauth_callback_confirmedatruearequest_validatorasave_request_tokenaurlencodeuCreate and save a new request token.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param credentials: A dict of extra token credentials.
        :returns: The token as an urlencoded string.
        DuContent-Typeuapplication/x-www-form-urlencodeda_create_requestavalidate_request_token_requestutoo many values to unpack (expected 2)acreate_request_tokenlTDnlaerrorsaOAuth1Erroraurlencodedastatus_codeuCreate a request token response, with a new request token if valid.

        :param uri: The full URI of the token request.
        :param http_method: A valid HTTP verb, i.e. GET, POST, PUT, HEAD, etc.
        :param body: The request body as a string.
        :param headers: The request headers as a dict.
        :param credentials: A list of extra credentials to include in the token.
        :returns: A tuple of 3 elements.
                  1. A dict of headers to set on the response.
                  2. The response body as a string.
                  3. The response status code as an integer.

        An example of a valid request::

            >>> from your_validator import your_validator
            >>> from oauthlib.oauth1 import RequestTokenEndpoint
            >>> endpoint = RequestTokenEndpoint(your_validator)
            >>> h, b, s = endpoint.create_request_token_response(
            ...     'https://your.provider/request_token?foo=bar',
            ...     headers={
            ...         'Authorization': 'OAuth realm=movies user, oauth_....'
            ...     },
            ...     credentials={
            ...         'my_specific': 'argument',
            ...     })
            >>> h
            {'Content-Type': 'application/x-www-form-urlencoded'}
            >>> b
            'oauth_token=lsdkfol23w54jlksdef&oauth_token_secret=qwe089234lkjsdf&oauth_callback_confirmed=true&my_specific=argument'
            >>> s
            200

        An response to invalid request would have a different body and status::

            >>> b
            'error=invalid_request&description=missing+callback+uri'
            >>> s
            400

        The same goes for an an unauthorized request:

            >>> b
            ''
            >>> s
            401
        a_check_transport_securitya_check_mandatory_parametersarealmasplitTw arealmsaget_default_realmsaclient_keyacheck_realmsaInvalidRequestErroruInvalid realm {}. Allowed are {!r}.Tadescriptionaredirect_uriTuMissing callback URI.avalidate_timestamp_and_nonceatimestampanoncearesource_owner_keyTarequest_tokenavalidate_client_keyadummy_clientavalidate_requested_realmsavalidate_redirect_uriuRedirect URI must either be provided or set to a default during validation.a_check_signatureavalidator_logaclientacallbackasignaturealogainfoTu[Failure] request verification failed.uValid client: %s.uValid realm: %s.uValid callback: %s.uValid signature: %s.uValidate a request token request.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :raises: OAuth1Error if the request is invalid.
        :returns: A tuple of 2 elements.
                  1. The validation result (True or False).
                  2. The request object.
        u
oauthlib.oauth1.rfc5849.endpoints.request_token
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of the request token provider logic of
OAuth 1.0 RFC 5849. It validates the correctness of request token requests,
creates and persists tokens as well as create the proper response to be
returned to the client.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aloggingluoauthlib.commonTaurlencodeuTaerrorslabaseTaBaseEndpointlaBaseEndpointagetLoggerTuoauthlib.oauth1.rfc5849.endpoints.request_tokena__prepare__aRequestTokenEndpointa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth1.rfc5849.endpoints.request_tokena__module__uAn endpoint responsible for providing OAuth 1 request tokens.

    Typical use is to instantiate with a request validator and invoke the
    ``create_request_token_response`` from a view function. The tuple returned
    has all information necessary (body, status, headers) to quickly form
    and return a proper response. See :doc:`/oauth1/validator` for details on which
    validator methods to implement for this endpoint.
    a__qualname__uRequestTokenEndpoint.create_request_tokenTaGETnnnacreate_request_token_responseuRequestTokenEndpoint.create_request_token_responseuRequestTokenEndpoint.validate_request_token_requesta__orig_bases__uoauthlib\oauth1\rfc5849\endpoints\request_token.pyu<module oauthlib.oauth1.rfc5849.endpoints.request_token>Ta__class__TaselfarequestacredentialsatokenTaselfauriahttp_methodabodyaheadersacredentialsaresp_headersarequestavalidaprocessed_requestatokenweTaselfarequestavalid_clientavalid_realmavalid_redirectavalid_signaturewv.oauthlib.oauth1.rfc5849.endpoints.resource
Ga_create_requestaerrorsaOAuth1ErrorTFna_check_transport_securitya_check_mandatory_parametersaresource_owner_keyarequest_validatoracheck_access_tokenavalidate_timestamp_and_nonceaclient_keyatimestampanonceTaaccess_tokenavalidate_client_keyadummy_clientavalidate_access_tokenadummy_access_tokenavalidate_realmsauriTauriarealmsa_check_signatureavalidator_logaclientaresource_ownerarealmasignaturealogainfoTu[Failure] request verification failed.uValid client: %suValid token: %suValid realm: %suValid signature: %suCreate a request token response, with a new request token if valid.

        :param uri: The full URI of the token request.
        :param http_method: A valid HTTP verb, i.e. GET, POST, PUT, HEAD, etc.
        :param body: The request body as a string.
        :param headers: The request headers as a dict.
        :param realms: A list of realms the resource is protected under.
                       This will be supplied to the ``validate_realms``
                       method of the request validator.
        :returns: A tuple of 2 elements.
                  1. True if valid, False otherwise.
                  2. An oauthlib.common.Request object.
        u
oauthlib.oauth1.rfc5849.endpoints.resource
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of the resource protection provider logic of
OAuth 1.0 RFC 5849.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aloggingluTaerrorslabaseTaBaseEndpointlaBaseEndpointagetLoggerTuoauthlib.oauth1.rfc5849.endpoints.resourcea__prepare__aResourceEndpointa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth1.rfc5849.endpoints.resourcea__module__uAn endpoint responsible for protecting resources.

    Typical use is to instantiate with a request validator and invoke the
    ``validate_protected_resource_request`` in a decorator around a view
    function. If the request is valid, invoke and return the response of the
    view. If invalid create and return an error response directly from the
    decorator.

    See :doc:`/oauth1/validator` for details on which validator methods to implement
    for this endpoint.

    An example decorator::

        from functools import wraps
        from your_validator import your_validator
        from oauthlib.oauth1 import ResourceEndpoint
        endpoint = ResourceEndpoint(your_validator)

        def require_oauth(realms=None):
            def decorator(f):
                @wraps(f)
                def wrapper(request, *args, **kwargs):
                    v, r = provider.validate_protected_resource_request(
                            request.url,
                            http_method=request.method,
                            body=request.data,
                            headers=request.headers,
                            realms=realms or [])
                    if v:
                        return f(*args, **kwargs)
                    else:
                        return abort(403)
    a__qualname__TaGETnnnavalidate_protected_resource_requestuResourceEndpoint.validate_protected_resource_requesta__orig_bases__uoauthlib\oauth1\rfc5849\endpoints\resource.pyu<module oauthlib.oauth1.rfc5849.endpoints.resource>Ta__class__Taselfauriahttp_methodabodyaheadersarealmsarequestavalid_clientavalid_resource_owneravalid_realmavalid_signaturewv.oauthlib.oauth1.rfc5849.endpoints.signature_only'>a_create_requestaerrorsaOAuth1ErroralogainfouException caught while validating request, %s.TFna_check_transport_securitya_check_mandatory_parametersarequest_validatoravalidate_timestamp_and_nonceaclient_keyatimestampanonceadebugTu[Failure] verification failed: timestamp/nonceavalidate_client_keyadummy_clienta_check_signatureavalidator_logaclientasignatureTu[Failure] request verification failed.uValid client: %suValid signature: %suValidate a signed OAuth request.

        :param uri: The full URI of the token request.
        :param http_method: A valid HTTP verb, i.e. GET, POST, PUT, HEAD, etc.
        :param body: The request body as a string.
        :param headers: The request headers as a dict.
        :returns: A tuple of 2 elements.
                  1. True if valid, False otherwise.
                  2. An oauthlib.common.Request object.
        u
oauthlib.oauth1.rfc5849.endpoints.signature_only
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of the signing logic of OAuth 1.0 RFC 5849.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aloggingluTaerrorslabaseTaBaseEndpointlaBaseEndpointagetLoggerTuoauthlib.oauth1.rfc5849.endpoints.signature_onlya__prepare__aSignatureOnlyEndpointa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth1.rfc5849.endpoints.signature_onlya__module__uAn endpoint only responsible for verifying an oauth signature.a__qualname__TaGETnnavalidate_requestuSignatureOnlyEndpoint.validate_requesta__orig_bases__uoauthlib\oauth1\rfc5849\endpoints\signature_only.pyu<module oauthlib.oauth1.rfc5849.endpoints.signature_only>Ta__class__T
aselfauriahttp_methodabodyaheadersarequestaerravalid_clientavalid_signaturewv.oauthlib.oauth1.rfc5849.errorsb=adescriptionaselfu({}) {}aerrorw a__class__a__init__auriastatus_codeu
        description:    A human-readable ASCII [USASCII] text providing
                        additional information, used to assist the client
                        developer in understanding the error that occurred.
                        Values for the "error_description" parameter MUST NOT
                        include characters outside the set
                        x20-21 / x23-5B / x5D-7E.

        uri:    A URI identifying a human-readable web page with information
                about the error, used to provide the client developer with
                additional information about the error.  Values for the
                "error_uri" parameter MUST conform to the URI- Reference
                syntax, and thus MUST NOT include characters outside the set
                x21 / x23-5B / x5D-7E.

        state:  A CSRF protection value received from the client.

        request:  Oauthlib Request object
        aadd_params_to_uriatwotuplesaerror_descriptionaerror_uriaurlencodeu
oauthlib.oauth1.rfc5849.errors
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Error used both by OAuth 1 clients and provicers to represent the spec
defined error responses for all four core grant types.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uoauthlib.commonTaadd_params_to_uriaurlencodelTEExceptiona__prepare__aOAuth1Errora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth1.rfc5849.errorsa__module__a__qualname__uTnnlnuOAuth1Error.__init__ain_uriuOAuth1Error.in_uriapropertyuOAuth1Error.twotuplesaurlencodeduOAuth1Error.urlencodeda__orig_bases__aInsecureTransportErrorainsecure_transport_protocoluOnly HTTPS connections are permitted.aInvalidSignatureMethodErrorainvalid_signature_methodaInvalidRequestErrorainvalid_requestaInvalidClientErrorainvalid_clientuoauthlib\oauth1\rfc5849\errors.pyu<module oauthlib.oauth1.rfc5849.errors>Ta__class__Taselfadescriptionauriastatus_codearequestamessagea__class__TaselfauriTaselfaerrorTaself.oauthlib.oauth1.rfc5849.parameters8
5utoo many values to unpack (expected 2)autilsaescapeu{}="{}"aauthorization_header_parameters_partsaappendu, urealm="%s", uOAuth %saAuthorizationu**Prepare the Authorization header.**
    Per `section 3.5.1`_ of the spec.

    Protocol parameters can be transmitted using the HTTP "Authorization"
    header field as defined by `RFC2617`_ with the auth-scheme name set to
    "OAuth" (case insensitive).

    For example::

        Authorization: OAuth realm="Example",
            oauth_consumer_key="0685bd9184jfhq22",
            oauth_token="ad180jjd733klru7",
            oauth_signature_method="HMAC-SHA1",
            oauth_signature="wOJIO9A2W5mFwDgiDvZbTSMK%2FPY%3D",
            oauth_timestamp="137131200",
            oauth_nonce="4572616e48616d6d65724c61686176",
            oauth_version="1.0"


    .. _`section 3.5.1`: https://tools.ietf.org/html/rfc5849#section-3.5.1
    .. _`RFC2617`: https://tools.ietf.org/html/rfc2617
    asortu<lambda>u_append_params.<locals>.<lambda>TakeyuAppend OAuth params to an existing set of parameters.

    Both params and oauth_params is must be lists of 2-tuples.

    Per `section 3.5.2`_ and `3.5.3`_ of the spec.

    .. _`section 3.5.2`: https://tools.ietf.org/html/rfc5849#section-3.5.2
    .. _`3.5.3`: https://tools.ietf.org/html/rfc5849#section-3.5.3

    lastartswithTaoauth_a_append_paramsuPrepare the Form-Encoded Body.

    Per `section 3.5.2`_ of the spec.

    .. _`section 3.5.2`: https://tools.ietf.org/html/rfc5849#section-3.5.2

    aurlparseutoo many values to unpack (expected 6)aurlencodeaextract_paramsaurlunparseuPrepare the Request URI Query.

    Per `section 3.5.3`_ of the spec.

    .. _`section 3.5.3`: https://tools.ietf.org/html/rfc5849#section-3.5.3

    u
oauthlib.parameters
~~~~~~~~~~~~~~~~~~~

This module contains methods related to `section 3.5`_ of the OAuth 1.0a spec.

.. _`section 3.5`: https://tools.ietf.org/html/rfc5849#section-3.5
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uurllib.parseTaurlparseaurlunparseuoauthlib.commonTaextract_paramsaurlencodeuTautilslafilter_paramsTnnaprepare_headersaprepare_form_encoded_bodyaprepare_request_uri_queryuoauthlib\oauth1\rfc5849\parameters.pyTwiu<module oauthlib.oauth1.rfc5849.parameters>Taoauth_paramsaparamsamergedTaoauth_paramsabodyTaoauth_paramsaheadersarealmaauthorization_header_parameters_partsaoauth_parameter_nameavalueaescaped_nameaescaped_valueapartaauthorization_header_parametersaauthorization_headerafull_headersTaoauth_paramsauriaschanetapathaparaqueryafra.oauthlib.oauth1.rfc5849.request_validatorraSIGNATURE_METHODSautilsaUNICODE_ASCII_CHARACTER_SETaclient_key_lengthutoo many values to unpack (expected 2)asafe_charactersuCheck that the client key only contains safe characters
        and is no shorter than lower and no longer than upper.
        arequest_token_lengthuChecks that the request token contains only safe characters
        and is no shorter than lower and no longer than upper.
        aaccess_token_lengthuChecks that the token contains only safe characters
        and is no shorter than lower and no longer than upper.
        anonce_lengthuChecks that the nonce only contains only safe characters
        and is no shorter than lower and no longer than upper.
        averifier_lengthuChecks that the verifier contains only safe characters
        and is no shorter than lower and no longer than upper.
        uCheck that the realm is one of a set allowed realms.aselfarealmsu<genexpr>uRequestValidator.check_realms.<locals>.<genexpr>uMissing function implementation in {}: {}u
        Returns a NotImplementedError for a function that should be implemented.
        :param fn: name of the function
        a_subclass_must_implementTadummy_clientuDummy client used when an invalid client key is supplied.

        :returns: The dummy client key string.

        The dummy client should be associated with either a client secret,
        a rsa key or both depending on which signature methods are supported.
        Providers should make sure that

        get_client_secret(dummy_client)
        get_rsa_key(dummy_client)

        return a valid secret or key for the dummy client.

        This method is used by

        * AccessTokenEndpoint
        * RequestTokenEndpoint
        * ResourceEndpoint
        * SignatureOnlyEndpoint
        Tadummy_request_tokenuDummy request token used when an invalid token was supplied.

        :returns: The dummy request token string.

        The dummy request token should be associated with a request token
        secret such that get_request_token_secret(.., dummy_request_token)
        returns a valid secret.

        This method is used by

        * AccessTokenEndpoint
        Tadummy_access_tokenuDummy access token used when an invalid token was supplied.

        :returns: The dummy access token string.

        The dummy access token should be associated with an access token
        secret such that get_access_token_secret(.., dummy_access_token)
        returns a valid secret.

        This method is used by

        * ResourceEndpoint
        Taget_client_secretuRetrieves the client secret associated with the client key.

        :param client_key: The client/consumer key.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: The client secret as a string.

        This method must allow the use of a dummy client_key value.
        Fetching the secret using the dummy key must take the same amount of
        time as fetching a secret for a valid client::

            # Unlikely to be near constant time as it uses two database
            # lookups for a valid client, and only one for an invalid.
            from your_datastore import ClientSecret
            if ClientSecret.has(client_key):
                return ClientSecret.get(client_key)
            else:
                return 'dummy'

            # Aim to mimic number of latency inducing operations no matter
            # whether the client is valid or not.
            from your_datastore import ClientSecret
            return ClientSecret.get(client_key, 'dummy')

        Note that the returned key must be in plaintext.

        This method is used by

        * AccessTokenEndpoint
        * RequestTokenEndpoint
        * ResourceEndpoint
        * SignatureOnlyEndpoint
        Taget_request_token_secretuRetrieves the shared secret associated with the request token.

        :param client_key: The client/consumer key.
        :param token: The request token string.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: The token secret as a string.

        This method must allow the use of a dummy values and the running time
        must be roughly equivalent to that of the running time of valid values::

            # Unlikely to be near constant time as it uses two database
            # lookups for a valid client, and only one for an invalid.
            from your_datastore import RequestTokenSecret
            if RequestTokenSecret.has(client_key):
                return RequestTokenSecret.get((client_key, request_token))
            else:
                return 'dummy'

            # Aim to mimic number of latency inducing operations no matter
            # whether the client is valid or not.
            from your_datastore import RequestTokenSecret
            return ClientSecret.get((client_key, request_token), 'dummy')

        Note that the returned key must be in plaintext.

        This method is used by

        * AccessTokenEndpoint
        Taget_access_token_secretuRetrieves the shared secret associated with the access token.

        :param client_key: The client/consumer key.
        :param token: The access token string.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: The token secret as a string.

        This method must allow the use of a dummy values and the running time
        must be roughly equivalent to that of the running time of valid values::

            # Unlikely to be near constant time as it uses two database
            # lookups for a valid client, and only one for an invalid.
            from your_datastore import AccessTokenSecret
            if AccessTokenSecret.has(client_key):
                return AccessTokenSecret.get((client_key, request_token))
            else:
                return 'dummy'

            # Aim to mimic number of latency inducing operations no matter
            # whether the client is valid or not.
            from your_datastore import AccessTokenSecret
            return ClientSecret.get((client_key, request_token), 'dummy')

        Note that the returned key must be in plaintext.

        This method is used by

        * ResourceEndpoint
        Taget_default_realmsuGet the default realms for a client.

        :param client_key: The client/consumer key.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: The list of default realms associated with the client.

        The list of default realms will be set during client registration and
        is outside the scope of OAuthLib.

        This method is used by

        * RequestTokenEndpoint
        Taget_realmsuGet realms associated with a request token.

        :param token: The request token string.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: The list of realms associated with the request token.

        This method is used by

        * AuthorizationEndpoint
        * AccessTokenEndpoint
        Taget_redirect_uriuGet the redirect URI associated with a request token.

        :param token: The request token string.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: The redirect URI associated with the request token.

        It may be desirable to return a custom URI if the redirect is set to "oob".
        In this case, the user will be redirected to the returned URI and at that
        endpoint the verifier can be displayed.

        This method is used by

        * AuthorizationEndpoint
        Taget_rsa_keyuRetrieves a previously stored client provided RSA key.

        :param client_key: The client/consumer key.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: The rsa public key as a string.

        This method must allow the use of a dummy client_key value. Fetching
        the rsa key using the dummy key must take the same amount of time
        as fetching a key for a valid client. The dummy key must also be of
        the same bit length as client keys.

        Note that the key must be returned in plaintext.

        This method is used by

        * AccessTokenEndpoint
        * RequestTokenEndpoint
        * ResourceEndpoint
        * SignatureOnlyEndpoint
        Tainvalidate_request_tokenuInvalidates a used request token.

        :param client_key: The client/consumer key.
        :param request_token: The request token string.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: None

        Per `Section 2.3`_ of the spec:

        "The server MUST (...) ensure that the temporary
        credentials have not expired or been used before."

        .. _`Section 2.3`: https://tools.ietf.org/html/rfc5849#section-2.3

        This method should ensure that provided token won't validate anymore.
        It can be simply removing RequestToken from storage or setting
        specific flag that makes it invalid (note that such flag should be
        also validated during request token validation).

        This method is used by

        * AccessTokenEndpoint
        Tavalidate_client_keyuValidates that supplied client key is a registered and valid client.

        :param client_key: The client/consumer key.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: True or False

        Note that if the dummy client is supplied it should validate in same
        or nearly the same amount of time as a valid one.

        Ensure latency inducing tasks are mimiced even for dummy clients.
        For example, use::

            from your_datastore import Client
            try:
                return Client.exists(client_key, access_token)
            except DoesNotExist:
                return False

        Rather than::

            from your_datastore import Client
            if access_token == self.dummy_access_token:
                return False
            else:
                return Client.exists(client_key, access_token)

        This method is used by

        * AccessTokenEndpoint
        * RequestTokenEndpoint
        * ResourceEndpoint
        * SignatureOnlyEndpoint
        Tavalidate_request_tokenuValidates that supplied request token is registered and valid.

        :param client_key: The client/consumer key.
        :param token: The request token string.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: True or False

        Note that if the dummy request_token is supplied it should validate in
        the same nearly the same amount of time as a valid one.

        Ensure latency inducing tasks are mimiced even for dummy clients.
        For example, use::

            from your_datastore import RequestToken
            try:
                return RequestToken.exists(client_key, access_token)
            except DoesNotExist:
                return False

        Rather than::

            from your_datastore import RequestToken
            if access_token == self.dummy_access_token:
                return False
            else:
                return RequestToken.exists(client_key, access_token)

        This method is used by

        * AccessTokenEndpoint
        Tavalidate_access_tokenuValidates that supplied access token is registered and valid.

        :param client_key: The client/consumer key.
        :param token: The access token string.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: True or False

        Note that if the dummy access token is supplied it should validate in
        the same or nearly the same amount of time as a valid one.

        Ensure latency inducing tasks are mimiced even for dummy clients.
        For example, use::

            from your_datastore import AccessToken
            try:
                return AccessToken.exists(client_key, access_token)
            except DoesNotExist:
                return False

        Rather than::

            from your_datastore import AccessToken
            if access_token == self.dummy_access_token:
                return False
            else:
                return AccessToken.exists(client_key, access_token)

        This method is used by

        * ResourceEndpoint
        Tavalidate_timestamp_and_nonceuValidates that the nonce has not been used before.

        :param client_key: The client/consumer key.
        :param timestamp: The ``oauth_timestamp`` parameter.
        :param nonce: The ``oauth_nonce`` parameter.
        :param request_token: Request token string, if any.
        :param access_token: Access token string, if any.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: True or False

        Per `Section 3.3`_ of the spec.

        "A nonce is a random string, uniquely generated by the client to allow
        the server to verify that a request has never been made before and
        helps prevent replay attacks when requests are made over a non-secure
        channel.  The nonce value MUST be unique across all requests with the
        same timestamp, client credentials, and token combinations."

        .. _`Section 3.3`: https://tools.ietf.org/html/rfc5849#section-3.3

        One of the first validation checks that will be made is for the validity
        of the nonce and timestamp, which are associated with a client key and
        possibly a token. If invalid then immediately fail the request
        by returning False. If the nonce/timestamp pair has been used before and
        you may just have detected a replay attack. Therefore it is an essential
        part of OAuth security that you not allow nonce/timestamp reuse.
        Note that this validation check is done before checking the validity of
        the client and token.::

           nonces_and_timestamps_database = [
              (u'foo', 1234567890, u'rannoMstrInghere', u'bar')
           ]

           def validate_timestamp_and_nonce(self, client_key, timestamp, nonce,
              request_token=None, access_token=None):

              return ((client_key, timestamp, nonce, request_token or access_token)
                       not in self.nonces_and_timestamps_database)

        This method is used by

        * AccessTokenEndpoint
        * RequestTokenEndpoint
        * ResourceEndpoint
        * SignatureOnlyEndpoint
        Tavalidate_redirect_uriuValidates the client supplied redirection URI.

        :param client_key: The client/consumer key.
        :param redirect_uri: The URI the client which to redirect back to after
                             authorization is successful.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: True or False

        It is highly recommended that OAuth providers require their clients
        to register all redirection URIs prior to using them in requests and
        register them as absolute URIs. See `CWE-601`_ for more information
        about open redirection attacks.

        By requiring registration of all redirection URIs it should be
        straightforward for the provider to verify whether the supplied
        redirect_uri is valid or not.

        Alternatively per `Section 2.1`_ of the spec:

        "If the client is unable to receive callbacks or a callback URI has
        been established via other means, the parameter value MUST be set to
        "oob" (case sensitive), to indicate an out-of-band configuration."

        .. _`CWE-601`: http://cwe.mitre.org/top25/index.html#CWE-601
        .. _`Section 2.1`: https://tools.ietf.org/html/rfc5849#section-2.1

        This method is used by

        * RequestTokenEndpoint
        Tavalidate_requested_realmsuValidates that the client may request access to the realm.

        :param client_key: The client/consumer key.
        :param realms: The list of realms that client is requesting access to.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: True or False

        This method is invoked when obtaining a request token and should
        tie a realm to the request token and after user authorization
        this realm restriction should transfer to the access token.

        This method is used by

        * RequestTokenEndpoint
        Tavalidate_realmsuValidates access to the request realm.

        :param client_key: The client/consumer key.
        :param token: A request token string.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param uri: The URI the realms is protecting.
        :param realms: A list of realms that must have been granted to
                       the access token.
        :returns: True or False

        How providers choose to use the realm parameter is outside the OAuth
        specification but it is commonly used to restrict access to a subset
        of protected resources such as "photos".

        realms is a convenience parameter which can be used to provide
        a per view method pre-defined list of allowed realms.

        Can be as simple as::

            from your_datastore import RequestToken
            request_token = RequestToken.get(token, None)

            if not request_token:
                return False
            return set(request_token.realms).issuperset(set(realms))

        This method is used by

        * ResourceEndpoint
        Tavalidate_verifieruValidates a verification code.

        :param client_key: The client/consumer key.
        :param token: A request token string.
        :param verifier: The authorization verifier string.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: True or False

        OAuth providers issue a verification code to clients after the
        resource owner authorizes access. This code is used by the client to
        obtain token credentials and the provider must verify that the
        verifier is valid and associated with the client as well as the
        resource owner.

        Verifier validation should be done in near constant time
        (to avoid verifier enumeration). To achieve this we need a
        constant time string comparison which is provided by OAuthLib
        in ``oauthlib.common.safe_string_equals``::

            from your_datastore import Verifier
            correct_verifier = Verifier.get(client_key, request_token)
            from oauthlib.common import safe_string_equals
            return safe_string_equals(verifier, correct_verifier)

        This method is used by

        * AccessTokenEndpoint
        Taverify_request_tokenuVerify that the given OAuth1 request token is valid.

        :param token: A request token string.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: True or False

        This method is used only in AuthorizationEndpoint to check whether the
        oauth_token given in the authorization URL is valid or not.
        This request is not signed and thus similar ``validate_request_token``
        method can not be used.

        This method is used by

        * AuthorizationEndpoint
        Taverify_realmsuVerify authorized realms to see if they match those given to token.

        :param token: An access token string.
        :param realms: A list of realms the client attempts to access.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :returns: True or False

        This prevents the list of authorized realms sent by the client during
        the authorization step to be altered to include realms outside what
        was bound with the request token.

        Can be as simple as::

            valid_realms = self.get_realms(token)
            return all((r in valid_realms for r in realms))

        This method is used by

        * AuthorizationEndpoint
        Tasave_access_tokenuSave an OAuth1 access token.

        :param token: A dict with token credentials.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request

        The token dictionary will at minimum include

        * ``oauth_token`` the access token string.
        * ``oauth_token_secret`` the token specific secret used in signing.
        * ``oauth_authorized_realms`` a space separated list of realms.

        Client key can be obtained from ``request.client_key``.

        The list of realms (not joined string) can be obtained from
        ``request.realm``.

        This method is used by

        * AccessTokenEndpoint
        Tasave_request_tokenuSave an OAuth1 request token.

        :param token: A dict with token credentials.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request

        The token dictionary will at minimum include

        * ``oauth_token`` the request token string.
        * ``oauth_token_secret`` the token specific secret used in signing.
        * ``oauth_callback_confirmed`` the string ``true``.

        Client key can be obtained from ``request.client_key``.

        This method is used by

        * RequestTokenEndpoint
        Tasave_verifieruAssociate an authorization verifier with a request token.

        :param token: A request token string.
        :param verifier: A dictionary containing the oauth_verifier and
                        oauth_token
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request

        We need to associate verifiers with tokens for validation during the
        access token request.

        Note that unlike save_x_token token here is the ``oauth_token`` token
        string from the request token saved previously.

        This method is used by

        * AuthorizationEndpoint
        u
oauthlib.oauth1.rfc5849
~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for signing and checking OAuth 1.0 RFC 5849 requests.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uTaSIGNATURE_METHODSautilslluoauthlib.oauth1.rfc5849.request_validatora__module__uA validator/datastore interaction base class for OAuth 1 providers.

    OAuth providers should inherit from RequestValidator and implement the
    methods and properties outlined below. Further details are provided in the
    documentation for each method and property.

    Methods used to check the format of input parameters. Common tests include
    length, character set, membership, range or pattern. These tests are
    referred to as `whitelisting or blacklisting`_. Whitelisting is better
    but blacklisting can be useful to spot malicious activity.
    The following have methods a default implementation:

    - check_client_key
    - check_request_token
    - check_access_token
    - check_nonce
    - check_verifier
    - check_realms

    The methods above default to whitelist input parameters, checking that they
    are alphanumerical and between a minimum and maximum length. Rather than
    overloading the methods a few properties can be used to configure these
    methods.

    * @safe_characters -> (character set)
    * @client_key_length -> (min, max)
    * @request_token_length -> (min, max)
    * @access_token_length -> (min, max)
    * @nonce_length -> (min, max)
    * @verifier_length -> (min, max)
    * @realms -> [list, of, realms]

    Methods used to validate/invalidate input parameters. These checks usually
    hit either persistent or temporary storage such as databases or the
    filesystem. See each methods documentation for detailed usage.
    The following methods must be implemented:

    - validate_client_key
    - validate_request_token
    - validate_access_token
    - validate_timestamp_and_nonce
    - validate_redirect_uri
    - validate_requested_realms
    - validate_realms
    - validate_verifier
    - invalidate_request_token

    Methods used to retrieve sensitive information from storage.
    The following methods must be implemented:

    - get_client_secret
    - get_request_token_secret
    - get_access_token_secret
    - get_rsa_key
    - get_realms
    - get_default_realms
    - get_redirect_uri

    Methods used to save credentials.
    The following methods must be implemented:

    - save_request_token
    - save_verifier
    - save_access_token

    Methods used to verify input parameters. This methods are used during
    authorizing request token by user (AuthorizationEndpoint), to check if
    parameters are valid. During token authorization request is not signed,
    thus 'validation' methods can not be used. The following methods must be
    implemented:

    - verify_realms
    - verify_request_token

    To prevent timing attacks it is necessary to not exit early even if the
    client key or resource owner key is invalid. Instead dummy values should
    be used during the remaining verification process. It is very important
    that the dummy client and token are valid input parameters to the methods
    get_client_secret, get_rsa_key and get_(access/request)_token_secret and
    that the running time of those methods when given a dummy value remain
    equivalent to the running time when given a valid client/resource owner.
    The following properties must be implemented:

    * @dummy_client
    * @dummy_request_token
    * @dummy_access_token

    Example implementations have been provided, note that the database used is
    a simple dictionary and serves only an illustrative purpose. Use whichever
    database suits your project and how to access it is entirely up to you.
    The methods are introduced in an order which should make understanding
    their use more straightforward and as such it could be worth reading what
    follows in chronological order.

    .. _`whitelisting or blacklisting`: https://www.schneier.com/blog/archives/2011/01/whitelisting_vs.html
    aRequestValidatora__qualname__a__init__uRequestValidator.__init__aallowed_signature_methodsuRequestValidator.allowed_signature_methodsuRequestValidator.safe_charactersTlluRequestValidator.client_key_lengthuRequestValidator.request_token_lengthuRequestValidator.access_token_lengthlXatimestamp_lifetimeuRequestValidator.timestamp_lifetimeuRequestValidator.nonce_lengthuRequestValidator.verifier_lengthuRequestValidator.realmsaenforce_ssluRequestValidator.enforce_sslacheck_client_keyuRequestValidator.check_client_keyacheck_request_tokenuRequestValidator.check_request_tokenacheck_access_tokenuRequestValidator.check_access_tokenacheck_nonceuRequestValidator.check_nonceacheck_verifieruRequestValidator.check_verifieracheck_realmsuRequestValidator.check_realmsuRequestValidator._subclass_must_implementadummy_clientuRequestValidator.dummy_clientadummy_request_tokenuRequestValidator.dummy_request_tokenadummy_access_tokenuRequestValidator.dummy_access_tokenaget_client_secretuRequestValidator.get_client_secretaget_request_token_secretuRequestValidator.get_request_token_secretaget_access_token_secretuRequestValidator.get_access_token_secretaget_default_realmsuRequestValidator.get_default_realmsaget_realmsuRequestValidator.get_realmsaget_redirect_uriuRequestValidator.get_redirect_uriaget_rsa_keyuRequestValidator.get_rsa_keyainvalidate_request_tokenuRequestValidator.invalidate_request_tokenavalidate_client_keyuRequestValidator.validate_client_keyavalidate_request_tokenuRequestValidator.validate_request_tokenavalidate_access_tokenuRequestValidator.validate_access_tokenTnnavalidate_timestamp_and_nonceuRequestValidator.validate_timestamp_and_nonceavalidate_redirect_uriuRequestValidator.validate_redirect_uriavalidate_requested_realmsuRequestValidator.validate_requested_realmsavalidate_realmsuRequestValidator.validate_realmsavalidate_verifieruRequestValidator.validate_verifieraverify_request_tokenuRequestValidator.verify_request_tokenaverify_realmsuRequestValidator.verify_realmsasave_access_tokenuRequestValidator.save_access_tokenasave_request_tokenuRequestValidator.save_request_tokenasave_verifieruRequestValidator.save_verifierTuoauthlib\oauth1\rfc5849\request_validator.pyTa.0wraselfu<module oauthlib.oauth1.rfc5849.request_validator>Ta__class__TaselfTaselfafnwmTaselfarequest_tokenaloweraupperTaselfaclient_keyaloweraupperTaselfanoncealoweraupperTaselfarealmsTaselfaverifieraloweraupperTaselfaclient_keyatokenarequestTaselfaclient_keyarequestTaselfatokenarequestTaselfaclient_keyarequest_tokenarequestTaselfatokenaverifierarequestTaselfaclient_keyatokenarequestauriarealmsTaselfaclient_keyaredirect_uriarequestTaselfaclient_keyarealmsarequestTaselfaclient_keyatimestampanoncearequestarequest_tokenaaccess_tokenTaselfaclient_keyatokenaverifierarequestTaselfatokenarealmsarequest.oauthlib.oauth1.rfc5849.signature1autilsaescapeaupperw&u
    Construct the signature base string.

    The *signature base string* is the value that is calculated and signed by
    the client. It is also independently calculated by the server to verify
    the signature, and therefore must produce the exact same value at both
    ends or the signature won't verify.

    The rules for calculating the *signature base string* are defined in
    section 3.4.1.1`_ of RFC 5849.

    .. _`section 3.4.1.1`: https://tools.ietf.org/html/rfc5849#section-3.4.1.1
    uuri must be a string.aurlparseaschemeahostnameaportapathaparamsumissing schemew/aloweruu://umissing hostaipaddressaip_addressaIPv6Addressw[w]aIPv4Addresslluport out of rangeTTahttplPTahttpslw:aurlunparseareplaceTw u%20u
    Calculates the _base string URI_.

    The *base string URI* is one of the components that make up the
     *signature base string*.

    The ``host`` is optional. If provided, it is used to override any host and
    port values in the ``uri``. The value for ``host`` is usually extracted from
    the "Host" request header from the HTTP request. Its value may be just the
    hostname, or the hostname followed by a colon and a TCP/IP port number
    (hostname:port). If a value for the``host`` is provided but it does not
    contain a port number, the default port number is used (i.e. if the ``uri``
    contained a port number, it will be discarded).

    The rules for calculating the *base string URI* are defined in
    section 3.4.1.2`_ of RFC 5849.

    .. _`section 3.4.1.2`: https://tools.ietf.org/html/rfc5849#section-3.4.1.2

    :param uri: URI
    :param host: hostname with optional port number, separated by a colon
    :return: base string URI
    aurldecodeaitemsutoo many values to unpack (expected 2)agetTaauthorizationaparse_authorization_headerarealmaextract_paramsaextendastartswithTaoauth_aunescapeaunescaped_paramsaappendu<lambda>ucollect_parameters.<locals>.<lambda>u
    Gather the request parameters from all the parameter sources.

    This function is used to extract all the parameters, which are then passed
    to ``normalize_parameters`` to produce one of the components that make up
    the *signature base string*.

    Parameters starting with `oauth_` will be unescaped.

    Body parameters must be supplied as a dict, a list of 2-tuples, or a
    form encoded query string.

    Headers must be supplied as a dict.

    The rules where the parameters must be sourced from are defined in
    `section 3.4.1.3.1`_ of RFC 5849.

    .. _`Sec 3.4.1.3.1`: https://tools.ietf.org/html/rfc5849#section-3.4.1.3.1
    aoauth_signatureasortu{}={}u
    Calculate the normalized request parameters.

    The *normalized request parameters* is one of the components that make up
    the *signature base string*.

    The rules for parameter normalization are defined in `section 3.4.1.3.2`_ of
    RFC 5849.

    .. _`Sec 3.4.1.3.2`: https://tools.ietf.org/html/rfc5849#section-3.4.1.3.2
    uSHA-1ahashlibasha1uSHA-256asha256uSHA-512asha512aencodeTuutf-8ahmacanewabinasciiab2a_base64adigest:nlnadecodeu
    **HMAC-SHA256**

    The "HMAC-SHA256" signature method uses the HMAC-SHA256 signature
    algorithm as defined in `RFC4634`_::

        digest = HMAC-SHA256 (key, text)

    Per `section 3.4.2`_ of the spec.

    .. _`RFC4634`: https://tools.ietf.org/html/rfc4634
    .. _`section 3.4.2`: https://tools.ietf.org/html/rfc5849#section-3.4.2
    anormalize_parametersabase_string_uriauriasignature_base_stringahttp_methoda_sign_hmacasafe_string_equalsasignaturealogadebuguVerify HMAC failed: signature base string: %suVerify a HMAC-SHA1 signature.

    Per `section 3.4`_ of the spec.

    .. _`section 3.4`: https://tools.ietf.org/html/rfc5849#section-3.4

    To satisfy `RFC2616 section 5.2`_ item 1, the request argument's uri
    attribute MUST be an absolute URI whose netloc part identifies the
    origin server or gateway on which the resource resides. Any Host
    item of the request argument's headers dict attribute will be
    ignored.

    .. _`RFC2616 section 5.2`: https://tools.ietf.org/html/rfc2616#section-5.2

    aclient_secretaresource_owner_secreta_verify_hmacawarningsawarnuuse sign_hmac_sha1_with_client instead of sign_hmac_sha1aDeprecationWarningTaasciiu
    Deprecated function for calculating a HMAC-SHA1 signature.

    This function has been replaced by invoking ``sign_hmac`` with "SHA-1"
    as the hash algorithm name.

    This function was invoked by sign_hmac_sha1_with_client and
    test_signatures.py, but does any application invoke it directly? If not,
    it can be removed.
    uuse sign_hmac_sha256_with_client instead of sign_hmac_sha256u
    Deprecated function for calculating a HMAC-SHA256 signature.

    This function has been replaced by invoking ``sign_hmac`` with "SHA-256"
    as the hash algorithm name.

    This function was invoked by sign_hmac_sha256_with_client and
    test_signatures.py, but does any application invoke it directly? If not,
    it can be removed.
    a_jwt_rsaujwt.algorithmsaalgorithmsahashesaSHA1aSHA256aSHA512aRSAAlgorithmu
    Obtains an RSAAlgorithm object that implements RSA with the hash algorithm.

    This method maintains the ``_jwt_rsa`` cache.

    Returns a jwt.algorithm.RSAAlgorithm.
    aprepare_keyu
    Prepare a PEM encoded key (public or private), by invoking the `prepare_key`
    method on alg with the keystr.

    The keystr should be a string or bytes.  If the keystr is bytes, it is
    decoded as UTF-8 before being passed to prepare_key. Otherwise, it
    is passed directly.
    a_get_jwt_rsa_algorithmursa_private_key required for RSA with ahash_alganameu signature methoda_prepare_key_plusasignu
    Calculate the signature for an RSA-based signature method.

    The ``alg`` is used to calculate the digest over the signature base string.
    For the "RSA_SHA1" signature method, the alg must be SHA-1. While OAuth 1.0a
    only defines the RSA-SHA1 signature method, this function can be used for
    other non-standard signature methods that only differ from RSA-SHA1 by the
    digest algorithm.

    Signing for the RSA-SHA1 signature method is defined in
    `section 3.4.3`_ of RFC 5849.

    The RSASSA-PKCS1-v1_5 signature algorithm used defined by
    `RFC3447, Section 8.2`_ (also known as PKCS#1), with the `alg` as the
    hash function for EMSA-PKCS1-v1_5.  To
    use this method, the client MUST have established client credentials
    with the server that included its RSA public key (in a manner that is
    beyond the scope of this specification).

    .. _`section 3.4.3`: https://tools.ietf.org/html/rfc5849#section-3.4.3
    .. _`RFC3447, Section 8.2`: https://tools.ietf.org/html/rfc3447#section-8.2
    aa2b_base64averifyuVerify failed: RSA with u: signature base string=%su
    Verify a base64 encoded signature for a RSA-based signature method.

    The ``alg`` is used to calculate the digest over the signature base string.
    For the "RSA_SHA1" signature method, the alg must be SHA-1. While OAuth 1.0a
    only defines the RSA-SHA1 signature method, this function can be used for
    other non-standard signature methods that only differ from RSA-SHA1 by the
    digest algorithm.

    Verification for the RSA-SHA1 signature method is defined in
    `section 3.4.3`_ of RFC 5849.

    .. _`section 3.4.3`: https://tools.ietf.org/html/rfc5849#section-3.4.3

        To satisfy `RFC2616 section 5.2`_ item 1, the request argument's uri
        attribute MUST be an absolute URI whose netloc part identifies the
        origin server or gateway on which the resource resides. Any Host
        item of the request argument's headers dict attribute will be
        ignored.

        .. _`RFC2616 Sec 5.2`: https://tools.ietf.org/html/rfc2616#section-5.2
    a_sign_rsaarsa_keya_verify_rsauuse _sign_rsa("SHA-1", ...) instead of sign_rsa_sha1u
    Deprecated function for calculating a RSA-SHA1 signature.

    This function has been replaced by invoking ``sign_rsa`` with "SHA-1"
    as the hash algorithm name.

    This function was invoked by sign_rsa_sha1_with_client and
    test_signatures.py, but does any application invoke it directly? If not,
    it can be removed.
    asign_plaintextuSign a request using plaintext.

    Per `section 3.4.4`_ of the spec.

    The "PLAINTEXT" method does not employ a signature algorithm.  It
    MUST be used with a transport-layer mechanism such as TLS or SSL (or
    sent over a secure channel with equivalent protections).  It does not
    utilize the signature base string or the "oauth_timestamp" and
    "oauth_nonce" parameters.

    .. _`section 3.4.4`: https://tools.ietf.org/html/rfc5849#section-3.4.4

    TuVerify PLAINTEXT faileduVerify a PLAINTEXT signature.

    Per `section 3.4`_ of the spec.

    .. _`section 3.4`: https://tools.ietf.org/html/rfc5849#section-3.4
    u
This module is an implementation of `section 3.4`_ of RFC 5849.

**Usage**

Steps for signing a request:

1. Collect parameters from the request using ``collect_parameters``.
2. Normalize those parameters using ``normalize_parameters``.
3. Create the *base string URI* using ``base_string_uri``.
4. Create the *signature base string* from the above three components
   using ``signature_base_string``.
5. Pass the *signature base string* and the client credentials to one of the
   sign-with-client functions. The HMAC-based signing functions needs
   client credentials with secrets. The RSA-based signing functions needs
   client credentials with an RSA private key.

To verify a request, pass the request and credentials to one of the verify
functions. The HMAC-based signing functions needs the shared secrets. The
RSA-based verify functions needs the RSA public key.

**Scope**

All of the functions in this module should be considered internal to OAuthLib,
since they are not imported into the "oauthlib.oauth1" module. Programs using
OAuthLib should not use directly invoke any of the functions in this module.

**Deprecated functions**

The "sign_" methods that are not "_with_client" have been deprecated. They may
be removed in a future release. Since they are all internal functions, this
should have no impact on properly behaving programs.

.. _`section 3.4`: https://tools.ietf.org/html/rfc5849#section-3.4
a__doc__a__file__a__spec__aoriginahas_locationa__cached__alogginguurllib.parseaparseuoauthlib.commonTaextract_paramsasafe_string_equalsaurldecodeTautilslagetLoggerTuoauthlib.oauth1.rfc5849.signatureDahttp_methodabase_str_urianormalized_encoded_request_parametersareturnOstrpppTnDauriahostareturnOstrppTunntFacollect_parametersDareturnOstrDahash_algorithm_nameasig_base_straclient_secretaresource_owner_secretOstrpppTnnDahash_algorithm_nameOstrasign_hmac_sha1_with_clientaverify_hmac_sha1asign_hmac_sha1asign_hmac_sha256_with_clientaverify_hmac_sha256asign_hmac_sha256Dasig_base_strOstrasign_hmac_sha512_with_clientDaclient_secretaresource_owner_secretOstrpaverify_hmac_sha512Dahash_algorithm_nameasig_base_strarsa_private_keyOstrppDahash_algorithm_namearsa_public_keyOstrpasign_rsa_sha1_with_clientDarsa_public_keyOstraverify_rsa_sha1asign_rsa_sha1asign_rsa_sha256_with_clientaverify_rsa_sha256asign_rsa_sha512_with_clientaverify_rsa_sha512asign_plaintext_with_clientaverify_plaintextuoauthlib\oauth1\rfc5849\signature.pyTwiu<module oauthlib.oauth1.rfc5849.signature>Tahash_algorithm_nameajwt_algorithmswmwvTaalgakeystrTahash_algorithm_nameasig_base_straclient_secretaresource_owner_secretatextakeywmahash_algakey_utf8atext_utf8asignatureTahash_algorithm_nameasig_base_strarsa_private_keyaalgwmakeywsTahash_algorithm_namearequestaclient_secretaresource_owner_secretanorm_paramsabs_uriasig_base_strasignatureamatchT
ahash_algorithm_namearequestarsa_public_keyanorm_paramsabs_uriasig_base_strasigaalgakeyaverify_okT
auriahostaoutputaschemeahostnameaportapathaparamsanetlocwvTauri_queryabodyaheadersaexclude_oauth_signatureawith_realmaparamsaheaders_loweraauthorization_headerabodyparamsaunescaped_paramswkwvTaparamsakey_valuesaparameter_partsTabase_stringaclient_secretaresource_owner_secretTasig_base_straclientTaclient_secretaresource_owner_secretasignatureTa_signature_base_stringaclientTabase_stringarsa_private_keyTahttp_methodabase_str_urianormalized_encoded_request_parametersabase_stringTarequestaclient_secretaresource_owner_secretTarequestaclient_secretaresource_owner_secretasignatureamatchTarequestarsa_public_key.oauthlib.oauth1.rfc5849.utils6;awrapperufilter_params.<locals>.wrappera__doc__uDecorator which filters params to remove non-oauth_* parameters

    Assumes the decorated method takes a params dict or list of tuples as its
    first argument.
    afilter_oauth_paramsatargetu<lambda>ufilter_oauth_params.<locals>.<lambda>aitemsuRemoves all non oauth parameters from a dict or a list of params.lastartswithTaoauth_uOnly unicode objects are escapable. uGot {!r} of type {}.aquoteDasafed~uEscape a unicode string in an OAuth-compatible fashion.

    Per `section 3.6`_ of the spec.

    .. _`section 3.6`: https://tools.ietf.org/html/rfc5849#section-3.6

    uOnly unicode objects are unescapable.aunquoteaurllib2aparse_keqv_listuA unicode-safe version of urllib2.parse_keqv_listaparse_http_listuA unicode-safe version of urllib2.parse_http_list:nlnalowerTuoauth :lnnTEIndexErrorEValueErroruMalformed authorization headeruParse an OAuth authorization header into a list of 2-tuplesu
oauthlib.utils
~~~~~~~~~~~~~~

This module contains utility methods used by various parts of the OAuth
spec.
a__file__a__spec__aoriginahas_locationa__cached__uurllib.requestarequestuoauthlib.commonTaquoteaunquoteaabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789aUNICODE_ASCII_CHARACTER_SETafilter_paramsaescapeaunescapeaparse_authorization_headeruoauthlib\oauth1\rfc5849\utils.pyTakvu<module oauthlib.oauth1.rfc5849.utils>TwuTaparamsais_oauthTatargetawrapperTaauthorization_headeraauth_schemeaitemsTwlTaparamsaargsakwargsatargetTatargetu.oauthlib.oauth26[u
oauthlib.oauth2
~~~~~~~~~~~~~~

This module is a wrapper for the most recent implementation of OAuth 2.0 Client
and Server classes.
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_oauthlibu\not_existingaoauth2TaNUITKA_PACKAGE_oauthlib_oauth2u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__urfc6749.clientsTaBackendApplicationClientaClientaLegacyApplicationClientaMobileApplicationClientaServiceApplicationClientaWebApplicationClientlaBackendApplicationClientlaClientaLegacyApplicationClientaMobileApplicationClientaServiceApplicationClientaWebApplicationClienturfc6749.endpointsTaAuthorizationEndpointaBackendApplicationServeraIntrospectEndpointaLegacyApplicationServeraMetadataEndpointaMobileApplicationServeraResourceEndpointaRevocationEndpointaServeraTokenEndpointaWebApplicationServeraAuthorizationEndpointaBackendApplicationServeraIntrospectEndpointaLegacyApplicationServeraMetadataEndpointaMobileApplicationServeraResourceEndpointaRevocationEndpointaServeraTokenEndpointaWebApplicationServerurfc6749.errorsTaAccessDeniedErroraFatalClientErroraInsecureTransportErroraInvalidClientErroraInvalidClientIdErroraInvalidGrantErroraInvalidRedirectURIErroraInvalidRequestErroraInvalidRequestFatalErroraInvalidScopeErroraMismatchingRedirectURIErroraMismatchingStateErroraMissingClientIdErroraMissingCodeErroraMissingRedirectURIErroraMissingResponseTypeErroraMissingTokenErroraMissingTokenTypeErroraOAuth2ErroraServerErroraTemporarilyUnavailableErroraTokenExpiredErroraUnauthorizedClientErroraUnsupportedGrantTypeErroraUnsupportedResponseTypeErroraUnsupportedTokenTypeErroraAccessDeniedErroraFatalClientErroraInsecureTransportErroraInvalidClientErroraInvalidClientIdErroraInvalidGrantErroraInvalidRedirectURIErroraInvalidRequestErroraInvalidRequestFatalErroraInvalidScopeErroraMismatchingRedirectURIErroraMismatchingStateErroraMissingClientIdErroraMissingCodeErroraMissingRedirectURIErroraMissingResponseTypeErroraMissingTokenErroraMissingTokenTypeErroraOAuth2ErroraServerErroraTemporarilyUnavailableErroraTokenExpiredErroraUnauthorizedClientErroraUnsupportedGrantTypeErroraUnsupportedResponseTypeErroraUnsupportedTokenTypeErrorurfc6749.grant_typesTaAuthorizationCodeGrantaClientCredentialsGrantaImplicitGrantaRefreshTokenGrantaResourceOwnerPasswordCredentialsGrantaAuthorizationCodeGrantaClientCredentialsGrantaImplicitGrantaRefreshTokenGrantaResourceOwnerPasswordCredentialsGranturfc6749.request_validatorTaRequestValidatoraRequestValidatorurfc6749.tokensTaBearerTokenaOAuth2TokenaBearerTokenaOAuth2Tokenurfc6749.utilsTais_secure_transportais_secure_transporturfc8628.clientsTaDeviceClientaDeviceClientuoauthlib\oauth2\__init__.pyu<module oauthlib.oauth2>u.oauthlib.oauth2.rfc6749.clients.backend_application
*aclient_idainclude_client_idascopeaprepare_token_requestagrant_typeabodyuAdd the client credentials to the request body.

        The client makes a request to the token endpoint by adding the
        following parameters using the "application/x-www-form-urlencoded"
        format per `Appendix B`_ in the HTTP request entity-body:

        :param body: Existing request body (URL encoded string) to embed parameters
                     into. This may contain extra parameters. Default ''.
        :param scope:   The scope of the access request as described by
                        `Section 3.3`_.

        :param include_client_id: `True` to send the `client_id` in the
                                  body of the upstream request. This is required
                                  if the client is not authenticating with the
                                  authorization server as described in
                                  `Section 3.2.1`_. False otherwise (default).
        :type include_client_id: Boolean

        :param kwargs:  Extra credentials to include in the token request.

        The client MUST authenticate with the authorization server as
        described in `Section 3.2.1`_.

        The prepared body will include all provided credentials as well as
        the ``grant_type`` parameter set to ``client_credentials``::

            >>> from oauthlib.oauth2 import BackendApplicationClient
            >>> client = BackendApplicationClient('your_id')
            >>> client.prepare_request_body(scope=['hello', 'world'])
            'grant_type=client_credentials&scope=hello+world'

        .. _`Appendix B`: https://tools.ietf.org/html/rfc6749#appendix-B
        .. _`Section 3.3`: https://tools.ietf.org/html/rfc6749#section-3.3
        .. _`Section 3.2.1`: https://tools.ietf.org/html/rfc6749#section-3.2.1
        u
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 RFC6749.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aparametersTaprepare_token_requestllabaseTaClientlaClienta__prepare__aBackendApplicationClienta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.clients.backend_applicationa__module__uA public client utilizing the client credentials grant workflow.

    The client can request an access token using only its client
    credentials (or other supported means of authentication) when the
    client is requesting access to the protected resources under its
    control, or those of another resource owner which has been previously
    arranged with the authorization server (the method of which is beyond
    the scope of this specification).

    The client credentials grant type MUST only be used by confidential
    clients.

    Since the client authentication is used as the authorization grant,
    no additional authorization request is needed.
    a__qualname__aclient_credentialsTunFaprepare_request_bodyuBackendApplicationClient.prepare_request_bodya__orig_bases__uoauthlib\oauth2\rfc6749\clients\backend_application.pyu<module oauthlib.oauth2.rfc6749.clients.backend_application>Ta__class__Taselfabodyascopeainclude_client_idakwargsu.oauthlib.oauth2.rfc6749.clients.baseMaclient_idadefault_token_placementatoken_typeaaccess_tokenarefresh_tokenamac_keyamac_algorithmatokenascopeastate_generatorastatearedirect_urlacode_verifieracode_challengeacode_challenge_methodacodeaexpires_ina_expires_atapopulate_token_attributesuInitialize a client with commonly used attributes.

        :param client_id: Client identifier given by the OAuth provider upon
        registration.

        :param default_token_placement: Tokens can be supplied in the Authorization
        header (default), the URL query component (``query``) or the request
        body (``body``).

        :param token_type: OAuth 2 token type. Defaults to Bearer. Change this
        if you specify the ``access_token`` parameter and know it is of a
        different token type, such as a MAC, JWT or SAML token. Can
        also be supplied as ``token_type`` inside the ``token`` dict parameter.

        :param access_token: An access token (string) used to authenticate
        requests to protected resources. Can also be supplied inside the
        ``token`` dict parameter.

        :param refresh_token: A refresh token (string) used to refresh expired
        tokens. Can also be supplied inside the ``token`` dict parameter.

        :param mac_key: Encryption key used with MAC tokens.

        :param mac_algorithm:  Hashing algorithm for MAC tokens.

        :param token: A dict of token attributes such as ``access_token``,
        ``token_type`` and ``expires_at``.

        :param scope: A list of default scopes to request authorization for.

        :param state: A CSRF protection string used during authorization.

        :param redirect_url: The redirection endpoint on the client side to which
        the user returns after authorization.

        :param state_generator: A no argument state generation callable. Defaults
        to :py:meth:`oauthlib.common.generate_token`.

        :param code_verifier: PKCE parameter. A cryptographically random string that is used to correlate the
        authorization request to the token request.

        :param code_challenge: PKCE parameter. A challenge derived from the code verifier that is sent in the
        authorization request, to be verified against later.

        :param code_challenge_method: PKCE parameter. A method that was used to derive code challenge.
        Defaults to "plain" if not present in the request.
        aBearera_add_bearer_tokenaMACa_add_mac_tokenuSupported token types and their respective methods

        Additional tokens can be supported by extending this dictionary.

        The Bearer token spec is stable and safe to use.

        The MAC token spec is not yet stable and support for MAC tokens
        is experimental and currently matching version 00 of the spec.
        uMust be implemented by inheriting classes.uAbstract method used to create request URIs.uAbstract method used to create request bodies.uAbstract method used to parse redirection responses.ais_secure_transportaInsecureTransportErroraselfatoken_typesaitemsutoo many values to unpack (expected 2)aloweruUnsupported token type: %sagetTaaccess_tokenuMissing access token.atimeaTokenExpiredErroruAdd token to the request uri, body or authorization header.

        The access token type provides the client with the information
        required to successfully utilize the access token to make a protected
        resource request (along with type-specific attributes).  The client
        MUST NOT use an access token if it does not understand the token
        type.

        For example, the "bearer" token type defined in
        [`I-D.ietf-oauth-v2-bearer`_] is utilized by simply including the access
        token string in the request:

        .. code-block:: http

            GET /resource/1 HTTP/1.1
            Host: example.com
            Authorization: Bearer mF_9.B5f-4.1JqM

        while the "mac" token type defined in [`I-D.ietf-oauth-v2-http-mac`_] is
        utilized by issuing a MAC key together with the access token which is
        used to sign certain components of the HTTP requests:

        .. code-block:: http

            GET /resource/1 HTTP/1.1
            Host: example.com
            Authorization: MAC id="h480djs93hd8",
                                nonce="274312:dj83hs9s",
                                mac="kDZvddkndxvhGRXZhvuDjEWhGeE="

        .. _`I-D.ietf-oauth-v2-bearer`: https://tools.ietf.org/html/rfc6749#section-12.2
        .. _`I-D.ietf-oauth-v2-http-mac`: https://tools.ietf.org/html/rfc6749#section-12.2
        aprepare_request_uriaredirect_uriaFORM_ENC_HEADERSuuPrepare the authorization request.

        This is the first step in many OAuth flows in which the user is
        redirected to a certain authorization URL. This method adds
        required parameters to the authorization URL.

        :param authorization_url: Provider authorization endpoint URL.
        :param state: CSRF protection string. Will be automatically created if
            not provided. The generated state is available via the ``state``
            attribute. Clients should verify that the state is unchanged and
            present in the authorization response. This verification is done
            automatically if using the ``authorization_response`` parameter
            with ``prepare_token_request``.
        :param redirect_url: Redirect URL to which the user will be returned
            after authorization. Must be provided unless previously setup with
            the provider. If provided then it must also be provided in the
            token request.
        :param scope: List of scopes to request. Must be equal to
            or a subset of the scopes granted when obtaining the refresh
            token. If none is provided, the ones provided in the constructor are
            used.
        :param kwargs: Additional parameters to included in the request.
        :returns: The prepared request tuple with (url, headers, body).
        aparse_request_uri_responseTastateaprepare_request_bodyabodyuPrepare a token creation request.

        Note that these requests usually require client authentication, either
        by including client_id or a set of provider specific authentication
        credentials.

        :param token_url: Provider token creation endpoint URL.
        :param authorization_response: The full redirection URL string, i.e.
            the location to which the user was redirected after successful
            authorization. Used to mine credentials needed to obtain a token
            in this step, such as authorization code.
        :param redirect_url: The redirect_url supplied with the authorization
            request (if there was one).
        :param state:
        :param body: Existing request body (URL encoded string) to embed parameters
                     into. This may contain extra parameters. Default ''.
        :param kwargs: Additional parameters to included in the request.
        :returns: The prepared request tuple with (url, headers, body).
        aprepare_refresh_bodyuPrepare an access token refresh request.

        Expired access tokens can be replaced by new access tokens without
        going through the OAuth dance if the client obtained a refresh token.
        This refresh token and authentication credentials can be used to
        obtain a new access token, and possibly a new refresh token.

        :param token_url: Provider token refresh endpoint URL.
        :param refresh_token: Refresh token string.
        :param body: Existing request body (URL encoded string) to embed parameters
            into. This may contain extra parameters. Default ''.
        :param scope: List of scopes to request. Must be equal to
            or a subset of the scopes granted when obtaining the refresh
            token. If none is provided, the ones provided in the constructor are
            used.
        :param kwargs: Additional parameters to included in the request.
        :returns: The prepared request tuple with (url, headers, body).
        aprepare_token_revocation_requestatoken_type_hintacallbackuPrepare a token revocation request.

        :param revocation_url: Provider token revocation endpoint URL.
        :param token: The access or refresh token to be revoked (string).
        :param token_type_hint: ``"access_token"`` (default) or
            ``"refresh_token"``. This is optional and if you wish to not pass it you
            must provide ``token_type_hint=None``.
        :param body:
        :param callback: A jsonp callback such as ``package.callback`` to be invoked
            upon receiving the response. Not that it should not include a () suffix.
        :param kwargs: Additional parameters to included in the request.
        :returns: The prepared request tuple with (url, headers, body).

        Note that JSONP request may use GET requests as the parameters will
        be added to the request URL query as opposed to the request body.

        An example of a revocation request

        .. code-block:: http

            POST /revoke HTTP/1.1
            Host: server.example.com
            Content-Type: application/x-www-form-urlencoded
            Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW

            token=45ghiukldjahdnhzdauz&token_type_hint=refresh_token

        An example of a jsonp revocation request

        .. code-block:: http

            GET /revoke?token=agabcdefddddafdd&callback=package.myCallback HTTP/1.1
            Host: server.example.com
            Content-Type: application/x-www-form-urlencoded
            Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW

        and an error response

        .. code-block:: javascript

            package.myCallback({"error":"unsupported_token_type"});

        Note that these requests usually require client credentials, client_id in
        the case for public clients and provider specific authentication
        credentials for confidential clients.
        aparse_token_responseTascopeuParse the JSON response body.

        If the access token request is valid and authorized, the
        authorization server issues an access token as described in
        `Section 5.1`_.  A refresh token SHOULD NOT be included.  If the request
        failed client authentication or is invalid, the authorization server
        returns an error response as described in `Section 5.2`_.

        :param body: The response body from the token request.
        :param scope: Scopes originally requested. If none is provided, the ones
            provided in the constructor are used.
        :return: Dictionary of token parameters.
        :raises: Warning if scope has changed. :py:class:`oauthlib.oauth2.errors.OAuth2Error`
            if response is invalid.

        These response are json encoded and could easily be parsed without
        the assistance of OAuthLib. However, there are a few subtle issues
        to be aware of regarding the response which are helpfully addressed
        through the raising of various errors.

        A successful response should always contain

        **access_token**
                The access token issued by the authorization server. Often
                a random string.

        **token_type**
            The type of the token issued as described in `Section 7.1`_.
            Commonly ``Bearer``.

        While it is not mandated it is recommended that the provider include

        **expires_in**
            The lifetime in seconds of the access token.  For
            example, the value "3600" denotes that the access token will
            expire in one hour from the time the response was generated.
            If omitted, the authorization server SHOULD provide the
            expiration time via other means or document the default value.

         **scope**
            Providers may supply this in all responses but are required to only
            if it has changed since the authorization request.

        .. _`Section 5.1`: https://tools.ietf.org/html/rfc6749#section-5.1
        .. _`Section 5.2`: https://tools.ietf.org/html/rfc6749#section-5.2
        .. _`Section 7.1`: https://tools.ietf.org/html/rfc6749#section-7.1
        aprepare_token_requestarefresh_token_keyuPrepare an access token request, using a refresh token.

        If the authorization server issued a refresh token to the client, the
        client makes a refresh request to the token endpoint by adding the
        following parameters using the `application/x-www-form-urlencoded`
        format in the HTTP request entity-body:

        :param refresh_token: REQUIRED.  The refresh token issued to the client.
        :param scope:  OPTIONAL.  The scope of the access request as described by
            Section 3.3.  The requested scope MUST NOT include any scope
            not originally granted by the resource owner, and if omitted is
            treated as equal to the scope originally granted by the
            resource owner. Note that if none is provided, the ones provided
            in the constructor are used if any.
        aAUTH_HEADERatokensaprepare_bearer_headersaURI_QUERYaprepare_bearer_uriaBODYaprepare_bearer_bodyuInvalid token placement.uAdd a bearer token to the request uri, body or authorization header.l+uLength must be greater than or equal to 43luLength must be less than or equal to 128areacompileTu^[A-Zaa-z0-9-._~]asecretsatoken_urlsafeasearchucode_verifier contains invalid charactersuCreate PKCE **code_verifier** used in computing **code_challenge**.
        See `RFC7636 Section 4.1`_

        :param length: REQUIRED. The length of the code_verifier.

        The client first creates a code verifier, "code_verifier", for each
        OAuth 2.0 [RFC6749] Authorization Request, in the following manner:

        .. code-block:: text

               code_verifier = high-entropy cryptographic random STRING using the
               unreserved characters [A-Z] / [a-z] / [0-9] / "-" / "." / "_" / "~"
               from Section 2.3 of [RFC3986], with a minimum length of 43 characters
               and a maximum length of 128 characters.

        .. _`RFC7636 Section 4.1`: https://tools.ietf.org/html/rfc7636#section-4.1
        uInvalid code_verifieraplainaS256ahashlibasha256aupdateaencodeTaasciiTaencodingadigestadecodeabase64aurlsafe_b64encodeareplaceTw+w-Tw/w_Tw=uuCreate PKCE **code_challenge** derived from the  **code_verifier**.
        See `RFC7636 Section 4.2`_

        :param code_verifier: REQUIRED. The **code_verifier** generated from `create_code_verifier()`.
        :param code_challenge_method: OPTIONAL. The method used to derive the **code_challenge**. Acceptable values include `S256`. DEFAULT is `plain`.

               The client then creates a code challenge derived from the code
               verifier by using one of the following transformations on the code
               verifier::

                   plain
                      code_challenge = code_verifier
                   S256
                      code_challenge = BASE64URL-ENCODE(SHA256(ASCII(code_verifier)))

               If the client is capable of using `S256`, it MUST use `S256`, as
               `S256` is Mandatory To Implement (MTI) on the server.  Clients are
               permitted to use `plain` only if they cannot support `S256` for some
               technical reason and know via out-of-band configuration that the
               server supports `plain`.

               The plain transformation is for compatibility with existing
               deployments and for constrained environments that can't use the S256 transformation.

        .. _`RFC7636 Section 4.2`: https://tools.ietf.org/html/rfc7636#section-4.2
        aprepare_mac_headeraheadersaextahash_algorithmuAdd a MAC token to the request authorization header.

        Warning: MAC token support is experimental as the spec is not yet stable.
        awarningsawarnuPlease switch to the public method populate_token_attributes.aDeprecationWarningTacodeuAdd attributes from an auth code response to self.aresponseTarefresh_tokenTatoken_typeTaexpires_inaexpires_atTaexpires_atTamac_keyTamac_algorithmuAdd attributes from a token exchange response to self.u
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming OAuth 2.0 RFC6749.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__luoauthlib.commonTagenerate_tokenagenerate_tokenuoauthlib.oauth2.rfc6749Tatokensuoauthlib.oauth2.rfc6749.errorsTaInsecureTransportErroraTokenExpiredErroruoauthlib.oauth2.rfc6749.parametersTaparse_token_responseaprepare_token_requestaprepare_token_revocation_requestuoauthlib.oauth2.rfc6749.utilsTais_secure_transportaauth_headeraqueryDuContent-Typeuapplication/x-www-form-urlencodeduoauthlib.oauth2.rfc6749.clients.basea__module__uBase OAuth2 client responsible for access token management.

    This class also acts as a generic interface providing methods common to all
    client types such as ``prepare_authorization_request`` and
    ``prepare_token_revocation_request``. The ``prepare_x_request`` methods are
    the recommended way of interacting with clients (as opposed to the abstract
    prepare uri/body/etc methods). They are recommended over the older set
    because they are easier to use (more consistent) and add a few additional
    security checks, such as HTTPS and state checking.

    Some of these methods require further implementation only provided by the
    specific purpose clients such as
    :py:class:`oauthlib.oauth2.MobileApplicationClient` and thus you should always
    seek to use the client class matching the OAuth workflow you need. For
    Python, this is usually :py:class:`oauthlib.oauth2.WebApplicationClient`.

    aClienta__qualname__a__init__uClient.__init__uClient.token_typesuClient.prepare_request_uriuClient.prepare_request_bodyuClient.parse_request_uri_responseTaGETnnnaadd_tokenuClient.add_tokenTnnnaprepare_authorization_requestuClient.prepare_authorization_requestTnnnuuClient.prepare_token_requestTnunaprepare_refresh_token_requestuClient.prepare_refresh_token_requestTaaccess_tokenunuClient.prepare_token_revocation_requestTnaparse_request_body_responseuClient.parse_request_body_responseTunnuClient.prepare_refresh_bodyuClient._add_bearer_tokenacreate_code_verifieruClient.create_code_verifieracreate_code_challengeuClient.create_code_challengeaGETuClient._add_mac_tokena_populate_attributesuClient._populate_attributesapopulate_code_attributesuClient.populate_code_attributesuClient.populate_token_attributesTuoauthlib\oauth2\rfc6749\clients\base.pyu<module oauthlib.oauth2.rfc6749.clients.base>Ta__class__Taselfaclient_idadefault_token_placementatoken_typeaaccess_tokenarefresh_tokenamac_keyamac_algorithmatokenascopeastatearedirect_urlastate_generatoracode_verifieracode_challengeacode_challenge_methodakwargsTaselfauriahttp_methodabodyaheadersatoken_placementTaselfauriahttp_methodabodyaheadersatoken_placementaextakwargsTaselfaresponseTaselfauriahttp_methodabodyaheadersatoken_placementakwargsacase_insensitive_token_typesTaselfacode_verifieracode_challenge_methodacode_challengewhasha256_valTaselfalengthacode_verifieraallowed_charactersTaselfabodyascopeakwargsTaselfaargsakwargsTaselfaauthorization_urlastatearedirect_urlascopeakwargsaauth_urlTaselfabodyarefresh_tokenascopeakwargsTaselfatoken_urlarefresh_tokenabodyascopeakwargsTaselfatoken_urlaauthorization_responsearedirect_urlastateabodyakwargsTaselfarevocation_urlatokenatoken_type_hintabodyacallbackakwargsTaself.oauthlib.oauth2.rfc6749.clients</u
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming OAuth 2.0 RFC6749.
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_oauthlibu\not_existinguoauth2\rfc6749\clientsTaNUITKA_PACKAGE_oauthlib_oauth2u\not_existingurfc6749\clientsTaNUITKA_PACKAGE_oauthlib_oauth2_rfc6749u\not_existingaclientsTaNUITKA_PACKAGE_oauthlib_oauth2_rfc6749_clientsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__abackend_applicationTaBackendApplicationClientlaBackendApplicationClientlabaseTaAUTH_HEADERaBODYaURI_QUERYaClientaAUTH_HEADERaBODYaURI_QUERYaClientalegacy_applicationTaLegacyApplicationClientaLegacyApplicationClientamobile_applicationTaMobileApplicationClientaMobileApplicationClientaservice_applicationTaServiceApplicationClientaServiceApplicationClientaweb_applicationTaWebApplicationClientaWebApplicationClientuoauthlib\oauth2\rfc6749\clients\__init__.pyu<module oauthlib.oauth2.rfc6749.clients>u.oauthlib.oauth2.rfc6749.clients.legacy_application/a__class__a__init__aclient_idainclude_client_idascopeaprepare_token_requestagrant_typeabodyausernameapassworduAdd the resource owner password and username to the request body.

        The client makes a request to the token endpoint by adding the
        following parameters using the "application/x-www-form-urlencoded"
        format per `Appendix B`_ in the HTTP request entity-body:

        :param username:    The resource owner username.
        :param password:    The resource owner password.
        :param body: Existing request body (URL encoded string) to embed parameters
                     into. This may contain extra parameters. Default ''.
        :param scope:   The scope of the access request as described by
                        `Section 3.3`_.
        :param include_client_id: `True` to send the `client_id` in the
                                  body of the upstream request. This is required
                                  if the client is not authenticating with the
                                  authorization server as described in
                                  `Section 3.2.1`_. False otherwise (default).
        :type include_client_id: Boolean
        :param kwargs:  Extra credentials to include in the token request.

        If the client type is confidential or the client was issued client
        credentials (or assigned other authentication requirements), the
        client MUST authenticate with the authorization server as described
        in `Section 3.2.1`_.

        The prepared body will include all provided credentials as well as
        the ``grant_type`` parameter set to ``password``::

            >>> from oauthlib.oauth2 import LegacyApplicationClient
            >>> client = LegacyApplicationClient('your_id')
            >>> client.prepare_request_body(username='foo', password='bar', scope=['hello', 'world'])
            'grant_type=password&username=foo&scope=hello+world&password=bar'

        .. _`Appendix B`: https://tools.ietf.org/html/rfc6749#appendix-B
        .. _`Section 3.3`: https://tools.ietf.org/html/rfc6749#section-3.3
        .. _`Section 3.2.1`: https://tools.ietf.org/html/rfc6749#section-3.2.1
        u
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 RFC6749.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aparametersTaprepare_token_requestllabaseTaClientlaClienta__prepare__aLegacyApplicationClienta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.clients.legacy_applicationa__module__uA public client using the resource owner password and username directly.

    The resource owner password credentials grant type is suitable in
    cases where the resource owner has a trust relationship with the
    client, such as the device operating system or a highly privileged
    application.  The authorization server should take special care when
    enabling this grant type, and only allow it when other flows are not
    viable.

    The grant type is suitable for clients capable of obtaining the
    resource owner's credentials (username and password, typically using
    an interactive form).  It is also used to migrate existing clients
    using direct authentication schemes such as HTTP Basic or Digest
    authentication to OAuth by converting the stored credentials to an
    access token.

    The method through which the client obtains the resource owner
    credentials is beyond the scope of this specification.  The client
    MUST discard the credentials once an access token has been obtained.
    a__qualname__uLegacyApplicationClient.__init__TunFaprepare_request_bodyuLegacyApplicationClient.prepare_request_bodya__orig_bases__uoauthlib\oauth2\rfc6749\clients\legacy_application.pyu<module oauthlib.oauth2.rfc6749.clients.legacy_application>Ta__class__Taselfaclient_idakwargsa__class__Taselfausernameapasswordabodyascopeainclude_client_idakwargsu.oauthlib.oauth2.rfc6749.clients.mobile_application"2ascopeaprepare_grant_uriaclient_idaresponse_typearedirect_uriastateuPrepare the implicit grant request URI.

        The client constructs the request URI by adding the following
        parameters to the query component of the authorization endpoint URI
        using the "application/x-www-form-urlencoded" format, per `Appendix B`_:

        :param redirect_uri:  OPTIONAL. The redirect URI must be an absolute URI
                              and it should have been registered with the OAuth
                              provider prior to use. As described in `Section 3.1.2`_.

        :param scope:  OPTIONAL. The scope of the access request as described by
                       Section 3.3`_. These may be any string but are commonly
                       URIs or various categories such as ``videos`` or ``documents``.

        :param state:   RECOMMENDED.  An opaque value used by the client to maintain
                        state between the request and callback.  The authorization
                        server includes this value when redirecting the user-agent back
                        to the client.  The parameter SHOULD be used for preventing
                        cross-site request forgery as described in `Section 10.12`_.

        :param kwargs:  Extra arguments to include in the request URI.

        In addition to supplied parameters, OAuthLib will append the ``client_id``
        that was provided in the constructor as well as the mandatory ``response_type``
        argument, set to ``token``::

            >>> from oauthlib.oauth2 import MobileApplicationClient
            >>> client = MobileApplicationClient('your_id')
            >>> client.prepare_request_uri('https://example.com')
            'https://example.com?client_id=your_id&response_type=token'
            >>> client.prepare_request_uri('https://example.com', redirect_uri='https://a.b/callback')
            'https://example.com?client_id=your_id&response_type=token&redirect_uri=https%3A%2F%2Fa.b%2Fcallback'
            >>> client.prepare_request_uri('https://example.com', scope=['profile', 'pictures'])
            'https://example.com?client_id=your_id&response_type=token&scope=profile+pictures'
            >>> client.prepare_request_uri('https://example.com', foo='bar')
            'https://example.com?client_id=your_id&response_type=token&foo=bar'

        .. _`Appendix B`: https://tools.ietf.org/html/rfc6749#appendix-B
        .. _`Section 2.2`: https://tools.ietf.org/html/rfc6749#section-2.2
        .. _`Section 3.1.2`: https://tools.ietf.org/html/rfc6749#section-3.1.2
        .. _`Section 3.3`: https://tools.ietf.org/html/rfc6749#section-3.3
        .. _`Section 10.12`: https://tools.ietf.org/html/rfc6749#section-10.12
        aparse_implicit_responseTastateascopeatokenapopulate_token_attributesuParse the response URI fragment.

        If the resource owner grants the access request, the authorization
        server issues an access token and delivers it to the client by adding
        the following parameters to the fragment component of the redirection
        URI using the "application/x-www-form-urlencoded" format:

        :param uri: The callback URI that resulted from the user being redirected
                    back from the provider to you, the client.
        :param state: The state provided in the authorization request.
        :param scope: The scopes provided in the authorization request.
        :return: Dictionary of token parameters.
        :raises: OAuth2Error if response is invalid.

        A successful response should always contain

        **access_token**
                The access token issued by the authorization server. Often
                a random string.

        **token_type**
            The type of the token issued as described in `Section 7.1`_.
            Commonly ``Bearer``.

        **state**
            If you provided the state parameter in the authorization phase, then
            the provider is required to include that exact state value in the
            response.

        While it is not mandated it is recommended that the provider include

        **expires_in**
            The lifetime in seconds of the access token.  For
            example, the value "3600" denotes that the access token will
            expire in one hour from the time the response was generated.
            If omitted, the authorization server SHOULD provide the
            expiration time via other means or document the default value.

        **scope**
            Providers may supply this in all responses but are required to only
            if it has changed since the authorization request.

        A few example responses can be seen below::

            >>> response_uri = 'https://example.com/callback#access_token=sdlfkj452&state=ss345asyht&token_type=Bearer&scope=hello+world'
            >>> from oauthlib.oauth2 import MobileApplicationClient
            >>> client = MobileApplicationClient('your_id')
            >>> client.parse_request_uri_response(response_uri)
            {
                'access_token': 'sdlfkj452',
                'token_type': 'Bearer',
                'state': 'ss345asyht',
                'scope': [u'hello', u'world']
            }
            >>> client.parse_request_uri_response(response_uri, state='other')
            Traceback (most recent call last):
                File "<stdin>", line 1, in <module>
                File "oauthlib/oauth2/rfc6749/__init__.py", line 598, in parse_request_uri_response
                    **scope**
                File "oauthlib/oauth2/rfc6749/parameters.py", line 197, in parse_implicit_response
                    raise ValueError("Mismatching or missing state in params.")
            ValueError: Mismatching or missing state in params.
            >>> def alert_scope_changed(message, old, new):
            ...     print(message, old, new)
            ...
            >>> oauthlib.signals.scope_changed.connect(alert_scope_changed)
            >>> client.parse_request_body_response(response_body, scope=['other'])
            ('Scope has changed from "other" to "hello world".', ['other'], ['hello', 'world'])

        .. _`Section 7.1`: https://tools.ietf.org/html/rfc6749#section-7.1
        .. _`Section 3.3`: https://tools.ietf.org/html/rfc6749#section-3.3
        u
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 RFC6749.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aparametersTaparse_implicit_responseaprepare_grant_urillabaseTaClientlaClienta__prepare__aMobileApplicationClienta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.clients.mobile_applicationa__module__uA public client utilizing the implicit code grant workflow.

    A user-agent-based application is a public client in which the
    client code is downloaded from a web server and executes within a
    user-agent (e.g. web browser) on the device used by the resource
    owner.  Protocol data and credentials are easily accessible (and
    often visible) to the resource owner.  Since such applications
    reside within the user-agent, they can make seamless use of the
    user-agent capabilities when requesting authorization.

    The implicit grant type is used to obtain access tokens (it does not
    support the issuance of refresh tokens) and is optimized for public
    clients known to operate a particular redirection URI.  These clients
    are typically implemented in a browser using a scripting language
    such as JavaScript.

    As a redirection-based flow, the client must be capable of
    interacting with the resource owner's user-agent (typically a web
    browser) and capable of receiving incoming requests (via redirection)
    from the authorization server.

    Unlike the authorization code grant type in which the client makes
    separate requests for authorization and access token, the client
    receives the access token as the result of the authorization request.

    The implicit grant type does not include client authentication, and
    relies on the presence of the resource owner and the registration of
    the redirection URI.  Because the access token is encoded into the
    redirection URI, it may be exposed to the resource owner and other
    applications residing on the same device.
    a__qualname__Tnnnaprepare_request_uriuMobileApplicationClient.prepare_request_uriTnnaparse_request_uri_responseuMobileApplicationClient.parse_request_uri_responsea__orig_bases__uoauthlib\oauth2\rfc6749\clients\mobile_application.pyu<module oauthlib.oauth2.rfc6749.clients.mobile_application>Ta__class__TaselfauriastateascopeTaselfauriaredirect_uriascopeastateakwargsu.oauthlib.oauth2.rfc6749.clients.service_applicationOa__class__a__init__aprivate_keyasubjectaissueraaudienceuInitialize a JWT client with defaults for implicit use later.

        :param client_id: Client identifier given by the OAuth provider upon
                          registration.

        :param private_key: Private key used for signing and encrypting.
                            Must be given as a string.

        :param subject: The principal that is the subject of the JWT, i.e.
                        which user is the token requested on behalf of.
                        For example, ``foo@example.com.

        :param issuer: The JWT MUST contain an "iss" (issuer) claim that
                       contains a unique identifier for the entity that issued
                       the JWT. For example, ``your-client@provider.com``.

        :param audience: A value identifying the authorization server as an
                         intended audience, e.g.
                         ``https://provider.com/oauth2/token``.

        :param kwargs: Additional arguments to pass to base client, such as
                       state and token. See ``Client.__init__.__doc__`` for
                       details.
        ajwtluAn encryption key must be supplied to make JWT token requests.aissaselfaaudasubaexpatimelaiatTaissaaudasubuClaim must include %s but none was given.anot_beforeanbfajwt_idakwargsapopTajwt_idaclaimajtiaupdateaencodeaRS256ato_unicodeaclient_idainclude_client_idascopeaprepare_token_requestagrant_typeabodyaassertionuCreate and add a JWT assertion to the request body.

        :param private_key: Private key used for signing and encrypting.
                            Must be given as a string.

        :param subject: (sub) The principal that is the subject of the JWT,
                        i.e.  which user is the token requested on behalf of.
                        For example, ``foo@example.com.

        :param issuer: (iss) The JWT MUST contain an "iss" (issuer) claim that
                       contains a unique identifier for the entity that issued
                       the JWT. For example, ``your-client@provider.com``.

        :param audience: (aud) A value identifying the authorization server as an
                         intended audience, e.g.
                         ``https://provider.com/oauth2/token``.

        :param expires_at: A unix expiration timestamp for the JWT. Defaults
                           to an hour from now, i.e. ``time.time() + 3600``.

        :param issued_at: A unix timestamp of when the JWT was created.
                          Defaults to now, i.e. ``time.time()``.

        :param extra_claims: A dict of additional claims to include in the JWT.

        :param body: Existing request body (URL encoded string) to embed parameters
                     into. This may contain extra parameters. Default ''.

        :param scope: The scope of the access request.

        :param include_client_id: `True` to send the `client_id` in the
                                  body of the upstream request. This is required
                                  if the client is not authenticating with the
                                  authorization server as described in
                                  `Section 3.2.1`_. False otherwise (default).
        :type include_client_id: Boolean

        :param not_before: A unix timestamp after which the JWT may be used.
                           Not included unless provided. *

        :param jwt_id: A unique JWT token identifier. Not included unless
                       provided. *

        :param kwargs: Extra credentials to include in the token request.

        Parameters marked with a `*` above are not explicit arguments in the
        function signature, but are specially documented arguments for items
        appearing in the generic `**kwargs` keyworded input.

        The "scope" parameter may be used, as defined in the Assertion
        Framework for OAuth 2.0 Client Authentication and Authorization Grants
        [I-D.ietf-oauth-assertions] specification, to indicate the requested
        scope.

        Authentication of the client is optional, as described in
        `Section 3.2.1`_ of OAuth 2.0 [RFC6749] and consequently, the
        "client_id" is only needed when a form of client authentication that
        relies on the parameter is used.

        The following non-normative example demonstrates an Access Token
        Request with a JWT as an authorization grant (with extra line breaks
        for display purposes only):

        .. code-block: http

            POST /token.oauth2 HTTP/1.1
            Host: as.example.com
            Content-Type: application/x-www-form-urlencoded

            grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer
            &assertion=eyJhbGciOiJFUzI1NiJ9.
            eyJpc3Mi[...omitted for brevity...].
            J9l-ZhwP[...omitted for brevity...]

        .. _`Section 3.2.1`: https://tools.ietf.org/html/rfc6749#section-3.2.1
        u
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 RFC6749.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uoauthlib.commonTato_unicodeaparametersTaprepare_token_requestlabaseTaClientlaClienta__prepare__aServiceApplicationClienta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.clients.service_applicationa__module__uA public client utilizing the JWT bearer grant.

    JWT bearer tokes can be used to request an access token when a client
    wishes to utilize an existing trust relationship, expressed through the
    semantics of (and digital signature or keyed message digest calculated
    over) the JWT, without a direct user approval step at the authorization
    server.

    This grant type does not involve an authorization step. It may be
    used by both public and confidential clients.
    a__qualname__uurn:ietf:params:oauth:grant-type:jwt-bearerTnnnnuServiceApplicationClient.__init__T
nnnnnnnunFaprepare_request_bodyuServiceApplicationClient.prepare_request_bodya__orig_bases__uoauthlib\oauth2\rfc6749\clients\service_application.pyu<module oauthlib.oauth2.rfc6749.clients.service_application>Ta__class__Taselfaclient_idaprivate_keyasubjectaissueraaudienceakwargsa__class__Taselfaprivate_keyasubjectaissueraaudienceaexpires_ataissued_ataextra_claimsabodyascopeainclude_client_idakwargsajwtakeyaclaimaattraassertionu.oauthlib.oauth2.rfc6749.clients.web_application-Ha__class__a__init__acodeascopeaprepare_grant_uriaclient_idaredirect_uriastateacode_challengeacode_challenge_methoduPrepare the authorization code request URI

        The client constructs the request URI by adding the following
        parameters to the query component of the authorization endpoint URI
        using the "application/x-www-form-urlencoded" format, per `Appendix B`_:

        :param redirect_uri:  OPTIONAL. The redirect URI must be an absolute URI
                              and it should have been registered with the OAuth
                              provider prior to use. As described in `Section 3.1.2`_.

        :param scope:  OPTIONAL. The scope of the access request as described by
                       Section 3.3`_. These may be any string but are commonly
                       URIs or various categories such as ``videos`` or ``documents``.

        :param state:   RECOMMENDED.  An opaque value used by the client to maintain
                        state between the request and callback.  The authorization
                        server includes this value when redirecting the user-agent back
                        to the client.  The parameter SHOULD be used for preventing
                        cross-site request forgery as described in `Section 10.12`_.

        :param code_challenge: OPTIONAL. PKCE parameter. REQUIRED if PKCE is enforced.
                        A challenge derived from the code_verifier that is sent in the
                        authorization request, to be verified against later.

        :param code_challenge_method: OPTIONAL. PKCE parameter. A method that was used to derive code challenge.
                                      Defaults to "plain" if not present in the request.

        :param kwargs:  Extra arguments to include in the request URI.

        In addition to supplied parameters, OAuthLib will append the ``client_id``
        that was provided in the constructor as well as the mandatory ``response_type``
        argument, set to ``code``::

            >>> from oauthlib.oauth2 import WebApplicationClient
            >>> client = WebApplicationClient('your_id')
            >>> client.prepare_request_uri('https://example.com')
            'https://example.com?client_id=your_id&response_type=code'
            >>> client.prepare_request_uri('https://example.com', redirect_uri='https://a.b/callback')
            'https://example.com?client_id=your_id&response_type=code&redirect_uri=https%3A%2F%2Fa.b%2Fcallback'
            >>> client.prepare_request_uri('https://example.com', scope=['profile', 'pictures'])
            'https://example.com?client_id=your_id&response_type=code&scope=profile+pictures'
            >>> client.prepare_request_uri('https://example.com', code_challenge='kjasBS523KdkAILD2k78NdcJSk2k3KHG6')
            'https://example.com?client_id=your_id&response_type=code&code_challenge=kjasBS523KdkAILD2k78NdcJSk2k3KHG6'
            >>> client.prepare_request_uri('https://example.com', code_challenge_method='S256')
            'https://example.com?client_id=your_id&response_type=code&code_challenge_method=S256'
            >>> client.prepare_request_uri('https://example.com', foo='bar')
            'https://example.com?client_id=your_id&response_type=code&foo=bar'

        .. _`Appendix B`: https://tools.ietf.org/html/rfc6749#appendix-B
        .. _`Section 2.2`: https://tools.ietf.org/html/rfc6749#section-2.2
        .. _`Section 3.1.2`: https://tools.ietf.org/html/rfc6749#section-3.1.2
        .. _`Section 3.3`: https://tools.ietf.org/html/rfc6749#section-3.3
        .. _`Section 10.12`: https://tools.ietf.org/html/rfc6749#section-10.12
        awarningsawarnu`client_id` has been deprecated in favor of `include_client_id`, a boolean value which will include the already configured `self.client_id`.aDeprecationWarningaselfu`client_id` was supplied as an argument, but it does not match `self.client_id`ainclude_client_idaprepare_token_requestagrant_typeabodyacode_verifieruPrepare the access token request body.

        The client makes a request to the token endpoint by adding the
        following parameters using the "application/x-www-form-urlencoded"
        format in the HTTP request entity-body:

        :param code:    REQUIRED. The authorization code received from the
                        authorization server.

        :param redirect_uri:    REQUIRED, if the "redirect_uri" parameter was included in the
                                authorization request as described in `Section 4.1.1`_, and their
                                values MUST be identical.

        :param body: Existing request body (URL encoded string) to embed parameters
                     into. This may contain extra parameters. Default ''.

        :param include_client_id: `True` (default) to send the `client_id` in the
                                  body of the upstream request. This is required
                                  if the client is not authenticating with the
                                  authorization server as described in `Section 3.2.1`_.
        :type include_client_id: Boolean

        :param code_verifier: OPTIONAL. A cryptographically random string that is used to correlate the
                                        authorization request to the token request.

        :param kwargs: Extra parameters to include in the token request.

        In addition OAuthLib will add the ``grant_type`` parameter set to
        ``authorization_code``.

        If the client type is confidential or the client was issued client
        credentials (or assigned other authentication requirements), the
        client MUST authenticate with the authorization server as described
        in `Section 3.2.1`_::

            >>> from oauthlib.oauth2 import WebApplicationClient
            >>> client = WebApplicationClient('your_id')
            >>> client.prepare_request_body(code='sh35ksdf09sf')
            'grant_type=authorization_code&code=sh35ksdf09sf'
            >>> client.prepare_request_body(code_verifier='KB46DCKJ873NCGXK5GD682NHDKK34GR')
            'grant_type=authorization_code&code_verifier=KB46DCKJ873NCGXK5GD682NHDKK34GR'
            >>> client.prepare_request_body(code='sh35ksdf09sf', foo='bar')
            'grant_type=authorization_code&code=sh35ksdf09sf&foo=bar'

        `Section 3.2.1` also states:
            In the "authorization_code" "grant_type" request to the token
            endpoint, an unauthenticated client MUST send its "client_id" to
            prevent itself from inadvertently accepting a code intended for a
            client with a different "client_id".  This protects the client from
            substitution of the authentication code.  (It provides no additional
            security for the protected resource.)

        .. _`Section 4.1.1`: https://tools.ietf.org/html/rfc6749#section-4.1.1
        .. _`Section 3.2.1`: https://tools.ietf.org/html/rfc6749#section-3.2.1
        aparse_authorization_code_responseTastateapopulate_code_attributesuParse the URI query for code and state.

        If the resource owner grants the access request, the authorization
        server issues an authorization code and delivers it to the client by
        adding the following parameters to the query component of the
        redirection URI using the "application/x-www-form-urlencoded" format:

        :param uri: The callback URI that resulted from the user being redirected
                    back from the provider to you, the client.
        :param state: The state provided in the authorization request.

        **code**
            The authorization code generated by the authorization server.
            The authorization code MUST expire shortly after it is issued
            to mitigate the risk of leaks. A maximum authorization code
            lifetime of 10 minutes is RECOMMENDED. The client MUST NOT
            use the authorization code more than once. If an authorization
            code is used more than once, the authorization server MUST deny
            the request and SHOULD revoke (when possible) all tokens
            previously issued based on that authorization code.
            The authorization code is bound to the client identifier and
            redirection URI.

        **state**
                If the "state" parameter was present in the authorization request.

        This method is mainly intended to enforce strict state checking with
        the added benefit of easily extracting parameters from the URI::

            >>> from oauthlib.oauth2 import WebApplicationClient
            >>> client = WebApplicationClient('your_id')
            >>> uri = 'https://example.com/callback?code=sdfkjh345&state=sfetw45'
            >>> client.parse_request_uri_response(uri, state='sfetw45')
            {'state': 'sfetw45', 'code': 'sdfkjh345'}
            >>> client.parse_request_uri_response(uri, state='other')
            Traceback (most recent call last):
                File "<stdin>", line 1, in <module>
                File "oauthlib/oauth2/rfc6749/__init__.py", line 357, in parse_request_uri_response
                    back from the provider to you, the client.
                File "oauthlib/oauth2/rfc6749/parameters.py", line 153, in parse_authorization_code_response
                    raise MismatchingStateError()
            oauthlib.oauth2.rfc6749.errors.MismatchingStateError
        u
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 RFC6749.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__laparametersTaparse_authorization_code_responseaprepare_grant_uriaprepare_token_requestlabaseTaClientlaClienta__prepare__aWebApplicationClienta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.clients.web_applicationa__module__uA client utilizing the authorization code grant workflow.

    A web application is a confidential client running on a web
    server.  Resource owners access the client via an HTML user
    interface rendered in a user-agent on the device used by the
    resource owner.  The client credentials as well as any access
    token issued to the client are stored on the web server and are
    not exposed to or accessible by the resource owner.

    The authorization code grant type is used to obtain both access
    tokens and refresh tokens and is optimized for confidential clients.
    As a redirection-based flow, the client must be capable of
    interacting with the resource owner's user-agent (typically a web
    browser) and capable of receiving incoming requests (via redirection)
    from the authorization server.
    a__qualname__aauthorization_codeTnuWebApplicationClient.__init__Tnnnnaplainaprepare_request_uriuWebApplicationClient.prepare_request_uriTnnutnaprepare_request_bodyuWebApplicationClient.prepare_request_bodyaparse_request_uri_responseuWebApplicationClient.parse_request_uri_responsea__orig_bases__uoauthlib\oauth2\rfc6749\clients\web_application.pyu<module oauthlib.oauth2.rfc6749.clients.web_application>Ta__class__Taselfaclient_idacodeakwargsa__class__TaselfauriastatearesponseTaselfacodearedirect_uriabodyainclude_client_idacode_verifierakwargsTaselfauriaredirect_uriascopeastateacode_challengeacode_challenge_methodakwargsu.oauthlib.oauth2.rfc6749r'u
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 RFC6749.
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_oauthlibu\not_existinguoauth2\rfc6749TaNUITKA_PACKAGE_oauthlib_oauth2u\not_existingarfc6749TaNUITKA_PACKAGE_oauthlib_oauth2_rfc6749u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__afunctoolsaloggingluendpoints.baseTaBaseEndpointacatch_errors_and_unavailabilitylaBaseEndpointacatch_errors_and_unavailabilityaerrorsTaFatalClientErroraOAuth2ErroraServerErroraTemporarilyUnavailableErroraFatalClientErroraOAuth2ErroraServerErroraTemporarilyUnavailableErroragetLoggerTuoauthlib.oauth2.rfc6749aloguoauthlib\oauth2\rfc6749\__init__.pyu<module oauthlib.oauth2.rfc6749>u.oauthlib.oauth2.rfc6749.endpoints.authorizationJaBaseEndpointa__init__a_response_typesa_default_response_typea_default_token_typearesponse_typesagetadefault_response_typeaRequestTahttp_methodabodyaheadersascopesauseraitemsutoo many values to unpack (expected 2)aresponse_typeadefault_response_type_handleralogadebuguDispatching response_type %s request to %r.acreate_authorization_responseadefault_token_typeuExtract response_type and route to the designated handler.autilsascope_to_listascopeavalidate_authorization_requestu
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 RFC6749.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aloggingluoauthlib.commonTaRequestuoauthlib.oauth2.rfc6749TautilsabaseTaBaseEndpointacatch_errors_and_unavailabilitylacatch_errors_and_unavailabilityagetLoggerTuoauthlib.oauth2.rfc6749.endpoints.authorizationa__prepare__aAuthorizationEndpointa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.endpoints.authorizationa__module__uAuthorization endpoint - used by the client to obtain authorization
    from the resource owner via user-agent redirection.

    The authorization endpoint is used to interact with the resource
    owner and obtain an authorization grant.  The authorization server
    MUST first verify the identity of the resource owner.  The way in
    which the authorization server authenticates the resource owner (e.g.
    username and password login, session cookies) is beyond the scope of
    this specification.

    The endpoint URI MAY include an "application/x-www-form-urlencoded"
    formatted (per `Appendix B`_) query component,
    which MUST be retained when adding additional query parameters.  The
    endpoint URI MUST NOT include a fragment component::

        https://example.com/path?query=component             # OK
        https://example.com/path?query=component#fragment    # Not OK

    Since requests to the authorization endpoint result in user
    authentication and the transmission of clear-text credentials (in the
    HTTP response), the authorization server MUST require the use of TLS
    as described in Section 1.6 when sending requests to the
    authorization endpoint::

        # We will deny any request which URI schema is not with https

    The authorization server MUST support the use of the HTTP "GET"
    method [RFC2616] for the authorization endpoint, and MAY support the
    use of the "POST" method as well::

        # HTTP method is currently not enforced

    Parameters sent without a value MUST be treated as if they were
    omitted from the request.  The authorization server MUST ignore
    unrecognized request parameters.  Request and response parameters
    MUST NOT be included more than once::

        # Enforced through the design of oauthlib.common.Request

    .. _`Appendix B`: https://tools.ietf.org/html/rfc6749#appendix-B
    a__qualname__uAuthorizationEndpoint.__init__apropertyuAuthorizationEndpoint.response_typesuAuthorizationEndpoint.default_response_typeuAuthorizationEndpoint.default_response_type_handleruAuthorizationEndpoint.default_token_typeTaGETnnnnuAuthorizationEndpoint.create_authorization_responseTaGETnnuAuthorizationEndpoint.validate_authorization_requesta__orig_bases__uoauthlib\oauth2\rfc6749\endpoints\authorization.pyu<module oauthlib.oauth2.rfc6749.endpoints.authorization>Ta__class__Taselfadefault_response_typeadefault_token_typearesponse_typesTaselfauriahttp_methodabodyaheadersascopesacredentialsarequestwkwvaresponse_type_handlerTaselfTaselfauriahttp_methodabodyaheadersarequestaresponse_type_handleru.oauthlib.oauth2.rfc6749.endpoints.base da_availablea_catch_errorsa_valid_request_methodsaupperatokenaInvalidRequestErroruMissing token parameter.TarequestadescriptionuRaise error on missing token.arequest_validatoraclient_authentication_requiredaauthenticate_clientalogadebuguClient authentication failed, %r.aInvalidClientErrorTarequestaauthenticate_client_idaclient_iduRaise on failed client authentication.atoken_type_hintavalid_token_typesasupported_token_typesaUnsupportedTokenTypeErroruRaise on unsupported tokens.avalid_request_methodsuConfigure "valid_request_methods" property firstahttp_methoduUnsupported request method %saPOSTauri_queryuuURL query parameters are not alloweduRaise if invalid POST request received
        afunctoolsawrapsawrapperucatch_errors_and_unavailability.<locals>.wrapperaavailableaTemporarilyUnavailableErrorainfouEndpoint unavailable, ignoring request %s.ajsonlacatch_errorswfaOAuth2ErroraFatalClientErroraServerErrorawarninguException caught while processing request, %s.lu
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 RFC6749.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__alogginglaerrorsTaFatalClientErroraInvalidClientErroraInvalidRequestErroraOAuth2ErroraServerErroraTemporarilyUnavailableErroraUnsupportedTokenTypeErrorlagetLoggerTuoauthlib.oauth2.rfc6749.endpoints.baseuoauthlib.oauth2.rfc6749.endpoints.basea__module__aBaseEndpointa__qualname__a__init__uBaseEndpoint.__init__uBaseEndpoint.valid_request_methodsasetteruBaseEndpoint.availableuBaseEndpoint.catch_errorsa_raise_on_missing_tokenuBaseEndpoint._raise_on_missing_tokena_raise_on_invalid_clientuBaseEndpoint._raise_on_invalid_clienta_raise_on_unsupported_tokenuBaseEndpoint._raise_on_unsupported_tokena_raise_on_bad_methoduBaseEndpoint._raise_on_bad_methoda_raise_on_bad_post_requestuBaseEndpoint._raise_on_bad_post_requestTacatch_errors_and_unavailabilityuoauthlib\oauth2\rfc6749\endpoints\base.pyu<module oauthlib.oauth2.rfc6749.endpoints.base>Ta__class__TaselfTaselfarequestTaselfarequestaquery_paramsTaselfaavailableTaselfacatch_errorsTwfawrapperTaselfavalid_request_methodsTaendpointauriaargsakwargsweaerrorwfTwf.oauthlib.oauth2.rfc6749.endpoints3u
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 RFC6749.
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_oauthlibu\not_existinguoauth2\rfc6749\endpointsTaNUITKA_PACKAGE_oauthlib_oauth2u\not_existingurfc6749\endpointsTaNUITKA_PACKAGE_oauthlib_oauth2_rfc6749u\not_existingaendpointsTaNUITKA_PACKAGE_oauthlib_oauth2_rfc6749_endpointsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aauthorizationTaAuthorizationEndpointlaAuthorizationEndpointlaintrospectTaIntrospectEndpointaIntrospectEndpointametadataTaMetadataEndpointaMetadataEndpointapre_configuredTaBackendApplicationServeraLegacyApplicationServeraMobileApplicationServeraServeraWebApplicationServeraBackendApplicationServeraLegacyApplicationServeraMobileApplicationServeraServeraWebApplicationServeraresourceTaResourceEndpointaResourceEndpointarevocationTaRevocationEndpointaRevocationEndpointatokenTaTokenEndpointaTokenEndpointuoauthlib\oauth2\rfc6749\endpoints\__init__.pyu<module oauthlib.oauth2.rfc6749.endpoints>u.oauthlib.oauth2.rfc6749.endpoints.introspectiQaBaseEndpointa__init__arequest_validatoravalid_token_typesasupported_token_typesDuContent-TypeuCache-ControlaPragmauapplication/jsonuno-storeuno-cacheaRequestavalidate_introspect_requestalogadebuguToken introspect valid for %r.aOAuth2ErroruClient error during validation of %r. %r.aheadersajsonastatus_codeaintrospect_tokenatokenatoken_type_hintadumpsDaactiveFlaactiveapopTaactiveDaactivetaclaimsuCreate introspect valid or invalid response

        If the authorization server is unable to determine the state
        of the token without additional information, it SHOULD return
        an introspection response indicating the token is not active
        as described in Section 2.2.
        a_raise_on_bad_methoda_raise_on_bad_post_requesta_raise_on_missing_tokena_raise_on_invalid_clienta_raise_on_unsupported_tokenuEnsure the request is valid.

        The protected resource calls the introspection endpoint using
        an HTTP POST request with parameters sent as
        "application/x-www-form-urlencoded".

        * token REQUIRED.  The string value of the token.
        * token_type_hint OPTIONAL.

        A hint about the type of the token submitted for
        introspection.  The protected resource MAY pass this parameter to
        help the authorization server optimize the token lookup.  If the
        server is unable to locate the token using the given hint, it MUST
        extend its search across all of its supported token types.  An
        authorization server MAY ignore this parameter, particularly if it
        is able to detect the token type automatically.

        *  access_token: An Access Token as defined in [`RFC6749`], `section 1.4`_
        *  refresh_token: A Refresh Token as defined in [`RFC6749`], `section 1.5`_

        The introspection endpoint MAY accept other OPTIONAL
        parameters to provide further context to the query.  For
        instance, an authorization server may desire to know the IP
        address of the client accessing the protected resource to
        determine if the correct client is likely to be presenting the
        token.  The definition of this or any other parameters are
        outside the scope of this specification, to be defined by
        service documentation or extensions to this specification.

        .. _`section 1.4`: http://tools.ietf.org/html/rfc6749#section-1.4
        .. _`section 1.5`: http://tools.ietf.org/html/rfc6749#section-1.5
        .. _`RFC6749`: http://tools.ietf.org/html/rfc6749
        u
oauthlib.oauth2.rfc6749.endpoint.introspect
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

An implementation of the OAuth 2.0 `Token Introspection`.

.. _`Token Introspection`: https://tools.ietf.org/html/rfc7662
a__doc__a__file__a__spec__aoriginahas_locationa__cached__lalogginguoauthlib.commonTaRequestaerrorsTaOAuth2ErrorlabaseTaBaseEndpointacatch_errors_and_unavailabilitylacatch_errors_and_unavailabilityagetLoggerTuoauthlib.oauth2.rfc6749.endpoints.introspecta__prepare__aIntrospectEndpointa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.endpoints.introspecta__module__uIntrospect token endpoint.

   This endpoint defines a method to query an OAuth 2.0 authorization
   server to determine the active state of an OAuth 2.0 token and to
   determine meta-information about this token. OAuth 2.0 deployments
   can use this method to convey information about the authorization
   context of the token from the authorization server to the protected
   resource.

   To prevent the values of access tokens from leaking into
   server-side logs via query parameters, an authorization server
   offering token introspection MAY disallow the use of HTTP GET on
   the introspection endpoint and instead require the HTTP POST method
   to be used at the introspection endpoint.
   a__qualname__Taaccess_tokenarefresh_tokenTaPOSTavalid_request_methodsTnuIntrospectEndpoint.__init__TaPOSTnnacreate_introspect_responseuIntrospectEndpoint.create_introspect_responseuIntrospectEndpoint.validate_introspect_requesta__orig_bases__uoauthlib\oauth2\rfc6749\endpoints\introspect.pyu<module oauthlib.oauth2.rfc6749.endpoints.introspect>Ta__class__Taselfarequest_validatorasupported_token_typesTaselfauriahttp_methodabodyaheadersaresp_headersarequestweaclaimsTaselfarequestu.oauthlib.oauth2.rfc6749.endpoints.metadataOaBaseEndpointa__init__araise_errorsaendpointsainitial_claimsavalidate_metadata_serveraclaimsDuContent-TypeuAccess-Control-Allow-Originuapplication/jsonw*ajsonadumpsluCreate metadata response
        ukey {} is a mandatory metadata.autilsais_secure_transportukey {}: {} must be an HTTPS URLw?w&w#ukey {}: {} must not contain query or fragment componentsastartswithTahttpukey {}: {} must be an URLukey {}: {} must be an Arrayuarray {}: {} must contains only string (not {})a_grant_typesaextendakeysasetdefaultatoken_endpoint_auth_methods_supportedaclient_secret_postaclient_secret_basicavalidate_metadataDais_listtatoken_endpoint_auth_signing_alg_values_supportedatoken_endpointDais_requiredais_urltpu
        If the token endpoint is used in the grant type, the value of this
        parameter MUST be the same as the value of the "grant_type"
        parameter passed to the token endpoint defined in the grant type
        definition.
        aresponse_types_supportedu<lambda>uMetadataEndpoint.validate_metadata_authorization.<locals>.<lambda>a_response_typesaresponse_modes_supportedaqueryafragmentatokenaappendTaimplicitaselfDais_requiredais_listtpacodeagrant_typesaAuthorizationCodeGrantadefault_grantacode_challenge_methods_supporteda_code_challenge_methodsaauthorization_endpointanonearevocation_endpoint_auth_methods_supportedarevocation_endpoint_auth_signing_alg_values_supportedarevocation_endpointaintrospection_endpoint_auth_methods_supportedaintrospection_endpoint_auth_signing_alg_values_supportedaintrospection_endpointacopyadeepcopyaissuerDais_requiredais_issuertpajwks_uriDais_urltascopes_supportedaservice_documentationaui_locales_supportedaop_policy_uriaop_tos_uriaTokenEndpointavalidate_metadata_tokenaendpointaAuthorizationEndpointavalidate_metadata_authorizationaRevocationEndpointavalidate_metadata_revocationaIntrospectEndpointavalidate_metadata_introspectionagrant_types_supportedu
        Authorization servers can have metadata describing their
        configuration.  The following authorization server metadata values
        are used by this specification. More details can be found in
        `RFC8414 section 2`_ :

       issuer
          REQUIRED

       authorization_endpoint
          URL of the authorization server's authorization endpoint
          [`RFC6749#Authorization`_].  This is REQUIRED unless no grant types are supported
          that use the authorization endpoint.

       token_endpoint
          URL of the authorization server's token endpoint [`RFC6749#Token`_].  This
          is REQUIRED unless only the implicit grant type is supported.

       scopes_supported
          RECOMMENDED.

       response_types_supported
          REQUIRED.

       Other OPTIONAL fields:
          jwks_uri,
          registration_endpoint,
          response_modes_supported

       grant_types_supported
          OPTIONAL.  JSON array containing a list of the OAuth 2.0 grant
          type values that this authorization server supports.  The array
          values used are the same as those used with the "grant_types"
          parameter defined by "OAuth 2.0 Dynamic Client Registration
          Protocol" [`RFC7591`_].  If omitted, the default value is
          "["authorization_code", "implicit"]".

       token_endpoint_auth_methods_supported

       token_endpoint_auth_signing_alg_values_supported

       service_documentation

       ui_locales_supported

       op_policy_uri

       op_tos_uri

       revocation_endpoint

       revocation_endpoint_auth_methods_supported

       revocation_endpoint_auth_signing_alg_values_supported

       introspection_endpoint

       introspection_endpoint_auth_methods_supported

       introspection_endpoint_auth_signing_alg_values_supported

       code_challenge_methods_supported

       Additional authorization server metadata parameters MAY also be used.
       Some are defined by other specifications, such as OpenID Connect
       Discovery 1.0 [`OpenID.Discovery`_].

        .. _`RFC8414 section 2`: https://tools.ietf.org/html/rfc8414#section-2
        .. _`RFC6749#Authorization`: https://tools.ietf.org/html/rfc6749#section-3.1
        .. _`RFC6749#Token`: https://tools.ietf.org/html/rfc6749#section-3.2
        .. _`RFC7591`: https://tools.ietf.org/html/rfc7591
        .. _`OpenID.Discovery`: https://openid.net/specs/openid-connect-discovery-1_0.html
        u
oauthlib.oauth2.rfc6749.endpoint.metadata
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

An implementation of the `OAuth 2.0 Authorization Server Metadata`.

.. _`OAuth 2.0 Authorization Server Metadata`: https://tools.ietf.org/html/rfc8414
a__doc__a__file__a__spec__aoriginahas_locationa__cached__lalogginguTagrant_typesautilslaauthorizationTaAuthorizationEndpointlabaseTaBaseEndpointacatch_errors_and_unavailabilityacatch_errors_and_unavailabilityaintrospectTaIntrospectEndpointarevocationTaRevocationEndpointTaTokenEndpointagetLoggerTuoauthlib.oauth2.rfc6749.endpoints.metadataaloga__prepare__aMetadataEndpointa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.endpoints.metadataa__module__uOAuth2.0 Authorization Server Metadata endpoint.

   This specification generalizes the metadata format defined by
   `OpenID Connect Discovery 1.0` in a way that is compatible
   with OpenID Connect Discovery while being applicable to a wider set
   of OAuth 2.0 use cases.  This is intentionally parallel to the way
   that OAuth 2.0 Dynamic Client Registration Protocol [`RFC7591`_]
   generalized the dynamic client registration mechanisms defined by
   OpenID Connect Dynamic Client Registration 1.0
   in a way that is compatible with it.

   .. _`OpenID Connect Discovery 1.0`: https://openid.net/specs/openid-connect-discovery-1_0.html
   .. _`RFC7591`: https://tools.ietf.org/html/rfc7591
   a__qualname__uMetadataEndpoint.__init__TaGETnnacreate_metadata_responseuMetadataEndpoint.create_metadata_responseTFpppuMetadataEndpoint.validate_metadatauMetadataEndpoint.validate_metadata_tokenuMetadataEndpoint.validate_metadata_authorizationuMetadataEndpoint.validate_metadata_revocationuMetadataEndpoint.validate_metadata_introspectionuMetadataEndpoint.validate_metadata_servera__orig_bases__uoauthlib\oauth2\rfc6749\endpoints\metadata.pyTwxu<module oauthlib.oauth2.rfc6749.endpoints.metadata>Ta__class__Taselfaendpointsaclaimsaraise_errorsaendpointTaselfauriahttp_methodabodyaheadersTaselfaarrayakeyais_requiredais_listais_urlais_issueraelemTaselfaclaimsaendpointacode_grantTaselfaclaimsaendpoint.oauthlib.oauth2.rfc6749.endpoints.pre_configured0YaAuthorizationCodeGrantaauth_grantaImplicitGrantaimplicit_grantaResourceOwnerPasswordCredentialsGrantapassword_grantaClientCredentialsGrantacredentials_grantaRefreshTokenGrantarefresh_grantaBearerTokenabeareraAuthorizationEndpointa__init__acodeatokenanoneTadefault_response_typearesponse_typesadefault_token_typeaTokenEndpointaauthorization_codeapasswordaclient_credentialsarefresh_tokenTadefault_grant_typeagrant_typesadefault_token_typeaResourceEndpointaBearerTadefault_tokenatoken_typesaRevocationEndpointaIntrospectEndpointuConstruct a new all-grants-in-one server.

        :param request_validator: An implementation of
                                  oauthlib.oauth2.RequestValidator.
        :param token_expires_in: An int or a function to generate a token
                                 expiration offset (in seconds) given a
                                 oauthlib.common.Request object.
        :param token_generator: A function to generate a token from a request.
        :param refresh_token_generator: A function to generate a token from a
                                        request for the refresh token.
        :param kwargs: Extra parameters to pass to authorization-,
                       token-, resource-, and revocation-endpoint constructors.
        uConstruct a new web application server.

        :param request_validator: An implementation of
                                  oauthlib.oauth2.RequestValidator.
        :param token_expires_in: An int or a function to generate a token
                                 expiration offset (in seconds) given a
                                 oauthlib.common.Request object.
        :param token_generator: A function to generate a token from a request.
        :param refresh_token_generator: A function to generate a token from a
                                        request for the refresh token.
        :param kwargs: Extra parameters to pass to authorization-,
                       token-, resource-, and revocation-endpoint constructors.
        Dasupported_token_typesLaaccess_tokenuConstruct a new implicit grant server.

        :param request_validator: An implementation of
                                  oauthlib.oauth2.RequestValidator.
        :param token_expires_in: An int or a function to generate a token
                                 expiration offset (in seconds) given a
                                 oauthlib.common.Request object.
        :param token_generator: A function to generate a token from a request.
        :param refresh_token_generator: A function to generate a token from a
                                        request for the refresh token.
        :param kwargs: Extra parameters to pass to authorization-,
                       token-, resource-, and revocation-endpoint constructors.
        uConstruct a resource owner password credentials grant server.

        :param request_validator: An implementation of
                                  oauthlib.oauth2.RequestValidator.
        :param token_expires_in: An int or a function to generate a token
                                 expiration offset (in seconds) given a
                                 oauthlib.common.Request object.
        :param token_generator: A function to generate a token from a request.
        :param refresh_token_generator: A function to generate a token from a
                                        request for the refresh token.
        :param kwargs: Extra parameters to pass to authorization-,
                       token-, resource-, and revocation-endpoint constructors.
        uConstruct a client credentials grant server.

        :param request_validator: An implementation of
                                  oauthlib.oauth2.RequestValidator.
        :param token_expires_in: An int or a function to generate a token
                                 expiration offset (in seconds) given a
                                 oauthlib.common.Request object.
        :param token_generator: A function to generate a token from a request.
        :param refresh_token_generator: A function to generate a token from a
                                        request for the refresh token.
        :param kwargs: Extra parameters to pass to authorization-,
                       token-, resource-, and revocation-endpoint constructors.
        u
oauthlib.oauth2.rfc6749.endpoints.pre_configured
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various endpoints needed
for providing OAuth 2.0 RFC6749 servers.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__agrant_typesTaAuthorizationCodeGrantaClientCredentialsGrantaImplicitGrantaRefreshTokenGrantaResourceOwnerPasswordCredentialsGrantllatokensTaBearerTokenaauthorizationTaAuthorizationEndpointlaintrospectTaIntrospectEndpointaresourceTaResourceEndpointarevocationTaRevocationEndpointTaTokenEndpointa__prepare__aServera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.endpoints.pre_configureda__module__uAn all-in-one endpoint featuring all four major grant types.a__qualname__TnnnuServer.__init__a__orig_bases__aWebApplicationServeruAn all-in-one endpoint featuring Authorization code grant and Bearer tokens.uWebApplicationServer.__init__aMobileApplicationServeruAn all-in-one endpoint featuring Implicit code grant and Bearer tokens.uMobileApplicationServer.__init__aLegacyApplicationServeruAn all-in-one endpoint featuring Resource Owner Password Credentials grant and Bearer tokens.uLegacyApplicationServer.__init__aBackendApplicationServeruAn all-in-one endpoint featuring Client Credentials grant and Bearer tokens.uBackendApplicationServer.__init__uoauthlib\oauth2\rfc6749\endpoints\pre_configured.pyu<module oauthlib.oauth2.rfc6749.endpoints.pre_configured>Ta__class__Taselfarequest_validatoratoken_expires_inatoken_generatorarefresh_token_generatoraargsakwargsTaselfarequest_validatoratoken_generatoratoken_expires_inarefresh_token_generatorakwargsu.oauthlib.oauth2.rfc6749.endpoints.resourceHaBaseEndpointa__init__a_tokensa_default_tokenatokensagetadefault_tokenaRequestafind_token_typeatoken_typeascopesadefault_token_type_handleralogadebuguDispatching token_type %s request to %r.avalidate_requestuValidate client, code etc, return body + headersasortedaitemsDareversetlluToken type identification.

        RFC 6749 does not provide a method for easily differentiating between
        different token types during protected resource access. We estimate
        the most likely token type (if any) by asking each known token type
        to give an estimation based on the request.
        utoo many values to unpack (expected 2)aestimate_typearequestu<genexpr>uResourceEndpoint.find_token_type.<locals>.<genexpr>u
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 RFC6749.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__alogginguoauthlib.commonTaRequestabaseTaBaseEndpointacatch_errors_and_unavailabilityacatch_errors_and_unavailabilityagetLoggerTuoauthlib.oauth2.rfc6749.endpoints.resourcea__prepare__aResourceEndpointa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.endpoints.resourcea__module__uAuthorizes access to protected resources.

    The client accesses protected resources by presenting the access
    token to the resource server.  The resource server MUST validate the
    access token and ensure that it has not expired and that its scope
    covers the requested resource.  The methods used by the resource
    server to validate the access token (as well as any error responses)
    are beyond the scope of this specification but generally involve an
    interaction or coordination between the resource server and the
    authorization server::

        # For most cases, returning a 403 should suffice.

    The method in which the client utilizes the access token to
    authenticate with the resource server depends on the type of access
    token issued by the authorization server.  Typically, it involves
    using the HTTP "Authorization" request header field [RFC2617] with an
    authentication scheme defined by the specification of the access
    token type used, such as [RFC6750]::

        # Access tokens may also be provided in query and body
        https://example.com/protected?access_token=kjfch2345sdf   # Query
        access_token=sdf23409df   # Body
    a__qualname__uResourceEndpoint.__init__apropertyuResourceEndpoint.default_tokenuResourceEndpoint.default_token_type_handleruResourceEndpoint.tokensTaGETnnnaverify_requestuResourceEndpoint.verify_requestuResourceEndpoint.find_token_typea__orig_bases__uoauthlib\oauth2\rfc6749\endpoints\resource.pyTa.0wnwtarequestu<module oauthlib.oauth2.rfc6749.endpoints.resource>Ta__class__Taselfadefault_tokenatoken_typesTaselfTaselfarequestaestimatesTaselfauriahttp_methodabodyaheadersascopesarequestatoken_type_handleru.oauthlib.oauth2.rfc6749.endpoints.revocationOaBaseEndpointa__init__arequest_validatoravalid_token_typesasupported_token_typesaenable_jsonpDuContent-TypeuCache-ControlaPragmauapplication/jsonuno-storeuno-cacheaRequestTahttp_methodabodyaheadersavalidate_revocation_requestalogadebuguToken revocation valid for %r.aOAuth2ErroruClient error during validation of %r. %r.ajsonacallbacku{}({});aheadersastatus_codearevoke_tokenatokenatoken_type_hintuu();luRevoke supplied access or refresh token.


        The authorization server responds with HTTP status code 200 if the
        token has been revoked successfully or if the client submitted an
        invalid token.

        Note: invalid tokens do not cause an error response since the client
        cannot handle such an error in a reasonable way.  Moreover, the purpose
        of the revocation request, invalidating the particular token, is
        already achieved.

        The content of the response body is ignored by the client as all
        necessary information is conveyed in the response code.

        An invalid token type hint value is ignored by the authorization server
        and does not influence the revocation response.
        a_raise_on_bad_methoda_raise_on_bad_post_requesta_raise_on_missing_tokena_raise_on_invalid_clienta_raise_on_unsupported_tokenuEnsure the request is valid.

        The client constructs the request by including the following parameters
        using the "application/x-www-form-urlencoded" format in the HTTP
        request entity-body:

        token (REQUIRED).  The token that the client wants to get revoked.

        token_type_hint (OPTIONAL).  A hint about the type of the token
        submitted for revocation.  Clients MAY pass this parameter in order to
        help the authorization server to optimize the token lookup.  If the
        server is unable to locate the token using the given hint, it MUST
        extend its search across all of its supported token types.  An
        authorization server MAY ignore this parameter, particularly if it is
        able to detect the token type automatically.  This specification
        defines two such values:

                *  access_token: An Access Token as defined in [RFC6749],
                    `section 1.4`_

                *  refresh_token: A Refresh Token as defined in [RFC6749],
                    `section 1.5`_

                Specific implementations, profiles, and extensions of this
                specification MAY define other values for this parameter using
                the registry defined in `Section 4.1.2`_.

        The client also includes its authentication credentials as described in
        `Section 2.3`_. of [`RFC6749`_].

        .. _`section 1.4`: https://tools.ietf.org/html/rfc6749#section-1.4
        .. _`section 1.5`: https://tools.ietf.org/html/rfc6749#section-1.5
        .. _`section 2.3`: https://tools.ietf.org/html/rfc6749#section-2.3
        .. _`Section 4.1.2`: https://tools.ietf.org/html/draft-ietf-oauth-revocation-11#section-4.1.2
        .. _`RFC6749`: https://tools.ietf.org/html/rfc6749
        u
oauthlib.oauth2.rfc6749.endpoint.revocation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

An implementation of the OAuth 2 `Token Revocation`_ spec (draft 11).

.. _`Token Revocation`: https://tools.ietf.org/html/draft-ietf-oauth-revocation-11
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aloggingluoauthlib.commonTaRequestaerrorsTaOAuth2ErrorlabaseTaBaseEndpointacatch_errors_and_unavailabilitylacatch_errors_and_unavailabilityagetLoggerTuoauthlib.oauth2.rfc6749.endpoints.revocationa__prepare__aRevocationEndpointa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.endpoints.revocationa__module__uToken revocation endpoint.

    Endpoint used by authenticated clients to revoke access and refresh tokens.
    Commonly this will be part of the Authorization Endpoint.
    a__qualname__Taaccess_tokenarefresh_tokenTaPOSTavalid_request_methodsTnFuRevocationEndpoint.__init__TaPOSTnnacreate_revocation_responseuRevocationEndpoint.create_revocation_responseuRevocationEndpoint.validate_revocation_requesta__orig_bases__uoauthlib\oauth2\rfc6749\endpoints\revocation.pyu<module oauthlib.oauth2.rfc6749.endpoints.revocation>Ta__class__Taselfarequest_validatorasupported_token_typesaenable_jsonpTaselfauriahttp_methodabodyaheadersaresp_headersarequestwearesponse_bodyTaselfarequest.oauthlib.oauth2.rfc6749.endpoints.token
LaBaseEndpointa__init__a_grant_typesa_default_token_typea_default_grant_typeagrant_typesagetadefault_grant_typeaRequestTahttp_methodabodyaheadersavalidate_token_requestautilsascope_to_listascopeascopesaextra_credentialsagrant_typeaclaimsadefault_grant_type_handleralogadebuguDispatching grant_type %s request to %r.acreate_token_responseadefault_token_typeuExtract grant_type and route to the designated handler.a_raise_on_bad_methoda_raise_on_bad_post_requestu
oauthlib.oauth2.rfc6749
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 RFC6749.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aloggingluoauthlib.commonTaRequestuoauthlib.oauth2.rfc6749TautilsabaseTaBaseEndpointacatch_errors_and_unavailabilitylacatch_errors_and_unavailabilityagetLoggerTuoauthlib.oauth2.rfc6749.endpoints.tokena__prepare__aTokenEndpointa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.endpoints.tokena__module__uToken issuing endpoint.

    The token endpoint is used by the client to obtain an access token by
    presenting its authorization grant or refresh token.  The token
    endpoint is used with every authorization grant except for the
    implicit grant type (since an access token is issued directly).

    The means through which the client obtains the location of the token
    endpoint are beyond the scope of this specification, but the location
    is typically provided in the service documentation.

    The endpoint URI MAY include an "application/x-www-form-urlencoded"
    formatted (per `Appendix B`_) query component,
    which MUST be retained when adding additional query parameters.  The
    endpoint URI MUST NOT include a fragment component::

        https://example.com/path?query=component             # OK
        https://example.com/path?query=component#fragment    # Not OK

    Since requests to the token endpoint result in the transmission of
    clear-text credentials (in the HTTP request and response), the
    authorization server MUST require the use of TLS as described in
    Section 1.6 when sending requests to the token endpoint::

        # We will deny any request which URI schema is not with https

    The client MUST use the HTTP "POST" method when making access token
    requests::

        # HTTP method is currently not enforced

    Parameters sent without a value MUST be treated as if they were
    omitted from the request.  The authorization server MUST ignore
    unrecognized request parameters.  Request and response parameters
    MUST NOT be included more than once::

        # Delegated to each grant type.

    .. _`Appendix B`: https://tools.ietf.org/html/rfc6749#appendix-B
    a__qualname__TaPOSTavalid_request_methodsuTokenEndpoint.__init__apropertyuTokenEndpoint.grant_typesuTokenEndpoint.default_grant_typeuTokenEndpoint.default_grant_type_handleruTokenEndpoint.default_token_typeTaPOSTnnnnnuTokenEndpoint.create_token_responseuTokenEndpoint.validate_token_requesta__orig_bases__uoauthlib\oauth2\rfc6749\endpoints\token.pyu<module oauthlib.oauth2.rfc6749.endpoints.token>Ta__class__Taselfadefault_grant_typeadefault_token_typeagrant_typesT
aselfauriahttp_methodabodyaheadersacredentialsagrant_type_for_scopeaclaimsarequestagrant_type_handlerTaselfTaselfarequestu.oauthlib.oauth2.rfc6749.errors$adescriptionu({}) {}aselfaerrorw a__class__a__init__auriastateastatus_codearequestaredirect_uriaclient_idascopesaresponse_typearesponse_modeagrant_typeu
        :param description: A human-readable ASCII [USASCII] text providing
                            additional information, used to assist the client
                            developer in understanding the error that occurred.
                            Values for the "error_description" parameter
                            MUST NOT include characters outside the set
                            x20-21 / x23-5B / x5D-7E.

        :param uri: A URI identifying a human-readable web page with information
                    about the error, used to provide the client developer with
                    additional information about the error.  Values for the
                    "error_uri" parameter MUST conform to the URI- Reference
                    syntax, and thus MUST NOT include characters outside the set
                    x21 / x23-5B / x5D-7E.

        :param state: A CSRF protection value received from the client.

        :param status_code:

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        afragmentaadd_params_to_uriatwotuplesaerror_descriptionaerror_uriaappendaurlencodeajsonadumpsluerror="{}"uerror_description="{}"aauthvaluesuerror_uri="{}"uWWW-AuthenticateuBearer u, ainspectlagetTaerror_descriptionTaerror_uriTastateagetmembersamodulesuoauthlib.oauth2.rfc6749.errorsaisclassutoo many values to unpack (expected 2)aCustomOAuth2Erroru
oauthlib.oauth2.rfc6749.errors
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Error used both by OAuth 2 clients and providers to represent the spec
defined error responses for all four core grant types.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uoauthlib.commonTaadd_params_to_uriaurlencodeTEExceptiona__prepare__aOAuth2Errora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>a__module__a__qualname__luTnnnnnuOAuth2Error.__init__ain_uriuOAuth2Error.in_uriapropertyuOAuth2Error.twotuplesaurlencodeduOAuth2Error.urlencodeduOAuth2Error.jsonaheadersuOAuth2Error.headersa__orig_bases__aTokenExpiredErroratoken_expiredaInsecureTransportErrorainsecure_transportuOAuth 2 MUST utilize https.aMismatchingStateErroramismatching_stateuCSRF Warning! State not equal in request and response.aMissingCodeErroramissing_codeaMissingTokenErroramissing_tokenaMissingTokenTypeErroramissing_token_typeaFatalClientErroru
    Errors during authorization where user should not be redirected back.

    If the request fails due to a missing, invalid, or mismatching
    redirection URI, or if the client identifier is missing or invalid,
    the authorization server SHOULD inform the resource owner of the
    error and MUST NOT automatically redirect the user-agent to the
    invalid redirection URI.

    Instead the user should be informed of the error by the provider itself.
    aInvalidRequestFatalErroru
    For fatal errors, the request is missing a required parameter, includes
    an invalid parameter value, includes a parameter more than once, or is
    otherwise malformed.
    ainvalid_requestaInvalidRedirectURIErroruInvalid redirect URI.aMissingRedirectURIErroruMissing redirect URI.aMismatchingRedirectURIErroruMismatching redirect URI.aInvalidClientIdErroruInvalid client_id parameter value.aMissingClientIdErroruMissing client_id parameter.aInvalidRequestErroru
    The request is missing a required parameter, includes an invalid
    parameter value, includes a parameter more than once, or is
    otherwise malformed.
    aMissingResponseTypeErroruMissing response_type parameter.aMissingCodeChallengeErroru
    If the server requires Proof Key for Code Exchange (PKCE) by OAuth
    public clients and the client does not send the "code_challenge" in
    the request, the authorization endpoint MUST return the authorization
    error response with the "error" value set to "invalid_request".  The
    "error_description" or the response of "error_uri" SHOULD explain the
    nature of error, e.g., code challenge required.
    uCode challenge required.aMissingCodeVerifierErroru
    The request to the token endpoint, when PKCE is enabled, has
    the parameter `code_verifier` REQUIRED.
    uCode verifier required.aAccessDeniedErroru
    The resource owner or authorization server denied the request.
    aaccess_deniedaUnsupportedResponseTypeErroru
    The authorization server does not support obtaining an authorization
    code using this method.
    aunsupported_response_typeaUnsupportedCodeChallengeMethodErroru
    If the server supporting PKCE does not support the requested
    transformation, the authorization endpoint MUST return the
    authorization error response with "error" value set to
    "invalid_request".  The "error_description" or the response of
    "error_uri" SHOULD explain the nature of error, e.g., transform
    algorithm not supported.
    uTransform algorithm not supported.aInvalidScopeErroru
    The requested scope is invalid, unknown, or malformed, or
    exceeds the scope granted by the resource owner.

    https://tools.ietf.org/html/rfc6749#section-5.2
    ainvalid_scopeaServerErroru
    The authorization server encountered an unexpected condition that
    prevented it from fulfilling the request.  (This error code is needed
    because a 500 Internal Server Error HTTP status code cannot be returned
    to the client via a HTTP redirect.)
    aserver_erroraTemporarilyUnavailableErroru
    The authorization server is currently unable to handle the request
    due to a temporary overloading or maintenance of the server.
    (This error code is needed because a 503 Service Unavailable HTTP
    status code cannot be returned to the client via a HTTP redirect.)
    atemporarily_unavailableaInvalidClientErroru
    Client authentication failed (e.g. unknown client, no client
    authentication included, or unsupported authentication method).
    The authorization server MAY return an HTTP 401 (Unauthorized) status
    code to indicate which HTTP authentication schemes are supported.
    If the client attempted to authenticate via the "Authorization" request
    header field, the authorization server MUST respond with an
    HTTP 401 (Unauthorized) status code, and include the "WWW-Authenticate"
    response header field matching the authentication scheme used by the
    client.
    ainvalid_clientaInvalidGrantErroru
    The provided authorization grant (e.g. authorization code, resource
    owner credentials) or refresh token is invalid, expired, revoked, does
    not match the redirection URI used in the authorization request, or was
    issued to another client.

    https://tools.ietf.org/html/rfc6749#section-5.2
    ainvalid_grantaUnauthorizedClientErroru
    The authenticated client is not authorized to use this authorization
    grant type.
    aunauthorized_clientaUnsupportedGrantTypeErroru
    The authorization grant type is not supported by the authorization
    server.
    aunsupported_grant_typeaUnsupportedTokenTypeErroru
    The authorization server does not support the hint of the
    presented token type.  I.e. the client tried to revoke an access token
    on a server not supporting this feature.
    aunsupported_token_typeaInvalidTokenErroru
    The access token provided is expired, revoked, malformed, or
    invalid for other reasons.  The resource SHOULD respond with
    the HTTP 401 (Unauthorized) status code.  The client MAY
    request a new access token and retry the protected resource
    request.
    ainvalid_tokenuThe access token provided is expired, revoked, malformed, or invalid for other reasons.aInsufficientScopeErroru
    The request requires higher privileges than provided by the
    access token.  The resource server SHOULD respond with the HTTP
    403 (Forbidden) status code and MAY include the "scope"
    attribute with the scope necessary to access the protected
    resource.
    ainsufficient_scopeluThe request requires higher privileges than provided by the access token.aConsentRequiredu
    The Authorization Server requires End-User consent.

    This error MAY be returned when the prompt parameter value in the
    Authentication Request is none, but the Authentication Request cannot be
    completed without displaying a user interface for End-User consent.
    aconsent_requiredaLoginRequiredu
    The Authorization Server requires End-User authentication.

    This error MAY be returned when the prompt parameter value in the
    Authentication Request is none, but the Authentication Request cannot be
    completed without displaying a user interface for End-User authentication.
    alogin_requiredu
    This error is a placeholder for all custom errors not described by the RFC.
    Some of the popular OAuth2 providers are using custom errors.
    uCustomOAuth2Error.__init__Tnaraise_from_erroruoauthlib\oauth2\rfc6749\errors.pyu<module oauthlib.oauth2.rfc6749.errors>Ta__class__Taselfadescriptionauriastateastatus_codearequestamessagea__class__Taselfaerroraargsakwargsa__class__TaselfaauthvaluesTaselfauriafragmentTaselfTaerroraparamsainspectasysakwargsw_aclsTaselfaerror.oauthlib.oauth2.rfc6749.grant_types.authorization_code|;abase64aurlsafe_b64encodeahashlibasha256aencodeadigestadecodearstripTw=u
    If the "code_challenge_method" from `Section 4.3`_ was "S256", the
    received "code_verifier" is hashed by SHA-256, base64url-encoded, and
    then compared to the "code_challenge", i.e.:

    BASE64URL-ENCODE(SHA256(ASCII(code_verifier))) == code_challenge

    How to implement a base64url-encoding
    function without padding, based upon the standard base64-encoding
    function that uses padding.

    To be concrete, example C# code implementing these functions is shown
    below.  Similar code could be used in other languages.

    static string base64urlencode(byte [] arg)
    {
        string s = Convert.ToBase64String(arg); // Regular base64 encoder
        s = s.Split('=')[0]; // Remove any trailing '='s
        s = s.Replace('+', '-'); // 62nd char of encoding
        s = s.Replace('/', '_'); // 63rd char of encoding
        return s;
    }

    In python urlsafe_b64encode is already replacing '+' and '/', but preserve
    the trailing '='. So we have to remove it.

    .. _`Section 4.3`: https://tools.ietf.org/html/rfc7636#section-4.3
    u
    If the "code_challenge_method" from `Section 4.3`_ was "plain", they are
    compared directly, i.e.:

    code_verifier == code_challenge.

    .. _`Section 4.3`: https://tools.ietf.org/html/rfc7636#section-4.3
    acodeacommonagenerate_tokenastatearequestalogadebuguCreated authorization code grant %r for request %r.agrantu
        Generates an authorization grant represented as a dictionary.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        avalidate_authorization_requestuPre resource owner authorization validation ok for %r.aerrorsaFatalClientErroruFatal client error during validation of %r. %r.aOAuth2ErroruClient error during validation of %r. %r.aredirect_uriaerror_uriaadd_params_to_uriatwotuplesaresponse_modeafragmentTafragmentaLocationl.acreate_authorization_codea_code_modifiersatoken_handleraaccess_tokenarequest_validatorasave_tokenuSaving grant %r for %r.asave_authorization_codeaclient_idaprepare_authorization_responseu
        The client constructs the request URI by adding the following
        parameters to the query component of the authorization endpoint URI
        using the "application/x-www-form-urlencoded" format, per `Appendix B`_:

        response_type
                REQUIRED.  Value MUST be set to "code" for standard OAuth2
                authorization flow.  For OpenID Connect it must be one of
                "code token", "code id_token", or "code token id_token" - we
                essentially test that "code" appears in the response_type.
        client_id
                REQUIRED.  The client identifier as described in `Section 2.2`_.
        redirect_uri
                OPTIONAL.  As described in `Section 3.1.2`_.
        scope
                OPTIONAL.  The scope of the access request as described by
                `Section 3.3`_.
        state
                RECOMMENDED.  An opaque value used by the client to maintain
                state between the request and callback.  The authorization
                server includes this value when redirecting the user-agent back
                to the client.  The parameter SHOULD be used for preventing
                cross-site request forgery as described in `Section 10.12`_.

        The client directs the resource owner to the constructed URI using an
        HTTP redirection response, or by other means available to it via the
        user-agent.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param token_handler: A token handler instance, for example of type
                              oauthlib.oauth2.BearerToken.
        :returns: headers, body, status
        :raises: FatalClientError on invalid redirect URI or client id.

        A few examples::

            >>> from your_validator import your_validator
            >>> request = Request('https://example.com/authorize?client_id=valid'
            ...                   '&redirect_uri=http%3A%2F%2Fclient.com%2F')
            >>> from oauthlib.common import Request
            >>> from oauthlib.oauth2 import AuthorizationCodeGrant, BearerToken
            >>> token = BearerToken(your_validator)
            >>> grant = AuthorizationCodeGrant(your_validator)
            >>> request.scopes = ['authorized', 'in', 'some', 'form']
            >>> grant.create_authorization_response(request, token)
            (u'http://client.com/?error=invalid_request&error_description=Missing+response_type+parameter.', None, None, 400)
            >>> request = Request('https://example.com/authorize?client_id=valid'
            ...                   '&redirect_uri=http%3A%2F%2Fclient.com%2F'
            ...                   '&response_type=code')
            >>> request.scopes = ['authorized', 'in', 'some', 'form']
            >>> grant.create_authorization_response(request, token)
            (u'http://client.com/?code=u3F05aEObJuP2k7DordviIgW5wl52N', None, None, 200)
            >>> # If the client id or redirect uri fails validation
            >>> grant.create_authorization_response(request, token)
            Traceback (most recent call last):
                File "<stdin>", line 1, in <module>
                File "oauthlib/oauth2/rfc6749/grant_types.py", line 515, in create_authorization_response
                    >>> grant.create_authorization_response(request, token)
                File "oauthlib/oauth2/rfc6749/grant_types.py", line 591, in validate_authorization_request
            oauthlib.oauth2.rfc6749.errors.InvalidClientIdError

        .. _`Appendix B`: https://tools.ietf.org/html/rfc6749#appendix-B
        .. _`Section 2.2`: https://tools.ietf.org/html/rfc6749#section-2.2
        .. _`Section 3.1.2`: https://tools.ietf.org/html/rfc6749#section-3.1.2
        .. _`Section 3.3`: https://tools.ietf.org/html/rfc6749#section-3.3
        .. _`Section 10.12`: https://tools.ietf.org/html/rfc6749#section-10.12
        a_get_default_headersavalidate_token_requestuToken request validation ok for %r.aupdateaheadersajsonastatus_codeacreate_tokenarefresh_tokenTarefresh_tokena_token_modifiersatokenainvalidate_authorization_codea_create_cors_headersadumpsluValidate the authorization code.

        The client MUST NOT use the authorization code more than once. If an
        authorization code is used more than once, the authorization server
        MUST deny the request and SHOULD revoke (when possible) all tokens
        previously issued based on that authorization code. The authorization
        code is bound to the client identifier and redirection URI.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param token_handler: A token handler instance, for example of type
                              oauthlib.oauth2.BearerToken.

        Taclient_idaresponse_typearedirect_uriascopeastateaduplicate_paramsaInvalidRequestFatalErroruUnable to parse query stringTadescriptionarequestuDuplicate %s parameter.aMissingClientIdErrorTarequestavalidate_client_idaInvalidClientIdErroruValidating redirection uri %s for client %s.a_handle_redirectsacustom_validatorsapre_autharequest_infoaresponse_typeaMissingResponseTypeErroranoneaUnsupportedResponseTypeErroravalidate_response_typeaclientuClient %s is not authorized to use response_type %s.aUnauthorizedClientErrorais_pkce_requiredacode_challengeaMissingCodeChallengeErroracode_challenge_methodaplaina_code_challenge_methodsaUnsupportedCodeChallengeMethodErroravalidate_scopesapost_authascopesuCheck the authorization request for normal and fatal errors.

        A normal error could be a missing response_type parameter or the client
        attempting to access scope it is not allowed to ask authorization for.
        Normal errors can safely be included in the redirection URI and
        sent back to the client.

        Fatal errors occur when the client_id or redirect_uri is invalid or
        missing. These must be caught by the provider and handled, how this
        is done is outside of the scope of OAuthLib but showing an error
        page describing the issue is a good idea.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        agrant_typeTaauthorization_codeaopenidaUnsupportedGrantTypeErrorapre_tokenaInvalidRequestErroruMissing code parameter.Taclient_idagrant_typearedirect_uriaclient_authentication_requiredaauthenticate_clientuClient authentication failed, %r.aInvalidClientErroraauthenticate_client_iduAuthenticate client must set the request.client.client_id attribute in authenticate_client.avalidate_grant_typeavalidate_codeuClient, %r (%r), is not allowed access to scopes %r.aInvalidGrantErroraget_code_challengeacode_verifieraMissingCodeVerifierErroraget_code_challenge_methoduChallenge method not foundTarequestadescriptionaServerErrorucode_challenge_method {} is not supported.avalidate_code_challengeTurequest provided a invalid code_verifier.uChallenge not foundTauserascopesurequest.%s was not set on code validation.ausing_default_redirect_uriaget_default_redirect_uriuUsing default redirect_uri %s.aMissingRedirectURIErroruUsing provided redirect_uri %saconfirm_redirect_uriuRedirect_uri (%r) invalid for client %r (%r).aMismatchingRedirectURIErrorapost_tokenu
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        uUnknown challenge_method %su
oauthlib.oauth2.rfc6749.grant_types
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a__doc__a__file__a__spec__aoriginahas_locationa__cached__laloggingaoauthlibTacommonuTaerrorslabaseTaGrantTypeBaselaGrantTypeBaseagetLoggerTuoauthlib.oauth2.rfc6749.grant_types.authorization_codeacode_challenge_method_s256acode_challenge_method_plaina__prepare__aAuthorizationCodeGranta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.grant_types.authorization_codea__module__u`Authorization Code Grant`_

    The authorization code grant type is used to obtain both access
    tokens and refresh tokens and is optimized for confidential clients.
    Since this is a redirection-based flow, the client must be capable of
    interacting with the resource owner's user-agent (typically a web
    browser) and capable of receiving incoming requests (via redirection)
    from the authorization server::

        +----------+
        | Resource |
        |   Owner  |
        |          |
        +----------+
             ^
             |
            (B)
        +----|-----+          Client Identifier      +---------------+
        |         -+----(A)-- & Redirection URI ---->|               |
        |  User-   |                                 | Authorization |
        |  Agent  -+----(B)-- User authenticates --->|     Server    |
        |          |                                 |               |
        |         -+----(C)-- Authorization Code ---<|               |
        +-|----|---+                                 +---------------+
          |    |                                         ^      v
         (A)  (C)                                        |      |
          |    |                                         |      |
          ^    v                                         |      |
        +---------+                                      |      |
        |         |>---(D)-- Authorization Code ---------'      |
        |  Client |          & Redirection URI                  |
        |         |                                             |
        |         |<---(E)----- Access Token -------------------'
        +---------+       (w/ Optional Refresh Token)

    Note: The lines illustrating steps (A), (B), and (C) are broken into
    two parts as they pass through the user-agent.

    Figure 3: Authorization Code Flow

    The flow illustrated in Figure 3 includes the following steps:

    (A)  The client initiates the flow by directing the resource owner's
         user-agent to the authorization endpoint.  The client includes
         its client identifier, requested scope, local state, and a
         redirection URI to which the authorization server will send the
         user-agent back once access is granted (or denied).

    (B)  The authorization server authenticates the resource owner (via
         the user-agent) and establishes whether the resource owner
         grants or denies the client's access request.

    (C)  Assuming the resource owner grants access, the authorization
         server redirects the user-agent back to the client using the
         redirection URI provided earlier (in the request or during
         client registration).  The redirection URI includes an
         authorization code and any local state provided by the client
         earlier.

    (D)  The client requests an access token from the authorization
         server's token endpoint by including the authorization code
         received in the previous step.  When making the request, the
         client authenticates with the authorization server.  The client
         includes the redirection URI used to obtain the authorization
         code for verification.

    (E)  The authorization server authenticates the client, validates the
         authorization code, and ensures that the redirection URI
         received matches the URI used to redirect the client in
         step (C).  If valid, the authorization server responds back with
         an access token and, optionally, a refresh token.

    OAuth 2.0 public clients utilizing the Authorization Code Grant are
    susceptible to the authorization code interception attack.

    A technique to mitigate against the threat through the use of Proof Key for Code
    Exchange (PKCE, pronounced "pixy") is implemented in the current oauthlib
    implementation.

    .. _`Authorization Code Grant`: https://tools.ietf.org/html/rfc6749#section-4.1
    .. _`PKCE`: https://tools.ietf.org/html/rfc7636
    a__qualname__aqueryadefault_response_modearesponse_typesaS256uAuthorizationCodeGrant.create_authorization_codeacreate_authorization_responseuAuthorizationCodeGrant.create_authorization_responseacreate_token_responseuAuthorizationCodeGrant.create_token_responseuAuthorizationCodeGrant.validate_authorization_requestuAuthorizationCodeGrant.validate_token_requestuAuthorizationCodeGrant.validate_code_challengea__orig_bases__uoauthlib\oauth2\rfc6749\grant_types\authorization_code.pyu<module oauthlib.oauth2.rfc6749.grant_types.authorization_code>Ta__class__TaverifierachallengeTaselfarequestagrantTaselfarequestatoken_handlerwearedirect_uriagrantamodifierTaselfarequestatoken_handleraheadersweatokenamodifierTaselfarequestaparamaduplicate_paramsarequest_infoavalidatorTaselfachallengeachallenge_methodaverifierTaselfarequestavalidatoraparamachallengeachallenge_methodaattr.oauthlib.oauth2.rfc6749.grant_types.baseapre_authapost_authapre_tokenapost_tokenachainaRequestValidatorarequest_validatoraresponse_typesarefresh_tokena_setup_custom_validatorsa_code_modifiersa_token_modifiersaitemsutoo many values to unpack (expected 2)agetavalidate_authorization_requestu{} does not support authorization validators. Use token validators instead.a__name__TTpaValidatorsContaineracustom_validatorsaappenduSubclasses must implement this method.u
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param token_handler: A token handler instance, for example of type
                              oauthlib.oauth2.BearerToken.
        aresponse_typeLatokenucode tokenuid_token tokenucode id_token tokenaupdateacreate_tokenDarefresh_tokenFu
        :param token:
        :param token_handler: A token handler instance, for example of type
                              oauthlib.oauth2.BearerToken.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        aclient_idavalidate_grant_typeagrant_typeaclientalogadebuguUnauthorized from %r (%r) access to grant type %s.aerrorsaUnauthorizedClientErrorTarequestu
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        ascopesautilsascope_to_listascopeaget_default_scopesuValidating access to scopes %r for client %r (%r).aselfavalidate_scopesaInvalidScopeErroraresponse_modeadefault_response_modeTaqueryafragmentuOverriding invalid response mode %s with %sanoneTastatenastateaqueryaadd_params_to_uriaredirect_uriDafragmentFaLocationafragmentDafragmenttuSubclasses must set a valid default_response_modeuPlace token according to response mode.

        Base classes can define a default response mode for their authorization
        response by overriding the static `default_response_mode` member.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param token:
        :param headers:
        :param body:
        :param status:
        DuContent-TypeuCache-ControlaPragmauapplication/jsonuno-storeuno-cacheuCreate default headers for grant responses.ausing_default_redirect_uriuUsing provided redirect_uri %sais_absolute_uriaInvalidRedirectURIErroravalidate_redirect_uriaMismatchingRedirectURIErroraget_default_redirect_uriuUsing default redirect_uri %s.aMissingRedirectURIErroraoriginaheadersais_secure_transportuOrigin "%s" is not HTTPS, CORS not allowed.ais_origin_alloweduInvalid origin "%s", CORS not allowed.uValid origin "%s", injecting CORS headers.uAccess-Control-Allow-OriginuIf CORS is allowed, create the appropriate headers.u
oauthlib.oauth2.rfc6749.grant_types
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a__doc__a__file__a__spec__ahas_locationa__cached__alogginglaitertoolsTachainuoauthlib.commonTaadd_params_to_uriuoauthlib.oauth2.rfc6749Taerrorsautilsuoauthlib.uri_validateTais_absolute_uriTaRequestValidatorlTais_secure_transportagetLoggerTuoauthlib.oauth2.rfc6749.grant_types.baseuoauthlib.oauth2.rfc6749.grant_types.basea__module__u
    Container object for holding custom validator callables to be invoked
    as part of the grant type `validate_authorization_request()` or
    `validate_authorization_request()` methods on the various grant types.

    Authorization validators must be callables that take a request object and
    return a dict, which may contain items to be added to the `request_info`
    returned from the grant_type after validation.

    Token validators must be callables that take a request object and
    return None.

    Both authorization validators and token validators may raise OAuth2
    exceptions if validation conditions fail.

    Authorization validators added to `pre_auth` will be run BEFORE
    the standard validations (but after the critical ones that raise
    fatal errors) as part of `validate_authorization_request()`

    Authorization validators added to `post_auth` will be run AFTER
    the standard validations as part of `validate_authorization_request()`

    Token validators added to `pre_token` will be run BEFORE
    the standard validations as part of `validate_token_request()`

    Token validators added to `post_token` will be run AFTER
    the standard validations as part of `validate_token_request()`

    For example:

    >>> def my_auth_validator(request):
    ...    return {'myval': True}
    >>> auth_code_grant = AuthorizationCodeGrant(request_validator)
    >>> auth_code_grant.custom_validators.pre_auth.append(my_auth_validator)
    >>> def my_token_validator(request):
    ...     if not request.everything_okay:
    ...         raise errors.OAuth2Error("uh-oh")
    >>> auth_code_grant.custom_validators.post_token.append(my_token_validator)
    a__qualname__a__init__uValidatorsContainer.__init__aall_preuValidatorsContainer.all_preaall_postuValidatorsContainer.all_postTaGrantTypeBaseaerror_uriacodeTnuGrantTypeBase.__init__uGrantTypeBase._setup_custom_validatorsaregister_response_typeuGrantTypeBase.register_response_typearegister_code_modifieruGrantTypeBase.register_code_modifieraregister_token_modifieruGrantTypeBase.register_token_modifieracreate_authorization_responseuGrantTypeBase.create_authorization_responseacreate_token_responseuGrantTypeBase.create_token_responseaadd_tokenuGrantTypeBase.add_tokenuGrantTypeBase.validate_grant_typeuGrantTypeBase.validate_scopesaprepare_authorization_responseuGrantTypeBase.prepare_authorization_responsea_get_default_headersuGrantTypeBase._get_default_headersa_handle_redirectsuGrantTypeBase._handle_redirectsa_create_cors_headersuGrantTypeBase._create_cors_headersuoauthlib\oauth2\rfc6749\grant_types\base.pyu<module oauthlib.oauth2.rfc6749.grant_types.base>Ta__class__Taselfapost_authapost_tokenapre_authapre_tokenTaselfarequest_validatorakwargsakwavalTaselfarequestaoriginTaselfTaselfarequestTaselfakwargsapost_authapost_tokenapre_authapre_tokenamsgTaselfatokenatoken_handlerarequestTaselfarequestatoken_handlerTaselfarequestatokenaheadersabodyastatusatoken_itemsastateTaselfamodifierTaselfaresponse_typeTaselfarequestaclient_idu.oauthlib.oauth2.rfc6749.grant_types.client_credentialsTa_get_default_headersalogadebuguValidating access token request, %r.avalidate_token_requestaerrorsaOAuth2ErroruClient error in token request. %s.aupdateaheadersajsonastatus_codeacreate_tokenDarefresh_tokenFa_token_modifiersatokenarequest_validatorasave_tokenuIssuing token to client id %r (%r), %r.aclient_idaclientadumpsluReturn token or error in JSON format.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param token_handler: A token handler instance, for example of type
                              oauthlib.oauth2.BearerToken.

        If the access token request is valid and authorized, the
        authorization server issues an access token as described in
        `Section 5.1`_.  A refresh token SHOULD NOT be included.  If the request
        failed client authentication or is invalid, the authorization server
        returns an error response as described in `Section 5.2`_.

        .. _`Section 5.1`: https://tools.ietf.org/html/rfc6749#section-5.1
        .. _`Section 5.2`: https://tools.ietf.org/html/rfc6749#section-5.2
        acustom_validatorsapre_tokenarequestagrant_typeaInvalidRequestErrorTuRequest is missing grant type.Tarequestaclient_credentialsaUnsupportedGrantTypeErrorTagrant_typeascopeaduplicate_paramsuDuplicate %s parameter.TadescriptionarequestuAuthenticating client, %r.aauthenticate_clientuClient authentication failed, %r.aInvalidClientErroruAuthenticate client must set the request.client.client_id attribute in authenticate_client.avalidate_grant_typeuAuthorizing access to client %r.avalidate_scopesapost_tokenu
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        u
oauthlib.oauth2.rfc6749.grant_types
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a__doc__a__file__a__spec__aoriginahas_locationa__cached__lalogginguTaerrorslabaseTaGrantTypeBaselaGrantTypeBaseagetLoggerTuoauthlib.oauth2.rfc6749.grant_types.client_credentialsa__prepare__aClientCredentialsGranta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.grant_types.client_credentialsa__module__u`Client Credentials Grant`_

    The client can request an access token using only its client
    credentials (or other supported means of authentication) when the
    client is requesting access to the protected resources under its
    control, or those of another resource owner that have been previously
    arranged with the authorization server (the method of which is beyond
    the scope of this specification).

    The client credentials grant type MUST only be used by confidential
    clients::

        +---------+                                  +---------------+
        :         :                                  :               :
        :         :>-- A - Client Authentication --->: Authorization :
        : Client  :                                  :     Server    :
        :         :<-- B ---- Access Token ---------<:               :
        :         :                                  :               :
        +---------+                                  +---------------+

    Figure 6: Client Credentials Flow

    The flow illustrated in Figure 6 includes the following steps:

    (A)  The client authenticates with the authorization server and
            requests an access token from the token endpoint.

    (B)  The authorization server authenticates the client, and if valid,
            issues an access token.

    .. _`Client Credentials Grant`: https://tools.ietf.org/html/rfc6749#section-4.4
    a__qualname__acreate_token_responseuClientCredentialsGrant.create_token_responseuClientCredentialsGrant.validate_token_requesta__orig_bases__uoauthlib\oauth2\rfc6749\grant_types\client_credentials.pyu<module oauthlib.oauth2.rfc6749.grant_types.client_credentials>Ta__class__Taselfarequestatoken_handleraheadersweatokenamodifierTaselfarequestavalidatoraparam.oauthlib.oauth2.rfc6749.grant_types)u
oauthlib.oauth2.rfc6749.grant_types
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_oauthlibu\not_existinguoauth2\rfc6749\grant_typesTaNUITKA_PACKAGE_oauthlib_oauth2u\not_existingurfc6749\grant_typesTaNUITKA_PACKAGE_oauthlib_oauth2_rfc6749u\not_existingagrant_typesTaNUITKA_PACKAGE_oauthlib_oauth2_rfc6749_grant_typesu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aauthorization_codeTaAuthorizationCodeGrantlaAuthorizationCodeGrantlaclient_credentialsTaClientCredentialsGrantaClientCredentialsGrantaimplicitTaImplicitGrantaImplicitGrantarefresh_tokenTaRefreshTokenGrantaRefreshTokenGrantaresource_owner_password_credentialsTaResourceOwnerPasswordCredentialsGrantaResourceOwnerPasswordCredentialsGrantuoauthlib\oauth2\rfc6749\grant_types\__init__.pyu<module oauthlib.oauth2.rfc6749.grant_types>u.oauthlib.oauth2.rfc6749.grant_types.implicit<-nacreate_token_responseuCreate an authorization response.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param token_handler: A token handler instance, for example of type
                              oauthlib.oauth2.BearerToken.

        The client constructs the request URI by adding the following
        parameters to the query component of the authorization endpoint URI
        using the "application/x-www-form-urlencoded" format, per `Appendix B`_:

        response_type
                REQUIRED.  Value MUST be set to "token" for standard OAuth2 implicit flow
                           or "id_token token" or just "id_token" for OIDC implicit flow

        client_id
                REQUIRED.  The client identifier as described in `Section 2.2`_.

        redirect_uri
                OPTIONAL.  As described in `Section 3.1.2`_.

        scope
                OPTIONAL.  The scope of the access request as described by
                `Section 3.3`_.

        state
                RECOMMENDED.  An opaque value used by the client to maintain
                state between the request and callback.  The authorization
                server includes this value when redirecting the user-agent back
                to the client.  The parameter SHOULD be used for preventing
                cross-site request forgery as described in `Section 10.12`_.

        The authorization server validates the request to ensure that all
        required parameters are present and valid.  The authorization server
        MUST verify that the redirection URI to which it will redirect the
        access token matches a redirection URI registered by the client as
        described in `Section 3.1.2`_.

        .. _`Section 2.2`: https://tools.ietf.org/html/rfc6749#section-2.2
        .. _`Section 3.1.2`: https://tools.ietf.org/html/rfc6749#section-3.1.2
        .. _`Section 3.3`: https://tools.ietf.org/html/rfc6749#section-3.3
        .. _`Section 10.12`: https://tools.ietf.org/html/rfc6749#section-10.12
        .. _`Appendix B`: https://tools.ietf.org/html/rfc6749#appendix-B
        avalidate_token_requestaerrorsaFatalClientErroralogadebuguFatal client error during validation of %r. %r.arequestaOAuth2ErroruClient error during validation of %r. %r.aLocationacommonaadd_params_to_uriaredirect_uriatwotuplesDafragmenttl.atokenaresponse_typeasplitacreate_tokenDarefresh_tokenFastatea_token_modifiersatoken_handlerarequest_validatorasave_tokenaprepare_authorization_responseuReturn token or error embedded in the URI fragment.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param token_handler: A token handler instance, for example of type
                              oauthlib.oauth2.BearerToken.

        If the resource owner grants the access request, the authorization
        server issues an access token and delivers it to the client by adding
        the following parameters to the fragment component of the redirection
        URI using the "application/x-www-form-urlencoded" format, per
        `Appendix B`_:

        access_token
                REQUIRED.  The access token issued by the authorization server.

        token_type
                REQUIRED.  The type of the token issued as described in
                `Section 7.1`_.  Value is case insensitive.

        expires_in
                RECOMMENDED.  The lifetime in seconds of the access token.  For
                example, the value "3600" denotes that the access token will
                expire in one hour from the time the response was generated.
                If omitted, the authorization server SHOULD provide the
                expiration time via other means or document the default value.

        scope
                OPTIONAL, if identical to the scope requested by the client;
                otherwise, REQUIRED.  The scope of the access token as
                described by `Section 3.3`_.

        state
                REQUIRED if the "state" parameter was present in the client
                authorization request.  The exact value received from the
                client.

        The authorization server MUST NOT issue a refresh token.

        .. _`Appendix B`: https://tools.ietf.org/html/rfc6749#appendix-B
        .. _`Section 3.3`: https://tools.ietf.org/html/rfc6749#section-3.3
        .. _`Section 7.1`: https://tools.ietf.org/html/rfc6749#section-7.1
        u
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        Taclient_idaresponse_typearedirect_uriascopeastateaduplicate_paramsaInvalidRequestFatalErroruUnable to parse query stringTadescriptionarequestuDuplicate %s parameter.aclient_idaMissingClientIdErrorTarequestavalidate_client_idaInvalidClientIdErrora_handle_redirectsa_run_custom_validatorsacustom_validatorsaall_preaMissingResponseTypeErroraissubsetaresponse_typesaUnsupportedResponseTypeErroruValidating use of response_type token for client %r (%r).aclientavalidate_response_typeuClient %s is not authorized to use response_type %s.aUnauthorizedClientErroravalidate_scopesaupdateaall_postascopesuCheck the token request for normal and fatal errors.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request

        This method is very similar to validate_authorization_request in
        the AuthorizationCodeGrant but differ in a few subtle areas.

        A normal error could be a missing response_type parameter or the client
        attempting to access scope it is not allowed to ask authorization for.
        Normal errors can safely be included in the redirection URI and
        sent back to the client.

        Fatal errors occur when the client_id or redirect_uri is invalid or
        missing. These must be caught by the provider and handled, how this
        is done is outside of the scope of OAuthLib but showing an error
        page describing the issue is a good idea.
        acopyarequest_infou
oauthlib.oauth2.rfc6749.grant_types
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a__doc__a__file__a__spec__aoriginahas_locationa__cached__alogginglaoauthlibTacommonuTaerrorslabaseTaGrantTypeBaselaGrantTypeBaseagetLoggerTuoauthlib.oauth2.rfc6749.grant_types.implicita__prepare__aImplicitGranta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.grant_types.implicita__module__u`Implicit Grant`_

    The implicit grant type is used to obtain access tokens (it does not
    support the issuance of refresh tokens) and is optimized for public
    clients known to operate a particular redirection URI.  These clients
    are typically implemented in a browser using a scripting language
    such as JavaScript.

    Unlike the authorization code grant type, in which the client makes
    separate requests for authorization and for an access token, the
    client receives the access token as the result of the authorization
    request.

    The implicit grant type does not include client authentication, and
    relies on the presence of the resource owner and the registration of
    the redirection URI.  Because the access token is encoded into the
    redirection URI, it may be exposed to the resource owner and other
    applications residing on the same device::

        +----------+
        | Resource |
        |  Owner   |
        |          |
        +----------+
             ^
             |
            (B)
        +----|-----+          Client Identifier     +---------------+
        |         -+----(A)-- & Redirection URI --->|               |
        |  User-   |                                | Authorization |
        |  Agent  -|----(B)-- User authenticates -->|     Server    |
        |          |                                |               |
        |          |<---(C)--- Redirection URI ----<|               |
        |          |          with Access Token     +---------------+
        |          |            in Fragment
        |          |                                +---------------+
        |          |----(D)--- Redirection URI ---->|   Web-Hosted  |
        |          |          without Fragment      |     Client    |
        |          |                                |    Resource   |
        |     (F)  |<---(E)------- Script ---------<|               |
        |          |                                +---------------+
        +-|--------+
          |    |
         (A)  (G) Access Token
          |    |
          ^    v
        +---------+
        |         |
        |  Client |
        |         |
        +---------+

   Note: The lines illustrating steps (A) and (B) are broken into two
   parts as they pass through the user-agent.

   Figure 4: Implicit Grant Flow

   The flow illustrated in Figure 4 includes the following steps:

   (A)  The client initiates the flow by directing the resource owner's
        user-agent to the authorization endpoint.  The client includes
        its client identifier, requested scope, local state, and a
        redirection URI to which the authorization server will send the
        user-agent back once access is granted (or denied).

   (B)  The authorization server authenticates the resource owner (via
        the user-agent) and establishes whether the resource owner
        grants or denies the client's access request.

   (C)  Assuming the resource owner grants access, the authorization
        server redirects the user-agent back to the client using the
        redirection URI provided earlier.  The redirection URI includes
        the access token in the URI fragment.

   (D)  The user-agent follows the redirection instructions by making a
        request to the web-hosted client resource (which does not
        include the fragment per [RFC2616]).  The user-agent retains the
        fragment information locally.

   (E)  The web-hosted client resource returns a web page (typically an
        HTML document with an embedded script) capable of accessing the
        full redirection URI including the fragment retained by the
        user-agent, and extracting the access token (and other
        parameters) contained in the fragment.

   (F)  The user-agent executes the script provided by the web-hosted
        client resource locally, which extracts the access token.

   (G)  The user-agent passes the access token to the client.

    See `Section 10.3`_ and `Section 10.16`_ for important security considerations
    when using the implicit grant.

    .. _`Implicit Grant`: https://tools.ietf.org/html/rfc6749#section-4.2
    .. _`Section 10.3`: https://tools.ietf.org/html/rfc6749#section-10.3
    .. _`Section 10.16`: https://tools.ietf.org/html/rfc6749#section-10.16
    a__qualname__agrant_allows_refresh_tokenacreate_authorization_responseuImplicitGrant.create_authorization_responseuImplicitGrant.create_token_responseavalidate_authorization_requestuImplicitGrant.validate_authorization_requestuImplicitGrant.validate_token_requestTnuImplicitGrant._run_custom_validatorsa__orig_bases__uoauthlib\oauth2\rfc6749\grant_types\implicit.pyu<module oauthlib.oauth2.rfc6749.grant_types.implicit>Ta__class__Taselfarequestavalidationsarequest_infoavalidatoraresultTaselfarequestatoken_handlerTaselfarequestatoken_handlerweatokenamodifierTaselfarequestTaselfarequestaparamaduplicate_paramsarequest_info.oauthlib.oauth2.rfc6749.grant_types.refresh_token
ia__class__a__init__aissue_new_refresh_tokensa_get_default_headersalogadebuguValidating refresh token request, %r.avalidate_token_requestaerrorsaOAuth2ErroruClient error in token request, %s.aupdateaheadersajsonastatus_codeacreate_tokenTarefresh_tokena_token_modifiersatokenatoken_handlerarequestarequest_validatorasave_tokenuIssuing new token to client id %r (%r), %r.aclient_idaclienta_create_cors_headersadumpsluCreate a new access token from a refresh_token.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param token_handler: A token handler instance, for example of type
                              oauthlib.oauth2.BearerToken.

        If valid and authorized, the authorization server issues an access
        token as described in `Section 5.1`_. If the request failed
        verification or is invalid, the authorization server returns an error
        response as described in `Section 5.2`_.

        The authorization server MAY issue a new refresh token, in which case
        the client MUST discard the old refresh token and replace it with the
        new refresh token. The authorization server MAY revoke the old
        refresh token after issuing a new refresh token to the client. If a
        new refresh token is issued, the refresh token scope MUST be
        identical to that of the refresh token included by the client in the
        request.

        .. _`Section 5.1`: https://tools.ietf.org/html/rfc6749#section-5.1
        .. _`Section 5.2`: https://tools.ietf.org/html/rfc6749#section-5.2
        agrant_typearefresh_tokenaUnsupportedGrantTypeErrorTarequestacustom_validatorsapre_tokenaInvalidRequestErroruMissing refresh token parameter.Tadescriptionarequestaclient_authentication_requireduAuthenticating client, %r.aauthenticate_clientuInvalid client (%r), denying access.aInvalidClientErroraauthenticate_client_iduClient authentication failed, %r.avalidate_grant_typeuValidating refresh token %s for client %r.avalidate_refresh_tokenuInvalid refresh token, %s, for client %r.aInvalidGrantErrorautilsascope_to_listaget_original_scopesascopeascopesais_within_original_scopeuRefresh token %s lack requested scopes, %r.aInvalidScopeErrorapost_tokenu
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        aoriginal_scopesu<genexpr>uRefreshTokenGrant.validate_token_request.<locals>.<genexpr>u
oauthlib.oauth2.rfc6749.grant_types
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a__doc__a__file__a__spec__aoriginahas_locationa__cached__lalogginguTaerrorsautilslabaseTaGrantTypeBaselaGrantTypeBaseagetLoggerTuoauthlib.oauth2.rfc6749.grant_types.refresh_tokena__prepare__aRefreshTokenGranta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.grant_types.refresh_tokena__module__u`Refresh token grant`_

    .. _`Refresh token grant`: https://tools.ietf.org/html/rfc6749#section-6
    a__qualname__TntuRefreshTokenGrant.__init__acreate_token_responseuRefreshTokenGrant.create_token_responseuRefreshTokenGrant.validate_token_requesta__orig_bases__uoauthlib\oauth2\rfc6749\grant_types\refresh_token.pyTa.0wsaoriginal_scopesu<module oauthlib.oauth2.rfc6749.grant_types.refresh_token>Ta__class__Taselfarequest_validatoraissue_new_refresh_tokensakwargsa__class__Taselfarequestatoken_handleraheadersweatokenamodifierTaselfarequestavalidatoraoriginal_scopes.oauthlib.oauth2.rfc6749.grant_types.resource_owner_password_credentials]a_get_default_headersarequest_validatoraclient_authentication_requiredalogadebuguAuthenticating client, %r.aauthenticate_clientuClient authentication failed, %r.aerrorsaInvalidClientErrorTarequestaauthenticate_client_idaclient_iduValidating access token request, %r.avalidate_token_requestaOAuth2ErroruClient error in token request, %s.aupdateaheadersajsonastatus_codeacreate_tokenarefresh_tokena_token_modifiersatokenasave_tokenuIssuing token %r to client id %r (%r) and username %s.aclientausernameadumpsluReturn token or error in json format.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param token_handler: A token handler instance, for example of type
                              oauthlib.oauth2.BearerToken.

        If the access token request is valid and authorized, the
        authorization server issues an access token and optional refresh
        token as described in `Section 5.1`_.  If the request failed client
        authentication or is invalid, the authorization server returns an
        error response as described in `Section 5.2`_.

        .. _`Section 5.1`: https://tools.ietf.org/html/rfc6749#section-5.1
        .. _`Section 5.2`: https://tools.ietf.org/html/rfc6749#section-5.2
        acustom_validatorsapre_tokenarequestTagrant_typeausernameapasswordaInvalidRequestErroruRequest is missing %s parameter.Tagrant_typeausernameapasswordascopeaduplicate_paramsuDuplicate %s parameter.Tadescriptionarequestagrant_typeapasswordaUnsupportedGrantTypeErroruValidating username %s.avalidate_useraInvalidGrantErrorTuInvalid credentials given.uValidate user must set the request.client.client_id attribute in authenticate_client.uAuthorizing access to user %r.auseravalidate_grant_typeavalidate_scopesapost_tokenu
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request

        The client makes a request to the token endpoint by adding the
        following parameters using the "application/x-www-form-urlencoded"
        format per Appendix B with a character encoding of UTF-8 in the HTTP
        request entity-body:

        grant_type
                REQUIRED.  Value MUST be set to "password".

        username
                REQUIRED.  The resource owner username.

        password
                REQUIRED.  The resource owner password.

        scope
                OPTIONAL.  The scope of the access request as described by
                `Section 3.3`_.

        If the client type is confidential or the client was issued client
        credentials (or assigned other authentication requirements), the
        client MUST authenticate with the authorization server as described
        in `Section 3.2.1`_.

        The authorization server MUST:

        o  require client authentication for confidential clients or for any
            client that was issued client credentials (or with other
            authentication requirements),

        o  authenticate the client if client authentication is included, and

        o  validate the resource owner password credentials using its
            existing password validation algorithm.

        Since this access token request utilizes the resource owner's
        password, the authorization server MUST protect the endpoint against
        brute force attacks (e.g., using rate-limitation or generating
        alerts).

        .. _`Section 3.3`: https://tools.ietf.org/html/rfc6749#section-3.3
        .. _`Section 3.2.1`: https://tools.ietf.org/html/rfc6749#section-3.2.1
        u
oauthlib.oauth2.rfc6749.grant_types
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a__doc__a__file__a__spec__aoriginahas_locationa__cached__lalogginguTaerrorslabaseTaGrantTypeBaselaGrantTypeBaseagetLoggerTuoauthlib.oauth2.rfc6749.grant_types.resource_owner_password_credentialsa__prepare__aResourceOwnerPasswordCredentialsGranta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.grant_types.resource_owner_password_credentialsa__module__u`Resource Owner Password Credentials Grant`_

    The resource owner password credentials grant type is suitable in
    cases where the resource owner has a trust relationship with the
    client, such as the device operating system or a highly privileged
    application.  The authorization server should take special care when
    enabling this grant type and only allow it when other flows are not
    viable.

    This grant type is suitable for clients capable of obtaining the
    resource owner's credentials (username and password, typically using
    an interactive form).  It is also used to migrate existing clients
    using direct authentication schemes such as HTTP Basic or Digest
    authentication to OAuth by converting the stored credentials to an
    access token::

            +----------+
            | Resource |
            |  Owner   |
            |          |
            +----------+
                 v
                 |    Resource Owner
                (A) Password Credentials
                 |
                 v
            +---------+                                  +---------------+
            |         |>--(B)---- Resource Owner ------->|               |
            |         |         Password Credentials     | Authorization |
            | Client  |                                  |     Server    |
            |         |<--(C)---- Access Token ---------<|               |
            |         |    (w/ Optional Refresh Token)   |               |
            +---------+                                  +---------------+

    Figure 5: Resource Owner Password Credentials Flow

    The flow illustrated in Figure 5 includes the following steps:

    (A)  The resource owner provides the client with its username and
            password.

    (B)  The client requests an access token from the authorization
            server's token endpoint by including the credentials received
            from the resource owner.  When making the request, the client
            authenticates with the authorization server.

    (C)  The authorization server authenticates the client and validates
            the resource owner credentials, and if valid, issues an access
            token.

    .. _`Resource Owner Password Credentials Grant`: https://tools.ietf.org/html/rfc6749#section-4.3
    a__qualname__acreate_token_responseuResourceOwnerPasswordCredentialsGrant.create_token_responseuResourceOwnerPasswordCredentialsGrant.validate_token_requesta__orig_bases__uoauthlib\oauth2\rfc6749\grant_types\resource_owner_password_credentials.pyu<module oauthlib.oauth2.rfc6749.grant_types.resource_owner_password_credentials>Ta__class__Taselfarequestatoken_handleraheadersweatokenamodifierTaselfarequestavalidatoraparam.oauthlib.oauth2.rfc6749.parameters9wais_secure_transportaInsecureTransportErroraresponse_typeaclient_idaredirect_uriaparamsascopealist_to_scopeaappendastateacode_challengeacode_challenge_methodaadd_params_to_uriuPrepare the authorization grant request URI.

    The client constructs the request URI by adding the following
    parameters to the query component of the authorization endpoint URI
    using the ``application/x-www-form-urlencoded`` format as defined by
    [`W3C.REC-html401-19991224`_]:

    :param uri:
    :param client_id: The client identifier as described in `Section 2.2`_.
    :param response_type: To indicate which OAuth 2 grant/flow is required,
                          "code" and "token".
    :param redirect_uri: The client provided URI to redirect back to after
                         authorization as described in `Section 3.1.2`_.
    :param scope: The scope of the access request as described by
                  `Section 3.3`_.
    :param state: An opaque value used by the client to maintain
                  state between the request and callback.  The authorization
                  server includes this value when redirecting the user-agent
                  back to the client.  The parameter SHOULD be used for
                  preventing cross-site request forgery as described in
                  `Section 10.12`_.
    :param code_challenge: PKCE parameter. A challenge derived from the
                           code_verifier that is sent in the authorization
                           request, to be verified against later.
    :param code_challenge_method: PKCE parameter. A method that was used to derive the
                                  code_challenge. Defaults to "plain" if not present in the request.
    :param kwargs: Extra arguments to embed in the grant/authorization URL.

    An example of an authorization code grant authorization URL:

    .. code-block:: http

        GET /authorize?response_type=code&client_id=s6BhdRkqt3&state=xyz
            &code_challenge=kjasBS523KdkAILD2k78NdcJSk2k3KHG6&code_challenge_method=S256
            &redirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb HTTP/1.1
        Host: server.example.com

    .. _`W3C.REC-html401-19991224`: https://tools.ietf.org/html/rfc6749#ref-W3C.REC-html401-19991224
    .. _`Section 2.2`: https://tools.ietf.org/html/rfc6749#section-2.2
    .. _`Section 3.1.2`: https://tools.ietf.org/html/rfc6749#section-3.1.2
    .. _`Section 3.3`: https://tools.ietf.org/html/rfc6749#section-3.3
    .. _`section 10.12`: https://tools.ietf.org/html/rfc6749#section-10.12
    agrant_typeakwargsapopTaclient_idnacode_verifierTaclient_secretnaclient_secretaadd_params_to_qsuPrepare the access token request.

    The client makes a request to the token endpoint by adding the
    following parameters using the ``application/x-www-form-urlencoded``
    format in the HTTP request entity-body:

    :param grant_type: To indicate grant type being used, i.e. "password",
                       "authorization_code" or "client_credentials".

    :param body: Existing request body (URL encoded string) to embed parameters
                 into. This may contain extra parameters. Default ''.

    :param include_client_id: `True` (default) to send the `client_id` in the
                              body of the upstream request. This is required
                              if the client is not authenticating with the
                              authorization server as described in
                              `Section 3.2.1`_.
    :type include_client_id: Boolean

    :param client_id: Unicode client identifier. Will only appear if
                      `include_client_id` is True. *

    :param client_secret: Unicode client secret. Will only appear if set to a
                          value that is not `None`. Invoking this function with
                          an empty string will send an empty `client_secret`
                          value to the server. *

    :param code: If using authorization_code grant, pass the previously
                 obtained authorization code as the ``code`` argument. *

    :param redirect_uri: If the "redirect_uri" parameter was included in the
                         authorization request as described in
                         `Section 4.1.1`_, and their values MUST be identical. *

    :param code_verifier: PKCE parameter. A cryptographically random string that is used to correlate the
                          authorization request to the token request.

    :param kwargs: Extra arguments to embed in the request body.

    Parameters marked with a `*` above are not explicit arguments in the
    function signature, but are specially documented arguments for items
    appearing in the generic `**kwargs` keyworded input.

    An example of an authorization code token request body:

    .. code-block:: http

        grant_type=authorization_code&code=SplxlOBeZQQYbYS6WxSbIA
        &redirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb

    .. _`Section 4.1.1`: https://tools.ietf.org/html/rfc6749#section-4.1.1
    atokenatoken_type_hintDuContent-Typeuapplication/x-www-form-urlencodedacallbackuPrepare a token revocation request.

    The client constructs the request by including the following parameters
    using the ``application/x-www-form-urlencoded`` format in the HTTP request
    entity-body:

    :param token: REQUIRED.  The token that the client wants to get revoked.

    :param token_type_hint: OPTIONAL.  A hint about the type of the token
                            submitted for revocation. Clients MAY pass this
                            parameter in order to help the authorization server
                            to optimize the token lookup.  If the server is
                            unable to locate the token using the given hint, it
                            MUST extend its search across all of its supported
                            token types.  An authorization server MAY ignore
                            this parameter, particularly if it is able to detect
                            the token type automatically.

    This specification defines two values for `token_type_hint`:

        * access_token: An access token as defined in [RFC6749],
             `Section 1.4`_

        * refresh_token: A refresh token as defined in [RFC6749],
             `Section 1.5`_

        Specific implementations, profiles, and extensions of this
        specification MAY define other values for this parameter using the
        registry defined in `Section 4.1.2`_.

    .. _`Section 1.4`: https://tools.ietf.org/html/rfc6749#section-1.4
    .. _`Section 1.5`: https://tools.ietf.org/html/rfc6749#section-1.5
    .. _`Section 4.1.2`: https://tools.ietf.org/html/rfc7009#section-4.1.2

    aurlparseaqueryaparse_qslaMismatchingStateErroraerroraraise_from_erroracodeaMissingCodeErrorTuMissing code parameter in response.uParse authorization grant response URI into a dict.

    If the resource owner grants the access request, the authorization
    server issues an authorization code and delivers it to the client by
    adding the following parameters to the query component of the
    redirection URI using the ``application/x-www-form-urlencoded`` format:

    **code**
            REQUIRED.  The authorization code generated by the
            authorization server.  The authorization code MUST expire
            shortly after it is issued to mitigate the risk of leaks.  A
            maximum authorization code lifetime of 10 minutes is
            RECOMMENDED.  The client MUST NOT use the authorization code
            more than once.  If an authorization code is used more than
            once, the authorization server MUST deny the request and SHOULD
            revoke (when possible) all tokens previously issued based on
            that authorization code.  The authorization code is bound to
            the client identifier and redirection URI.

    **state**
            REQUIRED if the "state" parameter was present in the client
            authorization request.  The exact value received from the
            client.

    :param uri: The full redirect URL back to the client.
    :param state: The state parameter from the authorization request.

    For example, the authorization server redirects the user-agent by
    sending the following HTTP response:

    .. code-block:: http

        HTTP/1.1 302 Found
        Location: https://client.example.com/cb?code=SplxlOBeZQQYbYS6WxSbIA
                &state=xyz

    afragmentDakeep_blank_valuestTaexpires_inascope_to_listaexpires_inatimeaexpires_atagetTastatenuMismatching or missing state in params.aOAuth2TokenTaold_scopeavalidate_token_parametersuParse the implicit token response URI into a dict.

    If the resource owner grants the access request, the authorization
    server issues an access token and delivers it to the client by adding
    the following parameters to the fragment component of the redirection
    URI using the ``application/x-www-form-urlencoded`` format:

    **access_token**
            REQUIRED.  The access token issued by the authorization server.

    **token_type**
            REQUIRED.  The type of the token issued as described in
            Section 7.1.  Value is case insensitive.

    **expires_in**
            RECOMMENDED.  The lifetime in seconds of the access token.  For
            example, the value "3600" denotes that the access token will
            expire in one hour from the time the response was generated.
            If omitted, the authorization server SHOULD provide the
            expiration time via other means or document the default value.

    **scope**
            OPTIONAL, if identical to the scope requested by the client,
            otherwise REQUIRED.  The scope of the access token as described
            by Section 3.3.

    **state**
            REQUIRED if the "state" parameter was present in the client
            authorization request.  The exact value received from the
            client.

    :param uri:
    :param state:
    :param scope:

    Similar to the authorization code response, but with a full token provided
    in the URL fragment:

    .. code-block:: http

        HTTP/1.1 302 Found
        Location: http://example.com/cb#access_token=2YotnFZFEjr1zCsicMWpAA
                &state=xyz&token_type=example&expires_in=3600
    ajsonaloadsuParse the JSON token response body into a dict.

    The authorization server issues an access token and optional refresh
    token, and constructs the response by adding the following parameters
    to the entity body of the HTTP response with a 200 (OK) status code:

    access_token
            REQUIRED.  The access token issued by the authorization server.
    token_type
            REQUIRED.  The type of the token issued as described in
            `Section 7.1`_.  Value is case insensitive.
    expires_in
            RECOMMENDED.  The lifetime in seconds of the access token.  For
            example, the value "3600" denotes that the access token will
            expire in one hour from the time the response was generated.
            If omitted, the authorization server SHOULD provide the
            expiration time via other means or document the default value.
    refresh_token
            OPTIONAL.  The refresh token which can be used to obtain new
            access tokens using the same authorization grant as described
            in `Section 6`_.
    scope
            OPTIONAL, if identical to the scope requested by the client,
            otherwise REQUIRED.  The scope of the access token as described
            by `Section 3.3`_.

    The parameters are included in the entity body of the HTTP response
    using the "application/json" media type as defined by [`RFC4627`_].  The
    parameters are serialized into a JSON structure by adding each
    parameter at the highest structure level.  Parameter names and string
    values are included as JSON strings.  Numerical values are included
    as JSON numbers.  The order of parameters does not matter and can
    vary.

    :param body: The full json encoded response body.
    :param scope: The scope requested during authorization.

    For example:

    .. code-block:: http

        HTTP/1.1 200 OK
        Content-Type: application/json
        Cache-Control: no-store
        Pragma: no-cache

        {
            "access_token":"2YotnFZFEjr1zCsicMWpAA",
            "token_type":"example",
            "expires_in":3600,
            "refresh_token":"tGzv3JOkF0XG5Qx2TlKWIA",
            "example_parameter":"example_value"
        }

    .. _`Section 7.1`: https://tools.ietf.org/html/rfc6749#section-7.1
    .. _`Section 6`: https://tools.ietf.org/html/rfc6749#section-6
    .. _`Section 3.3`: https://tools.ietf.org/html/rfc6749#section-3.3
    .. _`RFC4627`: https://tools.ietf.org/html/rfc4627
    Taerroraaccess_tokenaMissingTokenErrorTuMissing access token parameter.Tadescriptionatoken_typeaosaenvironTaOAUTHLIB_STRICT_TOKEN_TYPEaMissingTokenTypeErrorascope_changeduScope has changed from "{old}" to "{new}".aold_scopeTaoldanewasendaold_scopesascopesTamessageaoldanewTaOAUTHLIB_RELAX_TOKEN_SCOPEnaWarninganew_scopeuEnsures token presence, token type, expiration and scope in params.u
oauthlib.oauth2.rfc6749.parameters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This module contains methods related to `Section 4`_ of the OAuth 2 RFC.

.. _`Section 4`: https://tools.ietf.org/html/rfc6749#section-4
a__doc__a__file__a__spec__aoriginahas_locationa__cached__luurllib.parseaparseuoauthlib.commonTaadd_params_to_qsaadd_params_to_uriuoauthlib.signalsTascope_changedaerrorsTaInsecureTransportErroraMismatchingStateErroraMissingCodeErroraMissingTokenErroraMissingTokenTypeErroraraise_from_errorlatokensTaOAuth2TokenautilsTais_secure_transportalist_to_scopeascope_to_listTnnnnaplainaprepare_grant_uriTutnaprepare_token_requestTaaccess_tokennuaprepare_token_revocation_requestTnaparse_authorization_code_responseTnnaparse_implicit_responseaparse_token_responseuoauthlib\oauth2\rfc6749\parameters.pyu<module oauthlib.oauth2.rfc6749.parameters>TauriastateaqueryaparamsTauriastateascopeafragmentaparamsakeyTabodyascopeaparamsakeyTauriaclient_idaresponse_typearedirect_uriascopeastateacode_challengeacode_challenge_methodakwargsaparamswkTagrant_typeabodyainclude_client_idacode_verifierakwargsaparamsaclient_idaclient_secretwkTaurlatokenatoken_type_hintacallbackabodyakwargsaparamswkaheadersTaparamsamessagewwu.oauthlib.oauth2.rfc6749.request_validator6k}uSubclasses must implement this method.uAuthenticate client through means outside the OAuth 2 spec.

        Means of authentication is negotiated beforehand and may for example
        be `HTTP Basic Authentication Scheme`_ which utilizes the Authorization
        header.

        Headers may be accesses through request.headers and parameters found in
        both body and query can be obtained by direct attribute access, i.e.
        request.client_id for client_id in the URL query.

        The authentication process is required to contain the identification of
        the client (i.e. search the database based on the client_id). In case the
        client doesn't exist based on the received client_id, this method has to
        return False and the HTTP response created by the library will contain
        'invalid_client' message.

        After the client identification succeeds, this method needs to set the
        client on the request, i.e. request.client = client. A client object's
        class must contain the 'client_id' attribute and the 'client_id' must have
        a value.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Authorization Code Grant
            - Resource Owner Password Credentials Grant (may be disabled)
            - Client Credentials Grant
            - Refresh Token Grant

        .. _`HTTP Basic Authentication Scheme`: https://tools.ietf.org/html/rfc1945#section-11.1
        uEnsure client_id belong to a non-confidential client.

        A non-confidential client is one that is not required to authenticate
        through other means, such as using HTTP Basic.

        Note, while not strictly necessary it can often be very convenient
        to set request.client to the client object associated with the
        given client_id.

        :param client_id: Unicode client identifier.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Authorization Code Grant
        uEnsure that the authorization process represented by this authorization
        code began with this 'redirect_uri'.

        If the client specifies a redirect_uri when obtaining code then that
        redirect URI must be bound to the code and verified equal in this
        method, according to RFC 6749 section 4.1.3.  Do not compare against
        the client's allowed redirect URIs, but against the URI used when the
        code was saved.

        :param client_id: Unicode client identifier.
        :param code: Unicode authorization_code.
        :param redirect_uri: Unicode absolute URI.
        :param client: Client object set by you, see ``.authenticate_client``.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Authorization Code Grant (during token request)
        uGet the default redirect URI for the client.

        :param client_id: Unicode client identifier.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: The default redirect URI for the client

        Method is used by:
            - Authorization Code Grant
            - Implicit Grant
        uGet the default scopes for the client.

        :param client_id: Unicode client identifier.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: List of default scopes

        Method is used by all core grant types:
            - Authorization Code Grant
            - Implicit Grant
            - Resource Owner Password Credentials Grant
            - Client Credentials grant
        uGet the list of scopes associated with the refresh token.

        :param refresh_token: Unicode refresh token.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: List of scopes.

        Method is used by:
            - Refresh token grant
        uIntrospect an access or refresh token.

        Called once the introspect request is validated. This method should
        verify the *token* and either return a dictionary with the list of
        claims associated, or `None` in case the token is unknown.

        Below the list of registered claims you should be interested in:

        - scope : space-separated list of scopes
        - client_id : client identifier
        - username : human-readable identifier for the resource owner
        - token_type : type of the token
        - exp : integer timestamp indicating when this token will expire
        - iat : integer timestamp indicating when this token was issued
        - nbf : integer timestamp indicating when it can be "not-before" used
        - sub : subject of the token - identifier of the resource owner
        - aud : list of string identifiers representing the intended audience
        - iss : string representing issuer of this token
        - jti : string identifier for the token

        Note that most of them are coming directly from JWT RFC. More details
        can be found in `Introspect Claims`_ or `JWT Claims`_.

        The implementation can use *token_type_hint* to improve lookup
        efficiency, but must fallback to other types to be compliant with RFC.

        The dict of claims is added to request.token after this method.

        :param token: The token string.
        :param token_type_hint: access_token or refresh_token.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request

        Method is used by:
            - Introspect Endpoint (all grants are compatible)

        .. _`Introspect Claims`: https://tools.ietf.org/html/rfc7662#section-2.2
        .. _`JWT Claims`: https://tools.ietf.org/html/rfc7519#section-4
        uInvalidate an authorization code after use.

        :param client_id: Unicode client identifier.
        :param code: The authorization code grant (request.code).
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request

        Method is used by:
            - Authorization Code Grant
        uRevoke an access or refresh token.

        :param token: The token string.
        :param token_type_hint: access_token or refresh_token.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request

        Method is used by:
            - Revocation Endpoint
        uPersist the authorization_code.

        The code should at minimum be stored with:
            - the client_id (``client_id``)
            - the redirect URI used (``request.redirect_uri``)
            - a resource owner / user (``request.user``)
            - the authorized scopes (``request.scopes``)

        To support PKCE, you MUST associate the code with:
            - Code Challenge (``request.code_challenge``) and
            - Code Challenge Method (``request.code_challenge_method``)

        To support OIDC, you MUST associate the code with:
            - nonce, if present (``code["nonce"]``)

        The ``code`` argument is actually a dictionary, containing at least a
        ``code`` key with the actual authorization code:

            ``{'code': 'sdf345jsdf0934f'}``

        It may also have a ``claims`` parameter which, when present, will be a dict
        deserialized from JSON as described at
        http://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter
        This value should be saved in this method and used again in ``.validate_code``.

        :param client_id: Unicode client identifier.
        :param code: A dict of the authorization code grant and, optionally, state.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request

        Method is used by:
            - Authorization Code Grant
        asave_bearer_tokenuPersist the token with a token type specific method.

        Currently, only save_bearer_token is supported.

        :param token: A (Bearer) token dict.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        uPersist the Bearer token.

        The Bearer token should at minimum be associated with:
            - a client and it's client_id, if available
            - a resource owner / user (request.user)
            - authorized scopes (request.scopes)
            - an expiration time
            - a refresh token, if issued
            - a claims document, if present in request.claims

        The Bearer token dict may hold a number of items::

            {
                'token_type': 'Bearer',
                'access_token': 'askfjh234as9sd8',
                'expires_in': 3600,
                'scope': 'string of space separated authorized scopes',
                'refresh_token': '23sdf876234',  # if issued
                'state': 'given_by_client',  # if supplied by client (implicit ONLY)
            }

        Note that while "scope" is a string-separated list of authorized scopes,
        the original list is still available in request.scopes.

        The token dict is passed as a reference so any changes made to the dictionary
        will go back to the user.  If additional information must return to the client
        user, and it is only possible to get this information after writing the token
        to storage, it should be added to the token dictionary.  If the token
        dictionary must be modified but the changes should not go back to the user,
        a copy of the dictionary must be made before making the changes.

        Also note that if an Authorization Code grant request included a valid claims
        parameter (for OpenID Connect) then the request.claims property will contain
        the claims dict, which should be saved for later use when generating the
        id_token and/or UserInfo response content.

        :param token: A Bearer token dict.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: The default redirect URI for the client

        Method is used by all core grant types issuing Bearer tokens:
            - Authorization Code Grant
            - Implicit Grant
            - Resource Owner Password Credentials Grant (might not associate a client)
            - Client Credentials grant
        uEnsure the Bearer token is valid and authorized access to scopes.

        :param token: A string of random characters.
        :param scopes: A list of scopes associated with the protected resource.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request

        A key to OAuth 2 security and restricting impact of leaked tokens is
        the short expiration time of tokens, *always ensure the token has not
        expired!*.

        Two different approaches to scope validation:

            1) all(scopes). The token must be authorized access to all scopes
                            associated with the resource. For example, the
                            token has access to ``read-only`` and ``images``,
                            thus the client can view images but not upload new.
                            Allows for fine grained access control through
                            combining various scopes.

            2) any(scopes). The token must be authorized access to one of the
                            scopes associated with the resource. For example,
                            token has access to ``read-only-images``.
                            Allows for fine grained, although arguably less
                            convenient, access control.

        A powerful way to use scopes would mimic UNIX ACLs and see a scope
        as a group with certain privileges. For a restful API these might
        map to HTTP verbs instead of read, write and execute.

        Note, the request.user attribute can be set to the resource owner
        associated with this token. Similarly the request.client and
        request.scopes attribute can be set to associated client object
        and authorized scopes. If you then use a decorator such as the
        one provided for django these attributes will be made available
        in all protected views as keyword arguments.

        :param token: Unicode Bearer token
        :param scopes: List of scopes (defined by you)
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is indirectly used by all core Bearer token issuing grant types:
            - Authorization Code Grant
            - Implicit Grant
            - Resource Owner Password Credentials Grant
            - Client Credentials Grant
        uEnsure client_id belong to a valid and active client.

        Note, while not strictly necessary it can often be very convenient
        to set request.client to the client object associated with the
        given client_id.

        :param client_id: Unicode client identifier.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Authorization Code Grant
            - Implicit Grant
        uVerify that the authorization_code is valid and assigned to the given
        client.

        Before returning true, set the following based on the information stored
        with the code in 'save_authorization_code':

            - request.user
            - request.scopes
            - request.claims (if given)

        OBS! The request.user attribute should be set to the resource owner
        associated with this authorization code. Similarly request.scopes
        must also be set.

        The request.claims property, if it was given, should assigned a dict.

        If PKCE is enabled (see 'is_pkce_required' and 'save_authorization_code')
        you MUST set the following based on the information stored:

            - request.code_challenge
            - request.code_challenge_method

        :param client_id: Unicode client identifier.
        :param code: Unicode authorization code.
        :param client: Client object set by you, see ``.authenticate_client``.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Authorization Code Grant
        uEnsure client is authorized to use the grant_type requested.

        :param client_id: Unicode client identifier.
        :param grant_type: Unicode grant type, i.e. authorization_code, password.
        :param client: Client object set by you, see ``.authenticate_client``.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Authorization Code Grant
            - Resource Owner Password Credentials Grant
            - Client Credentials Grant
            - Refresh Token Grant
        uEnsure client is authorized to redirect to the redirect_uri requested.

        All clients should register the absolute URIs of all URIs they intend
        to redirect to. The registration is outside of the scope of oauthlib.

        :param client_id: Unicode client identifier.
        :param redirect_uri: Unicode absolute URI.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Authorization Code Grant
            - Implicit Grant
        uEnsure the Bearer token is valid and authorized access to scopes.

        OBS! The request.user attribute should be set to the resource owner
        associated with this refresh token.

        :param refresh_token: Unicode refresh token.
        :param client: Client object set by you, see ``.authenticate_client``.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Authorization Code Grant (indirectly by issuing refresh tokens)
            - Resource Owner Password Credentials Grant (also indirectly)
            - Refresh Token Grant
        uEnsure client is authorized to use the response_type requested.

        :param client_id: Unicode client identifier.
        :param response_type: Unicode response type, i.e. code, token.
        :param client: Client object set by you, see ``.authenticate_client``.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Authorization Code Grant
            - Implicit Grant
        uEnsure the client is authorized access to requested scopes.

        :param client_id: Unicode client identifier.
        :param scopes: List of scopes (defined by you).
        :param client: Client object set by you, see ``.authenticate_client``.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by all core grant types:
            - Authorization Code Grant
            - Implicit Grant
            - Resource Owner Password Credentials Grant
            - Client Credentials Grant
        uEnsure the username and password is valid.

        OBS! The validation should also set the user attribute of the request
        to a valid resource owner, i.e. request.user = username or similar. If
        not set you will be unable to associate a token with a user in the
        persistence method used (commonly, save_bearer_token).

        :param username: Unicode username.
        :param password: Unicode password.
        :param client: Client object set by you, see ``.authenticate_client``.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Resource Owner Password Credentials Grant
        uIs called during the "token" request processing, when a
        ``code_verifier`` and a ``code_challenge`` has been provided.

        See ``.get_code_challenge``.

        Must return ``plain`` or ``S256``. You can return a custom value if you have
        implemented your own ``AuthorizationCodeGrant`` class.

        :param code: Authorization code.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: code_challenge_method string

        Method is used by:
            - Authorization Code Grant - when PKCE is active

        u
oauthlib.oauth2.rfc6749.request_validator
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a__doc__a__file__a__spec__aoriginahas_locationa__cached__alogginglagetLoggerTuoauthlib.oauth2.rfc6749.request_validatoraloguoauthlib.oauth2.rfc6749.request_validatora__module__aRequestValidatora__qualname__uDetermine if client authentication is required for current request.

        According to the rfc6749, client authentication is required in the following cases:
            - Resource Owner Password Credentials Grant, when Client type is Confidential or when
              Client was issued client credentials or whenever Client provided client
              authentication, see `Section 4.3.2`_.
            - Authorization Code Grant, when Client type is Confidential or when Client was issued
              client credentials or whenever Client provided client authentication,
              see `Section 4.1.3`_.
            - Refresh Token Grant, when Client type is Confidential or when Client was issued
              client credentials or whenever Client provided client authentication, see
              `Section 6`_

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Authorization Code Grant
            - Resource Owner Password Credentials Grant
            - Refresh Token Grant

        .. _`Section 4.3.2`: https://tools.ietf.org/html/rfc6749#section-4.3.2
        .. _`Section 4.1.3`: https://tools.ietf.org/html/rfc6749#section-4.1.3
        .. _`Section 6`: https://tools.ietf.org/html/rfc6749#section-6
        aclient_authentication_requireduRequestValidator.client_authentication_requiredaauthenticate_clientuRequestValidator.authenticate_clientaauthenticate_client_iduRequestValidator.authenticate_client_idaconfirm_redirect_uriuRequestValidator.confirm_redirect_uriaget_default_redirect_uriuRequestValidator.get_default_redirect_uriaget_default_scopesuRequestValidator.get_default_scopesaget_original_scopesuRequestValidator.get_original_scopesuCheck if requested scopes are within a scope of the refresh token.

        When access tokens are refreshed the scope of the new token
        needs to be within the scope of the original token. This is
        ensured by checking that all requested scopes strings are on
        the list returned by the get_original_scopes. If this check
        fails, is_within_original_scope is called. The method can be
        used in situations where returning all valid scopes from the
        get_original_scopes is not practical.

        :param request_scopes: A list of scopes that were requested by client.
        :param refresh_token: Unicode refresh_token.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Refresh token grant
        ais_within_original_scopeuRequestValidator.is_within_original_scopeaintrospect_tokenuRequestValidator.introspect_tokenainvalidate_authorization_codeuRequestValidator.invalidate_authorization_codearevoke_tokenuRequestValidator.revoke_tokenuDetermine whether to rotate the refresh token. Default, yes.

        When access tokens are refreshed the old refresh token can be kept
        or replaced with a new one (rotated). Return True to rotate and
        and False for keeping original.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Refresh Token Grant
        arotate_refresh_tokenuRequestValidator.rotate_refresh_tokenasave_authorization_codeuRequestValidator.save_authorization_codeasave_tokenuRequestValidator.save_tokenuRequestValidator.save_bearer_tokenavalidate_bearer_tokenuRequestValidator.validate_bearer_tokenavalidate_client_iduRequestValidator.validate_client_idavalidate_codeuRequestValidator.validate_codeavalidate_grant_typeuRequestValidator.validate_grant_typeavalidate_redirect_uriuRequestValidator.validate_redirect_uriavalidate_refresh_tokenuRequestValidator.validate_refresh_tokenavalidate_response_typeuRequestValidator.validate_response_typeavalidate_scopesuRequestValidator.validate_scopesavalidate_useruRequestValidator.validate_useruDetermine if current request requires PKCE. Default, False.
        This is called for both "authorization" and "token" requests.

        Override this method by ``return True`` to enable PKCE for everyone.
        You might want to enable it only for public clients.
        Note that PKCE can also be used in addition of a client authentication.

        OAuth 2.0 public clients utilizing the Authorization Code Grant are
        susceptible to the authorization code interception attack.  This
        specification describes the attack as well as a technique to mitigate
        against the threat through the use of Proof Key for Code Exchange
        (PKCE, pronounced "pixy"). See `RFC7636`_.

        :param client_id: Client identifier.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: True or False

        Method is used by:
            - Authorization Code Grant

        .. _`RFC7636`: https://tools.ietf.org/html/rfc7636
        ais_pkce_requireduRequestValidator.is_pkce_requireduIs called for every "token" requests.

        When the server issues the authorization code in the authorization
        response, it MUST associate the ``code_challenge`` and
        ``code_challenge_method`` values with the authorization code so it can
        be verified later.

        Typically, the ``code_challenge`` and ``code_challenge_method`` values
        are stored in encrypted form in the ``code`` itself but could
        alternatively be stored on the server associated with the code.  The
        server MUST NOT include the ``code_challenge`` value in client requests
        in a form that other entities can extract.

        Return the ``code_challenge`` associated to the code.
        If ``None`` is returned, code is considered to not be associated to any
        challenges.

        :param code: Authorization code.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: code_challenge string

        Method is used by:
            - Authorization Code Grant - when PKCE is active

        aget_code_challengeuRequestValidator.get_code_challengeaget_code_challenge_methoduRequestValidator.get_code_challenge_methoduIndicate if the given origin is allowed to access the token endpoint
        via Cross-Origin Resource Sharing (CORS).  CORS is used by browser-based
        clients, such as Single-Page Applications, to perform the Authorization
        Code Grant.

        (Note:  If performing Authorization Code Grant via a public client such
        as a browser, you should use PKCE as well.)

        If this method returns true, the appropriate CORS headers will be added
        to the response.  By default this method always returns False, meaning
        CORS is disabled.

        :param client_id: Unicode client identifier.
        :param redirect_uri: Unicode origin.
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :rtype: bool

        Method is used by:
            - Authorization Code Grant
            - Refresh Token Grant

        ais_origin_alloweduRequestValidator.is_origin_allowedTuoauthlib\oauth2\rfc6749\request_validator.pyu<module oauthlib.oauth2.rfc6749.request_validator>TaselfarequestaargsakwargsTaselfaclient_idarequestaargsakwargsTaselfaclient_idacodearedirect_uriaclientarequestaargsakwargsTaselfacodearequestTaselfarefresh_tokenarequestaargsakwargsTaselfatokenatoken_type_hintarequestaargsakwargsTaselfaclient_idacodearequestaargsakwargsTaselfaclient_idaoriginarequestaargsakwargsTaselfaclient_idarequestTaselfarequest_scopesarefresh_tokenarequestaargsakwargsTaselfarequestTaselfatokenarequestaargsakwargsTaselfatokenascopesarequestTaselfaclient_idacodeaclientarequestaargsakwargsTaselfaclient_idagrant_typeaclientarequestaargsakwargsTaselfaclient_idaredirect_uriarequestaargsakwargsTaselfarefresh_tokenaclientarequestaargsakwargsTaselfaclient_idaresponse_typeaclientarequestaargsakwargsTaselfaclient_idascopesaclientarequestaargsakwargsTaselfausernameapasswordaclientarequestaargsakwargsu.oauthlib.oauth2.rfc6749.tokensIa__class__a__init__a_new_scopeascopeautilsascope_to_lista_old_scopealist_to_scopeaupperahost_from_uriutoo many values to unpack (expected 2)aloweruhmac-sha-1ahashlibasha1uhmac-sha-256asha256uunknown hash algorithmlu{}:{}agenerate_ageacommonagenerate_nonceagenerate_timestampaurlparseutoo many values to unpack (expected 6)w?aencodeTuutf-8ab2a_base64adigest:nlnadecodeuatsabaseaappendw
ahmacanewuutf-8uMAC id="%s"uts="%s"unonce="%s"anonceabodyhashubodyhash="%s"uext="%s"umac="%s"u, aAuthorizationuAdd an `MAC Access Authentication`_ signature to headers.

    Unlike OAuth 1, this HMAC signature does not require inclusion of the
    request payload/body, neither does it use a combination of client_secret
    and token_secret but rather a mac_key provided together with the access
    token.

    Currently two algorithms are supported, "hmac-sha-1" and "hmac-sha-256",
    `extension algorithms`_ are not supported.

    Example MAC Authorization header, linebreaks added for clarity

    Authorization: MAC id="h480djs93hd8",
                       nonce="1336363200:dj83hs9s",
                       mac="bhCQXTVyfj5cmA9uKkPFx1zeOXM="

    .. _`MAC Access Authentication`: https://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-01
    .. _`extension algorithms`: https://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-01#section-7.1

    :param token:
    :param uri: Request URI.
    :param key: MAC given provided by token endpoint.
    :param http_method: HTTP Request method.
    :param nonce:
    :param headers: Request headers as a dictionary.
    :param body:
    :param ext:
    :param hash_algorithm: HMAC algorithm provided by token endpoint.
    :param issue_time: Time when the MAC credentials were issued (datetime).
    :param draft: MAC authentication specification version.
    :return: headers dictionary with the authorization field added.
    aadd_params_to_uriaaccess_tokenuAdd a `Bearer Token`_ to the request URI.
    Not recommended, use only if client can't use authorization header or body.

    http://www.example.com/path?access_token=h480djs93hd8

    .. _`Bearer Token`: https://tools.ietf.org/html/rfc6750

    :param token:
    :param uri:
    uBearer %suAdd a `Bearer Token`_ to the request URI.
    Recommended method of passing bearer tokens.

    Authorization: Bearer h480djs93hd8

    .. _`Bearer Token`: https://tools.ietf.org/html/rfc6750

    :param token:
    :param headers:
    aadd_params_to_qsuAdd a `Bearer Token`_ to the request body.

    access_token=h480djs93hd8

    .. _`Bearer Token`: https://tools.ietf.org/html/rfc6750

    :param token:
    :param body:
    agenerate_tokenu
    :param request: OAuthlib request.
    :type request: oauthlib.common.Request
    :param refresh_token:
    asigned_token_generatorusigned_token_generator.<locals>.signed_token_generatoru
    :param private_pem:
    akwargsaclaimsagenerate_signed_tokenaprivate_pemaheadersagetTaAuthorizationasplitabearerlu
    Helper function to extract a token from the request header.

    :param request: OAuthlib request.
    :type request: oauthlib.common.Request
    :return: Return the token or None if the Authorization header is malformed.
    uSubclasses must implement this method.u
        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        arequest_validatorarandom_token_generatoratoken_generatorarefresh_token_generatorlaexpires_inasave_tokenawarningsawarnu`save_token` has been deprecated, it was not called internally.If you do, call `request_validator.save_token()` instead.aDeprecationWarningacallableatoken_typeaBearerascopesw arefresh_tokenarotate_refresh_tokenatokenaupdateaextra_credentialsaOAuth2Tokenu
        Create a BearerToken, by default without refresh token.

        :param request: OAuthlib request.
        :type request: oauthlib.common.Request
        :param refresh_token:
        aget_token_from_headeravalidate_bearer_tokenTaAuthorizationuTw llu
oauthlib.oauth2.rfc6749.tokens
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This module contains methods for adding two types of access tokens to requests.

- Bearer https://tools.ietf.org/html/rfc6750
- MAC https://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-01
a__doc__a__file__a__spec__aoriginahas_locationa__cached__abinasciiTab2a_base64uurllib.parseTaurlparseaoauthlibTacommonuoauthlib.commonTaadd_params_to_qsaadd_params_to_uriTautilsTOdicta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc6749.tokensa__module__a__qualname__TnuOAuth2Token.__init__apropertyascope_changeduOAuth2Token.scope_changedaold_scopeuOAuth2Token.old_scopeaold_scopesuOAuth2Token.old_scopesuOAuth2Token.scopeuOAuth2Token.scopesamissing_scopesuOAuth2Token.missing_scopesaadditional_scopesuOAuth2Token.additional_scopesa__orig_bases__Tnnnuuhmac-sha-1nlaprepare_mac_headeraprepare_bearer_uriaprepare_bearer_headersTuaprepare_bearer_bodyTFaTokenBaseTa__slots__a__call__uTokenBase.__call__avalidate_requestuTokenBase.validate_requestaestimate_typeuTokenBase.estimate_typeaBearerTokenTarequest_validatoratoken_generatorarefresh_token_generatoraexpires_inTnnnnuBearerToken.__init__acreate_tokenuBearerToken.create_tokenuBearerToken.validate_requestuBearerToken.estimate_typeuoauthlib\oauth2\rfc6749\tokens.pyu<module oauthlib.oauth2.rfc6749.tokens>Ta__class__Taselfarequestarefresh_tokenTaselfaparamsaold_scopea__class__Taselfarequest_validatoratoken_generatoraexpires_inarefresh_token_generatorTaselfTaselfarequestarefresh_tokenakwargsaexpires_inatokenTaselfarequestTarequestatokenasplit_headerTatokenabodyTatokenaheadersTatokenauriTatokenauriakeyahttp_methodanonceaheadersabodyaextahash_algorithmaissue_timeadraftahostaportwhatsaschanetapathaparaqueryafraarequest_uriabodyhashabaseabase_stringasignaheaderTarequestarefresh_tokenTaprivate_pemakwargsasigned_token_generatorTarequestakwargsaprivate_pemTakwargsaprivate_pemTaselfarequestatoken.oauthlib.oauth2.rfc6749.utilsHTOsetOtupleOlistw uInvalid scope (%s), must be string, tuple, set, or list.uConvert a list of scopes to a space separated string.TOtupleOlistOsetastripasplitTw uConvert a space separated string to a list of scopes.aurldecodeaurlparseaqueryascopeascope_to_listaparamsDaHTTPaHTTPSu80u443utoo many values to unpack (expected 6)w:Tw:lutoo many values to unpack (expected 2)aupperuExtract hostname and port from URI.

    Will use default port for HTTP and HTTPS if none is present in the URI.
    uOnly unicode objects are escapable.aquoteaencodeTuutf-8Dasafed~uEscape a string in an OAuth-compatible fashion.

    TODO: verify whether this can in fact be used for OAuth 2

    adatetimeanowamicrosecondsasecondsadayslll@BuGenerate a age parameter for MAC authentication draft 00.aosaenvironagetTaOAUTHLIB_INSECURE_TRANSPORTalowerastartswithTuhttps://uCheck if the uri is over ssl.u
oauthlib.utils
~~~~~~~~~~~~~~

This module contains utility methods used by various parts of the OAuth 2 spec.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__luurllib.parseTaquoteaurlparseuoauthlib.commonTaurldecodealist_to_scopeaparams_from_uriahost_from_uriaescapeagenerate_ageais_secure_transportuoauthlib\oauth2\rfc6749\utils.pyu<module oauthlib.oauth2.rfc6749.utils>TwuTaissue_timeatdaageTauriadefault_portsaschanetlocapathaparaqueryafraaportTauriTascopeTauriaparamsu.oauthlib.oauth2.rfc8628.clientsu
oauthlib.oauth2.rfc8628
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming OAuth 2.0 Device Authorization RFC8628.
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_oauthlibu\not_existinguoauth2\rfc8628\clientsTaNUITKA_PACKAGE_oauthlib_oauth2u\not_existingurfc8628\clientsTaNUITKA_PACKAGE_oauthlib_oauth2_rfc8628u\not_existingaclientsTaNUITKA_PACKAGE_oauthlib_oauth2_rfc8628_clientsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__adeviceTaDeviceClientlaDeviceClientluoauthlib\oauth2\rfc8628\clients\__init__.pyu<module oauthlib.oauth2.rfc8628.clients>u.oauthlib.oauth2.rfc8628.clients.device*?a__class__a__init__aclient_secretais_secure_transportaInsecureTransportErrorascopeaclient_idagrant_typeaparamsalist_to_scopeaappendaadd_params_to_uriainclude_client_idaprepare_token_requestabodyadevice_codeuAdd device_code to request body

        The client makes a request to the token endpoint by adding the
        device_code as a parameter using the
        "application/x-www-form-urlencoded" format to the HTTP request
        body.

        :param body: Existing request body (URL encoded string) to embed parameters
                     into. This may contain extra parameters. Default ''.
        :param scope:   The scope of the access request as described by
                        `Section 3.3`_.

        :param include_client_id: `True` to send the `client_id` in the
                                  body of the upstream request. This is required
                                  if the client is not authenticating with the
                                  authorization server as described in
                                  `Section 3.2.1`_. False otherwise (default).
        :type include_client_id: Boolean

        :param kwargs:  Extra credentials to include in the token request.

        The prepared body will include all provided device_code as well as
        the ``grant_type`` parameter set to
        ``urn:ietf:params:oauth:grant-type:device_code``::

            >>> from oauthlib.oauth2 import DeviceClient
            >>> client = DeviceClient('your_id', 'your_code')
            >>> client.prepare_request_body(scope=['hello', 'world'])
            'grant_type=urn:ietf:params:oauth:grant-type:device_code&scope=hello+world'

        .. _`Section 3.2.1`: https://datatracker.ietf.org/doc/html/rfc6749#section-3.2.1
        .. _`Section 3.3`: https://datatracker.ietf.org/doc/html/rfc6749#section-3.3
        .. _`Section 3.4`: https://datatracker.ietf.org/doc/html/rfc8628#section-3.4
        u
oauthlib.oauth2.rfc8628
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 Device Authorization RFC8628.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uoauthlib.commonTaadd_params_to_uriluoauthlib.oauth2TaBackendApplicationClientaClientaBackendApplicationClientaClientuoauthlib.oauth2.rfc6749.errorsTaInsecureTransportErroruoauthlib.oauth2.rfc6749.parametersTaprepare_token_requestuoauthlib.oauth2.rfc6749.utilsTais_secure_transportalist_to_scopea__prepare__aDeviceClienta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uoauthlib.oauth2.rfc8628.clients.devicea__module__uA public client utilizing the device authorization workflow.

    The client can request an access token using a device code and
    a public client id associated with the device code as defined
    in RFC8628.

    The device authorization grant type can be used to obtain both
    access tokens and refresh tokens and is intended to be used in
    a scenario where the device being authorized does not have a
    user interface that is suitable for performing authentication.
    a__qualname__uurn:ietf:params:oauth:grant-type:device_codeuDeviceClient.__init__Tnaprepare_request_uriuDeviceClient.prepare_request_uriTunFaprepare_request_bodyuDeviceClient.prepare_request_bodya__orig_bases__uoauthlib\oauth2\rfc8628\clients\device.pyu<module oauthlib.oauth2.rfc8628.clients.device>Ta__class__Taselfaclient_idakwargsa__class__Taselfadevice_codeabodyascopeainclude_client_idakwargsTaselfauriascopeakwargsaparamswku.oauthlib.oauth2.rfc8628ku
oauthlib.oauth2.rfc8628
~~~~~~~~~~~~~~~~~~~~~~~

This module is an implementation of various logic needed
for consuming and providing OAuth 2.0 Device Authorization RFC8628.
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_oauthlibu\not_existinguoauth2\rfc8628TaNUITKA_PACKAGE_oauthlib_oauth2u\not_existingarfc8628TaNUITKA_PACKAGE_oauthlib_oauth2_rfc8628u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__alogginglagetLoggerTuoauthlib.oauth2.rfc8628aloguoauthlib\oauth2\rfc8628\__init__.pyu<module oauthlib.oauth2.rfc8628>u.oauthlib.signalsh.a_FakeSignalanamea__doc__usignalling support is unavailable because the blinker library is not installed.u
    Implements signals based on blinker if available, otherwise
    falls silently back to a noop. Shamelessly stolen from flask.signals:
    https://github.com/mitsuhiko/flask/blob/master/flask/signals.py
a__file__a__spec__aoriginahas_locationa__cached__asignals_availableablinkerTaNamespacelaNamespaceuoauthlib.signalsa__module__a__qualname__TnasignaluNamespace.signalTuIf blinker is unavailable, create a fake class with the same
        interface that allows sending of signals but will fail with an
        error on anything else.  Instead of doing anything on send, it
        will just ignore the arguments and do nothing instead.
        a__init__u_FakeSignal.__init__a_failu_FakeSignal._failu<lambda>u_FakeSignal.<lambda>asendaconnectadisconnectahas_receivers_forareceivers_foratemporarily_connected_toaconnected_toa_signalsTuscope-changedascope_changeduoauthlib\signals.pyTwaakwu<module oauthlib.signals>Ta__class__TaselfanameadocTaselfaargsakwargsu.oauthlib.uri_validateZareamatchaURIaVERBOSEaURI_referenceaabsolute_URIu
Regex for URIs

These regex are directly derived from the collected ABNF in RFC3986
(except for DIGIT, ALPHA and HEXDIG, defined by RFC2234).

They should be processed with re.VERBOSE.

Thanks Mark Nottingham for this code - https://gist.github.com/138549
a__doc__a__file__a__spec__aoriginahas_locationa__cached__lu[\x30-\x39]aDIGITu[\x41-\x5A\x61-\x7A]aALPHAu[\x30-\x39A-Fa-f]aHEXDIGu %% %(HEXDIG)s %(HEXDIG)sapct_encodedu(?: %(ALPHA)s | %(DIGIT)s | \- | \. | _ | ~ )aunreservedu(?: : | / | \? | \# | \[ | \] | @ )agen_delimsu(?: ! | \$ | & | ' | \( | \) |
                     \* | \+ | , | ; | = )asub_delimsu(?: %(unreserved)s | %(pct_encoded)s | %(sub_delims)s | : | @ )apcharu(?: %(gen_delims)s | %(sub_delims)s )areservedu%(ALPHA)s (?: %(ALPHA)s | %(DIGIT)s | \+ | \- | \. )*aschemeu(?: %(DIGIT)s |
                    [\x31-\x39] %(DIGIT)s |
                    1 %(DIGIT)s{2} |
                    2 [\x30-\x34] %(DIGIT)s |
                    25 [\x30-\x35]
                )
adec_octetu%(dec_octet)s \. %(dec_octet)s \. %(dec_octet)s \. %(dec_octet)saIPv4addressu([A-Fa-f0-9:]+[:$])[A-Fa-f0-9]{1,4}aIPv6addressuv %(HEXDIG)s+ \. (?: %(unreserved)s | %(sub_delims)s | : )+aIPvFutureu\[ (?: %(IPv6address)s | %(IPvFuture)s ) \]aIP_literalu(?: %(unreserved)s | %(pct_encoded)s | %(sub_delims)s )*areg_nameu(?: %(unreserved)s | %(pct_encoded)s | %(sub_delims)s | : )auserinfou(?: %(IP_literal)s | %(IPv4address)s | %(reg_name)s )ahostu(?: %(DIGIT)s )*aportu(?: %(userinfo)s @)? %(host)s (?: : %(port)s)?aauthorityu%(pchar)s*asegmentu%(pchar)s+asegment_nzu(?: %(unreserved)s | %(pct_encoded)s | %(sub_delims)s | @ )+asegment_nz_ncu(?: / %(segment)s )*apath_abemptyu/ (?: %(segment_nz)s (?: / %(segment)s )* )?apath_absoluteu%(segment_nz_nc)s (?: / %(segment)s )*apath_noschemeu%(segment_nz)s (?: / %(segment)s )*apath_rootlessuapath_emptyu(?: %(path_abempty)s |
               %(path_absolute)s |
               %(path_noscheme)s |
               %(path_rootless)s |
               %(path_empty)s
            )
apathu(?: %(pchar)s | / | \? )*aqueryafragmentu(?: (?: // %(authority)s %(path_abempty)s ) |
                    %(path_absolute)s |
                    %(path_rootless)s |
                    %(path_empty)s
                )
ahier_partu(?: (?: // %(authority)s %(path_abempty)s ) |
                        %(path_absolute)s |
                        %(path_noscheme)s |
                        %(path_empty)s
                    )
arelative_partu%(relative_part)s (?: \? %(query)s)? (?: \# %(fragment)s)?arelative_refu^(?: %(scheme)s : %(hier_part)s (?: \? %(query)s )? (?: \# %(fragment)s )? )$u^(?: %(URI)s | %(relative_ref)s )$u^(?: %(scheme)s : %(hier_part)s (?: \? %(query)s )? )$ais_uriais_uri_referenceais_absolute_uriuoauthlib\uri_validate.pyu<module oauthlib.uri_validate>Tauri.pkg_resources-postLoad.a_fnamodule_patharba__enter__a__exit__areadTnnna__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importaosaregister_loader_typelaEggProvidera__prepare__aNuitkaProvidera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upkg_resources-postLoada__module__a__qualname__a_hasuNuitkaProvider._hasa_isdiruNuitkaProvider._isdira_listdiruNuitkaProvider._listdiraget_resource_streamuNuitkaProvider.get_resource_streama_getuNuitkaProvider._geta__orig_bases__a__nuitka_loader_typeupkg_resources-postLoad.pyu<module pkg_resources-postLoad>Ta__class__TaselfapathastreamTaselfapathTaselfamanageraresource_nameu.psutil._common.acollectionsaOrderedDictainfoapidla_infodictTTapidappidanameu(%s)u, aitemsutoo many values to unpack (expected 2)u%s=%rw amsguTTapidappidanameasecondsamsgupsutil.%s(%s)a__name__aErrora__init__anameuprocess no longer existsaNoSuchProcessappiduPID still exists but it's a zombieasecondsutimeout after %s secondsldZarounduCalculate percentage usage of 'used' against 'total'.afunctoolsawrapsawrapperumemoize.<locals>.wrapperuClear cache.acache_clearumemoize.<locals>.cache_clearuA simple memoize decorator for functions supporting (hashable)
    positional arguments.
    It also provides a cache_clear() function for clearing the cache:

    >>> @memoize
    ... def foo()
    ...     return 1
        ...
    >>> foo()
    1
    >>> foo.cache_clear()
    >>>

    It supports:
     - functions
     - classes (acts as a @singleton)
     - staticmethods
     - classmethods

    It does NOT support:
     - methods
    asortedacacheafunaraise_fromaclearumemoize_when_activated.<locals>.wrapperuActivate cache. Expects a Process instance. Cache will be
        stored as a "_cache" instance attribute.
        acache_activateumemoize_when_activated.<locals>.cache_activateuDeactivate and clear cache.acache_deactivateumemoize_when_activated.<locals>.cache_deactivateuA memoize decorator which is disabled by default. It can be
    activated and deactivated on request.
    For efficiency reasons it can be used only against class methods
    accepting no arguments.

    >>> class Foo:
    ...     @memoize
    ...     def foo()
    ...         print(1)
    ...
    >>> f = Foo()
    >>> # deactivated (default)
    >>> foo()
    1
    >>> foo()
    1
    >>>
    >>> # activated
    >>> foo.cache_activate(self)
    >>> foo()
    1
    >>> foo()
    >>> foo()
    >>>
    a_cachearetaosastataerrnoaEPERMaEACCESaS_ISREGast_modeuSame as os.path.isfile() but does not swallow EACCES / EPERM
    exceptions, see:
    http://mail.python.org/pipermail/python-dev/2012-June/120787.html.
    uSame as os.path.exists() but does not swallow EACCES / EPERM
    exceptions. See:
    http://mail.python.org/pipermail/python-dev/2012-June/120787.html.
    asocketahas_ipv6aAF_INET6aSOCK_STREAMacontextlibaclosinga__enter__a__exit__abindTTu::1lTnnnaerroruReturn True if IPv6 is supported on this platform.aWINDOWSadataafindwaposw=laupperuParse a C environ block of environment variables into a dictionary.aenumaAddressFamilyuConvert a numeric socket family value to an IntEnum member.
    If it's not a known member, return the numeric value itself.
    aSocketKinduConvert a numeric socket type value to an IntEnum member.
    If it's not a known member, return the numeric value itself.
    aAF_INETaaddragetaCONN_NONEasockfam_to_enumasocktype_to_enumapconnasconnuConvert a raw connection tuple to a proper ntuple.aouterudeprecated_method.<locals>.outeruA decorator which can be used to mark a method as deprecated
    'replcement' is the method name which will be called instead.
    u%s() is deprecated and will be removed; use %s() insteadareplacementa__doc__ainnerudeprecated_method.<locals>.outer.<locals>.innerawarningsawarnaDeprecationWarninglTacategoryastacklevelathreadingaLockalockaremindersareminder_keysadefaultdictTOintTOsetakeysaselfuIn case the number of keys changed between calls (e.g. a
        disk disappears) this removes the entry from self.reminders.
        a_add_dicta_remove_dead_remindersanew_dictaaddabitsaappendaremkeyuCache dict and sum numbers which overflow and wrap.
        Return an updated copy of `input_dict`.
        apopuClear the internal cache, optionally only for function 'name'.uReturn internal cache dicts as a tuple of 3 elements.a_wnarunuGiven an `input_dict` and a function `name`, adjust the numbers
    which "wrap" (restart from zero) across different calls by adding
    "old value" to "new value" and return an updated dict.
    arbaFILE_READ_BUFFER_SIZEaPY3aENCODINGaENCODING_ERRSa_CHUNK_SIZEafobjacloseuOn Python 3 opens a file in text mode by using fs encoding and
    a proper en/decoding errors handler.
    On Python 2 this is just an alias for open(name, 'rt').
    a_DEFAULTareadTEOSErrorpuRead entire file content and return it as a string. File is
    opened in text mode. If specified, `fallback` is the value
    returned in case of error, either if the file does not exist or
    it can't be read().
    acataopen_binaryTafallbacka_openuSame as above but opens file in binary mode.TwBwKwMwGwTwPwEwZwY:lnnl
aprefixwnaformatasymbolswiwsasymbolavalueuUsed by various scripts. See: http://goo.gl/zeJZl.

    >>> bytes2human(10000)
    '9.8K'
    >>> bytes2human(100001221)
    '95.4M'
    asysamodulesapsutilaPROCFS_PATHuReturn updated psutil.PROCFS_PATH constant.adecodeTaencodingaerrorsaterm_supports_colorsDagreenaredabrownayellowablueavioletalightblueagreyadarkgreyu32u91u33u93u34u35u36u37u30u29uinvalid color %r; choose between %sw1u[%sm%s[0mw;uReturn an highlighted version of 'string'.aprintTafileaPOSIXahiliteawindllaKernel32aGetStdHandleaSetConsoleTextAttributeDagreenaredabrownayellowlllpluinvalid color %r; choose between %rlllac_ulongarestypeuPrint a colorized version of string.aPSUTIL_DEBUGainspectagetframeinfoacurrentframeaf_backutoo many values to unpack (expected 5)TEOSErrorppuignoring %suignoring %rupsutil-debug [%s:%s]> %suIf PSUTIL_DEBUG env var is set, print a debug message to stderr.uCommon objects shared by __init__.py and _ps*.py modules.a__file__a__spec__aoriginahas_locationa__cached__adivisionaprint_functionTanamedtupleanamedtupleTaAF_INETTaSOCK_DGRAMaSOCK_DGRAMTaSOCK_STREAMTaAF_INET6TaAF_UNIXaAF_UNIXagetenvTaPSUTIL_DEBUGLRaFREEBSDaBSDaLINUXaNETBSDaOPENBSDaMACOSaOSXaPOSIXaSUNOSaWINDOWSaCONN_CLOSEaCONN_CLOSE_WAITaCONN_CLOSINGaCONN_ESTABLISHEDaCONN_FIN_WAIT1aCONN_FIN_WAIT2aCONN_LAST_ACKaCONN_LISTENaCONN_NONEaCONN_SYN_RECVaCONN_SYN_SENTaCONN_TIME_WAITaNIC_DUPLEX_FULLaNIC_DUPLEX_HALFaNIC_DUPLEX_UNKNOWNaSTATUS_DEADaSTATUS_DISK_SLEEPaSTATUS_IDLEaSTATUS_LOCKEDaSTATUS_RUNNINGaSTATUS_SLEEPINGaSTATUS_STOPPEDaSTATUS_SUSPENDEDaSTATUS_TRACING_STOPaSTATUS_WAITINGaSTATUS_WAKE_KILLaSTATUS_WAKINGaSTATUS_ZOMBIEaSTATUS_PARKEDaENCODINGaENCODING_ERRSaAF_INET6apconnapcputimesapctxswapgidsapioapioniceapopenfileapthreadapuidsasconnascpustatsasdiskioasdiskpartasdiskusageasnetioasnicaddrasnicstatsasswapasuseraconn_tmapadeprecated_methodaisfile_strictamemoizeaparse_environ_blockapath_exists_strictausage_percentasupports_ipv6asockfam_to_enumasocktype_to_enumawrap_numbersaopen_textaopen_binaryacatabcatabytes2humanaconn_to_ntupleadebugahiliteaterm_supports_colorsaprint_colora__all__aLINUXaMACOSaOSXaFREEBSDaOPENBSDaNETBSDaBSDaSUNOSaAIXarunningaSTATUS_RUNNINGasleepingaSTATUS_SLEEPINGudisk-sleepaSTATUS_DISK_SLEEPastoppedaSTATUS_STOPPEDutracing-stopaSTATUS_TRACING_STOPazombieaSTATUS_ZOMBIEadeadaSTATUS_DEADuwake-killaSTATUS_WAKE_KILLawakingaSTATUS_WAKINGaidleaSTATUS_IDLEalockedaSTATUS_LOCKEDawaitingaSTATUS_WAITINGasuspendedaSTATUS_SUSPENDEDaparkedaSTATUS_PARKEDaESTABLISHEDaCONN_ESTABLISHEDaSYN_SENTaCONN_SYN_SENTaSYN_RECVaCONN_SYN_RECVaFIN_WAIT1aCONN_FIN_WAIT1aFIN_WAIT2aCONN_FIN_WAIT2aTIME_WAITaCONN_TIME_WAITaCLOSEaCONN_CLOSEaCLOSE_WAITaCONN_CLOSE_WAITaLAST_ACKaCONN_LAST_ACKaLISTENaCONN_LISTENaCLOSINGaCONN_CLOSINGaNONEaNIC_DUPLEX_FULLaNIC_DUPLEX_HALFaNIC_DUPLEX_UNKNOWNaIntEnuma__prepare__aNicDuplexa__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upsutil._commona__module__a__qualname__a__orig_bases__aupdatea__members__laPOWER_TIME_UNKNOWNlaPOWER_TIME_UNLIMITEDaBatteryTimeagetfilesystemencodingareplaceagetfilesystemencodeerrorsasurrogateescapeasswapLatotalausedafreeapercentasinasoutasdiskusageLatotalausedafreeapercentasdiskioLaread_countawrite_countaread_bytesawrite_bytesaread_timeawrite_timeasdiskpartLadeviceamountpointafstypeaoptsamaxfileamaxpathasnetioLabytes_sentabytes_recvapackets_sentapackets_recvaerrinaerroutadropinadropoutasuserLanameaterminalahostastartedapidLafdafamilyatypealaddraraddrastatusapidasnicaddrLafamilyaaddressanetmaskabroadcastaptpasnicstatsLaisupaduplexaspeedamtuaflagsascpustatsLactx_switchesainterruptsasoft_interruptsasyscallsascpufreqacurrentaminamaxashwtempLalabelacurrentahighacriticalasbatteryapercentasecsleftapower_pluggedasfanalabelapcputimesLauserasystemachildren_userachildren_systemapopenfileapathafdapthreadaidauser_timeasystem_timeapuidsarealaeffectiveasavedapgidsapioLaread_countawrite_countaread_bytesawrite_bytesapioniceaioclassapctxswavoluntaryainvoluntaryLafdafamilyatypealaddraraddrastatusaipaportaallatcpatcp4audpaudp4ainetainet4ainet6aconn_tmapatcp6audp6aunixTEExceptionuBase exception class. All other psutil exceptions inherit
    from this one.
    uError._infodicta__str__uError.__str__a__repr__uError.__repr__uException raised when a process with a certain PID doesn't
    or no longer exists.
    TnnuNoSuchProcess.__init__aZombieProcessuException raised when querying a zombie process. This is
    raised on macOS, BSD and Solaris only, and not always: depending
    on the query the OS may be able to succeed anyway.
    On Linux all zombie processes are querable (hence this is never
    raised). Windows doesn't have zombie processes.
    uZombieProcess.__init__aAccessDenieduException raised when permission to perform an action is denied.uAccessDenied.__init__aTimeoutExpireduRaised on Process.wait(timeout) if timeout expires and process
    is still alive.
    uTimeoutExpired.__init__a__builtins__aexecaexec_Tudef raise_from(value, from_value):
    try:
        raise value from from_value
    finally:
        value = None
    Tnausage_percentamemoizeamemoize_when_activatedaisfile_strictapath_exists_strictasupports_ipv6aparse_environ_blockaconn_to_ntupleadeprecated_methoduWatches numbers so that they don't overflow and wrap
    (reset to zero).
    a_WrapNumbersu_WrapNumbers.__init__u_WrapNumbers._add_dictu_WrapNumbers._remove_dead_remindersu_WrapNumbers.runu_WrapNumbers.cache_clearacache_infou_WrapNumbers.cache_infoTawrap_numberslaopen_textabcatTu%(value).1f%(symbol)sabytes2humanaget_procfs_pathTnFaprint_coloradebugupsutil\_common.pyu<module psutil._common>Ta__class__TaselfTaselfapidanameamsgTaselfapidanameappidamsgTaselfasecondsapidanameTaselfainfoadetailsTaselfainput_dictanameTaselfaattrsainfoanameavalueTaselfainput_dictanameaold_dictagone_keysagone_keyaremkeyTafnameafallbackTwnaformatasymbolsaprefixwiwsasymbolavalueTaprocTacacheTaselfanameTafnameafallbacka_openwfTafdafamatype_aladdraraddrastatusastatus_mapapidTamsgainspectafnamealinenow_alinesaindexTwsTareplacementaouterTwsacoloraboldaattracolorsTaselfaargsakwargsamsgareplacementTamsgareplacementTapathastaerrTafunawrapperacache_clearacacheTafunawrapperacache_activateacache_deactivateTafnameTafnameafobjTafunamsgainnerareplacementTareplacementTadataaretaposaWINDOWS_anext_posaequal_posakeyavalueTapathaerrTwsacoloraboldafileactypesaDEFAULT_COLORaGetStdHandleaSetConsoleTextAttributeacolorsahandle_idahandleTavalueafrom_valueT
aselfainput_dictanameaold_dictanew_dictakeyainput_tupleaold_tupleabitswiainput_valueaold_valuearemkeyTanumTasockTafileacursesTausedatotalaround_aretTainput_dictanameTaargsakwargsakeyaretaerracacheafunTacacheafunTaselfaretaerrafunTafun.psutil._compataencodeTulatin-1:nnnahashvalueaitemsakeyakwdsasorted_itemslatypela_HashedSequ<genexpr>u_make_key.<locals>.<genexpr>utoo many values to unpack (expected 2)adecorating_functionulru_cache.<locals>.decorating_functionuLeast-recently-used cache decorator, see:
        http://docs.python.org/3/library/functools.html#functools.lru_cache.
        Tlla_make_keyagetalenaRLockTllllutoo many values to unpack (expected 4)amaxsizeawrapperulru_cache.<locals>.decorating_function.<locals>.wrapperuReport cache statistics.acache_infoulru_cache.<locals>.decorating_function.<locals>.cache_infouClear the cache and cache statistics.acache_clearulru_cache.<locals>.decorating_function.<locals>.cache_cleara__wrapped__afunctoolsaupdate_wrapperauser_functionastatsaMISSESamake_keyatypedacache_getarootaHITSacachealockaacquireanonlocal_rootutoo many values to unpack (expected 1)aNEXTaPREVareleaseaargsa_lenaKEYaRESULTaresulta_CacheInfoacleara_access_checkuwhich.<locals>._access_checkadirnameaosaenvironaPATHadefpathasplitTw;w.ainsertTlw.TaPATHEXTuacmdapathanormcaseaseenaaddafilesajoinadiramodeuGiven a command, mode, and a PATH string, return the path which
        conforms to the given mode on the PATH, or None if there is no such
        file.

        `mode` defaults to os.F_OK | os.X_OK. `path` defaults to the result
        of os.environ.get("PATH"), or can be overridden with a custom search
        path.
        aaccessaloweraendswithuwhich.<locals>.<genexpr>afcntlastructatermiosaunpackahhaioctlaTIOCGWINSZu1234anew_targetasysastderraredirect_stderruModule which provides compatibility with older Python versions.
This is more future-compatible rather than the opposite (prefer latest
Python 3 way of doing things).
a__doc__a__file__a__spec__aoriginahas_locationa__cached__acollectionsacontextlibaerrnoatypesLaPY3alongarangeasuperaunicodeabasestringwuwbalru_cacheawhichaget_terminal_sizearedirect_stderraFileNotFoundErroraPermissionErroraProcessLookupErroraInterruptedErroraChildProcessErroraFileExistsErrora__all__aPY3a_SENTINELalongarangeaxrangeaunicodeabasestringwuwbasuperaFileNotFoundErroraPermissionErroraProcessLookupErroraInterruptedErroraChildProcessErroraFileExistsErroralru_cacheathreadingTaRLockadummy_threadinganamedtupleaCacheInfoLahitsamissesamaxsizeacurrsizeTOlista__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upsutil._compata__module__a__qualname__Tahashvaluea__slots__ahasha__init__u_HashedSeq.__init__a__hash__u_HashedSeq.__hash__a__orig_bases__SMOfrozensetOstrOintasortedTldFashutilTawhichawhichaF_OKaX_OKTaget_terminal_sizeaget_terminal_sizeTTlPlasubprocessTaTimeoutExpiredaTimeoutExpiredaSubprocessTimeoutExpiredTEExceptionTaredirect_stderracontextmanagerupsutil\_compat.pyTa.0aextacmdTa.0wkwvatypeTa.0wvatypeu<module psutil._compat>Ta__class__TaselfTaselfatupahashTafnamodeTaargsakwdsatypedakwd_markafasttypesasortedatupleatypealenakeyasorted_itemsaitemTwsTarootalockacacheanonlocal_rootastatsTacachealockanonlocal_rootastatsTalockastatsaHITSaMISSESamaxsizeacacheTaHITSaMISSESacachealockamaxsizeastatsTauser_functionacacheastatsaHITSaMISSESamake_keyacache_geta_lenalockarootanonlocal_rootaPREVaNEXTaKEYaRESULTawrapperacache_infoacache_clearamaxsizeTamaxsizeatypedTafallbackafcntlastructatermiosaresTamaxsizeatypedadecorating_functionTanew_targetaoriginalTacmdamodeapatha_access_checkapathextafilesaseenadiranormdirathefileanameTaargsakwdsakeyalinkarootalink_prevalink_nextaresultalastaoldrootaoldkeyatypedamake_keyalockacache_getanonlocal_rootaNEXTaPREVastatsaHITSauser_functionacachea_lenamaxsizeaKEYaRESULTaMISSESTaHITSaKEYaMISSESaNEXTaPREVaRESULTa_lenacacheacache_getalockamake_keyamaxsizeanonlocal_rootastatsatypedauser_functionT
aargsakwdsakeyaresultamake_keyatypedacache_getarootastatsaHITSauser_functionacacheaMISSESTaHITSaMISSESacacheacache_getamake_keyarootastatsatypedauser_functionTaargsakwdsaresultauser_functionastatsaMISSESTaMISSESastatsauser_functionu.psutil._psaix?vacextavirtual_memutoo many values to unpack (expected 5)ausage_percentDaround_lasvmemaswap_memutoo many values to unpack (expected 4)a_commonasswapuSwap system memory as a (total, used, free, sin, sout) tuple.aper_cpu_timesascputimesuReturn system-wide CPU times as a named tuple.uReturn system per-CPU times as a list of named tuples.aosasysconfTaSC_NPROCESSORS_ONLNuReturn the number of logical CPUs in the system.alsdevu-CcaprocessorasubprocessaPopenaPIPETastdoutastderracommunicateutoo many values to unpack (expected 2)aPY3areturncodelu%r command error
%sastripasplitlinesadecodeasysastdoutaencodingu<genexpr>ucpu_count_cores.<locals>.<genexpr>acpu_statsascpustatsuReturn various CPU stats as a named tuple.adisk_partitionsanoneuadisk_usageatotalasdiskpartamountpointaretlistaappenduReturn system disk partitions.aconn_tmapuinvalid %r kind argument; choose between %su, anet_connectionsutoo many values to unpack (expected 7)aconn_to_ntupleaTCP_STATUSESlTapidaretuReturn socket connections.  If pid == -1 return system-wide
    connections (as opposed to connections opened by one process only).
    aFullaNIC_DUPLEX_FULLaHalfaNIC_DUPLEX_HALFanet_if_addrsacext_posixanet_if_mtuanet_if_flagsu/usr/bin/entstatu-dareasearchuRunning: (\d+) Mbps.*?(\w+) DuplexagroupTlTlw,arunningaduplex_mapagetaNIC_DUPLEX_UNKNOWNasnicstatsuGet NIC stats (isup, duplex, speed, mtu).unet_if_stats.<locals>.<genexpr>aboot_timeuThe system boot time expressed in seconds since the epoch.ausersutoo many values to unpack (expected 6)Tu:0.0u:0alocalhostasuseruReturn currently connected users as a list of namedtuples.aget_procfs_pathaisdigituReturns a list of PIDs currently running on the system.ajoinapsinfouCheck for the existence of a unix pid.afunctoolsawrapsawrapperuwrap_exceptions.<locals>.wrapperuCall callable into a try/except clause and translate ENOENT,
    EACCES and EPERM in NoSuchProcess or AccessDenied exceptions.
    afunaFileNotFoundErroraProcessLookupErrorapid_existsapidaNoSuchProcessa_nameaZombieProcessa_ppidaPermissionErroraAccessDenieda_procfs_patha_proc_basic_infoacache_activatea_proc_credacache_deactivateaproc_basic_infoaproc_credaswapperaproc_namearstripTwacmdlineasepaisabsaabspathacwdaexeaaccessaX_OKaenvironaPATHasplitTw:apathaisfileaproc_argsaproc_environaproc_info_mapacreate_timeanum_threadsaproc_threadsutoo many values to unpack (expected 3)apthreadastatu%s/%sTa_pidagetpriorityasetpriorityappidapuidsaproc_cpu_timesapcputimesattynrqllaglobTu/dev/**/*ast_rdevareadlinku%s/%s/cwdTw/arsslavmsapmemastatusaPROC_STATUSESw?u/usr/bin/procfilesu-nuno such processalowerafindallu(\d+): S_IFREG.*\s*.*name:(.*)\nastartswithTu//:lnnucannot be retrievedapopenfileuProcess.open_files.<locals>.<genexpr>u%s/%s/fdapctxswaproc_num_ctx_switchesa_psposixawait_pidaproc_io_countersapiouAIX platform implementation.a__doc__a__file__a__spec__aoriginahas_locationa__cached__acollectionsTanamedtupleanamedtupleTa_commonlTa_psposixTa_psutil_aixa_psutil_aixTa_psutil_posixa_psutil_posixTaNIC_DUPLEX_FULLTaNIC_DUPLEX_HALFTaNIC_DUPLEX_UNKNOWNTaAccessDeniedTaNoSuchProcessTaZombieProcessTaconn_to_ntupleTaget_procfs_pathTamemoize_when_activatedamemoize_when_activatedTausage_percenta_compatTaPY3TaFileNotFoundErrorTaPermissionErrorTaProcessLookupErroraPROCFS_PATHa__extra__all__aHAS_THREADSanet_io_countersaHAS_NET_IO_COUNTERSaHAS_PROC_IO_COUNTERSagetpagesizeaPAGE_SIZEaAF_LINKaSIDLaSTATUS_IDLEaSZOMBaSTATUS_ZOMBIEaSACTIVEaSTATUS_RUNNINGaSSWAPaSSTOPaSTATUS_STOPPEDaTCPS_ESTABLISHEDaCONN_ESTABLISHEDaTCPS_SYN_SENTaCONN_SYN_SENTaTCPS_SYN_RCVDaCONN_SYN_RECVaTCPS_FIN_WAIT_1aCONN_FIN_WAIT1aTCPS_FIN_WAIT_2aCONN_FIN_WAIT2aTCPS_TIME_WAITaCONN_TIME_WAITaTCPS_CLOSEDaCONN_CLOSEaTCPS_CLOSE_WAITaCONN_CLOSE_WAITaTCPS_LAST_ACKaCONN_LAST_ACKaTCPS_LISTENaCONN_LISTENaTCPS_CLOSINGaCONN_CLOSINGaPSUTIL_CONN_NONEaCONN_NONEDappidarssavmsacreate_timeaniceanum_threadsastatusattynrllllllllapfullmemLauserasystemaidleaiowaitLatotalaavailableapercentausedafreeavirtual_memoryaswap_memoryacpu_timesacpu_count_logicalacpu_count_coresadisk_io_countersTFTlanet_if_statsapidsawrap_exceptionsupsutil._psaixa__module__uWrapper class around underlying C implementation.aProcessa__qualname__Lapida_namea_ppida_procfs_patha_cachea__slots__a__init__uProcess.__init__aoneshot_enteruProcess.oneshot_enteraoneshot_exituProcess.oneshot_exituProcess._proc_basic_infouProcess._proc_credanameuProcess.nameuProcess.exeuProcess.cmdlineuProcess.environuProcess.create_timeuProcess.num_threadsathreadsuProcess.threadsTainetaconnectionsuProcess.connectionsanice_getuProcess.nice_getanice_setuProcess.nice_setuProcess.ppidauidsuProcess.uidsagidsuProcess.gidsuProcess.cpu_timesaterminaluProcess.terminaluProcess.cwdamemory_infouProcess.memory_infoamemory_full_infouProcess.statusaopen_filesuProcess.open_filesanum_fdsuProcess.num_fdsanum_ctx_switchesuProcess.num_ctx_switchesTnawaituProcess.waitaio_countersuProcess.io_countersTupsutil\_psaix.pyTa.0wxu<module psutil._psaix>Ta__class__TaselfapidTaselfTaselfakindaretTacmdwpastdoutastderraprocessorsTactx_switchesainterruptsasoft_interruptsasyscallsTaretTaselfwtTaselfaprocfs_patharesultTaallaretlistapartitionsapartitionadeviceamountpointafstypeaoptsamaxfileamaxpathantupleTaselfacmdlineaexeapathapossible_exeTaselfw_arealaeffectiveasavedTaselfarcawcarbawbTaselfaretarssavmsTakinda_pidacmapafamiliesatypesarawlistaretaitemafdafamatype_aladdraraddrastatusapidantTaduplex_mapanamesaretanameamtuaflagsaduplexaspeedwpastdoutastderrare_resultaoutput_flagsaisupTaselfavalueTaselfwpastdoutastderraprocfilesaretlistafdapathTaselfacodeTatotalafreeasinasoutausedapercentTaselfattydevadevTaselfarawlistaretlistathread_idautimeastimeantupleTaselfarealaeffectiveasavedw_Taretlistarawlistalocalhostaitemauserattyahostnameatstampauser_processapidantTatotalaavailafreeapinnedainuseapercentTaselfatimeoutTafunawrapperTaselfaargsakwargsafunTafun.psutil._psbsdv#acextavirtual_memaNETBSDutoo many values to unpack (expected 6)u/proc/meminfoarba__enter__a__exit__astartswithTcBuffers:asplitllTcMemShared:Tnnnutoo many values to unpack (expected 8)ausage_percentatotalDaround_lasvmemausedafreeaactiveainactiveabuffersacachedasharedawiredaswap_memutoo many values to unpack (expected 5)a_commonasswapuSystem swap memory as (total, used, free, sin, sout) namedtuple.acpu_timesascputimesuReturn system per-CPU times as a namedtuple.aper_cpu_timesaretaappenduReturn system CPU times as a namedtuple.acpu_count_logicala__called__usupported only starting from FreeBSD 8uReturn the number of logical CPUs in the system.acpu_topologyarfindTu</groups>llaElementTreeafromstringafindallTugroup/children/group/cpuaclearuReturn the number of CPU cores in the system.aFREEBSDacpu_statsutoo many values to unpack (expected 7)u/proc/statTcintraOPENBSDascpustatsactxswaintrsasoft_intrsasyscallsuReturn various CPU stats as a named tuple.acpu_frequtoo many values to unpack (expected 2)Tw Tw/lTEIndexErrorEValueErrorascpufreqamin_freqamax_frequReturn frequency metrics for CPUs. As of Dec 2018 only
        CPU 0 appears to be supported by FreeBSD and all other cores
        match the frequency of CPU 0.
        Zadisk_partitionsutoo many values to unpack (expected 4)asdiskpartaretlistuReturn mounted disk partitions as a list of namedtuples.
    'all' argument is ignored, see:
    https://github.com/giampaolo/psutil/issues/906.
    anet_io_countersakeysacext_posixanet_if_mtuanet_if_flagsanet_if_duplex_speedaerrnoaENODEVaNicDuplexaduplexw,aflagsarunningasnicstatsaspeedamtuuGet NIC stats (isup, duplex, speed, mtu).aconn_tmapuinvalid %r kind argument; choose between %su, anet_connectionsTlaconn_to_ntupleaTCP_STATUSESaadduSystem-wide network connections.asensors_batteryutoo many values to unpack (expected 3)aPOWER_TIME_UNLIMITEDaPOWER_TIME_UNKNOWNl<asbatteryuReturn battery info.adefaultdictTOlistasensors_cpu_temperatureuCore %sacoretempashwtempuReturn CPU cores temperatures if available, else an empty dict.aboot_timeuThe system boot time expressed in seconds since the epoch.ausersw~asuseruReturn currently connected users as a list of namedtuples.aProcessTlanameaNoSuchProcessaAccessDeniedapidsa_pid_0_existsainsertTlpuReturns a list of PIDs currently running on the system.a_psposixapid_existsuReturn True if pid exists.aproc_oneshot_infoakinfo_proc_mapastatusaPROC_STATUSESagetaSTATUS_ZOMBIEafunctoolsawrapsawrapperuwrap_exceptions.<locals>.wrapperuDecorator which translates bare OSError exceptions into
    NoSuchProcess and AccessDenied.
    afunaProcessLookupErrorais_zombieapidaZombieProcessa_namea_ppidaPermissionErroruSame as above, for routines relying on reading /proc fs.aFileNotFoundErrorainstawrap_exceptions_procfsaproc_nameuRaise NSP if the process disappeared on us.uRetrieves multiple process info in one shot as a raw tuple.aoneshotacache_activateacache_deactivateuaproc_exeaosareadlinku/proc/%s/exeacmdlineawhichaproc_cmdlineaselfaEINVALadebuguignoring %r and returning an empty listaproc_environattynraget_terminal_mapappidapuidsareal_uidaeffective_uidasaved_uidapgidsareal_gidaeffective_gidasaved_gidapcputimesauser_timeasys_timeach_user_timeach_sys_timeacpunumapmemarssavmsamemtextamemdataamemstackacreate_timeaHAS_PROC_NUM_THREADSaproc_num_threadsathreadsapctxswactx_switches_volactx_switches_unvolaproc_threadsapthreada_assert_aliveaproc_connections:nlnafamiliesatypesawait_pidagetpriorityasetpriorityw?apioaread_io_countawrite_io_countaHAS_PROC_OPEN_FILESaproc_cwduReturn process current working directory.aproc_open_filesapopenfileuReturn files opened by process as a list of namedtuples.aproc_num_fdsuReturn the number of file descriptors opened by this process.aproc_cpu_affinity_getuinvalid CPU #%i (choose between %s)aproc_cpu_affinity_setaEDEADLKaproc_memory_mapsaproc_getrlimitusecond argument must be a (soft, hard) tuple, got %saproc_setrlimituFreeBSD, OpenBSD and NetBSD platforms implementation.a__doc__a__file__a__spec__aoriginahas_locationa__cached__acontextlibacollectionsTadefaultdictTanamedtupleanamedtupleuxml.etreeTaElementTreeTa_commonTa_psposixTa_psutil_bsda_psutil_bsdTa_psutil_posixa_psutil_posixTaFREEBSDTaNETBSDTaOPENBSDTaAccessDeniedTaNoSuchProcessTaZombieProcessTaconn_tmapTaconn_to_ntupleTadebugTamemoizeamemoizeTamemoize_when_activatedamemoize_when_activatedTausage_percenta_compatTaFileNotFoundErrorTaPermissionErrorTaProcessLookupErrorTawhicha__extra__all__aSIDLaSTATUS_IDLEaSRUNaSTATUS_RUNNINGaSSLEEPaSTATUS_SLEEPINGaSSTOPaSTATUS_STOPPEDaSZOMBaSWAITaSTATUS_WAITINGaSLOCKaSTATUS_LOCKEDaSDEADaSTATUS_WAKINGaSONPROCaTCPS_ESTABLISHEDaCONN_ESTABLISHEDaTCPS_SYN_SENTaCONN_SYN_SENTaTCPS_SYN_RECEIVEDaCONN_SYN_RECVaTCPS_FIN_WAIT_1aCONN_FIN_WAIT1aTCPS_FIN_WAIT_2aCONN_FIN_WAIT2aTCPS_TIME_WAITaCONN_TIME_WAITaTCPS_CLOSEDaCONN_CLOSEaTCPS_CLOSE_WAITaCONN_CLOSE_WAITaTCPS_LAST_ACKaCONN_LAST_ACKaTCPS_LISTENaCONN_LISTENaTCPS_CLOSINGaCONN_CLOSINGaPSUTIL_CONN_NONEaCONN_NONEagetpagesizeaPAGESIZEaAF_LINKaHAS_PER_CPU_TIMESaHAS_PROC_NUM_FDSDappidastatusareal_uidaeffective_uidasaved_uidareal_gidaeffective_gidasaved_gidattynracreate_timeactx_switches_volactx_switches_unvolaread_io_countawrite_io_countauser_timeasys_timeach_user_timeach_sys_timearssavmsamemtextamemdataamemstackacpunumanamelllllllllll
lll
lllllllllllLatotalaavailableapercentausedafreeaactiveainactiveabuffersacachedasharedawiredLauseraniceasystemaidleairqLarssavmsatextadataastackapfullmemLauserasystemachildren_userachildren_systemTapmmap_groupedupath rss, private, ref_count, shadow_countapmmap_groupedTapmmap_extuaddr, perms path rss, private, ref_count, shadow_countapmmap_extasdiskioLaread_countawrite_countaread_bytesawrite_bytesaread_timeawrite_timeabusy_timeLaread_countawrite_countaread_bytesawrite_bytesavirtual_memoryaswap_memoryacpu_count_coresTFadisk_usageadisk_io_countersanet_if_addrsanet_if_statsasensors_temperaturesawrap_exceptionsacontextmanagerupsutil._psbsda__module__uWrapper class around underlying C implementation.a__qualname__Lapida_namea_ppida_cachea__slots__a__init__uProcess.__init__uProcess._assert_aliveuProcess.oneshotaoneshot_enteruProcess.oneshot_enteraoneshot_exituProcess.oneshot_exituProcess.nameaexeuProcess.exeuProcess.cmdlineaenvironuProcess.environaterminaluProcess.terminaluProcess.ppidauidsuProcess.uidsagidsuProcess.gidsuProcess.cpu_timesacpu_numuProcess.cpu_numamemory_infouProcess.memory_infoamemory_full_infouProcess.create_timeanum_threadsuProcess.num_threadsanum_ctx_switchesuProcess.num_ctx_switchesuProcess.threadsTainetaconnectionsuProcess.connectionsTnawaituProcess.waitanice_getuProcess.nice_getanice_setuProcess.nice_setuProcess.statusaio_countersuProcess.io_countersacwduProcess.cwdTammapupath rss, private, ref_count, shadow_countant_mmap_groupedTammapuaddr, perms path rss, private, ref_count, shadow_countant_mmap_exta_not_implementeduProcess._not_implementedaopen_filesuProcess.open_filesanum_fdsuProcess.num_fdsacpu_affinity_getuProcess.cpu_affinity_getacpu_affinity_setuProcess.cpu_affinity_setamemory_mapsuProcess.memory_mapsarlimituProcess.rlimitTupsutil\_psbsd.pyu<module psutil._psbsd>Ta__class__TaselfapidTaselfTaselfaerrTaselfakindafamiliesatypesaretarawlistaitemafdafamatypealaddraraddrastatusantTaselfacpusaallcpusacpuaerrTaretwsaindexarootTacurrTaretanum_cpusacpuacurrentaavailable_freqamin_freqamax_freqTactxswaintrsasoft_intrsasyscallsatrapsafaultsaforkswfalineTaselfarawtupleTauseraniceasystemaidleairqTaallaretlistapartitionsapartitionadeviceamountpointafstypeaoptsamaxfileamaxpathantupleTaselfacmdlineTapidastTaselfanameTakindafamiliesatypesaretarawlistaitemafdafamatypealaddraraddrastatusapidantT
anamesaretanameamtuaflagsaduplexaspeedaerraoutput_flagsaisupTaselfavalueTaselfaretTaselfarawlistTamsgTaretacpu_tauseraniceasystemaidleairqaitemTapidaexistsTaretTaselfaresourcealimitsasoftahardTapercentaminsleftapower_pluggedasecsleftTaretanum_cpusacpuacurrentahighanameTaselfacodeTatotalausedafreeasinasoutapercentTaselfatty_nratmapTaselfarawlistaretlistathread_idautimeastimeantupleTaretlistarawlistaitemauserattyahostnameatstampapidantTamematotalafreeaactiveainactiveawiredacachedwfalineabuffersasharedausedaavailapercentTaselfatimeoutTafunawrapperTainstTaselfaargsakwargsafunTafun.psutil._pslinux]abasestringaosareadlinkasplitTwlaendswithTu (deleted)apath_exists_strict:nlnapathuWrapper around os.readlink().aO_RDONLYwraO_WRONLYwwaO_RDWRuw+aO_APPENDareplaceTwwwalTuw+ur+uConvert file's open() flags into a readable string.
    Used by Process.open_files().
    Tw/w!u/sys/block/%saaccessaF_OKuReturn True if the given name refers to a root device (e.g.
    "sda", "nvme0n1") as opposed to a logical partition (e.g.  "sda1",
    "nvme0n1p1"). If name is a virtual device (e.g. "loop1", "ram")
    return True.
    aopen_binaryu%s/stata__enter__a__exit__areadline:lnnTnnnLauseraniceasystemaidleaiowaitairqasoftirqavaluesastealafieldsaguestaappendTaguest_niceanamedtupleascputimesuSet a namedtuple of variable fields depending on the CPU times
    available on this Linux kernel version which may be:
    (user, nice, system, idle, iowait, irq, softirq, [steal, [guest,
     [guest_nice]]])
    Used by cpu_times() function.
    actypesaStructurea__prepare__aStructRlimita__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upsutil._pslinuxa__module__uprlimit.<locals>.StructRlimita__qualname__arlim_curac_longlongarlim_maxa_fields_a__orig_bases__alibcaprlimitabyreflaget_errnoastrerroracurrentcMemFree:agetTcCached:lcActive(file):cInactive(file):cSReclaimable:adebugu%r is missing from /proc/meminfo; using an approximation for calculating available memoryaargsu%s/zoneinfoaget_procfs_pathastripastartswithTclowawatermark_lowaPAGESIZEaminlf@uFallback for kernels < 3.14 where /proc/meminfo does not provide
    "MemAvailable", see:
    https://blog.famzah.net/2014/09/24/.

    This code reimplements the algorithm outlined here:
    https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/
        commit/?id=34e431b0ae398fc54ea69ff85ec700722c9da773

    We use this function also when "MemAvailable" returns 0 (possibly a
    kernel bug, see: https://github.com/giampaolo/psutil/issues/1915).
    In that case this routine matches "free" CLI tool result ("available"
    column).

    XXX: on recent kernels this calculation may differ by ~1.5% compared
    to "MemAvailable:", as it's calculated slightly differently.
    It is still way more realistic than doing (free + cached) though.
    See:
    * https://gitlab.com/procps-ng/procps/issues/42
    * https://github.com/famzah/linux-memavailable-procfs/issues/2
    u%s/meminfolamemscMemTotal:cBuffers:abufferscCached:amissing_fieldsacachedTcSReclaimable:lcShmem:cMemShared:TasharedcActive:TaactivecInactive:cInact_dirty:cInact_clean:cInact_laundry:TainactivecSlab:cMemAvailable:acalculate_avail_vmemTaavailableausage_percentDaround_lu%s memory stats couldn't be determined and %s set to 0u, awasawereawarningsawarnaRuntimeWarningDastacklevellasvmemuReport virtual memory stats.
    This implementation mimicks procps-ng-3.3.12, aka "free" CLI tool:
    https://gitlab.com/procps-ng/procps/blob/
        24fd2605c51fccc375ab0287cec33aa767f06718/proc/sysinfo.c#L778-791
    The returned values are supposed to match both "free" and "vmstat -s"
    CLI tools.
    cSwapTotal:cSwapFree:acextalinux_sysinfoutoo many values to unpack (expected 7)u%s/vmstatu'sin' and 'sout' swap memory stats couldn't ube determined and were set to 0 (%s)wfTcpswpinTd lTcpswpoutasinasoutu'sin' and 'sout' swap memory stats couldn't be determined and were set to 0a_commonasswapuReturn swap memory metrics.aset_scputimes_ntuplea_fieldsaCLOCK_TICKSuReturn a named tuple representing the following system-wide
    CPU times:
    (user, nice, system, idle, iowait, irq, softirq [steal, [guest,
     [guest_nice]]])
    Last 3 fields may not be available on all Linux kernel versions.
    TccpuacpusuReturn a list of namedtuple representing the CPU times
    for every CPU available on the system.
    asysconfTaSC_NPROCESSORS_ONLNu%s/cpuinfoalowerTcprocessoranumareacompileTucpu\daopen_textTw asearchamatchuReturn the number of logical CPUs in the system.aglobTu/sys/devices/system/cpu/cpu[0-9]*/topology/core_cpus_listTu/sys/devices/system/cpu/cpu[0-9]*/topology/thread_siblings_listalsaaddareadacurrent_infoccpu coresamappingcphysical idTTcphysical idccpu coresTc:lutoo many values to unpack (expected 2)uReturn the number of CPU cores in the system.TcctxtTcintrTcsoftirqactx_switchesasoft_interruptsainterruptsascpustatsuReturn various CPU stats as a named tuple.Tccpu mhzaretTd:luReturn current CPU frequency from cpuinfo if available.a_cpu_get_cpuinfo_freqTu/sys/devices/system/cpu/cpufreq/policy[0-9]*Tu/sys/devices/system/cpu/cpu[0-9]*/cpufreqasortu<lambda>ucpu_freq.<locals>.<lambda>Takeyajoinlabcatapjoinascaling_cur_freqDafallbacknacpuinfo_cur_frequcan't find current frequency fileascaling_max_freqascaling_min_freqascpufrequReturn frequency metrics for all CPUs.
        Contrarily to other OSes, Linux updates these values in
        real-time.
        u[0-9]+agroupZuAlternate implementation using /proc/cpuinfo.
        min and max frequencies are not available and are set to None.
        atcpasocketaAF_INETaSOCK_STREAMatcp6aAF_INET6audpaSOCK_DGRAMaudp6aunixaAF_UNIXaallatcp4audp4ainetainet4ainet6atmapa_procfs_pathadefaultdictTOlistu%s/%s/fdu%s/%s/fd/%saselfapidaFileNotFoundErroraProcessLookupErroraerrnoaEINVALaENAMETOOLONGTusocket:[:lnn:nlnapidsainodesaupdateaget_proc_inodesaPermissionErrorTw:lTaPY3aencodeTaasciiaLITTLE_ENDIANainet_ntopabase64ab16decode:nnlastructapackTu>4Iaunpacku<4ITu<4Iasupports_ipv6a_Ipv6UnsupportedErroraaddruAccept an "ip:port" address as displayed in /proc/net/*
        and convert it into a human readable form, like:

        "0500000A:0016" -> ("10.0.0.5", 22)
        "0000000000000000FFFF00000100007F:9E49" -> ("::ffff:127.0.0.1", 40521)

        The IP address portion is a little or big endian four-byte
        hexadecimal number; that is, the least significant byte is listed
        first, so we need to reverse the order of the bytes to convert it
        to an IP address.
        The port is represented as a two-byte hexadecimal number.

        Reference:
        http://linuxdevcenter.com/pub/a/linux/2000/11/16/LinuxAdmin.html
        uParse /proc/net/tcp* and /proc/net/udp* files.afileTw6:nl
nutoo many values to unpack (expected 10)uerror while parsing %s; malformed line %s %rTnlafilter_pidatype_aTCP_STATUSESaCONN_NONEaConnectionsadecode_addressafamilyaprocess_inetuConnections.process_inetuParse /proc/net/unix files.:llnw uerror while parsing %s; malformed line %rluasocktype_to_enumaprocess_unixuConnections.process_unixuinvalid %r kind argument; choose between %saget_all_inodesutoo many values to unpack (expected 3)u%s/net/%sTafilter_pidapconnasconna_connectionsaretrieveuReturn system-wide open connections.u%s/net/devareadlinesalines:lnnarfindutoo many values to unpack (expected 16)aretdictuReturn network I/O statistics for every network interface
    installed on the system as a dict of raw tuples.
    aDUPLEX_FULLaNIC_DUPLEX_FULLaDUPLEX_HALFaNIC_DUPLEX_HALFaDUPLEX_UNKNOWNaNIC_DUPLEX_UNKNOWNanet_io_countersakeysacext_posixanet_if_mtuanet_if_flagsanet_if_duplex_speedaENODEVw,aflagsarunningasnicstatsaduplexaspeedamtuuGet NIC stats (isup, duplex, speed, mtu).aread_procfsudisk_io_counters.<locals>.read_procfsaread_sysfsudisk_io_counters.<locals>.read_sysfsu%s/diskstatsu/sys/blocku%s/diskstats nor /sys/block filesystem are available on this systemais_storage_deviceaDISK_SECTOR_SIZEanameuReturn disk I/O statistics for every disk installed on the
    system as a dict of raw tuples.
    l:lln:llnutoo many values to unpack (expected 11):lnnutoo many values to unpack (expected 4)unot sure how to interpret line %rawalkastatabasenameTw/ast_devamajoraminoru%s/partitionsaisdigitu/dev/%su/sys/dev/block/%s:%s/ueventTuDEVNAME=arpartitionu%s:%saiglobTu/sys/class/block/*/devadirnameaask_proc_partitionsTEOSErrorpaask_sys_dev_blockaask_sys_class_blocku%s/filesystemsTanodevafstypesTwazfsTazfsaprocfs_pathu/procu/etc/mtabarealpathTu/etc/mtabu%s/self/mountsadisk_partitionsanoneTu/dev/rootarootfsaRootFsDeviceFinderafindasdiskpartaretlistuReturn mounted disk partitions as a list of namedtuples.acollectionsTu/sys/class/hwmon/hwmon*/temp*_*aextendTu/sys/class/hwmon/hwmon*/device/temp*_*asortedTw_Tu/sys/devices/platform/coretemp.*/hwmon/hwmon*/temp*_*Tu/sys/devices/platform/coretemp.*/hwmon/areplasubu/sys/class/hwmon/abasenamesa_inputf@@acatTEOSErrorpEValueErrora_maxa_crita_labelDafallbackuTu/sys/class/thermal/thermal_zone*atempatypeu/trip_point*w_:llnabasea_typeacriticala_tempahighuReturn hardware (CPU and others) temperatures as a dict
    including hardware name, label, current, max and critical
    temperatures.

    Implementation notes:
    - /sys/class/hwmon looks like the most recent interface to
      retrieve this info, and this implementation relies on it
      only (old distros will probably use something else)
    - lm-sensors on Ubuntu 16.04 relies on /sys/class/hwmon
    - /sys/class/thermal/thermal_zone* is another one but it's more
      difficult to parse
    Tu/sys/class/hwmon/hwmon*/fan*_*Tu/sys/class/hwmon/hwmon*/device/fan*_*asfanuReturn hardware fans info (for CPU and other peripherals) as a
    dict including hardware label and current speed.

    Implementation notes:
    - /sys/class/hwmon looks like the most recent interface to
      retrieve this info, and this implementation relies on it
      only (old distros will probably use something else)
    - lm-sensors on Ubuntu 16.04 relies on /sys/class/hwmon
    uAttempt to read the content of multiple files which may
        not exist. If none of them exist return None.
        amulti_bcatusensors_battery.<locals>.multi_bcataPOWER_SUPPLY_PATHTaBATabatteryu/energy_nowu/charge_nowu/power_nowu/current_nowu/energy_fullu/charge_fullu/time_to_empty_nowfY@u/capacityDafallbackluAC0/onlineuAC/onlineu/statusadischargingTachargingafullaPOWER_TIME_UNLIMITEDaenergy_nowlaPOWER_TIME_UNKNOWNl<asbatteryuReturn battery information.
    Implementation note: it appears /sys/class/power_supply/BAT0/
    directory structure may vary and provide files with the same
    meaning but under different names, see:
    https://github.com/giampaolo/psutil/issues/966.
    anullTafallbackausersutoo many values to unpack (expected 5)asuseruReturn currently connected users as a list of namedtuples.TcbtimeaBOOT_TIMEuline 'btime' not found in %suReturn the system boot time expressed in seconds since the epoch.wbuReturns a list of PIDs currently running on the system.a_psposixapid_existsu%s/%s/statusTcTgid:u'Tgid' line not found in %sTEOSErrorEValueErroruCheck for the existence of a unix PID. Linux TIDs are not
    supported (always return False).
    u%s/%s/statadataTd)uObtain a {pid: ppid, ...} dict for all running processes in
    one shot. Used to speed up Process.children().
    afunctoolsawrapsawrapperuwrap_exceptions.<locals>.wrapperuDecorator which translates bare OSError and IOError exceptions
    into NoSuchProcess and AccessDenied.
    afunaAccessDenieda_namea_raise_if_zombieaNoSuchProcessu%s/%sa_ppiddZa_is_zombieaZombieProcessuRaise NSP if the process disappeared on us.Td(astatusappidattynrlautimelastimel
achildren_utimelachildren_stimelacreate_timel$acpu_numl'ablkio_ticksuParse /proc/{pid}/stat file and return a dict with various
        process info.
        Using "man proc" as a reference: where "man proc" refers to
        position N always subtract 3 (e.g ppid position 4 in
        'man proc' == position 1 in here).
        The return value is cached in case oneshot() ctx manager is
        in use.
        uRead /proc/{pid}/stat file and return its content.
        The return value is cached in case oneshot() ctx manager is
        in use.
        u%s/%s/smapsa_parse_stat_fileacache_activatea_read_status_filea_read_smaps_fileacache_deactivateadecodeu%s/%s/exealexistsu%s/%s/cmdlinewacmdlineu%s/%s/environaparse_environ_blockaget_terminal_mapu%s/%s/ioTc: u%s file was emptyapiocsyscrcsyscwcread_bytescwrite_bytescrcharcwcharu%r field was not found in %s; found fields are %rapcputimesuWhat CPU the process is on.await_pidaboot_timeu%s/%s/statm:nlnapmemarssavmsasharedatextalibadirtyu<genexpr>uProcess.memory_info.<locals>.<genexpr>u{}/{}/smaps_rollupTcPrivate_aussTcPss:TcSwap:apssaswapafindallaHAS_PROC_SMAPS_ROLLUPa_parse_smaps_rollupuignore %r for pid %s and retry using /proc/pid/smapsa_parse_smapsamemory_infoapfullmemaget_blocksuProcess.memory_maps.<locals>.get_blocksTd
apopTlTnlutoo many values to unpack (expected 6)u[anon]TcRss:lTcSize:lTcPss:lTcShared_Clean:lTcShared_Dirty:lTcPrivate_Clean:lTcPrivate_Dirty:lTcReferenced:lTcAnonymous:lTcSwap:luReturn process's mapped memory regions as a list of named
            tuples. Fields are explained in 'man proc'; here is an updated
            (Apr 2012) version: http://goo.gl/fmebo.

            /proc/{PID}/smaps does not exist on kernels < 2.6.14 or if
            CONFIG_MMU kernel configuration option is not enabled.
            Td:acurrent_blockTcVmFlags:udon't know how to interpret line %ru%s/%s/cwdu'voluntary_ctxt_switches' and 'nonvoluntary_ctxt_switches'lines were not found in %s/%s/status; the kernel is probably older than 2.6.23apctxswu%s/%s/tasku%s/%s/task/%s/statastapthreadahit_enoenta_raise_if_not_aliveagetpriorityasetpriorityaproc_cpu_affinity_getaper_cpu_timesaproc_cpu_affinity_seta_get_eligible_cpusuinvalid CPU number %r; choose between %suCPU number %r is not eligible; choose between %saproc_ioprio_getaenumaIOPriorityapioniceaIOPRIO_CLASS_IDLEaIOPRIO_CLASS_NONEu%r ioclass accepts no valueluvalue not in 0-7 rangeaproc_ioprio_setucan't use prlimit() against PID 0 processusecond argument must be a (soft, hard) tuple, got %saENOSYSaPROC_STATUSESw?aisfile_strictu%s/%s/fdinfo/%slafile_flags_to_modeapopenfileaposapuidsapgidsuLinux platform implementation.a__doc__a__file__a__spec__aoriginahas_locationa__cached__adivisionasysTadefaultdictTanamedtupleTa_commonTa_psposixTa_psutil_linuxa_psutil_linuxTa_psutil_posixa_psutil_posixTaNIC_DUPLEX_FULLTaNIC_DUPLEX_HALFTaNIC_DUPLEX_UNKNOWNTaAccessDeniedTaNoSuchProcessTaZombieProcessTabcatTacatTadebugTadecodeTaget_procfs_pathTaisfile_strictTamemoizeamemoizeTamemoize_when_activatedamemoize_when_activatedTaopen_binaryTaopen_textTaparse_environ_blockTapath_exists_strictTasupports_ipv6Tausage_percenta_compatTaPY3TaFileNotFoundErrorTaPermissionErrorTaProcessLookupErrorTwbTabasestringLaPROCFS_PATHaIOPRIO_CLASS_NONEaIOPRIO_CLASS_RTaIOPRIO_CLASS_BEaIOPRIO_CLASS_IDLEaCONN_ESTABLISHEDaCONN_SYN_SENTaCONN_SYN_RECVaCONN_FIN_WAIT1aCONN_FIN_WAIT2aCONN_TIME_WAITaCONN_CLOSEaCONN_CLOSE_WAITaCONN_LAST_ACKaCONN_LISTENaCONN_CLOSINGa__extra__all__u/sys/class/power_supplyu/proc/%s/smapsagetpidaHAS_PROC_SMAPSu/proc/%s/smaps_rollupaHAS_PROC_IO_PRIORITYaHAS_CPU_AFFINITYTaSC_CLK_TCKagetpagesizelaAF_PACKETaAF_LINKaIntEnumaAddressFamilyaIOPRIO_CLASS_RTaIOPRIO_CLASS_BEa__members__wRaSTATUS_RUNNINGwSaSTATUS_SLEEPINGwDaSTATUS_DISK_SLEEPwTaSTATUS_STOPPEDwtaSTATUS_TRACING_STOPwZaSTATUS_ZOMBIEwXaSTATUS_DEADwxwKaSTATUS_WAKE_KILLwWaSTATUS_WAKINGwIaSTATUS_IDLEwPaSTATUS_PARKEDu01aCONN_ESTABLISHEDu02aCONN_SYN_SENTu03aCONN_SYN_RECVu04aCONN_FIN_WAIT1u05aCONN_FIN_WAIT2u06aCONN_TIME_WAITu07aCONN_CLOSEu08aCONN_CLOSE_WAITu09aCONN_LAST_ACKu0AaCONN_LISTENu0BaCONN_CLOSINGLatotalaavailableapercentausedafreeaactiveainactiveabuffersacachedasharedaslabasdiskioLaread_countawrite_countaread_bytesawrite_bytesaread_timeawrite_timearead_merged_countawrite_merged_countabusy_timeLapathafdapositionamodeaflagsTapmemurss vms shared text lib data dirtyTaussapssaswapapmmap_groupedLapatharssasizeapssashared_cleanashared_dirtyaprivate_cleanaprivate_dirtyareferencedaanonymousaswapapmmap_extuaddr perms Laread_countawrite_countaread_bytesawrite_bytesaread_charsawrite_charsLauserasystemachildren_userachildren_systemaiowaitTu/procaerruignoring exception on import: %rTascputimesuuser system idleTZZZaresourceTaprlimitaCDLLTnTaRLIMaisupperavirtual_memoryaswap_memoryacpu_timesacpu_count_logicalacpu_count_coresacpu_statsu/sys/devices/system/cpu/cpufreq/policy0u/sys/devices/system/cpu/cpu0/cpufreqacpu_freqanet_if_addrsTEExceptionuA wrapper on top of /proc/net/* files, retrieving per-process
    and system-wide open connections (TCP, UDP, UNIX) similarly to
    "netstat -an".

    Note: in case of UNIX sockets we're only able to determine the
    local endpoint/path, not the one it's connected to.
    According to [1] it would be possible but not easily.

    [1] http://serverfault.com/a/417946
    a__init__uConnections.__init__uConnections.get_proc_inodesuConnections.get_all_inodesuConnections.decode_addressuConnections.retrieveTainetanet_connectionsanet_if_statsadisk_usageTFadisk_io_countersudisk_partitions() may return partitions with device == "/dev/root"
    or "rootfs". This container class uses different strategies to try to
    obtain the real device path. Resources:
    https://bootlin.com/blog/find-root-device/
    https://www.systutorials.com/how-to-find-the-disk-where-root-is-on-in-bash-on-linux/.
    a__slots__uRootFsDeviceFinder.__init__uRootFsDeviceFinder.ask_proc_partitionsuRootFsDeviceFinder.ask_sys_dev_blockuRootFsDeviceFinder.ask_sys_class_blockuRootFsDeviceFinder.findasensors_temperaturesasensors_fansasensors_batteryappid_mapawrap_exceptionsuLinux process implementation.aProcessLapida_namea_ppida_procfs_patha_cacheuProcess.__init__uProcess._is_zombieuProcess._raise_if_zombieuProcess._raise_if_not_aliveuProcess._parse_stat_fileuProcess._read_status_fileuProcess._read_smaps_fileaoneshot_enteruProcess.oneshot_enteraoneshot_exituProcess.oneshot_exituProcess.nameaexeuProcess.exeuProcess.cmdlineaenvironuProcess.environaterminaluProcess.terminalu/proc/%s/ioaio_countersuProcess.io_countersuProcess.cpu_timesuProcess.cpu_numawaituProcess.waituProcess.create_timeuProcess.memory_infouProcess._parse_smaps_rollupTc\nPrivate.*:\s+(\d+)Tc\nPss\:\s+(\d+)Tc\nSwap\:\s+(\d+)uProcess._parse_smapsamemory_full_infouProcess.memory_full_infoamemory_mapsuProcess.memory_mapsacwduProcess.cwdTcctxt_switches:\t(\d+)anum_ctx_switchesuProcess.num_ctx_switchesTcThreads:\t(\d+)anum_threadsuProcess.num_threadsathreadsuProcess.threadsanice_getuProcess.nice_getanice_setuProcess.nice_setacpu_affinity_getuProcess.cpu_affinity_getTcCpus_allowed_list:\t(\d+)-(\d+)uProcess._get_eligible_cpusacpu_affinity_setuProcess.cpu_affinity_setaionice_getuProcess.ionice_getaionice_setuProcess.ionice_setarlimituProcess.rlimituProcess.statusaopen_filesuProcess.open_filesaconnectionsuProcess.connectionsanum_fdsuProcess.num_fdsuProcess.ppidTcUid:\t(\d+)\t(\d+)\t(\d+)auidsuProcess.uidsTcGid:\t(\d+)\t(\d+)\t(\d+)agidsuProcess.gidsupsutil\_pslinux.pyTa.0wxTwxu<module psutil._pslinux>Ta__class__TaselfadevTaselfapidTaselfatcp4atcp6audp4audp6aunixTaretwfalineTaselfa_readataamatchTaselfadataarparastatusTaselfa_private_rea_pss_rea_swap_reasmaps_dataaussapssaswapTaselfaussapssaswapwfalineTaselfadataarparanameafieldsaretTaselfTaselfwfTaselfwfalineafieldsamajoraminoranameTaselfaneedleafilesafilewfadataanameTaselfapathwfalineanameTapathwfalinearetTamemsafreeafallbackalru_active_filealru_inactive_fileaslab_reclaimableaerrwfawatermark_lowalineaavailapagecacheTaselfwfadataasepacmdlineTaselfakindaretTaselfacpusaerraeligible_cpusaall_cpusacpuTalsap1ap2apathwfaresultamappingacurrent_infoalineakeyavalueTanumwfalineasearchT
acpuinfo_freqsapathsaretapjoinwiapathacurramsgamax_amin_Twfactx_switchesainterruptsasoft_interruptsalineasyscallsTaprocfs_pathwfavaluesafieldsTaselfavaluesautimeastimeachildren_utimeachildren_stimeaiowaitTaselfactimeabtTaaddrafamilyaipaportTaperdiskaread_procfsaread_sysfsagenaretdictaentryanameareadsawritesarbytesawbytesartimeawtimeareads_mergedawrites_mergedabusy_timeTaallafstypesaprocfs_pathwfalineafstypeamounts_patharetlistapartitionsapartitionadeviceamountpointaoptsamaxfileamaxpathantupleTaselfwfadataTaflagsamodes_mapamodeTaselfapathaerrTaselfainodesapidTalinesacurrent_blockadataalineafieldsTaselfapidainodesafdainodeaerrTaselfa_gids_readataarealaeffectiveasavedTaselfafnameafieldswfalineanameavalueaerrTaselfaioclassavalueTaselfaioclassavalueamsgTanameaincluding_virtualapathTaselfaussapssaswapaerrabasic_memTaselfwfavmsarssasharedatextalibadataadirtyTaselfaget_blocksadataalinesalsafirst_lineacurrent_blockaheaderahfieldsaaddrapermsaoffsetadevainodeapathTapathsapatharetanullTanullTaselfanameTakindTaduplex_mapanamesaretanameamtuaflagsaduplexaspeedaerraoutput_flagsaisupTwfalinesaretdictalineacolonanameafieldsabytes_recvapackets_recvaerrinadropinafifoinaframeinacompressedinamulticastinabytes_sentapackets_sentaerroutadropoutafifooutacollisionsoutacarrieroutacompressedoutTaselfavalueTaselfa_ctxsw_readataactxswTaselfa_num_threads_readataT
aselfaretlistafilesahit_enoentafdafileapathaerrwfaposaflagsamodeantupleTaprocfs_pathacpuswfalineavaluesafieldsaentryTapidapathwfalineatgidTaretaprocfs_pathapidwfadataarparadsetappidTapidaresource_alimitsaStructRlimitacurrentaretanewaerrno_Tafileafamilyatype_ainodesafilter_pidwfalinenoalinew_aladdraraddrastatusainodeapidafdTafileafamilyainodesafilter_pidwfalineatokensw_atype_ainodeapairsapidafdapatharaddrastatusTwfalinesalineafieldsaflenanameareadsareads_mergedarbytesartimeawritesawrites_mergedawbytesawtimew_abusy_timeTablockarootw_afileswfafieldsanameareadsareads_mergedarbytesartimeawritesawrites_mergedawbytesawtimeabusy_timeTapathTaselfakindapidainodesaretaproto_nameafamilyatype_apathalsafdaladdraraddrastatusabound_pidaconnTaselfaresource_alimitsamsgaerrT
anullamulti_bcatabatsarootaenergy_nowapower_nowaenergy_fullatime_to_emptyapercentapower_pluggedaonlineastatusasecsleftTaretabasenamesabaseacurrentaerraunit_namealabelTaretabasenamesabasenames2areplanameaaltnameabaseapathacurrentaunit_nameahighacriticalalabelaerratrip_pathsatrip_pointsatrip_pointatrip_typeTaprocfs_pathwfavaluesafieldsavlenTaselfaletterTamemswfalineafieldsatotalafreew_aunit_multiplierausedapercentaerramsgasinasoutTaselfatty_nratmapTaselfathread_idsaretlistahit_enoentathread_idafnamewfastavaluesautimeastimeantupleTaselfa_uids_readataarealaeffectiveasavedTaretlistarawlistaitemauserattyahostnameatstampapidantTamissing_fieldsamemswfalineafieldsatotalafreeabuffersacachedasharedaactiveainactiveaslabausedaavailapercentamsgTaselfatimeoutTafunawrapperTaselfaargsakwargsafunTafun.psutil._psosxOacextavirtual_memutoo many values to unpack (expected 6)ausage_percentDaround_lasvmemuSystem virtual memory as a namedtuple.aswap_memutoo many values to unpack (expected 5)a_commonasswapuSwap system memory as a (total, used, free, sin, sout) tuple.acpu_timesutoo many values to unpack (expected 4)ascputimesuReturn system CPU times as a namedtuple.aper_cpu_timesaretaappenduReturn system CPU times as a named tuple.acpu_count_logicaluReturn the number of logical CPUs in the system.acpu_count_coresuReturn the number of CPU cores in the system.acpu_statsascpustatsacpu_frequtoo many values to unpack (expected 3)ascpufrequReturn CPU frequency.
    On macOS per-cpu frequency is not supported.
    Also, the returned frequency never changes, see:
    https://arstechnica.com/civis/viewtopic.php?f=19&t=465002.
    adisk_partitionsanoneuaosapathaisabsaexistsasdiskpartadevicearetlistuReturn mounted disk partitions as a list of namedtuples.asensors_batterylaPOWER_TIME_UNLIMITEDlaPOWER_TIME_UNKNOWNl<asbatteryuReturn battery information.apidsaProcessaconnectionsakindaNoSuchProcessasconnuSystem-wide network connections.anet_io_countersakeysacext_posixanet_if_mtuanet_if_flagsanet_if_duplex_speedutoo many values to unpack (expected 2)aerrnoaENODEVaNicDuplexaduplexw,aflagsarunningasnicstatsaspeedamtuuGet NIC stats (isup, duplex, speed, mtu).aboot_timeuThe system boot time expressed in seconds since the epoch.ausersw~asuseruReturn currently connected users as a list of namedtuples.lTlacreate_timeainsertTlpaAccessDeniedalsaproc_kinfo_oneshotakinfo_proc_mapastatusaSZOMBafunctoolsawrapsawrapperuwrap_exceptions.<locals>.wrapperuDecorator which translates bare OSError exceptions into
    NoSuchProcess and AccessDenied.
    afunaProcessLookupErrorais_zombieapidaZombieProcessa_namea_ppidaPermissionErroraproc_pidtaskinfo_oneshotapidtaskinfo_mapa_get_kinfo_procacache_activatea_get_pidtaskinfoacache_deactivateanameaproc_nameaproc_exeaproc_cmdlineaparse_environ_blockaproc_environappidaproc_cwdapuidsaruidaeuidasuidargidaegidasgidattynra_psposixaget_terminal_mapapmemarssavmsapfaultsapageinsamemory_infoaproc_memory_ussapfullmemapcputimesacpuutimeacpustimeZactimeavolctxswapctxswanumthreadsaproc_open_filesaisfile_strictapopenfileafilesaconn_tmapuinvalid %r kind argument; choose between %su, aproc_connectionsaconn_to_ntupleaTCP_STATUSESaproc_num_fdsawait_pidagetpriorityasetpriorityaPROC_STATUSESagetw?aproc_threadsapthreadumacOS platform implementation.a__doc__a__file__a__spec__aoriginahas_locationa__cached__acollectionsTanamedtupleanamedtupleTa_commonTa_psposixTa_psutil_osxa_psutil_osxTa_psutil_posixa_psutil_posixTaAccessDeniedTaNoSuchProcessTaZombieProcessTaconn_tmapTaconn_to_ntupleTaisfile_strictTamemoize_when_activatedamemoize_when_activatedTaparse_environ_blockTausage_percenta_compatTaPermissionErrorTaProcessLookupErrora__extra__all__agetpagesizeaPAGESIZEaAF_LINKaTCPS_ESTABLISHEDaCONN_ESTABLISHEDaTCPS_SYN_SENTaCONN_SYN_SENTaTCPS_SYN_RECEIVEDaCONN_SYN_RECVaTCPS_FIN_WAIT_1aCONN_FIN_WAIT1aTCPS_FIN_WAIT_2aCONN_FIN_WAIT2aTCPS_TIME_WAITaCONN_TIME_WAITaTCPS_CLOSEDaCONN_CLOSEaTCPS_CLOSE_WAITaCONN_CLOSE_WAITaTCPS_LAST_ACKaCONN_LAST_ACKaTCPS_LISTENaCONN_LISTENaTCPS_CLOSINGaCONN_CLOSINGaPSUTIL_CONN_NONEaCONN_NONEaSIDLaSTATUS_IDLEaSRUNaSTATUS_RUNNINGaSSLEEPaSTATUS_SLEEPINGaSSTOPaSTATUS_STOPPEDaSTATUS_ZOMBIEDappidaruidaeuidasuidargidaegidasgidattynractimeastatusanamelllllllllll
DacpuutimeacpustimearssavmsapfaultsapageinsanumthreadsavolctxswllllllllLauseraniceasystemaidleLatotalaavailableapercentausedafreeaactiveainactiveawiredLarssavmsapfaultsapageinsa_fieldsTaussavirtual_memoryaswap_memoryadisk_usageadisk_io_countersTFanet_if_addrsTainetanet_connectionsanet_if_statsapid_existsawrap_exceptionsupsutil._psosxa__module__uWrapper class around underlying C implementation.a__qualname__Lapida_namea_ppida_cachea__slots__a__init__uProcess.__init__uProcess._get_kinfo_procuProcess._get_pidtaskinfoaoneshot_enteruProcess.oneshot_enteraoneshot_exituProcess.oneshot_exituProcess.nameaexeuProcess.exeacmdlineuProcess.cmdlineaenvironuProcess.environuProcess.ppidacwduProcess.cwdauidsuProcess.uidsagidsuProcess.gidsaterminaluProcess.terminaluProcess.memory_infoamemory_full_infouProcess.memory_full_infouProcess.cpu_timesuProcess.create_timeanum_ctx_switchesuProcess.num_ctx_switchesanum_threadsuProcess.num_threadsaopen_filesuProcess.open_filesuProcess.connectionsanum_fdsuProcess.num_fdsTnawaituProcess.waitanice_getuProcess.nice_getanice_setuProcess.nice_setuProcess.statusathreadsuProcess.threadsTupsutil\_psosx.pyu<module psutil._psosx>Ta__class__TaselfapidTaselfaretTaselfTaselfakindafamiliesatypesarawlistaretaitemafdafamatypealaddraraddrastatusantTacurramin_amax_Tactx_switchesainterruptsasoft_interruptsasyscallsatrapsTaselfarawtupleTauseraniceasystemaidleTaallaretlistapartitionsapartitionadeviceamountpointafstypeaoptsamaxfileamaxpathantupleTapidastTaselfabasic_memaussTaselfanameTakindaretapidaconswcT
anamesaretanameamtuaflagsaduplexaspeedaerraoutput_flagsaisupTaselfavalueTaselfavolTaselfafilesarawlistapathafdantupleTaretacpu_tauseraniceasystemaidleaitemTalsTapercentaminsleftapower_pluggedasecsleftTaselfacodeTatotalausedafreeasinasoutapercentTaselfatty_nratmapTaselfarawlistaretlistathread_idautimeastimeantupleTaretlistarawlistaitemauserattyahostnameatstampapidantTatotalaactiveainactiveawiredafreeaspeculativeaavailausedapercentTaselfatimeoutTafunawrapperTaselfaargsakwargsafunTafun.psutil._psposixtlaosakillaProcessLookupErroraPermissionErroruCheck whether pid exists in the current process table.aNegsignaluConvert a negative signal value to an enum.ucan't wait for PID 0f-C6?aWNOHANGasleepuwait_pid.<locals>.sleepawaitpidapidaflagsutoo many values to unpack (expected 2)aInterruptedErroraintervalaChildProcessErrora_pid_existsaretpidaWIFEXITEDastatusaWEXITSTATUSaWIFSIGNALEDanegsig_to_enumaWTERMSIGuunknown process exit status %ruWait for a process PID to terminate.

    If the process terminated normally by calling exit(3) or _exit(2),
    or by returning from main(), the return value is the positive integer
    passed to *exit().

    If it was terminated by a signal it returns the negated value of the
    signal which caused the termination (e.g. -SIGTERM).

    If PID is not a children of os.getpid() (current process) just
    wait until the process disappears and return None.

    If PID does not exist at all return None immediately.

    If *timeout* != None and process is still alive raise TimeoutExpired.
    timeout=0 is also possible (either return immediately or raise).
    atimeouta_timerastop_ataTimeoutExpiredaproc_nameTapidanamea_sleepa_minlf{Gz?aPY3astatvfsapathaunicodeaencodeasysagetfilesystemencodingaf_blocksaf_frsizeaf_bfreeaf_bavailaMACOSa_psutil_osxadisk_usage_usedausage_percentDaround_lasdiskusageTatotalausedafreeapercentuReturn disk usage associated with path.
    Note: UNIX usually reserves 5% disk space which is not accessible
    by user. In this function "total" and "used" values reflect the
    total and used disk space whereas "free" and "percent" represent
    the "free" and "used percent" user disk space.
    aglobTu/dev/tty*Tu/dev/pts/*aretastatast_rdevaFileNotFoundErroruGet a map of device-id -> path as a dict.
    Used by Process.terminal().
    uRoutines common to all posix systems.a__doc__a__file__a__spec__aoriginahas_locationa__cached__asignalatimea_commonTaMACOSlTaTimeoutExpiredTamemoizeamemoizeTasdiskusageTausage_percenta_compatTaPY3TaChildProcessErrorTaFileNotFoundErrorTaInterruptedErrorTaPermissionErrorTaProcessLookupErrorTaunicodeuTa_psutil_osxaenumLapid_existsawait_pidadisk_usageaget_terminal_mapa__all__apid_existsaSignalsaIntEnumanameavalueamonotonicaminawait_pidadisk_usageaget_terminal_mapupsutil\_psposix.pyu<module psutil._psposix>Tapathastatotalaavail_to_rootaavail_to_userausedatotal_userausage_percent_userTaretalsanameTanumTapidTaintervalatimeouta_timerastop_atapidaproc_namea_sleepa_minTa_mina_sleepa_timerapidaproc_nameastop_atatimeoutTapidatimeoutaproc_namea_waitpida_timera_mina_sleepa_pid_existsamsgaintervalaflagsastop_atasleeparetpidastatus.psutil._pssunosKaosasysconfTaSC_PHYS_PAGESaPAGE_SIZETaSC_AVPHYS_PAGESausage_percentDaround_lasvmemuReport virtual memory metrics.acextaswap_memutoo many values to unpack (expected 2)asubprocessaPopenu/usr/bin/envuPATH=/usr/sbin:/sbin:%saenvironaPATHaswapu-laPIPETastdoutacommunicateaPY3adecodeaencodingareturncodelu'swap -l' failed (retcode=%s)astripasplitTw
:lnnuno swap device(s) configured:llnatotallafreea_commonasswapuReport swap memory metrics.aper_cpu_timesascputimesuReturn system-wide CPU times as a named tuple.uReturn system per-CPU times as a list of named tuples.TaSC_NPROCESSORS_ONLNuReturn the number of logical CPUs in the system.acpu_count_coresuReturn the number of CPU cores in the system.acpu_statsutoo many values to unpack (expected 4)ascpustatsuReturn various CPU stats as a named tuple.adisk_partitionsanoneuadisk_usageadebuguskipping %r: %sasdiskpartamountpointaretlistaappenduReturn system disk partitions.aconn_tmapacopylapopTaunixlacmapuinvalid %r kind argument; choose between %su, anet_connectionsutoo many values to unpack (expected 7)aAF_INETaAF_INET6aaddraTCP_STATUSESasockfam_to_enumasocktype_to_enumasconnapconnaretaadduReturn socket connections.  If pid == -1 return system-wide
    connections (as opposed to connections opened by one process only).
    Only INET sockets are returned (UNIX are not).
    anet_if_statsaitemsaNicDuplexasnicstatsuGet NIC stats (isup, duplex, speed, mtu).aboot_timeuThe system boot time expressed in seconds since the epoch.ausersutoo many values to unpack (expected 6)Tu:0.0u:0alocalhostasuseruReturn currently connected users as a list of namedtuples.wbaget_procfs_pathaisdigituReturns a list of PIDs currently running on the system.a_psposixapid_existsuCheck for the existence of a unix pid.afunctoolsawrapsawrapperuwrap_exceptions.<locals>.wrapperuCall callable into a try/except clause and translate ENOENT,
    EACCES and EPERM in NoSuchProcess or AccessDenied exceptions.
    afunaFileNotFoundErroraProcessLookupErrorapidaNoSuchProcessa_nameaZombieProcessa_ppidaPermissionErroraAccessDeniedapidsa_procfs_pathastatu%s/%suRaise NSP if the process disappeared on us.a_proc_name_and_argsacache_activatea_proc_basic_infoa_proc_credacache_deactivateaproc_name_and_argsu%s/%s/psinfoaproc_basic_infoaproc_info_mapaproc_credareadlinku%s/%s/path/a.outacmdlinelTw aproc_environacreate_timeanum_threadsaniceTllacext_posixasetpriorityappidauidaeuidapuidsagidaegidaproc_cpu_timesaerrnoaEOVERFLOWaIS_64_BITTZZZZapcputimesaproc_cpu_numawrap_exceptionsattynraPRNODEVTllllu%s/%d/path/%daselfahit_enoenta_assert_aliveu%s/%s/path/cwdarsslavmsapmemastatusaPROC_STATUSESagetw?u%s/%d/lwpaquery_process_threadaprocfs_pathaENOENTapthreadu%s/%d/pathu%s/%d/fdapathajoinapathdiraislinkaisfile_strictapopenfileuGet UNIX sockets used by process by parsing 'pfiles' output.apfilesTastdoutastderrupermission deniedaloweruno such processu%r command error
%s:lnnalstripastartswithTusockname: AF_UNIXTw llaSOCK_STREAMasocketaSOCK_DGRAMaAF_UNIXaCONN_NONEa_get_unix_socketsuProcess._get_unix_socketsasysastdoutu<genexpr>uProcess._get_unix_sockets.<locals>.<genexpr>Ta_pidTaallaunixaextendatoaddruProcess.memory_maps.<locals>.toaddraproc_memory_mapsTw[u%s/%s/path/%sanameu%s-%sTwLu%s/%s/fdapctxswaproc_num_ctx_switchesawait_piduSun OS Solaris platform implementation.a__doc__a__file__a__spec__aoriginahas_locationa__cached__acollectionsTanamedtupleanamedtupleTaAF_INETTa_commonTa_psposixTa_psutil_posixa_psutil_posixTa_psutil_sunosa_psutil_sunosTaAF_INET6TaAccessDeniedTaNoSuchProcessTaZombieProcessTadebugTaget_procfs_pathTaisfile_strictTamemoize_when_activatedamemoize_when_activatedTasockfam_to_enumTasocktype_to_enumTausage_percenta_compatTaPY3TaFileNotFoundErrorTaPermissionErrorTaProcessLookupErrorTwbaCONN_IDLEaCONN_BOUNDaPROCFS_PATHa__extra__all__agetpagesizeaAF_LINKaIDLEaBOUNDaSSLEEPaSTATUS_SLEEPINGaSRUNaSTATUS_RUNNINGaSZOMBaSTATUS_ZOMBIEaSSTOPaSTATUS_STOPPEDaSIDLaSTATUS_IDLEaSONPROCaSWAITaSTATUS_WAITINGaTCPS_ESTABLISHEDaCONN_ESTABLISHEDaTCPS_SYN_SENTaCONN_SYN_SENTaTCPS_SYN_RCVDaCONN_SYN_RECVaTCPS_FIN_WAIT_1aCONN_FIN_WAIT1aTCPS_FIN_WAIT_2aCONN_FIN_WAIT2aTCPS_TIME_WAITaCONN_TIME_WAITaTCPS_CLOSEDaCONN_CLOSEaTCPS_CLOSE_WAITaCONN_CLOSE_WAITaTCPS_LAST_ACKaCONN_LAST_ACKaTCPS_LISTENaCONN_LISTENaTCPS_CLOSINGaCONN_CLOSINGaPSUTIL_CONN_NONEaTCPS_IDLEaTCPS_BOUNDDappidarssavmsacreate_timeaniceanum_threadsastatusattynrauidaeuidagidaegidlllllllllll
lLauserasystemaidleaiowaitLauserasystemachildren_userachildren_systemLatotalaavailableapercentausedafreeapfullmemapmmap_groupedLapatharssaanonymousalockedapmmap_extuaddr perms w a_fieldsavirtual_memoryaswap_memoryacpu_timesacpu_count_logicaladisk_io_countersTFanet_io_countersanet_if_addrsTlupsutil._pssunosa__module__uWrapper class around underlying C implementation.aProcessa__qualname__Lapida_namea_ppida_procfs_patha_cachea__slots__a__init__uProcess.__init__uProcess._assert_aliveaoneshot_enteruProcess.oneshot_enteraoneshot_exituProcess.oneshot_exituProcess._proc_name_and_argsuProcess._proc_basic_infouProcess._proc_creduProcess.nameaexeuProcess.exeuProcess.cmdlineuProcess.environuProcess.create_timeuProcess.num_threadsanice_getuProcess.nice_getanice_setuProcess.nice_setuProcess.ppidauidsuProcess.uidsagidsuProcess.gidsuProcess.cpu_timesacpu_numuProcess.cpu_numaterminaluProcess.terminalacwduProcess.cwdamemory_infouProcess.memory_infoamemory_full_infouProcess.statusathreadsuProcess.threadsaopen_filesuProcess.open_filesTainetaconnectionsuProcess.connectionsTammapupath rss anon lockedant_mmap_groupedTammapuaddr perms path rss anon lockedant_mmap_extamemory_mapsuProcess.memory_mapsanum_fdsuProcess.num_fdsanum_ctx_switchesuProcess.num_ctx_switchesTnawaituProcess.waitTupsutil\_pssunos.pyTa.0wxu<module psutil._pssunos>Ta__class__TaselfapidTaselfTaselfapidacmdwpastdoutastderralineswialineapathatypeTaselfaretTaselfakindaretTactx_switchesainterruptsasyscallsatrapsasoft_interruptsTaretTaselfatimesaerrTaselfaprocfs_pathTaallaretlistapartitionsapartitionadeviceamountpointafstypeaoptsaerramaxfileamaxpathantupleTaselfw_arealaeffectiveasavedTaselfaretarssavmsTaselfatoaddraprocfs_patharetlistarawlistaerrahit_enoentaitemaaddraaddrsizeapermanamearssaanonalockedTakinda_pidacmapafamiliesatypesarawlistaretaitemafdafamatype_aladdraraddrastatusapidantTaretanameaitemsaisupaduplexaspeedamtuTaselfavalueTaselfaretlistahit_enoentaprocfs_pathapathdirafdapathafileTapidTaselfacodeTasinasoutwpastdoutw_alinesamsgatotalafreealinewtwfausedapercentTaselfaprocfs_pathahit_enoentattywxT
aselfaprocfs_patharetatidsahit_enoentatidautimeastimeaerrantTastartaendTaselfarealaeffectiveasavedw_Taretlistarawlistalocalhostaitemauserattyahostnameatstampauser_processapidantTatotalafreeaavailausedapercentTaselfatimeoutTafunawrapperTaselfaargsakwargsafunTafun.psutil._pswindows2Fw\asplitTw\:nlnacextaQueryDosDeviceajoinuConvert paths using native DOS format like:
        "\Device\HarddiskVolume1\Windows\systemew\file.txt"
    into:
        "C:\Windows\systemew\file.txt".
    aPY3aencodeaENCODINGaENCODING_ERRSuEncode a unicode string to a byte string by using the default fs
    encoding + "replace" error handler.
    agetpagesizeavirtual_memutoo many values to unpack (expected 4)ausage_percentDaround_lasvmemuSystem virtual memory as a namedtuple.llaswap_percentf{Gz?Zaroundapercentswapla_commonasswapuSwap system memory as a (total, used, free, sin, sout) tuple.adecodeDaerrorsastrictadisk_usageutoo many values to unpack (expected 2)asdiskusageuReturn disk usage associated with path.adisk_partitionsasdiskpartuReturn disk partitions.acpu_timesutoo many values to unpack (expected 3)ascputimesaper_cpu_timesainterruptadpcuReturn system CPU times as a named tuple.utoo many values to unpack (expected 5)aretaappenduReturn system per-CPU times as a list of named tuples.acpu_count_logicaluReturn the number of logical CPUs in the system.acpu_count_coresuReturn the number of CPU cores in the system.acpu_statsascpustatsuReturn CPU statistics.acpu_freqascpufrequReturn CPU frequency.
    On Windows per-cpu frequency is not supported.
    a_loadavg_inititializedainit_loadavg_counteragetloadavguReturn the number of processes in the system run queue averaged
    over the last 1, 5, and 15 minutes respectively as a tuple.
    aconn_tmapuinvalid %r kind argument; choose between %su, anet_connectionsutoo many values to unpack (expected 7)aconn_to_ntupleaTCP_STATUSESlTapidaadduReturn socket connections.  If pid == -1 return system-wide
    connections (as opposed to connections opened by one process only).
    anet_if_statsaitemsaunicodeapy2_strencodeaNicDuplexasnicstatsuuGet NIC stats (isup, duplex, speed, mtu).anet_io_countersuReturn network I/O statistics for every network interface
    installed on the system as a dict of raw tuples.
    anet_if_addrsuReturn the addresses associated to each NIC.asensors_batteryllaPOWER_TIME_UNLIMITEDaPOWER_TIME_UNKNOWNasbatteryuReturn battery information.aboot_timea_last_btimeuThe system boot time expressed in seconds since the epoch.ausersasuseraretlistuReturn currently connected users as a list of namedtuples.uYields a list of WindowsService instances.awinservice_enumerateaWindowsServiceawin_service_itera_query_configadisplay_namea_display_nameuOpen a Windows service and return it as a WindowsService instance.a_nameu(name=%r, display_name=%r)u%s%sa__name__u<%s at %s>a__str__a_wrap_exceptionsa__enter__a__exit__awinservice_query_configTnnnabinpathausernameastart_typeawinservice_query_statusapidastatusuCtx manager which translates bare OSError and WindowsError
        exceptions into NoSuchProcess and AccessDenied.
        ais_permission_erraAccessDeniedaselfuservice %r is not querable (not enough privileges)TapidanameamsgawinerroraERROR_INVALID_NAMEaERROR_SERVICE_DOES_NOT_EXISTaNoSuchProcessuservice %r does not exist)uWindowsService._wrap_exceptionsuThe service name. This string is how a service is referenced
        and can be passed to win_service_get() to get a new
        WindowsService instance.
        uThe service display name. The value is cached when this class
        is instantiated.
        uThe fully qualified path to the service binary/exe file as
        a string, including command line arguments.
        uThe name of the user that owns this service.uA string which can either be "automatic", "manual" or
        "disabled".
        a_query_statusuThe process PID, if any, else None. This can be passed
        to Process class to control the service's process.
        uService status as a string.awinservice_query_descranameuService long description.aupdateadescriptionuUtility method retrieving all the information above as a
        dictionary.
        aerrnoaEPERMaEACCESaERROR_ACCESS_DENIEDaERROR_PRIVILEGE_NOT_HELDuReturn True if this is a permission error.TapidanameaESRCHuConvert OSError into NoSuchProcess or AccessDenied.afunctoolsawrapsawrapperuwrap_exceptions.<locals>.wrapperuDecorator which converts OSError into NoSuchProcess or AccessDenied.afunaconvert_oserroruretry_error_partial_copy.<locals>.wrapperuWorkaround for https://github.com/giampaolo/psutil/issues/875.
    See: https://stackoverflow.com/questions/4457745#4457745.
    f-C6?arangeTl!aERROR_PARTIAL_COPYatimeasleepadelayaminf{Gz?u{} retried {} times, converted to AccessDenied as it's still returning {}l!aerra_ppida_proc_infoacache_activateaexeacache_deactivateaproc_infoapinfo_mapuReturn multiple information about this process as a
        raw tuple.
        uSystem Idle ProcesslaSystemuReturn process name, which on Windows is always the final
        part of the executable.
        aPYPYaproc_exeladebugu%r translated into AccessDeniedastartswithaconvert_dos_pathaWINVERaWINDOWS_8_1aproc_cmdlineDause_pebtDause_pebFaproc_environaparse_environ_blockappid_mapaproc_memory_infoanum_page_faultsapeak_wsetawsetapeak_paged_poolapaged_poolapeak_non_paged_poolanon_paged_poolapagefileapeak_pagefileamem_privatea_get_raw_meminfolapmemamemory_infoaproc_memory_ussapfullmemaproc_memory_mapsamemory_mapsuProcess.memory_mapsaproc_killasignalaSIGTERMaCTRL_C_EVENTaCTRL_BREAK_EVENTaosakilluonly SIGTERM, CTRL_C_EVENT and CTRL_BREAK_EVENT signals are supported on WindowsaINFINITElamonotonicatimeoutaproc_waitaTimeoutExpiredaTimeoutAbandonedapid_existsatimerTlluNT AUTHORITY\SYSTEMaproc_usernameaproc_timesacreate_timeanum_threadsaproc_threadsapthreadauser_timeakernel_timeapcputimesaproc_suspend_or_resumeaproc_cwdanormpathaproc_open_filesaisfile_strictapopenfilea_fileTa_pidaproc_priority_getaenumaPriorityaproc_priority_setaproc_io_priority_getaIOPriorityuvalue argument not accepted on WindowsaIOPRIO_VERYLOWaIOPRIO_LOWaIOPRIO_NORMALaIOPRIO_HIGHu%s is not a valid priorityaproc_io_priority_setaproc_io_countersaio_rcountaio_wcountaio_rbytesaio_wbytesaio_count_othersaio_bytes_othersapioaproc_is_suspendedaSTATUS_STOPPEDaSTATUS_RUNNINGafrom_bitmaskuProcess.cpu_affinity_get.<locals>.from_bitmaskaproc_cpu_affinity_getTl@wxato_bitmaskuProcess.cpu_affinity_set.<locals>.to_bitmaskalonguinvalid CPU %r; an integer is requireduinvalid CPU %raproc_cpu_affinity_setuinvalid argument %raoutaproc_num_handlesanum_handlesactx_switchesapctxswuWindows platform implementation.a__doc__a__file__a__spec__aoriginahas_locationa__cached__acontextlibasysacollectionsTanamedtupleanamedtupleTa_commonTaENCODINGTaENCODING_ERRSTaAccessDeniedTaNoSuchProcessTaTimeoutExpiredTaconn_tmapTaconn_to_ntupleTadebugTaisfile_strictTamemoizeamemoizeTamemoize_when_activatedamemoize_when_activatedTaparse_environ_blockTausage_percenta_compatTaPY3TalongTalru_cachealru_cacheTarangeTaunicodea_psutil_windowsTaABOVE_NORMAL_PRIORITY_CLASSaABOVE_NORMAL_PRIORITY_CLASSTaBELOW_NORMAL_PRIORITY_CLASSaBELOW_NORMAL_PRIORITY_CLASSTaHIGH_PRIORITY_CLASSaHIGH_PRIORITY_CLASSTaIDLE_PRIORITY_CLASSaIDLE_PRIORITY_CLASSTaNORMAL_PRIORITY_CLASSaNORMAL_PRIORITY_CLASSTaREALTIME_PRIORITY_CLASSaREALTIME_PRIORITY_CLASSTa_psutil_windowsalowerTudll load failedagetwindowsversionluthis Windows version is too old (< Windows Vista); amsgupsutil 3.4.2 is the latest version which supports Windows u2000, XP and 2003 serverLawin_service_iterawin_service_getaABOVE_NORMAL_PRIORITY_CLASSaBELOW_NORMAL_PRIORITY_CLASSaHIGH_PRIORITY_CLASSaIDLE_PRIORITY_CLASSaNORMAL_PRIORITY_CLASSaREALTIME_PRIORITY_CLASSaIOPRIO_VERYLOWaIOPRIO_LOWaIOPRIO_NORMALaIOPRIO_HIGHaCONN_DELETE_TCBaAF_LINKa__extra__all__aDELETE_TCBaCONN_DELETE_TCBl+aAF_LINKaIntEnumaAddressFamilyDaAF_LINKlaMIB_TCP_STATE_ESTABaCONN_ESTABLISHEDaMIB_TCP_STATE_SYN_SENTaCONN_SYN_SENTaMIB_TCP_STATE_SYN_RCVDaCONN_SYN_RECVaMIB_TCP_STATE_FIN_WAIT1aCONN_FIN_WAIT1aMIB_TCP_STATE_FIN_WAIT2aCONN_FIN_WAIT2aMIB_TCP_STATE_TIME_WAITaCONN_TIME_WAITaMIB_TCP_STATE_CLOSEDaCONN_CLOSEaMIB_TCP_STATE_CLOSE_WAITaCONN_CLOSE_WAITaMIB_TCP_STATE_LAST_ACKaCONN_LAST_ACKaMIB_TCP_STATE_LISTENaCONN_LISTENaMIB_TCP_STATE_CLOSINGaCONN_CLOSINGaMIB_TCP_STATE_DELETE_TCBaPSUTIL_CONN_NONEaCONN_NONEa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upsutil._pswindowsa__module__a__qualname__a__orig_bases__a__members__lDanum_handlesactx_switchesauser_timeakernel_timeacreate_timeanum_threadsaio_rcountaio_wcountaio_rbytesaio_wbytesaio_count_othersaio_bytes_othersanum_page_faultsapeak_wsetawsetapeak_paged_poolapaged_poolapeak_non_paged_poolanon_paged_poolapagefileapeak_pagefileamem_privatelllllllllll
lll
llllllllLauserasystemaidleainterruptadpcLatotalaavailableapercentausedafreeLarssavmsanum_page_faultsapeak_wsetawsetapeak_paged_poolapaged_poolapeak_nonpaged_poolanonpaged_poolapagefileapeak_pagefileaprivatea_fieldsTaussapmmap_groupedapatharssapmmap_extuaddr perms w Laread_countawrite_countaread_bytesawrite_bytesaother_countaother_bytesTlTamaxsizeavirtual_memoryaswap_memoryadisk_io_countersTlawin_service_getuRepresents an installed Windows service.a__init__uWindowsService.__init__uWindowsService.__str__a__repr__uWindowsService.__repr__a__eq__uWindowsService.__eq__a__ne__uWindowsService.__ne__uWindowsService._query_configuWindowsService._query_statusacontextmanageruWindowsService.nameuWindowsService.display_nameuWindowsService.binpathuWindowsService.usernameuWindowsService.start_typeuWindowsService.piduWindowsService.statusuWindowsService.descriptionaas_dictuWindowsService.as_dictTapidsTnnawrap_exceptionsaretry_error_partial_copyuWrapper class around underlying C implementation.aProcessLapida_namea_ppida_cachea__slots__uProcess.__init__aoneshot_enteruProcess.oneshot_enteraoneshot_exituProcess.oneshot_exituProcess._proc_infouProcess.nameuProcess.exeacmdlineuProcess.cmdlineaenvironuProcess.environappiduProcess.ppiduProcess._get_raw_meminfouProcess.memory_infoamemory_full_infouProcess.memory_full_infouProcess.killasend_signaluProcess.send_signalTnawaituProcess.waituProcess.usernameuProcess.create_timeuProcess.num_threadsathreadsuProcess.threadsuProcess.cpu_timesasuspenduProcess.suspendaresumeuProcess.resumeacwduProcess.cwdaopen_filesuProcess.open_filesTainetaconnectionsuProcess.connectionsanice_getuProcess.nice_getanice_setuProcess.nice_setaionice_getuProcess.ionice_getaionice_setuProcess.ionice_setaio_countersuProcess.io_countersuProcess.statusacpu_affinity_getuProcess.cpu_affinity_getacpu_affinity_setuProcess.cpu_affinity_setuProcess.num_handlesanum_ctx_switchesuProcess.num_ctx_switchesupsutil\_pswindows.pyu<module psutil._pswindows>Ta__class__TaselfaotherTaselfanameadisplay_nameTaselfapidTaselfTaselfadetailsTaselfaerrainfoTaselfaretTaselfadisplay_nameabinpathausernameastart_typeTaselfastatusapidTaselfaerrTaselfwdTaretTaselfaretaerrTaselfakindTwsarawdriveadriveletteraremainderTaexcapidanameTaselfafrom_bitmaskabitmaskTaselfavalueato_bitmaskaallcpusacpuabitmaskTacurramax_amin_Tactx_switchesainterruptsadpcsasyscallsasoft_interruptsTaselfauserasystemacreatedaerrainfoTauserasystemaidleapercpu_summedTaselfauserasystemacreatedaerrTaselfapathTaallarawlistTapathatotalafreeausedapercentTaselfaustrTaselfaexeaerrTwxTaraw_loadsTaselfaretaerrainfoTaselfaioclassavalueamsgTaexcTaselfabasic_memaussTaselfwtarssavmsTaselfarawaerraaddrapermapatharssTakinda_pidafamiliesatypesarawlistaretaitemafdafamatypealaddraraddrastatusapidantTaretaitemsTaretarawdictanameaitemsaisupaduplexaspeedamtuTaselfavalueTaselfactx_switchesTaselfaretaraw_file_namesa_fileantupleTaretauserasystemaidleainterruptadpcaitemTwsTafunawrapperTaselfasigamsgTaacline_statusaflagsapercentasecsleftapower_pluggedano_batteryachargingTaselfasuspendedTamematotal_physatotal_systematotalapercentswapausedafreeapercentTaselfarawlistaretlistathread_idautimeastimeantupleTalsaoutwbTaselfadomainauserTaretlistarawlistaitemauserahostnameatstampantT
amematotphysaavailphysatotsysaavailsysatotalaavailafreeausedapercentTaselfatimeoutacext_timeoutatimerastop_ataexit_codeadelayTanameaserviceTanameadisplay_nameTaselfaargsakwargsadelayatimesw_aerramsgafunTafunTaselfaargsakwargsaerrafun.psutilapidsa_psplatformaProcessappidaretaNoSuchProcessaZombieProcessuReturn a {pid: ppid, ...} dict for all running processes in
        one shot. Used to speed up Process.children().
        atimelQu%H:%M:%Su%Y-%m-%d %H:%M:%SadatetimeafromtimestampastrftimeuFormat seconds in a human readable form.a_initaosagetpida_PY3alongupid must be an integer (got %r)lupid must be a positive integer (got %s)acextacheck_pid_rangeuprocess PID out of range (got %s)Tamsgapida_pida_namea_exea_create_timea_gonea_pid_reuseda_hashathreadingaRLocka_locka_ppida_proca_last_sys_cpu_timesa_last_proc_cpu_timesa_SENTINELa_exitcodeacreate_timeaAccessDeniedDamsguprocess PID not founda_identacollectionsaOrderedDictanameaoneshota__enter__a__exit__astatusazombieaterminatedaexitcodea_pprint_secsastartedu%s.%s(%s)a__module__a__name__u, aitemsutoo many values to unpack (expected 2)u%s=%rTnnnaOPENBSDaNETBSDaSTATUS_ZOMBIEaErroraselfaotherais_runningDamsguprocess no longer exists and its PID has been reuseduRaises NoSuchProcess in case process PID has been reused.uThe process PID.uUtility context manager which considerably speeds up the
        retrieval of multiple process information at the same time.

        Internally different process info (e.g. name, ppid, uids,
        gids, ...) may be fetched by using the same routine, but
        only one information is returned and the others are discarded.
        When using this context manager the internal routine is
        executed once (in the example below on name()) and the
        other info are cached.

        The cache is cleared when exiting the context manager block.
        The advice is to use this every time you retrieve more than
        one information about the process. If you're lucky, you'll
        get a hell of a speedup.

        >>> import psutil
        >>> p = psutil.Process()
        >>> with p.oneshot():
        ...     p.name()  # collect multiple info
        ...     p.cpu_times()  # return cached value
        ...     p.cpu_percent()  # return cached value
        ...     p.create_time()  # return cached value
        ...
        >>>
        a_cacheacpu_timesacache_activateamemory_infoaPOSIXauidsaoneshot_enteracache_deactivateaoneshot_exituProcess.oneshota_as_dict_attrnamesTOlistOtupleOsetOfrozensetuinvalid attrs type %suinvalid attr name%s %swsuarepraattrsavalid_namesaad_valuearetdictuUtility method returning process information as a
        hashable dictionary.
        If *attrs* is specified it must be a list of strings
        reflecting available Process class' attribute names
        (e.g. ['cpu_times', 'name']) else all public (read
        only) attributes are assumed.
        *ad_value* is the value which gets assigned in case
        AccessDenied or ZombieProcess exception is raised when
        retrieving that particular process information.
        a_LOWEST_PIDuReturn the parent process as a Process object pre-emptively
        checking whether PID has been reused.
        If no parent is known return None.
        aparentaprocaparentsaappenduReturn the parents of this process as a list of Process
        instances. If no parents are known return an empty list.
        uReturn whether this process is running.
        It also checks if PID has been reused by another process in
        which case return False.
        a_raise_if_pid_reuseduThe process parent PID.
        On Windows the return value is cached after first call.
        aWINDOWSacmdlineastartswithuThe process name. The return value is cached after first call.aguess_ituProcess.exe.<locals>.guess_itaexeTafallbackuThe process executable as an absolute path.
        May also be an empty string.
        The return value is cached after first call.
        aaccessaX_OKaisabsuThe command line this process has been called with.uThe process current status as a STATUS_* constant.apwdurequires pwd module shipped with standard pythonarealagetpwuidapw_nameausernameuThe name of the user that owns the process.
        On UNIX this is calculated by using *real* process uid.
        uThe process creation time as a floating point number
        expressed in seconds since the epoch.
        The return value is cached after first call.
        acwduProcess current working directory as an absolute path.anice_getanice_setuGet or set process niceness (priority).uReturn process UIDs as a (real, effective, saved)
            namedtuple.
            agidsuReturn process GIDs as a (real, effective, saved)
            namedtuple.
            aterminaluThe terminal associated with this process, if any,
            else None.
            anum_fdsuReturn the number of file descriptors opened by this
            process (POSIX only).
            aio_countersuReturn process I/O statistics as a
            (read_count, write_count, read_bytes, write_bytes)
            namedtuple.
            Those are the number of read/write calls performed and the
            amount of bytes read and written by the process.
            u'ioclass' argument must be specifiedaionice_getaionice_setuGet or set process I/O niceness (priority).

            On Linux *ioclass* is one of the IOPRIO_CLASS_* constants.
            *value* is a number which goes from 0 to 7. The higher the
            value, the lower the I/O priority of the process.

            On Windows only *ioclass* is used and it can be set to 2
            (normal), 1 (low) or 0 (very low).

            Available on Linux and Windows > Vista only.
            arlimituGet or set process resource limits as a (soft, hard)
            tuple.

            *resource* is one of the RLIMIT_* constants.
            *limits* is supposed to be a (soft, hard) tuple.

            See "man prlimit" for further info.
            Available on Linux and FreeBSD only.
            asortedacpu_affinity_geta_get_eligible_cpusTtTapercpuacpu_affinity_setuGet or set process CPU affinity.
            If specified, *cpus* must be a list of CPUs for which you
            want to set the affinity (e.g. [0, 1]).
            If an empty list is passed, all egible CPUs are assumed
            (and set).
            (Windows, Linux and BSD only).
            acpu_numuReturn what CPU this process is currently running on.
            The returned number should be <= psutil.cpu_count()
            and <= len(psutil.cpu_percent(percpu=True)).
            It may be used in conjunction with
            psutil.cpu_percent(percpu=True) to observe the system
            workload distributed across CPUs.
            aenvironuThe environment variables of the process as a dict.  Note: this
            might not reflect changes made after the process started.
            anum_handlesuReturn the number of handles opened by this process
            (Windows only).
            anum_ctx_switchesuReturn the number of voluntary and involuntary context
        switches performed by this process.
        anum_threadsuReturn the number of threads used by this process.athreadsuReturn threads opened by process as a list of
            (id, user_time, system_time) namedtuples representing
            thread id and thread CPU times (user/system).
            On OpenBSD this method requires root access.
            a_ppid_mapadefaultdictTOlistastackapopaseenaadduReturn the children of this process as a list of Process
        instances, pre-emptively checking whether PID has been reused.
        If *recursive* is True return all the parent descendants.

        Example (A == this process):

         A ─┐
            │
            ├─ B (child) ─┐
            │             └─ X (grandchild) ─┐
            │                                └─ Y (great grandchild)
            ├─ C (child)
            └─ D (child)

        >>> import psutil
        >>> p = psutil.Process()
        >>> p.children()
        B, C, D
        >>> p.children(recursive=True)
        B, X, Y, C, D

        Note that in the example above if process X disappears
        process Y won't be listed as the reference to process A
        is lost.
        Zuinterval is not positive (got %r)acpu_countlatimeruProcess.cpu_percent.<locals>.timerasleepauserasystemldanum_cpusarounduReturn a float representing the current process CPU
        utilization as a percentage.

        When *interval* is 0.0 or None (default) compares process times
        to system CPU times elapsed since last call, returning
        immediately (non-blocking). That means that the first time
        this is called it will return a meaningful 0.0 value.

        When *interval* is > 0.0 compares process times to system CPU
        times elapsed before and after the interval (blocking).

        In this case is recommended for accuracy that this function
        be called with at least 0.1 seconds between calls.

        A value > 100.0 can be returned in case of processes running
        multiple threads on different CPU cores.

        The returned value is explicitly NOT split evenly between
        all available logical CPUs. This means that a busy loop process
        running on a system with 2 logical CPUs will be reported as
        having 100% CPU utilization instead of 50%.

        Examples:

          >>> import psutil
          >>> p = psutil.Process(os.getpid())
          >>> # blocking
          >>> p.cpu_percent(interval=1)
          2.0
          >>> # non-blocking (percentage since last call)
          >>> p.cpu_percent(interval=None)
          2.9
          >>>
        a_timeruReturn a (user, system, children_user, children_system)
        namedtuple representing the accumulated process time, in
        seconds.
        This is similar to os.times() but per-process.
        On macOS and Windows children_user and children_system are
        always set to 0.
        uReturn a namedtuple with variable fields depending on the
        platform, representing memory information about the process.

        The "portable" fields available on all platforms are `rss` and `vms`.

        All numbers are expressed in bytes.
        amemory_full_infouThis method returns the same information as memory_info(),
        plus, on some platform (Linux, macOS, Windows), also provides
        additional metrics (USS, PSS and swap).
        The additional metrics provide a better representation of actual
        process memory usage.

        Namely USS is the memory which is unique to a process and which
        would be freed if the process was terminated right now.

        It does so by passing through the whole process address.
        As such it usually requires higher user privileges than
        memory_info() and is considerably slower.
        apfullmema_fieldsuinvalid memtype %r; valid types are %rapmema_TOTAL_PHYMEMavirtual_memoryatotalucan't calculate process memory percent because total physical system memory is not positive (%r)uCompare process memory to total physical system memory and
        calculate process memory utilization as a percentage.
        *memtype* argument is a string that dictates what type of
        process memory you want to compare against (defaults to "rss").
        The list of available strings can be obtained like this:

        >>> psutil.Process().memory_info()._fields
        ('rss', 'vms', 'shared', 'text', 'lib', 'data', 'dirty', 'uss', 'pss')
        amemory_mapsl:lnnu<lambda>uProcess.memory_maps.<locals>.<lambda>wdapmmap_groupedapmmap_extuReturn process' mapped memory regions as a list of namedtuples
            whose fields are variable depending on the platform.

            If *grouped* is True the mapped regions with the same 'path'
            are grouped together and the different memory fields are summed.

            If *grouped* is False every mapped region is shown as a single
            entity and the namedtuple will also include the mapped region's
            address space ('addr') and permission set ('perms').
            aopen_filesuReturn files opened by process as a list of
        (path, fd) namedtuples including the absolute file name
        and file descriptor number.
        aconnectionsuReturn socket connections opened by process as a list of
        (fd, family, type, laddr, raddr, status) namedtuples.
        The *kind* parameter filters for connections that match the
        following criteria:

        +------------+----------------------------------------------------+
        | Kind Value | Connections using                                  |
        +------------+----------------------------------------------------+
        | inet       | IPv4 and IPv6                                      |
        | inet4      | IPv4                                               |
        | inet6      | IPv6                                               |
        | tcp        | TCP                                                |
        | tcp4       | TCP over IPv4                                      |
        | tcp6       | TCP over IPv6                                      |
        | udp        | UDP                                                |
        | udp4       | UDP over IPv4                                      |
        | udp6       | UDP over IPv6                                      |
        | unix       | UNIX socket (both UDP and TCP protocols)           |
        | all        | the sum of all the possible families and protocols |
        +------------+----------------------------------------------------+
        upreventing sending signal to process with PID 0 as it would affect every process in the process group of the calling process (os.getpid()) instead of PID 0akillaProcessLookupErrorapid_existsaPermissionErrora_send_signalasignalaSIGTERMDamsguprocess no longer existsasend_signaluSend a signal *sig* to process pre-emptively checking
        whether PID has been reused (see signal module constants) .
        On Windows only SIGTERM is valid and is treated as an alias
        for kill().
        aSIGSTOPasuspenduSuspend process execution with SIGSTOP pre-emptively checking
        whether PID has been reused.
        On Windows this has the effect of suspending all process threads.
        aSIGCONTaresumeuResume process execution with SIGCONT pre-emptively checking
        whether PID has been reused.
        On Windows this has the effect of resuming all process threads.
        uTerminate the process with SIGTERM pre-emptively checking
        whether PID has been reused.
        On Windows this is an alias for kill().
        aSIGKILLuKill the current process with SIGKILL pre-emptively checking
        whether PID has been reused.
        utimeout must be a positive integerawaituWait for process to terminate and, if process is a children
        of os.getpid(), also return its exit code, else None.
        On Windows there's no such limitation (exit code is always
        returned).

        If the process is already terminated immediately return None
        instead of raising NoSuchProcess.

        If *timeout* (in seconds) is specified and process is still
        alive raise TimeoutExpired.

        To wait for multiple Process(es) use psutil.wait_procs().
        asubprocessaPopena_Popen__subprocDa_ignore_nsptastdoutacloseastderrastdina__getattribute__u%s instance has no attribute '%s'areturncodeuReturn a list of current running PIDs.uReturn True if given PID exists in the current process list.
    This is faster than doing "pid in psutil.pids()" and
    should be preferred.
    uReturn a generator yielding a Process instance for all
    running processes.

    Every new Process instance is only created once and then cached
    into an internal table which is updated every time this is used.

    Cached Process instances are checked for identity so that you're
    safe in case a PID has been reused by another process, in which
    case the cached instance is updated.

    The sorting order in which processes are yielded is based on
    their PIDs.

    *attrs* and *ad_value* have the same meaning as in
    Process.as_dict(). If *attrs* is specified as_dict() is called
    and the resulting dict is stored as a 'info' attribute attached
    to returned Process instance.
    If *attrs* is an empty list it will retrieve all process info
    (slow).
    uprocess_iter.<locals>.addaremoveuprocess_iter.<locals>.removea_pmapacopyakeysaas_dictTaattrsaad_valueainfoapmapaprocess_iteracheck_goneuwait_procs.<locals>.check_goneutimeout must be a positive integer, got %sacallbackacallableucallback <built-in function callable> is not a callableaaliveatimeoutf?aminadeadlineagoneuConvenience function which waits for a list of processes to
    terminate.

    Return a (gone, alive) tuple indicating which processes
    are gone and which ones are still alive.

    The gone ones will have a new *returncode* attribute indicating
    process exit status (may be None).

    *callback* is a function which gets called every time a process
    terminates (a Process instance is passed as callback argument).

    Function will return as soon as all processes terminate or when
    *timeout* occurs.
    Differently from Process.wait() it will not raise TimeoutExpired if
    *timeout* occurs.

    Typical use case is:

     - send SIGTERM to a list of processes
     - give them some time to terminate
     - send SIGKILL to those ones which are still alive

    Example:

    >>> def on_terminate(proc):
    ...     print("process {} terminated".format(proc))
    ...
    >>> for p in procs:
    ...    p.terminate()
    ...
    >>> gone, alive = wait_procs(procs, timeout=3, callback=on_terminate)
    >>> for p in alive:
    ...     p.kill()
    TatimeoutaTimeoutExpireda_SubprocessTimeoutExpiredacpu_count_logicalacpu_count_coresuReturn the number of logical CPUs in the system (same as
    os.cpu_count() in Python 3.4).

    If *logical* is False return the number of physical cores only
    (e.g. hyper thread CPUs are excluded).

    Return None if undetermined.

    The return value is cached after first call.
    If desired cache can be cleared like this:

    >>> psutil.cpu_count.cache_clear()
    aper_cpu_timesuReturn system-wide CPU times as a namedtuple.
    Every CPU time represents the seconds the CPU has spent in the
    given mode. The namedtuple's fields availability varies depending on the
    platform:

     - user
     - system
     - idle
     - nice (UNIX)
     - iowait (Linux)
     - irq (Linux, FreeBSD)
     - softirq (Linux)
     - steal (Linux >= 2.6.11)
     - guest (Linux >= 2.6.24)
     - guest_nice (Linux >= 3.2.0)

    When *percpu* is True return a list of namedtuples for each CPU.
    First element of the list refers to first CPU, second element
    to second CPU and so on.
    The order of the list is consistent across calls.
    aLINUXaguestaguest_niceuGiven a cpu_time() ntuple calculates the total CPU time
    (including idle time).
    a_cpu_tot_timeaidleaiowaituGiven a cpu_time() ntuple calculates the busy CPU time.
    We do so by subtracting all idle CPU times.
    ascputimesamaxafield_deltasacurrent_threadaidentacalculateucpu_percent.<locals>.calculatea_last_cpu_timesagetatida_last_per_cpu_timesuReturn a float representing the current system-wide CPU
    utilization as a percentage.

    When *interval* is > 0.0 compares system CPU times elapsed before
    and after the interval (blocking).

    When *interval* is 0.0 or None compares system CPU times elapsed
    since last call or module import, returning immediately (non
    blocking). That means the first time this is called it will
    return a meaningless 0.0 value which you should ignore.
    In this case is recommended for accuracy that this function be
    called with at least 0.1 seconds between calls.

    When *percpu* is True returns a list of floats representing the
    utilization as a percentage for each CPU.
    First element of the list refers to first CPU, second element
    to second CPU and so on.
    The order of the list is consistent across calls.

    Examples:

      >>> # blocking, system-wide
      >>> psutil.cpu_percent(interval=1)
      2.0
      >>>
      >>> # blocking, per-cpu
      >>> psutil.cpu_percent(interval=1, percpu=True)
      [2.0, 1.0]
      >>>
      >>> # non-blocking (percentage since last call)
      >>> psutil.cpu_percent(interval=None)
      2.9
      >>>
    a_cpu_times_deltasa_cpu_busy_timeucpu_times_percent.<locals>.calculatea_last_cpu_times_2a_last_per_cpu_times_2uSame as cpu_percent() but provides utilization percentages
    for each specific CPU time as is returned by cpu_times().
    For instance, on Linux we'll get:

      >>> cpu_times_percent()
      cpupercent(user=4.8, nice=0.0, system=4.8, idle=90.5, iowait=0.0,
                 irq=0.0, softirq=0.0, steal=0.0, guest=0.0, guest_nice=0.0)
      >>>

    *interval* and *percpu* arguments have the same meaning as in
    cpu_percent().
    fY@ascaleanumsacpu_statsuReturn CPU statistics.acpu_freqTZZZutoo many values to unpack (expected 3)acurrsacurrentaminsamaxsaset_nonea_commonascpufrequReturn CPU frequency as a namedtuple including current,
        min and max frequency expressed in Mhz.

        If *percpu* is True and the system supports per-cpu frequency
        retrieval (Linux only) a list of frequencies is returned for
        each CPU. If not a list with one element is returned.
        uReturn statistics about system memory usage as a namedtuple
    including the following fields, expressed in bytes:

     - total:
       total physical memory available.

     - available:
       the memory that can be given instantly to processes without the
       system going into swap.
       This is calculated by summing different memory values depending
       on the platform and it is supposed to be used to monitor actual
       memory usage in a cross platform fashion.

     - percent:
       the percentage usage calculated as (total - available) / total * 100

     - used:
        memory used, calculated differently depending on the platform and
        designed for informational purposes only:
        macOS: active + wired
        BSD: active + wired + cached
        Linux: total - free

     - free:
       memory not being used at all (zeroed) that is readily available;
       note that this doesn't reflect the actual memory available
       (use 'available' instead)

    Platform-specific fields:

     - active (UNIX):
       memory currently in use or very recently used, and so it is in RAM.

     - inactive (UNIX):
       memory that is marked as not used.

     - buffers (BSD, Linux):
       cache for things like file system metadata.

     - cached (BSD, macOS):
       cache for various things.

     - wired (macOS, BSD):
       memory that is marked to always stay in RAM. It is never moved to disk.

     - shared (BSD):
       memory that may be simultaneously accessed by multiple processes.

    The sum of 'used' and 'available' does not necessarily equal total.
    On Windows 'available' and 'free' are the same.
    aswap_memoryuReturn system swap memory statistics as a namedtuple including
    the following fields:

     - total:   total swap memory in bytes
     - used:    used swap memory in bytes
     - free:    free swap memory in bytes
     - percent: the percentage usage
     - sin:     no. of bytes the system has swapped in from disk (cumulative)
     - sout:    no. of bytes the system has swapped out from disk (cumulative)

    'sin' and 'sout' on Windows are meaningless and always set to 0.
    adisk_usageuReturn disk usage statistics about the given *path* as a
    namedtuple including total, used and free space expressed in bytes
    plus the percentage usage.
    apathconfudisk_partitions.<locals>.pathconfadisk_partitionsa_replaceamountpointaPC_NAME_MAXaPC_PATH_MAXTamaxfileamaxpathanewuReturn mounted partitions as a list of
    (device, mountpoint, fstype, opts) namedtuple.
    'opts' field is a raw string separated by commas indicating mount
    options which may vary depending on the platform.

    If *all* parameter is False return physical devices only and ignore
    all others.
    TEOSErrorEAttributeErroraperdiskadisk_io_countersa_wrap_numbersupsutil.disk_io_countersasdiskioarawdictavaluesuReturn system disk I/O statistics as a namedtuple including
    the following fields:

     - read_count:  number of reads
     - write_count: number of writes
     - read_bytes:  number of bytes read
     - write_bytes: number of bytes written
     - read_time:   time spent reading from disk (in ms)
     - write_time:  time spent writing to disk (in ms)

    Platform specific:

     - busy_time: (Linux, FreeBSD) time spent doing actual I/Os (in ms)
     - read_merged_count (Linux): number of merged reads
     - write_merged_count (Linux): number of merged writes

    If *perdisk* is True return the same information for every
    physical disk installed on the system as a dictionary
    with partition names as the keys and the namedtuple
    described above as the values.

    If *nowrap* is True it detects and adjust the numbers which overflow
    and wrap (restart from 0) and add "old value" to "new value" so that
    the returned numbers will always be increasing or remain the same,
    but never decrease.
    "disk_io_counters.cache_clear()" can be used to invalidate the
    cache.

    On recent Windows versions 'diskperf -y' command may need to be
    executed first otherwise this function won't find any disk.
    u<genexpr>udisk_io_counters.<locals>.<genexpr>anet_io_countersupsutil.net_io_countersasnetiouReturn network I/O statistics as a namedtuple including
    the following fields:

     - bytes_sent:   number of bytes sent
     - bytes_recv:   number of bytes received
     - packets_sent: number of packets sent
     - packets_recv: number of packets received
     - errin:        total number of errors while receiving
     - errout:       total number of errors while sending
     - dropin:       total number of incoming packets which were dropped
     - dropout:      total number of outgoing packets which were dropped
                     (always 0 on macOS and BSD)

    If *pernic* is True return the same information for every
    network interface installed on the system as a dictionary
    with network interface names as the keys and the namedtuple
    described above as the values.

    If *nowrap* is True it detects and adjust the numbers which overflow
    and wrap (restart from 0) and add "old value" to "new value" so that
    the returned numbers will always be increasing or remain the same,
    but never decrease.
    "net_io_counters.cache_clear()" can be used to invalidate the
    cache.
    anet_connectionsuReturn system-wide socket connections as a list of
    (fd, family, type, laddr, raddr, status, pid) namedtuples.
    In case of limited privileges 'fd' and 'pid' may be set to -1
    and None respectively.
    The *kind* parameter filters for connections that fit the
    following criteria:

    +------------+----------------------------------------------------+
    | Kind Value | Connections using                                  |
    +------------+----------------------------------------------------+
    | inet       | IPv4 and IPv6                                      |
    | inet4      | IPv4                                               |
    | inet6      | IPv6                                               |
    | tcp        | TCP                                                |
    | tcp4       | TCP over IPv4                                      |
    | tcp6       | TCP over IPv6                                      |
    | udp        | UDP                                                |
    | udp4       | UDP over IPv4                                      |
    | udp6       | UDP over IPv6                                      |
    | unix       | UNIX socket (both UDP and TCP protocols)           |
    | all        | the sum of all the possible families and protocols |
    +------------+----------------------------------------------------+

    On macOS this function requires root privileges.
    asocketanet_if_addrsasortunet_if_addrs.<locals>.<lambda>Takeyutoo many values to unpack (expected 6)aAddressFamilylaAF_LINKafamw:w-aaddracountaseparatorlu%s00asnicaddruReturn the addresses associated to each NIC (network interface
    card) installed on the system as a dictionary whose keys are the
    NIC names and value is a list of namedtuples for each address
    assigned to the NIC. Each namedtuple includes 5 fields:

     - family: can be either socket.AF_INET, socket.AF_INET6 or
               psutil.AF_LINK, which refers to a MAC address.
     - address: is the primary address and it is always set.
     - netmask: and 'broadcast' and 'ptp' may be None.
     - ptp: stands for "point to point" and references the
            destination address on a point to point interface
            (typically a VPN).
     - broadcast: and *ptp* are mutually exclusive.

    Note: you can have more than one address of the same family
    associated with each interface.
    anet_if_statsuReturn information about each NIC (network interface card)
    installed on the system as a dictionary whose keys are the
    NIC names and value is a namedtuple with the following fields:

     - isup: whether the interface is up (bool)
     - duplex: can be either NIC_DUPLEX_FULL, NIC_DUPLEX_HALF or
               NIC_DUPLEX_UNKNOWN
     - speed: the NIC speed expressed in mega bits (MB); if it can't
              be determined (e.g. 'localhost') it will be set to 0.
     - mtu: the maximum transmission unit expressed in bytes.
    aconvertusensors_temperatures.<locals>.convertasensors_temperaturesTlutoo many values to unpack (expected 4)ashwtempahighacriticaluReturn hardware temperatures. Each entry is a namedtuple
        representing a certain hardware sensor (it may be a CPU, an
        hard disk or something else, depending on the OS and its
        configuration).
        All temperatures are expressed in celsius unless *fahrenheit*
        is set to True.
        afahrenheitll asensors_fansuReturn fans speed. Each entry is a namedtuple
        representing a certain hardware sensor.
        All speed are expressed in RPM (rounds per minute).
        asensors_batteryuReturn battery information. If no battery is installed
        returns None.

         - percent: battery power left as a percentage.
         - secsleft: a rough approximation of how many seconds are left
                     before the battery runs out of power. May be
                     POWER_TIME_UNLIMITED or POWER_TIME_UNLIMITED.
         - power_plugged: True if the AC power cable is connected.
        aboot_timeuReturn the system boot time expressed in seconds since the epoch.ausersuReturn users currently connected on the system as a list of
    namedtuples including the following fields.

     - user: the name of the user
     - terminal: the tty or pseudo-tty associated with the user, if any.
     - host: the host name associated with the entry, if any.
     - started: the creation time as a floating point number expressed in
       seconds since the epoch.
    awin_service_iteruReturn a generator yielding a WindowsService instance for all
        Windows services installed.
        awin_service_getuGet a Windows service by *name*.
        Raise NoSuchProcess if no service with such name exists.
        upsutil._commonaPSUTIL_DEBUGaset_debuguEnable or disable PSUTIL_DEBUG option, which prints debugging
    messages to stderr.
    Tabytes2humanabytes2humana_compatTaget_terminal_sizeaget_terminal_sizeadateatodayu%-10s %5s %5s %7s %7s %5s %6s %6s %6s  %sL
apidamemory_percentanameacmdlineacpu_timesacreate_timeamemory_infoastatusaniceausernameaprintT
aUSERaPIDu%MEMaVSZaRSSaNICEaSTATUSaSTARTaTIMEaCMDLINEDaad_valuenTu%H:%MTu%b%du%M:%Salocaltimew\asplitTw\:nlnavmsarssamemory_percentanicew :nlnatempl:nl
nupsutil is a cross-platform library for retrieving information on
running processes and system utilization (CPU, memory, disks, network,
sensors) in Python. Supported platforms:

 - Linux
 - Windows
 - macOS
 - FreeBSD
 - OpenBSD
 - NetBSD
 - Sun Solaris
 - AIX

Works with Python versions 2.7 and 3.6+.
a__doc__a__file__apathadirnameTaNUITKA_PACKAGE_psutilu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__adivisionacontextlibafunctoolsasysTa_commonaAIXaBSDTaCONN_CLOSEaCONN_CLOSETaCONN_CLOSE_WAITaCONN_CLOSE_WAITTaCONN_CLOSINGaCONN_CLOSINGTaCONN_ESTABLISHEDaCONN_ESTABLISHEDTaCONN_FIN_WAIT1aCONN_FIN_WAIT1TaCONN_FIN_WAIT2aCONN_FIN_WAIT2TaCONN_LAST_ACKaCONN_LAST_ACKTaCONN_LISTENaCONN_LISTENTaCONN_NONEaCONN_NONETaCONN_SYN_RECVaCONN_SYN_RECVTaCONN_SYN_SENTaCONN_SYN_SENTTaCONN_TIME_WAITaCONN_TIME_WAITaFREEBSDaMACOSTaNIC_DUPLEX_FULLaNIC_DUPLEX_FULLTaNIC_DUPLEX_HALFaNIC_DUPLEX_HALFTaNIC_DUPLEX_UNKNOWNaNIC_DUPLEX_UNKNOWNaOSXTaPOWER_TIME_UNKNOWNaPOWER_TIME_UNKNOWNTaPOWER_TIME_UNLIMITEDaPOWER_TIME_UNLIMITEDTaSTATUS_DEADaSTATUS_DEADTaSTATUS_DISK_SLEEPaSTATUS_DISK_SLEEPTaSTATUS_IDLEaSTATUS_IDLETaSTATUS_LOCKEDaSTATUS_LOCKEDTaSTATUS_PARKEDaSTATUS_PARKEDTaSTATUS_RUNNINGaSTATUS_RUNNINGTaSTATUS_SLEEPINGaSTATUS_SLEEPINGTaSTATUS_STOPPEDaSTATUS_STOPPEDTaSTATUS_TRACING_STOPaSTATUS_TRACING_STOPTaSTATUS_WAITINGaSTATUS_WAITINGTaSTATUS_WAKINGaSTATUS_WAKINGTaSTATUS_ZOMBIEaSUNOSTaAccessDeniedTaErrorTaNoSuchProcessTaTimeoutExpiredTaZombieProcessTamemoize_when_activatedamemoize_when_activatedTawrap_numbersawrap_numbersTaPY3aPY3TaPermissionErrorTaProcessLookupErrorTaSubprocessTimeoutExpiredaSubprocessTimeoutExpiredTalongu/procaPROCFS_PATHTa_pslinuxa_pslinuxTaIOPRIO_CLASS_BEaIOPRIO_CLASS_BETaIOPRIO_CLASS_IDLEaIOPRIO_CLASS_IDLETaIOPRIO_CLASS_NONEaIOPRIO_CLASS_NONETaIOPRIO_CLASS_RTaIOPRIO_CLASS_RTTa_pswindowsa_pswindowsa_psutil_windowsTaABOVE_NORMAL_PRIORITY_CLASSaABOVE_NORMAL_PRIORITY_CLASSTaBELOW_NORMAL_PRIORITY_CLASSaBELOW_NORMAL_PRIORITY_CLASSTaHIGH_PRIORITY_CLASSaHIGH_PRIORITY_CLASSTaIDLE_PRIORITY_CLASSaIDLE_PRIORITY_CLASSTaNORMAL_PRIORITY_CLASSaNORMAL_PRIORITY_CLASSTaREALTIME_PRIORITY_CLASSaREALTIME_PRIORITY_CLASSTaCONN_DELETE_TCBaCONN_DELETE_TCBTaIOPRIO_HIGHaIOPRIO_HIGHTaIOPRIO_LOWaIOPRIO_LOWTaIOPRIO_NORMALaIOPRIO_NORMALTaIOPRIO_VERYLOWaIOPRIO_VERYLOWTa_psosxa_psosxTa_psbsda_psbsdTa_pssunosa_pssunosTaCONN_BOUNDaCONN_BOUNDTaCONN_IDLEaCONN_IDLETa_psaixa_psaixuplatform win32 is not supportedLGaErroraNoSuchProcessaZombieProcessaAccessDeniedaTimeoutExpiredaversion_infoa__version__aSTATUS_RUNNINGaSTATUS_IDLEaSTATUS_SLEEPINGaSTATUS_DISK_SLEEPaSTATUS_STOPPEDaSTATUS_TRACING_STOPaSTATUS_ZOMBIEaSTATUS_DEADaSTATUS_WAKINGaSTATUS_LOCKEDaSTATUS_WAITINGaSTATUS_LOCKEDaSTATUS_PARKEDaCONN_ESTABLISHEDaCONN_SYN_SENTaCONN_SYN_RECVaCONN_FIN_WAIT1aCONN_FIN_WAIT2aCONN_TIME_WAITaCONN_CLOSEaCONN_CLOSE_WAITaCONN_LAST_ACKaCONN_LISTENaCONN_CLOSINGaCONN_NONEaAF_LINKaNIC_DUPLEX_FULLaNIC_DUPLEX_HALFaNIC_DUPLEX_UNKNOWNaPOWER_TIME_UNKNOWNaPOWER_TIME_UNLIMITEDaBSDaFREEBSDaLINUXaNETBSDaOPENBSDaMACOSaOSXaPOSIXaSUNOSaWINDOWSaAIXaProcessaPopenapid_existsapidsaprocess_iterawait_procsavirtual_memoryaswap_memoryacpu_timesacpu_percentacpu_times_percentacpu_countacpu_statsanet_io_countersanet_connectionsanet_if_addrsanet_if_statsadisk_io_countersadisk_partitionsadisk_usageausersaboot_timea__all__a__extra__all__Ta_psutil_posixa_psutil_posixa_globalsTaRLIMaisupperuGiampaolo Rodola'a__author__u5.9.7a__version__w.aversion_infoamonotonicareplaceTw.uaversionuversion conflict: %r C extension amsgumodule was built for another version of psutilu (%s instead of %s)u (different than %s)u; you may try to 'pip uninstall psutil', manually remove %suthe existing psutil install directoryu or clean the virtual env somehow, then reinstallappid_mapTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>apsutiluRepresents an OS process with the given PID.
    If PID is omitted current process PID (os.getpid()) is used.
    Raise NoSuchProcess if PID does not exist.

    Note that most of the methods of this class do not make sure
    the PID of the process being queried has been reused over time.
    That means you might end up retrieving an information referring
    to another process in case the original one this instance
    refers to is gone in the meantime.

    The only exceptions for which process identity is pre-emptively
    checked and guaranteed are:

     - parent()
     - children()
     - nice() (set)
     - ionice() (set)
     - rlimit() (set)
     - cpu_affinity (set)
     - suspend()
     - resume()
     - send_signal()
     - terminate()
     - kill()

    To prevent this problem for all other methods you can:
     - use is_running() before querying the process
     - if you're continuously iterating over a set of Process
       instances use process_iter() which pre-emptively checks
       process identity for every yielded instance
    a__qualname__Tna__init__uProcess.__init__TFuProcess._inita__str__uProcess.__str__a__repr__a__eq__uProcess.__eq__a__ne__uProcess.__ne__a__hash__uProcess.__hash__uProcess._raise_if_pid_reusedapropertyuProcess.pidacontextmanagerTnnuProcess.as_dictuProcess.parentuProcess.parentsuProcess.is_runninguProcess.ppiduProcess.nameuProcess.exeuProcess.cmdlineuProcess.statusuProcess.usernameuProcess.create_timeuProcess.cwduProcess.niceuProcess.uidsuProcess.gidsuProcess.terminaluProcess.num_fdsahasattruProcess.io_countersaioniceuProcess.ioniceuProcess.rlimitacpu_affinityuProcess.cpu_affinityuProcess.cpu_numuProcess.environuProcess.num_handlesuProcess.num_ctx_switchesuProcess.num_threadsuProcess.threadsachildrenuProcess.childrenacpu_percentuProcess.cpu_percentuProcess.cpu_timesuProcess.memory_infoadeprecated_methodTamemory_infoTareplacementamemory_info_exuProcess.memory_info_exuProcess.memory_full_infoTarssuProcess.memory_percentuProcess.memory_mapsuProcess.open_filesTainetuProcess.connectionsuProcess._send_signaluProcess.send_signaluProcess.suspenduProcess.resumeaterminateuProcess.terminateuProcess.killuProcess.waita__orig_bases__Tw_Saas_dictasuspendaparentachildrenamemory_info_exawaitaterminateaoneshotasend_signalaresumearlimitaparentsais_runningakilluSame as subprocess.Popen, but in addition it provides all
    psutil.Process methods in a single class.
    For the following methods which are common to both classes, psutil
    implementation takes precedence:

    * send_signal()
    * terminate()
    * kill()

    This is done in order to avoid killing another process in case its
    PID has been reused, fixing BPO-6973.

      >>> import psutil
      >>> from subprocess import PIPE
      >>> p = psutil.Popen(["python", "-c", "print 'hi'"], stdout=PIPE)
      >>> p.name()
      'python'
      >>> p.uids()
      user(real=1000, effective=1000, saved=1000)
      >>> p.username()
      'giampaolo'
      >>> p.communicate()
      ('hi', None)
      >>> p.terminate()
      >>> p.wait(timeout=2)
      0
      >>>
    uPopen.__init__a__dir__uPopen.__dir__uPopen.__enter__uPopen.__exit__uPopen.__getattribute__uPopen.waitawait_procsTnFacpu_times_percentTacpu_freqagetloadavgTagetloadavgTFtapartialacache_clearuClears nowrap argument cacheTasensors_temperaturesTasensors_fansTasensors_batterya_set_debugatestupsutil\__init__.pyTa.0wxTwxTwxwyu<module psutil>Ta__class__TaselfTaselfaotherapid1actime1apid2actime2TaselfaargsakwargsTaselfanameTaselfapidTaselfaotherTaselfainfoTatimesabusyTat1at2afield_deltasafieldafield_deltaTatimesatotTaselfapida_ignore_nspTaretapidTasecsanowasecs_agoafmtTaselfamsgTaselfasigamsgTavalueapsutilTapidaprocaattrsaad_valueapmapTaad_valueaattrsapmapT
aselfaattrsaad_valueavalid_namesainvalid_namesaretdictalsanamearetamethTat1at2anumsatimes_deltaaall_deltaascaleafield_deltaafield_percTat1at2atimes_deltaaall_deltaabusy_deltaabusy_percTaprocatimeoutareturncodeagoneacallbackTacallbackagoneTaselfarecursiveappid_maparetapidappidachildareverse_ppid_mapaseenastackachild_pidaintimeTaselfakindTwnafahrenheitTafahrenheitTaselfacpusTalogicalaretTapercpuaretanum_cpusacurrsaminsamaxsaset_noneacpuacurrentamin_amax_Taintervalapercpuatidablockingacalculateat1aretatot1at2T
aselfaintervalablockinganum_cpusatimerast1apt1ast2apt2adelta_procadelta_timeaoverall_cpus_percentasingle_cpu_percentTaperdiskanowrapakwargsarawdictantadiskafieldsTaallapathconfaretanewaitemantTapathTaselfaguess_itaexeaerrTafallbackacmdlineaexeaselfTaselfaioclassavalueamsgTaselfagroupedaitwdatuplapathanumsantTaselfamemtypeavalid_typesafunametricsavalueatotal_phymemTaselfanameacmdlineaextended_nameTakindTahas_enumsasocketarawlistaretanameafamaaddramaskabroadcastaptpaseparatorTapernicanowraparawdictanicafieldsTaselfavalueTaselfalowest_pidappidactimeaparentTaselfaparentsaprocTapathanameTapidTaretTaattrsaad_valueaaddaremoveapmapwawbanew_pidsagone_pidsapidalsaprocTapidapmapTapmapTaselfaresourcealimitsT
afahrenheitaconvertaretarawdictanameavaluesalabelacurrentahighacriticalTabytes2humanaget_terminal_sizeatoday_dayatemplaattrswpactimeacputimeauseravmsarssamempaniceacmdlineastatusalineTanum_cpusTaselfamsgareal_uidTaselfatimeoutamsgTaselfatimeoutareta__class__T
aprocsatimeoutacallbackacheck_goneamsgagoneaaliveadeadlineaprocamax_timeoutTaname.pyasn1.codec.ber^a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existingucodec\berTaNUITKA_PACKAGE_pyasn1_codecu\not_existingaberTaNUITKA_PACKAGE_pyasn1_codec_beru\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__upyasn1\codec\ber\__init__.pyu<module pyasn1.codec.ber>u.pyasn1.codec.ber.decoder>LaerroraPyAsn1ErroruSingleItemDecoder not implemented for %suDecode value with fixed byte length.

        The decoder is allowed to consume as many bytes as necessary.
        uIndefinite length mode decoder not implemented for %suDecode value with undefined length.

        The decoder is allowed to consume as many bytes as necessary.
        aasn1ObjectaoptionsareadFromStreamasubstratealengthasubstrateCollectoruAbstractSimplePayloadDecoder.substrateCollectoranativeaprotoComponentacloneTatagSetanoValueasubstrateFunaselfa_createComponentaasn1SpecatagSetuadecodeFunavalueDecoderuRawPayloadDecoder.valueDecoderDaallowEootaeooaendOfOctetsaindefLenValueDecoderuRawPayloadDecoder.indefLenValueDecoderlatagFormatatagatagFormatSimpleTuSimple tag format expectedaSubstrateUnderrunErrorachunkafrom_bytesDasignedtuIntegerPayloadDecoder.valueDecoderaIntegerPayloadDecoderlTuEmpty BIT STRING substrateaisEndOfStreamatrailingBitsluTrailing bits overflow %safromOctetStringTainternalFormatapaddingasupportConstructedFormuConstructed encoding form prohibited at %sa__name__aLOGTuassembling constructed serializationanullDainternalFormattatellacurrent_positionaoct2intacomponent:lnnabitStringTainternalFormataprependapaddinguBitStringPayloadDecoder.valueDecoderaallowEoouBitStringPayloadDecoder.indefLenValueDecoderaoriginal_positionaheaderuOctetStringPayloadDecoder.valueDecoderuOctetStringPayloadDecoder.indefLenValueDecoderuUnexpected %d-octet substrate for NulluNullPayloadDecoder.valueDecoderTuEmpty substrateaocts2intsTaindexlaoidanextSubIdasubIdluShort substrate for sub-OID past %sTuInvalid octet 0x80 in OID encodingl'Tll(lOlPluMalformed first OID octet: %suObjectIdentifierPayloadDecoder.valueDecoderZTuIncomplete floating-point valueTudecoding binary encoded REALllutoo many values to unpack (expected 2)TuReal exponent screwedlaeowelTuIllegal Real basewpl@Tudecoding infinite REALu-infainflTudecoding character encoded REALl
uUnknown NR (tag %s)TuBad character Real syntaxuUnknown encoding (tag %s)uRealPayloadDecoder.valueDecoderacomponentsaappendacomponentTypesaaddaprotoRecordComponentaprotoSequenceComponentaTagSetabaseTagasuperTagsuguessed %r container type (pass `asn1Spec` to guide the decoder)asetComponentByPositionDaverifyConstraintsamatchTagsamatchConstraintsFppa_decodeComponentsSchemalessuConstructedPayloadDecoderBase._decodeComponentsSchemalessatagFormatConstructedTuConstructed tag format expectedTacontextuUnused trailing %d octets encountered: %satrailingadebugahexdumpacleara_passAsn1ObjectatypeIdaunivaSequenceaSetacomponentTypeahasOptionalOrDefaultudecoding %sdeterministic %s type %r chosen by type IDunon-aSETanamedTypesatagMapUniqueaidxaisOptionalaisDefaultedagetTagMapNearPositionuExcessive components decoded at %ragetPositionByTypeaeffectiveTagSetagetPositionNearTypeaseenIndicesuseen component indices %sarequiredComponentsaissubsetuASN.1 object %s has uninitialized componentsahasOpenTypesagetaopenTypesTuuser-specified open types map:aitemsu%s -> %rTadecodeOpenTypesFaopenTypeagetComponentByPositionaisValueagetComponentByNameanameudefault open types map of component "%s.%s" governed by component "%s.%s":ufailed to resolve open type by governing value %ruresolved open type %r by governing value %raSetOfaSequenceOfaasSeekableStreamacontainerValueaasOctetsaisInconsistentudecoding type %r chosen by given `asn1Spec`uConstructedPayloadDecoderBase.valueDecoderuConstructedPayloadDecoderBase.indefLenValueDecoderudecoding %s as explicitly tagged CHOICEacomponentTagMapudecoding %s as untagged CHOICEastateudecoded component %s, effective tag set %sasetComponentByTypeDaverifyConstraintsamatchTagsamatchConstraintsainnerFlagFpppuChoicePayloadDecoder.valueDecoderudecoding %s as %stagged CHOICEuexplicitly aunuChoicePayloadDecoder.indefLenValueDecoderatagmapaTagMapatagMapamarkedPositionaseekaosaSEEK_SETapeekIntoStreamudecoding as untagged ANY, substrate %suAnyPayloadDecoder.valueDecoderTudecoding as tagged ANYudecoding as untagged ANY, header substrate %suAnyPayloadDecoder.indefLenValueDecodera_MISSINGaTAG_MAPa_tagMapaTYPE_MAPa_typeMapa_tagCachea_tagSetCacheapopTaallowEooFudecoder called at scope %s with state %d, working with up to %s octets of substrate: %sascopeasupportIndefLengthaeoo_candidateaEOO_SENTINELTuend-of-octets sentinel foundlaSEEK_CURastStopastDecodeTagafirstByteatagCachel laintegerByteTuShort octet stream on long tag decodingalengthOctetIdxatagIdaTagTatagClassatagFormatatagIdatagSetCacheafirstOctetalastTagastDecodeLengthutag decoded into %s, decoding lengthaencodedLengthu%s<%s at %sTuIndefinite length encoding not supported by this codecastGetValueDecoderuvalue length decoded into %dastGetValueDecoderByTagastGetValueDecoderByAsn1SpecastDecodeValue:nlnastTryAsExplicitTagucodec %s chosen by a built-in type, decoding %su<none>avalueuas explicit tagapushaconcreteDecoderw?Tucandidate ASN.1 spec is a map of:apresentTypesu  %s -> %saskipTypesTubut neither of: unew candidate ASN.1 spec is %s, chosen by %saprettyPrintTypeucandidate ASN.1 spec is %sachosenSpecuvalue decoder chosen for an ambiguous type by type ID %suvalue decoder chosen by base %sucodec %s chosen by ASN.1 spec, decoding %sTarecursiveFlagtuLegacy hack to keep the recursiveFlag=False option supported.

                        The decode(..., substrateFun=userCallback) option was introduced in 0.1.4 as a generalization
                        of the old recursiveFlag=False option. Users should pass their callback instead of using
                        recursiveFlag.
                        uSingleItemDecoder.__call__.<locals>.substrateFunuRead %s bytes instead of expected %s.uRead %s bytes are more than expected %s.ucodec %s yields type %s, value:
%s
...abaseaAsn1ItemaprettyPrintatagClassatagClassUniversalarawPayloadDecoderadefaultErrorStateucodec %s chosen, decoding %suas failureastDumpRawValueadefaultRawDecoderucodec %s chosen, decoding valueastErrorConditionu%s not in asn1Spec: %rudecoder left scope %s, call completeda__call__uSingleItemDecoder.__call__aSINGLE_ITEM_DECODERa_singleItemDecodera_substratea_asn1Speca_optionsa__iter__uStreamingDecoder.__iter__TnuSupport both 0.4 and 0.5 style APIs.

                substrateFun API has changed in 0.5 for use with streaming decoders. To stay backwards compatible,
                we first try if we received a streaming user callback. If that fails,we assume we've received a
                non-streaming v0.4 user callback and convert it for streaming on the fly
                asubstrateFunWrapperuDecoder.__call__.<locals>.substrateFunWrapperaSTREAMING_DECODERTuShort substrate on inputaEndOfStreamErroruTurns BER/CER/DER octet stream into an ASN.1 object.

        Takes BER/CER/DER octet-stream in form of :py:class:`bytes` (Python 3)
        or :py:class:`str` (Python 2) and decode it into an ASN.1 object
        (e.g. :py:class:`~pyasn1.type.base.PyAsn1Item` derivative) which
        may be a scalar or an arbitrary nested structure.

        Parameters
        ----------
        substrate: :py:class:`bytes` (Python 3) or :py:class:`str` (Python 2)
            BER/CER/DER octet-stream to parse

        Keyword Args
        ------------
        asn1Spec: :py:class:`~pyasn1.type.base.PyAsn1Item`
            A pyasn1 type object (:py:class:`~pyasn1.type.base.PyAsn1Item`
            derivative) to act as a template guiding the decoder.
            Depending on the ASN.1 structure being decoded, `asn1Spec` may or
            may not be required. Most common reason for it to require is that
            ASN.1 structure is encoded in *IMPLICIT* tagging mode.

        substrateFun: :py:class:`Union[
                Callable[[pyasn1.type.base.PyAsn1Item, bytes, int],
                         Tuple[pyasn1.type.base.PyAsn1Item, bytes]],
                Callable[[pyasn1.type.base.PyAsn1Item, io.BytesIO, int, dict],
                         Generator[Union[pyasn1.type.base.PyAsn1Item,
                                         pyasn1.error.SubstrateUnderrunError],
                                   None, None]]
            ]`
            User callback meant to generalize special use cases like non-recursive or
            partial decoding. A 3-arg non-streaming variant is supported for backwards
            compatiblilty in addition to the newer 4-arg streaming variant.
            The callback will receive the uninitialized object recovered from substrate
            as 1st argument, the uninterpreted payload as 2nd argument, and the length
            of the uninterpreted payload as 3rd argument. The streaming variant will
            additionally receive the decode(..., **options) kwargs as 4th argument.
            The non-streaming variant shall return an object that will be propagated
            as decode() return value as 1st item, and the remainig payload for further
            decode passes as 2nd item.
            The streaming variant shall yield an object that will be propagated as
            decode() return value, and leave the remaining payload in the stream.

        Returns
        -------
        : :py:class:`tuple`
            A tuple of :py:class:`~pyasn1.type.base.PyAsn1Item` object
            recovered from BER/CER/DER substrate and the unprocessed trailing
            portion of the `substrate` (may be empty)

        Raises
        ------
        : :py:class:`~pyasn1.error.PyAsn1Error`
            :py:class:`~pyasn1.error.SubstrateUnderrunError` on insufficient
            input or :py:class:`~pyasn1.error.PyAsn1Error` on decoding error.

        Examples
        --------
        Decode BER/CER/DER serialisation without ASN.1 schema

        .. code-block:: pycon

           >>> s, unprocessed = decode(b'0')
           >>> str(s)
           SequenceOf:
            1 2 3

        Decode BER/CER/DER serialisation with ASN.1 schema

        .. code-block:: pycon

           >>> seq = SequenceOf(componentType=Integer())
           >>> s, unprocessed = decode(
                b'0', asn1Spec=seq)
           >>> str(s)
           SequenceOf:
            1 2 3

        aorigSubstrateFunasysaexc_infoutoo many values to unpack (expected 3)atb_nextaBytesIOaDecodera_callSubstrateFunV4asV5areadasubstrateFunV4asubstrate_bytesawriteatruncateuDecoder._callSubstrateFunV4asV5a__doc__a__file__a__spec__aoriginahas_locationa__cached__aioapyasn1TadebugTaerrorupyasn1.codec.berTaeooupyasn1.codec.streamingTaasSeekableStreamTaisEndOfStreamTapeekIntoStreamTareadFromStreamupyasn1.compatTa_MISSINGupyasn1.compat.integerTafrom_bytesupyasn1.compat.octetsTaoct2intaocts2intsaints2octsanullaints2octsupyasn1.errorTaPyAsn1Errorupyasn1.typeTabaseTacharacharTatagTatagmapTaunivTausefulausefulaStreamingDecoderadecodea__all__aregisterLoggeeaDEBUG_DECODERTupyasn1.codec.ber.decoderTaflagsTOobjecta__prepare__aAbstractPayloadDecodera__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.codec.ber.decodera__module__a__qualname__TnnnnnuAbstractPayloadDecoder.valueDecoderuAbstractPayloadDecoder.indefLenValueDecoderastaticmethoduAbstractPayloadDecoder._passAsn1Objecta__orig_bases__aAbstractSimplePayloadDecoderuAbstractSimplePayloadDecoder._createComponentaRawPayloadDecoderaAnyTuaIntegeraBooleanPayloadDecoderaBooleanuBooleanPayloadDecoder._createComponentaBitStringPayloadDecoderaBitStringTTaOctetStringPayloadDecoderaOctetStringaNullPayloadDecoderaNullaObjectIdentifierPayloadDecoderaObjectIdentifieraRealPayloadDecoderaRealaAbstractConstructedPayloadDecoderaConstructedPayloadDecoderBasea_getComponentTagMapuConstructedPayloadDecoderBase._getComponentTagMapa_getComponentPositionByTypeuConstructedPayloadDecoderBase._getComponentPositionByTypeTnnnaSequenceOrSequenceOfPayloadDecoderaSequencePayloadDecoderaSequenceOfPayloadDecoderaSetOrSetOfPayloadDecoderaSetPayloadDecoderaSetOfPayloadDecoderaChoicePayloadDecoderaChoiceaAnyPayloadDecoderaUTF8StringPayloadDecoderaUTF8StringaNumericStringPayloadDecoderaNumericStringaPrintableStringPayloadDecoderaPrintableStringaTeletexStringPayloadDecoderaTeletexStringaVideotexStringPayloadDecoderaVideotexStringaIA5StringPayloadDecoderaIA5StringaGraphicStringPayloadDecoderaGraphicStringaVisibleStringPayloadDecoderaVisibleStringaGeneralStringPayloadDecoderaGeneralStringaUniversalStringPayloadDecoderaUniversalStringaBMPStringPayloadDecoderaBMPStringaObjectDescriptorPayloadDecoderaObjectDescriptoraGeneralizedTimePayloadDecoderaGeneralizedTimeaUTCTimePayloadDecoderaUTCTimeaEnumeratedatypeMapavaluesatypeDecoder;ll
lutoo many values to unpack (expected 10)TTlpaSingleItemDecodera__init__uSingleItemDecoder.__init__uCreate an iterator that turns BER/CER/DER byte stream into ASN.1 objects.

    On each iteration, consume whatever BER/CER/DER serialization is
    available in the `substrate` stream-like object and turns it into
    one or more, possibly nested, ASN.1 objects.

    Parameters
    ----------
    substrate: :py:class:`file`, :py:class:`io.BytesIO`
        BER/CER/DER serialization in form of a byte stream

    Keyword Args
    ------------
    asn1Spec: :py:class:`~pyasn1.type.base.PyAsn1Item`
        A pyasn1 type object to act as a template guiding the decoder.
        Depending on the ASN.1 structure being decoded, `asn1Spec` may
        or may not be required. One of the reasons why `asn1Spec` may
        me required is that ASN.1 structure is encoded in the *IMPLICIT*
        tagging mode.

    Yields
    ------
    : :py:class:`~pyasn1.type.base.PyAsn1Item`, :py:class:`~pyasn1.error.SubstrateUnderrunError`
        Decoded ASN.1 object (possibly, nested) or
        :py:class:`~pyasn1.error.SubstrateUnderrunError` object indicating
        insufficient BER/CER/DER serialization on input to fully recover ASN.1
        objects from it.

        In the latter case the caller is advised to ensure some more data in
        the input stream, then call the iterator again. The decoder will resume
        the decoding process using the newly arrived data.

        The `context` property of :py:class:`~pyasn1.error.SubstrateUnderrunError`
        object might hold a reference to the partially populated ASN.1 object
        being reconstructed.

    Raises
    ------
    ~pyasn1.error.PyAsn1Error, ~pyasn1.error.EndOfStreamError
        `PyAsn1Error` on deserialization error, `EndOfStreamError` on
         premature stream closure.

    Examples
    --------
    Decode BER serialisation without ASN.1 schema

    .. code-block:: pycon

        >>> stream = io.BytesIO(
        ...    b'0')
        >>>
        >>> for asn1Object in StreamingDecoder(stream):
        ...     print(asn1Object)
        >>>
        SequenceOf:
         1 2 3

    Decode BER serialisation with ASN.1 schema

    .. code-block:: pycon

        >>> stream = io.BytesIO(
        ...    b'0')
        >>>
        >>> schema = SequenceOf(componentType=Integer())
        >>>
        >>> decoder = StreamingDecoder(stream, asn1Spec=schema)
        >>> for asn1Object in decoder:
        ...     print(asn1Object)
        >>>
        SequenceOf:
         1 2 3
    uStreamingDecoder.__init__uCreate a BER decoder object.

    Parse BER/CER/DER octet-stream into one, possibly nested, ASN.1 object.
    aclassmethoduDecoder.__call__upyasn1\codec\ber\decoder.pyu<module pyasn1.codec.ber.decoder>Ta__class__Taclsasubstrateaasn1SpecaoptionsaorigSubstrateFunasubstrateFunWrapperastreamingDecoderaasn1ObjectatailT#aselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaallowEooaeoo_candidateatagMapatypeMapatagCacheatagSetCacheavalueaisShortTagafirstByteafirstOctetalastTagaintegerTagatagClassatagFormatatagIdalengthOctetIdxaintegerByteasizeaencodedLengthalengthOctetaconcreteDecoderachosenSpecwvabaseTagSetaoriginal_positionabytesReadTaselfasubstrateaasn1SpecaoptionsTaselfatagMapatypeMapaignoredTaselfaasn1ObjectachunkTasubstrateFunV4aasn1Objectasubstratealengthasubstrate_bytesavalueanextSubstrateanbytesTaselfaasn1SpecatagSetavalueaoptionsT
aselfasubstrateatagSetadecodeFunalengthaoptionsaasn1ObjectacomponentsacomponentTypesaoriginal_positionacomponentaprotoComponentaidxTaselfaasn1ObjectatagSetaidxTaselfaasn1ObjectaidxTaasn1ObjectaoptionsTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkabitStringacomponentatrailingBitsT
aselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkaheaderacomponentTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkaisTaggedaiteratoracomponentaeffectiveTagSetTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkanamedTypesaisSetTypeaisDeterministicaseenIndicesaidxacomponentaopenTypeswkwvanamedTypeagoverningValueaopenTypeacontainerValueaposacontainerElementastreamainconsistencyacomponentTypeTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkavalueTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaisTaggedachunkafullPositionacurrentPositionaasn1ObjectacomponentTaasn1ObjectasubstratealengthaoptionsachunkTaasn1Objecta_substratea_lengtha_optionsT
aasn1Objectasubstratealengthaoptionsasubstrate_gena_typea_valueatracebackavalueaorigSubstrateFunTaorigSubstrateFunT
aselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkacomponentaeffectiveTagSetTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1Objectachunkaheaderaoriginal_positionacomponentTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaasn1ObjectachunkatrailingBitsavalueabitStringacurrent_positionacomponentTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsachunkacomponentTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsachunkafownaeowewbwpasfavalueTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsachunkaoidaindexasubstrateLenasubIdanextSubIdTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsachunkavalueT
aselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaisUntaggedafullPositionacurrentPositionachunkTaselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsaoriginal_positionaasn1ObjectachunkatrailinganamedTypesaisSetTypeaisDeterministicaseenIndicesaidxacomponentTypeacomponentaopenTypeswkwvanamedTypeagoverningValueaopenTypeacontainerValueaposacontainerElementastreamainconsistency.pyasn1.codec.ber.encodera<utoo many values to unpack (expected 3)atagatagFormatConstructedlllatagIdlasubstrateasupportIndefLenModeTlTalengthllaerroraPyAsn1ErroruLength octets overflow (%d)TuNot implementedatagSetaencodeValueaasn1SpecadefModeanullasuperTagsutoo many values to unpack (expected 2)aselfaoptionsasysaexc_infouError encoding %r: %slaLOGuencoded %svalue %s into %suconstructed uagetTaifNotEmptyFTuoverridden encoding mode into definitive for primitive typeaencodeTagaisConstructeduencoded %stag %s into %sadebugahexdumpaints2octsaheaderaencodeLengthuencoded %s octets (tag + payload) into %saisOctetsaeooOctetsSubstrateaeooIntegerSubstrateTlTlluencoding %spayload for zero INTEGERasupportCompactZerouno TTFpTTlFpato_bytesDasignedtacloneamaxChunkSizeaalignedValueaasOctetsaint2octuencoding into up to %s-octet chunksabaseTagaTagSetTatagSetastopaminaisOctetsTypeavalueaposaasTupleuShort OID %sl'l(:lnnllPuImpossible first/second arcs at %saoctetsasubOidaresuNegative OID arc %s at %sTlpllllwmaencbaseweabinEncBasea_dropFloatingPointZ;lllamantissaaencBaseaexponentutoo many values to unpack (expected 4)uautomatically chosen REAL encoding base %s, sign %s, mantissa %s, exponent %sasignaisPlusInfTTl@FpaisMinusInfTTlAFpl
Tuencoding REAL into character formastr2octsu%dE%s%dw+a_chooseEncBasel@ll asfTuScale factor overflowTllaeoaoct2intTlTuReal exponent overflowapouProhibited Real base %saomitEmptyOptionalsu%sencoding empty OPTIONAL componentsunot aisInconsistentacomponentTypeavaluesaisOptionalaisValueunot encoding OPTIONAL component %raisDefaultedacomponentaasn1Objectunot encoding DEFAULT component %raupdateTaifNotEmptyanamedTypeaopenTypeatypeIdaunivaSetOfaSequenceOfawrapTypeaisSameTypeWithuwrapped with wrap type %ranamedTypesanameuComponent name "%s" not found in %rachunksaappenda_encodeComponentsajoinagetComponentu%s components for Choice at %ruMultiple uNone a_MISSINGaTAG_MAPa_tagMapaTYPE_MAPa_typeMapuValue %r is not ASN.1 type instance and "asn1Spec" not givenuencoder called in %sdef mode, chunk size %s for type %s, value:
%sainaprettyPrintTypeafixedDefLengthModeafixedChunkSizeTamaxChunkSizeuusing value codec %s chosen by type ID %sa__name__uNo encoder for %r (%s)uusing value codec %s chosen by tagSet %saconcreteEncoderaencodeucodec %s built %s octets of substrate: %s
encoder completedaSINGLE_ITEM_ENCODERatagMapatypeMapa_singleItemEncodera__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1TadebugTaerrorupyasn1.codec.berTaeooaeooupyasn1.compatTa_MISSINGupyasn1.compat.integerTato_bytesupyasn1.compat.octetsTaint2octaoct2intaints2octsanullastr2octsaisOctetsTypeupyasn1.typeTacharacharTatagTaunivTausefulausefulaEncodera__all__aregisterLoggeeaDEBUG_ENCODERTupyasn1.codec.ber.encoderTaflagsTOobjecta__prepare__aAbstractItemEncodera__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.codec.ber.encodera__module__a__qualname__TlpuAbstractItemEncoder.encodeTaguAbstractItemEncoder.encodeLengthuAbstractItemEncoder.encodeValueTnnuAbstractItemEncoder.encodea__orig_bases__aEndOfOctetsEncoderuEndOfOctetsEncoder.encodeValueaBooleanEncoderuBooleanEncoder.encodeValueaIntegerEncoderuIntegerEncoder.encodeValueaBitStringEncoderuBitStringEncoder.encodeValueaOctetStringEncoderuOctetStringEncoder.encodeValueaNullEncoderuNullEncoder.encodeValueaObjectIdentifierEncoderuObjectIdentifierEncoder.encodeValueaRealEncoderastaticmethoduRealEncoder._dropFloatingPointuRealEncoder._chooseEncBaseuRealEncoder.encodeValueaSequenceEncoderuSequenceEncoder.encodeValueaSequenceOfEncoderuSequenceOfEncoder._encodeComponentsuSequenceOfEncoder.encodeValueaChoiceEncoderuChoiceEncoder.encodeValueaAnyEncoderuAnyEncoder.encodeValueaendOfOctetsaBooleanaIntegeraBitStringaOctetStringaNullaObjectIdentifieraEnumeratedaRealaChoiceaUTF8StringaNumericStringaPrintableStringaTeletexStringaVideotexStringaIA5StringaGraphicStringaVisibleStringaGeneralStringaUniversalStringaBMPStringaObjectDescriptoraGeneralizedTimeaUTCTimeaSetaSequenceaAnyaSingleItemEncodera__init__uSingleItemEncoder.__init__Tna__call__uSingleItemEncoder.__call__uEncoder.__init__uEncoder.__call__upyasn1\codec\ber\encoder.pyu<module pyasn1.codec.ber.encoder>Ta__class__TaselfapyObjectaasn1SpecaoptionsTaselfavalueaasn1SpecaoptionsatypeIdaconcreteEncoderatagSetabaseTagSetasubstrateTaselfatagMapatypeMapaignoredTaselfatagMapatypeMapaoptionsTaselfavaluewmwbweaencBaseamantissaaexponentasignaencbasewiTwmaencbaseweamsaesTaselfavalueaasn1SpecaencodeFunaoptionsainconsistencyachunksawrapTypeaidxacomponentachunkTaselfavalueaasn1SpecaencodeFunaoptionsatagSetasubstrateaisConstructedaisOctetsadefModeaidxasingleTagadefModeOverrideaexcaheaderTaselfalengthadefModeasubstrateasubstrateLenTaselfasingleTagaisConstructedatagClassatagFormatatagIdaencodedTagasubstrateTaselfavalueaasn1SpecaencodeFunaoptionsTaselfavalueaasn1SpecaencodeFunaoptionsachunksTaselfavalueaasn1SpecaencodeFunaoptionsacomponentanamesanameTaselfavalueaasn1SpecaencodeFunaoptionswmwbweafoamsaencbaseasfaeownapoasubstrateTaselfavalueaasn1SpecaencodeFunaoptionsaoidafirstasecondaoctetsasubOidaresTaselfavalueaasn1SpecaencodeFunaoptionsasubstrateamaxChunkSizeabaseTagatagSetaposachunkTaselfavalueaasn1SpecaencodeFunaoptionsasubstrateaomitEmptyOptionalsainconsistencyanamedTypesaidxacomponentanamedTypeawrapTypeachunkacomponentSpecT
aselfavalueaasn1SpecaencodeFunaoptionsavalueLengthaalignedValueamaxChunkSizeasubstrateabaseTagatagSetastopastart.pyasn1.codec.ber.eoo'a_instancea__new__a__doc__a__file__a__spec__aoriginahas_locationa__cached__upyasn1.typeTabaselabaseTatagatagaendOfOctetsa__all__aSimpleAsn1Typea__prepare__aEndOfOctetsa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.codec.ber.eooa__module__a__qualname__adefaultValueainitTagSetaTagatagClassUniversalatagFormatSimpleatagSetuEndOfOctets.__new__a__orig_bases__upyasn1\codec\ber\eoo.pyu<module pyasn1.codec.ber.eoo>Ta__class__Taclsaargsakwargsu.pyasn1.codec.cer^a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existingucodec\cerTaNUITKA_PACKAGE_pyasn1_codecu\not_existingacerTaNUITKA_PACKAGE_pyasn1_codec_ceru\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__upyasn1\codec\cer\__init__.pyu<module pyasn1.codec.cer>u.pyasn1.codec.cer.decoderPalengthlaerroraPyAsn1ErrorTuNot single-octet Boolean payloadareadFromStreamasubstrateaoptionsaSubstrateUnderrunErroraoct2intachunklluUnexpected Boolean payload: %saselfa_createComponentaasn1SpecatagSetavalueDecoderuBooleanPayloadDecoder.valueDecodera__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1Taerrorupyasn1.codec.streamingTareadFromStreamupyasn1.codec.berTadecoderadecoderupyasn1.compat.octetsTaoct2intupyasn1.typeTaunivaunivadecodeaStreamingDecodera__all__aAbstractSimplePayloadDecodera__prepare__aBooleanPayloadDecodera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.codec.cer.decodera__module__a__qualname__aBooleanTlaprotoComponentTnnnnna__orig_bases__aBitStringPayloadDecoderaOctetStringPayloadDecoderaRealPayloadDecoderaTAG_MAPacopyaupdateaBitStringaOctetStringaRealaTYPE_MAPatagMapatypeMapavaluesatypeDecoderatypeIdaSingleItemDecoderaSINGLE_ITEM_DECODERaDecoderaSTREAMING_DECODERupyasn1\codec\cer\decoder.pyu<module pyasn1.codec.cer.decoder>Ta__class__Taselfasubstrateaasn1SpecatagSetalengthastateadecodeFunasubstrateFunaoptionsachunkabyteavalueu.pyasn1.codec.cer.encoder
lTlTlutoo many values to unpack (expected 3)a_dropFloatingPointacloneaasNumbersaPLUS_CHARaMINUS_CHARaerroraPyAsn1ErroruMust be UTC time: %rlaZ_CHARuMissing "Z" time zone specifier: %raCOMMA_CHARuComma in fractions disallowed: %raDOT_CHARaminasearchIndexaselfaZERO_CHARlaisModifiedanumbersaMIN_LENGTHaMAX_LENGTHuLength constraint violated: %ravalueamaxChunkSizelaencoderaOctetStringEncoderaencodeValueaasn1Speca_encodeComponentsastr2octsTwamaxalenaljustamaxLenazeroasortu<lambda>uSetOfEncoder.encodeValue.<locals>.<lambda>TakeyanullajoinachunksaifNotEmptyutoo many values to unpack (expected 2)atypeIdaunivaChoiceatagSetacomponentTypeaminTagSetuSort SET components by tag

        Sort regardless of the Choice value (static sort)
        aisInconsistentavaluesaisOptionalaisValueaisDefaultedacomponentaasn1ObjectacompsMapacompsaappendanamedTypesanameuComponent name "%s" not found in %rasorteda_componentSortKeyaoptionsaupdateTaifNotEmptyanamedTypeaopenTypeaisSameTypeWithasubstratea__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1Taerrorupyasn1.codec.berTaencoderupyasn1.compat.octetsTastr2octsanullupyasn1.typeTaunivTausefulausefulaEncoderaencodea__all__aIntegerEncodera__prepare__aBooleanEncodera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.codec.cer.encodera__module__a__qualname__uBooleanEncoder.encodeValuea__orig_bases__aRealEncodera_chooseEncBaseuRealEncoder._chooseEncBaseTOobjectaTimeEncoderMixInaordTwZlZTw+l+Tw-l-Tw,l,Tw.l.Tw0l0lluTimeEncoderMixIn.encodeValueaGeneralizedTimeEncoderlaUTCTimeEncoderl
laSequenceOfEncoderaSetOfEncoderuSetOfEncoder.encodeValueuSequenceOfEncoder.encodeValueaSequenceEncoderaSetEncoderastaticmethoduSetEncoder._componentSortKeyuSetEncoder.encodeValueaomitEmptyOptionalsaTAG_MAPacopyaBooleanaRealaGeneralizedTimeaUTCTimeaSetOfaSequenceaTYPE_MAPaSetaSequenceOfatagMapatypeMapaSingleItemEncoderafixedDefLengthModeafixedChunkSizeaSINGLE_ITEM_ENCODERupyasn1\codec\cer\encoder.pyTwxu<module pyasn1.codec.cer.encoder>Ta__class__TaselfavaluewmwbweTacomponentAndTypeacomponentaasn1SpecTaselfavalueaasn1SpecaencodeFunaoptionsachunksTaselfavalueaasn1SpecaencodeFunaoptionsachunksazeroamaxLenapaddedChunksTaselfavalueaasn1SpecaencodeFunaoptionsanumbersaisModifiedasearchIndexTaselfavalueaasn1SpecaencodeFunaoptionsasubstrateTaselfavalueaasn1SpecaencodeFunaoptionsasubstrateacompsacompsMapainconsistencyanamedTypesaidxacomponentanamedTypeacompacompTypeachunkawrapTypeu.pyasn1.codeca__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existingacodecTaNUITKA_PACKAGE_pyasn1_codecu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__upyasn1\codec\__init__.pyu<module pyasn1.codec>u.pyasn1.codec.der^a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existingucodec\derTaNUITKA_PACKAGE_pyasn1_codecu\not_existingaderTaNUITKA_PACKAGE_pyasn1_codec_deru\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__upyasn1\codec\der\__init__.pyu<module pyasn1.codec.der>u.pyasn1.codec.der.decoder4a__doc__a__file__a__spec__aoriginahas_locationa__cached__upyasn1.codec.cerTadecoderladecoderupyasn1.typeTaunivaunivadecodeaStreamingDecodera__all__aBitStringPayloadDecodera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.codec.der.decodera__module__a__qualname__asupportConstructedForma__orig_bases__aOctetStringPayloadDecoderaRealPayloadDecoderaTAG_MAPacopyaupdateaBitStringatagSetaOctetStringaRealaTYPE_MAPatagMapatypeMapavaluesatypeDecoderaprotoComponentatypeIdaSingleItemDecoderasupportIndefLengthaSINGLE_ITEM_DECODERaDecoderaSTREAMING_DECODERupyasn1\codec\der\decoder.pyu<module pyasn1.codec.der.decoder>Ta__class__u.pyasn1.codec.der.encoder>utoo many values to unpack (expected 2)atypeIdaunivaChoiceatagSetaasn1SpecagetComponentacomponentTypeanamedTypesanameaerroraPyAsn1Erroru%s components for Choice at %ruMultiple uNone luSort SET components by tag

        Sort depending on the actual Choice value (dynamic sort)
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1Taerrorupyasn1.codec.cerTaencoderaencoderupyasn1.typeTaunivaEncoderaencodea__all__aSetEncodera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.codec.der.encodera__module__a__qualname__astaticmethoda_componentSortKeyuSetEncoder._componentSortKeya__orig_bases__aTAG_MAPacopyaupdateaSetaTYPE_MAPatagMapatypeMapaSingleItemEncoderafixedDefLengthModeafixedChunkSizeaSINGLE_ITEM_ENCODERupyasn1\codec\der\encoder.pyu<module pyasn1.codec.der.encoder>Ta__class__TacomponentAndTypeacomponentaasn1SpecacompTypeanamesu.pyasn1.codec.streamingS`a_rawaBytesIOa_cachela_markedPositionareadaseekaosaSEEK_CURlwnawritearead_from_cacheuPosition where the currently processed element starts.

        This is used for back-tracking in SingleItemDecoder.__call__
        and (indefLen)ValueDecoder and should not be used for other purposes.
        The client is not supposed to ever seek before this position.
        atellaioaDEFAULT_BUFFER_SIZEaunivaOctetStringaasOctetsa_PY2afileaBufferedReaderaseekableaCachingStreamWrapperaerroraUnsupportedSubstrateErroruCannot convert asubstratea__name__u to a seekable bit stream.uConvert object to seekable byte-stream.

    Parameters
    ----------
    substrate: :py:class:`bytes` or :py:class:`io.IOBase` or :py:class:`univ.OctetString`

    Returns
    -------
    : :py:class:`io.IOBase`

    Raises
    ------
    : :py:class:`~pyasn1.error.PyAsn1Error`
        If the supplied substrate cannot be converted to a seekable stream.
    uCheck whether we have reached the end of a stream.

    Although it is more effective to read and catch exceptions, this
    function

    Parameters
    ----------
    substrate: :py:class:`IOBase`
        Stream to check

    Returns
    -------
    : :py:class:`bool`
    aSEEK_ENDaSEEK_SETTlaisEndOfStreamuPeek into stream.

    Parameters
    ----------
    substrate: :py:class:`IOBase`
        Stream to read from.

    size: :py:class:`int`
        How many bytes to peek (-1 = all available)

    Returns
    -------
    : :py:class:`bytes` or :py:class:`str`
        The return type depends on Python major version
    apeekasizeareadFromStreamapeekIntoStreamuRead from the stream.

    Parameters
    ----------
    substrate: :py:class:`IOBase`
        Stream to read from.

    Keyword parameters
    ------------------
    size: :py:class:`int`
        How many bytes to read (-1 = all available)

    context: :py:class:`dict`
        Opaque caller context will be attached to exception objects created
        by this function.

    Yields
    ------
    : :py:class:`bytes` or :py:class:`str` or :py:class:`SubstrateUnderrunError`
        Read data or :py:class:`~pyasn1.error.SubstrateUnderrunError`
        object if no `size` bytes is readily available in the stream. The
        data type depends on Python major version

    Raises
    ------
    : :py:class:`~pyasn1.error.EndOfStreamError`
        Input stream is exhausted
    aSubstrateUnderrunErroracontextTacontextaEndOfStreamErrora__doc__a__file__a__spec__aoriginahas_locationa__cached__asysapyasn1Taerrorupyasn1.typeTaunivaIOBasea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.codec.streaminga__module__uWrapper around non-seekable streams.

    Note that the implementation is tied to the decoder,
    not checking for dangerous arguments for the sake
    of performance.

    The read bytes are kept in an internal cache until
    setting _markedPosition which may reset the cache.
    a__qualname__a__init__uCachingStreamWrapper.__init__uCachingStreamWrapper.peekuCachingStreamWrapper.seekableuCachingStreamWrapper.seekTluCachingStreamWrapper.readapropertyamarkedPositionuCachingStreamWrapper.markedPositionasetteruCachingStreamWrapper.tella__orig_bases__aasSeekableStreamTlnupyasn1\codec\streaming.pyu<module pyasn1.codec.streaming>Ta__class__TaselfarawTasubstrateTasubstrateacparesultareceivedTaselfTaselfavalueTaselfwnaresultTasubstrateasizeareceivedacurrent_positionachunkTaselfwnaread_from_cachearead_from_rawTasubstrateasizeacontextareceivedTaselfwnawhenceu.pyasn1.compat)a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existingacompatTaNUITKA_PACKAGE_pyasn1_compatu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__a_MISSINGupyasn1\compat\__init__.pyu<module pyasn1.compat>u.pyasn1.compat.integer"afrom_bytesabigTasignedamaxabit_lengthllalengthlato_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaplatformupyasn1.compat.octetsTaoct2intanullaensureStringaoct2intanullaensureStringapython_implementationaimplementationTFTFlabitLengthupyasn1\compat\integer.pyu<module pyasn1.compat.integer>TanumberTaoctetsasignedTavalueasignedalengthu.pyasn1.compat.octetsE uaint2octaoct2intaunicodeaints2octsaencodeTuiso-8859-1adecodea__doc__a__file__a__spec__aoriginahas_locationa__cached__aversion_infollachru<lambda>anullaordaocts2intsastr2octsaocts2straisOctetsTypeaisStringTypeaensureStringcupyasn1\compat\octets.pyTwsTwxu<module pyasn1.compat.octets>.pyasn1a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__u0.5.1a__version__upyasn1\__init__.pyu<module pyasn1>u.pyasn1.debug{aloggingagetLoggerTapyasn1asetLevelaDEBUGaStreamHandleraFormatterTu%(asctime)s %(name)s: %(message)sasetFormatteraaddHandlera_Printer__loggeradebugaDEBUG_NONEa_flagsaloggerNameaPrinteraNullHandlerTaloggerahandlera_printeraprinteradefaultPrinterurunning pyasn1 %s, debug flags %sa__version__u, lTw!w~:lnnaselfaFLAG_MAPaerroraPyAsn1Errorubad debug flag %sudebug category '%s' %sadisabledaenabledulogger %s, flags %xa_LOGaLOGGEE_MAPaitemsutoo many values to unpack (expected 2)asysamodulesasetLoggerw aocts2intsu%s%.2Xlu
%.5d: ua_listw.aappendapopa__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1Ta__version__Taerrorupyasn1.compat.octetsTaocts2intsaDebugahexdumpa__all__laDEBUG_ENCODERlaDEBUG_DECODERlaDEBUG_ALLanoneaencoderadecoderaallTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.debuga__module__a__qualname__Tnnna__init__uPrinter.__init__a__call__uPrinter.__call__u<python logging>a__str__uPrinter.__str__a__orig_bases__uDebug.__init__uDebug.__str__uDebug.__call__a__and__uDebug.__and__a__rand__uDebug.__rand__aLOGaregisterLoggeeaScopeuScope.__init__uScope.__str__apushuScope.pushuScope.popascopeupyasn1\debug.pyu<module pyasn1.debug>Ta__class__TaselfaflagTaselfamsgTaselfTaselfaflagsaoptionsaflagainverseTaselfaloggerahandleraformatterTaoctetsTaselfatokenTamoduleanameaflagsTauserLoggeramoduleanameaflags.pyasn1.error!4a_argsa_kwargsagetacontextuReturn exception context

        When exception object is created, the caller can supply some opaque
        context for the upper layers to better understand the cause of the
        exception.

        Returns
        -------
        : :py:class:`dict`
            Dict holding context specific data
        a__init__aargsaPyAsn1Errora__doc__a__file__a__spec__aoriginahas_locationa__cached__TEExceptionla__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.errora__module__uBase pyasn1 exception

    `PyAsn1Error` is the base exception class (based on
    :class:`Exception`) that represents all possible ASN.1 related
    errors.

    Parameters
    ----------
    args:
        Opaque positional parameters

    Keyword Args
    ------------
    kwargs:
        Opaque keyword parameters

    a__qualname__uPyAsn1Error.__init__apropertyuPyAsn1Error.contexta__orig_bases__aValueConstraintErroruASN.1 type constraints violation exception

    The `ValueConstraintError` exception indicates an ASN.1 value
    constraint violation.

    It might happen on value object instantiation (for scalar types) or on
    serialization (for constructed types).
    aSubstrateUnderrunErroruASN.1 data structure deserialization error

    The `SubstrateUnderrunError` exception indicates insufficient serialised
    data on input of a de-serialization codec.
    aEndOfStreamErroruASN.1 data structure deserialization error

    The `EndOfStreamError` exception indicates the condition of the input
    stream has been closed.
    aUnsupportedSubstrateErroruUnsupported substrate type to parse as ASN.1 data.aPyAsn1UnicodeErroruUnicode text processing error

    The `PyAsn1UnicodeError` exception is a base class for errors relating to
    unicode text de/serialization.

    Apart from inheriting from :class:`PyAsn1Error`, it also inherits from
    :class:`UnicodeError` to help the caller catching unicode-related errors.
    TnuPyAsn1UnicodeError.__init__aPyAsn1UnicodeDecodeErroruUnicode text decoding error

    The `PyAsn1UnicodeDecodeError` exception represents a failure to
    deserialize unicode text.

    Apart from inheriting from :class:`PyAsn1UnicodeError`, it also inherits
    from :class:`UnicodeDecodeError` to help the caller catching unicode-related
    errors.
    aPyAsn1UnicodeEncodeErroruUnicode text encoding error

    The `PyAsn1UnicodeEncodeError` exception represents a failure to
    serialize unicode text.

    Apart from inheriting from :class:`PyAsn1UnicodeError`, it also inherits
    from :class:`UnicodeEncodeError` to help the caller catching
    unicode-related errors.
    upyasn1\error.pyu<module pyasn1.error>Ta__class__TaselfaargsakwargsTaselfamessageaunicode_errorTaselfu.pyasn1.type.basen5aAsn1Itema_typeCounteratagSetasubtypeSpecaupdatea_readOnlylw_aerroraPyAsn1Erroruread-only instance attribute "%s"aselfaprettyPrintuFor |ASN.1| type is equivalent to *tagSet*
        atagmapaTagMapuReturn a :class:`~pyasn1.type.tagmap.TagMap` object mapping ASN.1 tags to ASN.1 objects within callee object.
        aotheruExamine |ASN.1| type for equality with other ASN.1 type.

        ASN.1 tags (:py:mod:`~pyasn1.type.tag`) and constraints
        (:py:mod:`~pyasn1.type.constraint`) are examined when carrying
        out ASN.1 types comparison.

        Python class inheritance relationship is NOT considered.

        Parameters
        ----------
        other: a pyasn1 type object
            Class instance representing ASN.1 type.

        Returns
        -------
        : :class:`bool`
            :obj:`True` if *other* is |ASN.1| type,
            :obj:`False` otherwise.
        aisSuperTagSetOfaisSuperTypeOfuExamine |ASN.1| type for subtype relationship with other ASN.1 type.

        ASN.1 tags (:py:mod:`~pyasn1.type.tag`) and constraints
        (:py:mod:`~pyasn1.type.constraint`) are examined when carrying
        out ASN.1 types comparison.

        Python class inheritance relationship is NOT considered.

        Parameters
        ----------
            other: a pyasn1 type object
                Class instance representing ASN.1 type.

        Returns
        -------
            : :class:`bool`
                :obj:`True` if *other* is a subtype of |ASN.1| type,
                :obj:`False` otherwise.
        anoValueaeffectiveTagSetatagMapaisValuea_instanceagetPluguNoValue.__new__.<locals>.getPlugTOstrOintOlistOdictaclsaskipMethodsastartswithTa__aendswithacallableanamea__new__apluguNoValue.__new__.<locals>.getPlug.<locals>.pluguAttempted "%s" operation on ASN.1 schema objectuAttribute %s not presentu<%s object>a__name__aAsn1Typea__init__adefaultValueaprettyInasysaexc_infoutoo many values to unpack (expected 3)u%s at %savaluea_valueu%s %s objectaschemaareadOnlyaitemsutoo many values to unpack (expected 2)arepresentationu, %s %s:nlnu...:lnnu, payload [%s]u<%s>uIndicate that |ASN.1| object represents ASN.1 value.

        If *isValue* is :obj:`False` then this object represents just
        ASN.1 schema.

        If *isValue* is :obj:`True` then, in addition to its ASN.1 schema
        features, this object can also be used like a Python built-in object
        (e.g. :class:`int`, :class:`str`, :class:`dict` etc.).

        Returns
        -------
        : :class:`bool`
            :obj:`False` if object represents just ASN.1 schema.
            :obj:`True` if object represents ASN.1 schema and can be used as a normal value.

        Note
        ----
        There is an important distinction between PyASN1 schema and value objects.
        The PyASN1 schema objects can only participate in ASN.1 schema-related
        operations (e.g. defining or testing the structure of the data). Most
        obvious uses of ASN.1 schema is to guide serialisation codecs whilst
        encoding/decoding serialised ASN.1 contents.

        The PyASN1 value objects can **additionally** participate in many operations
        involving regular Python objects (e.g. arithmetic, comprehension etc).
        acopyuCreate a modified version of |ASN.1| schema or value object.

        The `clone()` method accepts the same set arguments as |ASN.1|
        class takes on instantiation except that all arguments
        of the `clone()` method are optional.

        Whatever arguments are supplied, they are used to create a copy
        of `self` taking precedence over the ones used to instantiate `self`.

        Note
        ----
        Due to the immutable nature of the |ASN.1| object, if no arguments
        are supplied, no new |ASN.1| object will be created and `self` will
        be returned instead.
        aimplicitTagatagImplicitlyapopTaexplicitTagnatagExplicitlyainitializersuCreate a specialization of |ASN.1| schema or value object.

        The subtype relationship between ASN.1 types has no correlation with
        subtype relationship between Python types. ASN.1 type is mainly identified
        by its tag(s) (:py:class:`~pyasn1.type.tag.TagSet`) and value range
        constraints (:py:class:`~pyasn1.type.constraint.ConstraintsIntersection`).
        These ASN.1 type properties are implemented as |ASN.1| attributes.

        The `subtype()` method accepts the same set arguments as |ASN.1|
        class takes on instantiation except that all parameters
        of the `subtype()` method are optional.

        With the exception of the arguments described below, the rest of
        supplied arguments they are used to create a copy of `self` taking
        precedence over the ones used to instantiate `self`.

        The following arguments to `subtype()` create a ASN.1 subtype out of
        |ASN.1| type:

        Other Parameters
        ----------------
        implicitTag: :py:class:`~pyasn1.type.tag.Tag`
            Implicitly apply given ASN.1 tag object to `self`'s
            :py:class:`~pyasn1.type.tag.TagSet`, then use the result as
            new object's ASN.1 tag(s).

        explicitTag: :py:class:`~pyasn1.type.tag.Tag`
            Explicitly apply given ASN.1 tag object to `self`'s
            :py:class:`~pyasn1.type.tag.TagSet`, then use the result as
            new object's ASN.1 tag(s).

        subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
            Add ASN.1 constraints object to one of the `self`'s, then
            use the result as new object's ASN.1 constraints.

        Returns
        -------
        :
            new instance of |ASN.1| schema or value object

        Note
        ----
        Due to the immutable nature of the |ASN.1| object, if no arguments
        are supplied, no new |ASN.1| object will be created and `self` will
        be returned instead.
        aprettyOutu%s -> %sacomponentTypeasizeSpeca_moveSizeSpecu, %s=%racomponentsu, TuMethod not implementedacloneValueFlaga_cloneComponentValuesacloneuCreate a modified version of |ASN.1| schema object.

        The `clone()` method accepts the same set arguments as |ASN.1|
        class takes on instantiation except that all arguments
        of the `clone()` method are optional.

        Whatever arguments are supplied, they are used to create a copy
        of `self` taking precedence over the ones used to instantiate `self`.

        Possible values of `self` are never copied over thus `clone()` can
        only create a new schema object.

        Returns
        -------
        :
            new instance of |ASN.1| type/value

        Note
        ----
        Due to the mutable nature of the |ASN.1| object, even if no arguments
        are supplied, a new |ASN.1| object will be created and returned.
        TaimplicitTagnuCreate a specialization of |ASN.1| schema object.

        The `subtype()` method accepts the same set arguments as |ASN.1|
        class takes on instantiation except that all parameters
        of the `subtype()` method are optional.

        With the exception of the arguments described below, the rest of
        supplied arguments they are used to create a copy of `self` taking
        precedence over the ones used to instantiate `self`.

        The following arguments to `subtype()` create a ASN.1 subtype out of
        |ASN.1| type.

        Other Parameters
        ----------------
        implicitTag: :py:class:`~pyasn1.type.tag.Tag`
            Implicitly apply given ASN.1 tag object to `self`'s
            :py:class:`~pyasn1.type.tag.TagSet`, then use the result as
            new object's ASN.1 tag(s).

        explicitTag: :py:class:`~pyasn1.type.tag.Tag`
            Explicitly apply given ASN.1 tag object to `self`'s
            :py:class:`~pyasn1.type.tag.TagSet`, then use the result as
            new object's ASN.1 tag(s).

        subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
            Add ASN.1 constraints object to one of the `self`'s, then
            use the result as new object's ASN.1 constraints.


        Returns
        -------
        :
            new instance of |ASN.1| type/value

        Note
        ----
        Due to the mutable nature of the |ASN.1| object, even if no arguments
        are supplied, a new |ASN.1| object will be created and returned.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1Taerrorupyasn1.typeTaconstraintaconstraintTatagatagTatagmapLaAsn1ItemaAsn1TypeaSimpleAsn1TypeaConstructedAsn1Typea__all__TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.basea__module__a__qualname__aclassmethodTlagetTypeIduAsn1Item.getTypeIda__orig_bases__uBase class for all classes representing ASN.1 types.

    In the user code, |ASN.1| class is normally used only for telling
    ASN.1 objects from others.

    Note
    ----
    For as long as ASN.1 is concerned, a way to compare ASN.1 types
    is to use :meth:`isSameTypeWith` and :meth:`isSuperTypeOf` methods.
    aTagSetaConstraintsIntersectionatypeIduAsn1Type.__init__a__setattr__uAsn1Type.__setattr__a__str__uAsn1Type.__str__apropertyuAsn1Type.readOnlyuAsn1Type.effectiveTagSetuAsn1Type.tagMapTtpaisSameTypeWithuAsn1Type.isSameTypeWithuAsn1Type.isSuperTypeOfastaticmethodaisNoValueuAsn1Type.isNoValueTluAsn1Type.prettyPrintagetTagSetuAsn1Type.getTagSetagetEffectiveTagSetuAsn1Type.getEffectiveTagSetagetTagMapuAsn1Type.getTagMapagetSubtypeSpecuAsn1Type.getSubtypeSpecahasValueuAsn1Type.hasValueaAsn1ItemBaseaNoValueuCreate a singleton instance of NoValue class.

    The *NoValue* sentinel object represents an instance of ASN.1 schema
    object as opposed to ASN.1 value object.

    Only ASN.1 schema-related operations can be performed on ASN.1
    schema objects.

    Warning
    -------
    Any operation attempted on the *noValue* object will raise the
    *PyAsn1Error* exception.
    Sa__delattr__a__getinitargs__a__getattribute__a__class__a__del__a__reduce__a__objclass__a__repr__a__reduce_ex__a__setattr__a__new__a__qualname__a__getstate__a__sizeof__aim_classa__setstate__a__init__a__getnewargs__a__getattr__a__slots__uNoValue.__new__a__getattr__uNoValue.__getattr__a__repr__uNoValue.__repr__aSimpleAsn1TypeuBase class for all simple classes representing ASN.1 types.

    ASN.1 distinguishes types by their ability to hold other objects.
    Scalar types are known as *simple* in ASN.1.

    In the user code, |ASN.1| class is normally used only for telling
    ASN.1 objects from others.

    Note
    ----
    For as long as ASN.1 is concerned, a way to compare ASN.1 types
    is to use :meth:`isSameTypeWith` and :meth:`isSuperTypeOf` methods.
    uSimpleAsn1Type.__init__uSimpleAsn1Type.__repr__a__eq__uSimpleAsn1Type.__eq__a__ne__uSimpleAsn1Type.__ne__a__lt__uSimpleAsn1Type.__lt__a__le__uSimpleAsn1Type.__le__a__gt__uSimpleAsn1Type.__gt__a__ge__uSimpleAsn1Type.__ge__a__bool__uSimpleAsn1Type.__bool__a__hash__uSimpleAsn1Type.__hash__uSimpleAsn1Type.isValueuSimpleAsn1Type.cloneasubtypeuSimpleAsn1Type.subtypeuSimpleAsn1Type.prettyInuSimpleAsn1Type.prettyOutuSimpleAsn1Type.prettyPrintaprettyPrintTypeuSimpleAsn1Type.prettyPrintTypeaAbstractSimpleAsn1ItemaConstructedAsn1TypeuBase class for all constructed classes representing ASN.1 types.

    ASN.1 distinguishes types by their ability to hold other objects.
    Those "nesting" types are known as *constructed* in ASN.1.

    In the user code, |ASN.1| class is normally used only for telling
    ASN.1 objects from others.

    Note
    ----
    For as long as ASN.1 is concerned, a way to compare ASN.1 types
    is to use :meth:`isSameTypeWith` and :meth:`isSuperTypeOf` methods.
    astrictConstraintsuConstructedAsn1Type.__init__uConstructedAsn1Type._moveSizeSpecuConstructedAsn1Type.__repr__uConstructedAsn1Type.__eq__uConstructedAsn1Type.__ne__uConstructedAsn1Type.__lt__uConstructedAsn1Type.__le__uConstructedAsn1Type.__gt__uConstructedAsn1Type.__ge__uConstructedAsn1Type.__bool__uConstructedAsn1Type.componentsuConstructedAsn1Type._cloneComponentValuesuConstructedAsn1Type.cloneuConstructedAsn1Type.subtypeagetComponentByPositionuConstructedAsn1Type.getComponentByPositionTtasetComponentByPositionuConstructedAsn1Type.setComponentByPositionasetComponentsuConstructedAsn1Type.setComponentsasetDefaultComponentsuConstructedAsn1Type.setDefaultComponentsagetComponentTypeuConstructedAsn1Type.getComponentTypeaverifySizeSpecuConstructedAsn1Type.verifySizeSpecaAbstractConstructedAsn1Itemupyasn1\type\base.pyu<module pyasn1.type.base>Ta__class__TaselfTaselfaotherTaselfaattrTaselfakwargsareadOnlyTaselfavalueakwargsaexTypeaexValueaexTbTaclsagetPlugaop_namesanameTaselfarepresentationaattravalueTaselfanameavalueTaselfamyCloneacloneValueFlagTaselfakwargsasizeSpecasubtypeSpecTaselfakwargsacloneValueFlagainitializersacloneTaselfavalueakwargsainitializersTaselfaidxTanameaplugTaclsaincrementTavaluesavalueTaselfaotheramatchTagsamatchConstraintsTaselfaargsakwanameTanameTaselfavalueTaselfascopeTaselfaidxavalueaverifyConstraintsTaselfaargsakwargsaidxavaluewkTaselfakwargsainitializersacloneValueFlagaimplicitTagaexplicitTagaargaoptionacloneTaselfavalueakwargsainitializersaimplicitTagaexplicitTagaargaoptionu.pyasn1.type.charQna_valueaencodeaencodingasysaexc_infolaerroraPyAsn1UnicodeEncodeErroruCan't encode string '%s' with codec %sadecodeTOtupleOlistaprettyInaunivaOctetStringaasOctetsTEUnicodeDecodeErrorELookupErroraPyAsn1UnicodeDecodeErroruCan't decode string '%s' with codec %savalueaselfaprettyOutaAbstractCharacterStringa__str__a__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1Taerrorlupyasn1.typeTatagatagTaunivL
aNumericStringaPrintableStringaTeletexStringaT61StringaVideotexStringaIA5StringaGraphicStringaVisibleStringaISO646StringaGeneralStringaUniversalStringaBMPStringaUTF8Stringa__all__aNoValueanoValuea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.type.chara__module__uCreates |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`,
    its objects are immutable and duck-type Python 2 :class:`str` or Python 3
    :class:`bytes`. When used in octet-stream context, |ASN.1| type assumes
    "|encoding|" encoding.

    Keyword Args
    ------------
    value: :class:`unicode`, :class:`str`, :class:`bytes` or |ASN.1| object
        :class:`unicode` object (Python 2) or :class:`str` (Python 3),
        alternatively :class:`str` (Python 2) or :class:`bytes` (Python 3)
        representing octet-stream of serialised unicode string
        (note `encoding` parameter) or |ASN.1| class instance.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    encoding: :py:class:`str`
        Unicode codec ID to encode/decode :class:`unicode` (Python 2) or
        :class:`str` (Python 3) the payload when |ASN.1| object is used
        in octet-stream context.

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.
    a__qualname__uAbstractCharacterString.__str__a__bytes__uAbstractCharacterString.__bytes__uAbstractCharacterString.prettyInTtuAbstractCharacterString.asOctetsaasNumbersuAbstractCharacterString.asNumbersuAbstractCharacterString.prettyOutTlaprettyPrintuAbstractCharacterString.prettyPrinta__reversed__uAbstractCharacterString.__reversed__a__orig_bases__aNumericStringatagSetatagImplicitlyaTagatagClassUniversalatagFormatSimpleluus-asciiagetTypeIdatypeIdaPrintableStringlaTeletexStringluiso-8859-1aT61StringaVideotexStringlaIA5StringlaGraphicStringlaVisibleStringlaISO646StringaGeneralStringlaUniversalStringluutf-32-beaBMPStringluutf-16-beaUTF8Stringluutf-8upyasn1\type\char.pyu<module pyasn1.type.char>Ta__class__TaselfaexcTaselfTaselfapaddingTaselfavalueaexcTaselfavalueTaselfascopeavalueu.pyasn1.typea__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pyasn1u\not_existingatypeTaNUITKA_PACKAGE_pyasn1_typeu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__upyasn1\type\__init__.pyu<module pyasn1.type>u.pyasn1.type.constraintBAa_valueMapa_setValuesa__name__a_valuesa_AbstractConstraint__hasha_testValueaerroraValueConstraintErroru%s failed at: %rasysaexc_infolu%s objectu, consts %su, u<%s>agetValueMapa_setadifferenceaunionaAbstractConstraintavalueaidxaselfastartastopaPyAsn1Erroru%s: bad constraint valuesutoo many values to unpack (expected 2)u%s: screwed constraint values (start > stop): %s > %saissupersetTu<must be present>TuNo arguments expectedTuComponent is not present:Tu<must be absent>uComponent is not absent: %rageta_InnerTypeConstraint__singleTypeConstrainta_InnerTypeConstraint__multipleTypeConstraintaABSENTllaaddaupdateuall of %s failed for "%s"a__doc__a__file__a__spec__aoriginahas_locationa__cached__upyasn1.typeTaerrorLaSingleValueConstraintaContainedSubtypeConstraintaValueRangeConstraintaValueSizeConstraintaPermittedAlphabetConstraintaInnerTypeConstraintaConstraintsExclusionaConstraintsIntersectionaConstraintsUniona__all__TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.constrainta__module__a__qualname__a__init__uAbstractConstraint.__init__Tna__call__uAbstractConstraint.__call__a__repr__uAbstractConstraint.__repr__a__eq__uAbstractConstraint.__eq__a__ne__uAbstractConstraint.__ne__a__lt__uAbstractConstraint.__lt__a__le__uAbstractConstraint.__le__a__gt__uAbstractConstraint.__gt__a__ge__uAbstractConstraint.__ge__a__bool__uAbstractConstraint.__bool__a__hash__uAbstractConstraint.__hash__uAbstractConstraint._setValuesuAbstractConstraint._testValueuAbstractConstraint.getValueMapaisSuperTypeOfuAbstractConstraint.isSuperTypeOfaisSubTypeOfuAbstractConstraint.isSubTypeOfa__orig_bases__aSingleValueConstraintuCreate a SingleValueConstraint object.

    The SingleValueConstraint satisfies any value that
    is present in the set of permitted values.

    Objects of this type are iterable (emitting constraint values) and
    can act as operands for some arithmetic operations e.g. addition
    and subtraction. The latter can be used for combining multiple
    SingleValueConstraint objects into one.

    The SingleValueConstraint object can be applied to
    any ASN.1 type.

    Parameters
    ----------
    *values: :class:`int`
        Full set of values permitted by this constraint object.

    Examples
    --------
    .. code-block:: python

        class DivisorOfSix(Integer):
            '''
            ASN.1 specification:

            Divisor-Of-6 ::= INTEGER (1 | 2 | 3 | 6)
            '''
            subtypeSpec = SingleValueConstraint(1, 2, 3, 6)

        # this will succeed
        divisor_of_six = DivisorOfSix(1)

        # this will raise ValueConstraintError
        divisor_of_six = DivisorOfSix(7)
    uSingleValueConstraint._setValuesuSingleValueConstraint._testValuea__contains__uSingleValueConstraint.__contains__a__iter__uSingleValueConstraint.__iter__a__sub__uSingleValueConstraint.__sub__a__add__uSingleValueConstraint.__add__aContainedSubtypeConstraintuCreate a ContainedSubtypeConstraint object.

    The ContainedSubtypeConstraint satisfies any value that
    is present in the set of permitted values and also
    satisfies included constraints.

    The ContainedSubtypeConstraint object can be applied to
    any ASN.1 type.

    Parameters
    ----------
    *values:
        Full set of values and constraint objects permitted
        by this constraint object.

    Examples
    --------
    .. code-block:: python

        class DivisorOfEighteen(Integer):
            '''
            ASN.1 specification:

            Divisors-of-18 ::= INTEGER (INCLUDES Divisors-of-6 | 9 | 18)
            '''
            subtypeSpec = ContainedSubtypeConstraint(
                SingleValueConstraint(1, 2, 3, 6), 9, 18
            )

        # this will succeed
        divisor_of_eighteen = DivisorOfEighteen(9)

        # this will raise ValueConstraintError
        divisor_of_eighteen = DivisorOfEighteen(10)
    uContainedSubtypeConstraint._testValueaValueRangeConstraintuCreate a ValueRangeConstraint object.

    The ValueRangeConstraint satisfies any value that
    falls in the range of permitted values.

    The ValueRangeConstraint object can only be applied
    to :class:`~pyasn1.type.univ.Integer` and
    :class:`~pyasn1.type.univ.Real` types.

    Parameters
    ----------
    start: :class:`int`
        Minimum permitted value in the range (inclusive)

    end: :class:`int`
        Maximum permitted value in the range (inclusive)

    Examples
    --------
    .. code-block:: python

        class TeenAgeYears(Integer):
            '''
            ASN.1 specification:

            TeenAgeYears ::= INTEGER (13 .. 19)
            '''
            subtypeSpec = ValueRangeConstraint(13, 19)

        # this will succeed
        teen_year = TeenAgeYears(18)

        # this will raise ValueConstraintError
        teen_year = TeenAgeYears(20)
    uValueRangeConstraint._testValueuValueRangeConstraint._setValuesaValueSizeConstraintuCreate a ValueSizeConstraint object.

    The ValueSizeConstraint satisfies any value for
    as long as its size falls within the range of
    permitted sizes.

    The ValueSizeConstraint object can be applied
    to :class:`~pyasn1.type.univ.BitString`,
    :class:`~pyasn1.type.univ.OctetString` (including
    all :ref:`character ASN.1 types <type.char>`),
    :class:`~pyasn1.type.univ.SequenceOf`
    and :class:`~pyasn1.type.univ.SetOf` types.

    Parameters
    ----------
    minimum: :class:`int`
        Minimum permitted size of the value (inclusive)

    maximum: :class:`int`
        Maximum permitted size of the value (inclusive)

    Examples
    --------
    .. code-block:: python

        class BaseballTeamRoster(SetOf):
            '''
            ASN.1 specification:

            BaseballTeamRoster ::= SET SIZE (1..25) OF PlayerNames
            '''
            componentType = PlayerNames()
            subtypeSpec = ValueSizeConstraint(1, 25)

        # this will succeed
        team = BaseballTeamRoster()
        team.extend(['Jan', 'Matej'])
        encode(team)

        # this will raise ValueConstraintError
        team = BaseballTeamRoster()
        team.extend(['Jan'] * 26)
        encode(team)

    Note
    ----
    Whenever ValueSizeConstraint is applied to mutable types
    (e.g. :class:`~pyasn1.type.univ.SequenceOf`,
    :class:`~pyasn1.type.univ.SetOf`), constraint
    validation only happens at the serialisation phase rather
    than schema instantiation phase (as it is with immutable
    types).
    uValueSizeConstraint._testValueaPermittedAlphabetConstraintuCreate a PermittedAlphabetConstraint object.

    The PermittedAlphabetConstraint satisfies any character
    string for as long as all its characters are present in
    the set of permitted characters.

    Objects of this type are iterable (emitting constraint values) and
    can act as operands for some arithmetic operations e.g. addition
    and subtraction.

    The PermittedAlphabetConstraint object can only be applied
    to the :ref:`character ASN.1 types <type.char>` such as
    :class:`~pyasn1.type.char.IA5String`.

    Parameters
    ----------
    *alphabet: :class:`str`
        Full set of characters permitted by this constraint object.

    Example
    -------
    .. code-block:: python

        class BooleanValue(IA5String):
            '''
            ASN.1 specification:

            BooleanValue ::= IA5String (FROM ('T' | 'F'))
            '''
            subtypeSpec = PermittedAlphabetConstraint('T', 'F')

        # this will succeed
        truth = BooleanValue('T')
        truth = BooleanValue('TF')

        # this will raise ValueConstraintError
        garbage = BooleanValue('TAF')

    ASN.1 `FROM ... EXCEPT ...` clause can be modelled by combining multiple
    PermittedAlphabetConstraint objects into one:

    Example
    -------
    .. code-block:: python

        class Lipogramme(IA5String):
            '''
            ASN.1 specification:

            Lipogramme ::=
                IA5String (FROM (ALL EXCEPT ("e"|"E")))
            '''
            subtypeSpec = (
                PermittedAlphabetConstraint(*string.printable) -
                PermittedAlphabetConstraint('e', 'E')
            )

        # this will succeed
        lipogramme = Lipogramme('A work of fiction?')

        # this will raise ValueConstraintError
        lipogramme = Lipogramme('Eel')

    Note
    ----
    Although `ConstraintsExclusion` object could seemingly be used for this
    purpose, practically, for it to work, it needs to represent its operand
    constraints as sets and intersect one with the other. That would require
    the insight into the constraint values (and their types) that are otherwise
    hidden inside the constraint object.

    Therefore it's more practical to model `EXCEPT` clause at
    `PermittedAlphabetConstraint` level instead.
    uPermittedAlphabetConstraint._setValuesuPermittedAlphabetConstraint._testValueaComponentPresentConstraintuCreate a ComponentPresentConstraint object.

    The ComponentPresentConstraint is only satisfied when the value
    is not `None`.

    The ComponentPresentConstraint object is typically used with
    `WithComponentsConstraint`.

    Examples
    --------
    .. code-block:: python

        present = ComponentPresentConstraint()

        # this will succeed
        present('whatever')

        # this will raise ValueConstraintError
        present(None)
    uComponentPresentConstraint._setValuesuComponentPresentConstraint._testValueaComponentAbsentConstraintuCreate a ComponentAbsentConstraint object.

    The ComponentAbsentConstraint is only satisfied when the value
    is `None`.

    The ComponentAbsentConstraint object is typically used with
    `WithComponentsConstraint`.

    Examples
    --------
    .. code-block:: python

        absent = ComponentAbsentConstraint()

        # this will succeed
        absent(None)

        # this will raise ValueConstraintError
        absent('whatever')
    uComponentAbsentConstraint._setValuesuComponentAbsentConstraint._testValueaWithComponentsConstraintuCreate a WithComponentsConstraint object.

    The `WithComponentsConstraint` satisfies any mapping object that has
    constrained fields present or absent, what is indicated by
    `ComponentPresentConstraint` and `ComponentAbsentConstraint`
    objects respectively.

    The `WithComponentsConstraint` object is typically applied
    to  :class:`~pyasn1.type.univ.Set` or
    :class:`~pyasn1.type.univ.Sequence` types.

    Parameters
    ----------
    *fields: :class:`tuple`
        Zero or more tuples of (`field`, `constraint`) indicating constrained
        fields.

    Notes
    -----
    On top of the primary use of `WithComponentsConstraint` (ensuring presence
    or absence of particular components of a :class:`~pyasn1.type.univ.Set` or
    :class:`~pyasn1.type.univ.Sequence`), it is also possible to pass any other
    constraint objects or their combinations. In case of scalar fields, these
    constraints will be verified in addition to the constraints belonging to
    scalar components themselves. However, formally, these additional
    constraints do not change the type of these ASN.1 objects.

    Examples
    --------

    .. code-block:: python

        class Item(Sequence):  #  Set is similar
            '''
            ASN.1 specification:

            Item ::= SEQUENCE {
                id    INTEGER OPTIONAL,
                name  OCTET STRING OPTIONAL
            } WITH COMPONENTS id PRESENT, name ABSENT | id ABSENT, name PRESENT
            '''
            componentType = NamedTypes(
                OptionalNamedType('id', Integer()),
                OptionalNamedType('name', OctetString())
            )
            withComponents = ConstraintsUnion(
                WithComponentsConstraint(
                    ('id', ComponentPresentConstraint()),
                    ('name', ComponentAbsentConstraint())
                ),
                WithComponentsConstraint(
                    ('id', ComponentAbsentConstraint()),
                    ('name', ComponentPresentConstraint())
                )
            )

        item = Item()

        # This will succeed
        item['id'] = 1

        # This will succeed
        item.reset()
        item['name'] = 'John'

        # This will fail (on encoding)
        item.reset()
        descr['id'] = 1
        descr['name'] = 'John'
    uWithComponentsConstraint._testValueuWithComponentsConstraint._setValuesaInnerTypeConstraintuValue must satisfy the type and presence constraintsuInnerTypeConstraint._testValueuInnerTypeConstraint._setValuesaConstraintsExclusionuCreate a ConstraintsExclusion logic operator object.

    The ConstraintsExclusion logic operator succeeds when the
    value does *not* satisfy the operand constraint.

    The ConstraintsExclusion object can be applied to
    any constraint and logic operator object.

    Parameters
    ----------
    *constraints:
        Constraint or logic operator objects.

    Examples
    --------
    .. code-block:: python

        class LuckyNumber(Integer):
            subtypeSpec = ConstraintsExclusion(
                SingleValueConstraint(13)
            )

        # this will succeed
        luckyNumber = LuckyNumber(12)

        # this will raise ValueConstraintError
        luckyNumber = LuckyNumber(13)

    Note
    ----
    The `FROM ... EXCEPT ...` ASN.1 clause should be modeled by combining
    constraint objects into one. See `PermittedAlphabetConstraint` for more
    information.
    uConstraintsExclusion._testValueuConstraintsExclusion._setValuesaAbstractConstraintSetuAbstractConstraintSet.__getitem__uAbstractConstraintSet.__iter__uAbstractConstraintSet.__add__a__radd__uAbstractConstraintSet.__radd__a__len__uAbstractConstraintSet.__len__uAbstractConstraintSet._setValuesaConstraintsIntersectionuCreate a ConstraintsIntersection logic operator object.

    The ConstraintsIntersection logic operator only succeeds
    if *all* its operands succeed.

    The ConstraintsIntersection object can be applied to
    any constraint and logic operator objects.

    The ConstraintsIntersection object duck-types the immutable
    container object like Python :py:class:`tuple`.

    Parameters
    ----------
    *constraints:
        Constraint or logic operator objects.

    Examples
    --------
    .. code-block:: python

        class CapitalAndSmall(IA5String):
            '''
            ASN.1 specification:

            CapitalAndSmall ::=
                IA5String (FROM ("A".."Z"|"a".."z"))
            '''
            subtypeSpec = ConstraintsIntersection(
                PermittedAlphabetConstraint('A', 'Z'),
                PermittedAlphabetConstraint('a', 'z')
            )

        # this will succeed
        capital_and_small = CapitalAndSmall('Hello')

        # this will raise ValueConstraintError
        capital_and_small = CapitalAndSmall('hello')
    uConstraintsIntersection._testValueaConstraintsUnionuCreate a ConstraintsUnion logic operator object.

    The ConstraintsUnion logic operator succeeds if
    *at least* a single operand succeeds.

    The ConstraintsUnion object can be applied to
    any constraint and logic operator objects.

    The ConstraintsUnion object duck-types the immutable
    container object like Python :py:class:`tuple`.

    Parameters
    ----------
    *constraints:
        Constraint or logic operator objects.

    Examples
    --------
    .. code-block:: python

        class CapitalOrSmall(IA5String):
            '''
            ASN.1 specification:

            CapitalOrSmall ::=
                IA5String (FROM ("A".."Z") | FROM ("a".."z"))
            '''
            subtypeSpec = ConstraintsUnion(
                PermittedAlphabetConstraint('A', 'Z'),
                PermittedAlphabetConstraint('a', 'z')
            )

        # this will succeed
        capital_or_small = CapitalAndSmall('Hello')

        # this will raise ValueConstraintError
        capital_or_small = CapitalOrSmall('hello!')
    uConstraintsUnion._testValueupyasn1\type\constraint.pyu<module pyasn1.type.constraint>Ta__class__TaselfaconstraintTaselfavalueTaselfTaselfavalueaidxTaselfaitemTaselfaotherTaselfaidxTaselfavaluesTaselfarepresentationTaselfavaluesaconstraintTaselfavalueswvTaselfavalueaidxaconstraintTaselfavalueaidxaconstraintastatusTaselfavalueaidxafieldaconstraintTaselfavalueaidxavalueSizeTaselfaotherConstraintu.pyasn1.type.errorYa__doc__a__file__a__spec__aoriginahas_locationa__cached__upyasn1.errorTaPyAsn1ErrorlaPyAsn1Errora__prepare__aValueConstraintErrora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.type.errora__module__a__qualname__a__orig_bases__upyasn1\type\error.pyu<module pyasn1.type.error>u.pyasn1.type.namedtype)a_NamedType__namea_NamedType__typea_NamedType__nameAndTypea_NamedType__openTypeu%s=%ranameaasn1ObjectaopenTypeu, open type %ru<%s object, type %s>a__name__a_NamedTypes__namedTypesa_NamedTypes__namedTypesLena_NamedTypes__computeMinTagSeta_NamedTypes__minTagSeta_NamedTypes__computeNameToPosMapa_NamedTypes__nameToPosMapa_NamedTypes__computeTagToPosMapa_NamedTypes__tagToPosMapaterminala_NamedTypes__computeAmbiguousTypesa_NamedTypes__ambiguousTypesa_NamedTypes__computeTagMapsTtTauniquea_NamedTypes__uniqueTagMapTFa_NamedTypes__nonUniqueTagMapaanyaisDefaultedaisOptionala_NamedTypes__hasOptionalOrDefaulta_NamedTypes__hasOpenTypesutoo many values to unpack (expected 2)a_NamedTypes__requiredComponentsa_NamedTypes__keysa_NamedTypes__valuesa_NamedTypes__itemsu, u%ru<%s object, types %s>lu<genexpr>uNamedTypes.__iter__.<locals>.<genexpr>a_PostponedError__errorMsgaerroraPyAsn1ErroratagMapaNamedTypesaPostponedErrorapresentTypesatagToPosMapuDuplicate component tag %s at %saidxanameToPosMapuDuplicate component name %s at %sTapartialAmbiguousTypesaselfaambiguousTypesDaterminaltTuType position out of rangeuReturn ASN.1 type object by its position in fields set.

        Parameters
        ----------
        idx: :py:class:`int`
            Field index

        Returns
        -------
        :
            ASN.1 type

        Raises
        ------
        ~pyasn1.error.PyAsn1Error
            If given position is out of fields range
        uType %s not founduReturn field position by its ASN.1 type.

        Parameters
        ----------
        tagSet: :class:`~pysnmp.type.tag.TagSet`
            ASN.1 tag set distinguishing one ASN.1 type from others.

        Returns
        -------
        : :py:class:`int`
            ASN.1 type position in fields set

        Raises
        ------
        ~pyasn1.error.PyAsn1Error
            If *tagSet* is not present or ASN.1 types are not unique within callee *NamedTypes*
        uReturn field name by its position in fields set.

        Parameters
        ----------
        idx: :py:class:`idx`
            Field index

        Returns
        -------
        : :py:class:`str`
            Field name

        Raises
        ------
        ~pyasn1.error.PyAsn1Error
            If given field name is not present in callee *NamedTypes*
        uName %s not founduReturn field position by filed name.

        Parameters
        ----------
        name: :py:class:`str`
            Field name

        Returns
        -------
        : :py:class:`int`
            Field position in fields set

        Raises
        ------
        ~pyasn1.error.PyAsn1Error
            If *name* is not present or not unique within callee *NamedTypes*
        uReturn ASN.1 types that are allowed at or past given field position.

        Some ASN.1 serialisation allow for skipping optional and defaulted fields.
        Some constructed ASN.1 types allow reordering of the fields. When recovering
        such objects it may be important to know which types can possibly be
        present at any given position in the field sets.

        Parameters
        ----------
        idx: :py:class:`int`
            Field index

        Returns
        -------
        : :class:`~pyasn1.type.tagmap.TagMap`
            Map if ASN.1 types allowed at given field position

        Raises
        ------
        ~pyasn1.error.PyAsn1Error
            If given position is out of fields range
        agetPositionByTypeuReturn the closest field position where given ASN.1 type is allowed.

        Some ASN.1 serialisation allow for skipping optional and defaulted fields.
        Some constructed ASN.1 types allow reordering of the fields. When recovering
        such objects it may be important to know at which field position, in field set,
        given *tagSet* is allowed at or past *idx* position.

        Parameters
        ----------
        tagSet: :class:`~pyasn1.type.tag.TagSet`
           ASN.1 type which field position to look up

        idx: :py:class:`int`
            Field position at or past which to perform ASN.1 type look up

        Returns
        -------
        : :py:class:`int`
            Field position in fields set

        Raises
        ------
        ~pyasn1.error.PyAsn1Error
            If *tagSet* is not present or not unique within callee *NamedTypes*
            or *idx* is out of fields range
        aminTagSetatagSetatagaTagSetuReturn the minimal TagSet among ASN.1 type in callee *NamedTypes*.

        Some ASN.1 types/serialisation protocols require ASN.1 types to be
        arranged based on their numerical tag value. The *minTagSet* property
        returns that.

        Returns
        -------
        : :class:`~pyasn1.type.tagset.TagSet`
            Minimal TagSet among ASN.1 types in callee *NamedTypes*
        uNon-unique tagSet %s of %s at %sanamedTypeaskipTypesaupdateadefaultTypeuDuplicate default ASN.1 type at %satagmapaTagMapuReturn a *TagMap* object from tags and types recursively.

        Return a :class:`~pyasn1.type.tagmap.TagMap` object by
        combining tags from *TagMap* objects of children types and
        associating them with their immediate child type.

        Example
        -------
        .. code-block:: python

           OuterType ::= CHOICE {
               innerType INTEGER
           }

        Calling *.tagMap* on *OuterType* will yield a map like this:

        .. code-block:: python

           Integer.tagSet -> Choice
        uReturn a *TagMap* object from unique tags and types recursively.

        Return a :class:`~pyasn1.type.tagmap.TagMap` object by
        combining tags from *TagMap* objects of children types and
        associating them with their immediate child type.

        Example
        -------
        .. code-block:: python

           OuterType ::= CHOICE {
               innerType INTEGER
           }

        Calling *.tagMapUnique* on *OuterType* will yield a map like this:

        .. code-block:: python

           Integer.tagSet -> Choice

        Note
        ----

        Duplicate *TagSet* objects found in the tree of children
        types would cause error.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysapyasn1Taerrorupyasn1.typeTatagTatagmapLaNamedTypeaOptionalNamedTypeaDefaultedNamedTypeaNamedTypesa__all__u<lambda>TOobjecta__prepare__aNamedTypea__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.namedtypea__module__uCreate named field object for a constructed ASN.1 type.

    The |NamedType| object represents a single name and ASN.1 type of a constructed ASN.1 type.

    |NamedType| objects are immutable and duck-type Python :class:`tuple` objects
    holding *name* and *asn1Object* components.

    Parameters
    ----------
    name: :py:class:`str`
        Field name

    asn1Object:
        ASN.1 type object
    a__qualname__Tna__init__uNamedType.__init__a__repr__uNamedType.__repr__a__eq__uNamedType.__eq__a__ne__uNamedType.__ne__a__lt__uNamedType.__lt__a__le__uNamedType.__le__a__gt__uNamedType.__gt__a__ge__uNamedType.__ge__a__hash__uNamedType.__hash__uNamedType.__getitem__a__iter__uNamedType.__iter__apropertyuNamedType.nameuNamedType.asn1ObjectuNamedType.openTypeagetNameuNamedType.getNameagetTypeuNamedType.getTypea__orig_bases__aOptionalNamedTypeaDefaultedNamedTypeuCreate a collection of named fields for a constructed ASN.1 type.

    The NamedTypes object represents a collection of named fields of a constructed ASN.1 type.

    *NamedTypes* objects are immutable and duck-type Python :class:`dict` objects
    holding *name* as keys and ASN.1 type object as values.

    Parameters
    ----------
    *namedTypes: :class:`~pyasn1.type.namedtype.NamedType`

    Examples
    --------

    .. code-block:: python

        class Description(Sequence):
            '''
            ASN.1 specification:

            Description ::= SEQUENCE {
                surname    IA5String,
                first-name IA5String OPTIONAL,
                age        INTEGER DEFAULT 40
            }
            '''
            componentType = NamedTypes(
                NamedType('surname', IA5String()),
                OptionalNamedType('first-name', IA5String()),
                DefaultedNamedType('age', Integer(40))
            )

        descr = Description()
        descr['surname'] = 'Smith'
        descr['first-name'] = 'John'
    uNamedTypes.__init__uNamedTypes.__repr__uNamedTypes.__eq__uNamedTypes.__ne__uNamedTypes.__lt__uNamedTypes.__le__uNamedTypes.__gt__uNamedTypes.__ge__uNamedTypes.__hash__uNamedTypes.__getitem__a__contains__uNamedTypes.__contains__uNamedTypes.__iter__a__bool__uNamedTypes.__bool__a__len__uNamedTypes.__len__avaluesuNamedTypes.valuesakeysuNamedTypes.keysaitemsuNamedTypes.itemsacloneuNamedTypes.cloneaobjectuNamedTypes.PostponedErroruNamedTypes.PostponedError.__init__uNamedTypes.PostponedError.__getitem__a__computeTagToPosMapuNamedTypes.__computeTagToPosMapa__computeNameToPosMapuNamedTypes.__computeNameToPosMapa__computeAmbiguousTypesuNamedTypes.__computeAmbiguousTypesagetTypeByPositionuNamedTypes.getTypeByPositionuNamedTypes.getPositionByTypeagetNameByPositionuNamedTypes.getNameByPositionagetPositionByNameuNamedTypes.getPositionByNameagetTagMapNearPositionuNamedTypes.getTagMapNearPositionagetPositionNearTypeuNamedTypes.getPositionNearTypea__computeMinTagSetuNamedTypes.__computeMinTagSetuNamedTypes.minTagSeta__computeTagMapsuNamedTypes.__computeTagMapsuNamedTypes.tagMapatagMapUniqueuNamedTypes.tagMapUniqueahasOptionalOrDefaultuNamedTypes.hasOptionalOrDefaultahasOpenTypesuNamedTypes.hasOpenTypesanamedTypesuNamedTypes.namedTypesarequiredComponentsuNamedTypes.requiredComponentsupyasn1\type\namedtype.pyTa.0wxTwxu<module pyasn1.type.namedtype>Ta__class__TaselfTaselfaambiguousTypesapartialAmbiguousTypesaidxanamedTypeTaselfaminTagSetanamedTypeaasn1ObjectatagSetTaselfanameToPosMapaidxanamedTypeTaselfauniqueapresentTypesaskipTypesadefaultTypeanamedTypeatagMapatagSetTaselfatagToPosMapaidxanamedTypeatagMapa_tagSetTaselfakeyTaselfaotherTaselfaidxTaselfaitemTaselfaerrorMsgTaselfanameaasn1ObjectaopenTypeTaselfanamedTypesakwargsTaselfarepresentationTaselfanameTaselfatagSetTaselfatagSetaidxu.pyasn1.type.namedvalea_NamedValues__namesa_NamedValues__numbersTOtupleOlistutoo many values to unpack (expected 2)aerroraPyAsn1ErroruNot a proper attribute-value pair %raanonymousNamesaappendaselfuDuplicate name %suDuplicate number  %s=%samaxllanumberu, aitemsu%s=%d:nl nu...:lnnu<%s object, enums %s>a__name__arepresentationuNamedValues.itemsuUnknown bit identifier(s): %sadifferencea__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1TaerroraNamedValuesa__all__TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.namedvala__module__uCreate named values object.

    The |NamedValues| object represents a collection of string names
    associated with numeric IDs. These objects are used for giving
    names to otherwise numerical values.

    |NamedValues| objects are immutable and duck-type Python
    :class:`dict` object mapping ID to name and vice-versa.

    Parameters
    ----------
    *args: variable number of two-element :py:class:`tuple`

        name: :py:class:`str`
            Value label

        value: :py:class:`int`
            Numeric value

    Keyword Args
    ------------
    name: :py:class:`str`
        Value label

    value: :py:class:`int`
        Numeric value

    Examples
    --------

    .. code-block:: pycon

        >>> nv = NamedValues('a', 'b', ('c', 0), d=1)
        >>> nv
        >>> {'c': 0, 'd': 1, 'a': 2, 'b': 3}
        >>> nv[0]
        'c'
        >>> nv['a']
        2
    a__qualname__a__init__uNamedValues.__init__a__repr__uNamedValues.__repr__a__eq__uNamedValues.__eq__a__ne__uNamedValues.__ne__a__lt__uNamedValues.__lt__a__le__uNamedValues.__le__a__gt__uNamedValues.__gt__a__ge__uNamedValues.__ge__a__hash__uNamedValues.__hash__uNamedValues.__getitem__a__len__uNamedValues.__len__a__contains__uNamedValues.__contains__a__iter__uNamedValues.__iter__avaluesuNamedValues.valuesakeysuNamedValues.keysa__add__uNamedValues.__add__acloneuNamedValues.cloneagetNameuNamedValues.getNameagetValueuNamedValues.getValueagetValuesuNamedValues.getValuesa__orig_bases__upyasn1\type\namedval.pyu<module pyasn1.type.namedval>Ta__class__TaselfanamedValuesTaselfakeyTaselfaotherTaselfTaselfaargsakwargsaanonymousNamesanamedValueanameanumberTaselfarepresentationTaselfaargsakwargsanewTaselfavalueTaselfanameTaselfanamesu.pyasn1.type.opentype4
.a_OpenType__namea_OpenType__typeMapavaluesakeysaitemsa__doc__a__file__a__spec__aoriginahas_locationa__cached__aOpenTypea__all__TOobjectla__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.type.opentypea__module__uCreate ASN.1 type map indexed by a value

    The *OpenType* object models an untyped field of a constructed ASN.1
    type. In ASN.1 syntax it is usually represented by the
    `ANY DEFINED BY` for scalars or `SET OF ANY DEFINED BY`,
    `SEQUENCE OF ANY DEFINED BY` for container types clauses. Typically
    used together with :class:`~pyasn1.type.univ.Any` object.

    OpenType objects duck-type a read-only Python :class:`dict` objects,
    however the passed `typeMap` is not copied, but stored by reference.
    That means the user can manipulate `typeMap` at run time having this
    reflected on *OpenType* object behavior.

    The |OpenType| class models an untyped field of a constructed ASN.1
    type. In ASN.1 syntax it is usually represented by the
    `ANY DEFINED BY` for scalars or `SET OF ANY DEFINED BY`,
    `SEQUENCE OF ANY DEFINED BY` for container types clauses. Typically
    used with :class:`~pyasn1.type.univ.Any` type.

    Parameters
    ----------
    name: :py:class:`str`
        Field name

    typeMap: :py:class:`dict`
        A map of value->ASN.1 type. It's stored by reference and can be
        mutated later to register new mappings.

    Examples
    --------

    For untyped scalars:

    .. code-block:: python

        openType = OpenType(
            'id', {1: Integer(),
                   2: OctetString()}
        )
        Sequence(
            componentType=NamedTypes(
                NamedType('id', Integer()),
                NamedType('blob', Any(), openType=openType)
            )
        )

    For untyped `SET OF` or `SEQUENCE OF` vectors:

    .. code-block:: python

        openType = OpenType(
            'id', {1: Integer(),
                   2: OctetString()}
        )
        Sequence(
            componentType=NamedTypes(
                NamedType('id', Integer()),
                NamedType('blob', SetOf(componentType=Any()),
                          openType=openType)
            )
        )
    a__qualname__Tna__init__uOpenType.__init__apropertyanameuOpenType.nameuOpenType.valuesuOpenType.keysuOpenType.itemsa__contains__uOpenType.__contains__uOpenType.__getitem__a__iter__uOpenType.__iter__a__orig_bases__upyasn1\type\opentype.pyu<module pyasn1.type.opentype>Ta__class__TaselfakeyTaselfanameatypeMapTaselfu.pyasn1.type.tag%laerroraPyAsn1ErroruNegative tag ID (%s) not alloweda_Tag__tagClassa_Tag__tagFormata_Tag__tagIda_Tag__tagClassIda_Tag__hashu[%s:%s:%s]u<%s object, tag %s>a__name__llaselfa__iter__uTag.__iter__atagClassatagFormatatagIduASN.1 tag class

        Returns
        -------
        : :py:class:`int`
            Tag class
        uASN.1 tag format

        Returns
        -------
        : :py:class:`int`
            Tag format
        uASN.1 tag ID

        Returns
        -------
        : :py:class:`int`
            Tag ID
        a_TagSet__baseTaga_TagSet__superTagsa_TagSet__superTagsClassIda_TagSet__lenOfSuperTagsa_TagSet__hashw-u%s:%s:%sutags auntaggedu<%s object, %s>uReturn base ASN.1 tag

        Returns
        -------
        : :class:`~pyasn1.type.tag.Tag`
            Base tag of this *TagSet*
        uReturn ASN.1 tags

        Returns
        -------
        : :py:class:`tuple`
            Tuple of :class:`~pyasn1.type.tag.Tag` objects that this *TagSet* contains
        atagClassUniversalTuCan't tag with UNIVERSAL class tagatagFormatConstructedaTagasuperTaguReturn explicitly tagged *TagSet*

        Create a new *TagSet* representing callee *TagSet* explicitly tagged
        with passed tag(s). With explicit tagging mode, new tags are appended
        to existing tag(s).

        Parameters
        ----------
        superTag: :class:`~pyasn1.type.tag.Tag`
            *Tag* object to tag this *TagSet*

        Returns
        -------
        : :class:`~pyasn1.type.tag.TagSet`
            New *TagSet* object
        l:nlnuReturn implicitly tagged *TagSet*

        Create a new *TagSet* representing callee *TagSet* implicitly tagged
        with passed tag(s). With implicit tagging mode, new tag(s) replace the
        last existing tag.

        Parameters
        ----------
        superTag: :class:`~pyasn1.type.tag.Tag`
            *Tag* object to tag this *TagSet*

        Returns
        -------
        : :class:`~pyasn1.type.tag.TagSet`
            New *TagSet* object
        uTest type relationship against given *TagSet*

        The callee is considered to be a supertype of given *TagSet*
        tag-wise if all tags in *TagSet* are present in the callee and
        they are in the same order.

        Parameters
        ----------
        tagSet: :class:`~pyasn1.type.tag.TagSet`
            *TagSet* object to evaluate against the callee

        Returns
        -------
        : :py:class:`bool`
            :obj:`True` if callee is a supertype of *tagSet*
        aTagSeta__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1TaerrorLatagClassUniversalatagClassApplicationatagClassContextatagClassPrivateatagFormatSimpleatagFormatConstructedatagCategoryImplicitatagCategoryExplicitatagCategoryUntaggedaTagaTagSeta__all__l@atagClassApplicationlatagClassContextlatagClassPrivateatagFormatSimplel atagCategoryImplicitatagCategoryExplicitlatagCategoryUntaggedTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.taga__module__uCreate ASN.1 tag

    Represents ASN.1 tag that can be attached to a ASN.1 type to make
    types distinguishable from each other.

    *Tag* objects are immutable and duck-type Python :class:`tuple` objects
    holding three integer components of a tag.

    Parameters
    ----------
    tagClass: :py:class:`int`
        Tag *class* value

    tagFormat: :py:class:`int`
        Tag *format* value

    tagId: :py:class:`int`
        Tag ID value
    a__qualname__a__init__uTag.__init__a__repr__uTag.__repr__a__eq__uTag.__eq__a__ne__uTag.__ne__a__lt__uTag.__lt__a__le__uTag.__le__a__gt__uTag.__gt__a__ge__uTag.__ge__a__hash__uTag.__hash__uTag.__getitem__a__and__uTag.__and__a__or__uTag.__or__apropertyuTag.tagClassuTag.tagFormatuTag.tagIda__orig_bases__uCreate a collection of ASN.1 tags

    Represents a combination of :class:`~pyasn1.type.tag.Tag` objects
    that can be attached to a ASN.1 type to make types distinguishable
    from each other.

    *TagSet* objects are immutable and duck-type Python :class:`tuple` objects
    holding arbitrary number of :class:`~pyasn1.type.tag.Tag` objects.

    Parameters
    ----------
    baseTag: :class:`~pyasn1.type.tag.Tag`
        Base *Tag* object. This tag survives IMPLICIT tagging.

    *superTags: :class:`~pyasn1.type.tag.Tag`
        Additional *Tag* objects taking part in subtyping.

    Examples
    --------
    .. code-block:: python

        class OrderNumber(NumericString):
            '''
            ASN.1 specification

            Order-number ::=
                [APPLICATION 5] IMPLICIT NumericString
            '''
            tagSet = NumericString.tagSet.tagImplicitly(
                Tag(tagClassApplication, tagFormatSimple, 5)
            )

        orderNumber = OrderNumber('1234')
    TTuTagSet.__init__uTagSet.__repr__a__add__uTagSet.__add__a__radd__uTagSet.__radd__uTagSet.__getitem__uTagSet.__eq__uTagSet.__ne__uTagSet.__lt__uTagSet.__le__uTagSet.__gt__uTagSet.__ge__uTagSet.__hash__a__len__uTagSet.__len__abaseTaguTagSet.baseTagasuperTagsuTagSet.superTagsatagExplicitlyuTagSet.tagExplicitlyatagImplicitlyuTagSet.tagImplicitlyaisSuperTagSetOfuTagSet.isSuperTagSetOfagetBaseTaguTagSet.getBaseTagainitTagSetupyasn1\type\tag.pyu<module pyasn1.type.tag>Ta__class__TaselfasuperTagTaselfaotherTagTaselfaotherTaselfwiTaselfaidxTaselfTaselfabaseTagasuperTagsTaselfatagClassatagFormatatagIdTaselfarepresentationTatagTaselfatagSetu.pyasn1.type.tagmapCa_TagMap__presentTypesa_TagMap__skipTypesa_TagMap__defaultTypeaerroraPyAsn1ErrorTuKey in negative mapu%s objecta__name__u, present %su, skip %su, default %su<%s>uReturn *TagSet* to ASN.1 type map present in callee *TagMap*uReturn *TagSet* collection unconditionally absent in callee *TagMap*uReturn default ASN.1 type being returned for any missing *TagSet*apresentTypesaskipTypesadefaultTypea__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1TaerrorlaTagMapa__all__TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.tagmapa__module__uMap *TagSet* objects to ASN.1 types

    Create an object mapping *TagSet* object to ASN.1 type.

    *TagMap* objects are immutable and duck-type read-only Python
    :class:`dict` objects holding *TagSet* objects as keys and ASN.1
    type objects as values.

    Parameters
    ----------
    presentTypes: :py:class:`dict`
        Map of :class:`~pyasn1.type.tag.TagSet` to ASN.1 objects considered
        as being unconditionally present in the *TagMap*.

    skipTypes: :py:class:`dict`
        A collection of :class:`~pyasn1.type.tag.TagSet` objects considered
        as absent in the *TagMap* even when *defaultType* is present.

    defaultType: ASN.1 type object
        An ASN.1 type object callee *TagMap* returns for any *TagSet* key not present
        in *presentTypes* (unless given key is present in *skipTypes*).
    a__qualname__Tnnna__init__uTagMap.__init__a__contains__uTagMap.__contains__uTagMap.__getitem__a__iter__uTagMap.__iter__a__repr__uTagMap.__repr__apropertyuTagMap.presentTypesuTagMap.skipTypesuTagMap.defaultTypeagetPosMapuTagMap.getPosMapagetNegMapuTagMap.getNegMapagetDefuTagMap.getDefa__orig_bases__upyasn1\type\tagmap.pyu<module pyasn1.type.tagmap>Ta__class__TaselfatagSetTaselfapresentTypesaskipTypesadefaultTypeTaselfTaselfarepresentationu.pyasn1.type.univkanamedValuesabaseaSimpleAsn1Typea__init__aselfakwargsaclonea_valueapowaRealaroundamathaflooraceilatruncaerroraPyAsn1ErroruCan't coerce %r into integer: %sasysaexc_infolabitLengthamaxaintegerlaleadingZeroBitsasetBitLengthanoValueafromBinaryStringabinValueDainternalFormattafromHexStringapopTahexValueadefaultBinValueadefaultHexValueaasBinaryaprettyInaindicesubit index out of rangealengtha__iter__uBitString.__iter__aSizedIntegeravalueabitStringaoctetsaocts2intsaasOctetsuGet |ASN.1| value as a sequence of 8-bit integers.

        If |ASN.1| object length is not a multiple of 8, result
        will be left-padded with zeros.
        ato_bytesTalengthuGet |ASN.1| value as a sequence of octets.

        If |ASN.1| object length is not a multiple of 8, result
        will be left-padded with zeros.
        uGet |ASN.1| value as a single integer value.
        :lnnw0uGet |ASN.1| value as a text string of bits.
        llu%s.fromHexString() error: %sa__name__uCreate a |ASN.1| object initialized from the hex string.

        Parameters
        ----------
        value: :class:`str`
            Text string like 'DEADBEEF'
        lu%s.fromBinaryString() error: %suCreate a |ASN.1| object initialized from a string of '0' and '1'.

        Parameters
        ----------
        value: :class:`str`
            Text string like '1010111'
        afrom_bytesluCreate a |ASN.1| object initialized from a string.

        Parameters
        ----------
        value: :class:`str` (Py2) or :class:`bytes` (Py3)
            Text string like '\\x01\\xff' (Py2) or b'\\x01\\xff' (Py3)
        aisStringTypeTlw':lnnu'B:llnu'HuBad BIT STRING value notation %saisdigitasplitTw,astripuunknown bit name(s) in %ranumberarightmostPositionastartswithTu0xTu0bTOtupleOlistuw1aBitStringaintTypesuBad BitString initializer type '%s'aencodingaencodeaPyAsn1UnicodeEncodeErroruCan't encode string '%s' with '%s' codecaOctetStringadecodeaPyAsn1UnicodeDecodeErroruCan't decode string '%s' with '%s' codec at '%s'aprettyOutaasNumbersl l~u0xa__str__u%.2xu<genexpr>uOctetString.prettyPrint.<locals>.<genexpr>abitNolwraappendabyteTw0w1uNon-binary OCTET STRING initializer %saints2octswpastr2octsTuaindexuIndicate if this |ASN.1| object is a prefix of other |ASN.1| object.

        Parameters
        ----------
        other: |ASN.1| object
            |ASN.1| object

        Returns
        -------
        : :class:`bool`
            :obj:`True` if this |ASN.1| object is a parent (e.g. prefix) of the other |ASN.1| object
            or :obj:`False` otherwise.
        aObjectIdentifierw-uMalformed Object ID %s at %s: %sTw.TEValueErrorETypeErroruMalformed Object ID %s at %sw.utoo many values to unpack (expected 3)wml
weanumericTypesuLame Real value syntax: %sa_infTll
uProhibited base for Real value: %sa_Real__normalizeBase10uBad real value syntax: %su<overflow>a_plusInfuIndicate PLUS-INFINITY object value

        Returns
        -------
        : :class:`bool`
            :obj:`True` if calling object represents plus infinity
            or :obj:`False` otherwise.

        a_minusInfuIndicate MINUS-INFINITY object value

        Returns
        -------
        : :class:`bool`
            :obj:`True` if calling object represents minus infinity
            or :obj:`False` otherwise.
        TuInvalid infinite value operationaisPlusInfaisMinusInfaisInfTacomponentTypeatagSetasubtypeSpecutoo many values to unpack (expected 2)TuConflicting positional and keyword params!acomponentTypea_componentValuesaConstructedAsn1TypeagetComponentByPositionasetComponentByPositionavaluesaitemsareverseasortedTakeyareverseuSequenceOfAndSetOfBase.__iter__amyCloneacloneValueFlagTacloneValueFlagadefaultainstantiateTuSequenceOf/SetOf index is out of rangeaisValueacomponentValueuReturn |ASN.1| type component value by position.

        Equivalent to Python sequence subscription operation (e.g. `[]`).

        Parameters
        ----------
        idx : :class:`int`
            Component index (zero-based). Must either refer to an existing
            component or to N+1 component (if *componentType* is set). In the latter
            case a new component type gets instantiated and appended to the |ASN.1|
            sequence.

        Keyword Args
        ------------
        default: :class:`object`
            If set and requested component is a schema object, return the `default`
            object instead of the requested component.

        instantiate: :class:`bool`
            If :obj:`True` (default), inner component will be automatically instantiated.
            If :obj:`False` either existing component or the :class:`NoValue` object will be
            returned.

        Returns
        -------
        : :py:class:`~pyasn1.type.base.PyAsn1Item`
            Instantiate |ASN.1| component type or return existing component value

        Examples
        --------

        .. code-block:: python

            # can also be SetOf
            class MySequenceOf(SequenceOf):
                componentType = OctetString()

            s = MySequenceOf()

            # returns component #0 with `.isValue` property False
            s.getComponentByPosition(0)

            # returns None
            s.getComponentByPosition(0, default=None)

            s.clear()

            # returns noValue
            s.getComponentByPosition(0, instantiate=False)

            # sets component #0 to OctetString() ASN.1 schema
            # object and returns it
            s.getComponentByPosition(0, instantiate=True)

            # sets component #0 to ASN.1 value object
            s.setComponentByPosition(0, 'ABCD')

            # returns OctetString('ABCD') value object
            s.getComponentByPosition(0, instantiate=False)

            s.clear()

            # returns noValue
            s.getComponentByPosition(0, instantiate=False)
        astartIdxaverifyConstraintsamatchTagsamatchConstraintsagetTuComponent type not definedaAsn1ItemTavalueuNon-ASN.1 value %r and undefined component type at %rastrictConstraintsaisSameTypeWithaisSuperTypeOfatypeIdaAnyuComponent value is tag-incompatible: %r vs %ruAssign |ASN.1| type component by position.

        Equivalent to Python sequence item assignment operation (e.g. `[]`)
        or list.append() (when idx == len(self)).

        Parameters
        ----------
        idx: :class:`int`
            Component index (zero-based). Must either refer to existing
            component or to N+1 component. In the latter case a new component
            type gets instantiated (if *componentType* is set, or given ASN.1
            object is taken otherwise) and appended to the |ASN.1| sequence.

        Keyword Args
        ------------
        value: :class:`object` or :py:class:`~pyasn1.type.base.PyAsn1Item` derivative
            A Python value to initialize |ASN.1| component with (if *componentType* is set)
            or ASN.1 value object to assign to |ASN.1| component.
            If `value` is not given, schema object will be set as a component.

        verifyConstraints: :class:`bool`
             If :obj:`False`, skip constraints validation

        matchTags: :class:`bool`
             If :obj:`False`, skip component tags matching

        matchConstraints: :class:`bool`
             If :obj:`False`, skip component constraints matching

        Returns
        -------
        self

        Raises
        ------
        ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
            On constraint violation or bad initializer
        IndexError
            When idx > len(self)
        atagMapuRemove all components and become an empty |ASN.1| value object.

        Has the same effect on |ASN.1| object as it does on :class:`list`
        built-in.
        uRemove all components and become a |ASN.1| schema object.

        See :meth:`isValue` property for more information on the
        distinction between value and schema objects.
        u:
arepresentationw ascopeu<empty>aprettyPrintu%s -> %s {
atagSetaprettyPrintTypew
w}uIndicate that |ASN.1| object represents ASN.1 value.

        If *isValue* is :obj:`False` then this object represents just ASN.1 schema.

        If *isValue* is :obj:`True` then, in addition to its ASN.1 schema features,
        this object can also be used like a Python built-in object
        (e.g. :class:`int`, :class:`str`, :class:`dict` etc.).

        Returns
        -------
        : :class:`bool`
            :obj:`False` if object represents just ASN.1 schema.
            :obj:`True` if object represents ASN.1 schema and can be used as a normal value.

        Note
        ----
        There is an important distinction between PyASN1 schema and value objects.
        The PyASN1 schema objects can only participate in ASN.1 schema-related
        operations (e.g. defining or testing the structure of the data). Most
        obvious uses of ASN.1 schema is to guide serialisation codecs whilst
        encoding/decoding serialised ASN.1 contents.

        The PyASN1 value objects can **additionally** participate in many operations
        involving regular Python objects (e.g. arithmetic, comprehension etc).
        asubtypeSpecamappinguRun necessary checks to ensure |ASN.1| object consistency.

        Default action is to verify |ASN.1| object against constraints imposed
        by `subtypeSpec`.

        Raises
        ------
        :py:class:`~pyasn1.error.PyAsn1tError` on any inconsistencies found
        a_keyToIdxMapa_idxToKeyMapuSequenceAndSetBase.DynamicNames.__iter__.<locals>.<genexpr>TuType position out of rangeuName %s not foundufield-%da_componentTypeLenaDynamicNamesa_dynamicNamesagetComponentByNameasetComponentByNameuSequenceAndSetBase.valuesanameuSequenceAndSetBase.itemsuRemove all components and become an empty |ASN.1| value object.

        Has the same effect on |ASN.1| object as it does on :class:`dict`
        built-in.
        agetPositionByNameTadefaultainstantiateuReturns |ASN.1| type component by name.

        Equivalent to Python :class:`dict` subscription operation (e.g. `[]`).

        Parameters
        ----------
        name: :class:`str`
            |ASN.1| type component name

        Keyword Args
        ------------
        default: :class:`object`
            If set and requested component is a schema object, return the `default`
            object instead of the requested component.

        instantiate: :class:`bool`
            If :obj:`True` (default), inner component will be automatically
            instantiated.
            If :obj:`False` either existing component or the :class:`NoValue`
            object will be returned.

        Returns
        -------
        : :py:class:`~pyasn1.type.base.PyAsn1Item`
            Instantiate |ASN.1| component type or return existing
            component value
        uAssign |ASN.1| type component by name.

        Equivalent to Python :class:`dict` item assignment operation (e.g. `[]`).

        Parameters
        ----------
        name: :class:`str`
            |ASN.1| type component name

        Keyword Args
        ------------
        value: :class:`object` or :py:class:`~pyasn1.type.base.PyAsn1Item` derivative
            A Python value to initialize |ASN.1| component with (if *componentType* is set)
            or ASN.1 value object to assign to |ASN.1| component.
            If `value` is not given, schema object will be set as a component.

        verifyConstraints: :class:`bool`
             If :obj:`False`, skip constraints validation

        matchTags: :class:`bool`
             If :obj:`False`, skip component tags matching

        matchConstraints: :class:`bool`
             If :obj:`False`, skip component constraints matching

        Returns
        -------
        self
        aidxuReturns |ASN.1| type component by index.

        Equivalent to Python sequence subscription operation (e.g. `[]`).

        Parameters
        ----------
        idx: :class:`int`
            Component index (zero-based). Must either refer to an existing
            component or (if *componentType* is set) new ASN.1 schema object gets
            instantiated.

        Keyword Args
        ------------
        default: :class:`object`
            If set and requested component is a schema object, return the `default`
            object instead of the requested component.

        instantiate: :class:`bool`
            If :obj:`True` (default), inner component will be automatically
            instantiated.
            If :obj:`False` either existing component or the :class:`NoValue`
            object will be returned.

        Returns
        -------
        : :py:class:`~pyasn1.type.base.PyAsn1Item`
            a PyASN1 object

        Examples
        --------

        .. code-block:: python

            # can also be Set
            class MySequence(Sequence):
                componentType = NamedTypes(
                    NamedType('id', OctetString())
                )

            s = MySequence()

            # returns component #0 with `.isValue` property False
            s.getComponentByPosition(0)

            # returns None
            s.getComponentByPosition(0, default=None)

            s.clear()

            # returns noValue
            s.getComponentByPosition(0, instantiate=False)

            # sets component #0 to OctetString() ASN.1 schema
            # object and returns it
            s.getComponentByPosition(0, instantiate=True)

            # sets component #0 to ASN.1 value object
            s.setComponentByPosition(0, 'ABCD')

            # returns OctetString('ABCD') value object
            s.getComponentByPosition(0, instantiate=False)

            s.clear()

            # returns noValue
            s.getComponentByPosition(0, instantiate=False)
        Tucomponent index out of rangeacomponentTypeLenagetTypeByPositionaisDefaultedu%s can cast only scalar valuesu%s undefined component typeasubComponentTypeaopenTypeaaddFieldTuComponent index out of rangeacomponentValuesuAssign |ASN.1| type component by position.

        Equivalent to Python sequence item assignment operation (e.g. `[]`).

        Parameters
        ----------
        idx : :class:`int`
            Component index (zero-based). Must either refer to existing
            component (if *componentType* is set) or to N+1 component
            otherwise. In the latter case a new component of given ASN.1
            type gets instantiated and appended to |ASN.1| sequence.

        Keyword Args
        ------------
        value: :class:`object` or :py:class:`~pyasn1.type.base.PyAsn1Item` derivative
            A Python value to initialize |ASN.1| component with (if *componentType* is set)
            or ASN.1 value object to assign to |ASN.1| component.
            If `value` is not given, schema object will be set as a component.

        verifyConstraints : :class:`bool`
             If :obj:`False`, skip constraints validation

        matchTags: :class:`bool`
             If :obj:`False`, skip component tags matching

        matchConstraints: :class:`bool`
             If :obj:`False`, skip component constraints matching

        Returns
        -------
        self
        anamedTypesaisOptionaluIndicate that |ASN.1| object represents ASN.1 value.

        If *isValue* is :obj:`False` then this object represents just ASN.1 schema.

        If *isValue* is :obj:`True` then, in addition to its ASN.1 schema features,
        this object can also be used like a Python built-in object (e.g.
        :class:`int`, :class:`str`, :class:`dict` etc.).

        Returns
        -------
        : :class:`bool`
            :obj:`False` if object represents just ASN.1 schema.
            :obj:`True` if object represents ASN.1 schema and can be used as a
            normal value.

        Note
        ----
        There is an important distinction between PyASN1 schema and value objects.
        The PyASN1 schema objects can only participate in ASN.1 schema-related
        operations (e.g. defining or testing the structure of the data). Most
        obvious uses of ASN.1 schema is to guide serialisation codecs whilst
        encoding/decoding serialised ASN.1 contents.

        The PyASN1 value objects can **additionally** participate in many operations
        involving regular Python objects (e.g. arithmetic, comprehension etc).

        It is sufficient for |ASN.1| objects to have all non-optional and non-defaulted
        components being value objects to be considered as a value objects as a whole.
        In other words, even having one or more optional components not turned into
        value objects, |ASN.1| object is still considered as a value object. Defaulted
        components are normally value objects by default.
        agetNameByPositionu%s=%s
uReturn an object representation string.

        Returns
        -------
        : :class:`str`
            Human-friendly object representation.
        u"%s"u%s = %s
agetTagMapNearPositionagetPositionNearTypeagetPositionByTypeaSetagetComponentTtTainnerFlaguReturns |ASN.1| type component by ASN.1 tag.

        Parameters
        ----------
        tagSet : :py:class:`~pyasn1.type.tag.TagSet`
            Object representing ASN.1 tags to identify one of
            |ASN.1| object component

        Keyword Args
        ------------
        default: :class:`object`
            If set and requested component is a schema object, return the `default`
            object instead of the requested component.

        instantiate: :class:`bool`
            If :obj:`True` (default), inner component will be automatically
            instantiated.
            If :obj:`False` either existing component or the :class:`noValue`
            object will be returned.

        Returns
        -------
        : :py:class:`~pyasn1.type.base.PyAsn1Item`
            a pyasn1 object
        asetComponentByTypeuAssign |ASN.1| type component by ASN.1 tag.

        Parameters
        ----------
        tagSet : :py:class:`~pyasn1.type.tag.TagSet`
            Object representing ASN.1 tags to identify one of
            |ASN.1| object component

        Keyword Args
        ------------
        value: :class:`object` or :py:class:`~pyasn1.type.base.PyAsn1Item` derivative
            A Python value to initialize |ASN.1| component with (if *componentType* is set)
            or ASN.1 value object to assign to |ASN.1| component.
            If `value` is not given, schema object will be set as a component.

        verifyConstraints : :class:`bool`
            If :obj:`False`, skip constraints validation

        matchTags: :class:`bool`
            If :obj:`False`, skip component tags matching

        matchConstraints: :class:`bool`
            If :obj:`False`, skip component constraints matching

        innerFlag: :class:`bool`
            If :obj:`True`, search for matching *tagSet* recursively.

        Returns
        -------
        self
        atagMapUniquea_currentIdxagetNameuChoice.__iter__uChoice.valuesakeysuChoice.keysuChoice.itemsTuComponent not chosenacomponentaChoiceaeffectiveTagSeta__doc__uAssign |ASN.1| type component by position.

        Equivalent to Python sequence item assignment operation (e.g. `[]`).

        Parameters
        ----------
        idx: :class:`int`
            Component index (zero-based). Must either refer to existing
            component or to N+1 component. In the latter case a new component
            type gets instantiated (if *componentType* is set, or given ASN.1
            object is taken otherwise) and appended to the |ASN.1| sequence.

        Keyword Args
        ------------
        value: :class:`object` or :py:class:`~pyasn1.type.base.PyAsn1Item` derivative
            A Python value to initialize |ASN.1| component with (if *componentType* is set)
            or ASN.1 value object to assign to |ASN.1| component. Once a new value is
            set to *idx* component, previous value is dropped.
            If `value` is not given, schema object will be set as a component.

        verifyConstraints : :class:`bool`
            If :obj:`False`, skip constraints validation

        matchTags: :class:`bool`
            If :obj:`False`, skip component tags matching

        matchConstraints: :class:`bool`
            If :obj:`False`, skip component constraints matching

        Returns
        -------
        self
        uReturn a :class:`~pyasn1.type.tag.TagSet` object of the currently initialized component or self (if |ASN.1| is tagged).afgetu"Return a :class:`~pyasn1.type.tagmap.TagMap` object mapping
            ASN.1 tags to ASN.1 objects contained within callee.
        uReturn currently assigned component of the |ASN.1| object.

        Returns
        -------
        : :py:class:`~pyasn1.type.base.PyAsn1Item`
            a PyASN1 object
        uReturn the name of currently assigned component of the |ASN.1| object.

        Returns
        -------
        : :py:class:`str`
            |ASN.1| component name
        uIndicate that |ASN.1| object represents ASN.1 value.

        If *isValue* is :obj:`False` then this object represents just ASN.1 schema.

        If *isValue* is :obj:`True` then, in addition to its ASN.1 schema features,
        this object can also be used like a Python built-in object (e.g.
        :class:`int`, :class:`str`, :class:`dict` etc.).

        Returns
        -------
        : :class:`bool`
            :obj:`False` if object represents just ASN.1 schema.
            :obj:`True` if object represents ASN.1 schema and can be used as a normal
            value.

        Note
        ----
        There is an important distinction between PyASN1 schema and value objects.
        The PyASN1 schema objects can only participate in ASN.1 schema-related
        operations (e.g. defining or testing the structure of the data). Most
        obvious uses of ASN.1 schema is to guide serialisation codecs whilst
        encoding/decoding serialised ASN.1 contents.

        The PyASN1 value objects can **additionally** participate in many operations
        involving regular Python objects (e.g. arithmetic, comprehension etc).
        aclearaminTagSeta_tagMapatagmapaTagMapaeooaendOfOctetsa__file__a__spec__aoriginahas_locationa__cached__apyasn1Taerrorupyasn1.codec.berTaeooupyasn1.compatTaintegerTaoctetsupyasn1.typeTabaseTaconstraintaconstraintTanamedtypeanamedtypeTanamedvalanamedvalTatagatagTatagmapaNoValueLaIntegeraBooleanaBitStringaOctetStringaNullaObjectIdentifieraRealaEnumeratedaSequenceOfAndSetOfBaseaSequenceOfaSetOfaSequenceAndSetBaseaSequenceaSetaChoiceaAnyaNoValueanoValuea__all__a__prepare__aIntegera__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>upyasn1.type.univa__module__uCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python :class:`int` objects.

    Keyword Args
    ------------
    value: :class:`int`, :class:`str` or |ASN.1| object
        Python :class:`int` or :class:`str` literal or |ASN.1| class
        instance. If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    namedValues: :py:class:`~pyasn1.type.namedval.NamedValues`
        Object representing non-default symbolic aliases for numbers

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------

    .. code-block:: python

        class ErrorCode(Integer):
            '''
            ASN.1 specification:

            ErrorCode ::=
                INTEGER { disk-full(1), no-disk(-1),
                          disk-not-formatted(2) }

            error ErrorCode ::= disk-full
            '''
            namedValues = NamedValues(
                ('disk-full', 1), ('no-disk', -1),
                ('disk-not-formatted', 2)
            )

        error = ErrorCode('disk-full')
    a__qualname__ainitTagSetaTagatagClassUniversalatagFormatSimpleaConstraintsIntersectionaNamedValuesagetTypeIduInteger.__init__a__and__uInteger.__and__a__rand__uInteger.__rand__a__or__uInteger.__or__a__ror__uInteger.__ror__a__xor__uInteger.__xor__a__rxor__uInteger.__rxor__a__lshift__uInteger.__lshift__a__rshift__uInteger.__rshift__a__add__uInteger.__add__a__radd__uInteger.__radd__a__sub__uInteger.__sub__a__rsub__uInteger.__rsub__a__mul__uInteger.__mul__a__rmul__uInteger.__rmul__a__mod__uInteger.__mod__a__rmod__uInteger.__rmod__Tna__pow__uInteger.__pow__a__rpow__uInteger.__rpow__a__floordiv__uInteger.__floordiv__a__rfloordiv__uInteger.__rfloordiv__a__truediv__uInteger.__truediv__a__rtruediv__uInteger.__rtruediv__a__divmod__uInteger.__divmod__a__rdivmod__uInteger.__rdivmod__a__hash__a__int__uInteger.__int__a__float__uInteger.__float__a__abs__uInteger.__abs__a__index__uInteger.__index__a__pos__uInteger.__pos__a__neg__uInteger.__neg__a__invert__uInteger.__invert__a__round__uInteger.__round__a__floor__uInteger.__floor__a__ceil__uInteger.__ceil__a__trunc__uInteger.__trunc__a__lt__uInteger.__lt__a__le__uInteger.__le__a__eq__uInteger.__eq__a__ne__uInteger.__ne__a__gt__uInteger.__gt__a__ge__uInteger.__ge__uInteger.prettyInuInteger.prettyOutagetNamedValuesuInteger.getNamedValuesa__orig_bases__aBooleanuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python :class:`int` objects.

    Keyword Args
    ------------
    value: :class:`int`, :class:`str` or |ASN.1| object
        Python :class:`int` or :class:`str` literal or |ASN.1| class
        instance. If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s).Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    namedValues: :py:class:`~pyasn1.type.namedval.NamedValues`
        Object representing non-default symbolic aliases for numbers

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class RoundResult(Boolean):
            '''
            ASN.1 specification:

            RoundResult ::= BOOLEAN

            ok RoundResult ::= TRUE
            ko RoundResult ::= FALSE
            '''
        ok = RoundResult(True)
        ko = RoundResult(False)
    aSingleValueConstraintTllTTaFalselTaTruelaSizedIntegerBaseuSizedInteger.setBitLengtha__len__uSizedInteger.__len__uCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type both Python :class:`tuple` (as a tuple
    of bits) and :class:`int` objects.

    Keyword Args
    ------------
    value: :class:`int`, :class:`str` or |ASN.1| object
        Python :class:`int` or :class:`str` literal representing binary
        or hexadecimal number or sequence of integer bits or |ASN.1| object.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    namedValues: :py:class:`~pyasn1.type.namedval.NamedValues`
        Object representing non-default symbolic aliases for numbers

    binValue: :py:class:`str`
        Binary string initializer to use instead of the *value*.
        Example: '10110011'.

    hexValue: :py:class:`str`
        Hexadecimal string initializer to use instead of the *value*.
        Example: 'DEADBEEF'.

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class Rights(BitString):
            '''
            ASN.1 specification:

            Rights ::= BIT STRING { user-read(0), user-write(1),
                                    group-read(2), group-write(3),
                                    other-read(4), other-write(5) }

            group1 Rights ::= { group-read, group-write }
            group2 Rights ::= '0011'B
            group3 Rights ::= '3'H
            '''
            namedValues = NamedValues(
                ('user-read', 0), ('user-write', 1),
                ('group-read', 2), ('group-write', 3),
                ('other-read', 4), ('other-write', 5)
            )

        group1 = Rights(('group-read', 'group-write'))
        group2 = Rights('0011')
        group3 = Rights(0x3)
    luBitString.__init__uBitString.__str__uBitString.__eq__uBitString.__ne__uBitString.__lt__uBitString.__le__uBitString.__gt__uBitString.__ge__uBitString.__len__uBitString.__getitem__a__reversed__uBitString.__reversed__uBitString.__add__uBitString.__radd__uBitString.__mul__uBitString.__rmul__uBitString.__lshift__uBitString.__rshift__uBitString.__int__uBitString.__float__uBitString.asNumbersuBitString.asOctetsaasIntegeruBitString.asIntegeruBitString.asBinaryaclassmethodTFnuBitString.fromHexStringuBitString.fromBinaryStringTFnlafromOctetStringuBitString.fromOctetStringuBitString.prettyInuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python 2 :class:`str` or
    Python 3 :class:`bytes`. When used in Unicode context, |ASN.1| type
    assumes "|encoding|" serialisation.

    Keyword Args
    ------------
    value: :class:`unicode`, :class:`str`, :class:`bytes` or |ASN.1| object
        class:`str` (Python 2) or :class:`bytes` (Python 3), alternatively
        class:`unicode` object (Python 2) or :class:`str` (Python 3)
        representing character string to be serialised into octets
        (note `encoding` parameter) or |ASN.1| object.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    encoding: :py:class:`str`
        Unicode codec ID to encode/decode :class:`unicode` (Python 2) or
        :class:`str` (Python 3) the payload when |ASN.1| object is used
        in text string context.

    binValue: :py:class:`str`
        Binary string initializer to use instead of the *value*.
        Example: '10110011'.

    hexValue: :py:class:`str`
        Hexadecimal string initializer to use instead of the *value*.
        Example: 'DEADBEEF'.

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class Icon(OctetString):
            '''
            ASN.1 specification:

            Icon ::= OCTET STRING

            icon1 Icon ::= '001100010011001000110011'B
            icon2 Icon ::= '313233'H
            '''
        icon1 = Icon.fromBinaryString('001100010011001000110011')
        icon2 = Icon.fromHexString('313233')
    uiso-8859-1uOctetString.__init__uOctetString.prettyInuOctetString.__str__a__bytes__uOctetString.__bytes__uOctetString.asOctetsuOctetString.asNumbersuOctetString.prettyOutuOctetString.prettyPrintastaticmethoduOctetString.fromBinaryStringuOctetString.fromHexStringuOctetString.__len__uOctetString.__getitem__uOctetString.__iter__a__contains__uOctetString.__contains__uOctetString.__add__uOctetString.__radd__uOctetString.__mul__uOctetString.__rmul__uOctetString.__int__uOctetString.__float__uOctetString.__reversed__aNulluCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python :class:`str` objects
    (always empty).

    Keyword Args
    ------------
    value: :class:`str` or |ASN.1| object
        Python empty :class:`str` literal or any object that evaluates to :obj:`False`
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class Ack(Null):
            '''
            ASN.1 specification:

            Ack ::= NULL
            '''
        ack = Ack('')
    luNull.prettyInTOintTOfloatuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python :class:`tuple` objects
    (tuple of non-negative integers).

    Keyword Args
    ------------
    value: :class:`tuple`, :class:`str` or |ASN.1| object
        Python sequence of :class:`int` or :class:`str` literal or |ASN.1| object.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class ID(ObjectIdentifier):
            '''
            ASN.1 specification:

            ID ::= OBJECT IDENTIFIER

            id-edims ID ::= { joint-iso-itu-t mhs-motif(6) edims(7) }
            id-bp ID ::= { id-edims 11 }
            '''
        id_edims = ID('2.6.7')
        id_bp = id_edims + (11,)
    luObjectIdentifier.__add__uObjectIdentifier.__radd__aasTupleuObjectIdentifier.asTupleuObjectIdentifier.__len__uObjectIdentifier.__getitem__uObjectIdentifier.__iter__uObjectIdentifier.__contains__uObjectIdentifier.indexaisPrefixOfuObjectIdentifier.isPrefixOfuObjectIdentifier.prettyInuObjectIdentifier.prettyOutuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python :class:`float` objects.
    Additionally, |ASN.1| objects behave like a :class:`tuple` in which case its
    elements are mantissa, base and exponent.

    Keyword Args
    ------------
    value: :class:`tuple`, :class:`float` or |ASN.1| object
        Python sequence of :class:`int` (representing mantissa, base and
        exponent) or :class:`float` instance or |ASN.1| object.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class Pi(Real):
            '''
            ASN.1 specification:

            Pi ::= REAL

            pi Pi ::= { mantissa 314159, base 10, exponent -5 }

            '''
        pi = Pi((314159, 10, -5))
    abinEncBaseafloatTainfZTu-infZaValueErrorTla__normalizeBase10uReal.__normalizeBase10uReal.prettyInuReal.prettyPrintapropertyuReal.isPlusInfuReal.isMinusInfuReal.isInfuReal.__add__uReal.__radd__uReal.__mul__uReal.__rmul__uReal.__sub__uReal.__rsub__uReal.__mod__uReal.__rmod__uReal.__pow__uReal.__rpow__uReal.__truediv__uReal.__rtruediv__uReal.__divmod__uReal.__rdivmod__uReal.__int__uReal.__float__uReal.__abs__uReal.__pos__uReal.__neg__uReal.__round__uReal.__floor__uReal.__ceil__uReal.__trunc__uReal.__lt__uReal.__le__uReal.__eq__uReal.__ne__uReal.__gt__uReal.__ge__a__bool__uReal.__bool__uReal.__getitem__aisPlusInfinityuReal.isPlusInfinityaisMinusInfinityuReal.isMinusInfinityaisInfinityuReal.isInfinityaEnumerateduCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`, its
    objects are immutable and duck-type Python :class:`int` objects.

    Keyword Args
    ------------
    value: :class:`int`, :class:`str` or |ASN.1| object
        Python :class:`int` or :class:`str` literal or |ASN.1| object.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    namedValues: :py:class:`~pyasn1.type.namedval.NamedValues`
        Object representing non-default symbolic aliases for numbers

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------

    .. code-block:: python

        class RadioButton(Enumerated):
            '''
            ASN.1 specification:

            RadioButton ::= ENUMERATED { button1(0), button2(1),
                                         button3(2) }

            selected-by-default RadioButton ::= button1
            '''
            namedValues = NamedValues(
                ('button1', 0), ('button2', 1),
                ('button3', 2)
            )

        selected_by_default = RadioButton('button1')
    aSequenceOfAndSetOfBaseuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.ConstructedAsn1Type`,
    its objects are mutable and duck-type Python :class:`list` objects.

    Keyword Args
    ------------
    componentType : :py:class:`~pyasn1.type.base.PyAsn1Item` derivative
        A pyasn1 object representing ASN.1 type allowed within |ASN.1| type

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type can only occur on explicit
        `.isInconsistent` call.

    Examples
    --------

    .. code-block:: python

        class LotteryDraw(SequenceOf):  #  SetOf is similar
            '''
            ASN.1 specification:

            LotteryDraw ::= SEQUENCE OF INTEGER
            '''
            componentType = Integer()

        lotteryDraw = LotteryDraw()
        lotteryDraw.extend([123, 456, 789])
    uSequenceOfAndSetOfBase.__init__uSequenceOfAndSetOfBase.__getitem__a__setitem__uSequenceOfAndSetOfBase.__setitem__uSequenceOfAndSetOfBase.appendacountuSequenceOfAndSetOfBase.countaextenduSequenceOfAndSetOfBase.extendTlnuSequenceOfAndSetOfBase.indexuSequenceOfAndSetOfBase.reverseTnFasortuSequenceOfAndSetOfBase.sortuSequenceOfAndSetOfBase.__len__a_cloneComponentValuesuSequenceOfAndSetOfBase._cloneComponentValuesuSequenceOfAndSetOfBase.getComponentByPositionuSequenceOfAndSetOfBase.setComponentByPositionacomponentTagMapuSequenceOfAndSetOfBase.componentTagMapacomponentsuSequenceOfAndSetOfBase.componentsuSequenceOfAndSetOfBase.cleararesetuSequenceOfAndSetOfBase.resetuSequenceOfAndSetOfBase.prettyPrintuSequenceOfAndSetOfBase.prettyPrintTypeuSequenceOfAndSetOfBase.isValueaisInconsistentuSequenceOfAndSetOfBase.isInconsistentaSequenceOfatagFormatConstructedaSetOflaSequenceAndSetBaseuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.ConstructedAsn1Type`,
    its objects are mutable and duck-type Python :class:`dict` objects.

    Keyword Args
    ------------
    componentType: :py:class:`~pyasn1.type.namedtype.NamedType`
        Object holding named ASN.1 types allowed within this collection

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s).  Constraints
        verification for |ASN.1| type can only occur on explicit
        `.isInconsistent` call.

    Examples
    --------

    .. code-block:: python

        class Description(Sequence):  #  Set is similar
            '''
            ASN.1 specification:

            Description ::= SEQUENCE {
                surname    IA5String,
                first-name IA5String OPTIONAL,
                age        INTEGER DEFAULT 40
            }
            '''
            componentType = NamedTypes(
                NamedType('surname', IA5String()),
                OptionalNamedType('first-name', IA5String()),
                DefaultedNamedType('age', Integer(40))
            )

        descr = Description()
        descr['surname'] = 'Smith'
        descr['first-name'] = 'John'
    aNamedTypesaobjectuFields names/positions mapping for component-less objectsuSequenceAndSetBase.DynamicNamesuSequenceAndSetBase.DynamicNames.__init__uSequenceAndSetBase.DynamicNames.__len__uSequenceAndSetBase.DynamicNames.__contains__uSequenceAndSetBase.DynamicNames.__iter__uSequenceAndSetBase.DynamicNames.__getitem__uSequenceAndSetBase.DynamicNames.getNameByPositionuSequenceAndSetBase.DynamicNames.getPositionByNameuSequenceAndSetBase.DynamicNames.addFielduSequenceAndSetBase.__init__uSequenceAndSetBase.__getitem__uSequenceAndSetBase.__setitem__uSequenceAndSetBase.__contains__uSequenceAndSetBase.__len__uSequenceAndSetBase.__iter__uSequenceAndSetBase.keysaupdateuSequenceAndSetBase.updateuSequenceAndSetBase.clearuSequenceAndSetBase.resetuSequenceAndSetBase.componentsuSequenceAndSetBase._cloneComponentValuesuSequenceAndSetBase.getComponentByNameuSequenceAndSetBase.setComponentByNameuSequenceAndSetBase.getComponentByPositionuSequenceAndSetBase.setComponentByPositionuSequenceAndSetBase.isValueuSequenceAndSetBase.isInconsistentuSequenceAndSetBase.prettyPrintuSequenceAndSetBase.prettyPrintTypeasetDefaultComponentsuSequenceAndSetBase.setDefaultComponentsagetComponentTypeuSequenceAndSetBase.getComponentTypeuSequenceAndSetBase.getNameByPositionaSequenceagetComponentTagMapNearPositionuSequence.getComponentTagMapNearPositionagetComponentPositionNearTypeuSequence.getComponentPositionNearTypeTFuSet.getComponentagetComponentByTypeuSet.getComponentByTypeuSet.setComponentByTypeuSet.componentTagMapuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.ConstructedAsn1Type`,
    its objects are mutable and duck-type Python :class:`list` objects.

    Keyword Args
    ------------
    componentType: :py:class:`~pyasn1.type.namedtype.NamedType`
        Object holding named ASN.1 types allowed within this collection

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s).  Constraints
        verification for |ASN.1| type can only occur on explicit
        `.isInconsistent` call.

    Examples
    --------

    .. code-block:: python

        class Afters(Choice):
            '''
            ASN.1 specification:

            Afters ::= CHOICE {
                cheese  [0] IA5String,
                dessert [1] IA5String
            }
            '''
            componentType = NamedTypes(
                NamedType('cheese', IA5String().subtype(
                    implicitTag=Tag(tagClassContext, tagFormatSimple, 0)
                ),
                NamedType('dessert', IA5String().subtype(
                    implicitTag=Tag(tagClassContext, tagFormatSimple, 1)
                )
            )

        afters = Afters()
        afters['cheese'] = 'Mascarpone'
    aTagSetaValueSizeConstraintTlpuChoice.__eq__uChoice.__ne__uChoice.__lt__uChoice.__le__uChoice.__gt__uChoice.__ge__uChoice.__bool__uChoice.__len__uChoice.__contains__acheckConsistencyuChoice.checkConsistencyuChoice._cloneComponentValuesuChoice.getComponentByPositionuChoice.setComponentByPositionuChoice.effectiveTagSetuChoice.tagMapuChoice.getComponentuChoice.getNameuChoice.isValueuChoice.clearagetMinTagSetuChoice.getMinTagSetuCreate |ASN.1| schema or value object.

    |ASN.1| class is based on :class:`~pyasn1.type.base.SimpleAsn1Type`,
    its objects are immutable and duck-type Python 2 :class:`str` or Python 3
    :class:`bytes`. When used in Unicode context, |ASN.1| type assumes
    "|encoding|" serialisation.

    Keyword Args
    ------------
    value: :class:`unicode`, :class:`str`, :class:`bytes` or |ASN.1| object
        :class:`str` (Python 2) or :class:`bytes` (Python 3), alternatively
        :class:`unicode` object (Python 2) or :class:`str` (Python 3)
        representing character string to be serialised into octets (note
        `encoding` parameter) or |ASN.1| object.
        If `value` is not given, schema object will be created.

    tagSet: :py:class:`~pyasn1.type.tag.TagSet`
        Object representing non-default ASN.1 tag(s)

    subtypeSpec: :py:class:`~pyasn1.type.constraint.ConstraintsIntersection`
        Object representing non-default ASN.1 subtype constraint(s). Constraints
        verification for |ASN.1| type occurs automatically on object
        instantiation.

    encoding: :py:class:`str`
        Unicode codec ID to encode/decode :class:`unicode` (Python 2) or
        :class:`str` (Python 3) the payload when |ASN.1| object is used
        in text string context.

    binValue: :py:class:`str`
        Binary string initializer to use instead of the *value*.
        Example: '10110011'.

    hexValue: :py:class:`str`
        Hexadecimal string initializer to use instead of the *value*.
        Example: 'DEADBEEF'.

    Raises
    ------
    ~pyasn1.error.ValueConstraintError, ~pyasn1.error.PyAsn1Error
        On constraint violation or bad initializer.

    Examples
    --------
    .. code-block:: python

        class Error(Sequence):
            '''
            ASN.1 specification:

            Error ::= SEQUENCE {
                code      INTEGER,
                parameter ANY DEFINED BY code  -- Either INTEGER or REAL
            }
            '''
            componentType=NamedTypes(
                NamedType('code', Integer()),
                NamedType('parameter', Any(),
                          openType=OpenType('code', {1: Integer(),
                                                     2: Real()}))
            )

        error = Error()
        error['code'] = 1
        error['parameter'] = Integer(1234)
    uAny.tagMapupyasn1\type\univ.pyTa.0aidxaselfTa.0wxu<module pyasn1.type.univ>Ta__class__TaselfTaselfaotherTaselfavalueTaselfaitemTaselfakeyTaselfwiTaselfwialengthTaselfaidxTaselfaargsakwargsakeyavalueTaselfakwargsTaselfavalueakwargsTaselfalengthTaselfacountTaselfavalueabitStringTavaluewmwbweTaselfavalueamoduloTaselfwnwrTaselfaidxavalueTaselfaexcTaselfamyCloneacloneValueFlagacomponentatagSetTaselfamyCloneacloneValueFlagaidxacomponentValueTaselfavalueaposTaselfabinStringTaselfacomponentTaselfavaluesavalueTaclsavalueainternalFormataprependTavalueabitNoabytewrwvTavaluewrwpwvTaclsavalueainternalFormataprependapaddingTaselfainnerFlagTaselfainnerFlagwcTaselfanameadefaultainstantiateaidxTaselfaidxadefaultainstantiatea__doc__TaselfaidxadefaultainstantiateacomponentValueTaselfaidxadefaultainstantiateaindicesacomponentValueTaselfatagSetadefaultainstantiateainnerFlagacomponentValueTaselfatagSetaidxTaselfanameTaselfasuboidTaselfavalueastartastopaindicesavaluesTaselfamappingaidxavalueaexcTaselfamappingaidxavalueanameaexcTaselfaotherwlTaselfacomponentTypeaidxasubComponentTypeacomponentValueTaselfacomponentValueTaselfavalueweTaselfavalueaexcTaselfavalueanamesabitPositionsarightmostPositionanumberabitPositionTaselfavalueatupleOfIntsTaselfascopeTaselfascopearepresentationaidxacomponentValueTaselfascopeavalueanumberswxTaselfascopearepresentationTaselfascopearepresentationaidxacomponentTypeTaselfabitLengthTaselfanameavalueaverifyConstraintsamatchTagsamatchConstraintsaidxTaselfaidxavalueaverifyConstraintsamatchTagsamatchConstraintsacomponentTypeacomponentTypeLenacomponentValuesacurrentValueasubComponentTypeasubtypeCheckerTaselfaidxavalueaverifyConstraintsamatchTagsamatchConstraintsaindicesastartIdxasubIdxasubValueacomponentTypeacomponentValuesacurrentValueasubtypeCheckerTaselfaidxavalueaverifyConstraintsamatchTagsamatchConstraintsaoldIdxTaselfatagSetavalueaverifyConstraintsamatchTagsamatchConstraintsainnerFlagaidxacomponentTypeTaselfakeyareverseTaselfaiterValueamappingValuewkwv.pyasn1.type.usefuladatetimeatimedeltaTaminutesa_FixedOffset__offseta_FixedOffset__nameTlaendswithTwZaTimeMixInaUTC:nlnw-w+apartitionTw+utoo many values to unpack (expected 3)Tw-a_shortTZatzu00aerroraPyAsn1Errorumalformed time zone offset %s:nlnl<:lnnluunknown time specification %saFixedOffsetw?w.atextw,Tw.Tw,lubad sub-second time specification %saselfla_optionalMinutesa_yearsDigitslu0000lastrptimelu%Y%m%d%H%M%Su%y%m%d%H%M%Sumalformed datetime format %sareplaceTamicrosecondatzinfouCreate :py:class:`datetime.datetime` object from a |ASN.1| object.

        Returns
        -------
        :
            new instance of :py:class:`datetime.datetime` object
        astrftimea_hasSubsecondu.%damicrosecondautcoffsetasecondsu%.2d%.2dlwZuCreate |ASN.1| object from a :py:class:`datetime.datetime` object.

        Parameters
        ----------
        dt: :py:class:`datetime.datetime` object
            The `datetime.datetime` object to initialize the |ASN.1| object
            from

        Returns
        -------
        :
            new instance of |ASN.1| value
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1Taerrorupyasn1.typeTacharacharTatagatagTaunivaunivaObjectDescriptoraGeneralizedTimeaUTCTimea__all__aNoValueanoValueaGraphicStringa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1.type.usefula__module__a__qualname__atagSetatagImplicitlyaTagatagClassUniversalatagFormatSimplelagetTypeIdatypeIda__orig_bases__TOobjectatzinfouFixed offset in minutes east from UTC.uTimeMixIn.FixedOffsetTlaUTCa__init__uTimeMixIn.FixedOffset.__init__uTimeMixIn.FixedOffset.utcoffsetatznameuTimeMixIn.FixedOffset.tznameadstuTimeMixIn.FixedOffset.dstapropertyaasDateTimeuTimeMixIn.asDateTimeaclassmethodafromDateTimeuTimeMixIn.fromDateTimeaVisibleStringlaVideotexStringllupyasn1\type\useful.pyu<module pyasn1.type.useful>Ta__class__TaselfaoffsetanameTaselfatextatzinfoaplusminusatzaminutesw_amsadtTaselfadtTaclsadtatextasecondsu.pyasn1_modulesa__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_pyasn1_modulesu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__u0.3.0a__version__upyasn1_modules\__init__.pyu<module pyasn1_modules>u.pyasn1_modules.pem.u<lambda>ureadPemBlocksFromFile.<locals>.<lambda>luastSpamafileObjareadlineastripastateastHamaidxastDumpacertLinesaappendasysaversion_infollabase64ab64decodecaencodelareadPemBlocksFromFileutoo many values to unpack (expected 2)areadBase64fromTextareada__doc__a__file__a__spec__aoriginahas_locationa__cached__Tlllutoo many values to unpack (expected 3)Tu-----BEGIN CERTIFICATE-----u-----END CERTIFICATE-----areadPemFromFileareadBase64FromFileupyasn1_modules\pem.pyTwxTwyu<module pyasn1_modules.pem>TafileObjTatextTafileObjamarkersastartMarkersastopMarkersaidxasubstrateacertLinesastateacertLineTafileObjastartMarkeraendMarkeraidxasubstrate.pyasn1_modules.rfc2251#a__doc__a__file__a__spec__aoriginahas_locationa__cached__upyasn1.typeTaconstraintlaconstraintTanamedtypeanamedtypeTanamedvalanamedvalTatagatagTaunivaunivaIntegerTqamaxIntaOctetStringa__prepare__aLDAPStringa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1_modules.rfc2251a__module__a__qualname__a__orig_bases__aLDAPOIDaLDAPDNaRelativeLDAPDNaAttributeTypeaAttributeDescriptionaSequenceOfaAttributeDescriptionListacomponentTypeaAttributeValueaAssertionValueaSequenceaAttributeValueAssertionaNamedTypesaNamedTypeaattributeDescaassertionValueaAttributeatypeavalsaSetOfTacomponentTypeaMatchingRuleIdaControlacontrolTypeaDefaultedNamedTypeacriticalityaBooleanTaFalseaOptionalNamedTypeacontrolValueaControlsaLDAPURLaReferralaSaslCredentialsamechanismacredentialsaChoiceaAuthenticationChoiceasimpleasubtypeaTagatagClassContextatagFormatSimpleTaimplicitTagureserved-1lureserved-2lasasllaBindRequestatagSetatagImplicitlyatagClassApplicationatagFormatConstructedaversionaValueRangeConstraintTllTasubtypeSpecanameaauthenticationaPartialAttributeListaSearchResultEntrylaobjectNameaattributesaMatchingRuleAssertionamatchingRuleamatchValueadnAttributesaSubstringFilterasubstringsainitialaanyafinalaFilter3aequalityMatchagreaterOrEquallalessOrEquallapresentlaapproxMatchlaextensibleMatchlaFilter2aandaoranotaFilteraSearchRequestabaseObjectascopeaEnumeratedaNamedValuesTTabaseObjectlTasingleLevellTawholeSubtreelTanamedValuesaderefAliasesTTaneverDerefAliaseslTaderefInSearchinglTaderefFindingBaseObjlTaderefAlwayslasizeLimitatimeLimitatypesOnlyafilteraNullaUnbindRequestaBindResponsearesultCodeT4TasuccesslTaoperationsErrorlTaprotocolErrorlTatimeLimitExceededlTasizeLimitExceededlTacompareFalselTacompareTruelTaauthMethodNotSupportedlTastrongAuthRequiredlTureserved-9lTareferrall
TaadminLimitExceededlTaunavailableCriticalExtensionlTaconfidentialityRequiredl
TasaslBindInProgresslTanoSuchAttributelTaundefinedAttributeTypelTainappropriateMatchinglTaconstraintViolationlTaattributeOrValueExistslTainvalidAttributeSyntaxlTanoSuchObjectl TaaliasProbleml!TainvalidDNSyntaxl"Tureserved-35l#TaaliasDereferencingProbleml$TainappropriateAuthenticationl0TainvalidCredentialsl1TainsufficientAccessRightsl2Tabusyl3Taunavailablel4TaunwillingToPerforml5TaloopDetectl6TanamingViolationl@TaobjectClassViolationlATanotAllowedOnNonLeaflBTanotAllowedOnRDNlCTaentryAlreadyExistslDTaobjectClassModsProhibitedlETureserved-70lFTaaffectsMultipleDSAslGTaotherlPTureserved-81lQTureserved-82lRTureserved-83lSTureserved-84lTTureserved-85lUTureserved-86lVTureserved-87lWTureserved-88lXTureserved-89lYTureserved-90lZamatchedDNaerrorMessageareferralaserverSaslCredsaLDAPResultaSearchResultReferencelaSearchResultDoneaAttributeTypeAndValuesaModifyRequestaobjectamodificationaoperationTTaaddlTadeletelTareplacelaModifyResponseaAttributeListaAddRequestaentryaAddResponseaDelRequestl
aDelResponselaModifyDNRequestlanewrdnadeleteoldrdnanewSuperioraModifyDNResponsel
aCompareRequestlaavaaCompareResponselaAbandonRequestlaExtendedRequestlarequestNamearequestValueaExtendedResponselaresponseNamearesponseaMessageIDasubtypeSpecaLDAPMessageamessageIDaprotocolOpabindRequestabindResponseaunbindRequestasearchRequestasearchResEntryasearchResDoneasearchResRefamodifyRequestamodifyResponseaaddRequestaaddResponseadelRequestadelResponseamodDNRequestamodDNResponseacompareRequestacompareResponseaabandonRequestaextendedReqaextendedRespacontrolsupyasn1_modules\rfc2251.pyu<module pyasn1_modules.rfc2251>Ta__class__u.pyasn1_modules.rfc2459W)Za__doc__a__file__a__spec__aoriginahas_locationa__cached__upyasn1.typeTacharlacharTaconstraintaconstraintTanamedtypeanamedtypeTanamedvalanamedvalTaopentypeaopentypeTatagatagTaunivaunivTausefulausefulZaMAXaIntegerTlaub_nameTl@aub_common_nameTlaub_locality_nameaub_state_nameaub_organization_nameaub_organizational_unit_nameaub_titleaub_matchaub_emailaddress_lengthaub_common_name_lengthTlaub_country_name_alpha_lengthTlaub_country_name_numeric_lengthTlaub_domain_defined_attributesTlaub_domain_defined_attribute_type_lengthaub_domain_defined_attribute_value_lengthTlaub_domain_name_lengthTlaub_extension_attributesTlaub_e163_4_number_lengthTl(aub_e163_4_sub_address_lengthaub_generation_qualifier_lengthaub_given_name_lengthTlaub_initials_lengthaub_integer_optionsTl aub_numeric_user_id_lengthaub_organization_name_lengthaub_organizational_unit_name_lengthaub_organizational_unitsaub_pds_name_lengthTlaub_pds_parameter_lengthTlaub_pds_physical_address_linesaub_postal_code_lengthaub_surname_lengthTlaub_terminal_id_lengthTlaub_unformatted_address_lengthaub_x121_address_lengthaUniversalStringa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1_modules.rfc2459a__module__a__qualname__a__orig_bases__aBMPStringaUTF8StringaObjectIdentifierTu1.3.6.1.5.5.7aid_pkixTu1.3.6.1.5.5.7.1aid_peTu1.3.6.1.5.5.7.2aid_qtTu1.3.6.1.5.5.7.3aid_kpTu1.3.6.1.5.5.7.48aid_adTu1.3.6.1.5.5.7.2.1aid_qt_cpsTu1.3.6.1.5.5.7.2.2aid_qt_unoticeTu1.3.6.1.5.5.7.48.1aid_ad_ocspTu1.3.6.1.5.5.7.48.2aid_ad_caIssuersTu2.5.4aid_atTu2.5.4.41aid_at_nameTu2.5.4.4aid_at_sutnameaid_at_surnameTu2.5.4.42aid_at_givenNameTu2.5.4.43aid_at_initialsTu2.5.4.44aid_at_generationQualifieraChoiceaX520nameaNamedTypesaNamedTypeateletexStringaTeletexStringasubtypeaValueSizeConstraintlTasubtypeSpecaprintableStringaPrintableStringauniversalStringautf8StringabmpStringacomponentTypeTu2.5.4.3aid_at_commonNameaX520CommonNameTu2.5.4.7aid_at_localityNameaX520LocalityNameTu2.5.4.8aid_at_stateOrProvinceNameaX520StateOrProvinceNameTu2.5.4.10aid_at_organizationNameaX520OrganizationNameTu2.5.4.11aid_at_organizationalUnitNameaX520OrganizationalUnitNameTu2.5.4.12aid_at_titleaX520TitleTu2.5.4.46aid_at_dnQualifieraX520dnQualifierTu2.5.4.6aid_at_countryNameaX520countryNameasubtypeSpecTlpTu1.2.840.113549.1.9apkcs_9Tu1.2.840.113549.1.9.1aemailAddressaIA5StringaPkcs9emailaSequenceaDSAPrivateKeyuPKIX compliant DSA private key structureaversionaNamedValuesTTav1lTanamedValueswpwqwgapublicaprivateaDirectoryStringaia5StringaAlgorithmIdentifieraalgorithmaOptionalNamedTypeaparametersaAnyTu1.2.840.113549.1.1apkcs_1Tu1.2.840.113549.1.1.1arsaEncryptionTu1.2.840.113549.1.1.2amd2WithRSAEncryptionTu1.2.840.113549.1.1.4amd5WithRSAEncryptionTu1.2.840.113549.1.1.5asha1WithRSAEncryptionTu1.2.840.10040.4.3aid_dsa_with_sha1aDss_Sig_ValuewrwsTu1.2.840.10046.2.1adhpublicnumberaValidationParmsaseedaBitStringapgenCounteraDomainParameterswjavalidationParmsTu1.2.840.10040.4.1aid_dsaaDss_Parmsateletex_domain_defined_attributesaTeletexDomainDefinedAttributeatypeavalueaSequenceOfaTeletexDomainDefinedAttributesasizeSpecTlaterminal_typeaTerminalTypeTTatelexlTateletelexlTug3-facsimilelTug4-facsimilelTuia5-terminallTavideotexlanamedValuesaPresentationAddressapSelectoraOctetStringaTagatagClassContextatagFormatSimpleTaexplicitTagasSelectoratSelectorlanAddressesaSetOfTacomponentTypelTaexplicitTagasubtypeSpecTlaextended_network_addressaE163_4_addressanumberaNumericStringTasubtypeSpecaexplicitTagusub-addressaExtendedNetworkAddressue163-4-addressupsap-addressaSetaPDSParameteruprintable-stringuteletex-stringTlalocal_postal_attributesaLocalPostalAttributesaUniquePostalNameTlaunique_postal_nameTlaposte_restante_addressaPosteRestanteAddressTlapost_office_box_addressaPostOfficeBoxAddressTlastreet_addressaStreetAddressaUnformattedPostalAddressuprintable-addressTl
aphysical_delivery_office_nameaPhysicalDeliveryOfficeNameTlaphysical_delivery_office_numberaPhysicalDeliveryOfficeNumberTlaextension_OR_address_componentsaExtensionORAddressComponentsTl
aphysical_delivery_personal_nameaPhysicalDeliveryPersonalNameTlaphysical_delivery_organization_nameaPhysicalDeliveryOrganizationNameaextension_physical_delivery_address_componentsaExtensionPhysicalDeliveryAddressComponentsaunformatted_postal_addressTlapostal_codeaPostalCodeunumeric-codeuprintable-codeaPhysicalDeliveryCountryNameux121-dcc-codeuiso-3166-alpha2-codeaPDSNameaphysical_delivery_country_nameaTeletexOrganizationalUnitNameTlapds_nameateletex_organizational_unit_namesaTeletexOrganizationalUnitNamesateletex_personal_nameaTeletexPersonalNameasurnameugiven-nameainitialsugeneration-qualifierateletex_organization_nameaTeletexOrganizationNameateletex_common_nameaTeletexCommonNameaCommonNameTlacommon_nameaExtensionAttributeuextension-attribute-typeuextension-attribute-valueaExtensionAttributesaBuiltInDomainDefinedAttributeaBuiltInDomainDefinedAttributesaOrganizationalUnitNameaOrganizationalUnitNamesaPersonalNameaNumericUserIdentifieraOrganizationNameaPrivateDomainNameanumericaprintableaTerminalIdentifieraX121AddressaNetworkAddressaAdministrationDomainNameatagSetatagExplicitlyatagClassApplicationatagFormatConstructedaCountryNameaBuiltInStandardAttributesucountry-nameuadministration-domain-nameunetwork-addressuterminal-identifieruprivate-domain-nameuorganization-nameunumeric-user-identifierlupersonal-nameluorganizational-unit-nameslaORAddressubuilt-in-standard-attributesubuilt-in-domain-defined-attributesuextension-attributesTu2.5.29.24aid_ce_invalidityDateaGeneralizedTimeaInvalidityDateTu2.2.840.10040.2.1aid_holdinstruction_noneTu2.2.840.10040.2.2aid_holdinstruction_callissuerTu2.2.840.10040.2.3aid_holdinstruction_rejectTu2.2.840.10040.2aholdInstructionTu2.5.29.23aid_ce_holdInstructionCodeaHoldInstructionCodeTu2.5.29.21aid_ce_cRLReasonsaEnumeratedaCRLReasonTTaunspecifiedlTakeyCompromiselTacACompromiselTaaffiliationChangedlTasupersededlTacessationOfOperationlTacertificateHoldlTaremoveFromCRLlTu2.5.29.20aid_ce_cRLNumberaCRLNumberaBaseCRLNumberTu1.3.6.1.5.5.7.3.1aid_kp_serverAuthTu1.3.6.1.5.5.7.3.2aid_kp_clientAuthTu1.3.6.1.5.5.7.3.3aid_kp_codeSigningTu1.3.6.1.5.5.7.3.4aid_kp_emailProtectionTu1.3.6.1.5.5.7.3.5aid_kp_ipsecEndSystemTu1.3.6.1.5.5.7.3.6aid_kp_ipsecTunnelTu1.3.6.1.5.5.7.3.7aid_kp_ipsecUserTu1.3.6.1.5.5.7.3.8aid_kp_timeStampingTu1.3.6.1.5.5.7.1.1aid_pe_authorityInfoAccessTu2.5.29.37aid_ce_extKeyUsageaKeyPurposeIdaExtKeyUsageSyntaxaReasonFlagsTTaunusedlTakeyCompromiselTacACompromiselTaaffiliationChangedlTasupersededlTacessationOfOperationlTacertificateHoldlaSkipCertsTu2.5.29.36aid_ce_policyConstraintsaPolicyConstraintsarequireExplicitPolicyTaimplicitTagainhibitPolicyMappingTu2.5.29.19aid_ce_basicConstraintsaBasicConstraintsaDefaultedNamedTypeacAaBooleanTFapathLenConstraintaValueRangeConstraintTu2.5.29.9aid_ce_subjectDirectoryAttributesaEDIPartyNameanameAssignerapartyNameTu2.5.29.27aid_ce_deltaCRLIndicatoraBaseDistanceTu2.5.29.31aid_ce_cRLDistributionPointsTu2.5.29.28aid_ce_issuingDistributionPointTu2.5.29.30aid_ce_nameConstraintsaDisplayTextavisibleStringaVisibleStringTllaNoticeReferenceaorganizationanoticeNumbersaUserNoticeanoticeRefaexplicitTextaCPSuriaPolicyQualifierIdaSingleValueConstraintaCertPolicyIdaPolicyQualifierInfoapolicyQualifierIdaqualifierTu2.5.29.32aid_ce_certificatePoliciesaPolicyInformationapolicyIdentifierapolicyQualifiersaCertificatePoliciesTu2.5.29.33aid_ce_policyMappingsaPolicyMappingaissuerDomainPolicyasubjectDomainPolicyaPolicyMappingsTu2.5.29.16aid_ce_privateKeyUsagePeriodaPrivateKeyUsagePeriodanotBeforeanotAfterTu2.5.29.15aid_ce_keyUsageaKeyUsageTTadigitalSignaturelTanonRepudiationlTakeyEnciphermentlTadataEnciphermentlTakeyAgreementlTakeyCertSignlTacRLSignlTaencipherOnlylTadecipherOnlylTu2.5.29aid_ceTu2.5.29.35aid_ce_authorityKeyIdentifieraKeyIdentifierTu2.5.29.14aid_ce_subjectKeyIdentifieraSubjectKeyIdentifierTu2.5.29.29aid_ce_certificateIssuerTu2.5.29.17aid_ce_subjectAltNameTu2.5.29.18aid_ce_issuerAltNameaAttributeValueaAttributeTypeacertificateAttributesMapaAttributeTypeAndValueaOpenTypeTaopenTypeaAttributeavalsaSubjectDirectoryAttributesaRelativeDistinguishedNameaRDNSequenceaNameuaCertificateSerialNumberaAnotherNameutype-idaGeneralNameaotherNamearfc822NameadNSNameax400AddressadirectoryNameaediPartyNameauniformResourceIdentifieraiPAddresslaregisteredIDlaGeneralNamesaAccessDescriptionaaccessMethodaaccessLocationaAuthorityInfoAccessSyntaxaAuthorityKeyIdentifierakeyIdentifieraauthorityCertIssueraauthorityCertSerialNumberaDistributionPointNameafullNameanameRelativeToCRLIssueraDistributionPointadistributionPointareasonsacRLIssueraCRLDistPointsSyntaxaIssuingDistributionPointaonlyContainsUserCertsaonlyContainsCACertsaonlySomeReasonsaindirectCRLaGeneralSubtreeabaseaminimumTlamaximumaGeneralSubtreesaNameConstraintsapermittedSubtreesaexcludedSubtreesaCertificateIssueraSubjectAltNameaIssuerAltNameacertificateExtensionsMapaExtensionaextnIDacriticalTaFalseaextnValueaExtensionsaSubjectPublicKeyInfoasubjectPublicKeyaUniqueIdentifieraTimeautcTimeaUTCTimeageneralTimeaValidityaVersionTTav1lTav2lTav3laTBSCertificateTav1aserialNumberasignatureaissueravalidityasubjectasubjectPublicKeyInfoaissuerUniqueIDasubjectUniqueIDaextensionsaCertificateatbsCertificateasignatureAlgorithmasignatureValueaRevokedCertificateauserCertificatearevocationDateacrlEntryExtensionsaTBSCertListathisUpdateanextUpdatearevokedCertificatesacrlExtensionsaCertificateListatbsCertLista_certificateAttributesMapUpdateaupdatea_certificateExtensionsMapUpdateupyasn1_modules\rfc2459.pyu<module pyasn1_modules.rfc2459>Ta__class__.pyasn1_modules.rfc5208m=a__doc__a__file__a__spec__aoriginahas_locationa__cached__apyasn1_modulesTarfc2251larfc2251upyasn1_modules.rfc2459Tw*aAlgorithmIdentifiera__prepare__aKeyEncryptionAlgorithmsa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upyasn1_modules.rfc5208a__module__a__qualname__a__orig_bases__aPrivateKeyAlgorithmsaunivaOctetStringaEncryptedDataaSequenceaEncryptedPrivateKeyInfoanamedtypeaNamedTypesaNamedTypeaencryptionAlgorithmaencryptedDataacomponentTypeaPrivateKeyaSetOfaAttributesaAttributeaIntegeraVersionanamedvalaNamedValuesTTav1lTav2lanamedValuesaPrivateKeyInfoaversionaprivateKeyAlgorithmaprivateKeyaOptionalNamedTypeaattributesasubtypeatagaTagatagClassContextatagFormatConstructedTaimplicitTagupyasn1_modules\rfc5208.pyu<module pyasn1_modules.rfc5208>Ta__class__u.pythoncom
a__doc__a__file__a__spec__aoriginahas_locationa__cached__apywintypesla__import_pywin32_system_module__apythoncomupythoncom.pyu<module pythoncom>u.pytzeadecodeTaASCIIaencodewsu
        >>> ascii('Hello')
        'Hello'
        >>> ascii('\N{TRADE MARK SIGN}') #doctest: +IGNORE_EXCEPTION_DETAIL
        Traceback (most recent call last):
            ...
        UnicodeEncodeError: ...
        alstripTw/asplitaosapathapardirasepuBad path segment: %raenvironagetTaPYTZ_TZDATADIRnajoinadirnamea__file__azoneinfoaexistsaresource_streamapytzuzoneinfo/afilenamearbuOpen a resource from the zoneinfo subdir for reading.

    Uses the pkg_resources module if available and no standard file
    found at the calculated location.

    It is possible to specify different location for zoneinfo
    subdir by using the PYTZ_TZDATADIR environment variable.
    TaPYTZ_SKIPEXISTSCHECKuaopen_resourceacloseuReturn true if the given resource existsaUnknownTimeZoneErrorTnaupperaUTCautcaasciia_case_insensitive_zone_lookupa_unmunge_zonea_tzinfo_cacheaall_timezones_setabuild_tzinfoazoneu Return a datetime.tzinfo implementation for the given timezone

    >>> from datetime import datetime, timedelta
    >>> utc = timezone('UTC')
    >>> eastern = timezone('US/Eastern')
    >>> eastern.zone
    'US/Eastern'
    >>> timezone(unicode('US/Eastern')) is eastern
    True
    >>> utc_dt = datetime(2002, 10, 27, 6, 0, 0, tzinfo=utc)
    >>> loc_dt = utc_dt.astimezone(eastern)
    >>> fmt = '%Y-%m-%d %H:%M:%S %Z (%z)'
    >>> loc_dt.strftime(fmt)
    '2002-10-27 01:00:00 EST (-0500)'
    >>> (loc_dt - timedelta(minutes=10)).strftime(fmt)
    '2002-10-27 00:50:00 EST (-0500)'
    >>> eastern.normalize(loc_dt - timedelta(minutes=10)).strftime(fmt)
    '2002-10-27 01:50:00 EDT (-0400)'
    >>> (loc_dt + timedelta(minutes=10)).strftime(fmt)
    '2002-10-27 01:10:00 EST (-0500)'

    Raises UnknownTimeZoneError if passed an unknown zone.

    >>> try:
    ...     timezone('Asia/Shangri-La')
    ... except UnknownTimeZoneError:
    ...     print('Unknown')
    Unknown

    >>> try:
    ...     timezone(unicode('\N{TRADE MARK SIGN}'))
    ... except UnknownTimeZoneError:
    ...     print('Unknown')
    Unknown

    areplaceTa_plus_w+Ta_minus_w-uUndo the time zone name munging done by older versions of pytz.a_all_timezones_lower_to_standarda_all_timezones_uncheckedalowerucase-insensitively matching timezone, else return zone unchangedu<genexpr>u_case_insensitive_zone_lookup.<locals>.<genexpr>atzinfoalocalizeafromutcaZEROa_UTCTuNot naive datetime (tzinfo is already set)TatzinfouConvert naive time to local timeuNaive time - no tzinfo setaastimezoneuCorrect the timezone information on the given datetimeuFactory function for utc unpickling.

    Makes sure that unpickling a utc instance always returns the same
    module global.

    These examples belong in the UTC class above, but it is obscured; or in
    the README.rst, but we are not depending on Python 2.4 so integrating
    the README.rst examples with the unit tests is not trivial.

    >>> import datetime, pickle
    >>> dt = datetime.datetime(2005, 3, 1, 14, 13, 21, tzinfo=utc)
    >>> naive = dt.replace(tzinfo=None)
    >>> p = pickle.dumps(dt, 1)
    >>> naive_p = pickle.dumps(naive, 1)
    >>> len(p) - len(naive_p)
    17
    >>> new = pickle.loads(p)
    >>> new == dt
    True
    >>> new is dt
    False
    >>> new.tzinfo is dt.tzinfo
    True
    >>> utc is UTC is timezone('UTC')
    True
    >>> utc is timezone('GMT')
    False
    aunpickleruFactory function for unpickling pytz tzinfo instances.

    Just a wrapper around tzinfo.unpickler to save a few bytes in each pickle
    by shortening the path.
    uBackwards compatibility.Tuzone.tabTuUTF-8astartswithTw#Tnl:nlnutoo many values to unpack (expected 3)adataaappendTuiso3166.tabareadlinesTnlutoo many values to unpack (expected 2)astripluabsolute offset is too largea_minutesadatetimeatimedeltaTaminutesa_offsetaFixedOffsetupytz.FixedOffset(%d)lasetdefaulta_FixedOffsetureturn a fixed-offset timezone based off a number of minutes.

        >>> one = FixedOffset(-330)
        >>> one
        pytz.FixedOffset(-330)
        >>> str(one.utcoffset(datetime.datetime.now()))
        '-1 day, 18:30:00'
        >>> str(one.dst(datetime.datetime.now()))
        '0:00:00'

        >>> two = FixedOffset(1380)
        >>> two
        pytz.FixedOffset(1380)
        >>> str(two.utcoffset(datetime.datetime.now()))
        '23:00:00'
        >>> str(two.dst(datetime.datetime.now()))
        '0:00:00'

    The datetime.timedelta must be between the range of -1 and 1 day,
    non-inclusive.

        >>> FixedOffset(1440)
        Traceback (most recent call last):
        ...
        ValueError: ('absolute offset is too large', 1440)

        >>> FixedOffset(-1440)
        Traceback (most recent call last):
        ...
        ValueError: ('absolute offset is too large', -1440)

    An offset of 0 is special-cased to return UTC.

        >>> FixedOffset(0) is UTC
        True

    There should always be only one instance of a FixedOffset per timedelta.
    This should be true for multiple creation calls.

        >>> FixedOffset(-330) is one
        True
        >>> FixedOffset(1380) is two
        True

    It should also be true for pickling.

        >>> import pickle
        >>> pickle.loads(pickle.dumps(one)) is one
        True
        >>> pickle.loads(pickle.dumps(two)) is two
        True
    aresource_existsaall_timezonesu
datetime.tzinfo timezone definitions generated from the
Olson timezone database:

    ftp://elsie.nci.nih.gov/pub/tz*.tar.gz

See the datetime section of the Python Library Reference for information
on how to use these modules.
a__doc__TaNUITKA_PACKAGE_pytzu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__asysuos.pathupytz.exceptionsTaAmbiguousTimeErroraAmbiguousTimeErrorTaInvalidTimeErroraInvalidTimeErrorTaNonExistentTimeErroraNonExistentTimeErrorTaUnknownTimeZoneErrorupytz.lazyTaLazyDictaLazyListaLazySetaLazyDictaLazyListaLazySetupytz.tzinfoTaunpickleraBaseTzInfoaBaseTzInfoupytz.tzfileTabuild_tzinfou2023caOLSON_VERSIONu2023.3.post1aVERSIONa__version__aOLSEN_VERSIONLatimezoneautcacountry_timezonesacountry_namesaAmbiguousTimeErroraInvalidTimeErroraNonExistentTimeErroraUnknownTimeZoneErroraall_timezonesaall_timezones_setacommon_timezonesacommon_timezones_setaBaseTzInfoaFixedOffseta__all__aunicodeatimezoneTlTlTahoursaHOURa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>a__module__uUTC

    Optimized UTC implementation. It unpickles using the single module global
    instance defined beneath this class declaration.
    a__qualname__a_utcoffseta_dsta_tznameuUTC.fromutcautcoffsetuUTC.utcoffsetatznameuUTC.tznameadstuUTC.dsta__reduce__uUTC.__reduce__TFuUTC.localizeanormalizeuUTC.normalizeu<UTC>a__repr__uUTC.__repr__a__str__uUTC.__str__a__orig_bases__a__safe_for_unpickling__a_pa_CountryTimezoneDictuMap ISO 3166 country code to a list of timezone names commonly used
    in that country.

    iso3166_code is the two letter code used to identify the country.

    >>> def print_list(list_of_strings):
    ...     'We use a helper so doctests work under Python 2.3 -> 3.x'
    ...     for s in list_of_strings:
    ...         print(s)

    >>> print_list(country_timezones['nz'])
    Pacific/Auckland
    Pacific/Chatham
    >>> print_list(country_timezones['ch'])
    Europe/Zurich
    >>> print_list(country_timezones['CH'])
    Europe/Zurich
    >>> print_list(country_timezones[unicode('ch')])
    Europe/Zurich
    >>> print_list(country_timezones['XXX'])
    Traceback (most recent call last):
    ...
    KeyError: 'XXX'

    Previously, this information was exposed as a function rather than a
    dictionary. This is still supported::

    >>> print_list(country_timezones('nz'))
    Pacific/Auckland
    Pacific/Chatham
    a__call__u_CountryTimezoneDict.__call__a_fillu_CountryTimezoneDict._fillacountry_timezonesa_CountryNameDictuDictionary proving ISO3166 code -> English name.

    >>> print(country_names['au'])
    Australia
    u_CountryNameDict._fillacountry_namesa__init__u_FixedOffset.__init__u_FixedOffset.utcoffsetu_FixedOffset.__reduce__u_FixedOffset.dstu_FixedOffset.tznameu_FixedOffset.__repr__u_FixedOffset.localizeu_FixedOffset.normalizea_testLuAfrica/AbidjanuAfrica/AccrauAfrica/Addis_AbabauAfrica/AlgiersuAfrica/AsmarauAfrica/AsmerauAfrica/BamakouAfrica/BanguiuAfrica/BanjuluAfrica/BissauuAfrica/BlantyreuAfrica/BrazzavilleuAfrica/BujumburauAfrica/CairouAfrica/CasablancauAfrica/CeutauAfrica/ConakryuAfrica/DakaruAfrica/Dar_es_SalaamuAfrica/DjiboutiuAfrica/DoualauAfrica/El_AaiunuAfrica/FreetownuAfrica/GaboroneuAfrica/HarareuAfrica/JohannesburguAfrica/JubauAfrica/KampalauAfrica/KhartoumuAfrica/KigaliuAfrica/KinshasauAfrica/LagosuAfrica/LibrevilleuAfrica/LomeuAfrica/LuandauAfrica/LubumbashiuAfrica/LusakauAfrica/MalabouAfrica/MaputouAfrica/MaseruuAfrica/MbabaneuAfrica/MogadishuuAfrica/MonroviauAfrica/NairobiuAfrica/NdjamenauAfrica/NiameyuAfrica/NouakchottuAfrica/OuagadougouuAfrica/Porto-NovouAfrica/Sao_TomeuAfrica/TimbuktuuAfrica/TripoliuAfrica/TunisuAfrica/WindhoekuAmerica/AdakuAmerica/AnchorageuAmerica/AnguillauAmerica/AntiguauAmerica/AraguainauAmerica/Argentina/Buenos_AiresuAmerica/Argentina/CatamarcauAmerica/Argentina/ComodRivadaviauAmerica/Argentina/CordobauAmerica/Argentina/JujuyuAmerica/Argentina/La_RiojauAmerica/Argentina/MendozauAmerica/Argentina/Rio_GallegosuAmerica/Argentina/SaltauAmerica/Argentina/San_JuanuAmerica/Argentina/San_LuisuAmerica/Argentina/TucumanuAmerica/Argentina/UshuaiauAmerica/ArubauAmerica/AsuncionuAmerica/AtikokanuAmerica/AtkauAmerica/BahiauAmerica/Bahia_BanderasuAmerica/BarbadosuAmerica/BelemuAmerica/BelizeuAmerica/Blanc-SablonuAmerica/Boa_VistauAmerica/BogotauAmerica/BoiseuAmerica/Buenos_AiresuAmerica/Cambridge_BayuAmerica/Campo_GrandeuAmerica/CancunuAmerica/CaracasuAmerica/CatamarcauAmerica/CayenneuAmerica/CaymanuAmerica/ChicagouAmerica/ChihuahuauAmerica/Ciudad_JuarezuAmerica/Coral_HarbouruAmerica/CordobauAmerica/Costa_RicauAmerica/CrestonuAmerica/CuiabauAmerica/CuracaouAmerica/DanmarkshavnuAmerica/DawsonuAmerica/Dawson_CreekuAmerica/DenveruAmerica/DetroituAmerica/DominicauAmerica/EdmontonuAmerica/EirunepeuAmerica/El_SalvadoruAmerica/EnsenadauAmerica/Fort_NelsonuAmerica/Fort_WayneuAmerica/FortalezauAmerica/Glace_BayuAmerica/GodthabuAmerica/Goose_BayuAmerica/Grand_TurkuAmerica/GrenadauAmerica/GuadeloupeuAmerica/GuatemalauAmerica/GuayaquiluAmerica/GuyanauAmerica/HalifaxuAmerica/HavanauAmerica/HermosillouAmerica/Indiana/IndianapolisuAmerica/Indiana/KnoxuAmerica/Indiana/MarengouAmerica/Indiana/PetersburguAmerica/Indiana/Tell_CityuAmerica/Indiana/VevayuAmerica/Indiana/VincennesuAmerica/Indiana/WinamacuAmerica/IndianapolisuAmerica/InuvikuAmerica/IqaluituAmerica/JamaicauAmerica/JujuyuAmerica/JuneauuAmerica/Kentucky/LouisvilleuAmerica/Kentucky/MonticellouAmerica/Knox_INuAmerica/KralendijkuAmerica/La_PazuAmerica/LimauAmerica/Los_AngelesuAmerica/LouisvilleuAmerica/Lower_PrincesuAmerica/MaceiouAmerica/ManaguauAmerica/ManausuAmerica/MarigotuAmerica/MartiniqueuAmerica/MatamorosuAmerica/MazatlanuAmerica/MendozauAmerica/MenomineeuAmerica/MeridauAmerica/MetlakatlauAmerica/Mexico_CityuAmerica/MiquelonuAmerica/MonctonuAmerica/MonterreyuAmerica/MontevideouAmerica/MontrealuAmerica/MontserratuAmerica/NassauuAmerica/New_YorkuAmerica/NipigonuAmerica/NomeuAmerica/NoronhauAmerica/North_Dakota/BeulahuAmerica/North_Dakota/CenteruAmerica/North_Dakota/New_SalemuAmerica/NuukuAmerica/OjinagauAmerica/PanamauAmerica/PangnirtunguAmerica/ParamaribouAmerica/PhoenixuAmerica/Port-au-PrinceuAmerica/Port_of_SpainuAmerica/Porto_AcreuAmerica/Porto_VelhouAmerica/Puerto_RicouAmerica/Punta_ArenasuAmerica/Rainy_RiveruAmerica/Rankin_InletuAmerica/RecifeuAmerica/ReginauAmerica/ResoluteuAmerica/Rio_BrancouAmerica/RosariouAmerica/Santa_IsabeluAmerica/SantaremuAmerica/SantiagouAmerica/Santo_DomingouAmerica/Sao_PaulouAmerica/ScoresbysunduAmerica/ShiprockuAmerica/SitkauAmerica/St_BarthelemyuAmerica/St_JohnsuAmerica/St_KittsuAmerica/St_LuciauAmerica/St_ThomasuAmerica/St_VincentuAmerica/Swift_CurrentuAmerica/TegucigalpauAmerica/ThuleuAmerica/Thunder_BayuAmerica/TijuanauAmerica/TorontouAmerica/TortolauAmerica/VancouveruAmerica/VirginuAmerica/WhitehorseuAmerica/WinnipeguAmerica/YakutatuAmerica/YellowknifeuAntarctica/CaseyuAntarctica/DavisuAntarctica/DumontDUrvilleuAntarctica/MacquarieuAntarctica/MawsonuAntarctica/McMurdouAntarctica/PalmeruAntarctica/RotherauAntarctica/South_PoleuAntarctica/SyowauAntarctica/TrolluAntarctica/VostokuArctic/LongyearbyenuAsia/AdenuAsia/AlmatyuAsia/AmmanuAsia/AnadyruAsia/AqtauuAsia/AqtobeuAsia/AshgabatuAsia/AshkhabaduAsia/AtyrauuAsia/BaghdaduAsia/BahrainuAsia/BakuuAsia/BangkokuAsia/BarnauluAsia/BeirutuAsia/BishkekuAsia/BruneiuAsia/CalcuttauAsia/ChitauAsia/ChoibalsanuAsia/ChongqinguAsia/ChungkinguAsia/ColombouAsia/DaccauAsia/DamascusuAsia/DhakauAsia/DiliuAsia/DubaiuAsia/DushanbeuAsia/FamagustauAsia/GazauAsia/HarbinuAsia/HebronuAsia/Ho_Chi_MinhuAsia/Hong_KonguAsia/HovduAsia/IrkutskuAsia/IstanbuluAsia/JakartauAsia/JayapurauAsia/JerusalemuAsia/KabuluAsia/KamchatkauAsia/KarachiuAsia/KashgaruAsia/KathmanduuAsia/KatmanduuAsia/KhandygauAsia/KolkatauAsia/KrasnoyarskuAsia/Kuala_LumpuruAsia/KuchinguAsia/KuwaituAsia/MacaouAsia/MacauuAsia/MagadanuAsia/MakassaruAsia/ManilauAsia/MuscatuAsia/NicosiauAsia/NovokuznetskuAsia/NovosibirskuAsia/OmskuAsia/OraluAsia/Phnom_PenhuAsia/PontianakuAsia/PyongyanguAsia/QataruAsia/QostanayuAsia/QyzylordauAsia/RangoonuAsia/RiyadhuAsia/SaigonuAsia/SakhalinuAsia/SamarkanduAsia/SeouluAsia/ShanghaiuAsia/SingaporeuAsia/SrednekolymskuAsia/TaipeiuAsia/TashkentuAsia/TbilisiuAsia/TehranuAsia/Tel_AvivuAsia/ThimbuuAsia/ThimphuuAsia/TokyouAsia/TomskuAsia/Ujung_PandanguAsia/UlaanbaataruAsia/Ulan_BatoruAsia/UrumqiuAsia/Ust-NerauAsia/VientianeuAsia/VladivostokuAsia/YakutskuAsia/YangonuAsia/YekaterinburguAsia/YerevanuAtlantic/AzoresuAtlantic/BermudauAtlantic/CanaryuAtlantic/Cape_VerdeuAtlantic/FaeroeuAtlantic/FaroeuAtlantic/Jan_MayenuAtlantic/MadeirauAtlantic/ReykjavikuAtlantic/South_GeorgiauAtlantic/St_HelenauAtlantic/StanleyuAustralia/ACTuAustralia/AdelaideuAustralia/BrisbaneuAustralia/Broken_HilluAustralia/CanberrauAustralia/CurrieuAustralia/DarwinuAustralia/EuclauAustralia/HobartuAustralia/LHIuAustralia/LindemanuAustralia/Lord_HoweuAustralia/MelbourneuAustralia/NSWuAustralia/NorthuAustralia/PerthuAustralia/QueenslanduAustralia/SouthuAustralia/SydneyuAustralia/TasmaniauAustralia/VictoriauAustralia/WestuAustralia/YancowinnauBrazil/AcreuBrazil/DeNoronhauBrazil/EastuBrazil/WestaCETaCST6CDTuCanada/AtlanticuCanada/CentraluCanada/EasternuCanada/MountainuCanada/NewfoundlanduCanada/PacificuCanada/SaskatchewanuCanada/YukonuChile/ContinentaluChile/EasterIslandaCubaaEETaESTaEST5EDTaEgyptaEireuEtc/GMTuEtc/GMT+0uEtc/GMT+1uEtc/GMT+10uEtc/GMT+11uEtc/GMT+12uEtc/GMT+2uEtc/GMT+3uEtc/GMT+4uEtc/GMT+5uEtc/GMT+6uEtc/GMT+7uEtc/GMT+8uEtc/GMT+9uEtc/GMT-0uEtc/GMT-1uEtc/GMT-10uEtc/GMT-11uEtc/GMT-12uEtc/GMT-13uEtc/GMT-14uEtc/GMT-2uEtc/GMT-3uEtc/GMT-4uEtc/GMT-5uEtc/GMT-6uEtc/GMT-7uEtc/GMT-8uEtc/GMT-9uEtc/GMT0uEtc/GreenwichuEtc/UCTuEtc/UTCuEtc/UniversaluEtc/ZuluuEurope/AmsterdamuEurope/AndorrauEurope/AstrakhanuEurope/AthensuEurope/BelfastuEurope/BelgradeuEurope/BerlinuEurope/BratislavauEurope/BrusselsuEurope/BucharestuEurope/BudapestuEurope/BusingenuEurope/ChisinauuEurope/CopenhagenuEurope/DublinuEurope/GibraltaruEurope/GuernseyuEurope/HelsinkiuEurope/Isle_of_ManuEurope/IstanbuluEurope/JerseyuEurope/KaliningraduEurope/KievuEurope/KirovuEurope/KyivuEurope/LisbonuEurope/LjubljanauEurope/LondonuEurope/LuxembourguEurope/MadriduEurope/MaltauEurope/MariehamnuEurope/MinskuEurope/MonacouEurope/MoscowuEurope/NicosiauEurope/OslouEurope/ParisuEurope/PodgoricauEurope/PragueuEurope/RigauEurope/RomeuEurope/SamarauEurope/San_MarinouEurope/SarajevouEurope/SaratovuEurope/SimferopoluEurope/SkopjeuEurope/SofiauEurope/StockholmuEurope/TallinnuEurope/TiraneuEurope/TiraspoluEurope/UlyanovskuEurope/UzhgoroduEurope/VaduzuEurope/VaticanuEurope/ViennauEurope/VilniusuEurope/VolgograduEurope/WarsawuEurope/ZagrebuEurope/ZaporozhyeuEurope/ZurichaGBuGB-EireaGMTuGMT+0uGMT-0aGMT0aGreenwichaHSTaHongkongaIcelanduIndian/AntananarivouIndian/ChagosuIndian/ChristmasuIndian/CocosuIndian/ComorouIndian/KerguelenuIndian/MaheuIndian/MaldivesuIndian/MauritiusuIndian/MayotteuIndian/ReunionaIranaIsraelaJamaicaaJapanaKwajaleinaLibyaaMETaMSTaMST7MDTuMexico/BajaNorteuMexico/BajaSuruMexico/GeneralaNZuNZ-CHATaNavajoaPRCaPST8PDTuPacific/ApiauPacific/AucklanduPacific/BougainvilleuPacific/ChathamuPacific/ChuukuPacific/EasteruPacific/EfateuPacific/EnderburyuPacific/FakaofouPacific/FijiuPacific/FunafutiuPacific/GalapagosuPacific/GambieruPacific/GuadalcanaluPacific/GuamuPacific/HonoluluuPacific/JohnstonuPacific/KantonuPacific/KiritimatiuPacific/KosraeuPacific/KwajaleinuPacific/MajurouPacific/MarquesasuPacific/MidwayuPacific/NauruuPacific/NiueuPacific/NorfolkuPacific/NoumeauPacific/Pago_PagouPacific/PalauuPacific/PitcairnuPacific/PohnpeiuPacific/PonapeuPacific/Port_MoresbyuPacific/RarotongauPacific/SaipanuPacific/SamoauPacific/TahitiuPacific/TarawauPacific/TongatapuuPacific/TrukuPacific/WakeuPacific/WallisuPacific/YapaPolandaPortugalaROCaROKaSingaporeaTurkeyaUCTuUS/AlaskauUS/AleutianuUS/ArizonauUS/CentraluUS/East-IndianauUS/EasternuUS/HawaiiuUS/Indiana-StarkeuUS/MichiganuUS/MountainuUS/PacificuUS/SamoaaUTCaUniversaluW-SUaWETaZuluLuAfrica/AbidjanuAfrica/AccrauAfrica/Addis_AbabauAfrica/AlgiersuAfrica/AsmarauAfrica/BamakouAfrica/BanguiuAfrica/BanjuluAfrica/BissauuAfrica/BlantyreuAfrica/BrazzavilleuAfrica/BujumburauAfrica/CairouAfrica/CasablancauAfrica/CeutauAfrica/ConakryuAfrica/DakaruAfrica/Dar_es_SalaamuAfrica/DjiboutiuAfrica/DoualauAfrica/El_AaiunuAfrica/FreetownuAfrica/GaboroneuAfrica/HarareuAfrica/JohannesburguAfrica/JubauAfrica/KampalauAfrica/KhartoumuAfrica/KigaliuAfrica/KinshasauAfrica/LagosuAfrica/LibrevilleuAfrica/LomeuAfrica/LuandauAfrica/LubumbashiuAfrica/LusakauAfrica/MalabouAfrica/MaputouAfrica/MaseruuAfrica/MbabaneuAfrica/MogadishuuAfrica/MonroviauAfrica/NairobiuAfrica/NdjamenauAfrica/NiameyuAfrica/NouakchottuAfrica/OuagadougouuAfrica/Porto-NovouAfrica/Sao_TomeuAfrica/TripoliuAfrica/TunisuAfrica/WindhoekuAmerica/AdakuAmerica/AnchorageuAmerica/AnguillauAmerica/AntiguauAmerica/AraguainauAmerica/Argentina/Buenos_AiresuAmerica/Argentina/CatamarcauAmerica/Argentina/CordobauAmerica/Argentina/JujuyuAmerica/Argentina/La_RiojauAmerica/Argentina/MendozauAmerica/Argentina/Rio_GallegosuAmerica/Argentina/SaltauAmerica/Argentina/San_JuanuAmerica/Argentina/San_LuisuAmerica/Argentina/TucumanuAmerica/Argentina/UshuaiauAmerica/ArubauAmerica/AsuncionuAmerica/AtikokanuAmerica/BahiauAmerica/Bahia_BanderasuAmerica/BarbadosuAmerica/BelemuAmerica/BelizeuAmerica/Blanc-SablonuAmerica/Boa_VistauAmerica/BogotauAmerica/BoiseuAmerica/Cambridge_BayuAmerica/Campo_GrandeuAmerica/CancunuAmerica/CaracasuAmerica/CayenneuAmerica/CaymanuAmerica/ChicagouAmerica/ChihuahuauAmerica/Ciudad_JuarezuAmerica/Costa_RicauAmerica/CrestonuAmerica/CuiabauAmerica/CuracaouAmerica/DanmarkshavnuAmerica/DawsonuAmerica/Dawson_CreekuAmerica/DenveruAmerica/DetroituAmerica/DominicauAmerica/EdmontonuAmerica/EirunepeuAmerica/El_SalvadoruAmerica/Fort_NelsonuAmerica/FortalezauAmerica/Glace_BayuAmerica/Goose_BayuAmerica/Grand_TurkuAmerica/GrenadauAmerica/GuadeloupeuAmerica/GuatemalauAmerica/GuayaquiluAmerica/GuyanauAmerica/HalifaxuAmerica/HavanauAmerica/HermosillouAmerica/Indiana/IndianapolisuAmerica/Indiana/KnoxuAmerica/Indiana/MarengouAmerica/Indiana/PetersburguAmerica/Indiana/Tell_CityuAmerica/Indiana/VevayuAmerica/Indiana/VincennesuAmerica/Indiana/WinamacuAmerica/InuvikuAmerica/IqaluituAmerica/JamaicauAmerica/JuneauuAmerica/Kentucky/LouisvilleuAmerica/Kentucky/MonticellouAmerica/KralendijkuAmerica/La_PazuAmerica/LimauAmerica/Los_AngelesuAmerica/Lower_PrincesuAmerica/MaceiouAmerica/ManaguauAmerica/ManausuAmerica/MarigotuAmerica/MartiniqueuAmerica/MatamorosuAmerica/MazatlanuAmerica/MenomineeuAmerica/MeridauAmerica/MetlakatlauAmerica/Mexico_CityuAmerica/MiquelonuAmerica/MonctonuAmerica/MonterreyuAmerica/MontevideouAmerica/MontserratuAmerica/NassauuAmerica/New_YorkuAmerica/NomeuAmerica/NoronhauAmerica/North_Dakota/BeulahuAmerica/North_Dakota/CenteruAmerica/North_Dakota/New_SalemuAmerica/NuukuAmerica/OjinagauAmerica/PanamauAmerica/ParamaribouAmerica/PhoenixuAmerica/Port-au-PrinceuAmerica/Port_of_SpainuAmerica/Porto_VelhouAmerica/Puerto_RicouAmerica/Punta_ArenasuAmerica/Rankin_InletuAmerica/RecifeuAmerica/ReginauAmerica/ResoluteuAmerica/Rio_BrancouAmerica/SantaremuAmerica/SantiagouAmerica/Santo_DomingouAmerica/Sao_PaulouAmerica/ScoresbysunduAmerica/SitkauAmerica/St_BarthelemyuAmerica/St_JohnsuAmerica/St_KittsuAmerica/St_LuciauAmerica/St_ThomasuAmerica/St_VincentuAmerica/Swift_CurrentuAmerica/TegucigalpauAmerica/ThuleuAmerica/TijuanauAmerica/TorontouAmerica/TortolauAmerica/VancouveruAmerica/WhitehorseuAmerica/WinnipeguAmerica/YakutatuAntarctica/CaseyuAntarctica/DavisuAntarctica/DumontDUrvilleuAntarctica/MacquarieuAntarctica/MawsonuAntarctica/McMurdouAntarctica/PalmeruAntarctica/RotherauAntarctica/SyowauAntarctica/TrolluAntarctica/VostokuArctic/LongyearbyenuAsia/AdenuAsia/AlmatyuAsia/AmmanuAsia/AnadyruAsia/AqtauuAsia/AqtobeuAsia/AshgabatuAsia/AtyrauuAsia/BaghdaduAsia/BahrainuAsia/BakuuAsia/BangkokuAsia/BarnauluAsia/BeirutuAsia/BishkekuAsia/BruneiuAsia/ChitauAsia/ChoibalsanuAsia/ColombouAsia/DamascusuAsia/DhakauAsia/DiliuAsia/DubaiuAsia/DushanbeuAsia/FamagustauAsia/GazauAsia/HebronuAsia/Ho_Chi_MinhuAsia/Hong_KonguAsia/HovduAsia/IrkutskuAsia/JakartauAsia/JayapurauAsia/JerusalemuAsia/KabuluAsia/KamchatkauAsia/KarachiuAsia/KathmanduuAsia/KhandygauAsia/KolkatauAsia/KrasnoyarskuAsia/Kuala_LumpuruAsia/KuchinguAsia/KuwaituAsia/MacauuAsia/MagadanuAsia/MakassaruAsia/ManilauAsia/MuscatuAsia/NicosiauAsia/NovokuznetskuAsia/NovosibirskuAsia/OmskuAsia/OraluAsia/Phnom_PenhuAsia/PontianakuAsia/PyongyanguAsia/QataruAsia/QostanayuAsia/QyzylordauAsia/RiyadhuAsia/SakhalinuAsia/SamarkanduAsia/SeouluAsia/ShanghaiuAsia/SingaporeuAsia/SrednekolymskuAsia/TaipeiuAsia/TashkentuAsia/TbilisiuAsia/TehranuAsia/ThimphuuAsia/TokyouAsia/TomskuAsia/UlaanbaataruAsia/UrumqiuAsia/Ust-NerauAsia/VientianeuAsia/VladivostokuAsia/YakutskuAsia/YangonuAsia/YekaterinburguAsia/YerevanuAtlantic/AzoresuAtlantic/BermudauAtlantic/CanaryuAtlantic/Cape_VerdeuAtlantic/FaroeuAtlantic/MadeirauAtlantic/ReykjavikuAtlantic/South_GeorgiauAtlantic/St_HelenauAtlantic/StanleyuAustralia/AdelaideuAustralia/BrisbaneuAustralia/Broken_HilluAustralia/DarwinuAustralia/EuclauAustralia/HobartuAustralia/LindemanuAustralia/Lord_HoweuAustralia/MelbourneuAustralia/PerthuAustralia/SydneyuCanada/AtlanticuCanada/CentraluCanada/EasternuCanada/MountainuCanada/NewfoundlanduCanada/PacificuEurope/AmsterdamuEurope/AndorrauEurope/AstrakhanuEurope/AthensuEurope/BelgradeuEurope/BerlinuEurope/BratislavauEurope/BrusselsuEurope/BucharestuEurope/BudapestuEurope/BusingenuEurope/ChisinauuEurope/CopenhagenuEurope/DublinuEurope/GibraltaruEurope/GuernseyuEurope/HelsinkiuEurope/Isle_of_ManuEurope/IstanbuluEurope/JerseyuEurope/KaliningraduEurope/KirovuEurope/KyivuEurope/LisbonuEurope/LjubljanauEurope/LondonuEurope/LuxembourguEurope/MadriduEurope/MaltauEurope/MariehamnuEurope/MinskuEurope/MonacouEurope/MoscowuEurope/OslouEurope/ParisuEurope/PodgoricauEurope/PragueuEurope/RigauEurope/RomeuEurope/SamarauEurope/San_MarinouEurope/SarajevouEurope/SaratovuEurope/SimferopoluEurope/SkopjeuEurope/SofiauEurope/StockholmuEurope/TallinnuEurope/TiraneuEurope/UlyanovskuEurope/VaduzuEurope/VaticanuEurope/ViennauEurope/VilniusuEurope/VolgograduEurope/WarsawuEurope/ZagrebuEurope/ZurichaGMTuIndian/AntananarivouIndian/ChagosuIndian/ChristmasuIndian/CocosuIndian/ComorouIndian/KerguelenuIndian/MaheuIndian/MaldivesuIndian/MauritiusuIndian/MayotteuIndian/ReunionuPacific/ApiauPacific/AucklanduPacific/BougainvilleuPacific/ChathamuPacific/ChuukuPacific/EasteruPacific/EfateuPacific/FakaofouPacific/FijiuPacific/FunafutiuPacific/GalapagosuPacific/GambieruPacific/GuadalcanaluPacific/GuamuPacific/HonoluluuPacific/KantonuPacific/KiritimatiuPacific/KosraeuPacific/KwajaleinuPacific/MajurouPacific/MarquesasuPacific/MidwayuPacific/NauruuPacific/NiueuPacific/NorfolkuPacific/NoumeauPacific/Pago_PagouPacific/PalauuPacific/PitcairnuPacific/PohnpeiuPacific/Port_MoresbyuPacific/RarotongauPacific/SaipanuPacific/TahitiuPacific/TarawauPacific/TongatapuuPacific/WakeuPacific/WallisuUS/AlaskauUS/ArizonauUS/CentraluUS/EasternuUS/HawaiiuUS/MountainuUS/PacificaUTCacommon_timezonesacommon_timezones_setupytz\__init__.pyTa.0atzu<module pytz>Taoffseta_tzinfosainfoTa__class__Taselfaiso3166_codeTaselfaminutesTaselfTazoneTaselfadataazone_tabalineacodeacoordinatesazoneTaselfadataazone_tabalineacodeanameTaargsTwsTaselfadtTaselfadta__class__Taselfadtais_dstTanameaname_partsapartazoneinfo_dirafilenamearesource_streamTanameTazoneafpu.pytz.exceptions!u
Custom exceptions raised by pytz.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__LaUnknownTimeZoneErroraInvalidTimeErroraAmbiguousTimeErroraNonExistentTimeErrora__all__TEExceptionla__prepare__aErrora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upytz.exceptionsa__module__uBase class for all exceptions raised by the pytz librarya__qualname__a__orig_bases__aUnknownTimeZoneErroruException raised when pytz is passed an unknown timezone.

    >>> isinstance(UnknownTimeZoneError(), LookupError)
    True

    This class is actually a subclass of KeyError to provide backwards
    compatibility with code relying on the undocumented behavior of earlier
    pytz releases.

    >>> isinstance(UnknownTimeZoneError(), KeyError)
    True

    And also a subclass of pytz.exceptions.Error, as are other pytz
    exceptions.

    >>> isinstance(UnknownTimeZoneError(), Error)
    True

    aInvalidTimeErroruBase class for invalid time exceptions.aAmbiguousTimeErroruException raised when attempting to create an ambiguous wallclock time.

    At the end of a DST transition period, a particular wallclock time will
    occur twice (once before the clocks are set back, once after). Both
    possibilities may be correct, unless further information is supplied.

    See DstTzInfo.normalize() for more info
    aNonExistentTimeErroruException raised when attempting to create a wallclock time that
    cannot exist.

    At the start of a DST transition period, the wallclock time jumps forward.
    The instants jumped over never occur.
    upytz\exceptions.pyu<module pytz.exceptions>u.pytz.lazyWadataa_fill_lockaacquirea_fillareleaseaupperakeysTOlistla__prepare__aLazyLista__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upytz.lazya__module__uLazyList.__new__.<locals>.LazyLista__qualname__a__orig_bases__alazyuLazyList.__new__.<locals>.lazya_propsa_lazyuLazyList.__new__.<locals>.lazy.<locals>._lazyafill_iteraextendapopaclsadelattranameaselfTOsetaLazySetuLazySet.__new__.<locals>.LazySetuLazySet.__new__.<locals>.lazyuLazySet.__new__.<locals>.lazy.<locals>._lazyaadda__doc__a__file__a__spec__aoriginahas_locationa__cached__athreadingTaRLockaRLockucollections.abcTaMappingaMappingaDictMixinaUserDictTaDictMixinacollectionsaLazyDictuDictionary populated on first use.uLazyDict.__getitem__a__contains__uLazyDict.__contains__a__iter__uLazyDict.__iter__a__len__uLazyDict.__len__uLazyDict.keysuList populated on first use.L&a__str__a__repr__a__unicode__a__hash__a__sizeof__a__cmp__a__lt__a__le__a__eq__a__ne__a__gt__a__ge__aappendacountaindexaextendainsertapoparemoveareverseasorta__add__a__radd__a__iadd__a__mul__a__rmul__a__imul__a__contains__a__len__a__nonzero__a__getitem__a__setitem__a__delitem__a__iter__a__reversed__a__getslice__a__setslice__a__delslice__Tna__new__uLazyList.__new__uSet populated on first use.T0a__str__a__repr__a__unicode__a__hash__a__sizeof__a__cmp__a__lt__a__le__a__eq__a__ne__a__gt__a__ge__a__contains__a__len__a__nonzero__a__getitem__a__setitem__a__delitem__a__iter__a__sub__a__and__a__xor__a__or__a__rsub__a__rand__a__rxor__a__ror__a__isub__a__iand__a__ixor__a__ior__aaddaclearacopyadifferenceadifference_updateadiscardaintersectionaintersection_updateaisdisjointaissubsetaissupersetapoparemoveasymmetric_differenceasymmetric_difference_updateaunionaupdateuLazySet.__new__upytz\lazy.pyu<module pytz.lazy>Ta__class__TaselfakeyTaselfTaclsafill_iteraLazyListalazyanameanew_listTaclsafill_iteraLazySetalazyanameanew_setTaselfaargsakwwiamethod_nameafill_iteraclsaLazySetanameTaLazySetaclsafill_iteranameTaselfaargsakwamethod_nameafill_iteraclsaLazyListanameTaLazyListaclsafill_iteranameTanamea_lazyTaLazyListaclsafill_iterTaLazySetaclsafill_iteru.pytz.tzfile&JaencodeTaASCIIuCast a string or byte string to an ASCII byte string.adecodeuCast a string or byte string to an ASCII string.acalcsizeTu>4s c 15x 6launpacku>4s c 15x 6lareadutoo many values to unpack (expected 8)a_byte_stringTaTZifuGot magic %su>%(timecnt)dl %(timecnt)dB %(ttinfo)s %(charcnt)dsatimecntattinfoalBBacharcntlllamemorized_datetimellwiatznamesatznames_rawafinda_NULLa_std_stringaappendatzname_offsetaStaticTzInfoazonea_utcoffsetamemorized_timedeltaa_tznameupytz.tzfileadatetimeaminatransitionsainsertalindexesaprev_infl0*ll<adstatransition_infoamemorized_ttinfoaDstTzInfoa_utc_transition_timesa_transition_infou
$Id: tzfile.py,v 1.8 2004/06/03 00:15:24 zenzen Exp $
a__doc__a__file__a__spec__aoriginahas_locationa__cached__TadatetimeastructTaunpackacalcsizeupytz.tzinfoTaStaticTzInfoaDstTzInfoamemorized_ttinfoTamemorized_datetimeamemorized_timedeltaTwabuild_tzinfoupytz\tzfile.pyu<module pytz.tzfile>TwsT!azoneafpahead_fmtahead_sizeamagicaformatattisgmtcntattisstdcntaleapcntatimecntatypecntacharcntadata_fmtadata_sizeadataatransitionsalindexesattinfo_rawatznames_rawattinfoatznameswiatzname_offsetanulaclsatransition_infoainfautcoffsetadstwjaprev_infastdinfatznameu.pytz.tzinfon'a_timedelta_cacheatimedeltaTasecondsuCreate only one instance of each distinct timedeltaa_datetime_cachea_epochuCreate only one instance of each distinct datetimea_ttinfo_cacheamemorized_timedeltallluCreate only one instance of each distinct tupleasecondsadaysll<uConvert a timedelta to secondsazoneatzinfoufromutc: dt.tzinfo is not selfa_utcoffsetareplaceTatzinfouSee datetime.tzinfo.fromutcuSee datetime.tzinfo.utcoffset

        is_dst is ignored for StaticTzInfo, and exists only to
        retain compatibility with DstTzInfo.
        a_notimeuSee datetime.tzinfo.dst

        is_dst is ignored for StaticTzInfo, and exists only to
        retain compatibility with DstTzInfo.
        a_tznameuSee datetime.tzinfo.tzname

        is_dst is ignored for StaticTzInfo, and exists only to
        retain compatibility with DstTzInfo.
        uNot naive datetime (tzinfo is already set)uConvert naive time to local timeuNaive time - no tzinfo setaastimezoneuCorrect the timezone information on the given datetime.

        This is normally a no-op, as StaticTzInfo timezones never have
        ambiguous cases to correct:

        >>> from pytz import timezone
        >>> gmt = timezone('GMT')
        >>> isinstance(gmt, StaticTzInfo)
        True
        >>> dt = datetime(2011, 5, 8, 1, 2, 3, tzinfo=gmt)
        >>> gmt.normalize(dt) is dt
        True

        The supported method of converting between timezones is to use
        datetime.astimezone(). Currently normalize() also works:

        >>> la = timezone('America/Los_Angeles')
        >>> dt = la.localize(datetime(2011, 5, 7, 1, 2, 3))
        >>> fmt = '%Y-%m-%d %H:%M:%S %Z (%z)'
        >>> gmt.normalize(dt).strftime(fmt)
        '2011-05-07 08:02:03 GMT (+0000)'
        u<StaticTzInfo %r>apytza_pa_tzinfosutoo many values to unpack (expected 3)a_dsta_transition_info:lnnaselfTnamaxabisect_righta_utc_transition_timesafromutcuCorrect the timezone information on the given datetime

        If date arithmetic crosses DST boundaries, the tzinfo
        is not magically adjusted. This method normalizes the
        tzinfo to the correct one.

        To test, first we need to do some setup

        >>> from pytz import timezone
        >>> utc = timezone('UTC')
        >>> eastern = timezone('US/Eastern')
        >>> fmt = '%Y-%m-%d %H:%M:%S %Z (%z)'

        We next create a datetime right on an end-of-DST transition point,
        the instant when the wallclocks are wound back one hour.

        >>> utc_dt = datetime(2002, 10, 27, 6, 0, 0, tzinfo=utc)
        >>> loc_dt = utc_dt.astimezone(eastern)
        >>> loc_dt.strftime(fmt)
        '2002-10-27 01:00:00 EST (-0500)'

        Now, if we subtract a few minutes from it, note that the timezone
        information has not changed.

        >>> before = loc_dt - timedelta(minutes=10)
        >>> before.strftime(fmt)
        '2002-10-27 00:50:00 EST (-0500)'

        But we can fix that by calling the normalize method

        >>> before = eastern.normalize(before)
        >>> before.strftime(fmt)
        '2002-10-27 01:50:00 EDT (-0400)'

        The supported method of converting between timezones is to use
        datetime.astimezone(). Currently, normalize() also works:

        >>> th = timezone('Asia/Bangkok')
        >>> am = timezone('Europe/Amsterdam')
        >>> dt = th.localize(datetime(2011, 5, 7, 1, 2, 3))
        >>> fmt = '%Y-%m-%d %H:%M:%S %Z (%z)'
        >>> am.normalize(dt).strftime(fmt)
        '2011-05-06 20:02:03 CEST (+0200)'
        asetTlTadaysTladtanormalizeapossible_loc_dtaaddapopaNonExistentTimeErroralocalizeTlTahoursDais_dsttDais_dstFaAmbiguousTimeErrorafiltered_possible_loc_dtadatesOminOmaxuConvert naive time to local time.

        This method should be used to construct localtimes, rather
        than passing a tzinfo argument to a datetime constructor.

        is_dst is used to determine the correct timezone in the ambigous
        period at the end of daylight saving time.

        >>> from pytz import timezone
        >>> fmt = '%Y-%m-%d %H:%M:%S %Z (%z)'
        >>> amdam = timezone('Europe/Amsterdam')
        >>> dt  = datetime(2004, 10, 31, 2, 0, 0)
        >>> loc_dt1 = amdam.localize(dt, is_dst=True)
        >>> loc_dt2 = amdam.localize(dt, is_dst=False)
        >>> loc_dt1.strftime(fmt)
        '2004-10-31 02:00:00 CEST (+0200)'
        >>> loc_dt2.strftime(fmt)
        '2004-10-31 02:00:00 CET (+0100)'
        >>> str(loc_dt2 - loc_dt1)
        '1:00:00'

        Use is_dst=None to raise an AmbiguousTimeError for ambiguous
        times at the end of daylight saving time

        >>> try:
        ...     loc_dt1 = amdam.localize(dt, is_dst=None)
        ... except AmbiguousTimeError:
        ...     print('Ambiguous')
        Ambiguous

        is_dst defaults to False

        >>> amdam.localize(dt) == amdam.localize(dt, False)
        True

        is_dst is also used to determine the correct timezone in the
        wallclock times jumped over at the start of daylight saving time.

        >>> pacific = timezone('US/Pacific')
        >>> dt = datetime(2008, 3, 9, 2, 0, 0)
        >>> ploc_dt1 = pacific.localize(dt, is_dst=True)
        >>> ploc_dt2 = pacific.localize(dt, is_dst=False)
        >>> ploc_dt1.strftime(fmt)
        '2008-03-09 02:00:00 PDT (-0700)'
        >>> ploc_dt2.strftime(fmt)
        '2008-03-09 02:00:00 PST (-0800)'
        >>> str(ploc_dt2 - ploc_dt1)
        '1:00:00'

        Use is_dst=None to raise a NonExistentTimeError for these skipped
        times.

        >>> try:
        ...     loc_dt1 = pacific.localize(dt, is_dst=None)
        ... except NonExistentTimeError:
        ...     print('Non-existent')
        Non-existent
        uSee datetime.tzinfo.utcoffset

        The is_dst parameter may be used to remove ambiguity during DST
        transitions.

        >>> from pytz import timezone
        >>> tz = timezone('America/St_Johns')
        >>> ambiguous = datetime(2009, 10, 31, 23, 30)

        >>> str(tz.utcoffset(ambiguous, is_dst=False))
        '-1 day, 20:30:00'

        >>> str(tz.utcoffset(ambiguous, is_dst=True))
        '-1 day, 21:30:00'

        >>> try:
        ...     tz.utcoffset(ambiguous)
        ... except AmbiguousTimeError:
        ...     print('Ambiguous')
        Ambiguous

        uSee datetime.tzinfo.dst

        The is_dst parameter may be used to remove ambiguity during DST
        transitions.

        >>> from pytz import timezone
        >>> tz = timezone('America/St_Johns')

        >>> normal = datetime(2009, 9, 1)

        >>> str(tz.dst(normal))
        '1:00:00'
        >>> str(tz.dst(normal, is_dst=False))
        '1:00:00'
        >>> str(tz.dst(normal, is_dst=True))
        '1:00:00'

        >>> ambiguous = datetime(2009, 10, 31, 23, 30)

        >>> str(tz.dst(ambiguous, is_dst=False))
        '0:00:00'
        >>> str(tz.dst(ambiguous, is_dst=True))
        '1:00:00'
        >>> try:
        ...     tz.dst(ambiguous)
        ... except AmbiguousTimeError:
        ...     print('Ambiguous')
        Ambiguous

        uSee datetime.tzinfo.tzname

        The is_dst parameter may be used to remove ambiguity during DST
        transitions.

        >>> from pytz import timezone
        >>> tz = timezone('America/St_Johns')

        >>> normal = datetime(2009, 9, 1)

        >>> tz.tzname(normal)
        'NDT'
        >>> tz.tzname(normal, is_dst=False)
        'NDT'
        >>> tz.tzname(normal, is_dst=True)
        'NDT'

        >>> ambiguous = datetime(2009, 10, 31, 23, 30)

        >>> tz.tzname(ambiguous, is_dst=False)
        'NST'
        >>> tz.tzname(ambiguous, is_dst=True)
        'NDT'
        >>> try:
        ...     tz.tzname(ambiguous)
        ... except AmbiguousTimeError:
        ...     print('Ambiguous')
        Ambiguous
        aDSTaSTDu<DstTzInfo %r %s+%s %s>u<DstTzInfo %r %s%s %s>a_to_secondsatimezoneavaluesuFactory function for unpickling pytz tzinfo instances.

    This is shared for both StaticTzInfo and DstTzInfo instances, because
    database changes could cause a zones implementation to switch between
    these two base classes and we can't break pickles on a pytz version
    upgrade.
    uBase classes and helpers for building zone specific tzinfo classesa__doc__a__file__a__spec__aoriginahas_locationa__cached__adatetimeTadatetimeatimedeltaatzinfoabisectTabisect_rightasetsTaSetaSetupytz.exceptionsTaAmbiguousTimeErroraNonExistentTimeErrora__all__Tllplpamemorized_datetimeamemorized_ttinfoTla__prepare__aBaseTzInfoa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upytz.tzinfoa__module__a__qualname__a__str__uBaseTzInfo.__str__a__orig_bases__aStaticTzInfouA timezone that has a constant offset from UTC

    These timezones are rare, as most locations have changed their
    offset at some point in their history
    uStaticTzInfo.fromutcautcoffsetuStaticTzInfo.utcoffsetadstuStaticTzInfo.dstatznameuStaticTzInfo.tznameTFuStaticTzInfo.localizeuStaticTzInfo.normalizea__repr__uStaticTzInfo.__repr__a__reduce__uStaticTzInfo.__reduce__aDstTzInfouA timezone that has a variable offset from UTC

    The offset might change if daylight saving time comes into effect,
    or at a point in history when the region decides to change their
    timezone definition.
    Tnna__init__uDstTzInfo.__init__uDstTzInfo.fromutcuDstTzInfo.normalizeuDstTzInfo.localizeuDstTzInfo.utcoffsetuDstTzInfo.dstuDstTzInfo.tznameuDstTzInfo.__repr__uDstTzInfo.__reduce__Tnnnaunpicklerupytz\tzinfo.pyu<module pytz.tzinfo>Ta__class__Taselfa_infa_tzinfosainfTaselfTaselfadstTatdTaselfadtais_dstTaselfadtTaselfadtaidxainfT
aselfadtais_dstapossible_loc_dtadeltaaloc_dtaidxainfatzinfoafiltered_possible_loc_dtadatesalocal_dtautc_timeTasecondsadtTasecondsadeltaTaargsattinfoTaselfadtaoffsetTazoneautcoffsetadstoffsetatznameatzalocalized_tzainfu.pywin/a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_pywinu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__lais_platform_unicodeambcsadefault_platform_encodinguutf-8adefault_scintilla_encodingupywin\__init__.pyu<module pywin>u.pywin.dialogsa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pywinu\not_existingadialogsTaNUITKA_PACKAGE_pywin_dialogsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__upywin\dialogs\__init__.pyu<module pywin.dialogs>u.pywin.dialogs.listadialogaDialoga__init__a_maketemplateaHookMessageaon_sizeawin32conaWM_SIZEaHookNotifyaOnListItemChangeacommctrlaLVN_ITEMCHANGEDaHookCommandaOnListClickawin32uiaIDC_LIST1aitemsaWS_DLGFRAMEaWS_SYSMENUaWS_VISIBLEaWS_CHILDaLVS_ALIGNLEFTaLVS_REPORTTlplpTluMS Sans SerifaSysListView32laOKaIDOKTl
ll2laBS_DEFPUSHBUTTONaCancelaIDCANCELTlpl2laGetWindowRectlll
aLVCFMT_LEFTaItemaitemsControlaInsertColumnaselfaInsertItemaindexlaNM_DBLCLKaEndDialogutoo many values to unpack (expected 2)utoo many values to unpack (expected 3)utoo many values to unpack (expected 7)aLVIS_SELECTEDaselecteditemabutOKaEnableWindowTlaerroraOnInitDialogaGetDlgItemabutCancelaFillListaLayoutControlslTlaMoveWindowlll<lawin32apiaLOWORDaHIWORDaListDialogacolHeadingsaGetSystemMetricsaSM_CXVSCROLLawidthanumColsaSetItemTextaDoModalaListsDialogaprintaSelectFromListsuMulti-ListTw1lwaTw2lwbTw3lwcuCol 1uCol 2a__doc__a__file__a__spec__aoriginahas_locationa__cached__upywin.mfcTadialoga__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upywin.dialogs.lista__module__a__qualname__uListDialog.__init__uListDialog._maketemplateuListDialog.FillListuListDialog.OnListClickuListDialog.OnListItemChangeuListDialog.OnInitDialoguListDialog.LayoutControlsuListDialog.on_sizea__orig_bases__uListsDialog.__init__uListsDialog.FillListaSelectFromListatestupywin\dialogs\list.pyu<module pywin.dialogs.list>T
aselfaindexasizeawidthanumColsacolaitemDetailsaitemsaitemnoaitemTaselfasizeawidthaitemDetailsaindexaitemTaselfwwwhTa__class__TaselfarcasizeTaselfaidacodeTaselfastdaextraahwndFromaidFromacodeaitemNotifyasubanewStateaoldStateachangeapointalparamaoldSelanewSelTatitlealstadlgTatitlealistsaheadingsadlgTaselfatitlealistTaselfatitlealistacolHeadingsTaselfatitleastylealsabsTaselfaparamsalparamwwwhu.pywin.dialogs.status awin32conaDS_MODALFRAMEaWS_POPUPaWS_VISIBLEaWS_CAPTIONaWS_SYSMENUaDS_SETFONTaWS_CHILDTlpll(TluMS Sans SerifaWS_TABSTOPllTlpllaSS_LEFTainitMsgaMakeProgressDlgTemplateadialogaDialoga__init__amaxticksatickincrapbaraOnInitDialogaGetDlgItemTlastaticawin32uiaCreateProgressCtrlaCreateWindowTl
ll6l,laSetRangelaSetStepaprogresslapincraEndDialogTlaStepItaSetWindowTextaSetDlgItemTextaSetPosatitleamsgawin32apiaGetCurrentThreadIdathreadidaCStatusProgressDialogaHookMessageaOnTitleaMYWM_SETTITLEaOnMsgaMYWM_SETMSGaOnTickaMYWM_TICKaOnMaxTicksaMYWM_SETMAXTICKSaOnSetaMYWM_SETaPostMessageaerroraSetTitleaSetTextaTickaSetMaxTicksaSetaposamaxTuNo thread!aPostThreadMessageaWM_QUITa_SendaWinThreadathreadingaEventacreatedEventaCThreadedStatusProcessDialogaSetForegroundWindowasetaInitInstanceaProgressThreadaCreateThreadatimel
wtaisSetaPumpWaitingMessagesasleepTf?aStatusProgressDialogTuA DemouDoing something...;lldll2wdTuGetting there...lZTuNearly done...aSleepTlaCloseaThreadedStatusProgressDialogTuA threaded demouDoing somethinga__doc__a__file__a__spec__aoriginahas_locationa__cached__upywin.mfcTadialogupywin.mfc.threadTaWinThreadTua__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upywin.dialogs.statusa__module__a__qualname__TuldluCStatusProgressDialog.__init__uCStatusProgressDialog.OnInitDialoguCStatusProgressDialog.CloseuCStatusProgressDialog.SetMaxTicksuCStatusProgressDialog.TickuCStatusProgressDialog.SetTitleuCStatusProgressDialog.SetTextTnuCStatusProgressDialog.Seta__orig_bases__aWM_USERlll
luCThreadedStatusProcessDialog.__init__uCThreadedStatusProcessDialog.OnInitDialoguCThreadedStatusProcessDialog._SenduCThreadedStatusProcessDialog.OnTitleuCThreadedStatusProcessDialog.OnMsguCThreadedStatusProcessDialog.OnTickuCThreadedStatusProcessDialog.OnMaxTicksuCThreadedStatusProcessDialog.OnSetuCThreadedStatusProcessDialog.CloseuCThreadedStatusProcessDialog.SetMaxTicksuCThreadedStatusProcessDialog.SetTitleuCThreadedStatusProcessDialog.SetTextuCThreadedStatusProcessDialog.TickuCThreadedStatusProcessDialog.SetuProgressThread.__init__uProgressThread.InitInstanceaExitInstanceuProgressThread.ExitInstanceTuldnTuldademoathread_demoupywin\dialogs\status.pyu<module pywin.dialogs.status>Ta__class__TaselfTacaptionastaticTextastyleacswwwhadlgwsTaselfarcTaselfamsgTaselfaposamaxTaselfamaxticksTaselfatextTaselfatitleTatitleamsgamaxticksaparentwdTatitleamsgamaxtickswtaend_timeTaselfatitleamsgamaxticksatickincrTaselfatitleamsgamaxticksatickincratemplTwdawin32apiwiu.pywin.mfca__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_pywinu\not_existingamfcTaNUITKA_PACKAGE_pywin_mfcu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__upywin\mfc\__init__.pyu<module pywin.mfc>u.pywin.mfc.dialogFastrawin32uiaLoadLibraryaGetFileNameuDLL parameter must be None, a filename or a dll objectugiven a 'dll' (maybe a dll, filename, etc), return a DLL objectadllFromDlladllalistaCreateDialogIndirectaCreateDialogawindowaWnda__init__aHookCommandsabHaveInituid is the resource ID, or a template
        dllid may be None, a dll object, or a string with a dll namea_obj_adataaOnAttachedObjectDeathaOnOKaOnCancellaUpdateDataTladatalistaappendakeysaitemsavaluesudlgID parameter must be an integer resource IDaCreatePrintDialogapInfoaGetFlagsaPD_PRINTTOFILElatoFileaGetDirectadirectaGetPreviewapreviewaGetContinuePrintingacontinuePrintingaGetCurPageacurPageaGetNumPreviewPagesanumPreviewPagesaGetUserDataauserDataaGetDrawadrawaGetPageDescapageDescaGetMinPageaminPageaGetMaxPageamaxPageaGetOffsetPageaoffsetPageaGetFromPageafromPageaGetToPageatoPageacopiesuadeviceNameadriverNameaprintAllaprintCollateaprintRangeaprintSelectionaCreatePrinterDCaOnInitDialogaGetCopiesaGetDeviceNameaGetDriverNameaPrintAllaPrintCollateaPrintRangeaPrintSelectionuDoModal has finished. Can now access the users choicesaSetResourceaCreatePropertyPageIndirectaCreatePropertyPageaoldResuid is the resource ID
        dllid may be None, a dll object, or a string with a dll nameaCreatePropertySheetasheetaAddPageuInitialize a property sheet.  pageList is a list of ID'saDoModalTETypeErrorEKeyErroraselfaDoAddSinglePageaintuPage may be page, or int ID. Assumes DLL setupaGetMainFrameaGetWindowTextaDialoga__prepare__aDlgSimpleInputa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upywin.mfc.dialoga__module__uGetSimpleInput.<locals>.DlgSimpleInputa__qualname__uGetSimpleInput.<locals>.DlgSimpleInput.__init__uGetSimpleInput.<locals>.DlgSimpleInput.OnInitDialoga__orig_bases__awin32conaIDOKaresultudisplays a dialog, and returns a string, or None if cancelled.
    args prompt, defValue='', title=main frames titleatitleaDlgBaseClassaIDD_SIMPLE_INPUTaAddDDXaIDC_EDIT1aIDC_PROMPT1apromptaSetWindowTextu Base class for Dialogs.  Also contains a few useful utility functions
a__doc__a__file__a__spec__aoriginahas_locationa__cached__upywin.mfcTawindowuBase class for a dialogTnuDialog.__init__uDialog.HookCommandsuDialog.OnAttachedObjectDeathuDialog.OnOKuDialog.OnCanceluDialog.OnInitDialogaOnDestroyuDialog.OnDestroyuDialog.AddDDXa__bool__uDialog.__bool__a__len__uDialog.__len__uDialog.__getitem__a__setitem__uDialog.__setitem__uDialog.keysuDialog.itemsuDialog.valuesahas_keyuDialog.has_keyaPrintDialoguBase class for a print dialogaPD_ALLPAGESaPD_USEDEVMODECOPIESaPD_NOPAGENUMSaPD_HIDEPRINTTOFILEaPD_NOSELECTIONuPrintDialog.__init__uPrintDialog.OnInitDialoguPrintDialog.OnCanceluPrintDialog.OnOKaPropertyPageuBase class for a Property PageTnluPropertyPage.__init__aPropertySheetTnnuPropertySheet.__init__uPropertySheet.OnInitDialoguPropertySheet.DoModaluPropertySheet.AddPageuPropertySheet.DoAddSinglePageTunaGetSimpleInputupywin\mfc\dialog.pyu<module pywin.mfc.dialog>TaselfaargsTaselfapagesaoldResaisSeqapageTa__class__TaselfapageTaselfaoldResarcTapromptadefValueatitleaDlgBaseClassaDlgSimpleInputadlgTaselfTaselfamsgTaselfaDlgBaseClassTaDlgBaseClassTaselfapInfoaflagsTaselfakeyTaselfacaptionadllapageListTaselfaidadllidacaptionaoldResadlgTaselfaidadllidadlgTaselfapInfoadlgIDaprintSetupOnlyaflagsaparentadllidadlgTaselfapromptadefValueatitleaDlgBaseClassTaselfakeyaitemTadllid.pywin.mfc.object>a_obj_aAttachObjectacloseastartswithTa__lw_lawin32uiaerrorTuThe MFC object has died.TnaObjecta__init__laoldhandlersaappendaselfaHookNotifyahandleraHookCommandaHookCommandUpdatea__doc__a__file__a__spec__aoriginahas_locationa__cached__upywin.mfc.objecta__module__a__qualname__uObject.__init__a__del__uObject.__del__a__getattr__uObject.__getattr__aOnAttachedObjectDeathuObject.OnAttachedObjectDeathuObject.closeTa__prepare__aCmdTargeta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCmdTarget.__init__aHookNotifyRangeuCmdTarget.HookNotifyRangeaHookCommandRangeuCmdTarget.HookCommandRangeaHookCommandUpdateRangeuCmdTarget.HookCommandUpdateRangea__orig_bases__upywin\mfc\object.pyu<module pywin.mfc.object>Ta__class__TaselfahandlerafirstIDalastIDaoldhandlerswiTaselfTaselfaattrwoTaselfainitObju.pywin.mfc.thread(awin32uiaCreateThreadaobjectaCmdTargeta__init__aGetAppaWinThreada__doc__a__file__a__spec__aoriginahas_locationa__cached__luTaobjectla__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upywin.mfc.threada__module__a__qualname__TnuWinThread.__init__aInitInstanceuWinThread.InitInstanceaExitInstanceuWinThread.ExitInstancea__orig_bases__aWinAppuWinApp.__init__upywin\mfc\thread.pyu<module pywin.mfc.thread>TaselfTa__class__TaselfainitAppTaselfainitObj.pywin.mfc.window4aobjectaCmdTargeta__init__a_obj_aHookMessageaOnDestroyawin32conaWM_DESTROYaWndawin32uiaCreateMDIChildaFrameWndatemplateacontextaCreateViewaCreateMDIFramea__doc__a__file__a__spec__aoriginahas_locationa__cached__luTaobjectla__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>upywin.mfc.windowa__module__a__qualname__TnuWnd.__init__uWnd.OnDestroya__orig_bases__uFrameWnd.__init__aMDIChildWnduMDIChildWnd.__init__aOnCreateClientuMDIChildWnd.OnCreateClientaMDIFrameWnduMDIFrameWnd.__init__upywin\mfc\window.pyu<module pywin.mfc.window>Ta__class__TaselfacpacontextTaselfamsgTaselfainitobjTaselfawnd.pywin32_system32a_NamespacePathlapywin32_system32apathadirnameaenvironagetTaNUITKA_PACKAGE_pywin32_system32u\not_existinga__path__usite-packages\pywin32_system32u.pywintypes2u_d.pydaimportlibamachineryaEXTENSION_SUFFIXESa_duu%s%d%d%s.dllll
asysafrozenapathaosaisfileadirnameajoinalookafilenameuModule '%s' isn't in frozen sys.path %sa_win32sysloaderlaGetModuleFilenameaLoadModuleaprefixa__file__apywin32_system32a__path__uNo system module '%s' (%s)amodulesaExtensionFileLoaderafoundaModuleSpecTanamealoaderaoriginautilamodule_from_specaloaderaexec_moduleaupdatea__doc__a__spec__aoriginahas_locationa__cached__uimportlib.machineryuimportlib.utila__import_pywin32_system_module__apywintypesupywintypes.pyu<module pywintypes>Tamodnameaglobsasuffixafilenamealookafounda_win32sysloaderapywin32_system32apathamaybeaold_modaloaderaspecamod.requests.__version__a__doc__a__file__a__spec__aoriginahas_locationa__cached__arequestsa__title__uPython HTTP for Humans.a__description__uhttps://requests.readthedocs.ioa__url__u2.31.0a__version__l1a__build__uKenneth Reitza__author__ume@kennethreitz.orga__author_email__uApache 2.0a__license__uCopyright Kenneth Reitza__copyright__u✨ 🍰 ✨a__cake__urequests\__version__.pyu<module requests.__version__>u.requests._internal_utilsX%abuiltin_stradecodeuGiven a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
    aencodeTaasciiuDetermine if unicode string only contains ASCII characters.

    :param str u_string: unicode string to check. Must be unicode
        and not Python 2 `str`.
    :rtype: bool
    u
requests._internal_utils
~~~~~~~~~~~~~~

Provides utility functions that are consumed internally by Requests
which depend on extremely few external helpers (such as compat)
a__doc__a__file__a__spec__aoriginahas_locationa__cached__arelacompatTabuiltin_strlacompileTc^[^:\s][^:\r\n]*$a_VALID_HEADER_NAME_RE_BYTETu^[^:\s][^:\r\n]*$a_VALID_HEADER_NAME_RE_STRTc^\S[^\r\n]*$|^$a_VALID_HEADER_VALUE_RE_BYTETu^\S[^\r\n]*$|^$a_VALID_HEADER_VALUE_RE_STRa_HEADER_VALIDATORS_STRa_HEADER_VALIDATORS_BYTEaHEADER_VALIDATORSato_native_stringaunicode_is_asciiurequests\_internal_utils.pyu<module requests._internal_utils>TastringaencodingaoutTau_stringu.requests.adapters.aInvalidSchemaTuMissing dependencies for SOCKS support.a__class__a__init__uSends PreparedRequest object. Returns Response object.

        :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
        :param stream: (optional) Whether to stream the request content.
        :param timeout: (optional) How long to wait for the server to send
            data before giving up, as a float, or a :ref:`(connect timeout,
            read timeout) <timeouts>` tuple.
        :type timeout: float or tuple
        :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use
        :param cert: (optional) Any user-provided SSL certificate to be trusted.
        :param proxies: (optional) The proxies dictionary to apply to the request.
        uCleans up adapter specific items.aDEFAULT_RETRIESaRetryTlFTareadamax_retriesafrom_intaselfaconfigaproxy_managera_pool_connectionsa_pool_maxsizea_pool_blockainit_poolmanagerTablocka__attrs__aitemsutoo many values to unpack (expected 2)aPoolManageranum_poolsamaxsizeablockapoolmanageruInitializes a urllib3 PoolManager.

        This method should not be called from user code, and is only
        exposed for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param connections: The number of urllib3 connection pools to cache.
        :param maxsize: The maximum number of connections to save in the pool.
        :param block: Block when no free connections are available.
        :param pool_kwargs: Extra keyword arguments used to initialize the Pool Manager.
        alowerastartswithTasocksaget_auth_from_urlaSOCKSProxyManagerausernameapasswordaproxy_headersaproxy_from_urluReturn urllib3 ProxyManager for the given proxy.

        This method should not be called from user code, and is only
        exposed for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param proxy: The proxy to return a urllib3 ProxyManager for.
        :param proxy_kwargs: Extra keyword arguments used to configure the Proxy Manager.
        :returns: ProxyManager
        :rtype: urllib3.ProxyManager
        Tahttpsaextract_zipped_pathsaDEFAULT_CA_BUNDLE_PATHaosapathaexistsuCould not find a suitable TLS CA certificate bundle, invalid path: acert_locuaCERT_REQUIREDacert_reqsaisdiraca_certsaca_cert_diraCERT_NONEabasestringlaconnacert_filelakey_fileuCould not find the TLS certificate file, invalid path: uCould not find the TLS key file, invalid path: uVerify a SSL certificate. This method should not be called from user
        code, and is only exposed for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param conn: The urllib3 connection object associated with the cert.
        :param url: The requested URL.
        :param verify: Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use
        :param cert: The SSL certificate to verify.
        aResponseastatusastatus_codeaCaseInsensitiveDictaheadersaget_encoding_from_headersaencodingarawareasonaurladecodeTuutf-8aextract_cookies_to_jaracookiesarequestaconnectionuBuilds a :class:`Response <requests.Response>` object from a urllib3
        response. This should not be called from user code, and is only exposed
        for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`

        :param req: The :class:`PreparedRequest <PreparedRequest>` used to generate the response.
        :param resp: The urllib3 response object.
        :rtype: requests.Response
        aselect_proxyaprepend_scheme_if_neededahttpaparse_urlahostaInvalidProxyURLTuPlease check proxy URL. It is malformed and could be missing the host.aproxy_manager_foraconnection_from_urlaurlparseageturluReturns a urllib3 connection for the given URL. This should not be
        called from user code, and is only exposed for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param url: The URL to connect to.
        :param proxies: (optional) A Requests-style dictionary of proxies used on this request.
        :rtype: urllib3.ConnectionPool
        aclearavaluesuDisposes of any internal state.

        Currently, this closes the PoolManager and any active ProxyManager,
        which closes any pooled connections.
        aschemeahttpsapath_urlaurldefragauthuObtain the url to use when making the final request.

        If the message is being sent through a HTTP proxy, the full URL has to
        be used. Otherwise, we should only use the path portion of the URL.

        This should not be called from user code, and is only exposed for use
        when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
        :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs.
        :rtype: str
        a_basic_auth_struProxy-AuthorizationuReturns a dictionary of the headers to add to any request sent
        through a proxy. This works with urllib3 magic to ensure that they are
        correctly sent to the proxy, rather than in a tunnelled request if
        CONNECT is being used.

        This should not be called from user code, and is only exposed for use
        when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param proxy: The url of the proxy being used for this request.
        :rtype: dict
        aget_connectionaLocationValueErroraInvalidURLTarequestacert_verifyarequest_urlaadd_headersTastreamatimeoutaverifyacertaproxiesabodyuContent-LengthaTimeoutSauceTaconnectareaduInvalid timeout u. Pass a (connect, read) timeout tuple, or a single float to set both timeouts to the same value.aurlopenamethodatimeoutTamethodaurlabodyaheadersaredirectaassert_same_hostapreload_contentadecode_contentaretriesatimeoutachunkedaProtocolErroraConnectionErroraMaxRetryErroraConnectTimeoutErroraNewConnectionErroraConnectTimeoutaResponseErroraRetryErrora_ProxyErroraProxyErrora_SSLErroraSSLErroraClosedPoolErrora_HTTPErroraReadTimeoutErroraReadTimeouta_InvalidHeaderaInvalidHeaderabuild_responseuSends PreparedRequest object. Returns Response object.

        :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
        :param stream: (optional) Whether to stream the request content.
        :param timeout: (optional) How long to wait for the server to send
            data before giving up, as a float, or a :ref:`(connect timeout,
            read timeout) <timeouts>` tuple.
        :type timeout: float or tuple or urllib3 Timeout object
        :param verify: (optional) Either a boolean, in which case it controls whether
            we verify the server's TLS certificate, or a string, in which case it
            must be a path to a CA bundle to use
        :param cert: (optional) Any user-provided SSL certificate to be trusted.
        :param proxies: (optional) The proxies dictionary to apply to the request.
        :rtype: requests.Response
        u
requests.adapters
~~~~~~~~~~~~~~~~~

This module contains the transport adapters that Requests uses to define
and maintain connections.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uos.pathasocketuurllib3.exceptionsTaClosedPoolErroraConnectTimeoutErrorTaHTTPErroraHTTPErrorTaInvalidHeaderTaLocationValueErroraMaxRetryErroraNewConnectionErroraProtocolErrorTaProxyErrorTaReadTimeoutErroraResponseErrorTaSSLErroruurllib3.poolmanagerTaPoolManageraproxy_from_urluurllib3.utilTaTimeoutaTimeoutTaparse_urluurllib3.util.retryTaRetryaauthTa_basic_auth_stracompatTabasestringaurlparseTaextract_cookies_to_jaraexceptionsT
aConnectionErroraConnectTimeoutaInvalidHeaderaInvalidProxyURLaInvalidSchemaaInvalidURLaProxyErroraReadTimeoutaRetryErroraSSLErroramodelsTaResponseastructuresTaCaseInsensitiveDictautilsTaDEFAULT_CA_BUNDLE_PATHaextract_zipped_pathsaget_auth_from_urlaget_encoding_from_headersaprepend_scheme_if_neededaselect_proxyaurldefragauthuurllib3.contrib.socksTaSOCKSProxyManageraDEFAULT_POOLBLOCKl
aDEFAULT_POOLSIZEaDEFAULT_POOL_TIMEOUTurequests.adaptersa__module__uThe Base Transport AdapteraBaseAdaptera__qualname__uBaseAdapter.__init__TFntnnasenduBaseAdapter.sendacloseuBaseAdapter.closeTa__prepare__aHTTPAdaptera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uThe built-in HTTP Adapter for urllib3.

    Provides a general-case interface for Requests sessions to contact HTTP and
    HTTPS urls by implementing the Transport Adapter interface. This class will
    usually be created by the :class:`Session <Session>` class under the
    covers.

    :param pool_connections: The number of urllib3 connection pools to cache.
    :param pool_maxsize: The maximum number of connections to save in the pool.
    :param max_retries: The maximum number of retries each connection
        should attempt. Note, this applies only to failed DNS lookups, socket
        connections and connection timeouts, never to requests where data has
        made it to the server. By default, Requests does not retry failed
        connections. If you need granular control over the conditions under
        which we retry a request, import urllib3's ``Retry`` class and pass
        that instead.
    :param pool_block: Whether the connection pool should block for connections.

    Usage::

      >>> import requests
      >>> s = requests.Session()
      >>> a = requests.adapters.HTTPAdapter(max_retries=3)
      >>> s.mount('http://', a)
    Lamax_retriesaconfiga_pool_connectionsa_pool_maxsizea_pool_blockuHTTPAdapter.__init__a__getstate__uHTTPAdapter.__getstate__a__setstate__uHTTPAdapter.__setstate__uHTTPAdapter.init_poolmanageruHTTPAdapter.proxy_manager_foruHTTPAdapter.cert_verifyuHTTPAdapter.build_responseTnuHTTPAdapter.get_connectionuHTTPAdapter.closeuHTTPAdapter.request_urluAdd any headers needed by the connection. As of v2.0 this does
        nothing by default, but is left for overriding by users that subclass
        the :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        This should not be called from user code, and is only exposed for use
        when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param request: The :class:`PreparedRequest <PreparedRequest>` to add headers to.
        :param kwargs: The keyword arguments from the call to send().
        uHTTPAdapter.add_headersuHTTPAdapter.proxy_headersuHTTPAdapter.senda__orig_bases__urequests\adapters.pyu<module requests.adapters>Ta__class__TaargsakwargsTaselfTaselfa__class__Taselfapool_connectionsapool_maxsizeamax_retriesapool_blocka__class__TaselfastateaattravalueTaselfarequestakwargsTaselfareqaresparesponseTaselfaconnaurlaverifyacertacert_locTaselfaproxyTaselfaurlaproxiesaproxyaproxy_urlaproxy_manageraconnaparsedTaselfaconnectionsamaxsizeablockapool_kwargsTaselfaproxyaheadersausernameapasswordTaselfaproxyaproxy_kwargsamanagerausernameapasswordaproxy_headersTaselfarequestaproxiesaproxyaschemeais_proxied_http_requestausing_socks_proxyaproxy_schemeaurlTaselfarequestastreamatimeoutaverifyacertaproxiesTaselfarequestastreamatimeoutaverifyacertaproxiesaconnweaurlachunkedaconnectareadarespaerr.requests.apid/asessionsaSessiona__enter__a__exit__arequestamethodaurlTnnnuConstructs and sends a :class:`Request <Request>`.

    :param method: method for the new :class:`Request` object: ``GET``, ``OPTIONS``, ``HEAD``, ``POST``, ``PUT``, ``PATCH``, or ``DELETE``.
    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary, list of tuples or bytes to send
        in the query string for the :class:`Request`.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.
    :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.
    :param files: (optional) Dictionary of ``'name': file-like-objects`` (or ``{'name': file-tuple}``) for multipart encoding upload.
        ``file-tuple`` can be a 2-tuple ``('filename', fileobj)``, 3-tuple ``('filename', fileobj, 'content_type')``
        or a 4-tuple ``('filename', fileobj, 'content_type', custom_headers)``, where ``'content-type'`` is a string
        defining the content type of the given file and ``custom_headers`` a dict-like object containing additional headers
        to add for the file.
    :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.
    :param timeout: (optional) How many seconds to wait for the server to send data
        before giving up, as a float, or a :ref:`(connect timeout, read
        timeout) <timeouts>` tuple.
    :type timeout: float or tuple
    :param allow_redirects: (optional) Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to ``True``.
    :type allow_redirects: bool
    :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.
    :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use. Defaults to ``True``.
    :param stream: (optional) if ``False``, the response content will be immediately downloaded.
    :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response

    Usage::

      >>> import requests
      >>> req = requests.request('GET', 'https://httpbin.org/get')
      >>> req
      <Response [200]>
    agetaparamsuSends a GET request.

    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary, list of tuples or bytes to send
        in the query string for the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    aoptionsuSends an OPTIONS request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    aallow_redirectsaheaduSends a HEAD request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes. If
        `allow_redirects` is not provided, it will be set to `False` (as
        opposed to the default :meth:`request` behavior).
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    apostadataajsonuSends a POST request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    aputuSends a PUT request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    apatchuSends a PATCH request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    adeleteuSends a DELETE request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    u
requests.api
~~~~~~~~~~~~

This module implements the Requests API.

:copyright: (c) 2012 by Kenneth Reitz.
:license: Apache2, see LICENSE for more details.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uTasessionsllTnTnnurequests\api.pyu<module requests.api>TaurlakwargsTaurlaparamsakwargsTaurladataakwargsTaurladataajsonakwargsTamethodaurlakwargsasession.requests.authabasestringawarningsawarnuNon-string usernames will no longer be supported in Requests 3.0.0. Please convert the object you've passed in ({!r}) to a string or bytes object in the near future to avoid problems.aDeprecationWarningTacategoryastruNon-string passwords will no longer be supported in Requests 3.0.0. Please convert the object you've passed in ({!r}) to a string or bytes object in the near future to avoid problems.aencodeTalatin1uBasic ato_native_stringab64encoded:astripuReturns a Basic Auth string.uAuth hooks must be callable.ausernameapassworda_basic_auth_straheadersaAuthorizationuProxy-Authorizationathreadingalocala_thread_localainitualast_noncelanonce_countachalaposanum_401_callsarealmanonceagetTaqopTaalgorithmTaopaqueaMD5aupperuMD5-SESSamd5_utf8uHTTPDigestAuth.build_digest_header.<locals>.md5_utf8aSHAasha_utf8uHTTPDigestAuth.build_digest_header.<locals>.sha_utf8uSHA-256asha256_utf8uHTTPDigestAuth.build_digest_header.<locals>.sha256_utf8uSHA-512asha512_utf8uHTTPDigestAuth.build_digest_header.<locals>.sha512_utf8u<lambda>uHTTPDigestAuth.build_digest_header.<locals>.<lambda>aurlparseapathw/aqueryw?w:lu08xTuutf-8atimeactimeaosaurandomTlahashlibasha1ahexdigest:nlnaauthasplitTw,u:auth:uusername="u", realm="u", nonce="u", uri="u", response="w"u, opaque="aalgorithmu, algorithm="aqopu, qop="auth", nc=u, cnonce="uDigest u
        :rtype: str
        amd5asha256asha512ahash_utf8ais_redirectuReset num_401_calls counter on redirects.astatus_codellarequestabodyaseekTuwww-authenticateuadigestalowerlareacompileaIGNORECASETudigest Taflagsaparse_dict_headerasubDacountlacontentacloseacopyaextract_cookies_to_jara_cookiesarawaprepare_cookiesabuild_digest_headeramethodaurlaconnectionasendahistoryaappendu
        Takes the given response and tries digest-auth, if needed.

        :rtype: requests.Response
        ainit_per_thread_statewratellaregister_hookaresponseahandle_401ahandle_redirectu
requests.auth
~~~~~~~~~~~~~

This module contains the authentication handlers for Requests.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__abase64Tab64encodea_internal_utilsTato_native_stringacompatTabasestringastraurlparseacookiesTaextract_cookies_to_jarautilsTaparse_dict_headeruapplication/x-www-form-urlencodedaCONTENT_TYPE_FORM_URLENCODEDumultipart/form-dataaCONTENT_TYPE_MULTI_PARTurequests.autha__module__uBase class that all auth implementations derive fromaAuthBasea__qualname__a__call__uAuthBase.__call__Ta__prepare__aHTTPBasicAutha__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uAttaches HTTP Basic Authentication to the given Request object.a__init__uHTTPBasicAuth.__init__a__eq__uHTTPBasicAuth.__eq__a__ne__uHTTPBasicAuth.__ne__uHTTPBasicAuth.__call__a__orig_bases__aHTTPProxyAuthuAttaches HTTP Proxy Authentication to a given Request object.uHTTPProxyAuth.__call__aHTTPDigestAuthuAttaches HTTP Digest Authentication to the given Request object.uHTTPDigestAuth.__init__uHTTPDigestAuth.init_per_thread_stateuHTTPDigestAuth.build_digest_headeruHTTPDigestAuth.handle_redirectuHTTPDigestAuth.handle_401uHTTPDigestAuth.__call__uHTTPDigestAuth.__eq__uHTTPDigestAuth.__ne__urequests\auth.pyTwswdahash_utf8Tahash_utf8u<module requests.auth>Ta__class__TaselfwrTaselfaotherTaselfausernameapasswordTausernameapasswordaauthstrTaselfamethodaurlarealmanonceaqopaalgorithmaopaqueahash_utf8a_algorithmamd5_utf8asha_utf8asha256_utf8asha512_utf8aKDaentdigap_parsedapathaA1aA2aHA1aHA2ancvaluewsacnoncearespdiganoncebitabaseTaselfwrakwargsas_authapataprepa_rTaselfwrakwargsTaselfTwx.requests.certsu
requests.certs
~~~~~~~~~~~~~~

This module returns the preferred default CA certificate bundle. There is
only one — the one from the certifi package.

If you are packaging Requests, e.g., for a Linux distribution or a managed
environment, you can change the definition of where() to return a separately
packaged CA bundle.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__acertifiTawherelawhereurequests\certs.pyu<module requests.certs>u.requests.compatCu
requests.compat
~~~~~~~~~~~~~~~

This module previously handled import compatibility issues
between Python 2 and Python 3. It remains for backwards
compatibility until the next major version.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__achardetlacharset_normalizerasysa_verlais_py2lais_py3ahas_simplejsonasimplejsonajsonTaJSONDecodeErroraJSONDecodeErroracollectionsTaOrderedDictaOrderedDictucollections.abcTaCallableaMappingaMutableMappingaCallableaMappingaMutableMappingahttpTacookiejaracookiejaracookielibuhttp.cookiesTaMorselaMorselaStringIOuurllib.parseT
aquoteaquote_plusaunquoteaunquote_plusaurldefragaurlencodeaurljoinaurlparseaurlsplitaurlunparseaquoteaquote_plusaunquoteaunquote_plusaurldefragaurlencodeaurljoinaurlparseaurlsplitaurlunparseuurllib.requestTagetproxiesagetproxies_environmentaparse_http_listaproxy_bypassaproxy_bypass_environmentagetproxiesagetproxies_environmentaparse_http_listaproxy_bypassaproxy_bypass_environmentastrabuiltin_strabytesabasestringTOintOfloatanumeric_typesTOintainteger_typesurequests\compat.pyu<module requests.compat>u.requests1wasplitTw.adevaappendTw0utoo many values to unpack (expected 3)ll:nlnTlllTllpTllpTllpuYou need either charset_normalizer or chardet installedlluOld version of cryptography ({}) may cause slowdown.awarningsawarnaRequestsDependencyWarningu
Requests HTTP Library
~~~~~~~~~~~~~~~~~~~~~

Requests is an HTTP library, written in Python, for human beings.
Basic GET usage:

   >>> import requests
   >>> r = requests.get('https://www.python.org')
   >>> r.status_code
   200
   >>> b'Python is a programming language' in r.content
   True

... or POST:

   >>> payload = dict(key1='value1', key2='value2')
   >>> r = requests.post('https://httpbin.org/post', data=payload)
   >>> print(r.text)
   {
     ...
     "form": {
       "key1": "value1",
       "key2": "value2"
     },
     ...
   }

The other HTTP methods are supported - see `requests.api`. Full documentation
is at <https://requests.readthedocs.io>.

:copyright: (c) 2017 by Kenneth Reitz.
:license: Apache 2.0, see LICENSE for more details.
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_requestsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__laurllib3aexceptionsTaRequestsDependencyWarningacharset_normalizerTa__version__a__version__acharset_normalizer_versionachardetachardet_versionacheck_compatibilitya_check_cryptographyTEAssertionErrorEValueErroruurllib3 ({}) or chardet ({})/charset_normalizer ({}) doesn't match a supported version!asslaHAS_SNIuurllib3.contribTapyopensslapyopensslainject_into_urllib3acryptographyacryptography_versionuurllib3.exceptionsTaDependencyWarningaDependencyWarningasimplefilteraignorealoggingTaNullHandleraNullHandleruTapackagesautilsapackagesautilsT
a__author__a__author_email__a__build__a__cake__a__copyright__a__description__a__license__a__title__a__url__a__version__a__author__a__author_email__a__build__a__cake__a__copyright__a__description__a__license__a__title__a__url__aapiTadeleteagetaheadaoptionsapatchapostaputarequestadeleteaheadaoptionsapatchapostaputarequestT
aConnectionErroraConnectTimeoutaFileModeWarningaHTTPErroraJSONDecodeErroraReadTimeoutaRequestExceptionaTimeoutaTooManyRedirectsaURLRequiredaConnectionErroraConnectTimeoutaFileModeWarningaHTTPErroraJSONDecodeErroraReadTimeoutaRequestExceptionaTimeoutaTooManyRedirectsaURLRequiredamodelsTaPreparedRequestaRequestaResponseaPreparedRequestaRequestaResponseasessionsTaSessionasessionaSessionasessionastatus_codesTacodesacodesagetLoggerTarequestsaaddHandleradefaultDaappendturequests\__init__.pyu<module requests>Tacryptography_versionawarningTaurllib3_versionachardet_versionacharset_normalizer_versionamajoraminorapatch.requests.cookies_+a_ra_new_headersaurlparseaurlaschemeatypeanetlocaget_hostaheadersagetTaHostato_native_stringaHostDaencodinguutf-8aurlunparseapathaparamsaqueryafragmentuCookie headers should be added with add_unredirected_header()ucookielib has no legitimate use for this method; add it back if you find one.ais_unverifiableaget_origin_req_hosta_headersuMake a MockResponse for `cookielib` to read.

        :param headers: a httplib.HTTPMessage or analogous carrying the headers
        agetheadersa_original_responseaMockRequestaMockResponsearesponseamsgaextract_cookiesuExtract the cookies from the response into a CookieJar.

    :param jar: cookielib.CookieJar (not necessarily a RequestsCookieJar)
    :param request: our own requests.Request object
    :param response: urllib3.HTTPResponse object
    aadd_cookie_headeraget_new_headersTaCookieu
    Produce an appropriate Cookie header string to be sent with `request`, or None.

    :rtype: str
    anameadomainaclearablesaappendutoo many values to unpack (expected 3)acookiejaraclearuUnsets a cookie by name, by default over all domains and paths.

    Wraps CookieJar.clear(), is O(n).
    a_find_no_duplicatesuDict-like get() that also supports optional domain and path args in
        order to resolve naming collisions from using one cookie jar over
        multiple domains.

        .. warning:: operation is O(n), not O(1).
        aremove_cookie_by_nameTadomainapathaMorselamorsel_to_cookieacreate_cookieaset_cookieuDict-like set() that also supports optional domain and path args in
        order to resolve naming collisions from using one cookie jar over
        multiple domains.
        uDict-like iterkeys() that returns an iterator of names of cookies
        from the jar.

        .. seealso:: itervalues() and iteritems().
        aselfaiterkeysuRequestsCookieJar.iterkeysuDict-like keys() that returns a list of names of cookies from the
        jar.

        .. seealso:: values() and items().
        uDict-like itervalues() that returns an iterator of values of cookies
        from the jar.

        .. seealso:: iterkeys() and iteritems().
        avalueaitervaluesuRequestsCookieJar.itervaluesuDict-like values() that returns a list of values of cookies from the
        jar.

        .. seealso:: keys() and items().
        uDict-like iteritems() that returns an iterator of name-value tuples
        from the jar.

        .. seealso:: iterkeys() and itervalues().
        aiteritemsuRequestsCookieJar.iteritemsuDict-like items() that returns a list of name-value tuples from the
        jar. Allows client-code to call ``dict(RequestsCookieJar)`` and get a
        vanilla python dict of key value pairs.

        .. seealso:: keys() and values().
        adomainsuUtility method to list all the domains in the jar.apathsuUtility method to list all the paths in the jar.uReturns True if there are multiple domains in the jar.
        Returns False otherwise.

        :rtype: bool
        acookieadictionaryuTakes as an argument an optional domain and path and returns a plain
        old Python dict of name-value pairs of cookies that meet the
        requirements.

        :rtype: dict
        a__class__a__contains__aCookieConflictErroruDict-like __getitem__() for compatibility with client code. Throws
        exception if there are more than one cookie with name. In that case,
        use the more explicit get() method instead.

        .. warning:: operation is O(n), not O(1).
        asetuDict-like __setitem__ for compatibility with client code. Throws
        exception if there is already a cookie of that name in the jar. In that
        case, use the more explicit set() method instead.
        uDeletes a cookie given a name. Wraps ``cookielib.CookieJar``'s
        ``remove_cookie_by_name()``.
        astartswithTw"aendswithareplaceTu\"uacookielibaCookieJaracopyaupdateuUpdates this jar with cookies from another CookieJar or dict-likeuname=uu, domain=u, path=uRequests uses this method internally to get cookie values.

        If there are conflicting cookies, _find arbitrarily chooses one.
        See _find_no_duplicates if you want an exception thrown if there are
        conflicting cookies.

        :param name: a string containing name of cookie
        :param domain: (optional) string containing domain of cookie
        :param path: (optional) string containing path of cookie
        :return: cookie.value
        atoReturnuThere are multiple cookies with name, uBoth ``__get_item__`` and ``get`` call this function: it's never
        used elsewhere in Requests.

        :param name: a string containing name of cookie
        :param domain: (optional) string containing domain of cookie
        :param path: (optional) string containing path of cookie
        :raises KeyError: if cookie is not found
        :raises CookieConflictError: if there are multiple cookies
            that match name and optionally domain and path
        :return: cookie.value
        apopTa_cookies_lockuUnlike a normal CookieJar, this class is pickleable.a_cookies_lockathreadingaRLockaRequestsCookieJaraset_policyaget_policyuReturn a copy of this RequestsCookieJar.a_policyuReturn the CookiePolicy instance used.anew_jaraversionlaportw/asecureaexpiresadiscardacommentacomment_urlarestDaHttpOnlynarfc2109ucreate_cookie() got unexpected keyword arguments: aport_specifiedadomain_specifiedTw.adomain_initial_dotapath_specifiedaCookieuMake a cookie from underspecified parameters.

    By default, the pair of `name` and `value` will be set for the domain ''
    and sent on every request (this is sometimes called a "supercookie").
    umax-ageatimeumax-age: u must be integeracalendaratimegmastrptimeu%a, %d-%b-%Y %H:%M:%S GMTakeyaHttpOnlyahttponlyT
acommentacomment_urladiscardadomainaexpiresanameapathaportarestarfc2109asecureavalueaversionuConvert a Morsel object into a Cookie containing the one k/v pair.uReturns a CookieJar from a key/value dictionary.

    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :param cookiejar: (optional) A cookiejar to add the cookies to.
    :param overwrite: (optional) If False, will not replace cookies
        already in the jar with new ones.
    :rtype: CookieJar
    uYou can only merge into CookieJaracookiejar_from_dictTacookiejaraoverwriteacookiesuAdd cookies to cookiejar and returns a merged CookieJar.

    :param cookiejar: CookieJar object to add the cookies to.
    :param cookies: Dictionary or CookieJar object to be added.
    :rtype: CookieJar
    u
requests.cookies
~~~~~~~~~~~~~~~~

Compatibility code to be able to use `cookielib.CookieJar` with requests.

requests.utils imports from here, so be careful with imports.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a_internal_utilsTato_native_stringlacompatTaMorselaMutableMappingacookielibaurlparseaurlunparseaMutableMappingadummy_threadingurequests.cookiesa__module__uWraps a `requests.Request` to mimic a `urllib2.Request`.

    The code in `cookielib.CookieJar` expects this interface in order to correctly
    manage cookie policies, i.e., determine whether a cookie can be set, given the
    domains of the request and the cookie.

    The original request object is read-only. The client is responsible for collecting
    the new headers via `get_new_headers()` and interpreting them appropriately. You
    probably want `get_cookie_header`, defined below.
    a__qualname__a__init__uMockRequest.__init__aget_typeuMockRequest.get_typeuMockRequest.get_hostuMockRequest.get_origin_req_hostaget_full_urluMockRequest.get_full_urluMockRequest.is_unverifiableahas_headeruMockRequest.has_headerTnaget_headeruMockRequest.get_headeraadd_headeruMockRequest.add_headeraadd_unredirected_headeruMockRequest.add_unredirected_headeruMockRequest.get_new_headersaunverifiableuMockRequest.unverifiableaorigin_req_hostuMockRequest.origin_req_hostahostuMockRequest.hostTuWraps a `httplib.HTTPMessage` to mimic a `urllib.addinfourl`.

    ...what? Basically, expose the parsed HTTP headers from the server response
    the way `cookielib` expects to see them.
    uMockResponse.__init__ainfouMockResponse.infouMockResponse.getheadersaextract_cookies_to_jaraget_cookie_headerTnnTERuntimeErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uThere are two cookies that meet the criteria specified in the cookie jar.
    Use .get and .set and include domain and path args in order to be more specific.
    a__orig_bases__uCompatibility class; is a cookielib.CookieJar, but exposes a dict
    interface.

    This is the CookieJar we create by default for requests and sessions that
    don't specify one, since some clients may expect response.cookies and
    session.cookies to support dict operations.

    Requests does not use the dict interface internally; it's just for
    compatibility with external client code. All requests code should work
    out of the box with externally provided instances of ``CookieJar``, e.g.
    ``LWPCookieJar`` and ``FileCookieJar``.

    Unlike a regular CookieJar, this class is pickleable.

    .. warning:: dictionary operations that are normally O(1) may be O(n).
    TnnnuRequestsCookieJar.getuRequestsCookieJar.setakeysuRequestsCookieJar.keysavaluesuRequestsCookieJar.valuesaitemsuRequestsCookieJar.itemsalist_domainsuRequestsCookieJar.list_domainsalist_pathsuRequestsCookieJar.list_pathsamultiple_domainsuRequestsCookieJar.multiple_domainsaget_dictuRequestsCookieJar.get_dictuRequestsCookieJar.__contains__uRequestsCookieJar.__getitem__a__setitem__uRequestsCookieJar.__setitem__a__delitem__uRequestsCookieJar.__delitem__uRequestsCookieJar.set_cookieuRequestsCookieJar.updatea_finduRequestsCookieJar._finduRequestsCookieJar._find_no_duplicatesa__getstate__uRequestsCookieJar.__getstate__a__setstate__uRequestsCookieJar.__setstate__uRequestsCookieJar.copyuRequestsCookieJar.get_policya_copy_cookie_jarTntamerge_cookiesurequests\cookies.pyu<module requests.cookies>Ta__class__Taselfanamea__class__TaselfanameTaselfastateTaselfaheadersTaselfarequestTaselfanameavalueTajaranew_jaracookieTaselfanameadomainapathacookieTaselfanameadomainapathatoReturnacookieTaselfakeyavalTacookie_dictacookiejaraoverwriteanames_from_jaranameTaselfanew_cjTanameavalueakwargsaresultabadargsTajararequestaresponseareqaresTaselfanameadefaultadomainapathTajararequestwrTaselfadomainapathadictionaryacookieTaselfahostaparsedTaselfanameadefaultTaselfTaselfacookieTaselfadomainsacookieTaselfapathsacookieTacookiejaracookiesacookie_in_jarTamorselaexpiresatime_templateTacookiejaranameadomainapathaclearablesacookieTaselfanameavalueakwargswcTaselfacookieaargsakwargsa__class__Taselfaotheracookiea__class__.requests.exceptions
^aresponseapopTarequestnarequesta__class__a__init__uInitialize RequestException with `request` and `response` objects.aCompatJSONDecodeErroraInvalidJSONErroraargsu
        Construct the JSONDecodeError instance first with all
        args. Then use it's args to construct the IOError so that
        the json specific args aren't used as IOError specific args
        and the error message from JSONDecodeError is preserved.
        u
requests.exceptions
~~~~~~~~~~~~~~~~~~~

This module contains the set of Requests' exceptions.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uurllib3.exceptionsTaHTTPErrorlaHTTPErroraBaseHTTPErroracompatTaJSONDecodeErrorlaJSONDecodeErrorTEOSErrora__prepare__aRequestExceptiona__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests.exceptionsa__module__uThere was an ambiguous exception that occurred while handling your
    request.
    a__qualname__uRequestException.__init__a__orig_bases__uA JSON error occurred.uCouldn't decode the text into jsonuJSONDecodeError.__init__uAn HTTP error occurred.aConnectionErroruA Connection error occurred.aProxyErroruA proxy error occurred.aSSLErroruAn SSL error occurred.aTimeoutuThe request timed out.

    Catching this error will catch both
    :exc:`~requests.exceptions.ConnectTimeout` and
    :exc:`~requests.exceptions.ReadTimeout` errors.
    aConnectTimeoutuThe request timed out while trying to connect to the remote server.

    Requests that produced this error are safe to retry.
    aReadTimeoutuThe server did not send any data in the allotted amount of time.aURLRequireduA valid URL is required to make a request.aTooManyRedirectsuToo many redirects.aMissingSchemauThe URL scheme (e.g. http or https) is missing.aInvalidSchemauThe URL scheme provided is either invalid or unsupported.aInvalidURLuThe URL provided was somehow invalid.aInvalidHeaderuThe header value provided was somehow invalid.aInvalidProxyURLuThe proxy URL provided is invalid.aChunkedEncodingErroruThe server declared chunked encoding but sent an invalid chunk.aContentDecodingErroruFailed to decode response content.aStreamConsumedErroruThe content for this response was already consumed.aRetryErroruCustom retries logic failedaUnrewindableBodyErroruRequests encountered an error when trying to rewind a body.aWarningaRequestsWarninguBase warning for Requests.aDeprecationWarningaFileModeWarninguA file was opened in text mode, but Requests determined its binary length.aRequestsDependencyWarninguAn imported dependency doesn't match the expected version range.urequests\exceptions.pyu<module requests.exceptions>Ta__class__TaselfaargsakwargsTaselfaargsakwargsaresponsea__class__u.requests.hooksaHOOKSageta__call__ahook_datauDispatches a hook dictionary on a given piece of data.u
requests.hooks
~~~~~~~~~~~~~~

This module provides the capabilities for the Requests hooks system.

Available hooks:

``response``:
    The response generated from a Request.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aresponseadefault_hooksadispatch_hookurequests\hooks.pyu<module requests.hooks>Takeyahooksahook_dataakwargsahooka_hook_datau.requests.models6aurlsplitaurlapathw/aqueryw?uuBuild the path URL to use.TOstrObytesareada__iter__ato_key_val_listutoo many values to unpack (expected 2)abasestringaresultaappendwkaencodeTuutf-8aurlencodeDadoseqtuEncode parameters in a piece of data.

        Will successfully encode parameters when passed as a dict or a list of
        2-tuples. Order is retained if data is a list of 2-tuples but arbitrary
        if parameters are supplied as a dict.
        uFiles must be provided.uData must not be a string.anew_fieldsafieldadecodeTOtupleOlistutoo many values to unpack (expected 3)utoo many values to unpack (expected 4)aguess_filenameTOstrObytesObytearrayaRequestFieldTanameadataafilenameaheadersamake_multipartTacontent_typeaencode_multipart_formdatauBuild the body for a multipart/form-data request.

        Will successfully encode files when passed as a dict or a list of
        tuples. Order is retained if data is a list of tuples but arbitrary
        if parameters are supplied as a dict.
        The tuples may be 2-tuples (filename, fileobj), 3-tuples (filename, fileobj, contentype)
        or 4-tuples (filename, fileobj, contentype, custom_headers).
        ahooksuUnsupported event specified, with event name "w"aCallableaextenduProperly register a hook.u<genexpr>uRequestHooksMixin.register_hook.<locals>.<genexpr>aremoveuDeregister a previously registered hook.
        Returns True if the hook existed, False if not.
        adefault_hooksaitemsaselfaregister_hookTaeventahookamethodaheadersafilesadataajsonaparamsaauthacookiesu<Request [u]>aPreparedRequestaprepareT
amethodaurlaheadersafilesadataajsonaparamsaauthacookiesahooksuConstructs a :class:`PreparedRequest <PreparedRequest>` for transmission and returns it.a_cookiesabodya_body_positionaprepare_methodaprepare_urlaprepare_headersaprepare_cookiesaprepare_bodyaprepare_authaprepare_hooksuPrepares the entire request with the given parameters.u<PreparedRequest [acopya_copy_cookie_jarato_native_stringaupperuPrepares the given HTTP method.aidnalDauts46taIDNAErrorTautf8alstripw:alowerastartswithTahttpaparse_urlutoo many values to unpack (expected 7)aLocationParseErroraInvalidURLaargsaMissingSchemauInvalid URL u: No scheme supplied. Perhaps you meant https://u: No host suppliedaunicode_is_asciia_get_idna_encoded_hostTuURL has an invalid label.TTw*w.w@ahosta_encode_paramsw&arequote_uriaurlunparseuPrepares the given HTTP URL.aCaseInsensitiveDictacheck_header_validityuPrepares the given HTTP headers.uapplication/jsonacomplexjsonadumpsDaallow_nanFaInvalidJSONErrorTarequestaMappingasuper_lenaUnsupportedOperationatelluStreamed bodies and files are mutually exclusive.abuiltin_struContent-LengthachunkeduTransfer-Encodinga_encode_filesuapplication/x-www-form-urlencodedaprepare_content_lengthucontent-typeuContent-TypeuPrepares the given HTTP body data.TaGETaHEADagetTuContent-Lengthw0uPrepare Content-Length header based on request method and bodyaget_auth_from_urlaHTTPBasicAuthaupdateuPrepares the given HTTP auth data.acookielibaCookieJaracookiejar_from_dictaget_cookie_headeraCookieuPrepares the given HTTP cookie data.

        This function eventually generates a ``Cookie`` header from the
        given cookies using cookielib. Due to cookielib's design, the header
        will not be regenerated if it already exists, meaning this function
        can only be called once for the life of the
        :class:`PreparedRequest <PreparedRequest>` object. Any subsequent calls
        to ``prepare_cookies`` will have no actual effect, unless the "Cookie"
        header is removed beforehand.
        uPrepares the given hooks.a_contenta_content_consumeda_nextastatus_codearawaencodingahistoryareasonadatetimeatimedeltaTlaelapsedarequestacloseacontenta__attrs__u<Response [aokuReturns True if :attr:`status_code` is less than 400.

        This attribute checks if the status code of the response is between
        400 and 600 to see if there was a client error or a server error. If
        the status code, is between 200 and 400, this will return True. This
        is **not** a check to see if the response code is ``200 OK``.
        aiter_contentTluAllows you to use a response as an iterator.araise_for_statusaHTTPErroruReturns True if :attr:`status_code` is less than 400, False if not.

        This attribute checks if the status code of the response is between
        400 and 600 to see if there was a client error or a server error. If
        the status code is between 200 and 400, this will return True. This
        is **not** a check to see if the response code is ``200 OK``.
        alocationaREDIRECT_STATIuTrue if this Response is a well-formed HTTP redirect that could have
        been processed automatically (by :meth:`Session.resolve_redirects`).
        acodesamoved_permanentlyapermanent_redirectuTrue if this Response one of the permanent versions of redirect.uReturns a PreparedRequest for the next request in a redirect chain, if there is one.achardetadetectuThe apparent encoding, provided by the charset_normalizer or chardet libraries.agenerateuResponse.iter_content.<locals>.generateaStreamConsumedErroruchunk_size must be an int, it is instead a w.aiter_slicesastream_decode_response_unicodeuIterates over the response data.  When stream=True is set on the
        request, this avoids reading the content at once into memory for
        large responses.  The chunk size is the number of bytes it should
        read into memory.  This is not necessarily the length of each item
        returned as decoding can take place.

        chunk_size must be of type int or None. A value of None will
        function differently depending on the value of `stream`.
        stream=True will read data as it arrives in whatever size the
        chunks are received. If stream=False, data is returned as
        a single chunk.

        If decode_unicode is True, content will be decoded using the best
        available encoding based on the response.
        astreamachunk_sizeDadecode_contenttaProtocolErroraChunkedEncodingErroraDecodeErroraContentDecodingErroraReadTimeoutErroraConnectionErroraSSLErroraRequestsSSLErroruIterates over the response data, one line at a time.  When
        stream=True is set on the request, this avoids reading the
        content at once into memory for large responses.

        .. note:: This method is not reentrant safe.
        adecode_unicodeTachunk_sizeadecode_unicodeapendingadelimiterasplitasplitlineslachunkapopaiter_linesuResponse.iter_linesuThe content for this response was already consumedcaCONTENT_CHUNK_SIZEuContent of the response, in bytes.aapparent_encodingareplaceTELookupErrorETypeErroruContent of the response, in unicode.

        If Response.encoding is None, encoding will be guessed using
        ``charset_normalizer`` or ``chardet``.

        The encoding of the response content is determined based solely on HTTP
        headers, following RFC 2616 to the letter. If you can take advantage of
        non-HTTP knowledge to make a better guess at the encoding, you should
        set ``r.encoding`` appropriately before accessing this property.
        aguess_json_utfaloadsaJSONDecodeErroraRequestsJSONDecodeErroramsgadocaposatextuReturns the json-encoded content of a response, if any.

        :param \*\*kwargs: Optional arguments that ``json.loads`` takes.
        :raises requests.exceptions.JSONDecodeError: If the response body does not
            contain valid json.
        Talinkaparse_header_linksTarelTaurlaresolved_linksuReturns the parsed header links of the response, if any.Tuiso-8859-1llu Client Error: u for url: lXu Server Error: TaresponseuRaises :class:`HTTPError`, if one occurred.arelease_connuReleases the connection back to the pool. Once this method has been
        called the underlying ``raw`` object must not be accessed again.

        *Note: Should not normally need to be called explicitly.*
        u
requests.models
~~~~~~~~~~~~~~~

This module contains the primary objects that power Requests.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uencodings.idnaaencodingsuurllib3.exceptionsTaDecodeErroraLocationParseErroraProtocolErroraReadTimeoutErroraSSLErroruurllib3.fieldsTaRequestFielduurllib3.filepostTaencode_multipart_formdatauurllib3.utilTaparse_urla_internal_utilsTato_native_stringaunicode_is_asciilTaHTTPBasicAuthacompatTaCallableaJSONDecodeErroraMappingabasestringabuiltin_strachardetacookielibTajsonTaurlencodeaurlsplitaurlunparseTa_copy_cookie_jaracookiejar_from_dictaget_cookie_headeraexceptionsTaChunkedEncodingErroraConnectionErroraContentDecodingErroraHTTPErroraInvalidJSONErroraInvalidURLTaJSONDecodeErrorTaMissingSchemaTaSSLErrorTaStreamConsumedErrorTadefault_hooksastatus_codesTacodesastructuresTaCaseInsensitiveDictautilsT
acheck_header_validityaget_auth_from_urlaguess_filenameaguess_json_utfaiter_slicesaparse_header_linksarequote_uriastream_decode_response_unicodeasuper_lenato_key_val_listamovedafoundaotheratemporary_redirectlaDEFAULT_REDIRECT_LIMITl(laITER_CHUNK_SIZEurequests.modelsa__module__aRequestEncodingMixina__qualname__apath_urluRequestEncodingMixin.path_urluRequestEncodingMixin._encode_paramsuRequestEncodingMixin._encode_filesTaRequestHooksMixinuRequestHooksMixin.register_hookaderegister_hookuRequestHooksMixin.deregister_hooka__prepare__aRequesta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uA user-created :class:`Request <Request>` object.

    Used to prepare a :class:`PreparedRequest <PreparedRequest>`, which is sent to the server.

    :param method: HTTP method to use.
    :param url: URL to send.
    :param headers: dictionary of headers to send.
    :param files: dictionary of {filename: fileobject} files to multipart upload.
    :param data: the body to attach to the request. If a dictionary or
        list of tuples ``[(key, value)]`` is provided, form-encoding will
        take place.
    :param json: json for the body to attach to the request (if files or data is not specified).
    :param params: URL parameters to append to the URL. If a dictionary or
        list of tuples ``[(key, value)]`` is provided, form-encoding will
        take place.
    :param auth: Auth handler or (user, pass) tuple.
    :param cookies: dictionary or CookieJar of cookies to attach to this request.
    :param hooks: dictionary of callback hooks, for internal usage.

    Usage::

      >>> import requests
      >>> req = requests.Request('GET', 'https://httpbin.org/get')
      >>> req.prepare()
      <PreparedRequest [GET]>
    T
nnnnnnnnnna__init__uRequest.__init__a__repr__uRequest.__repr__uRequest.preparea__orig_bases__uThe fully mutable :class:`PreparedRequest <PreparedRequest>` object,
    containing the exact bytes that will be sent to the server.

    Instances are generated from a :class:`Request <Request>` object, and
    should not be instantiated manually; doing so may produce undesirable
    effects.

    Usage::

      >>> import requests
      >>> req = requests.Request('GET', 'https://httpbin.org/get')
      >>> r = req.prepare()
      >>> r
      <PreparedRequest [GET]>

      >>> s = requests.Session()
      >>> s.send(r)
      <Response [200]>
    uPreparedRequest.__init__uPreparedRequest.prepareuPreparedRequest.__repr__uPreparedRequest.copyuPreparedRequest.prepare_methodastaticmethoduPreparedRequest._get_idna_encoded_hostuPreparedRequest.prepare_urluPreparedRequest.prepare_headersTnuPreparedRequest.prepare_bodyuPreparedRequest.prepare_content_lengthTuuPreparedRequest.prepare_authuPreparedRequest.prepare_cookiesuPreparedRequest.prepare_hooksuThe :class:`Response <Response>` object, which contains a
    server's response to an HTTP request.
    aResponseL
a_contentastatus_codeaheadersaurlahistoryaencodingareasonacookiesaelapsedarequestuResponse.__init__a__enter__uResponse.__enter__a__exit__uResponse.__exit__a__getstate__uResponse.__getstate__a__setstate__uResponse.__setstate__uResponse.__repr__a__bool__uResponse.__bool__a__nonzero__uResponse.__nonzero__uResponse.__iter__uResponse.okais_redirectuResponse.is_redirectais_permanent_redirectuResponse.is_permanent_redirectanextuResponse.nextuResponse.apparent_encodingTlFuResponse.iter_contentuResponse.contentuResponse.textuResponse.jsonalinksuResponse.linksuResponse.raise_for_statusuResponse.closeurequests\models.pyTa.0whu<module requests.models>Ta__class__TaselfTaselfaargsT
aselfamethodaurlaheadersafilesadataaparamsaauthacookiesahooksajsonwkwvTaselfastateanameavalueTafilesadataanew_fieldsafieldsafieldavalwvwkaftafhafnafpafdataarfabodyacontent_typeTadataaresultwkavswvTahostaidnaTaselfarelease_connTaselfwpTaselfaeventahookTweachunkaselfachunk_sizeTachunk_sizeaselfTaselfachunk_sizeadecode_unicodeagenerateareused_chunksastream_chunksachunksTaselfachunk_sizeadecode_unicodeadelimiterapendingachunkalinesTaselfakwargsaencodingweTaselfaheaderaresolved_linksalinksalinkakeyTaselfaurlwpapathaqueryTaselfamethodaurlaheadersafilesadataaparamsaauthacookiesahooksajsonTaselfaauthaurlaurl_authwrTaselfadataafilesajsonabodyacontent_typeaveais_streamalengthTaselfabodyalengthTaselfacookiesacookie_headerTaselfaheadersaheaderanameavalueTaselfahooksaeventTaselfamethodT
aselfaurlaparamsaschemeaauthahostaportapathaqueryafragmentweanetlocaenc_paramsTaselfahttp_error_msgareasonTaselfacontentaencoding.requests.packagesVa__doc__a__file__a__spec__aoriginahas_locationa__cached__asysachardetlawarningsacharset_normalizerafilterwarningsTaignoreuTrying to detectacharset_normalizerTamoduleTaurllib3aidnaapackageamodulesamodastartswithuw.urequests.packages.a__name__atargetareplaceurequests\packages.pyu<module requests.packages>.requests.sessions336aMappingato_key_val_listaupdateaitemsutoo many values to unpack (expected 2)uDetermines appropriate setting for a given request, taking into account
    the explicit setting on that request, and the setting in the session. If a
    setting is a dictionary, they will be merged together using `dict_class`
    agetTaresponseasession_hooksamerge_settingarequest_hooksuProperly merges both requests and session hooks.

    This is necessary because when request_hooks == {'response': []}, the
    merge breaks Session hooks entirely.
    ais_redirectaheadersalocationaencodeTalatin1ato_native_stringautf8uReceives a Response. Returns a redirect URI or ``None``aurlparseahostnameaschemeahttpaportTlPnahttpsTlnaDEFAULT_PORTSuDecide whether Authorization header should be removed when redirectinguReceives a Response. Returns a generator of Responses or Requests.aselfaget_redirect_targetarespareqaurlafragmentacopyahistaappend:lnnahistoryacontentaChunkedEncodingErroraContentDecodingErrorarawareadTFTadecode_contentamax_redirectsaTooManyRedirectsuExceeded uu redirects.acloseastartswithTu//w:aprevious_fragmenta_replaceTafragmentaparsedageturlanetlocaurljoinarequote_uriarebuild_methodastatus_codeacodesatemporary_redirectapermanent_redirectTuContent-LengthuContent-TypeuTransfer-Encodingaprepared_requestapopabodyTaCookienaextract_cookies_to_jara_cookiesamerge_cookiesacookiesaprepare_cookiesarebuild_proxiesaproxiesarebuild_autha_body_positionuContent-LengthuTransfer-Encodingarewind_bodyayield_requestsasendastreamatimeoutaverifyacertaallow_redirectsaadapter_kwargsaresolve_redirectsuSessionRedirectMixin.resolve_redirectsaAuthorizationashould_strip_autharequestatrust_envaget_netrc_authaprepare_authuWhen being redirected we may want to strip authentication from the
        request to avoid leaking credentials. This method intelligently removes
        and reapplies authentication where possible to avoid credential loss.
        aresolve_proxiesuProxy-Authorizationaget_auth_from_urlTnnTahttpsa_basic_auth_struThis method re-evaluates the proxy configuration by considering the
        environment variables. If we are redirected to a URL covered by
        NO_PROXY, we strip the proxy configuration. Otherwise, we set missing
        proxy keys for this URL (in case they were stripped by a previous
        redirect).

        This method also replaces the Proxy-Authorization header where
        necessary.

        :rtype: dict
        amethodasee_otheraHEADaGETafoundamovedaPOSTuWhen being redirected we may want to change the method of the request
        based on certain specs or browser behavior.
        adefault_headersaauthadefault_hooksahooksaparamsaDEFAULT_REDIRECT_LIMITacookiejar_from_dictaOrderedDictaadaptersamountuhttps://aHTTPAdapteruhttp://acookielibaCookieJaraRequestsCookieJaraPreparedRequestaprepareaupperafilesadataajsonaCaseInsensitiveDictTadict_classamerge_hooksT
amethodaurlafilesadataajsonaheadersaparamsaauthacookiesahooksuConstructs a :class:`PreparedRequest <PreparedRequest>` for
        transmission and returns it. The :class:`PreparedRequest` has settings
        merged from the :class:`Request <Request>` instance and those of the
        :class:`Session`.

        :param request: :class:`Request` instance to prepare with this
            session's settings.
        :rtype: requests.PreparedRequest
        aRequestT
amethodaurlaheadersafilesadataajsonaparamsaauthacookiesahooksaprepare_requestamerge_environment_settingsuConstructs a :class:`Request <Request>`, prepares it and sends it.
        Returns :class:`Response <Response>` object.

        :param method: method for the new :class:`Request` object.
        :param url: URL for the new :class:`Request` object.
        :param params: (optional) Dictionary or bytes to be sent in the query
            string for the :class:`Request`.
        :param data: (optional) Dictionary, list of tuples, bytes, or file-like
            object to send in the body of the :class:`Request`.
        :param json: (optional) json to send in the body of the
            :class:`Request`.
        :param headers: (optional) Dictionary of HTTP Headers to send with the
            :class:`Request`.
        :param cookies: (optional) Dict or CookieJar object to send with the
            :class:`Request`.
        :param files: (optional) Dictionary of ``'filename': file-like-objects``
            for multipart encoding upload.
        :param auth: (optional) Auth tuple or callable to enable
            Basic/Digest/Custom HTTP Auth.
        :param timeout: (optional) How long to wait for the server to send
            data before giving up, as a float, or a :ref:`(connect timeout,
            read timeout) <timeouts>` tuple.
        :type timeout: float or tuple
        :param allow_redirects: (optional) Set to True by default.
        :type allow_redirects: bool
        :param proxies: (optional) Dictionary mapping protocol or protocol and
            hostname to the URL of the proxy.
        :param stream: (optional) whether to immediately download the response
            content. Defaults to ``False``.
        :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use. Defaults to ``True``. When set to
            ``False``, requests will accept any TLS certificate presented by
            the server, and will ignore hostname mismatches and/or expired
            certificates, which will make your application vulnerable to
            man-in-the-middle (MitM) attacks. Setting verify to ``False``
            may be useful during local development or testing.
        :param cert: (optional) if String, path to ssl client cert file (.pem).
            If Tuple, ('cert', 'key') pair.
        :rtype: requests.Response
        uSends a GET request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        aOPTIONSuSends a OPTIONS request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        uSends a HEAD request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        uSends a POST request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param data: (optional) Dictionary, list of tuples, bytes, or file-like
            object to send in the body of the :class:`Request`.
        :param json: (optional) json to send in the body of the :class:`Request`.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        aPUTuSends a PUT request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param data: (optional) Dictionary, list of tuples, bytes, or file-like
            object to send in the body of the :class:`Request`.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        aPATCHuSends a PATCH request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param data: (optional) Dictionary, list of tuples, bytes, or file-like
            object to send in the body of the :class:`Request`.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        aDELETEuSends a DELETE request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        asetdefaultuYou can only send PreparedRequests.Taallow_redirectstTastreamaget_adapterTaurlapreferred_clockatimedeltaTasecondsaelapsedadispatch_hookaresponseainsertlwrDayield_requeststa_nextuSend a given PreparedRequest.

        :rtype: requests.Response
        Tano_proxyaget_environ_proxiesaosaenvironTaREQUESTS_CA_BUNDLETaCURL_CA_BUNDLEu
        Check the environment and merge it with some settings.

        :rtype: dict
        aloweraInvalidSchemauNo connection adapters were found for u
        Returns the appropriate connection adapter for the given URL.

        :rtype: requests.adapters.BaseAdapter
        avaluesuCloses all adapters and as such the sessionuRegisters a connection adapter to a prefix.

        Adapters are sorted in descending order by prefix length.
        a__attrs__aSessionu
    Returns a :class:`Session` for context-management.

    .. deprecated:: 1.0.0

        This method has been deprecated since version 1.0.0 and is only kept for
        backwards compatibility. New code should use :class:`~requests.sessions.Session`
        to create a session. This may be removed at a future date.

    :rtype: Session
    u
requests.sessions
~~~~~~~~~~~~~~~~~

This module provides a Session object to manage and persist settings across
requests (cookies, auth, proxies).
a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysatimeacollectionsTaOrderedDictadatetimeTatimedeltaa_internal_utilsTato_native_stringlTaHTTPAdapterTa_basic_auth_stracompatTaMappingacookielibaurljoinaurlparseTaRequestsCookieJaracookiejar_from_dictaextract_cookies_to_jaramerge_cookiesaexceptionsTaChunkedEncodingErroraContentDecodingErroraInvalidSchemaaTooManyRedirectsTadefault_hooksadispatch_hookamodelsTaDEFAULT_REDIRECT_LIMITaREDIRECT_STATIaPreparedRequestaRequestaREDIRECT_STATIastatus_codesTacodesastructuresTaCaseInsensitiveDictautilsT
aDEFAULT_PORTSadefault_headersaget_auth_from_urlaget_environ_proxiesaget_netrc_autharequote_uriaresolve_proxiesarewind_bodyashould_bypass_proxiesato_key_val_listashould_bypass_proxiesaperf_counterurequests.sessionsa__module__aSessionRedirectMixina__qualname__uSessionRedirectMixin.get_redirect_targetuSessionRedirectMixin.should_strip_authTFntnnFuSessionRedirectMixin.rebuild_authuSessionRedirectMixin.rebuild_proxiesuSessionRedirectMixin.rebuild_methodTa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uA Requests session.

    Provides cookie persistence, connection-pooling, and configuration.

    Basic Usage::

      >>> import requests
      >>> s = requests.Session()
      >>> s.get('https://httpbin.org/get')
      <Response [200]>

    Or as a context manager::

      >>> with requests.Session() as s:
      ...     s.get('https://httpbin.org/get')
      <Response [200]>
    Laheadersacookiesaauthaproxiesahooksaparamsaverifyacertaadaptersastreamatrust_envamax_redirectsa__init__uSession.__init__a__enter__uSession.__enter__a__exit__uSession.__exit__uSession.prepare_requestTnnnnnnntnnnnnnuSession.requestuSession.getaoptionsuSession.optionsaheaduSession.headapostuSession.postTnaputuSession.putapatchuSession.patchadeleteuSession.deleteuSession.senduSession.merge_environment_settingsuSession.get_adapteruSession.closeuSession.mounta__getstate__uSession.__getstate__a__setstate__uSession.__setstate__a__orig_bases__asessionurequests\sessions.pyu<module requests.sessions>Ta__class__TaselfTaselfaargsTaselfastateTaselfastateaattravalueTaselfwvTaselfaurlakwargsTaselfaurlaprefixaadapterTaselfarespalocationT
aselfaurlaproxiesastreamaverifyacertano_proxyaenv_proxieswkwvTarequest_hooksasession_hooksadict_classTarequest_settingasession_settingadict_classamerged_settinganone_keysakeyTaselfaprefixaadapterakeys_to_moveakeyTaselfaurladataakwargsTaselfaurladataajsonakwargsTaselfarequestacookiesamerged_cookiesaauthwpTaselfaprepared_requestaresponseaheadersaurlanew_authTaselfaprepared_requestaresponseamethodTaselfaprepared_requestaproxiesaheadersaschemeanew_proxiesausernameapasswordTaselfamethodaurlaparamsadataaheadersacookiesafilesaauthatimeoutaallow_redirectsaproxiesahooksastreamaverifyacertajsonareqaprepasettingsasend_kwargsarespTaselfarespareqastreamatimeoutaverifyacertaproxiesayield_requestsaadapter_kwargsahistaurlaprevious_fragmentaprepared_requestaparsed_rurlaparsedapurged_headersaheaderaheadersarewindableT
aselfarequestakwargsaallow_redirectsastreamahooksaadapterastartwraelapsedarespagenahistoryTaselfaold_urlanew_urlaold_parsedanew_parsedachanged_portachanged_schemeadefault_port.requests.status_codes!
(a_codesaitemsutoo many values to unpack (expected 2)acodesastartswithTTw\w/aupperadocu_init.<locals>.doca__doc__w
asortedu, u* %d: %su``uu<genexpr>u_init.<locals>.doc.<locals>.<genexpr>u_init.<locals>.<genexpr>u
The ``codes`` object defines a mapping from common names for HTTP statuses
to their numerical codes, accessible either as attributes or as dictionary
items.

Example::

    >>> import requests
    >>> requests.codes['temporary_redirect']
    307
    >>> requests.codes.teapot
    418
    >>> requests.codes['\o/']
    200

Some codes have multiple names, and both upper- and lower-case versions of
the names are allowed. For example, ``codes.ok``, ``codes.OK``, and
``codes.okay`` all correspond to the HTTP status code 200.
a__file__a__spec__aoriginahas_locationa__cached__astructuresTaLookupDictlaLookupDictlDDldlelflglzlllllllllll,l-l.l/l0l1l2l3l4llllllllllllllllllllllllllllllllllllllllllllTacontinueTaswitching_protocolsTaprocessingTacheckpointTauri_too_longarequest_uri_too_longTaokaokayaall_okaall_okayaall_goodu\o/u✓TacreatedTaacceptedTanon_authoritative_infoanon_authoritative_informationTano_contentTareset_contentaresetTapartial_contentapartialTamulti_statusamultiple_statusamulti_statiamultiple_statiTaalready_reportedTaim_usedTamultiple_choicesTamoved_permanentlyamovedu\o-TafoundTasee_otheraotherTanot_modifiedTause_proxyTaswitch_proxyTatemporary_redirectatemporary_movedatemporaryTapermanent_redirectaresume_incompletearesumeTabad_requestabadTaunauthorizedTapayment_requiredapaymentTaforbiddenTanot_foundu-o-Tamethod_not_allowedanot_allowedTanot_acceptableTaproxy_authentication_requiredaproxy_authaproxy_authenticationTarequest_timeoutatimeoutTaconflictTagoneTalength_requiredTaprecondition_failedapreconditionTarequest_entity_too_largeTarequest_uri_too_largeTaunsupported_media_typeaunsupported_mediaamedia_typeTarequested_range_not_satisfiablearequested_rangearange_not_satisfiableTaexpectation_failedTaim_a_teapotateapotai_am_a_teapotTamisdirected_requestTaunprocessable_entityaunprocessableTalockedTafailed_dependencyadependencyTaunordered_collectionaunorderedTaupgrade_requiredaupgradeTaprecondition_requiredapreconditionTatoo_many_requestsatoo_manyTaheader_fields_too_largeafields_too_largeTano_responseanoneTaretry_witharetryTablocked_by_windows_parental_controlsaparental_controlsTaunavailable_for_legal_reasonsalegal_reasonsTaclient_closed_requestTainternal_server_erroraserver_erroru/o\u✗Tanot_implementedTabad_gatewayTaservice_unavailableaunavailableTagateway_timeoutTahttp_version_not_supportedahttp_versionTavariant_also_negotiatesTainsufficient_storageTabandwidth_limit_exceededabandwidthTanot_extendedTanetwork_authentication_requiredanetwork_authanetwork_authenticationTastatus_codesTanamea_initurequests\status_codes.pyTa.0acodeadocTa.0wnu<module requests.status_codes>TacodeatitlesatitleadocTacodeanames.requests.structuresRaOrderedDicta_storeaupdatealowerlavaluesutoo many values to unpack (expected 2)u<genexpr>uCaseInsensitiveDict.__iter__.<locals>.<genexpr>aitemsuLike iteritems(), but with all lowercase keys.uCaseInsensitiveDict.lower_items.<locals>.<genexpr>aMappingaCaseInsensitiveDictalower_itemsanamea__class__a__init__u<lookup 'uu'>agetu
requests.structures
~~~~~~~~~~~~~~~~~~~

Data structures that power Requests.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__acollectionsTaOrderedDictlacompatTaMappingaMutableMappingaMutableMappinga__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests.structuresa__module__uA case-insensitive ``dict``-like object.

    Implements all methods and operations of
    ``MutableMapping`` as well as dict's ``copy``. Also
    provides ``lower_items``.

    All keys are expected to be strings. The structure remembers the
    case of the last key to be set, and ``iter(instance)``,
    ``keys()``, ``items()``, ``iterkeys()``, and ``iteritems()``
    will contain case-sensitive keys. However, querying and contains
    testing is case insensitive::

        cid = CaseInsensitiveDict()
        cid['Accept'] = 'application/json'
        cid['aCCEPT'] == 'application/json'  # True
        list(cid) == ['Accept']  # True

    For example, ``headers['content-encoding']`` will return the
    value of a ``'Content-Encoding'`` response header, regardless
    of how the header name was originally stored.

    If the constructor, ``.update``, or equality comparison
    operations are given keys that have equal ``.lower()``s, the
    behavior is undefined.
    a__qualname__TnuCaseInsensitiveDict.__init__a__setitem__uCaseInsensitiveDict.__setitem__uCaseInsensitiveDict.__getitem__a__delitem__uCaseInsensitiveDict.__delitem__a__iter__uCaseInsensitiveDict.__iter__a__len__uCaseInsensitiveDict.__len__uCaseInsensitiveDict.lower_itemsa__eq__uCaseInsensitiveDict.__eq__acopyuCaseInsensitiveDict.copya__repr__uCaseInsensitiveDict.__repr__a__orig_bases__TOdictaLookupDictuDictionary lookup object.uLookupDict.__init__uLookupDict.__repr__uLookupDict.__getitem__uLookupDict.geturequests\structures.pyTa.0acasedkeyamappedvalueTa.0alowerkeyakeyvalu<module requests.structures>Ta__class__TaselfakeyTaselfaotherTaselfadataakwargsTaselfanamea__class__TaselfTaselfakeyavalueTaselfakeyadefault.requests.utils{8awinreglaOpenKeyaHKEY_CURRENT_USERuSoftware\Microsoft\Windows\CurrentVersion\Internet SettingsaQueryValueExaProxyEnableaProxyOverrideTEOSErrorEValueErrorasplitTw;u<local>w.ahostareplaceTw.u\.Tw*u.*Tw?w.areamatchwIagetproxies_environmentaproxy_bypass_environmentaproxy_bypass_registryuReturn True, if the host should be bypassed.

        Checks proxy settings gathered from the environment, if specified,
        or the registry.
        aitemsuReturns an internal sequence dictionary update.a__len__alenafilenoaioaUnsupportedOperationaosafstatast_sizewbamodeawarningsawarnuRequests has determined the content-length for this request using the binary size of the file: however, the file has been opened in text mode (i.e. without the 'b' flag in the mode). This may lead to an incorrect content-length. In Requests 3.0, support will be removed for files in text mode.aFileModeWarningwoatellaseekatotal_lengthTllamaxaenvironagetTaNETRCaNETRC_FILESanetrcTaNetrcParseErroranetrcaNetrcParseErrorapathaexpanduseraexistsaurlparsed:astraasciianetlocaauthenticatorsllTEImportErrorEAttributeErroruReturns the Requests tuple auth for a given url from netrc.u~/uu<genexpr>uget_netrc_auth.<locals>.<genexpr>anameabasestringw<lw>uTries to guess the filename of the given object.utoo many values to unpack (expected 2)aarchivew/amemberazipfileais_zipfileaZipFileanamelistatempfileagettempdirajoinTw/aatomic_opena__enter__a__exit__awriteareadTnnnuReplace nonexistent paths that look like they refer to a member of a zip
    archive with the location of an extracted copy of the target, or else
    just return the provided path unchanged.
    uWrite a file to the disk in an atomic fashionamkstempadirnameafilenameTadirafdopenawbaremoveabytesucannot encode objects that are not 2-tuplesaOrderedDictuTake an object and test to see if it can be represented as a
    dictionary. Unless it can not be represented as such, return an
    OrderedDict, e.g.,

    ::

        >>> from_key_val_list([('key', 'val')])
        OrderedDict([('key', 'val')])
        >>> from_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples
        >>> from_key_val_list({'key': 'val'})
        OrderedDict([('key', 'val')])

    :rtype: OrderedDict
    aMappinguTake an object and test to see if it can be represented as a
    dictionary. If it can be, return a list of tuples, e.g.,

    ::

        >>> to_key_val_list([('key', 'val')])
        [('key', 'val')]
        >>> to_key_val_list({'key': 'val'})
        [('key', 'val')]
        >>> to_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples

    :rtype: list
    a_parse_list_header:lnn:nlnw"aunquote_header_value:llnaresultaappenduParse lists as described by RFC 2068 Section 2.

    In particular, parse comma-separated lists where the elements of
    the list may include quoted-strings.  A quoted-string could
    contain a comma.  A non-quoted string could have quotes in the
    middle.  Quotes are removed automatically after parsing.

    It basically works like :func:`parse_set_header` just that items
    may appear multiple times and case sensitivity is preserved.

    The return value is a standard :class:`list`:

    >>> parse_list_header('token, "quoted value"')
    ['token', 'quoted value']

    To create a header from the :class:`list` again, use the
    :func:`dump_header` function.

    :param value: a string with a list header.
    :return: :class:`list`
    :rtype: list
    w=Tw=luParse lists of key, value pairs as described by RFC 2068 Section 2 and
    convert them into a python dict:

    >>> d = parse_dict_header('foo="is a fish", bar="as well"')
    >>> type(d) is dict
    True
    >>> sorted(d.items())
    [('bar', 'as well'), ('foo', 'is a fish')]

    If there is no value for a key it will be `None`:

    >>> parse_dict_header('key_without_value')
    {'key_without_value': None}

    To create a header from the :class:`dict` again, use the
    :func:`dump_header` function.

    :param value: a string with a dict header.
    :return: :class:`dict`
    :rtype: dict
    :nlnu\\Tu\\w\Tu\"w"uUnquotes a header value.  (Reversal of :func:`quote_header_value`).
    This does not use the real unquoting but what browsers are actually
    using for quoting.

    :param value: the header value to unquote.
    :rtype: str
    avalueacookie_dictuReturns a key/value dictionary from a CookieJar.

    :param cj: CookieJar object to extract cookies from.
    :rtype: dict
    acookiejar_from_dictuReturns a CookieJar from a key/value dictionary.

    :param cj: CookieJar to insert cookies into.
    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :rtype: CookieJar
    uIn requests 3.0, get_encodings_from_content will be removed. For more information, please see the discussion on issue #2266. (This warning should only appear once.)aDeprecationWarningacompileTu<meta.*?charset=["\']*(.+?)["\'>]TaflagsTu<meta.*?content=["\']*;?charset=(.+?)["\'>]Tu^<\?xml.*?encoding=["\']*(.+?)["\'>]afindalluReturns encodings from given content string.

    :param content: bytestring to extract encodings from.
    astrip:lnnu"' afindTw=aitems_to_stripaparams_dictaloweruReturns content type and parameters from given header

    :param header: string
    :return: tuple containing content type and dictionary of
         parameters
    Tucontent-typea_parse_content_type_headeracharsetTu'"atextuISO-8859-1uapplication/jsonuutf-8uReturns encodings from given HTTP Header Dict.

    :param headers: dictionary to extract encoding from.
    :rtype: str
    uStream decodes an iterator.wraencodingaiteratoracodecsagetincrementaldecoderTareplaceTaerrorsadecoderadecodeTctTafinalastream_decode_response_unicodeuIterate over slices of a string.aslice_lengthastringaposaiter_slicesuIn requests 3.0, get_unicode_from_response will be removed. For more information, please see the discussion on issue #2266. (This warning should only appear once.)aget_encoding_from_headersaheadersacontentDaerrorsareplaceuReturns the requested content back in unicode.

    :param r: Response object to get unicode content from.

    Tried:

    1. charset from content-type
    2. fall back and replace all unicode characters

    :rtype: str
    Tw%aparts:llnaisalnumlaInvalidURLuInvalid percent-escape sequence: 'w'aUNRESERVED_SET:lnnw%uUn-escape any percent-escape sequences in a URI that are unreserved
    characters. This leaves all reserved, illegal and non-ASCII bytes encoded.

    :rtype: str
    aquoteaunquote_unreservedDasafeu!#$%&'()*+,/:;=?@[]~Dasafeu!#$&'()*+,/:;=?@[]~uRe-quote the given URI.

    This function passes the given URI through an unquote/quote cycle to
    ensure that it is fully and consistently quoted.

    :rtype: str
    astructaunpacku=Lasocketainet_atonadotted_netmaskuThis function allows you to check if an IP belongs to a network subnet

    Example: returns True if ip = 192.168.1.1 and net = 192.168.1.0/24
             returns False if ip = 192.168.1.1 and net = 192.168.100.0/24

    :rtype: bool
    ql ainet_ntoaapacku>IuConverts mask from /xx format to xxx.xxx.xxx.xxx

    Example: if mask is 24 function returns 255.255.255.0

    :rtype: str
    u
    :rtype: bool
    acountu
    Very simple check of the cidr format in no_proxy variable.

    :rtype: bool
    uSet the environment variable 'env_name' to 'value'

    Save previous value, yield, and then restore the previous value stored in
    the environment variable 'env_name'.

    If 'value' is None, do nothingaenv_nameaold_valueaset_environaget_proxyushould_bypass_proxies.<locals>.get_proxyTano_proxyahostnameano_proxyTw uTw,ais_ipv4_addressais_valid_cidraaddress_in_networkaparsedaportw:aendswithahost_with_portaproxy_bypassagaierrorabypassu
    Returns whether we should bypass proxies or not.

    :rtype: bool
    aupperushould_bypass_proxies.<locals>.<genexpr>ashould_bypass_proxiesagetproxiesu
    Return a dict of environment proxies.

    :rtype: dict
    aschemeTaallu://uall://aalluSelect a proxy for the url, if applicable.

    :param url: The url being for the request
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
    aurlacopyaget_environ_proxiesasetdefaultanew_proxiesuThis method takes proxy information from a request and configuration
    input to resolve a mapping of target proxies. This will consider settings
    such a NO_PROXY to strip proxy configurations.

    :param request: Request or PreparedRequest
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
    :param trust_env: Boolean declaring whether to trust environment configs

    :rtype: dict
    a__version__u
    Return a string representing the default user agent.

    :rtype: str
    aCaseInsensitiveDictuUser-Agentadefault_user_agentuAccept-EncodingaDEFAULT_ACCEPT_ENCODINGaAcceptu*/*aConnectionukeep-aliveu
    :rtype: requests.structures.CaseInsensitiveDict
    u '"u, *<Tw;lTu<> '"areplace_charsalinkalinksuReturn a list of parsed link headers proxies.

    i.e. Link: <http:/.../front.jpeg>; rel=front; type="image/jpeg",<http://.../back.jpeg>; rel=back;type="image/jpeg"

    :rtype: list
    :nlnaBOM_UTF32_LEaBOM_UTF32_BEuutf-32:nlnaBOM_UTF8uutf-8-sigaBOM_UTF16_LEaBOM_UTF16_BEuutf-16a_null:nnla_null2uutf-16-be:lnluutf-16-lela_null3uutf-32-beuutf-32-leu
    :rtype: str
    aparse_urlutoo many values to unpack (expected 7)w@aurlunparseuGiven a URL that may or may not have a scheme, prepend the given scheme.
    Does not replace a present scheme with the one provided as an argument.

    :rtype: str
    aunquoteausernameapasswordTEAttributeErrorETypeErrorTupuGiven a url with authentication components, extract them into a tuple of
    username,password.

    :rtype: (str,str)
    a_validate_header_partuVerifies that header parts don't contain leading whitespace
    reserved characters, or return characters.

    :param header: tuple, in the format (name, value).
    a_HEADER_VALIDATORS_STRa_HEADER_VALIDATORS_BYTEaInvalidHeaderuHeader part (u) from u must be of type str or bytes, not uInvalid leading whitespace, reserved character(s), or returncharacter(s) in header u: utoo many values to unpack (expected 6)arsplitTw@lu
    Given a url remove the fragment and the authentication part.

    :rtype: str
    abodya_body_positionainteger_typesaUnrewindableBodyErrorTuAn error occurred when rewinding request body for redirect.TuUnable to rewind request body for redirect.uMove file pointer back to its recorded starting position
    so it can be read again on redirect.
    u
requests.utils
~~~~~~~~~~~~~~

This module provides utility functions that are used within Requests
that are also useful for external consumption.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__acontextlibasysacollectionsTaOrderedDictuurllib3.utilTamake_headersaparse_urlamake_headersTacertsacertsTa__version__a_internal_utilsTa_HEADER_VALIDATORS_BYTEa_HEADER_VALIDATORS_STRaHEADER_VALIDATORSato_native_stringaHEADER_VALIDATORSato_native_stringacompatTaMappingabasestringabytesagetproxiesagetproxies_environmentainteger_typesTaparse_http_listaparse_http_listTaproxy_bypassaproxy_bypass_environmentaquoteastraunquoteaurlparseaurlunparseacookiesTacookiejar_from_dictaexceptionsTaFileModeWarningaInvalidHeaderaInvalidURLaUnrewindableBodyErrorastructuresTaCaseInsensitiveDictTu.netrca_netrcawhereaDEFAULT_CA_BUNDLE_PATHDahttpahttpslPlaDEFAULT_PORTSu, u,\s*TtTaaccept_encodinguaccept-encodingadict_to_sequenceasuper_lenTFaget_netrc_authaguess_filenameaextract_zipped_pathsacontextmanagerafrom_key_val_listato_key_val_listaparse_list_headeraparse_dict_headeradict_from_cookiejaraadd_dict_to_cookiejaraget_encodings_from_contentaget_unicode_from_responsePBwMwFwYwiwrwxw2wpw-wdw8wXwKwQwcwDwywlwEwSwOw3whwHwmw.wPwBwUwJwzwVwAw6wIwLwkw5wowaw0wZw7w_wgw1wTwGwfwewWwuwwwRwnwbwqwjwtw~wNwsw4w9wvwCarequote_uriTnaselect_proxyaresolve_proxiesTupython-requestsadefault_headersaparse_header_linkswaguess_json_utfaprepend_scheme_if_neededaget_auth_from_urlacheck_header_validityaurldefragautharewind_bodyurequests\utils.pyTa.0wfTa.0ahostu<module requests.utils>T
aheaderatokensacontent_typeaparamsaparams_dictaitems_to_stripaparamakeyavalueaindex_of_equalsTaheaderaheader_partaheader_validator_indexavalidatoraheader_kindTacjacookie_dictTaipanetaipaddranetaddrabitsanetmaskanetworkTafilenameatmp_descriptoratmp_nameatmp_handlerTaheaderanameavalueTanameTacjacookie_dictacookieTwdTamaskabitsTapathaarchiveamemberaprefixazip_fileatmpaextracted_pathafile_handlerTavalueTaurlaparsedaauthTaheadersacontent_typeaparamsTacontentacharset_reapragma_reaxml_reTaurlano_proxyTaurlaraise_errorsanetrc_fileanetrc_locationsaNetrcParseErroranetrcanetrc_pathwfalocariasplitstrahosta_netrcalogin_iTakeyTwratried_encodingsaencodingTaobjanameTadataasampleanullcountTastring_ipTastring_networkamaskTastringaslice_lengthaposTavaluearesultaitemanameTavaluealinksareplace_charsavalaurlaparamsalinkaparamakeyTavaluearesultaitemTaurlanew_schemeaparsedaschemeaauthahostaportapathaqueryafragmentanetlocTahostTahostawinregainternetSettingsaproxyEnableaproxyOverrideatestTauriasafe_with_percentasafe_without_percentTarequestaproxiesatrust_envaurlaschemeano_proxyanew_proxiesaenviron_proxiesaproxyTaprepared_requestabody_seekTaurlaproxiesaurlpartsaproxy_keysaproxyaproxy_keyTaenv_nameavalueavalue_changedaold_valueTaurlano_proxyaget_proxyano_proxy_argaparsedaproxy_ipahost_with_portahostabypassTaiteratorwradecoderachunkarvTwoatotal_lengthacurrent_positionafilenoTavalueais_filenameTauriapartswiwhwcTaurlaschemeanetlocapathaparamsaqueryafragment.requests_oauthlib+a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_requests_oauthlibu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__alogginglaoauth1_authTaOAuth1laOAuth1aoauth1_sessionTaOAuth1SessionaOAuth1Sessionaoauth2_authTaOAuth2aOAuth2aoauth2_sessionTaOAuth2SessionaTokenUpdatedaOAuth2SessionaTokenUpdatedu1.3.1a__version__arequestsu2.0.0uYou are using requests version %s, which is older than requests-oauthlib expects, please upgrade to 2.0.0 or later.amsgaWarningagetLoggerTarequests_oauthlibaaddHandleraNullHandlerurequests_oauthlib\__init__.pyu<module requests_oauthlib>u.requests_oauthlib.oauth1_authTaupperaclient_classaselfaforce_include_bodyasignature_typeadecodingaclientalogadebuguSigning request %s using client %saheadersagetTuContent-Typeuaextract_paramsabodyaSIGNATURE_TYPE_BODYaCONTENT_TYPE_FORM_URLENCODEDaunicodeadecodeTuutf-8uIncluding body in call to sign: %suContent-Typeasignaurlamethoduutoo many values to unpack (expected 3)aprepare_headersato_native_stringuUpdated url: %suUpdated headers: %suUpdated body: %ruAdd OAuth parameters to the request.

        Parameters may be included from the body if the content-type is
        urlencoded, if no content type is set a guess is made.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aunicode_literalsaloggingluoauthlib.commonTaextract_paramsuoauthlib.oauth1TaClientaSIGNATURE_HMACaSIGNATURE_TYPE_AUTH_HEADERaClientaSIGNATURE_HMACaSIGNATURE_TYPE_AUTH_HEADERTaSIGNATURE_TYPE_BODYurequests.compatTais_py3ais_py3urequests.utilsTato_native_stringurequests.authTaAuthBaseaAuthBaseuapplication/x-www-form-urlencodedumultipart/form-dataaCONTENT_TYPE_MULTI_PARTagetLoggerTurequests_oauthlib.oauth1_autha__prepare__aOAuth1a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests_oauthlib.oauth1_autha__module__uSigns the request using OAuth 1 (RFC5849)a__qualname__uutf-8a__init__uOAuth1.__init__a__call__uOAuth1.__call__a__orig_bases__urequests_oauthlib\oauth1_auth.pyu<module requests_oauthlib.oauth1_auth>Ta__class__Taselfwracontent_typeais_form_encodedaheadersw_Taselfaclient_keyaclient_secretaresource_owner_keyaresource_owner_secretacallback_uriasignature_methodasignature_typearsa_keyaverifieradecodingaclient_classaforce_include_bodyakwargs.requests_oauthlib.oauth1_sessionK4a_urldecodeajsonlaloadsuParse query or json to python dictionaryaTokenRequestDenieda__init__aresponseastatus_codeuFor backwards-compatibility purposesaTokenMissingaOAuth1SessionaOAuth1aclient_secretaresource_owner_keyaresource_owner_secretacallback_uriasignature_methodasignature_typearsa_keyaverifieraclient_classaforce_include_bodya_clientaauthuConstruct the OAuth 1 session.

        :param client_key: A client specific identifier.
        :param client_secret: A client specific secret used to create HMAC and
                              plaintext signatures.
        :param resource_owner_key: A resource owner key, also referred to as
                                   request token or access token depending on
                                   when in the workflow it is used.
        :param resource_owner_secret: A resource owner secret obtained with
                                      either a request or access token. Often
                                      referred to as token secret.
        :param callback_uri: The URL the user is redirect back to after
                             authorization.
        :param signature_method: Signature methods determine how the OAuth
                                 signature is created. The three options are
                                 oauthlib.oauth1.SIGNATURE_HMAC (default),
                                 oauthlib.oauth1.SIGNATURE_RSA and
                                 oauthlib.oauth1.SIGNATURE_PLAIN.
        :param signature_type: Signature type decides where the OAuth
                               parameters are added. Either in the
                               Authorization header (default) or to the URL
                               query parameters or the request body. Defined as
                               oauthlib.oauth1.SIGNATURE_TYPE_AUTH_HEADER,
                               oauthlib.oauth1.SIGNATURE_TYPE_QUERY and
                               oauthlib.oauth1.SIGNATURE_TYPE_BODY
                               respectively.
        :param rsa_key: The private RSA key as a string. Can only be used with
                        signature_method=oauthlib.oauth1.SIGNATURE_RSA.
        :param verifier: A verifier string to prove authorization was granted.
        :param client_class: A subclass of `oauthlib.oauth1.Client` to use with
                             `requests_oauthlib.OAuth1` instead of the default
        :param force_include_body: Always include the request body in the
                                   signature creation.
        :param **kwargs: Additional keyword arguments passed to `OAuth1`
        aclientaoauth_tokenatoken_dictaoauth_token_secretaoauth_verifiera_populate_attributesaSIGNATURE_RSAuBoolean that indicates whether this session has an OAuth token
        or not. If `self.authorized` is True, you can reasonably expect
        OAuth-protected requests to the resource to succeed. If
        `self.authorized` is False, you need the user to go through the OAuth
        authentication dance before OAuth-protected requests to the resource
        will succeed.
        alogadebuguAdding parameters %s to url %saadd_params_to_uriaitemsuCreate an authorization URL by appending request_token and optional
        kwargs to url.

        This is the second step in the OAuth 1 workflow. The user should be
        redirected to this authorization URL, grant access to you, and then
        be redirected back to you. The redirection back can either be specified
        during client registration or by supplying a callback URI per request.

        :param url: The authorization endpoint URL.
        :param request_token: The previously obtained request token.
        :param kwargs: Optional parameters to append to the URL.
        :returns: The authorization URL with new parameters embedded.

        An example using a registered default callback URI.

        >>> request_token_url = 'https://api.twitter.com/oauth/request_token'
        >>> authorization_url = 'https://api.twitter.com/oauth/authorize'
        >>> oauth_session = OAuth1Session('client-key', client_secret='secret')
        >>> oauth_session.fetch_request_token(request_token_url)
        {
            'oauth_token': 'sdf0o9823sjdfsdf',
            'oauth_token_secret': '2kjshdfp92i34asdasd',
        }
        >>> oauth_session.authorization_url(authorization_url)
        'https://api.twitter.com/oauth/authorize?oauth_token=sdf0o9823sjdfsdf'
        >>> oauth_session.authorization_url(authorization_url, foo='bar')
        'https://api.twitter.com/oauth/authorize?oauth_token=sdf0o9823sjdfsdf&foo=bar'

        An example using an explicit callback URI.

        >>> request_token_url = 'https://api.twitter.com/oauth/request_token'
        >>> authorization_url = 'https://api.twitter.com/oauth/authorize'
        >>> oauth_session = OAuth1Session('client-key', client_secret='secret', callback_uri='https://127.0.0.1/callback')
        >>> oauth_session.fetch_request_token(request_token_url)
        {
            'oauth_token': 'sdf0o9823sjdfsdf',
            'oauth_token_secret': '2kjshdfp92i34asdasd',
        }
        >>> oauth_session.authorization_url(authorization_url)
        'https://api.twitter.com/oauth/authorize?oauth_token=sdf0o9823sjdfsdf&oauth_callback=https%3A%2F%2F127.0.0.1%2Fcallback'
        w arealma_fetch_tokenTuResetting callback_uri and realm (not needed in next phase).uFetch a request token.

        This is the first step in the OAuth 1 workflow. A request token is
        obtained by making a signed post request to url. The token is then
        parsed from the application/x-www-form-urlencoded response and ready
        to be used to construct an authorization url.

        :param url: The request token endpoint URL.
        :param realm: A list of realms to request access to.
        :param \*\*request_kwargs: Optional arguments passed to ''post''
            function in ''requests.Session''
        :returns: The response in dict format.

        Note that a previously set callback_uri will be reset for your
        convenience, or else signature creation will be incorrect on
        consecutive requests.

        >>> request_token_url = 'https://api.twitter.com/oauth/request_token'
        >>> oauth_session = OAuth1Session('client-key', client_secret='secret')
        >>> oauth_session.fetch_request_token(request_token_url)
        {
            'oauth_token': 'sdf0o9823sjdfsdf',
            'oauth_token_secret': '2kjshdfp92i34asdasd',
        }
        aselfaVerifierMissingTuNo client verifier has been set.TuResetting verifier attribute, should not be used anymore.uFetch an access token.

        This is the final step in the OAuth 1 workflow. An access token is
        obtained using all previously obtained credentials, including the
        verifier from the authorization step.

        Note that a previously set verifier will be reset for your
        convenience, or else signature creation will be incorrect on
        consecutive requests.

        >>> access_token_url = 'https://api.twitter.com/oauth/access_token'
        >>> redirect_response = 'https://127.0.0.1/callback?oauth_token=kjerht2309uf&oauth_token_secret=lsdajfh923874&oauth_verifier=w34o8967345'
        >>> oauth_session = OAuth1Session('client-key', client_secret='secret')
        >>> oauth_session.parse_authorization_response(redirect_response)
        {
            'oauth_token: 'kjerht2309u',
            'oauth_token_secret: 'lsdajfh923874',
            'oauth_verifier: 'w34o8967345',
        }
        >>> oauth_session.fetch_access_token(access_token_url)
        {
            'oauth_token': 'sdf0o9823sjdfsdf',
            'oauth_token_secret': '2kjshdfp92i34asdasd',
        }
        uParsing token from query part of url %saurldecodeaurlparseaqueryTuUpdating internal client token attribute.atokenuExtract parameters from the post authorization redirect response URL.

        :param url: The full URL that resulted from the user being redirected
                    back from the OAuth provider to you, the client.
        :returns: A dict of parameters extracted from the URL.

        >>> redirect_response = 'https://127.0.0.1/callback?oauth_token=kjerht2309uf&oauth_token_secret=lsdajfh923874&oauth_verifier=w34o8967345'
        >>> oauth_session = OAuth1Session('client-key', client_secret='secret')
        >>> oauth_session.parse_authorization_response(redirect_response)
        {
            'oauth_token: 'kjerht2309u',
            'oauth_token_secret: 'lsdajfh923874',
            'oauth_verifier: 'w34o8967345',
        }
        uResponse does not contain a token: {resp}TarespuFetching token from %s using client %sapostluToken request failed with code %s, response was '%s'.atextuDecoding token from response "%s"astripuUnable to decode token from token response. This is commonly caused by an unsuccessful request where a non urlencoded error message is returned. The decoding error was %suObtained token %sTuUpdating internal client attributes from token data.aAuthorizationaheadersapopTaAuthorizationtaprepare_authu
        When being redirected we should always strip Authorization
        header, since nonce may not be reused as per OAuth spec.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aunicode_literalsTaurlparseuurllib.parsealogginguoauthlib.commonTaadd_params_to_uriTaurldecodeuoauthlib.oauth1TaSIGNATURE_HMACaSIGNATURE_RSAaSIGNATURE_TYPE_AUTH_HEADERaSIGNATURE_HMACaSIGNATURE_TYPE_AUTH_HEADERarequestsuTaOAuth1lagetLoggerTurequests_oauthlib.oauth1_sessionTEValueErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests_oauthlib.oauth1_sessiona__module__a__qualname__uTokenRequestDenied.__init__apropertyuTokenRequestDenied.status_codea__orig_bases__uTokenMissing.__init__aSessionuRequest signing and convenience methods for the oauth dance.

    What is the difference between OAuth1Session and OAuth1?

    OAuth1Session actually uses OAuth1 internally and its purpose is to assist
    in the OAuth workflow through convenience methods to prepare authorization
    URLs and parse the various token and redirection responses. It also provide
    rudimentary validation of responses.

    An example of the OAuth workflow using a basic CLI app and Twitter.

    >>> # Credentials obtained during the registration.
    >>> client_key = 'client key'
    >>> client_secret = 'secret'
    >>> callback_uri = 'https://127.0.0.1/callback'
    >>>
    >>> # Endpoints found in the OAuth provider API documentation
    >>> request_token_url = 'https://api.twitter.com/oauth/request_token'
    >>> authorization_url = 'https://api.twitter.com/oauth/authorize'
    >>> access_token_url = 'https://api.twitter.com/oauth/access_token'
    >>>
    >>> oauth_session = OAuth1Session(client_key,client_secret=client_secret, callback_uri=callback_uri)
    >>>
    >>> # First step, fetch the request token.
    >>> oauth_session.fetch_request_token(request_token_url)
    {
        'oauth_token': 'kjerht2309u',
        'oauth_token_secret': 'lsdajfh923874',
    }
    >>>
    >>> # Second step. Follow this link and authorize
    >>> oauth_session.authorization_url(authorization_url)
    'https://api.twitter.com/oauth/authorize?oauth_token=sdf0o9823sjdfsdf&oauth_callback=https%3A%2F%2F127.0.0.1%2Fcallback'
    >>>
    >>> # Third step. Fetch the access token
    >>> redirect_response = raw_input('Paste the full redirect URL here.')
    >>> oauth_session.parse_authorization_response(redirect_response)
    {
        'oauth_token: 'kjerht2309u',
        'oauth_token_secret: 'lsdajfh923874',
        'oauth_verifier: 'w34o8967345',
    }
    >>> oauth_session.fetch_access_token(access_token_url)
    {
        'oauth_token': 'sdf0o9823sjdfsdf',
        'oauth_token_secret': '2kjshdfp92i34asdasd',
    }
    >>> # Done. You can now make OAuth requests.
    >>> status_url = 'http://api.twitter.com/1/statuses/update.json'
    >>> new_status = {'status':  'hello world!'}
    >>> oauth_session.post(status_url, data=new_status)
    <Response [200]>
    uOAuth1Session.__init__uOAuth1Session.tokenasetteraauthorizeduOAuth1Session.authorizedTnaauthorization_urluOAuth1Session.authorization_urlafetch_request_tokenuOAuth1Session.fetch_request_tokenafetch_access_tokenuOAuth1Session.fetch_access_tokenaparse_authorization_responseuOAuth1Session.parse_authorization_responseuOAuth1Session._populate_attributesuOAuth1Session._fetch_tokenarebuild_authuOAuth1Session.rebuild_authurequests_oauthlib\oauth1_session.pyu<module requests_oauthlib.oauth1_session>Ta__class__Taselfaclient_keyaclient_secretaresource_owner_keyaresource_owner_secretacallback_uriasignature_methodasignature_typearsa_keyaverifieraclient_classaforce_include_bodyakwargsa__class__Taselfamessagearesponsea__class__Taselfaurlarequest_kwargswraerroratokenweTaselfatokenTaselfaurlarequest_tokenakwargsTaselfTaselfaurlaverifierarequest_kwargsatokenTaselfaurlarealmarequest_kwargsatokenTaselfaurlatokenTaselfaprepared_requestaresponseTaselfaoauth_tokenaoauth_token_secretaoauth_verifieratoken_dictTaselfavalueTabodyajson.requests_oauthlib.oauth2_authP6aWebApplicationClientTatokena_clientatokenaitemsutoo many values to unpack (expected 2)aselfuConstruct a new OAuth 2 authorization object.

        :param client_id: Client id obtained during registration
        :param client: :class:`oauthlib.oauth2.Client` to be used. Default is
                       WebApplicationClient which is useful for any
                       hosted application but not mobile or desktop.
        :param token: Token dictionary, must include access_token
                      and token_type.
        ais_secure_transportaurlaInsecureTransportErroraadd_tokenamethodabodyaheadersTahttp_methodabodyaheadersutoo many values to unpack (expected 3)uAppend an OAuth 2 token to the request.

        Note that currently HTTPS is required for all requests. There may be
        a token type that allows for plain HTTP in the future and then this
        should be updated to allow plain HTTP on a white list basis.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aunicode_literalsuoauthlib.oauth2TaWebApplicationClientaInsecureTransportErrorlTais_secure_transporturequests.authTaAuthBaseaAuthBasea__prepare__aOAuth2a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests_oauthlib.oauth2_autha__module__uAdds proof of authorization (OAuth2 token) to the request.a__qualname__Tnnna__init__uOAuth2.__init__a__call__uOAuth2.__call__a__orig_bases__urequests_oauthlib\oauth2_auth.pyu<module requests_oauthlib.oauth2_auth>Ta__class__TaselfwrTaselfaclient_idaclientatokenwkwvu.requests_oauthlib.oauth2_session-aTokenUpdateda__init__atokenaOAuth2SessionaWebApplicationClientTatokena_clientascopearedirect_uriagenerate_tokenastatea_stateaauto_refresh_urlaauto_refresh_kwargsatoken_updateru<lambda>uOAuth2Session.__init__.<locals>.<lambda>aauthDaaccess_token_responsearefresh_token_responseaprotected_requestSppacompliance_hookuConstruct a new OAuth 2 client session.

        :param client_id: Client id obtained during registration
        :param client: :class:`oauthlib.oauth2.Client` to be used. Default is
                       WebApplicationClient which is useful for any
                       hosted application but not mobile or desktop.
        :param scope: List of scopes you wish to request access to
        :param redirect_uri: Redirect URI you registered as callback
        :param token: Token dictionary, must include access_token
                      and token_type.
        :param state: State string used to prevent CSRF. This will be given
                      when creating the authorization url and must be supplied
                      when parsing the authorization response.
                      Can be either a string or a no argument callable.
        :auto_refresh_url: Refresh token endpoint URL, must be HTTPS. Supply
                           this if you wish the client to automatically refresh
                           your access tokens.
        :auto_refresh_kwargs: Extra arguments to pass to the refresh token
                              endpoint.
        :token_updater: Method with one argument, token, to be used to update
                        your token database on automatic token refresh. If not
                        set a TokenUpdated warning will be raised when a token
                        has been refreshed. This warning will carry the token
                        in its token argument.
        :param kwargs: Arguments to pass to the Session constructor.
        alogadebuguGenerated new state %s.uRe-using previously supplied state %s.uGenerates a state string to be used in authorizations.aclient_idapopulate_token_attributesaaccess_tokenuBoolean that indicates whether this session has an OAuth token
        or not. If `self.authorized` is True, you can reasonably expect
        OAuth-protected requests to the resource to succeed. If
        `self.authorized` is False, you need the user to go through the OAuth
        authentication dance before OAuth-protected requests to the resource
        will succeed.
        anew_stateaselfaprepare_request_uriuForm an authorization URL.

        :param url: Authorization endpoint url, must be HTTPS.
        :param state: An optional state string for CSRF protection. If not
                      given it will be generated for you.
        :param kwargs: Extra parameters to include.
        :return: authorization_url, state
        ais_secure_transportaInsecureTransportErroraparse_request_uri_responseTastateacodeuPlease supply either code or authorization_response parameters.aLegacyApplicationClientu`LegacyApplicationClient` requires both the `username` and `password` parameters.uThe required parameter `username` was supplied, but `password` was not.ausernameakwargsapassworduEncoding `client_id` "%s" with `client_secret` as Basic auth credentials.uarequestsaHTTPBasicAuthaclient_secretaprepare_request_bodyabodyainclude_client_idDaAcceptuContent-Typeuapplication/jsonuapplication/x-www-form-urlencoded;charset=UTF-8aupperaPOSTaurldecodeaparamsadataaGETuThe method kwarg must be POST or GET.arequestamethodaurlatimeoutaheadersaverifyaproxiesacertarequest_kwargsuRequest to fetch token completed with status %s.astatus_codeuRequest url was %suRequest headers were %suRequest body was %suResponse headers were %s and content %s.atextuInvoking %d token response hooks.aaccess_token_responseuInvoking hook %s.wraparse_request_body_responseTascopeuObtained token %s.uGeneric method for fetching an access token from the token endpoint.

        If you are using the MobileApplicationClient you will want to use
        `token_from_fragment` instead of `fetch_token`.

        The current implementation enforces the RFC guidelines.

        :param token_url: Token endpoint URL, must use HTTPS.
        :param code: Authorization code (used by WebApplicationClients).
        :param authorization_response: Authorization response URL, the callback
                                       URL of the request back to you. Used by
                                       WebApplicationClients instead of code.
        :param body: Optional application/x-www-form-urlencoded body to add the
                     include in the token request. Prefer kwargs over body.
        :param auth: An auth tuple or method as accepted by `requests`.
        :param username: Username required by LegacyApplicationClients to appear
                         in the request body.
        :param password: Password required by LegacyApplicationClients to appear
                         in the request body.
        :param method: The HTTP method used to make the request. Defaults
                       to POST, but may also be GET. Other methods should
                       be added as needed.
        :param force_querystring: If True, force the request body to be sent
            in the querystring instead.
        :param timeout: Timeout of the request in seconds.
        :param headers: Dict to default request headers with.
        :param verify: Verify SSL certificate.
        :param proxies: The `proxies` argument is passed onto `requests`.
        :param include_client_id: Should the request body include the
                                  `client_id` parameter. Default is `None`,
                                  which will attempt to autodetect. This can be
                                  forced to always include (True) or never
                                  include (False).
        :param client_secret: The `client_secret` paired to the `client_id`.
                              This is generally required unless provided in the
                              `auth` tuple. If the value is `None`, it will be
                              omitted from the request, however if the value is
                              an empty string, an empty string will be sent.
        :param cert: Client certificate to send for OAuth 2.0 Mutual-TLS Client
                     Authentication (draft-ietf-oauth-mtls). Can either be the
                     path of a file containing the private key and certificate or
                     a tuple of two filenames for certificate and key.
        :param kwargs: Extra parameters to include in the token request.
        :return: A token dict
        uParse token from the URI fragment, used by MobileApplicationClients.

        :param authorization_response: The full URL of the redirect back to you
        :return: A token dict
        uNo token endpoint set for auto_refresh.agetTarefresh_tokenuAdding auto refresh key word arguments %s.aprepare_refresh_bodyarefresh_tokenuPrepared refresh token request body %sapostTadataaauthatimeoutaheadersaverifyawithhold_tokenaproxiesuRequest to refresh token completed with status %s.arefresh_token_responseTuNo new refresh token given. Re-using old.uFetch a new access token using a refresh token.

        :param token_url: The token endpoint, must be HTTPS.
        :param refresh_token: The refresh_token to use.
        :param body: Optional application/x-www-form-urlencoded body to add the
                     include in the token request. Prefer kwargs over body.
        :param auth: An auth tuple or method as accepted by `requests`.
        :param timeout: Timeout of the request in seconds.
        :param headers: A dict of headers to be used by `requests`.
        :param verify: Verify SSL certificate.
        :param proxies: The `proxies` argument will be passed to `requests`.
        :param kwargs: Extra parameters to include in the token request.
        :return: A token dict
        uInvoking %d protected resource request hooks.aprotected_requestutoo many values to unpack (expected 3)uAdding token %s to request.aadd_tokenTahttp_methodabodyaheadersaTokenExpiredErroruAuto refresh is set, attempting to refresh at %s.uEncoding client_id "%s" with client_secret as Basic auth credentials.uUpdating token to %s using %s.uRequesting url %s using method %s.uSupplying headers %s and data %suPassing through key word arguments %s.uIntercept all requests and add the OAuth 2 token if present.uHook type %s is not in %s.aadduRegister a hook for request/response tweaking.

        Available hooks are:
            access_token_response invoked before token parsing.
            refresh_token_response invoked before refresh token parsing.
            protected_request invoked before making a request.

        If you find a new hook is needed please send a GitHub PR request
        or open an issue.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aunicode_literalsaloggingluoauthlib.commonTagenerate_tokenaurldecodeuoauthlib.oauth2TaWebApplicationClientaInsecureTransportErrorTaLegacyApplicationClientTaTokenExpiredErrorais_secure_transportagetLoggerTurequests_oauthlib.oauth2_sessionaWarninga__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests_oauthlib.oauth2_sessiona__module__a__qualname__uTokenUpdated.__init__a__orig_bases__aSessionuVersatile OAuth 2 extension to :class:`requests.Session`.

    Supports any grant type adhering to :class:`oauthlib.oauth2.Client` spec
    including the four core OAuth 2 grants.

    Can be used to create authorization urls, fetch tokens and access protected
    resources using the :class:`requests.Session` interface you are used to.

    - :class:`oauthlib.oauth2.WebApplicationClient` (default): Authorization Code Grant
    - :class:`oauthlib.oauth2.MobileApplicationClient`: Implicit Grant
    - :class:`oauthlib.oauth2.LegacyApplicationClient`: Password Credentials Grant
    - :class:`oauthlib.oauth2.BackendApplicationClient`: Client Credentials Grant

    Note that the only time you will be using Implicit Grant from python is if
    you are driving a user agent able to obtain URL fragments.
    TnnnnnnnnnuOAuth2Session.__init__uOAuth2Session.new_stateapropertyuOAuth2Session.client_idasetteradeleteruOAuth2Session.tokenuOAuth2Session.access_tokenaauthorizeduOAuth2Session.authorizedTnaauthorization_urluOAuth2Session.authorization_urlTnnunnnaPOSTFnntnnnnafetch_tokenuOAuth2Session.fetch_tokenatoken_from_fragmentuOAuth2Session.token_from_fragmentTnunnntnuOAuth2Session.refresh_tokenTnnFnnuOAuth2Session.requestaregister_compliance_hookuOAuth2Session.register_compliance_hookurequests_oauthlib\oauth2_session.pyTwru<module requests_oauthlib.oauth2_session>Ta__class__Taselfaclient_idaclientaauto_refresh_urlaauto_refresh_kwargsascopearedirect_uriatokenastateatoken_updaterakwargsa__class__Taselfatokena__class__TaselfTaselfavalueTaselfaurlastateakwargsTaselfatoken_urlacodeaauthorization_responseabodyaauthausernameapasswordamethodaforce_querystringatimeoutaheadersaverifyaproxiesainclude_client_idaclient_secretacertakwargsaclient_idarequest_kwargswrahookTaselfatoken_urlarefresh_tokenabodyaauthatimeoutaheadersaverifyaproxiesakwargswrahookTaselfahook_typeahookT
aselfamethodaurladataaheadersawithhold_tokenaclient_idaclient_secretakwargsahookaauthatokena__class__Taselfaauthorization_response.rsa.asn1`1uASN.1 definitions.

Not all ASN.1-handling code use these definitions, but when it does, they should be here.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__upyasn1.typeTaunivanamedtypeataglaunivanamedtypeatagaSequencea__prepare__aPubKeyHeadera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ursa.asn1a__module__a__qualname__aNamedTypesaNamedTypeaoidaObjectIdentifieraparametersaNullacomponentTypea__orig_bases__aOpenSSLPubKeyaheaderakeyaOctetStringasubtypeaTagTlplTatagClassatagFormatatagIdTaimplicitTagaAsnPubKeyuASN.1 contents of DER encoded public key:

    RSAPublicKey ::= SEQUENCE {
         modulus           INTEGER,  -- n
         publicExponent    INTEGER,  -- e
    amodulusaIntegerapublicExponentursa\asn1.pyu<module rsa.asn1>Ta__class__u.rsa.commonyKa__class__a__init__u%d and %d are not relatively prime, divider=%iwawbwdabit_lengthubit_size(num) only supports integers, not %ru
    Number of bits needed to represent a integer excluding any prefix
    0 bits.

    Usage::

        >>> bit_size(1023)
        10
        >>> bit_size(1024)
        11
        >>> bit_size(1025)
        11

    :param num:
        Integer value. If num is 0, returns 0. Only the absolute value of the
        number is considered. Therefore, signed integers will be abs(num)
        before the number's bit length is determined.
    :returns:
        Returns the number of bits in the integer.
    llaceil_divabit_sizelu
    Returns the number of bytes required to hold a specific long number.

    The number of bytes is rounded up.

    Usage::

        >>> byte_size(1 << 1023)
        128
        >>> byte_size((1 << 1024) - 1)
        128
        >>> byte_size(1 << 1024)
        129

    :param number:
        An unsigned integer
    :returns:
        The number of bytes required to hold a specific long number.
    utoo many values to unpack (expected 2)u
    Returns the ceiling function of a division between `num` and `div`.

    Usage::

        >>> ceil_div(100, 7)
        15
        >>> ceil_div(100, 10)
        10
        >>> ceil_div(1, 4)
        1

    :param num: Division's numerator, a number
    :param div: Division's divisor, a number

    :return: Rounded up result of the division between the parameters.
    alxwxalywyuReturns a tuple (r, i, j) such that r = gcd(a, b) = ia + jbaextended_gcdutoo many values to unpack (expected 3)aNotRelativePrimeErroruReturns the inverse of x % n under multiplication, a.k.a x^-1 (mod n)

    >>> inverse(7, 4)
    3
    >>> (inverse(143, 4) * 143) % 4
    1
    wmainverseuChinese Remainder Theorem.

    Calculates x such that x = a[i] (mod m[i]) for each i.

    :param a_values: the a-values of the above equation
    :param modulo_values: the m-values of the above equation
    :returns: x such that x = a[i] (mod m[i]) for each i


    >>> crt([2, 3], [3, 5])
    8

    >>> crt([2, 3, 2], [3, 5, 7])
    23

    >>> crt([2, 3, 0], [7, 11, 15])
    135
    uCommon functionality shared by several modules.a__doc__a__file__a__spec__aoriginahas_locationa__cached__atypingTEValueErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ursa.commona__module__a__qualname__TuaintamsgastrareturnuNotRelativePrimeError.__init__a__orig_bases__DanumareturnOintpDanumberareturnOintpabyte_sizeDanumadivareturnOintppaTupleTOintppDwxwnareturnOintppaa_valuesaIterableamodulo_valuesacrtursa\common.pyu<module rsa.common>Ta__class__Taselfwawbwdamsga__class__TanumaexTanumberTanumadivaquantaamodTaa_valuesamodulo_valueswmwxamoduloam_iaa_iaM_iainvTwawbwxwyalxalyaoaaobwqTwxwnadividerainvw_u.rsaI*uRSA module

Module for calculating large primes, and RSA encryption, decryption, signing
and verification. Includes generating public and private keys.

WARNING: this implementation does not use compression of the cleartext input to
prevent repetitions, or other common security improvements. Use with care.

a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_rsau\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ursa.keyTanewkeysaPrivateKeyaPublicKeylanewkeysaPrivateKeyaPublicKeyursa.pkcs1TaencryptadecryptasignaverifyaDecryptionErroraVerificationErrorafind_signature_hashasign_hashacompute_hashaencryptadecryptasignaverifyaDecryptionErroraVerificationErrorafind_signature_hashasign_hashacompute_hashuSybren Stuvel, Barry Mead and Yesudeep Mangalapillya__author__u2022-07-20a__date__u4.9a__version__LanewkeysaencryptadecryptasignaverifyaPublicKeyaPrivateKeyaDecryptionErroraVerificationErrorafind_signature_hashacompute_hashasign_hasha__all__ursa\__init__.pyu<module rsa>u.rsa.coreu%s should be an integer, not %saassert_intamessageaekeywnluOnly non-negative numbers are supporteduThe message %i is too long for n=%iapowuEncrypts a message using encryption key 'ekey', working modulo nacyphertextadkeyuDecrypts a cypher text using the decryption key 'dkey', working modulo nuCore mathematical operations.

This is the actual core RSA implementation, which is only defined
mathematically on integers.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__DavaranameareturnOintOstrnDamessageaekeywnareturnOintpppaencrypt_intDacyphertextadkeywnareturnOintpppadecrypt_intursa\core.pyu<module rsa.core>TavaranameTacyphertextadkeywnamessageTamessageaekeywnu.rsa.keyS@Lwnwelablindfacablindfac_inverseathreadingaLockamutexaPEMa_load_pkcs1_pemaDERa_load_pkcs1_dera_assert_format_existsuLoads a key in PKCS#1 DER or PEM format.

        :param keyfile: contents of a DER- or PEM-encoded file that contains
            the key.
        :type keyfile: bytes
        :param format: the format of the file to load; 'PEM' or 'DER'
        :type format: str

        :return: the loaded key
        :rtype: AbstractKey
        u, asortedakeysuUnsupported format: %r, try one of %suChecks whether the given file format exists in 'methods'.a_save_pkcs1_pema_save_pkcs1_deruSaves the key in PKCS#1 DER or PEM format.

        :param format: the format to save; 'PEM' or 'DER'
        :type format: str
        :returns: the DER- or PEM-encoded key.
        :rtype: bytes
        a_update_blinding_factorutoo many values to unpack (expected 2)apowuPerforms blinding on the message.

        :param message: the message, as integer, to blind.
        :param r: the random number to blind with.
        :return: tuple (the blinded message, the inverse of the used blinding factor)

        The blinding is such that message = unblind(decrypt(blind(encrypt(message))).

        See https://en.wikipedia.org/wiki/Blinding_%28cryptography%29
        uPerforms blinding on the message using random number 'blindfac_inverse'.

        :param blinded: the blinded message, as integer, to unblind.
        :param blindfac: the factor to unblind with.
        :return: the original message.

        The blinding is such that message = unblind(decrypt(blind(encrypt(message))).

        See https://en.wikipedia.org/wiki/Blinding_%28cryptography%29
        ;lllarsaarandnumarandintaselflaprimeaare_relatively_primeuunable to find blinding factora__enter__a__exit__la_initial_blinding_factoracommonainverselTnnnuUpdate blinding factors.

        Computing a blinding factor is expensive, so instead this function
        does this once, then updates the blinding factor as per section 9
        of 'A Timing Attack against RSA with the Chinese Remainder Theorem'
        by Werner Schindler.
        See https://tls.mbed.org/public/WSchindler-RSA_Timing_Attack.pdf

        :return: the new blinding factor and its inverse.
        uPublicKey(%i, %i)uReturns the key as tuple for pickling.aAbstractKeya__init__uSets the key from tuple.aPublicKeyupyasn1.codec.derTadecoderadecoderursa.asn1TaAsnPubKeyaAsnPubKeyadecodeTaasn1SpecamodulusapublicExponentTwnweuLoads a key in PKCS#1 DER format.

        :param keyfile: contents of a DER-encoded file that contains the public
            key.
        :return: a PublicKey object

        First let's construct a DER encoded key:

        >>> import base64
        >>> b64der = 'MAwCBQCNGmYtAgMBAAE='
        >>> der = base64.standard_b64decode(b64der)

        This loads the file:

        >>> PublicKey._load_pkcs1_der(der)
        PublicKey(2367317549, 65537)

        TaencoderaencoderasetComponentByNameaencodeuSaves the public key in PKCS#1 DER format.

        :returns: the DER-encoded public key.
        :rtype: bytes
        apemaload_pemuRSA PUBLIC KEYuLoads a PKCS#1 PEM-encoded public key file.

        The contents of the file before the "-----BEGIN RSA PUBLIC KEY-----" and
        after the "-----END RSA PUBLIC KEY-----" lines is ignored.

        :param keyfile: contents of a PEM-encoded file that contains the public
            key.
        :return: a PublicKey object
        asave_pemuSaves a PKCS#1 PEM-encoded public key file.

        :return: contents of a PEM-encoded file that contains the public key.
        :rtype: bytes
        uPUBLIC KEYaload_pkcs1_openssl_deruLoads a PKCS#1.5 PEM-encoded public key file from OpenSSL.

        These files can be recognised in that they start with BEGIN PUBLIC KEY
        rather than BEGIN RSA PUBLIC KEY.

        The contents of the file before the "-----BEGIN PUBLIC KEY-----" and
        after the "-----END PUBLIC KEY-----" lines is ignored.

        :param keyfile: contents of a PEM-encoded file that contains the public
            key, from OpenSSL.
        :type keyfile: bytes
        :return: a PublicKey object
        TaOpenSSLPubKeyaOpenSSLPubKeyupyasn1.typeTaunivaunivaheaderaoidaObjectIdentifierTu1.2.840.113549.1.1.1uThis is not a DER-encoded OpenSSL-compatible public keyakey:lnnuLoads a PKCS#1 DER-encoded public key file from OpenSSL.

        :param keyfile: contents of a DER-encoded file that contains the public
            key, from OpenSSL.
        :return: a PublicKey object
        wdwpwqaexp1aexp2acoefuPrivateKey(%i, %i, %i, %i, %i)utoo many values to unpack (expected 8)aPrivateKeyablindaunblinduDecrypts the message using blinding to prevent side-channel attacks.

        :param encrypted: the encrypted message
        :type encrypted: int

        :returns: the decrypted message
        :rtype: int
        acoreaencrypt_intuEncrypts the message using blinding to prevent side-channel attacks.

        :param message: the message to encrypt
        :type message: int

        :returns: the encrypted message
        :rtype: int
        uUnable to read this file, version %s != 0:lln:llnutoo many values to unpack (expected 3)awarningsawarnuYou have provided a malformed keyfile. Either the exponents or the coefficient are incorrect. Using the correct values instead.aUserWarninguLoads a key in PKCS#1 DER format.

        :param keyfile: contents of a DER-encoded file that contains the private
            key.
        :type keyfile: bytes
        :return: a PrivateKey object

        First let's construct a DER encoded key:

        >>> import base64
        >>> b64der = 'MC4CAQACBQDeKYlRAgMBAAECBQDHn4npAgMA/icCAwDfxwIDANcXAgInbwIDAMZt'
        >>> der = base64.standard_b64decode(b64der)

        This loads the file:

        >>> PrivateKey._load_pkcs1_der(der)
        PrivateKey(3727264081, 65537, 3349121513, 65063, 57287)

        TaunivanamedtypeanamedtypeaSequencea__prepare__aAsnPrivKeya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ursa.keya__module__uPrivateKey._save_pkcs1_der.<locals>.AsnPrivKeya__qualname__aNamedTypesaNamedTypeaversionaIntegeraprivateExponentaprime1aprime2aexponent1aexponent2acoefficientacomponentTypea__orig_bases__TaversionluSaves the private key in PKCS#1 DER format.

        :returns: the DER-encoded private key.
        :rtype: bytes
        cRSA PRIVATE KEYuLoads a PKCS#1 PEM-encoded private key file.

        The contents of the file before the "-----BEGIN RSA PRIVATE KEY-----" and
        after the "-----END RSA PRIVATE KEY-----" lines is ignored.

        :param keyfile: contents of a PEM-encoded file that contains the private
            key.
        :type keyfile: bytes
        :return: a PrivateKey object
        uSaves a PKCS#1 PEM-encoded private key file.

        :return: contents of a PEM-encoded file that contains the private key.
        :rtype: bytes
        lDwpwqareturnOintpObooluReturns True iff p and q are acceptable:

        - p and q differ
        - (p * q) has the right nr of bits (when accurate=True)
        ais_acceptableufind_p_q.<locals>.is_acceptableachange_pagetprime_funcapbitsaqbitsamaxaminuReturns a tuple of two different primes of nbits bits each.

    The resulting p * q has exactly 2 * nbits bits, and the returned p and q
    will not be equal.

    :param nbits: the number of bits in each of p and q.
    :param getprime_func: the getprime function, defaults to
        :py:func:`rsa.prime.getprime`.

        *Introduced in Python-RSA 3.1*

    :param accurate: whether to enable accurate mode or not.
    :returns: (p, q), where p > q

    >>> (p, q) = find_p_q(128)
    >>> from rsa import common
    >>> common.bit_size(p * q)
    256

    When not in accurate mode, the number of bits can be slightly less

    >>> (p, q) = find_p_q(128, accurate=False)
    >>> from rsa import common
    >>> common.bit_size(p * q) <= 256
    True
    >>> common.bit_size(p * q) > 240
    True

    aaccurateabit_sizeatotal_bitsaNotRelativePrimeErrorue (%d) and phi_n (%d) are not relatively prime (divider=%i)Tamsgue (%d) and d (%d) are not mult. inv. modulo phi_n (%d)uCalculates an encryption and a decryption key given p, q and an exponent,
    and returns them as a tuple (e, d)

    :param p: the first large prime
    :param q: the second large prime
    :param exponent: the exponent for the key; only change this if you know
        what you're doing, as the exponent influences how difficult your
        private key can be cracked. A very common choice for e is 65537.
    :type exponent: int

    acalculate_keys_custom_exponentaDEFAULT_EXPONENTuCalculates an encryption and a decryption key given p and q, and
    returns them as a tuple (e, d)

    :param p: the first large prime
    :param q: the second large prime

    :return: tuple (e, d) with the encryption and decryption exponents.
    afind_p_qanbitsaexponentTaexponentuGenerate RSA keys of nbits bits. Returns (p, q, e, d).

    Note: this can take a long time, depending on the key size.

    :param nbits: the total number of bits in ``p`` and ``q``. Both ``p`` and
        ``q`` will use ``nbits/2`` bits.
    :param getprime_func: either :py:func:`rsa.prime.getprime` or a function
        with similar signature.
    :param exponent: the exponent for the key; only change this if you know
        what you're doing, as the exponent influences how difficult your
        private key can be cracked. A very common choice for e is 65537.
    :type exponent: int
    uKey too smalluPool size (%i) should be >= 1TaparallelaparallelDanbitsareturnOintpunewkeys.<locals>.getprime_funcagetprimeagen_keysTaaccurateaexponentutoo many values to unpack (expected 4)uGenerates public and private keys, and returns them as (pub, priv).

    The public key is also known as the 'encryption key', and is a
    :py:class:`rsa.PublicKey` object. The private key is also known as the
    'decryption key' and is a :py:class:`rsa.PrivateKey` object.

    :param nbits: the number of bits required to store ``n = p*q``.
    :param accurate: when True, ``n`` will have exactly the number of bits you
        asked for. However, this makes key generation much slower. When False,
        `n`` may have slightly less bits.
    :param poolsize: the number of processes to use to generate the prime
        numbers. If set to a number > 1, a parallel algorithm will be used.
        This requires Python 2.6 or newer.
    :param exponent: the exponent for the key; only change this if you know
        what you're doing, as the exponent influences how difficult your
        private key can be cracked. A very common choice for e is 65537.
    :type exponent: int

    :returns: a tuple (:py:class:`rsa.PublicKey`, :py:class:`rsa.PrivateKey`)

    The ``poolsize`` parameter was added in *Python-RSA 3.1* and requires
    Python 2.6 or newer.

    apoolsizeTapoolsizeuRSA key generation code.

Create new keys with the newkeys() function. It will give you a PublicKey and a
PrivateKey object.

Loading and saving keys requires the pyasn1 module. This module is imported as
late as possible, such that other functionality will remain working in absence
of pyasn1.

.. note::

    Storing public and private keys via the `pickle` module is possible.
    However, it is insecure to load a key from an untrusted source.
    The pickle module is not secure against erroneous or maliciously
    constructed data. Never unpickle data received from an untrusted
    or unauthenticated source.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__atypingursa.primeursa.pemursa.commonursa.randnumursa.corelaTypeVarTwTaAbstractKeyTaboundwTuAbstract superclass for private and public keys.Twnweablindfacablindfac_inverseamutexa__slots__DwnweareturnOintpnuAbstractKey.__init__aclsaTypeakeyfileareturnuLoads a key in PKCS#1 PEM format, implement in a subclass.

        :param keyfile: contents of a PEM-encoded file that contains
            the public key.
        :type keyfile: bytes

        :return: the loaded key
        :rtype: AbstractKey
        uAbstractKey._load_pkcs1_pemuLoads a key in PKCS#1 PEM format, implement in a subclass.

        :param keyfile: contents of a DER-encoded file that contains
            the public key.
        :type keyfile: bytes

        :return: the loaded key
        :rtype: AbstractKey
        uAbstractKey._load_pkcs1_derDareturnObytesuSaves the key in PKCS#1 PEM format, implement in a subclass.

        :returns: the PEM-encoded key.
        :rtype: bytes
        uAbstractKey._save_pkcs1_pemuSaves the key in PKCS#1 DER format, implement in a subclass.

        :returns: the DER-encoded key.
        :rtype: bytes
        uAbstractKey._save_pkcs1_derTaPEMaformataload_pkcs1uAbstractKey.load_pkcs1afile_formatamethodsaMappingaCallableuAbstractKey._assert_format_existsDaformatareturnOstrObytesasave_pkcs1uAbstractKey.save_pkcs1amessageaTupleTOintpuAbstractKey.blindDablindedablindfac_inverseareturnOintppuAbstractKey.unblindDareturnOintuAbstractKey._initial_blinding_factoruAbstractKey._update_blinding_factorTuRepresents a public RSA key.

    This key is also known as the 'encryption key'. It contains the 'n' and 'e'
    values.

    Supports attributes as well as dictionary-like access. Attribute access is
    faster, though.

    >>> PublicKey(5, 3)
    PublicKey(5, 3)

    >>> key = PublicKey(5, 3)
    >>> key.n
    5
    >>> key['n']
    5
    >>> key.e
    3
    >>> key['e']
    3

    astraintuPublicKey.__getitem__a__repr__uPublicKey.__repr__a__getstate__uPublicKey.__getstate__astatea__setstate__uPublicKey.__setstate__aotheraAnyaboola__eq__uPublicKey.__eq__a__ne__uPublicKey.__ne__a__hash__uPublicKey.__hash__aclassmethodabytesuPublicKey._load_pkcs1_deruPublicKey._save_pkcs1_deruPublicKey._load_pkcs1_pemuPublicKey._save_pkcs1_pemaload_pkcs1_openssl_pemuPublicKey.load_pkcs1_openssl_pemuPublicKey.load_pkcs1_openssl_deruRepresents a private RSA key.

    This key is also known as the 'decryption key'. It contains the 'n', 'e',
    'd', 'p', 'q' and other values.

    Supports attributes as well as dictionary-like access. Attribute access is
    faster, though.

    >>> PrivateKey(3247, 65537, 833, 191, 17)
    PrivateKey(3247, 65537, 833, 191, 17)

    exp1, exp2 and coef will be calculated:

    >>> pk = PrivateKey(3727264081, 65537, 3349121513, 65063, 57287)
    >>> pk.exp1
    55063
    >>> pk.exp2
    10095
    >>> pk.coef
    50797

    Twdwpwqaexp1aexp2acoefuPrivateKey.__init__uPrivateKey.__getitem__uPrivateKey.__repr__uPrivateKey.__getstate__uPrivateKey.__setstate__uPrivateKey.__eq__uPrivateKey.__ne__uPrivateKey.__hash__aencryptedablinded_decryptuPrivateKey.blinded_decryptablinded_encryptuPrivateKey.blinded_encryptuPrivateKey._load_pkcs1_deruPrivateKey._save_pkcs1_deruPrivateKey._load_pkcs1_pemuPrivateKey._save_pkcs1_pemTLOintOintacalculate_keysTOintpppanewkeysa__all__ursa\key.pyu<module rsa.key>Ta__class__Ta__class__anamedtypeaunivTaselfaotherTaselfakeyTaselfTaselfwnweTaselfwnwewdwpwqTaselfastateTafile_formatamethodsaexaformatsTaselfw_ablind_rTaclsakeyfileTaclsakeyfileadecoderaAsnPubKeyaprivw_T
aclsakeyfileadecoderaprivw_aas_intsakeyaexp1aexp2acoefTaclsakeyfileaderTaselfaencoderaAsnPubKeyaasn_keyTaselfaunivanamedtypeaencoderaAsnPrivKeyaasn_keyTaselfaderTaselfamessageablindfacablindfac_inverseablindedTaselfaencryptedablindedablindfac_inverseas1as2whadecryptedTaselfamessageablindedablindfac_inverseaencryptedTwpwqTwpwqaexponentaphi_nwdaexTanbitsagetprime_funcaaccurateatotal_bitsashiftapbitsaqbitswpwqais_acceptableachange_pTanbitsagetprime_funcaaccurateaexponentwpwqwewdTanbitsaparallelapoolsizeTaparallelapoolsizeTwpwqafound_sizeaaccurateatotal_bitsTaaccurateatotal_bitsTaclsakeyfileaformatamethodsamethodTaclsakeyfileaOpenSSLPubKeyadecoderaunivakeyinfow_Tanbitsaaccurateapoolsizeaexponentaparallelagetprime_funcwpwqwewdwnTaselfaformatamethodsamethodTaselfablindedablindfac_inverseu.rsa.parallel-arsaarandnumaread_random_odd_intanbitsaprimeais_primeasendampaPipeTFTaduplexutoo many values to unpack (expected 2)aProcessa_find_primeapipe_sendTatargetaargsastartarecvacloseaterminateuReturns a prime number that can be stored in 'nbits' bits.

    Works in multiple threads at the same time.

    >>> p = getprime(128, 3)
    >>> rsa.prime.is_prime(p-1)
    False
    >>> rsa.prime.is_prime(p)
    True
    >>> rsa.prime.is_prime(p+1)
    False

    >>> from rsa import common
    >>> common.bit_size(p) == 128
    True

    uFunctions for parallel computation on multiple cores.

Introduced in Python-RSA 3.1.

.. note::

    Requires Python 2.6 or newer.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__amultiprocessinglumultiprocessing.connectionTaConnectionaConnectionursa.primeursa.randnumapipeareturnDanbitsapoolsizeareturnOintppagetprimea__all__ursa\parallel.pyu<module rsa.parallel>TanbitsapipeaintegerTanbitsapoolsizeapipe_recvapipe_sendaprocswparesultu.rsa.pem<aencodeTaasciic-----BEGIN c-----c-----END u
    Returns the start and end PEM markers, as bytes.
    uGenerator over PEM lines between pem_start and pem_end.acontentsasplitlinesastripapem_startain_pem_partuSeen start marker "%r" twiceapem_endd:aseen_pem_startuNo PEM start marker "%r" founduNo PEM end marker "%r" founda_pem_linesa_markersutoo many values to unpack (expected 2)cabase64astandard_b64decodeuLoads a PEM file.

    :param contents: the contents of the file to interpret
    :param pem_marker: the marker of the PEM content, such as 'RSA PRIVATE KEY'
        when your file has '-----BEGIN RSA PRIVATE KEY-----' and
        '-----END RSA PRIVATE KEY-----' markers.

    :return: the base64-decoded content between the start and end markers.

    @raise ValueError: when the content is invalid, for example when the start
        marker cannot be found.

    astandard_b64encodeareplaceTd
cll@apem_linesaappendTcd
uSaves a PEM file.

    :param contents: the contents to encode in PEM format
    :param pem_marker: the marker of the PEM content, such as 'RSA PRIVATE KEY'
        when your file has '-----BEGIN RSA PRIVATE KEY-----' and
        '-----END RSA PRIVATE KEY-----' markers.

    :return: the base64-encoded content between the start and end markers, as bytes.

    uFunctions that load and write PEM-encoded files.a__doc__a__file__a__spec__aoriginahas_locationa__cached__atypingaUnionTOstrObytesaFlexiTextapem_markerareturnaTupleTObytespaIteratoraload_pemasave_pemursa\pem.pyu<module rsa.pem>Tapem_markerTacontentsapem_startapem_endain_pem_partaseen_pem_startalineTacontentsapem_markerapem_startapem_endapem_linesapemTacontentsapem_markerapem_startapem_endab64apem_linesablock_startablocku.rsa.pkcs1$lu%i bytes needed for message, but there is only space for %iclapaddingapadding_lengthaosaurandomlareplaceTdcbduPads the message for encryption, returning the padded message.

    :return: 00 02 RANDOM_DATA 00 MESSAGE

    >>> block = _pad_for_encryption(b'hello', 16)
    >>> len(block)
    16
    >>> block[0:2]
    b'\x00\x02'
    >>> block[-6:]
    b'\x00hello'

    bduPads the message for signing, returning the padded message.

    The padding is always a repetition of FF bytes.

    :return: 00 01 PADDING 00 MESSAGE

    >>> block = _pad_for_signing(b'hello', 16)
    >>> len(block)
    16
    >>> block[0:2]
    b'\x00\x01'
    >>> block[-6:]
    b'\x00hello'
    >>> block[2:-6]
    b'\xff\xff\xff\xff\xff\xff\xff\xff'

    acommonabyte_sizewna_pad_for_encryptionatransformabytes2intacoreaencrypt_intweaint2bytesuEncrypts the given message using PKCS#1 v1.5

    :param message: the message to encrypt. Must be a byte string no longer than
        ``k-11`` bytes, where ``k`` is the number of bytes needed to encode
        the ``n`` component of the public key.
    :param pub_key: the :py:class:`rsa.PublicKey` to encrypt with.
    :raise OverflowError: when the message is too large to fit in the padded
        block.

    >>> from rsa import key, common
    >>> (pub_key, priv_key) = key.newkeys(256)
    >>> message = b'hello'
    >>> crypto = encrypt(message, pub_key)

    The crypto text should be just as long as the public key 'n' component:

    >>> len(crypto) == common.byte_size(pub_key.n)
    True

    ablinded_decryptaDecryptionErrorTuDecryption failedacompare_digest:nlnafindTdll
luDecrypts the given message using PKCS#1 v1.5

    The decryption is considered 'failed' when the resulting cleartext doesn't
    start with the bytes 00 02, or when the 00 byte between the padding and
    the message cannot be found.

    :param crypto: the crypto text as returned by :py:func:`rsa.encrypt`
    :param priv_key: the :py:class:`rsa.PrivateKey` to decrypt with.
    :raise DecryptionError: when the decryption fails. No details are given as
        to why the code thinks the decryption fails, as this would leak
        information about the private key.


    >>> import rsa
    >>> (pub_key, priv_key) = rsa.newkeys(256)

    It works with strings:

    >>> crypto = encrypt(b'hello', pub_key)
    >>> decrypt(crypto, priv_key)
    b'hello'

    And with binary data:

    >>> crypto = encrypt(b'\x00\x00\x00\x00\x01', pub_key)
    >>> decrypt(crypto, priv_key)
    b'\x00\x00\x00\x00\x01'

    Altering the encrypted information will *likely* cause a
    :py:class:`rsa.pkcs1.DecryptionError`. If you want to be *sure*, use
    :py:func:`rsa.sign`.


    .. warning::

        Never display the stack trace of a
        :py:class:`rsa.pkcs1.DecryptionError` exception. It shows where in the
        code the exception occurred, and thus leaks information about the key.
        It's only a tiny bit of information, but every bit makes cracking the
        keys easier.

    >>> crypto = encrypt(b'hello', pub_key)
    >>> crypto = crypto[0:5] + b'X' + crypto[6:] # change a byte
    >>> decrypt(crypto, priv_key)
    Traceback (most recent call last):
    ...
    rsa.pkcs1.DecryptionError: Decryption failed

    aHASH_ASN1uInvalid hash method: %sa_pad_for_signingablinded_encryptuSigns a precomputed hash with the private key.

    Hashes the message, then signs the hash with the given key. This is known
    as a "detached signature", because the message itself isn't altered.

    :param hash_value: A precomputed hash to sign (ignores message).
    :param priv_key: the :py:class:`rsa.PrivateKey` to sign with
    :param hash_method: the hash method used on the message. Use 'MD5', 'SHA-1',
        'SHA-224', SHA-256', 'SHA-384' or 'SHA-512'.
    :return: a message signature block.
    :raise OverflowError: if the private key is too small to contain the
        requested hash.

    acompute_hashasign_hashuSigns the message with the private key.

    Hashes the message, then signs the hash with the given key. This is known
    as a "detached signature", because the message itself isn't altered.

    :param message: the message to sign. Can be an 8-bit string or a file-like
        object. If ``message`` has a ``read()`` method, it is assumed to be a
        file-like object.
    :param priv_key: the :py:class:`rsa.PrivateKey` to sign with
    :param hash_method: the hash method used on the message. Use 'MD5', 'SHA-1',
        'SHA-224', SHA-256', 'SHA-384' or 'SHA-512'.
    :return: a message signature block.
    :raise OverflowError: if the private key is too small to contain the
        requested hash.

    adecrypt_inta_find_method_hashaVerificationErrorTuVerification faileduVerifies that the signature matches the message.

    The hash method is detected automatically from the signature.

    :param message: the signed message. Can be an 8-bit string or a file-like
        object. If ``message`` has a ``read()`` method, it is assumed to be a
        file-like object.
    :param signature: the signature block, as created with :py:func:`rsa.sign`.
    :param pub_key: the :py:class:`rsa.PublicKey` of the person signing the message.
    :raise VerificationError: when the signature doesn't match the message.
    :returns: the name of the used hash.

    uReturns the hash name detected from the signature.

    If you also want to verify the message, use :py:func:`rsa.verify()` instead.
    It also returns the name of the used hash.

    :param signature: the signature block, as created with :py:func:`rsa.sign`.
    :param pub_key: the :py:class:`rsa.PublicKey` of the person signing the message.
    :returns: the name of the used hash.
    uGenerator, yields each block of ``blocksize`` bytes in the input file.

    :param infile: file to read and separate in blocks.
    :param blocksize: block size in bytes.
    :returns: a generator that yields the contents of each block
    ainfileareadablocksizeayield_fixedblocksaHASH_METHODSaupdatea__call__amessagelahasheradigestuReturns the message digest.

    :param message: the signed message. Can be an 8-bit string or a file-like
        object. If ``message`` has a ``read()`` method, it is assumed to be a
        file-like object.
    :param method_name: the hash method, must be a key of
        :py:const:`rsa.pkcs1.HASH_METHODS`.

    aitemsutoo many values to unpack (expected 2)uFinds the hash method.

    :param clearsig: full padded ASN1 and hash.
    :return: the used hash method.
    :raise VerificationFailed: when the hash method cannot be found
    uFunctions for PKCS#1 version 1.5 encryption and signing

This module implements certain functionality from PKCS#1 version 1.5. For a
very clear example, read http://www.di-mgt.com.au/rsa_alg.html#pkcs1schemes

At least 8 bytes of random padding is used when encrypting a message. This makes
these methods much more secure than the ones in the ``rsa`` module.

WARNING: this module leaks information when decryption fails. The exceptions
that are raised contain the Python traceback information, which can be used to
deduce where in the process the failure occurred. DO NOT PASS SUCH INFORMATION
to your users.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__ahashliblasysatypingahmacTacompare_digestuTacommonatransformacoreakeyakeyaAnyaHashTypeDaMD5uSHA-1uSHA-224uSHA-256uSHA-384uSHA-512b0 0*H
b0!0+b0-0
`Heb010
`He b0A0
`He0b0Q0
`He@aMD5amd5uSHA-1asha1uSHA-224asha224uSHA-256asha256uSHA-384asha384uSHA-512asha512aDictaCallableDuSHA3-256uSHA3-384uSHA3-512b010
`He b0A0
`He0b0Q0
`He
@uSHA3-256asha3_256uSHA3-384asha3_384uSHA3-512asha3_512TEExceptiona__prepare__aCryptoErrora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ursa.pkcs1a__module__uBase class for all exceptions in this module.a__qualname__a__orig_bases__uRaised when decryption fails.uRaised when verification fails.Damessageatarget_lengthareturnObytesOintObytesapub_keyaPublicKeyareturnaencryptacryptoapriv_keyaPrivateKeyadecryptahash_valueahash_methodasignasignatureaverifyafind_signature_hashaBinaryIOaIteratoraUnionamethod_nameDaclearsigareturnObytesOstrLaencryptadecryptasignaverifyaDecryptionErroraVerificationErroraCryptoErrora__all__ursa\pkcs1.pyu<module rsa.pkcs1>Taclearsigahashnameaasn1codeTamessageatarget_lengthamax_msglengthamsglengthapaddingapadding_lengthaneeded_bytesanew_paddingTamessageatarget_lengthamax_msglengthamsglengthapadding_lengthTamessageamethod_nameamethodahasherablockT
acryptoapriv_keyablocksizeaencryptedadecryptedacleartextacleartext_marker_badasep_idxasep_idx_badaanything_badTamessageapub_keyakeylengthapaddedapayloadaencryptedablockTasignatureapub_keyakeylengthaencryptedadecryptedaclearsigTamessageapriv_keyahash_methodamsg_hashT
ahash_valueapriv_keyahash_methodaasn1codeacleartextakeylengthapaddedapayloadaencryptedablockTamessageasignatureapub_keyakeylengthaencryptedadecryptedaclearsigamethod_nameamessage_hashacleartextaexpectedTainfileablocksizeablockaread_bytes.rsa.prime?wqlwputoo many values to unpack (expected 2)uReturns the greatest common divisor of p and q

    >>> gcd(48, 180)
    12
    arsaacommonabit_sizelllllll
uReturns minimum number of rounds for Miller-Rabing primality testing,
    based on number bitsize.

    According to NIST FIPS 186-4, Appendix C, Table C.3, minimum number of
    rounds of M-R testing, using an error probability of 2 ** (-100), for
    different p, q bitsizes are:
      * p, q bitsize: 512; rounds: 7
      * p, q bitsize: 1024; rounds: 4
      * p, q bitsize: 1536; rounds: 3
    See: http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf
    llwdwrarandnumarandintwnapowwxuCalculates whether n is composite (which is always correct) or prime
    (which theoretically is incorrect with error probability 4**-k), by
    applying Miller-Rabin primality testing.

    For reference and implementation example, see:
    https://en.wikipedia.org/wiki/Miller%E2%80%93Rabin_primality_test

    :param n: Integer to be tested for primality.
    :type n: int
    :param k: Number of rounds (witnesses) of Miller-Rabin testing.
    :type k: int
    :return: False if the number is composite, True if it's probably prime.
    :rtype: bool
    Sllllaget_primality_testing_roundsamiller_rabin_primality_testinguReturns True if the number is prime, and False otherwise.

    >>> is_prime(2)
    True
    >>> is_prime(42)
    False
    >>> is_prime(41)
    True
    aread_random_odd_intanbitsais_primeuReturns a prime number that can be stored in 'nbits' bits.

    >>> p = getprime(128)
    >>> is_prime(p-1)
    False
    >>> is_prime(p)
    True
    >>> is_prime(p+1)
    False

    >>> from rsa import common
    >>> common.bit_size(p) == 128
    True
    agcduReturns True if a and b are relatively prime, and False if they
    are not.

    >>> are_relatively_prime(2, 3)
    True
    >>> are_relatively_prime(2, 4)
    False
    uNumerical functions related to primes.

Implementation based on the book Algorithm Design by Michael T. Goodrich and
Roberto Tamassia, 2002.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__ursa.commonursa.randnumagetprimeaare_relatively_primea__all__DwpwqareturnOintppDanumberareturnOintpDwnwkareturnOintpOboolDanumberareturnOintOboolDanbitsareturnOintpDwawbareturnOintpOboolursa\prime.pyu<module rsa.prime>TwawbwdTwpwqTanumberabitsizeTanbitsaintegerTanumberwkTwnwkwdwrw_wawxu.rsa.randnum[+lutoo many values to unpack (expected 2)aosaurandomlTlastructapackwBuReads 'nbits' random bits.

    If nbits isn't a whole number of bytes, an extra byte will be appended with
    only the lower bits set.
    aread_random_bitsatransformabytes2intluReads a random integer of approximately nbits bits.aread_random_intuReads a random odd integer of approximately nbits bits.

    >>> read_random_odd_int(512) & 1
    1
    acommonabit_sizeatriesl
uReturns a random integer x with 1 <= x <= maxvalue

    May take a very long time in specific situations. If maxvalue needs N bits
    to store, the closer maxvalue is to (2 ** N) - 1, the faster this function
    is.
    uFunctions for generating random numbers.a__doc__a__file__a__spec__aoriginahas_locationa__cached__arsaTacommonatransformDanbitsareturnOintObytesDanbitsareturnOintparead_random_odd_intDamaxvalueareturnOintparandintursa\randnum.pyu<module rsa.randnum>Tamaxvalueabit_sizeatriesavalueTanbitsanbytesarbitsarandomdataarandomvalueTanbitsarandomdataavalueTanbitsavalueu.rsa.transformafrom_bytesabigDasignedFuConverts a list of bytes or an 8-bit string to an integer.

    When using unicode strings, encode it to some encoding like UTF8 first.

    >>> (((128 * 256) + 64) * 256) + 15
    8405007
    >>> bytes2int(b'\x80@\x0f')
    8405007

    luNumber must be an unsigned integer: %damaxlamathaceilabit_lengthlato_bytesu
    Convert an unsigned integer to bytes (big-endian)::

    Does not preserve leading zeros if you don't specify a fill size.

    :param number:
        Integer value
    :param fill_size:
        If the optional fill size is given the length of the resulting
        byte string is expected to be the fill size and will be padded
        with prefix zero bytes to satisfy that length.
    :returns:
        Raw bytes (base-256 representation).
    :raises:
        ``OverflowError`` when fill_size is given and the number takes up more
        bytes than fit into the block. This requires the ``overflow``
        argument to this function to be set to ``False`` otherwise, no
        error will be raised.
    uData transformation functions.

From bytes to a number, number to bytes, etc.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__Daraw_bytesareturnObytesOintabytes2intTlDanumberafill_sizeareturnOintpObytesaint2bytesursa\transform.pyu<module rsa.transform>Taraw_bytesTanumberafill_sizeabytes_requiredu.urllib3._base_connectionK8a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypinguutil.connectionTa_TYPE_SOCKET_OPTIONSla_TYPE_SOCKET_OPTIONSluutil.timeoutTa_DEFAULT_TIMEOUTa_TYPE_TIMEOUTa_DEFAULT_TIMEOUTa_TYPE_TIMEOUTuutil.urlTaUrlaUrlaUnionaIOaAnyaIterablea_TYPE_BODYaNamedTuplea__prepare__aProxyConfiga__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3._base_connectiona__module__a__qualname__a__annotations__ussl.SSLContext | Noneassl_contextaboolause_forwarding_for_httpsuNone | str | Literal[False]aassert_hostnameustr | Noneaassert_fingerprinta__orig_bases__a_ResponseOptionsastrarequest_methodarequest_urlapreload_contentadecode_contentaenforce_content_lengthuurllib3\_base_connection.pyu<module urllib3._base_connection>Ta__class__u.urllib3._collections!aHTTPHeaderDictatypingaMappingacastTOstrpaIterableaTupleakeysa__getitem__aHasGettableStringKeysa__class__a__init__a_maxsizeadispose_funcaOrderedDicta_containeraRLockalocka__enter__a__exit__apopTnnnapopitemTFTalastutoo many values to unpack (expected 2)avalueuIteration over this class is unlikely to be threadsafe.avaluesaclearaselfa_headersaiteritemsaitema_has_value_for_headera_copy_fromaextendadecodeTulatin-1aloweru, :lnnasetdefaultaensure_can_construct_http_header_dictaitermergeda__eq__la__iter__uHTTPHeaderDict.__iter__laappenduAdds a (name, value) pair, doesn't overwrite the value if it already
        exists.

        If this is called with combine=True, instead of adding a new header value
        as a distinct item during iteration, this will instead append the value to
        any existing header value with a comma. If no existing header value exists
        for the key, then the value will simply be added, ignoring the combine parameter.

        >>> headers = HTTPHeaderDict(foo='bar')
        >>> headers.add('Foo', 'baz')
        >>> headers['foo']
        'bar, baz'
        >>> list(headers.items())
        [('foo', 'bar'), ('foo', 'baz')]
        >>> headers.add('foo', 'quz', combine=True)
        >>> list(headers.items())
        [('foo', 'bar, baz, quz')]
        uextend() takes at most 1 positional arguments (uu given)TaaddaitemsuGeneric import function for any type of header-like object.
        Adapted version of MutableMapping.update in order to insert items
        with self.add instead of self.__setitem__
        a_Sentinelanot_passeduReturns a list of all the values for the named field. Returns an
        empty list if the key doesn't exist.LuContent-EncodinguContent-LanguageuContent-LocationuContent-TypeuContent-LengthaDigestuLast-Modifiedadiscardu
        Remove content-specific header fields before changing the request
        method to GET or HEAD according to RFC 9110, Section 15.4.
        a__name__w(w)aotheragetlistuIterate over all header lines, including duplicate ones.uHTTPHeaderDict.iteritemsuIterate over all headers, merging duplicate ones together.uHTTPHeaderDict.itermergedaHTTPHeaderDictItemViewacopya__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsacollectionsTaOrderedDictaenumTaEnumaautoaEnumaautoathreadingTaRLockaRecentlyUsedContainera__all__aTypeVarTa_KTa_KTTa_VTa_VTTa_DTa_DTaUnionaValidHTTPHeaderSourcea__prepare__u%s.__prepare__() must return a mapping, not %su<metaclass>uurllib3._collectionsa__module__a__qualname__a__orig_bases__DapotentialareturnaobjectuValidHTTPHeaderSource | NoneaGenericaMutableMappingu
    Provides a thread-safe dict-like container which maintains up to
    ``maxsize`` keys while throwing away the least-recently-used keys beyond
    ``maxsize``.

    :param maxsize:
        Maximum number of recent elements to retain.

    :param dispose_func:
        Every time an item is evicted from the container,
        ``dispose_func(value)`` is called.  Callback which will get called
    a__annotations__utyping.OrderedDict[_KT, _VT]aintutyping.Callable[[_VT], None] | NoneTl
nDamaxsizeadispose_funcareturnaintutyping.Callable[[_VT], None] | NoneaNoneuRecentlyUsedContainer.__init__Dakeyareturna_KTa_VTuRecentlyUsedContainer.__getitem__Dakeyavalueareturna_KTa_VTaNonea__setitem__uRecentlyUsedContainer.__setitem__Dakeyareturna_KTaNonea__delitem__uRecentlyUsedContainer.__delitem__Dareturnainta__len__uRecentlyUsedContainer.__len__Dareturnutyping.NoReturnuRecentlyUsedContainer.__iter__DareturnaNoneuRecentlyUsedContainer.clearDareturnuset[_KT]uRecentlyUsedContainer.keysaSetu
    HTTPHeaderDict is unusual for a Mapping[str, str] in that it has two modes of
    address.

    If we directly try to get an item with a particular name, we will get a string
    back that is the concatenated version of all the values:

    >>> d['X-Header-Name']
    'Value1, Value2, Value3'

    However, if we iterate over an HTTPHeaderDict's items, we will optionally combine
    these values based on whether combine=True was called when building up the dictionary

    >>> d = HTTPHeaderDict({"A": "1", "B": "foo"})
    >>> d.add("A", "2", combine=True)
    >>> d.add("B", "bar")
    >>> list(d.items())
    [
        ('A', '1, 2'),
        ('B', 'foo'),
        ('B', 'bar'),
    ]

    This class conforms to the interface required by the MutableMapping ABC while
    also giving us the nonstandard iteration behavior we want; items with duplicate
    keys, ordered by time of first insertion.
    DaheadersareturnaHTTPHeaderDictaNoneuHTTPHeaderDictItemView.__init__uHTTPHeaderDictItemView.__len__Dareturnutyping.Iterator[tuple[str, str]]uHTTPHeaderDictItemView.__iter__Daitemareturnaobjectaboola__contains__uHTTPHeaderDictItemView.__contains__u
    :param headers:
        An iterable of field-value pairs. Must not contain multiple field names
        when compared case-insensitively.

    :param kwargs:
        Additional field-value pairs to pass in to ``dict.update``.

    A ``dict`` like container for storing HTTP Headers.

    Field names are stored and compared case-insensitively in compliance with
    RFC 7230. Iteration provides the first case-sensitive key seen for each
    case-insensitive pair.

    Using ``__setitem__`` syntax overwrites fields that compare equal
    case-insensitively in order to maintain ``dict``'s api. For fields that
    compare equal, instead create a new ``HTTPHeaderDict`` and use ``.add``
    in a loop.

    If multiple fields that are equal case-insensitively are passed to the
    constructor or ``.update``, the behavior is undefined and some will be
    lost.

    >>> headers = HTTPHeaderDict()
    >>> headers.add('Set-Cookie', 'foo=bar')
    >>> headers.add('set-cookie', 'baz=quxx')
    >>> headers['content-length'] = '7'
    >>> headers['SET-cookie']
    'foo=bar, baz=quxx'
    >>> headers['Content-Length']
    '7'
    utyping.MutableMapping[str, list[str]]TnDaheadersakwargsuValidHTTPHeaderSource | NoneastruHTTPHeaderDict.__init__DakeyavalareturnastrpaNoneuHTTPHeaderDict.__setitem__DakeyareturnastrpuHTTPHeaderDict.__getitem__DakeyareturnastraNoneuHTTPHeaderDict.__delitem__DakeyareturnaobjectabooluHTTPHeaderDict.__contains__TuDakeyadefaultareturnastrppuHTTPHeaderDict.setdefaultDaotherareturnaobjectabooluHTTPHeaderDict.__eq__a__ne__uHTTPHeaderDict.__ne__uHTTPHeaderDict.__len__Dareturnutyping.Iterator[str]uHTTPHeaderDict.discardDacombineFDakeyavalacombineareturnastrpaboolaNoneuHTTPHeaderDict.addDaargsakwargsareturnaValidHTTPHeaderSourceastraNoneuHTTPHeaderDict.extendaoverloadDakeyareturnastrulist[str]uHTTPHeaderDict.getlistDakeyadefaultareturnastra_DTulist[str] | _DTDakeyadefaultareturnastru_Sentinel | _DTulist[str] | _DTDareturnaSelfa_prepare_for_method_changeuHTTPHeaderDict._prepare_for_method_changeagetheadersagetallmatchingheadersaigetaget_allDareturnastra__repr__uHTTPHeaderDict.__repr__DaotherareturnaHTTPHeaderDictaNoneuHTTPHeaderDict._copy_fromDareturnaHTTPHeaderDictuHTTPHeaderDict.copyDareturnaHTTPHeaderDictItemViewuHTTPHeaderDict.itemsDaheader_nameapotential_valueareturnastrpabooluHTTPHeaderDict._has_value_for_headerDaotherareturnaobjectaHTTPHeaderDicta__ior__uHTTPHeaderDict.__ior__a__or__uHTTPHeaderDict.__or__a__ror__uHTTPHeaderDict.__ror__uurllib3\_collections.pyu<module urllib3._collections>Ta__class__Taselfaitemapassed_keyapassed_valTaselfakeyTaselfakeyavalueTaselfaotheramaybe_constructableaother_as_http_header_dictTaselfakeyaitemTaselfakeyavalTaselfaheadersTaselfaheadersakwargsa__class__Taselfamaxsizeadispose_funca__class__Taselfaotheramaybe_constructableTaselfTaselfavalsTaselfaotherTaselfaotheramaybe_constructablearesultTaselfakeyavalueaevicted_itemw_aevicted_valueTaselfaotherakeyavalTaselfaheader_nameapotential_valueTaselfacontent_specific_headersaheaderTaselfakeyavalacombineakey_loweranew_valsavalsTaselfavaluesavalueTaselfacloneTapotentialTaselfaargsakwargsaotherakeyavalavalueTaselfakeyadefaultTaselfakeyadefaultavalsTaselfakeyavalsavalTaselfakeyadefaulta__class__.urllib3._request_methodsbaheadersuClasses extending RequestMethods must implement their own ``urlopen`` method.aupperurequest got values for both 'body' and 'json' parameters which are mutually exclusiveacopyucontent-typealowerakeysuapplication/jsonuContent-Typea_jsonadumpsDaseparatorsaensure_asciiTw,w:FaencodeTuutf-8abodyaselfa_encode_url_methodsarequest_encode_urlafieldsaurlopen_kwarequest_encode_bodyu
        Make a request using :meth:`urlopen` with the appropriate encoding of
        ``fields`` based on the ``method`` used.

        This is a convenience method that requires the least amount of manual
        effort. It can be used in most situations, while still having the
        option to drop down to more specific methods when necessary, such as
        :meth:`request_encode_url`, :meth:`request_encode_body`,
        or even the lowest level :meth:`urlopen`.
        w?aurlencodeaurlopenu
        Make a request using :meth:`urlopen` with the ``fields`` encoded in
        the url. This is useful for request methods like GET, HEAD, DELETE, etc.
        aHTTPHeaderDicturequest got values for both 'fields' and 'body', can only specify one.aencode_multipart_formdataTaboundaryutoo many values to unpack (expected 2)uapplication/x-www-form-urlencodedasetdefaultaextra_kwu
        Make a request using :meth:`urlopen` with the ``fields`` encoded in
        the body. This is useful for request methods like POST, PUT, PATCH, etc.

        When ``encode_multipart=True`` (default), then
        :func:`urllib3.encode_multipart_formdata` is used to encode
        the payload with the appropriate content type. Otherwise
        :func:`urllib.parse.urlencode` is used with the
        'application/x-www-form-urlencoded' content type.

        Multipart encoding must be used when posting files, and it's reasonably
        safe to use it in other times too. However, it may break request
        signing, such as with OAuth.

        Supports an optional ``fields`` parameter of key/value strings AND
        key/filetuple. A filetuple is a (filename, data, MIME type) tuple where
        the MIME type is optional. For example::

            fields = {
                'foo': 'bar',
                'fakefile': ('foofile.txt', 'contents of foofile'),
                'realfile': ('barfile.txt', open('realfile').read()),
                'typedfile': ('bazfile.bin', open('bazfile').read(),
                              'image/jpeg'),
                'nonamefile': 'contents of nonamefile field',
            }

        When uploading a file, providing a filename (the first parameter of the
        tuple) is optional but recommended to best mimic behavior of browsers.

        Note that if ``headers`` are supplied, the 'Content-Type' header will
        be overwritten because it depends on the dynamic random boundary string
        which is used to compose the body of the request. The random boundary
        string can be explicitly set with the ``multipart_boundary`` parameter.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsajsonlatypinguurllib.parseTaurlencodea_base_connectionTa_TYPE_BODYla_TYPE_BODYa_collectionsTaHTTPHeaderDictafilepostTa_TYPE_FIELDSaencode_multipart_formdataa_TYPE_FIELDSaresponseTaBaseHTTPResponseaBaseHTTPResponseaRequestMethodsa__all__aUnionaSequenceaTupleTOstrObytesaMappinga_TYPE_ENCODE_URL_FIELDSuurllib3._request_methodsa__module__u
    Convenience mixin for classes who implement a :meth:`urlopen` method, such
    as :class:`urllib3.HTTPConnectionPool` and
    :class:`urllib3.PoolManager`.

    Provides behavior for making common types of HTTP request methods and
    decides which type of request field encoding to use.

    Specifically,

    :meth:`.request_encode_url` is for sending requests whose fields are
    encoded in the URL (such as GET, HEAD, DELETE).

    :meth:`.request_encode_body` is for sending requests whose fields are
    encoded in the *body* of the request using multipart or www-form-urlencoded
    (such as for POST, PUT, PATCH).

    :meth:`.request` is for making any kind of request, it will look up the
    appropriate encoding format and use one of the above two methods to make
    the request.

    Initializer parameters:

    :param headers:
        Headers to include with all requests, unless other headers are given
        explicitly.
    a__qualname__SaGETaHEADaOPTIONSaDELETETnDaheadersareturnutyping.Mapping[str, str] | NoneaNonea__init__uRequestMethods.__init__TnntnDamethodaurlabodyaheadersaencode_multipartamultipart_boundaryakwareturnastrpu_TYPE_BODY | Noneutyping.Mapping[str, str] | Noneaboolustr | Noneutyping.AnyaBaseHTTPResponseuRequestMethods.urlopenTnnnnDamethodaurlabodyafieldsaheadersajsonaurlopen_kwareturnastrpu_TYPE_BODY | Noneu_TYPE_FIELDS | Noneutyping.Mapping[str, str] | Noneutyping.Any | Noneutyping.AnyaBaseHTTPResponsearequestuRequestMethods.requestTnnDamethodaurlafieldsaheadersaurlopen_kwareturnastrpu_TYPE_ENCODE_URL_FIELDS | Noneutyping.Mapping[str, str] | NoneastraBaseHTTPResponseuRequestMethods.request_encode_urlDamethodaurlafieldsaheadersaencode_multipartamultipart_boundaryaurlopen_kwareturnastrpu_TYPE_FIELDS | Noneutyping.Mapping[str, str] | Noneaboolustr | NoneastraBaseHTTPResponseuRequestMethods.request_encode_bodyTuurllib3\_request_methods.pyu<module urllib3._request_methods>TaselfaheadersTaselfamethodaurlabodyafieldsaheadersajsonaurlopen_kwTaselfamethodaurlafieldsaheadersaencode_multipartamultipart_boundaryaurlopen_kwaextra_kwabodyacontent_typeTaselfamethodaurlafieldsaheadersaurlopen_kwaextra_kwTaselfamethodaurlabodyaheadersaencode_multipartamultipart_boundaryakwu.urllib3._versiona__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsu2.1.0a__version__uurllib3\_version.pyu<module urllib3._version>u.urllib3.connection;a__class__a__init__aTimeoutaresolve_default_timeoutTahostaportatimeoutasource_addressablocksizeasocket_optionsaproxyaproxy_configa_has_connected_to_proxya_response_optionsa_tunnel_hosta_tunnel_porta_tunnel_schemea_dns_hostarstripTw.u
        Getter method to remove any trailing dots that indicate the hostname is an FQDN.

        In general, SSL certificates don't include the trailing dot indicating a
        fully-qualified domain name, and thus, they don't validate properly when
        checked against a domain name that includes the dot. In addition, some
        servers may not expect to receive the trailing dot when provided.

        However, the hostname with trailing dot is critical to DNS resolution; doing a
        lookup with the trailing dot will properly only resolve the appropriate FQDN,
        whereas a lookup without a trailing dot will search the system's search domain
        list. Thus, it's important to keep the original host around for use only in
        those cases where it's appropriate (i.e., when doing DNS lookup to establish the
        actual TCP connection across which we're going to send HTTP requests).
        u
        Setter for the `host` property.

        We assume that only urllib3 uses the _dns_host attribute; httplib itself
        only uses `host`, and it seems reasonable that other libraries follow suit.
        aconnectionacreate_connectionaportatimeoutasource_addressTasource_addressasocket_optionsasocketagaierroraNameResolutionErrorahostaSocketTimeoutaConnectTimeoutErroruConnection to uu timed out. (connect timeout=w)aNewConnectionErroruFailed to establish a new connection: a_HAS_SYS_AUDITasysaaudituhttp.client.connectuEstablish a socket connection and set nodelay settings on it.

        :return: New socket connection.
        TahttpahttpsuInvalid proxy scheme for tunneling: u, must be either 'http' or 'https'aset_tunnelTaportaheadersa_new_connasocka_tunnelawait_for_readDatimeoutZacloseais_verifiedaproxy_is_verifieda_CONTAINS_CONTROL_CHAR_REasearchuMethod cannot contain non-token characters u (found at least agroupaputrequestTaskip_hostaskip_accept_encodingaputheaderato_straloweraSKIPPABLE_HEADERSu', 'asortedatitleuurllib3.util.SKIP_HEADER only supports 'w'aSKIP_HEADERu<genexpr>uHTTPConnection.putheader.<locals>.<genexpr>asettimeouta_ResponseOptionsTarequest_methodarequest_urlapreload_contentadecode_contentaenforce_content_lengthuaccept-encodingTaskip_accept_encodingaskip_hostabody_to_chunksablocksizeTamethodablocksizeachunksacontent_lengthutransfer-encodingTuTransfer-Encodingachunkeducontent-lengthuContent-Lengthuuser-agentuUser-Agenta_get_default_user_agentaitemsutoo many values to unpack (expected 2)aselfaendheadersaencodeTuutf-8asendc%x
%b
Tc0

uHTTPConnection.request.<locals>.<genexpr>awarningsawarnaDeprecationWarninglTuHTTPConnection.request_chunked() is deprecated and will be removed in urllib3 v2.1.0. Instead use HTTPConnection.request(..., chunked=True).TacategoryastacklevelarequestTabodyaheadersachunkedu
        Alternative to the common request method, which sends the
        body with chunked encoding and not as one block
        aResponseNotReadyaresponseTaHTTPResponselaHTTPResponselagetresponseaassert_header_parsingamsgaHeaderParsingErroralogawarninguFailed to parse headers (url=%s): %sa_url_from_connectionarequest_urlDaexc_infotaHTTPHeaderDictastatusaversionareasonaresp_optionsapreload_contentadecode_contentaenforce_content_lengtharequest_methodTabodyaheadersastatusaversionareasonapreload_contentadecode_contentaoriginal_responseaenforce_content_lengtharequest_methodarequest_urlu
        Get the response from the server.

        If the HTTPConnection is in the correct state, returns an instance of HTTPResponse or of whatever object is returned by the response_class variable.

        If a request has not been sent or if a previous response has not be handled, ResponseNotReady is raised. If the HTTP response indicates that the connection should be closed, then it will be closed before the response is returned. When the connection is closed, the underlying socket is closed.
        Taportatimeoutasource_addressablocksizeasocket_optionsaproxyaproxy_configakey_fileacert_fileakey_passwordassl_contextaserver_hostnameaassert_hostnameaassert_fingerprintassl_versionassl_minimum_versionassl_maximum_versionaexpanduseraca_certsaca_cert_diraca_cert_dataaverify_modearesolve_cert_reqsTnacert_reqsTuHTTPSConnection.set_cert() is deprecated and will be removed in urllib3 v2.1.0. Instead provide the parameters to the HTTPSConnection constructor.u
        This method should only be called once, before the connection is used.
        ahttpsa_connect_tls_proxyadatetimeadateatodayaRECENT_DATEuSystem time is way off (before u). This will probably lead to SSL verification errorsaSystemTimeWarninga_ssl_wrap_socket_and_match_hostnameTasockacert_reqsassl_versionassl_minimum_versionassl_maximum_versionaca_certsaca_cert_diraca_cert_dataacert_fileakey_fileakey_passwordaserver_hostnameassl_contextatls_in_tlsaassert_hostnameaassert_fingerprintatypingacastaProxyConfigTacert_reqsassl_versionassl_minimum_versionassl_maximum_versionaca_certsaca_cert_diraca_cert_dataaserver_hostnameassl_contextaassert_hostnameaassert_fingerprintacert_fileakey_fileakey_passwordatls_in_tlsu
        Establish a TLS connection to the proxy using the provided SSL context.
        acreate_urllib3_contextaresolve_ssl_versionTassl_versionassl_minimum_versionassl_maximum_versionacert_reqsassl_aIS_PYOPENSSLaHAS_NEVER_CHECK_COMMON_NAMEacheck_hostnameaload_default_certsastripTu[]w%arfindTw%ais_ipaddressassl_wrap_socketT
asockakeyfileacertfileakey_passwordaca_certsaca_cert_diraca_cert_dataaserver_hostnameassl_contextatls_in_tlsa_assert_fingerprintagetpeercertTtTabinary_formasslaCERT_NONEahostname_checks_common_namea_match_hostnamea_WrappedAndVerifiedSocketassl_sockaCERT_REQUIREDTasocketais_verifieduLogic for constructing an SSLContext from all TLS parameters, passing
    that down into ssl_wrap_socket, and then doing certificate verification
    either via hostname or fingerprint. This function exists to guarantee
    that both proxies and targets have the same behavior when connecting via TLS.
    amatch_hostnameaasserted_hostnameaCertificateErroruCertificate did not match expected hostname: %s. Certificate: %sa_peer_certw areasplitu[^a-z]uwrong version numberuunknown protocolaProxyErroruUnable to connect to proxyu. Your proxy appears to only use HTTP and not HTTPS, try changing your proxy URL to be HTTP. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#https-proxy-error-http-proxya__cause__upython-urllib3/a__version__aHTTPSConnectionahttpaUrlTaschemeahostaportapathaurluReturns the URL from a given connection. This is mainly used for testing and logging.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaloggingaosuhttp.clientTaHTTPConnectionaHTTPConnectiona_HTTPConnectionTaHTTPExceptionaHTTPExceptionTaResponseNotReadyTatimeouta_collectionsTaHTTPHeaderDictuutil.responseTaassert_header_parsinguutil.timeoutTa_DEFAULT_TIMEOUTa_TYPE_TIMEOUTaTimeouta_DEFAULT_TIMEOUTa_TYPE_TIMEOUTuutil.utilTato_struutil.waitTawait_for_readaSSLErroraBaseSSLErrorTEImportErrorEAttributeErrorTEBaseExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.connectiona__module__a__qualname__a__orig_bases__a_base_connectionTa_TYPE_BODYa_TYPE_BODYTaProxyConfigTa_ResponseOptionsa_versionTa__version__aexceptionsTaConnectTimeoutErroraHeaderParsingErroraNameResolutionErroraNewConnectionErroraProxyErroraSystemTimeWarningautilTaSKIP_HEADERaSKIPPABLE_HEADERSaconnectionassl_uutil.requestTabody_to_chunksuutil.ssl_Taassert_fingerprintTacreate_urllib3_contextais_ipaddressaresolve_cert_reqsaresolve_ssl_versionassl_wrap_socketuutil.ssl_match_hostnameTaCertificateErroramatch_hostnameuutil.urlTaUrlaConnectionErroraBrokenPipeErroragetLoggerTuurllib3.connectionDahttpahttpslPlaport_by_schemeTllpacompileTu[^-!#$%&'*+.^_`|~0-9a-zA-Z]u
    Based on :class:`http.client.HTTPConnection` but provides an extra constructor
    backwards-compatibility layer between older and newer Pythons.

    Additional keyword parameters are used to configure attributes of the connection.
    Accepted parameters include:

    - ``source_address``: Set the source address for the current connection.
    - ``socket_options``: Set specific options on the underlying socket. If not specified, then
      defaults are loaded from ``HTTPConnection.default_socket_options`` which includes disabling
      Nagle's algorithm (sets TCP_NODELAY to 1) unless the connection is behind a proxy.

      For example, if you wish to enable TCP Keep Alive in addition to the defaults,
      you might pass:

      .. code-block:: python

         HTTPConnection.default_socket_options + [
             (socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1),
         ]

      Or you may want to disable the defaults by passing an empty list (e.g., ``[]``).
    a__annotations__adefault_portutyping.ClassVar[int]aIPPROTO_TCPaTCP_NODELAYadefault_socket_optionsutyping.ClassVar[connection._TYPE_SOCKET_OPTIONS]aboolubool | Noneaintutuple[str, int] | Noneuconnection._TYPE_SOCKET_OPTIONS | Noneu_ResponseOptions | Noneustr | Noneuint | Nonel@Dahostaportatimeoutasource_addressablocksizeasocket_optionsaproxyaproxy_configareturnastruint | Nonea_TYPE_TIMEOUTutuple[str, int] | NoneaintuNone | connection._TYPE_SOCKET_OPTIONSuUrl | NoneuProxyConfig | NoneaNoneuHTTPConnection.__init__apropertyDareturnastruHTTPConnection.hostasetterDavalueareturnastraNoneDareturnusocket.socketuHTTPConnection._new_connTnnahttpDahostaportaheadersaschemeareturnastruint | Noneutyping.Mapping[str, str] | NoneastraNoneuHTTPConnection.set_tunnelDareturnaNoneaconnectuHTTPConnection.connectDareturnaboolais_closeduHTTPConnection.is_closedais_connecteduHTTPConnection.is_connectedahas_connected_to_proxyuHTTPConnection.has_connected_to_proxyuHTTPConnection.closeTFpDamethodaurlaskip_hostaskip_accept_encodingareturnastrpaboolpaNoneuHTTPConnection.putrequestDaheaderavaluesareturnastrpaNoneuHTTPConnection.putheaderTnnDachunkedapreload_contentadecode_contentaenforce_content_lengthFtppDamethodaurlabodyaheadersachunkedapreload_contentadecode_contentaenforce_content_lengthareturnastrpu_TYPE_BODY | Noneutyping.Mapping[str, str] | NoneaboolpppaNoneuHTTPConnection.requestDamethodaurlabodyaheadersareturnastrpu_TYPE_BODY | Noneutyping.Mapping[str, str] | NoneaNonearequest_chunkeduHTTPConnection.request_chunkedDareturnaHTTPResponseuHTTPConnection.getresponseu
    Many of the parameters to this constructor are passed to the underlying SSL
    socket by means of :py:func:`urllib3.util.ssl_wrap_socket`.
    uint | str | NoneuNone | str | bytesDahostaportatimeoutasource_addressablocksizeasocket_optionsaproxyaproxy_configacert_reqsaassert_hostnameaassert_fingerprintaserver_hostnameassl_contextaca_certsaca_cert_diraca_cert_dataassl_minimum_versionassl_maximum_versionassl_versionacert_fileakey_fileakey_passwordareturnastruint | Nonea_TYPE_TIMEOUTutuple[str, int] | NoneaintuNone | connection._TYPE_SOCKET_OPTIONSuUrl | NoneuProxyConfig | Noneuint | str | NoneuNone | str | Literal[False]ustr | Noneustr | Noneussl.SSLContext | Noneustr | Noneustr | NoneuNone | str | bytesuint | Noneuint | Noneuint | str | Noneustr | Noneustr | Noneustr | NoneaNoneuHTTPSConnection.__init__TnnnnnnnnnD
akey_fileacert_fileacert_reqsakey_passwordaca_certsaassert_hostnameaassert_fingerprintaca_cert_diraca_cert_dataareturnustr | Noneustr | Noneuint | str | Noneustr | Noneustr | NoneuNone | str | Literal[False]ustr | Noneustr | NoneuNone | str | bytesaNoneaset_certuHTTPSConnection.set_certuHTTPSConnection.connectDahostnameasockareturnastrusocket.socketussl.SSLSocketuHTTPSConnection._connect_tls_proxyaNamedTupleu
    Wrapped socket and whether the connection is
    verified after the TLS handshake
    ussl.SSLSocket | SSLTransportDatls_in_tlsFDasockacert_reqsassl_versionassl_minimum_versionassl_maximum_versionacert_fileakey_fileakey_passwordaca_certsaca_cert_diraca_cert_dataaassert_hostnameaassert_fingerprintaserver_hostnameassl_contextatls_in_tlsareturnusocket.socketuNone | str | intuNone | str | intuint | Noneuint | Noneustr | Noneustr | Noneustr | Noneustr | Noneustr | NoneuNone | str | bytesuNone | str | Literal[False]ustr | Noneustr | Noneussl.SSLContext | Noneaboola_WrappedAndVerifiedSocketTFDacertaasserted_hostnameahostname_checks_common_nameareturnu_TYPE_PEER_CERT_RET_DICT | NoneastraboolaNoneDaerraproxy_schemeareturnaExceptionustr | NoneaProxyErrora_wrap_proxy_erroruUsed to detect a failed ConnectionCls import.aDummyConnectionTaVerifiedHTTPSConnectionDaconnapathareturnuHTTPConnection | HTTPSConnectionustr | Noneastruurllib3\connection.pyTa.0wkTa.0wvTa__class__u<module urllib3.connection>T
aselfahostaportatimeoutasource_addressablocksizeasocket_optionsaproxyaproxy_configa__class__Taselfahostaportatimeoutasource_addressablocksizeasocket_optionsaproxyaproxy_configacert_reqsaassert_hostnameaassert_fingerprintaserver_hostnameassl_contextaca_certsaca_cert_diraca_cert_dataassl_minimum_versionassl_maximum_versionassl_versionacert_fileakey_fileakey_passworda__class__Taselfahostnameasockaproxy_configassl_contextasock_and_verifiedTacertaasserted_hostnameahostname_checks_common_nameastripped_hostnameweTaselfasockweTasockacert_reqsassl_versionassl_minimum_versionassl_maximum_versionacert_fileakey_fileakey_passwordaca_certsaca_cert_diraca_cert_dataaassert_hostnameaassert_fingerprintaserver_hostnameassl_contextatls_in_tlsacertadefault_ssl_contextacontextanormalizedassl_sockahostname_checks_common_nameTaconnapathaschemeTaerraproxy_schemeaerror_normalizedais_likely_http_proxyahttp_proxy_warninganew_errTaselfa__class__TaselfTaselfasockaserver_hostnameatls_in_tlsais_time_offasock_and_verifiedTaselfaresp_optionsaHTTPResponseahttplib_responseahpeaheadersaresponsea__class__TaselfavalueTaselfaheaderavaluesaskippable_headersa__class__Taselfamethodaurlaskip_hostaskip_accept_encodingamatcha__class__Taselfamethodaurlabodyaheadersachunkedapreload_contentadecode_contentaenforce_content_lengthaheader_keysaskip_accept_encodingaskip_hostachunks_and_clachunksacontent_lengthaheaderavalueachunkTaselfamethodaurlabodyaheadersT
aselfakey_fileacert_fileacert_reqsakey_passwordaca_certsaassert_hostnameaassert_fingerprintaca_cert_diraca_cert_dataTaselfahostaportaheadersaschemea__class__.urllib3.connectionpoolSoaLocationValueErrorTuNo host specified.a_normalize_hostaschemeTaschemeahostaportanormalize_hostalowera_tunnel_hosta__name__uu(host=u, port=w)acloseaConnectionPoola__init__aRequestMethodsaTimeoutafrom_floataRetryaDEFAULTatimeoutaretriesaQueueClsapoolablockaproxyaproxy_headersaproxy_configaselfaputTnlanum_connectionsanum_requestsaconn_kwasetdefaultasocket_optionsaweakrefafinalizea_close_pool_connectionslalogadebuguStarting new HTTP connection (%d): %s:%su80aConnectionClsaconnect_timeoutu
        Return a fresh :class:`HTTPConnection`.
        aClosedPoolErroruPool is closed.agetTablockatimeoutaqueueaEmptyaEmptyPoolErroruPool is empty and a new connection can't be opened due to blocking mode.ais_connection_droppeduResetting dropped connection: %saconna_new_connu
        Get a connection. Will return a pooled connection if one is available.

        If no connections are available and :prop:`.block` is ``False``, then a
        fresh connection is returned.

        :param timeout:
            Seconds to wait before giving up and raising
            :class:`urllib3.exceptions.EmptyPoolError` if the pool is empty and
            :prop:`.block` is ``True``.
        DablockFaFullaFullPoolErroruPool reached maximum size and no more connections are allowed.awarninguConnection pool is full, discarding connection: %s. Connection pool size: %saqsizeu
        Put a connection back into the pool.

        :param conn:
            Connection object for the current host and port as returned by
            :meth:`._new_conn` or :meth:`._get_conn`.

        If the pool is already full, the connection is closed and discarded
        because we exceeded maxsize. If connections are discarded frequently,
        then maxsize should be increased.

        If the pool is closed, then the connection will be closed and discarded.
        a_DEFAULT_TIMEOUTacloneuHelper that always returns a :class:`urllib3.util.Timeout`aSocketTimeoutaReadTimeoutErroruRead timed out. (read timeout=aerrnoa_blocking_errnosaerruIs the error actually a timeout? Will raise a ReadTimeout or passa_get_timeoutastart_connectaresolve_default_timeouta_validate_connaBaseSSLErrora_raise_timeoutTaerraurlatimeout_valueaNewConnectionErroraTimeoutErroraCertificateErroraSSLErrorahas_connected_to_proxya_wrap_proxy_errorarequestTabodyaheadersachunkedapreload_contentadecode_contentaenforce_content_lengthaBrokenPipeErroraEPROTOTYPEaread_timeoutais_closedaurlagetresponsea_connectiona_poolu%s://%s:%s "%s %s %s" %s %samethoda_http_vsn_strastatusalength_remainingu
        Perform a request on a given urllib connection object taken from our
        pool.

        :param conn:
            a connection from one of our connection pools

        :param method:
            HTTP request method (such as GET, POST, PUT, etc.)

        :param url:
            The URL to perform the request on.

        :param body:
            Data to send in the request body, either :class:`str`, :class:`bytes`,
            an iterable of :class:`str`/:class:`bytes`, or a file-like object.

        :param headers:
            Dictionary of custom headers to send, such as User-Agent,
            If-None-Match, etc. If None, pool headers are used. If provided,
            these headers completely replace any pool-specific headers.

        :param retries:
            Configure the number of retries to allow before raising a
            :class:`~urllib3.exceptions.MaxRetryError` exception.

            Pass ``None`` to retry until you receive a response. Pass a
            :class:`~urllib3.util.retry.Retry` object for fine-grained control
            over different types of retries.
            Pass an integer number to retry connection errors that many times,
            but no other types of errors. Pass zero to never retry.

            If ``False``, then retries are disabled and any exception is raised
            immediately. Also, instead of raising a MaxRetryError on redirects,
            the redirect response will be returned.

        :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.

        :param timeout:
            If specified, overrides the default timeout for this one
            request. It may be a float (in seconds) or an instance of
            :class:`urllib3.util.Timeout`.

        :param chunked:
            If True, urllib3 will send the body using chunked transfer
            encoding. Otherwise, urllib3 will send the body using the standard
            content-length form. Defaults to False.

        :param response_conn:
            Set this to ``None`` if you will handle releasing the connection or
            set the connection to have the response release it.

        :param preload_content:
          If True, the response's body will be preloaded during construction.

        :param decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.

        :param enforce_content_length:
            Enforce content length checking. Body returned by server must match
            value of Content-Length header, if present. Otherwise, raise error.
        utoo many values to unpack (expected 2)u
        Close all pooled connections and disable the pool.
        astartswithTw/aparse_urlunot enough values to unpack (expected at least 4, got %d)ahttpaport_by_schemeu
        Check if the given ``url`` is a member of the same host as this
        connection pool.
        aheadersafrom_intTaredirectadefaultais_same_hostaHostChangedErrorato_stra_encode_targetaconnection_requires_http_tunnelacopyaupdateaset_file_positiona_get_connTatimeouta_prepare_proxya_make_requestabodyachunkedaresponse_connapreload_contentadecode_contentaHTTPExceptionaProtocolErroraProxyErroruConnection aborted.aincrementasysaexc_infolTaerrora_poola_stacktraceasleepa_put_connuRetrying (%r) after connection broken by '%r': %saurlopenaredirectapool_timeoutarelease_connabody_posaresponseaget_redirect_locationl/aGETaHTTPHeaderDicta_prepare_for_method_changeTaresponsea_poolaMaxRetryErroraraise_on_redirectadrain_connasleep_for_retryuRedirecting %s -> %saassert_same_hostTuRetry-Afterais_retryaraise_on_statusuRetry: %su
        Get a connection from the pool and perform an HTTP request. This is the
        lowest level call for making a request, so you'll need to specify all
        the raw details.

        .. note::

           More commonly, it's appropriate to use a convenience method
           such as :meth:`request`.

        .. note::

           `release_conn` will only behave as expected if
           `preload_content=False` because we want to make
           `preload_content=False` the default behaviour someday soon without
           breaking backwards compatibility.

        :param method:
            HTTP request method (such as GET, POST, PUT, etc.)

        :param url:
            The URL to perform the request on.

        :param body:
            Data to send in the request body, either :class:`str`, :class:`bytes`,
            an iterable of :class:`str`/:class:`bytes`, or a file-like object.

        :param headers:
            Dictionary of custom headers to send, such as User-Agent,
            If-None-Match, etc. If None, pool headers are used. If provided,
            these headers completely replace any pool-specific headers.

        :param retries:
            Configure the number of retries to allow before raising a
            :class:`~urllib3.exceptions.MaxRetryError` exception.

            Pass ``None`` to retry until you receive a response. Pass a
            :class:`~urllib3.util.retry.Retry` object for fine-grained control
            over different types of retries.
            Pass an integer number to retry connection errors that many times,
            but no other types of errors. Pass zero to never retry.

            If ``False``, then retries are disabled and any exception is raised
            immediately. Also, instead of raising a MaxRetryError on redirects,
            the redirect response will be returned.

        :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.

        :param redirect:
            If True, automatically handle redirects (status codes 301, 302,
            303, 307, 308). Each redirect counts as a retry. Disabling retries
            will disable redirect, too.

        :param assert_same_host:
            If ``True``, will make sure that the host of the pool requests is
            consistent else will raise HostChangedError. When ``False``, you can
            use the pool on an HTTP proxy and request foreign hosts.

        :param timeout:
            If specified, overrides the default timeout for this one
            request. It may be a float (in seconds) or an instance of
            :class:`urllib3.util.Timeout`.

        :param pool_timeout:
            If set and the pool is set to block=True, then this method will
            block for ``pool_timeout`` seconds and raise EmptyPoolError if no
            connection is available within the time period.

        :param bool preload_content:
            If True, the response's body will be preloaded into memory.

        :param bool decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.

        :param release_conn:
            If False, then the urlopen call will not release the connection
            back into the pool once a response is received (but will release if
            you read the entire contents of the response such as when
            `preload_content=True`). This is useful if you're not preloading
            the response's content immediately. You will need to call
            ``r.release_conn()`` on the response ``r`` to return the connection
            back into the pool. If None, it takes the value of ``preload_content``
            which defaults to ``True``.

        :param bool chunked:
            If True, urllib3 will send the body using chunked transfer
            encoding. Otherwise, urllib3 will send the body using the standard
            content-length form. Defaults to False.

        :param int body_pos:
            Position to seek to in file-like body in the event of a retry or
            redirect. Typically this won't need to be set because urllib3 will
            auto-populate the value when needed.
        a__class__akey_fileacert_fileacert_reqsakey_passwordaca_certsaca_cert_dirassl_versionassl_minimum_versionassl_maximum_versionaassert_hostnameaassert_fingerprintahttpsaset_tunnelTaschemeahostaportaheadersaconnectuEstablishes a tunnel connection through HTTP CONNECT.uStarting new HTTPS connection (%d): %s:%su443aDummyConnectionuCan't connect to HTTPS URL because the SSL module is not available.u
        Return a fresh :class:`urllib3.connection.HTTPConnection`.
        ais_verifiedawarningsawarnuUnverified HTTPS request is being made to host 'u'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warningsaInsecureRequestWarningu
        Called right before a request is made, after the socket is created.
        lPaHTTPSConnectionPoolaHTTPConnectionPoolu
    Given a url, return an :class:`.ConnectionPool` instance of its host.

    This is a shortcut for not having to parse out the scheme, host, and port
    of the url before creating an :class:`.ConnectionPool` instance.

    :param url:
        Absolute URL string that must include the scheme. Port is optional.

    :param \**kw:
        Passes additional parameters to the constructor of the appropriate
        :class:`.ConnectionPool`. Useful for specifying things like
        timeout, maxsize, headers, etc.

    Example::

        >>> conn = connection_from_url('http://google.com/')
        >>> r = conn.request('GET', '/')
    Tw[aendswithTw]:llnu
    Normalize hosts for comparisons and use with sockets.
    aUrlTaschemeahostaportapathuReturns the URL from a given connection pool. This is mainly used for testing and logging.TFTablockuDrains a queue of connections and closes each one.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaloggingatypingasocketaTracebackTypea_base_connectionTa_TYPE_BODYa_TYPE_BODYa_collectionsTaHTTPHeaderDicta_request_methodsTaRequestMethodsaconnectionTaBaseSSLErroraBrokenPipeErroraDummyConnectionaHTTPConnectionaHTTPExceptionaHTTPSConnectionaProxyConfiga_wrap_proxy_erroraHTTPConnectionaHTTPSConnectionaProxyConfigTaport_by_schemeaexceptionsT
aClosedPoolErroraEmptyPoolErroraFullPoolErroraHostChangedErroraInsecureRequestWarningaLocationValueErroraMaxRetryErroraNewConnectionErroraProtocolErroraProxyErroraReadTimeoutErroraSSLErroraTimeoutErrorTaBaseHTTPResponseaBaseHTTPResponseuutil.connectionTais_connection_droppeduutil.proxyTaconnection_requires_http_tunneluutil.requestTa_TYPE_BODY_POSITIONaset_file_positiona_TYPE_BODY_POSITIONuutil.retryTaRetryuutil.ssl_match_hostnameTaCertificateErroruutil.timeoutTa_DEFAULT_TIMEOUTa_TYPE_DEFAULTaTimeouta_TYPE_DEFAULTuutil.urlTaUrla_encode_targetTa_normalize_hostTaparse_urluutil.utilTato_stragetLoggerTuurllib3.connectionpoolaUniona_TYPE_TIMEOUTaTypeVarTa_SelfTa_SelfTuurllib3.connectionpoola__module__u
    Base class for all connection pools, such as
    :class:`.HTTPConnectionPool` and :class:`.HTTPSConnectionPool`.

    .. note::
       ConnectionPool.urlopen() does not normalize or percent-encode target URIs
       which is useful if your target server doesn't support percent-encoded
       target URIs.
    a__qualname__a__annotations__ustr | NoneaLifoQueueDahostaportareturnastruint | NoneaNoneuConnectionPool.__init__Dareturnastra__str__uConnectionPool.__str__Daselfareturna_SelfTpa__enter__uConnectionPool.__enter__Daexc_typeaexc_valaexc_tbareturnutype[BaseException] | NoneuBaseException | NoneuTracebackType | NoneuLiteral[False]a__exit__uConnectionPool.__exit__DareturnaNoneuConnectionPool.closeTaEAGAINaEWOULDBLOCKa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>u
    Thread-safe connection pool for one host.

    :param host:
        Host used for this HTTP Connection (e.g. "localhost"), passed into
        :class:`http.client.HTTPConnection`.

    :param port:
        Port used for this HTTP Connection (None is equivalent to 80), passed
        into :class:`http.client.HTTPConnection`.

    :param timeout:
        Socket timeout in seconds for each individual connection. This can
        be a float or integer, which sets the timeout for the HTTP request,
        or an instance of :class:`urllib3.util.Timeout` which gives you more
        fine-grained control over request timeouts. After the constructor has
        been parsed, this is always a `urllib3.util.Timeout` object.

    :param maxsize:
        Number of connections to save that can be reused. More than 1 is useful
        in multithreaded situations. If ``block`` is set to False, more
        connections will be created but they will not be saved once they've
        been used.

    :param block:
        If set to True, no more than ``maxsize`` connections will be used at
        a time. When no free connections are available, the call will block
        until a connection has been released. This is a useful side effect for
        particular multithreaded situations where one does not want to use more
        than maxsize connections per host to prevent flooding.

    :param headers:
        Headers to include with all requests, unless other headers are given
        explicitly.

    :param retries:
        Retry configuration to use by default with requests in this pool.

    :param _proxy:
        Parsed proxy URL, should not be used directly, instead, see
        :class:`urllib3.ProxyManager`

    :param _proxy_headers:
        A dictionary with proxy headers, should not be used directly,
        instead, see :class:`urllib3.ProxyManager`

    :param \**conn_kw:
        Additional parameters are used to create fresh :class:`urllib3.connection.HTTPConnection`,
        :class:`urllib3.connection.HTTPSConnection` instances.
    utype[BaseHTTPConnection] | type[BaseHTTPSConnection]Dahostaportatimeoutamaxsizeablockaheadersaretriesa_proxya_proxy_headersa_proxy_configaconn_kwastruint | Noneu_TYPE_TIMEOUT | Noneaintaboolutyping.Mapping[str, str] | NoneuRetry | bool | int | NoneuUrl | Noneutyping.Mapping[str, str] | NoneuProxyConfig | Noneutyping.AnyuHTTPConnectionPool.__init__DareturnaBaseHTTPConnectionuHTTPConnectionPool._new_connDatimeoutareturnufloat | NoneaBaseHTTPConnectionuHTTPConnectionPool._get_connDaconnareturnuBaseHTTPConnection | NoneaNoneuHTTPConnectionPool._put_connDaconnareturnaBaseHTTPConnectionaNoneuHTTPConnectionPool._validate_connuHTTPConnectionPool._prepare_proxyDatimeoutareturna_TYPE_TIMEOUTaTimeoutuHTTPConnectionPool._get_timeoutDaerraurlatimeout_valueareturnuBaseSSLError | OSError | SocketTimeoutastru_TYPE_TIMEOUT | NoneaNoneuHTTPConnectionPool._raise_timeoutD
aconnamethodaurlabodyaheadersaretriesatimeoutachunkedaresponse_connapreload_contentadecode_contentaenforce_content_lengthareturnaBaseHTTPConnectionastrpu_TYPE_BODY | Noneutyping.Mapping[str, str] | NoneuRetry | Nonea_TYPE_TIMEOUTabooluBaseHTTPConnection | NoneaboolppaBaseHTTPResponseuHTTPConnectionPool._make_requestuHTTPConnectionPool.closeDaurlareturnastrabooluHTTPConnectionPool.is_same_hostDamethodaurlabodyaheadersaretriesaredirectaassert_same_hostatimeoutapool_timeoutarelease_connachunkedabody_posapreload_contentadecode_contentaresponse_kwareturnastrpu_TYPE_BODY | Noneutyping.Mapping[str, str] | NoneuRetry | bool | int | Noneaboolpa_TYPE_TIMEOUTuint | Noneubool | Noneaboolu_TYPE_BODY_POSITION | Noneaboolputyping.AnyaBaseHTTPResponseuHTTPConnectionPool.urlopena__orig_bases__u
    Same as :class:`.HTTPConnectionPool`, but HTTPS.

    :class:`.HTTPSConnection` uses one of ``assert_fingerprint``,
    ``assert_hostname`` and ``host`` in this order to verify connections.
    If ``assert_hostname`` is False, no verification is done.

    The ``key_file``, ``cert_file``, ``cert_reqs``, ``ca_certs``,
    ``ca_cert_dir``, ``ssl_version``, ``key_password`` are only used if :mod:`ssl`
    is available and are fed into :meth:`urllib3.util.ssl_wrap_socket` to upgrade
    the connection socket into an SSL socket.
    utype[BaseHTTPSConnection]Dahostaportatimeoutamaxsizeablockaheadersaretriesa_proxya_proxy_headersakey_fileacert_fileacert_reqsakey_passwordaca_certsassl_versionassl_minimum_versionassl_maximum_versionaassert_hostnameaassert_fingerprintaca_cert_diraconn_kwareturnastruint | Noneu_TYPE_TIMEOUT | Noneaintaboolutyping.Mapping[str, str] | NoneuRetry | bool | int | NoneuUrl | Noneutyping.Mapping[str, str] | Noneustr | Noneustr | Noneuint | str | Noneustr | Noneustr | Noneuint | str | Noneussl.TLSVersion | Noneussl.TLSVersion | Noneustr | Literal[False] | Noneustr | Noneustr | Noneutyping.AnyaNoneuHTTPSConnectionPool.__init__DaconnareturnaHTTPSConnectionaNoneuHTTPSConnectionPool._prepare_proxyDareturnaBaseHTTPSConnectionuHTTPSConnectionPool._new_connuHTTPSConnectionPool._validate_connDaurlakwareturnastrutyping.AnyaHTTPConnectionPoolaconnection_from_urlaoverloadDahostaschemeareturnaNoneustr | NoneaNoneDahostaschemeareturnastrustr | NoneastrDahostaschemeareturnustr | Noneustr | Noneustr | NoneDapoolapathareturnuHTTPConnectionPool | HTTPSConnectionPoolustr | Noneastra_url_from_poolDapoolareturnuqueue.LifoQueue[typing.Any]aNoneuurllib3\connectionpool.pyu<module urllib3.connectionpool>Ta__class__TaselfTaselfaexc_typeaexc_valaexc_tbTaselfahostaportTaselfahostaportatimeoutamaxsizeablockaheadersaretriesa_proxya_proxy_headersa_proxy_configaconn_kww_apoolTaselfahostaportatimeoutamaxsizeablockaheadersaretriesa_proxya_proxy_headersakey_fileacert_fileacert_reqsakey_passwordaca_certsassl_versionassl_minimum_versionassl_maximum_versionaassert_hostnameaassert_fingerprintaca_cert_diraconn_kwa__class__TapoolaconnTaselfatimeoutaconnTaselfatimeoutTaselfaconnamethodaurlabodyaheadersaretriesatimeoutachunkedaresponse_connapreload_contentadecode_contentaenforce_content_lengthanew_eatimeout_objwearead_timeoutaresponseTaselfaactual_hostaactual_portTaselfaconnTahostaschemeTaselfaconnatunnel_schemeTaselfaerraurlatimeout_valueTapoolapathTaselfaconna__class__Taselfaold_poolTaurlakwaschemew_ahostaportTaselfaurlaschemew_ahostaportTaselfamethodaurlabodyaheadersaretriesaredirectaassert_same_hostatimeoutapool_timeoutarelease_connachunkedabody_posapreload_contentadecode_contentaresponse_kwanew_eaparsed_urladestination_schemeaconnarelease_this_connahttp_tunnel_requiredaerraclean_exitatimeout_objwearesponse_connaresponsearedirect_locationahas_retry_after.urllib35
raloggingagetLoggerTaurllib3aStreamHandlerasetFormatteraFormatterTu%(asctime)s %(levelname)s %(message)saaddHandlerasetLeveladebugTuAdded a stderr logging handler to logger: %saurllib3u
    Helper for quickly adding a StreamHandler to the logger. Useful for
    debugging.

    Returns the handler after adding it.
    awarningsasimplefilteraignoreu
    Helper for quickly disabling all urllib3 warnings.
    a_DEFAULT_POOLarequestTabodyafieldsaheadersapreload_contentadecode_contentaredirectaretriesatimeoutajsonu
    A convenience, top-level request method. It uses a module-global ``PoolManager`` instance.
    Therefore, its side effects could be shared across dependencies relying on it.
    To avoid side effects create a new ``PoolManager`` instance and use it instead.
    The method does not accept low-level ``**urlopen_kw`` keyword arguments.
    u
Python HTTP library with thread-safe connection pooling, file post support, user friendly, and more
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_urllib3u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationslatypingTaNullHandleraNullHandleruTaexceptionslaexceptionsa_base_connectionTa_TYPE_BODYa_TYPE_BODYa_collectionsTaHTTPHeaderDictaHTTPHeaderDicta_versionTa__version__a__version__aconnectionpoolTaHTTPConnectionPoolaHTTPSConnectionPoolaconnection_from_urlaHTTPConnectionPoolaHTTPSConnectionPoolaconnection_from_urlafilepostTa_TYPE_FIELDSaencode_multipart_formdataa_TYPE_FIELDSaencode_multipart_formdataapoolmanagerTaPoolManageraProxyManageraproxy_from_urlaPoolManageraProxyManageraproxy_from_urlaresponseTaBaseHTTPResponseaHTTPResponseaBaseHTTPResponseaHTTPResponseuutil.requestTamake_headersamake_headersuutil.retryTaRetryaRetryuutil.timeoutTaTimeoutaTimeoutasslaOPENSSL_VERSIONastartswithTuOpenSSL awarnuurllib3 v2 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with u. See: https://github.com/urllib3/urllib3/issues/3020aNotOpenSSLWarningaOPENSSL_VERSION_INFOTlppu. See: https://github.com/urllib3/urllib3/issues/2168uAndrey Petrov (andrey.petrov@shazow.net)a__author__aMITa__license__TaHTTPConnectionPoolaHTTPHeaderDictaHTTPSConnectionPoolaPoolManageraProxyManageraHTTPResponseaRetryaTimeoutaadd_stderr_loggeraconnection_from_urladisable_warningsaencode_multipart_formdataamake_headersaproxy_from_urlarequestaBaseHTTPResponsea__all__aDEBUGDalevelareturnaintulogging.StreamHandler[typing.TextIO]aadd_stderr_loggeraalwaysaSecurityWarningDaappendtadefaultaInsecurePlatformWarningaHTTPWarningDacategoryareturnutype[Warning]aNoneadisable_warningsDabodyafieldsaheadersapreload_contentadecode_contentaredirectaretriesatimeoutajsonnnntppnlnDamethodaurlabodyafieldsaheadersapreload_contentadecode_contentaredirectaretriesatimeoutajsonareturnastrpu_TYPE_BODY | Noneu_TYPE_FIELDS | Noneutyping.Mapping[str, str] | Noneubool | Noneubool | Noneubool | NoneuRetry | bool | int | NoneuTimeout | float | int | Noneutyping.Any | NoneaBaseHTTPResponseuurllib3\__init__.pyu<module urllib3>TalevelaloggerahandlerTacategoryTamethodaurlabodyafieldsaheadersapreload_contentadecode_contentaredirectaretriesatimeoutajson.urllib3.contrib'a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_urllib3u\not_existingacontribTaNUITKA_PACKAGE_urllib3_contribu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__uurllib3\contrib\__init__.pyu<module urllib3.contrib>u.urllib3.contrib.pyopenssl;#Fa_validate_dependencies_metaPyOpenSSLContextautilaSSLContextassl_aIS_PYOPENSSLuMonkey-patch urllib3 with PyOpenSSL-backed SSL-support.aorig_util_SSLContextuUndo monkey-patching by :func:`inject_into_urllib3`.ucryptography.x509.extensionsTaExtensionslaExtensionsaget_extension_for_classu'cryptography' module missing required functionality.  Try upgrading to v1.3.4 or newer.uOpenSSL.cryptoTaX509aX509a_x509u'pyOpenSSL' module missing required functionality. Try upgrading to v0.14 or newer.u
    Verifies that PyOpenSSL's package-level dependencies have been met.
    Throws `ImportError` if they are not met.
    Danameareturnastrubytes | Noneu
        Borrowed wholesale from the Python Cryptography Project. It turns out
        that we can't just safely call `idna.encode`: it can explode for
        wildcard names. This avoids that problem.
        aidna_encodeu_dnsname_to_stdlib.<locals>.idna_encodew:adecodeTuutf-8u
    Converts a dNSName SubjectAlternativeName field to the form used by the
    standard library on the given Python version.

    Cryptography produces a dNSName as a unicode string that was idna-decoded
    from ASCII bytes. We need to idna-encode that string to get it back, and
    then on Python 3 we also need to convert to unicode via UTF-8 (the stdlib
    uses PyUnicode_FromStringAndSize on it, which decodes via UTF-8).

    If the name cannot be idna-encoded then we return None signalling that
    the name given should be skipped.
    aidnaTu*.w.anameastartswithaencodeTaasciiacoreaIDNAErrorato_cryptographyaextensionsax509aSubjectAlternativeNameavalueaExtensionNotFoundaDuplicateExtensionaUnsupportedExtensionaUnsupportedGeneralNameTypealogawarninguA problem was encountered with the certificate that prevented urllib3 from finding the SubjectAlternativeName field. This can affect certificate validation. The error was %sa_dnsname_to_stdlibaget_values_for_typeaDNSNameaDNSaextendaIPAddressu
    Given an PyOpenSSL certificate, provides all the subject alternative names.
    uIP Addressu<genexpr>uget_subj_alt_name.<locals>.<genexpr>aconnectionasocketasuppress_ragged_eofsa_io_refsa_closedafilenolaclosearecvaOpenSSLaSSLaSysCallErroraargsTluUnexpected EOFcweaZeroReturnErroraget_shutdownaRECEIVED_SHUTDOWNaWantReadErrorawait_for_readagettimeoutatimeoutTuThe read operation timed outaErrorasslaSSLErroruread error: uarecv_intoasettimeoutaselfasendadataaWantWriteErrorawait_for_writeatotal_senta_send_until_doneaSSL_WRITE_BLOCKSIZEashutdowna_real_closeaget_peer_certificateacryptoadump_certificateaFILETYPE_ASN1asubjectacommonNameaget_subjectaCNasubjectAltNameaget_subj_alt_nameaget_protocol_version_namea_openssl_versionsaprotocolaContexta_ctxa_optionsacheck_hostnameaTLSVersionaMINIMUM_SUPPORTEDa_minimum_versionaMAXIMUM_SUPPORTEDa_maximum_versiona_set_ctx_optionsa_openssl_to_stdlib_verifyaget_verify_modeaset_verifya_stdlib_to_openssl_verifya_verify_callbackaset_default_verify_pathsaset_cipher_listaload_verify_locationsaBytesIOuunable to load trusted certificates: ause_certificate_chain_fileaset_passwd_cbu<lambda>uPyOpenSSLContext.load_cert_chain.<locals>.<lambda>ause_privatekey_fileuUnable to load certificate chain: apasswordato_bytesaasciiaset_alpn_protosaConnectionais_ipaddressaserver_hostnameaset_tlsext_host_nameacnxaset_connect_stateado_handshakeasockTuselect timed outubad handshake: aWrappedSocketaset_optionsa_openssl_to_ssl_minimum_versiona_openssl_to_ssl_maximum_versionu
Module for using pyOpenSSL as a TLS backend. This module was relevant before
the standard library ``ssl`` module supported SNI, but now that we've dropped
support for Python 2.7 all relevant Python versions support SNI so
**this module is no longer recommended**.

This needs the following packages installed:

* `pyOpenSSL`_ (tested with 16.0.0)
* `cryptography`_ (minimum 1.3.4, from pyopenssl)
* `idna`_ (minimum 2.0)

However, pyOpenSSL depends on cryptography, so while we use all three directly here we
end up having relatively few packages required.

You can install them with the following command:

.. code-block:: bash

    $ python -m pip install pyopenssl cryptography idna

To activate certificate checking, call
:func:`~urllib3.contrib.pyopenssl.inject_into_urllib3` from your Python code
before you begin making HTTP requests. This can be done in a ``sitecustomize``
module, or at any other time before your application begins using ``urllib3``,
like this:

.. code-block:: python

    try:
        import urllib3.contrib.pyopenssl
        urllib3.contrib.pyopenssl.inject_into_urllib3()
    except ImportError:
        pass

.. _pyopenssl: https://www.pyopenssl.org
.. _cryptography: https://cryptography.io
.. _idna: https://github.com/kjd/idna
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsuOpenSSL.SSLacryptographyTax509ucryptography.x509TaUnsupportedExtensionTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.contrib.pyopenssla__module__a__qualname__a__orig_bases__aloggingatypingTasocketasocket_clsTatimeoutTautillainject_into_urllib3aextract_from_urllib3a__all__aPROTOCOL_TLSaSSLv23_METHODaPROTOCOL_TLS_CLIENTaPROTOCOL_TLSv1aTLSv1_METHODaPROTOCOL_TLSv1_1aTLSv1_1_METHODaPROTOCOL_TLSv1_2aTLSv1_2_METHODaCERT_NONEaVERIFY_NONEaCERT_OPTIONALaVERIFY_PEERaCERT_REQUIREDaVERIFY_FAIL_IF_NO_PEER_CERTutoo many values to unpack (expected 2)aOP_NO_SSLv2aOP_NO_SSLv3a_OP_NO_SSLv2_OR_SSLv3aintaOP_NO_TLSv1a_OP_NO_TLSv1aOP_NO_TLSv1_1a_OP_NO_TLSv1_1aOP_NO_TLSv1_2a_OP_NO_TLSv1_2aOP_NO_TLSv1_3a_OP_NO_TLSv1_3aTLSv1aTLSv1_1aTLSv1_2aTLSv1_3udict[int, int]l@agetLoggerTuurllib3.contrib.pyopensslDareturnaNoneDanameareturnastrustr | NoneDapeer_certareturnaX509ulist[tuple[str, str]]uAPI-compatibility wrapper for Python OpenSSL's Connection-class.TtDaconnectionasocketasuppress_ragged_eofsareturnuOpenSSL.SSL.Connectionasocket_clsaboolaNonea__init__uWrappedSocket.__init__DareturnaintuWrappedSocket.filenoa_decref_socketiosuWrappedSocket._decref_socketiosDaargsakwargsareturnutyping.Anyutyping.AnyabytesuWrappedSocket.recvDaargsakwargsareturnutyping.Anyutyping.AnyaintuWrappedSocket.recv_intoDatimeoutareturnafloataNoneuWrappedSocket.settimeoutDadataareturnabytesaintuWrappedSocket._send_until_doneDadataareturnabytesaNoneasendalluWrappedSocket.sendalluWrappedSocket.shutdownuWrappedSocket.closeuWrappedSocket._real_closeTFDabinary_formareturnabooludict[str, list[typing.Any]] | NoneagetpeercertuWrappedSocket.getpeercertDareturnastraversionuWrappedSocket.versionTamakefileu
    I am a wrapper class for the PyOpenSSL ``Context`` object. I am responsible
    for translating the interface of the standard library ``SSLContext`` object
    to calls into PyOpenSSL.
    DaprotocolareturnaintaNoneuPyOpenSSLContext.__init__aoptionsuPyOpenSSLContext.optionsasetterDavalueareturnaintaNoneaverify_modeuPyOpenSSLContext.verify_modeDavalueareturnussl.VerifyModeaNoneuPyOpenSSLContext.set_default_verify_pathsDaciphersareturnubytes | straNoneaset_ciphersuPyOpenSSLContext.set_ciphersTnnnDacafileacapathacadataareturnustr | Noneustr | Noneubytes | NoneaNoneuPyOpenSSLContext.load_verify_locationsTnnDacertfileakeyfileapasswordareturnastrustr | Noneustr | NoneaNoneaload_cert_chainuPyOpenSSLContext.load_cert_chainDaprotocolsareturnulist[bytes | str]aNoneaset_alpn_protocolsuPyOpenSSLContext.set_alpn_protocolsTFtpnDasockaserver_sideado_handshake_on_connectasuppress_ragged_eofsaserver_hostnameareturnasocket_clsaboolppubytes | str | NoneaWrappedSocketawrap_socketuPyOpenSSLContext.wrap_socketuPyOpenSSLContext._set_ctx_optionsaminimum_versionuPyOpenSSLContext.minimum_versionDaminimum_versionareturnaintaNoneamaximum_versionuPyOpenSSLContext.maximum_versionDamaximum_versionareturnaintaNoneDacnxax509aerr_noaerr_depthareturn_codeareturnuOpenSSL.SSL.ConnectionaX509aintppabooluurllib3\contrib\pyopenssl.pyTa.0anameTw_apasswordTapasswordu<module urllib3.contrib.pyopenssl>Ta__class__Taselfaconnectionasocketasuppress_ragged_eofsTaselfaprotocolTaselfTanameaidna_encodeaencoded_nameTaselfadataweTaExtensionsaX509ax509Tacnxax509aerr_noaerr_depthareturn_codeTapeer_certacertaextweanamesTaselfabinary_formax509TanameaidnaaprefixTaselfacertfileakeyfileapasswordweTaselfacafileacapathacadataweTaselfamaximum_versionTaselfaminimum_versionTaselfavalueTaselfaargsakwargsadataweTaselfaargsakwargsweTaselfadataatotal_sentasentTaselfaprotocolsTaselfaciphersTaselfatimeoutTaselfasockaserver_sideado_handshake_on_connectasuppress_ragged_eofsaserver_hostnameacnxwe.urllib3.contrib.socksza_socks_optionsa__class__a__init__asource_addressasocket_optionsaextra_kwasocksacreate_connectionahostaportaproxy_typeasocks_versionaproxy_addraproxy_hostaproxy_portaproxy_usernameausernameaproxy_passwordapasswordaproxy_rdnsardnsatimeoutaSocketTimeoutaConnectTimeoutErroruConnection to uu timed out. (connect timeout=w)aProxyErrorasocket_erraNewConnectionErroruFailed to establish a new connection: u
        Establish a new connection via the SOCKS proxy.
        aparse_urlaauthaparsedasplitTw:utoo many values to unpack (expected 2)aschemeasocks5aPROXY_TYPE_SOCKS5asocks5hasocks4aPROXY_TYPE_SOCKS4asocks4auUnable to determine SOCKS version from aproxy_urlaSOCKSProxyManagerapool_classes_by_schemeu
This module contains provisional support for SOCKS proxies from within
urllib3. This module supports SOCKS4, SOCKS4A (an extension of SOCKS4), and
SOCKS5. To enable its functionality, either install PySocks or install this
module with the ``socks`` extra.

The SOCKS implementation supports the full range of urllib3 features. It also
supports the following SOCKS features:

- SOCKS4A (``proxy_url='socks4a://...``)
- SOCKS4 (``proxy_url='socks4://...``)
- SOCKS5 with remote DNS (``proxy_url='socks5h://...``)
- SOCKS5 with local DNS (``proxy_url='socks5://...``)
- Usernames and passwords for the SOCKS proxy

.. note::
   It is recommended to use ``socks5h://`` or ``socks4a://`` schemes in
   your ``proxy_url`` to ensure that DNS resolution is done from the remote
   server instead of client-side when connecting to a domain name.

SOCKS4 supports IPv4 and domain names with the SOCKS4A extension. SOCKS5
supports IPv4, IPv6, and domain names.

When connecting to a SOCKS4 proxy the ``username`` portion of the ``proxy_url``
will be sent as the ``userid`` section of the SOCKS request:

.. code-block:: python

    proxy_url="socks4a://<userid>@proxy-host"

When connecting to a SOCKS5 proxy the ``username`` and ``password`` portion
of the ``proxy_url`` will be sent as the username/password to authenticate
with the proxy:

.. code-block:: python

    proxy_url="socks5h://<username>:<password>@proxy-host"

a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationslawarningsaexceptionsTaDependencyWarninglaDependencyWarningawarnuSOCKS support in urllib3 requires the installation of optional dependencies: specifically, PySocks.  For more information, see https://urllib3.readthedocs.io/en/latest/contrib.html#socks-proxiesatypingasocketTatimeoutaconnectionTaHTTPConnectionaHTTPSConnectionaHTTPConnectionaHTTPSConnectionaconnectionpoolTaHTTPConnectionPoolaHTTPSConnectionPoolaHTTPConnectionPoolaHTTPSConnectionPoolTaConnectTimeoutErroraNewConnectionErrorapoolmanagerTaPoolManageraPoolManageruutil.urlTaparse_urlasslaTypedDicta__prepare__a_TYPE_SOCKS_OPTIONSa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.contrib.socksa__module__a__qualname__a__annotations__aintustr | Noneaboola__orig_bases__aSOCKSConnectionu
    A plain-text HTTP connection that connects via a SOCKS proxy.
    Da_socks_optionsaargsakwargsareturna_TYPE_SOCKS_OPTIONSutyping.Anyutyping.AnyaNoneuSOCKSConnection.__init__Dareturnusocks.socksocketa_new_connuSOCKSConnection._new_connaSOCKSHTTPSConnectionaSOCKSHTTPConnectionPoolaConnectionClsaSOCKSHTTPSConnectionPoolu
    A version of the urllib3 ProxyManager that routes connections via the
    defined SOCKS proxy.
    ahttpahttpsTnnl
nDaproxy_urlausernameapasswordanum_poolsaheadersaconnection_pool_kwastrustr | Noneustr | Noneaintutyping.Mapping[str, str] | Noneutyping.AnyuSOCKSProxyManager.__init__uurllib3\contrib\socks.pyu<module urllib3.contrib.socks>Ta__class__Taselfa_socks_optionsaargsakwargsa__class__T
aselfaproxy_urlausernameapasswordanum_poolsaheadersaconnection_pool_kwaparsedasplitasocks_versionardnsasocks_optionsa__class__Taselfaextra_kwaconnweaerror.urllib3.exceptionsapoola__class__a__init__uu: Tnnaurlaoriginal_errorareasonuMax retries exceeded with url: u (Caused by w)uTried to open a foreign host with url: aretriesaconnawarningsawarnuThe 'pool' property is deprecated and will be removed in urllib3 v2.1.0. Use 'conn' instead.aDeprecationWarningDastacklevelluFailed to resolve 'u' (uFailed to parse: alocationuNot supported URL scheme aschemeapartialaexpecteduIncompleteRead(%i bytes read, %i more expected)atellalength_remainingaresponsealengthuInvalidChunkLength(got length %r, %i bytes read)alocalhostuProxy URL had no scheme, should start with http:// or https://uProxy URL had unsupported scheme u, should use http:// or https://aUnknownu, unparsed data: a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsasocketlatypinguemail.errorsTaMessageDefectaMessageDefectuhttp.clientTaIncompleteReadaIncompleteReadahttplib_IncompleteReadTEExceptiona__prepare__aHTTPErrora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.exceptionsa__module__uBase exception used by this module.a__qualname__a__orig_bases__aWarningaHTTPWarninguBase warning used by this module.aTupleaCallableTQOobjectTOobjectQa_TYPE_REDUCE_RESULTaPoolErroruBase exception for errors caused within a pool.DapoolamessageareturnaConnectionPoolastraNoneuPoolError.__init__Dareturna_TYPE_REDUCE_RESULTa__reduce__uPoolError.__reduce__aRequestErroruBase exception for PoolErrors that have associated URLs.DapoolaurlamessageareturnaConnectionPoolastrpaNoneuRequestError.__init__uRequestError.__reduce__aSSLErroruRaised when SSL certificate fails in an HTTPS connection.aProxyErroruRaised when the connection to a proxy fails.a__annotations__aExceptionDamessageaerrorareturnastraExceptionaNoneuProxyError.__init__aDecodeErroruRaised when automatic decoding based on Content-Type fails.aProtocolErroruRaised when something unexpected happens mid-request/response.aConnectionErroraMaxRetryErroruRaised when the maximum number of retries is exceeded.

    :param pool: The connection pool
    :type pool: :class:`~urllib3.connectionpool.HTTPConnectionPool`
    :param str url: The requested Url
    :param reason: The underlying error
    :type reason: :class:`Exception`

    TnDapoolaurlareasonareturnaConnectionPoolastruException | NoneaNoneuMaxRetryError.__init__aHostChangedErroruRaised when an existing pool gets a request for a foreign host.TlDapoolaurlaretriesareturnaConnectionPoolastruRetry | intaNoneuHostChangedError.__init__aTimeoutStateErroruRaised when passing an invalid state to a timeoutaTimeoutErroruRaised when a socket timeout error occurs.

    Catching this error will catch both :exc:`ReadTimeoutErrors
    <ReadTimeoutError>` and :exc:`ConnectTimeoutErrors <ConnectTimeoutError>`.
    aReadTimeoutErroruRaised when a socket timeout occurs while receiving data from a serveraConnectTimeoutErroruRaised when a socket timeout occurs while connecting to a serveraNewConnectionErroruRaised when we fail to establish a new connection. Usually ECONNREFUSED.DaconnamessageareturnaHTTPConnectionastraNoneuNewConnectionError.__init__apropertyDareturnaHTTPConnectionuNewConnectionError.poolaNameResolutionErroruRaised when host name resolution fails.DahostaconnareasonastraHTTPConnectionusocket.gaierroruNameResolutionError.__init__aEmptyPoolErroruRaised when a pool runs out of connections and no more are allowed.aFullPoolErroruRaised when we try to add a connection to a full pool in blocking mode.aClosedPoolErroruRaised when a request enters a pool after the pool has been closed.aLocationValueErroruRaised when there is something wrong with a given URL input.aLocationParseErroruRaised when get_host or similar fails to parse the URL input.DalocationareturnastraNoneuLocationParseError.__init__aURLSchemeUnknownuRaised when a URL input has an unsupported scheme.DaschemeastruURLSchemeUnknown.__init__aResponseErroruUsed as a container for an error reason supplied in a MaxRetryError.utoo many error responsesaGENERIC_ERRORutoo many {status_code} error responsesaSPECIFIC_ERRORaSecurityWarninguWarned when performing security reducing actionsaInsecureRequestWarninguWarned when making an unverified HTTPS request.aNotOpenSSLWarninguWarned when using unsupported SSL libraryaSystemTimeWarninguWarned when system time is suspected to be wrongaInsecurePlatformWarninguWarned when certain TLS/SSL configuration is not available on a platform.aDependencyWarningu
    Warned when an attempt is made to import a module with missing optional
    dependencies.
    aResponseNotChunkeduResponse needs to be chunked in order to read it as chunks.aBodyNotHttplibCompatibleu
    Body should be :class:`http.client.HTTPResponse` like
    (have an fp attribute which returns raw chunks) for read_chunked().
    u
    Response length doesn't match expected Content-Length

    Subclass of :class:`http.client.IncompleteRead` to allow int value
    for ``partial`` to avoid creating large objects on streamed reads.
    DapartialaexpectedareturnaintpaNoneuIncompleteRead.__init__Dareturnastra__repr__uIncompleteRead.__repr__aInvalidChunkLengthuInvalid chunk length in a chunked response.DaresponsealengthareturnaHTTPResponseabytesaNoneuInvalidChunkLength.__init__uInvalidChunkLength.__repr__aInvalidHeaderuThe header provided was somehow invalid.aProxySchemeUnknownuProxyManager does not support the supplied schemeDaschemeareturnustr | NoneaNoneuProxySchemeUnknown.__init__TEValueErroraProxySchemeUnsupporteduFetching HTTPS resources through HTTPS proxies is unsupportedaHeaderParsingErroruRaised by assert_header_parsing, but we convert it to a log.warning statement.Dadefectsaunparsed_dataareturnulist[MessageDefect]ubytes | str | NoneaNoneuHeaderParsingError.__init__aUnrewindableBodyErroruurllib3 encountered an error when trying to rewind a bodyuurllib3\exceptions.pyu<module urllib3.exceptions>Ta__class__Taselfaconnamessagea__class__Taselfadefectsaunparsed_dataamessagea__class__Taselfahostaconnareasonamessagea__class__Taselfalocationamessagea__class__Taselfamessageaerrora__class__TaselfapartialaexpectedTaselfapoolamessagea__class__Taselfapoolaurlamessagea__class__Taselfapoolaurlareasonamessagea__class__Taselfapoolaurlaretriesamessagea__class__TaselfaresponsealengthTaselfaschemeamessagea__class__Taself.urllib3.fields@|amimetypesaguess_typelu
    Guess the "Content-Type" of a file.

    :param filename:
        The filename to guess the "Content-Type" of using :mod:`mimetypes`.
    :param default:
        If no "Content-Type" can be guessed, default to `default`.
    awarningsawarnu'format_header_param_rfc2231' is deprecated and will be removed in urllib3 v2.1.0. This is not valid for multipart/form-data header parameters.aDeprecationWarningDastacklevelladecodeTuutf-8u"\
uu="avaluew"aasciiTEUnicodeEncodeErrorEUnicodeDecodeErroraemailautilsaencode_rfc2231uutf-8u*=u
    Helper function to format and quote a single header parameter using the
    strategy defined in RFC 2231.

    Particularly useful for header parameters which might contain
    non-ASCII values, like file names. This follows
    `RFC 2388 Section 4.4 <https://tools.ietf.org/html/rfc2388#section-4.4>`_.

    :param name:
        The name of the parameter, a string expected to be ASCII only.
    :param value:
        The value of the parameter, provided as ``bytes`` or `str``.
    :returns:
        An RFC-2231-formatted unicode string.

    .. deprecated:: 2.0.0
        Will be removed in urllib3 v2.1.0. This is not valid for
        ``multipart/form-data`` header parameters.
    u<genexpr>uformat_header_param_rfc2231.<locals>.<genexpr>atranslateDl
l
l"u%0Au%0Du%22u
    Format and quote a single multipart header parameter.

    This follows the `WHATWG HTML Standard`_ as of 2021/06/10, matching
    the behavior of current browser and curl versions. Values are
    assumed to be UTF-8. The ``\n``, ``\r``, and ``"`` characters are
    percent encoded.

    .. _WHATWG HTML Standard:
        https://html.spec.whatwg.org/multipage/
        form-control-infrastructure.html#multipart-form-data

    :param name:
        The name of the parameter, an ASCII-only ``str``.
    :param value:
        The value of the parameter, a ``str`` or UTF-8 encoded
        ``bytes``.
    :returns:
        A string ``name="value"`` with the escaped value.

    .. versionchanged:: 2.0.0
        Matches the WHATWG HTML Standard as of 2021/06/10. Control
        characters are no longer percent encoded.

    .. versionchanged:: 2.0.0
        Renamed from ``format_header_param_html5`` and
        ``format_header_param``. The old names will be removed in
        urllib3 v2.1.0.
    u'format_header_param_html5' has been renamed to 'format_multipart_header_param'. The old name will be removed in urllib3 v2.1.0.aformat_multipart_header_paramu
    .. deprecated:: 2.0.0
        Renamed to :func:`format_multipart_header_param`. Will be
        removed in urllib3 v2.1.0.
    u'format_header_param' has been renamed to 'format_multipart_header_param'. The old name will be removed in urllib3 v2.1.0.a_namea_filenameadataaheadersuThe 'header_formatter' parameter is deprecated and will be removed in urllib3 v2.1.0.aheader_formatteratypingacastaTuplea_TYPE_FIELD_VALUEutoo many values to unpack (expected 3)utoo many values to unpack (expected 2)aguess_content_typeafilenameTafilenameaheader_formatteramake_multipartTacontent_typeu
        A :class:`~urllib3.fields.RequestField` factory from old-style tuple parameters.

        Supports constructing :class:`~urllib3.fields.RequestField` from
        parameter of key/value strings AND key/filetuple. A filetuple is a
        (filename, data, MIME type) tuple where the MIME type is optional.
        For example::

            'foo': 'bar',
            'fakefile': ('foofile.txt', 'contents of foofile'),
            'realfile': ('barfile.txt', open('realfile').read()),
            'typedfile': ('bazfile.bin', open('bazfile').read(), 'image/jpeg'),
            'nonamefile': 'contents of nonamefile field',

        Field names and filenames must be unicode.
        u
        Override this method to change how each multipart header
        parameter is formatted. By default, this calls
        :func:`format_multipart_header_param`.

        :param name:
            The name of the parameter, an ASCII-only ``str``.
        :param value:
            The value of the parameter, a ``str`` or UTF-8 encoded
            ``bytes``.

        :meta public:
        aitemsapartsaappendaselfa_render_partu; u
        Helper function to format and quote a single header.

        Useful for single headers that are composed of multiple items. E.g.,
        'Content-Disposition' fields.

        :param header_parts:
            A sequence of (k, v) tuples or a :class:`dict` of (k, v) to format
            as `k1="v1"; k2="v2"; ...`.
        uContent-DispositionuContent-TypeuContent-Locationagetalinesu: Tu
u
u
        Renders the headers for this request field.
        uform-dataa_render_partsanameu
        Makes this request field into a multipart request field.

        This method overrides "Content-Disposition", "Content-Type" and
        "Content-Location" headers to the request parameter.

        :param content_disposition:
            The 'Content-Disposition' of the request body. Defaults to 'form-data'
        :param content_type:
            The 'Content-Type' of the request body.
        :param content_location:
            The 'Content-Location' of the request body.

        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsuemail.utilsaUnionTOstrObytesa_TYPE_FIELD_VALUE_TUPLETuapplication/octet-streamDafilenameadefaultareturnustr | NoneastrpDanameavalueareturnastra_TYPE_FIELD_VALUEastraformat_header_param_rfc2231aformat_header_param_html5aformat_header_paramuurllib3.fieldsa__module__u
    A data container for request body parameters.

    :param name:
        The name of this request field. Must be unicode.
    :param data:
        The data/value body.
    :param filename:
        An optional filename of the request field. Must be unicode.
    :param headers:
        An optional dict-like object of headers to initially use for the field.

    .. versionchanged:: 2.0.0
        The ``header_formatter`` parameter is deprecated and will
        be removed in urllib3 v2.1.0.
    aRequestFielda__qualname__TnnnDanameadataafilenameaheadersaheader_formatterastra_TYPE_FIELD_VALUEustr | Noneutyping.Mapping[str, str] | Noneutyping.Callable[[str, _TYPE_FIELD_VALUE], str] | Nonea__init__uRequestField.__init__TnDafieldnameavalueaheader_formatterareturnastra_TYPE_FIELD_VALUE_TUPLEutyping.Callable[[str, _TYPE_FIELD_VALUE], str] | NoneaRequestFieldafrom_tuplesuRequestField.from_tuplesuRequestField._render_partDaheader_partsareturnudict[str, _TYPE_FIELD_VALUE | None] | typing.Sequence[tuple[str, _TYPE_FIELD_VALUE | None]]astruRequestField._render_partsDareturnastrarender_headersuRequestField.render_headersDacontent_dispositionacontent_typeacontent_locationareturnustr | Noneustr | Noneustr | NoneaNoneuRequestField.make_multipartTuurllib3\fields.pyTa.0achavalueu<module urllib3.fields>Taselfanameadataafilenameaheadersaheader_formatterawarningsTaselfanameavalueTaselfaheader_partsaiterableapartsanameavalueTanameavalueawarningsTanameavalueawarningsaresultTanameavalueTaclsafieldnameavalueaheader_formatterafilenameacontent_typeadataarequest_paramTafilenameadefaultTaselfacontent_dispositionacontent_typeacontent_locationTaselfalinesasort_keysasort_keyaheader_nameaheader_value.urllib3.filepost<abinasciiahexlifyaosaurandomTladecodeu
    Our embarrassingly-simple replacement for mimetools.choose_boundary.
    u
    Iterate over fields.

    Supports list of (k, v) tuples and dicts, and lists of
    :class:`~urllib3.fields.RequestField`.

    afieldsatypingaMappingaitemsaRequestFieldafrom_tuplesaiter_field_objectsaBytesIOachoose_boundaryabodyawriteu--uu
ulatin-1awriterarender_headersadataTc
u--
umultipart/form-data; boundary=agetvalueu
    Encode a dictionary of ``fields`` using the multipart/form-data MIME format.

    :param fields:
        Dictionary of fields or list of (key, :class:`~urllib3.fields.RequestField`).
        Values are processed by :func:`urllib3.fields.RequestField.from_tuples`.

    :param boundary:
        If not specified, then a random boundary will be generated using
        :func:`urllib3.filepost.choose_boundary`.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationslacodecsTa_TYPE_FIELD_VALUE_TUPLEaRequestFieldla_TYPE_FIELD_VALUE_TUPLEalookupTuutf-8laSequenceaUnionaTuplea_TYPE_FIELDS_SEQUENCEa_TYPE_FIELDSDareturnastrDafieldsareturna_TYPE_FIELDSutyping.Iterable[RequestField]TnDafieldsaboundaryareturna_TYPE_FIELDSustr | Noneutuple[bytes, str]aencode_multipart_formdatauurllib3\filepost.pyu<module urllib3.filepost>Tafieldsaboundaryabodyafieldadataacontent_typeTafieldsaiterableafield.urllib3.poolmanager51acopyaschemealowerahostTaheadersa_proxy_headersa_socks_optionsacontextaitemsagetTasocket_optionsasocket_optionsakeysapopakey_a_fieldsTakey_blocksizea_DEFAULT_BLOCKSIZEakey_blocksizeu
    Create a pool key out of a request context dictionary.

    According to RFC 3986, both the scheme and host are case-insensitive.
    Therefore, this function normalizes both before constructing the pool
    key for an HTTPS request. If you wish to change this behaviour, provide
    alternate callables to ``key_fn_by_scheme``.

    :param key_class:
        The class to use when constructing the key. This should be a namedtuple
        with the ``scheme`` and ``host`` keys at a minimum.
    :type  key_class: namedtuple
    :param request_context:
        A dictionary-like object that contain the context for a request.
    :type  request_context: dict

    :return: A namedtuple that can be used as a connection pool key.
    :rtype:  PoolKey
    a__class__a__init__aconnection_pool_kwaRecentlyUsedContainerapoolsapool_classes_by_schemeakey_fn_by_schemeaclearTablocksizeablocksizeTaschemeahostaportarequest_contextahttpaSSL_KEYWORDSu
        Create a new :class:`urllib3.connectionpool.ConnectionPool` based on host, port, scheme, and
        any additional pool keyword arguments.

        If ``request_context`` is provided, it is provided as keyword arguments
        to the pool class used. This method is used to actually create the
        connection pools handed out by :meth:`connection_from_url` and
        companion methods. It is intended to be overridden for customization.
        u
        Empty our store of pools and direct them all to close.

        This will not affect in-flight connections, but they will not be
        re-used after completion.
        aLocationValueErrorTuNo host specified.a_merge_pool_kwargsaport_by_schemelPaportaconnection_from_contextu
        Get a :class:`urllib3.connectionpool.ConnectionPool` based on the host, port, and scheme.

        If ``port`` isn't given, it will be derived from the ``scheme`` using
        ``urllib3.connectionpool.port_by_scheme``. If ``pool_kwargs`` is
        provided, it is merged with the instance's ``connection_pool_kw``
        variable and used to create the new connection pool, if one is
        needed.
        astrictawarningsawarnuThe 'strict' parameter is no longer needed on Python 3+. This will raise an error in urllib3 v2.1.0.aDeprecationWarningTastrictaURLSchemeUnknownaconnection_from_pool_keyTarequest_contextu
        Get a :class:`urllib3.connectionpool.ConnectionPool` based on the request context.

        ``request_context`` must at least contain the ``scheme`` key and its
        value must be a key in ``key_fn_by_scheme`` instance variable.
        alocka__enter__a__exit__a_new_poolTnnnapoolu
        Get a :class:`urllib3.connectionpool.ConnectionPool` based on the provided pool key.

        ``pool_key`` should be a namedtuple that only contains immutable
        objects. At a minimum it must have the ``scheme``, ``host``, and
        ``port`` fields.
        aparse_urlaconnection_from_hostTaportaschemeapool_kwargsu
        Similar to :func:`urllib3.connectionpool.connection_from_url`.

        If ``pool_kwargs`` is not provided and a new pool needs to be
        constructed, ``self.connection_pool_kw`` is used to initialize
        the :class:`urllib3.connectionpool.ConnectionPool`. If ``pool_kwargs``
        is provided, it is used instead. Note that if a new pool does not
        need to be created for the request, the provided ``pool_kwargs`` are
        not used.
        utoo many values to unpack (expected 2)abase_pool_kwargsu
        Merge a dictionary of override values for self.connection_pool_kw.

        This does not modify self.connection_pool_kw and returns a new dict.
        Any keys in the override dictionary with a value of ``None`` are
        removed from the merged dictionary.
        aproxyaconnection_requires_http_tunnelaproxy_configu
        Indicates if the proxy requires the complete destination URL in the
        request.  Normally this is only needed when not using an HTTP CONNECT
        tunnel.
        lTuURLs without a scheme (ie 'https://') are deprecated and will raise an error in a future version of urllib3. To avoid this DeprecationWarning ensure all URLs start with 'https://' or 'http://'. Read more in this issue: https://github.com/urllib3/urllib3/issues/2920TacategoryastacklevelTaportaschemeaassert_same_hostaredirectaheadersa_proxy_requires_url_absolute_formaurlopenarequest_uriaget_redirect_locationaresponseaurljoinastatusl/aGETabodyaHTTPHeaderDicta_prepare_for_method_changeTaretriesaRetryafrom_intTaredirectaremove_headers_on_redirectaconnais_same_hostaretriesanew_headersaincrementTaresponsea_poolaMaxRetryErroraraise_on_redirectadrain_connalogainfouRedirecting %s -> %saredirect_locationu
        Same as :meth:`urllib3.HTTPConnectionPool.urlopen`
        with custom cross-host redirect logic and only sends the request-uri
        portion of the ``url``.

        The given ``url`` parameter must be absolute, such that an appropriate
        :class:`urllib3.connectionpool.ConnectionPool` can be chosen for it.
        aHTTPConnectionPooluu://w:TahttpahttpsaProxySchemeUnknowna_replaceTaportaproxy_headersaproxy_ssl_contextaProxyConfiga_proxya_proxy_headersa_proxy_configahttpsTapool_kwargsDaAcceptu*/*anetlocaHostaheaders_u
        Sets headers needed by proxies: specifically, the Accept and Host
        headers. Only sets headers not provided by the user.
        a_set_proxy_headersakwuSame as HTTP(S)ConnectionPool.urlopen, ``url`` must be absolute.aProxyManageraproxy_urla__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsafunctoolsalogginglatypingaTracebackTypeuurllib.parseTaurljoina_collectionsTaHTTPHeaderDictaRecentlyUsedContainerla_request_methodsTaRequestMethodsaRequestMethodsaconnectionTaProxyConfigaconnectionpoolTaHTTPConnectionPoolaHTTPSConnectionPoolaport_by_schemeaHTTPSConnectionPoolaexceptionsTaLocationValueErroraMaxRetryErroraProxySchemeUnknownaURLSchemeUnknownTaBaseHTTPResponseaBaseHTTPResponseuutil.connectionTa_TYPE_SOCKET_OPTIONSa_TYPE_SOCKET_OPTIONSuutil.proxyTaconnection_requires_http_tunneluutil.retryTaRetryuutil.timeoutTaTimeoutaTimeoutuutil.urlTaUrlaparse_urlaUrlaPoolManageraproxy_from_urla__all__agetLoggerTuurllib3.poolmanagerTakey_fileacert_fileacert_reqsaca_certsaca_cert_dataassl_versionassl_minimum_versionassl_maximum_versionaca_cert_dirassl_contextakey_passwordaserver_hostnamel@aTypeVarTa_SelfTa_SelfTaNamedTuplea__prepare__aPoolKeya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.poolmanagera__module__u
    All known keyword arguments that could be provided to the pool manager, its
    pools, or the underlying connections.

    All custom key schemes should include the fields in this key at a minimum.
    a__qualname__a__annotations__astrakey_schemeakey_hostuint | Noneakey_portuTimeout | float | int | Noneakey_timeoutuRetry | bool | int | Noneakey_retriesubool | Noneakey_blockutuple[str, int] | Noneakey_source_addressustr | Noneakey_key_fileakey_key_passwordakey_cert_fileakey_cert_reqsakey_ca_certsustr | bytes | Noneakey_ca_cert_datauint | str | Noneakey_ssl_versionussl.TLSVersion | Noneakey_ssl_minimum_versionakey_ssl_maximum_versionakey_ca_cert_dirussl.SSLContext | Noneakey_ssl_contextakey_maxsizeufrozenset[tuple[str, str]] | Noneakey_headersuUrl | Noneakey__proxyakey__proxy_headersuProxyConfig | Noneakey__proxy_configu_TYPE_SOCKET_OPTIONS | Noneakey_socket_optionsakey__socks_optionsubool | str | Noneakey_assert_hostnameakey_assert_fingerprintakey_server_hostnamea__orig_bases__Dakey_classarequest_contextareturnutype[PoolKey]udict[str, typing.Any]aPoolKeya_default_key_normalizerapartialu
    Allows for arbitrary requests while transparently keeping track of
    necessary connection pools for you.

    :param num_pools:
        Number of connection pools to cache before discarding the least
        recently used pool.

    :param headers:
        Headers to include with all requests, unless other headers are given
        explicitly.

    :param \**connection_pool_kw:
        Additional parameters are used to create fresh
        :class:`urllib3.connectionpool.ConnectionPool` instances.

    Example:

    .. code-block:: python

        import urllib3

        http = urllib3.PoolManager(num_pools=2)

        resp1 = http.request("GET", "https://google.com/")
        resp2 = http.request("GET", "https://google.com/mail")
        resp3 = http.request("GET", "https://yahoo.com/")

        print(len(http.pools))
        # 2

    Tl
nDanum_poolsaheadersaconnection_pool_kwareturnaintutyping.Mapping[str, str] | Noneutyping.AnyaNoneuPoolManager.__init__Daselfareturna_SelfTpuPoolManager.__enter__Daexc_typeaexc_valaexc_tbareturnutype[BaseException] | NoneuBaseException | NoneuTracebackType | NoneuLiteral[False]uPoolManager.__exit__TnDaschemeahostaportarequest_contextareturnastrpaintudict[str, typing.Any] | NoneaHTTPConnectionPooluPoolManager._new_poolDareturnaNoneuPoolManager.clearTnahttpnDahostaportaschemeapool_kwargsareturnustr | Noneuint | Noneustr | Noneudict[str, typing.Any] | NoneaHTTPConnectionPooluPoolManager.connection_from_hostDarequest_contextareturnudict[str, typing.Any]aHTTPConnectionPooluPoolManager.connection_from_contextDapool_keyarequest_contextareturnaPoolKeyudict[str, typing.Any]aHTTPConnectionPooluPoolManager.connection_from_pool_keyDaurlapool_kwargsareturnastrudict[str, typing.Any] | NoneaHTTPConnectionPoolaconnection_from_urluPoolManager.connection_from_urlDaoverrideareturnudict[str, typing.Any] | Noneudict[str, typing.Any]uPoolManager._merge_pool_kwargsDaparsed_urlareturnaUrlabooluPoolManager._proxy_requires_url_absolute_formTtDamethodaurlaredirectakwareturnastrpaboolutyping.AnyaBaseHTTPResponseuPoolManager.urlopenu
    Behaves just like :class:`PoolManager`, but sends all requests through
    the defined proxy, using the CONNECT method for HTTPS URLs.

    :param proxy_url:
        The URL of the proxy to be used.

    :param proxy_headers:
        A dictionary containing headers that will be sent to the proxy. In case
        of HTTP they are being sent with each request, while in the
        HTTPS/CONNECT case they are sent only once. Could be used for proxy
        authentication.

    :param proxy_ssl_context:
        The proxy SSL context is used to establish the TLS connection to the
        proxy when using HTTPS proxies.

    :param use_forwarding_for_https:
        (Defaults to False) If set to True will forward requests to the HTTPS
        proxy to be made on behalf of the client instead of creating a TLS
        tunnel via the CONNECT method. **Enabling this flag means that request
        and response headers and content will be visible from the HTTPS proxy**
        whereas tunneling keeps request and response headers and content
        private.  IP address, target hostname, SNI, and port are always visible
        to an HTTPS proxy even when this flag is disabled.

    :param proxy_assert_hostname:
        The hostname of the certificate to verify against.

    :param proxy_assert_fingerprint:
        The fingerprint of the certificate to verify against.

    Example:

    .. code-block:: python

        import urllib3

        proxy = urllib3.ProxyManager("https://localhost:3128/")

        resp1 = proxy.request("GET", "https://google.com/")
        resp2 = proxy.request("GET", "https://httpbin.org/")

        print(len(proxy.pools))
        # 1

        resp3 = proxy.request("GET", "https://httpbin.org/")
        resp4 = proxy.request("GET", "https://twitter.com/")

        print(len(proxy.pools))
        # 3

    Tl
nnnFnnD
aproxy_urlanum_poolsaheadersaproxy_headersaproxy_ssl_contextause_forwarding_for_httpsaproxy_assert_hostnameaproxy_assert_fingerprintaconnection_pool_kwareturnastraintutyping.Mapping[str, str] | Noneutyping.Mapping[str, str] | Noneussl.SSLContext | NoneabooluNone | str | Literal[False]ustr | Noneutyping.AnyaNoneuProxyManager.__init__uProxyManager.connection_from_hostDaurlaheadersareturnastrutyping.Mapping[str, str] | Noneutyping.Mapping[str, str]uProxyManager._set_proxy_headersuProxyManager.urlopenDaurlakwareturnastrutyping.AnyaProxyManageruurllib3\poolmanager.pyu<module urllib3.poolmanager>Ta__class__TaselfTaselfaexc_typeaexc_valaexc_tbTaselfanum_poolsaheadersaconnection_pool_kwa__class__Taselfaproxy_urlanum_poolsaheadersaproxy_headersaproxy_ssl_contextause_forwarding_for_httpsaproxy_assert_hostnameaproxy_assert_fingerprintaconnection_pool_kwastr_proxy_urlaproxyaporta__class__Takey_classarequest_contextacontextakeyasocket_optsafieldTaselfaoverrideabase_pool_kwargsakeyavalueTaselfaschemeahostaportarequest_contextapool_clsakeyakwTaselfaparsed_urlTaselfaurlaheadersaheaders_anetlocTaselfarequest_contextaschemeapool_key_constructorapool_keyTaselfahostaportaschemeapool_kwargsa__class__Taselfahostaportaschemeapool_kwargsarequest_contextTaselfapool_keyarequest_contextapoolaschemeahostaportTaselfaurlapool_kwargswuTaurlakwTaselfamethodaurlaredirectakwwuaconnaresponsearedirect_locationaretriesanew_headersaheaderTaselfamethodaurlaredirectakwwuaheadersa__class__.urllib3.response>a_first_tryca_dataazlibadecompressobja_objadecompressaerroraMAX_WBITSaflushlaGzipDecoderStateaFIRST_MEMBERa_stateBaSWALLOW_DATAaretaselfadataaOTHER_MEMBERSaunused_dataabrotliaDecompressoraprocessazstdaZstdDecompressoraeofadata_partsaappendaDecodeErrorTuZstandard data is incompleteasplitTw,a_get_decoderastripa_decoderslw,aMultiDecoderTagzipux-gzipaGzipDecoderabraBrotliDecoderaZstdDecoderaDeflateDecoderacollectionsadequeabuffera_sizeubuffer is emptyun should be > 0aBytesIOafetchedwnapopleftutoo many values to unpack (expected 2)awriteaappendleftagetvalueaHTTPHeaderDictaheadersastatusaversionareasonadecode_contenta_has_decoded_contenta_request_urlaretriesachunkedagetTutransfer-encodingualowera_decoderu<genexpr>uBaseHTTPResponse.__init__.<locals>.<genexpr>aREDIRECT_STATUSESTalocationu
        Should we redirect and where to?

        :returns: Truthy redirect location string if we got a redirect status
            code and valid location. ``None`` if redirect status and no
            location. ``False`` if not a redirect status code.
        adecodeTuutf-8a_jsonaloadsu
        Parses the body of the HTTP response as JSON.

        To use a custom JSON decoder pass the result of :attr:`HTTPResponse.data` to the decoder.

        This method can raise either `UnicodeDecodeError` or `json.JSONDecodeError`.

        Read more :ref:`here <json>`.
        a_retriesahistorylaredirect_locationaurlTucontent-encodinguaCONTENT_DECODERSu
        Set-up the _decoder attribute if necessary.
        uCalling read(decode_content=False) is not supported after read(decode_content=True) was called.aDECODER_ERROR_CLASSESuReceived response with content-encoding: %s, but failed to decode it.a_flush_decoderu
        Decode the data passed in and potentially flush the decoder.
        Tcu
        Flushes the decoder. Should only be called if the decoder is actually
        being used.
        areadawarningsawarnaDeprecationWarninglTuHTTPResponse.getheaders() is deprecated and will be removed in urllib3 v2.1.0. Instead access HTTPResponse.headers directly.TacategoryastacklevelTuHTTPResponse.getheader() is deprecated and will be removed in urllib3 v2.1.0. Instead use HTTPResponse.headers.get(name, default).a__class__a__init__Taheadersastatusaversionareasonadecode_contentarequest_urlaretriesaenforce_content_lengthaauto_closea_bodya_fpa_original_responsea_fp_bytes_readamsgTOstrObytesa_poola_connectionabodyachunk_lefta_init_lengthalength_remainingaBytesQueueBuffera_decoded_bufferTadecode_contenta_put_connaHTTPErroraBaseSSLErroraHTTPExceptionu
        Read and discard any remaining HTTP response data in the response connection.

        Unread data in the HTTPResponse connection blocks the connection from being released back to the pool.
        TtTacache_contentais_fp_closedu
        Obtain the number of bytes pulled over the wire so far. May differ from
        the amount of content returned by :meth:``urllib3.response.HTTPResponse.read``
        if bytes are encoded on the wire (e.g, compressed).
        Tucontent-lengthalogawarningTuReceived response with both Content-Length and Transfer-Encoding set. This is expressly forbidden by RFC 7230 sec 3.3.2. Ignoring Content-Length and attempting to process response as Transfer-Encoding: chunked.aInvalidHeaderuContent-Length contained multiple unmatching values (%s)apopTll0ldlaHEADu
        Set initial length value for Response content if available.
        u
        Catch low-level python exceptions, instead re-raising urllib3
        variants, so that low-level exceptions are not leaked in the
        high-level api.

        On exit, release the connection back to the pool.
        aSocketTimeoutaReadTimeoutErroruRead timed out.uread operation timed outaSSLErroraProtocolErroruConnection broken: uacloseaisclosedarelease_conna_error_catcheruHTTPResponse._error_catcherqautilaIS_PYOPENSSLqaamtaminamax_chunk_amtachunk_amtu
        Read a response with the thought that reading the number of bytes
        larger than can fit in a 32-bit int at a time via SSL in some
        known cases leads to an overflow error that has to be prevented
        if `amt` or `self.length_remaining` indicate that a problem may
        happen.

        The known cases:
          * 3.8 <= CPython < 3.9.7 because of a bug
            https://github.com/urllib3/urllib3/issues/2513#issuecomment-1152559900.
          * urllib3 injected with pyOpenSSL-backed SSL-support.
          * CPython < 3.10 only when `amt` does not fit 32-bit int.
        acloseda__enter__a__exit__a_fp_readaIncompleteReadTnnnu
        Reads `amt` of bytes from the socket.
        a_init_decodera_raw_reada_decodeaputaflush_decoderu
        Similar to :meth:`http.client.HTTPResponse.read`, but with two additional
        parameters: ``decode_content`` and ``cache_content``.

        :param amt:
            How much of the content to read. If specified, caching is skipped
            because it doesn't make sense to cache partial content as the full
            response.

        :param decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.

        :param cache_content:
            If True, will save the returned data such that the same result is
            returned despite of the state of the underlying file object. This
            is useful if you want the ``.data`` property to continue working
            after having ``.read()`` the file object. (Overridden if ``amt`` is
            set.)
        u
        A generator wrapper for the read() method. A call will block until
        ``amt`` bytes have been read from the connection or until the
        connection is closed.

        :param amt:
            How much of the content to read. The generator will return up to
            much data per iteration, but may return less. This is particularly
            likely when using compressed data. However, the empty string will
            never be returned.

        :param decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.
        asupports_chunked_readsaread_chunkedTaamtadecode_contentastreamuHTTPResponse.streamaioaIOBasea__get__uHTTPResponse has no file to get a fileno fromafilenouThe file-like object this HTTPResponse is wrapped around has no file descriptorafpu
        Checks if the underlying file-like object looks like a
        :class:`http.client.HTTPResponse` object. We do this by testing for
        the fp attribute. If it is present we assume it returns raw chunks as
        processed by read_chunked().
        areadlineTd;laInvalidChunkLengtha_safe_readTlu
        Similar to :meth:`HTTPResponse.read`, but with an additional
        parameter: ``decode_content``.

        :param amt:
            How much of the content to read. If specified, caching is skipped
            because it doesn't make sense to cache partial content as the full
            response.

        :param decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.
        aResponseNotChunkedTuResponse is not chunked. Header 'transfer-encoding: chunked' is missing.aBodyNotHttplibCompatibleTuBody should be http.client.HTTPResponse like. It should have have an fp attribute which returns raw chunks.ais_response_to_heada_update_chunk_lengtha_handle_chunkTadecode_contentaflush_decoderc
uHTTPResponse.read_chunkedu
        Returns the URL that was the source of this response.
        If the request that generated this response redirected, this method
        will return the final redirect location.
        d
Td
:llna__iter__uHTTPResponse.__iter__a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsajsonaloggingareasysatypingacontextlibTacontextmanageracontextmanageruhttp.clientTaHTTPMessageaHTTPMessagea_HttplibHTTPMessageTaHTTPResponseaHTTPResponsea_HttplibHTTPResponseasocketTatimeoutatimeoutabrotlicffiazstandardasearchu^([0-9]+)\.([0-9]+)a__version__agroupsa_zstd_versionTllTEAttributeErrorEImportErrorEValueErrorTautilla_base_connectionTa_TYPE_BODYa_TYPE_BODYa_collectionsTaHTTPHeaderDictaconnectionTaBaseSSLErroraHTTPConnectionaHTTPExceptionaHTTPConnectionaexceptionsT
aBodyNotHttplibCompatibleaDecodeErroraHTTPErroraIncompleteReadaInvalidChunkLengthaInvalidHeaderaProtocolErroraReadTimeoutErroraResponseNotChunkedaSSLErroruutil.responseTais_fp_closedais_response_to_headuutil.retryTaRetryaRetryagetLoggerTuurllib3.responseuurllib3.responsea__module__aContentDecodera__qualname__DadataareturnabytespuContentDecoder.decompressDareturnabytesuContentDecoder.flushTa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>DareturnaNoneuDeflateDecoder.__init__uDeflateDecoder.decompressuDeflateDecoder.flusha__orig_bases__uGzipDecoder.__init__uGzipDecoder.decompressuGzipDecoder.flushuBrotliDecoder.__init__uBrotliDecoder.flushuZstdDecoder.__init__uZstdDecoder.decompressuZstdDecoder.flushu
    From RFC7231:
        If one or more encodings have been applied to a representation, the
        sender that applied the encodings MUST generate a Content-Encoding
        header field that lists the content codings in the order in which
        they were applied.
    DamodesareturnastraNoneuMultiDecoder.__init__uMultiDecoder.flushuMultiDecoder.decompressDamodeareturnastraContentDecoderuMemory-efficient bytes buffer

    To return decoded data in read() and still follow the BufferedIOBase API, we need a
    buffer to always return the correct amount of bytes.

    This buffer should be filled using calls to put()

    Our maximum memory usage is determined by the sum of the size of:

     * self.buffer, which contains the full data
     * the largest chunk that we will copy in get()

    The worst case scenario is a single chunk, in which case we'll make a full copy of
    the data inside get().
    uBytesQueueBuffer.__init__Dareturnainta__len__uBytesQueueBuffer.__len__DadataareturnabytesaNoneuBytesQueueBuffer.putDwnareturnaintabytesuBytesQueueBuffer.getaBaseHTTPResponsea__annotations__agzipux-gzipadeflateLl-l.l/l3l4aIOErrorutuple[type[Exception], ...]aZstdErrorDaheadersaretriesnnDaheadersastatusaversionareasonadecode_contentarequest_urlaretriesareturnutyping.Mapping[str, str] | typing.Mapping[bytes, bytes] | Noneaintpustr | Noneaboolustr | NoneuRetry | NoneaNoneuBaseHTTPResponse.__init__Dareturnustr | None | Literal[False]aget_redirect_locationuBaseHTTPResponse.get_redirect_locationapropertyuBaseHTTPResponse.dataDareturnutyping.AnyuBaseHTTPResponse.jsonDareturnustr | NoneuBaseHTTPResponse.urlasetterDaurlareturnustr | NoneaNoneDareturnuHTTPConnection | NoneuBaseHTTPResponse.connectionDareturnuRetry | NoneuBaseHTTPResponse.retriesDaretriesareturnuRetry | NoneaNoneTlnDaamtadecode_contentareturnuint | Noneubool | Noneutyping.Iterator[bytes]uBaseHTTPResponse.streamTnnFDaamtadecode_contentacache_contentareturnuint | Noneubool | NoneaboolabytesuBaseHTTPResponse.readTnnuBaseHTTPResponse.read_chunkeduBaseHTTPResponse.release_connadrain_connuBaseHTTPResponse.drain_connuBaseHTTPResponse.closeuBaseHTTPResponse._init_decoderDadataadecode_contentaflush_decoderareturnabytesubool | NoneaboolabytesuBaseHTTPResponse._decodeuBaseHTTPResponse._flush_decoderDwbareturnabytearrayaintareadintouBaseHTTPResponse.readintoDareturnaHTTPHeaderDictagetheadersuBaseHTTPResponse.getheadersTnDanameadefaultareturnastrustr | Noneustr | NoneagetheaderuBaseHTTPResponse.getheaderainfouBaseHTTPResponse.infoageturluBaseHTTPResponse.geturlu
    HTTP Response container.

    Backwards-compatible with :class:`http.client.HTTPResponse` but the response ``body`` is
    loaded and decoded on-demand when the ``data`` property is accessed.  This
    class is also compatible with the Python standard library's :mod:`io`
    module, and can hence be treated as a readable object in the context of that
    framework.

    Extra parameters for behaviour not present in :class:`http.client.HTTPResponse`:

    :param preload_content:
        If True, the response's body will be preloaded during construction.

    :param decode_content:
        If True, will attempt to decode the body based on the
        'content-encoding' header.

    :param original_response:
        When this HTTPResponse wrapper is generated from an :class:`http.client.HTTPResponse`
        object, it's convenient to include the original for debug purposes. It's
        otherwise unused.

    :param retries:
        The retries contains the last :class:`~urllib3.util.retry.Retry` that
        was used during the request.

    :param enforce_content_length:
        Enforce content length checking. Body returned by server must match
        value of Content-Length header, if present. Otherwise, raise error.
    TunlpntpnnnnntnntDabodyaheadersastatusaversionareasonapreload_contentadecode_contentaoriginal_responseapoolaconnectionamsgaretriesaenforce_content_lengtharequest_methodarequest_urlaauto_closeareturna_TYPE_BODYutyping.Mapping[str, str] | typing.Mapping[bytes, bytes] | Noneaintpustr | Noneaboolpu_HttplibHTTPResponse | NoneuHTTPConnectionPool | NoneuHTTPConnection | Noneu_HttplibHTTPMessage | NoneuRetry | Noneaboolustr | Noneustr | NoneaboolaNoneuHTTPResponse.__init__uHTTPResponse.release_connuHTTPResponse.drain_connuHTTPResponse.datauHTTPResponse.connectionDareturnabooluHTTPResponse.isclosedatelluHTTPResponse.tellDarequest_methodareturnustr | Noneuint | NoneuHTTPResponse._init_lengthDareturnutyping.Generator[None, None, None]Daamtareturnuint | NoneabytesuHTTPResponse._fp_readuHTTPResponse._raw_readuHTTPResponse.readDaamtadecode_contentareturnuint | Noneubool | Noneutyping.Generator[bytes, None, None]areadableuHTTPResponse.readableuHTTPResponse.closeuHTTPResponse.closeduHTTPResponse.filenouHTTPResponse.flushuHTTPResponse.supports_chunked_readsuHTTPResponse._update_chunk_lengthuHTTPResponse._handle_chunkuHTTPResponse.urlDaurlareturnastraNoneDareturnutyping.Iterator[bytes]uurllib3\response.pyTa.0aencu<module urllib3.response>Ta__class__TaselfTaselfabodyaheadersastatusaversionareasonapreload_contentadecode_contentaoriginal_responseapoolaconnectionamsgaretriesaenforce_content_lengtharequest_methodarequest_urlaauto_closea__class__T
aselfaheadersastatusaversionareasonadecode_contentarequest_urlaretriesatr_encaencodingsTaselfamodesTaselfabufferachunkachunkswxTaselfadataadecode_contentaflush_decoderweacontent_encodingTaselfaclean_exitweTaselfaamtac_int_maxabufferamax_chunk_amtachunk_amtadataTamodeTaselfaamtareturned_chunkachunkavalueTaselfacontent_encodingaencodingsTaselfarequest_methodalengthacontent_lengthalengthsastatusTaselfaamtafp_closedadataTaselfalineTaselfadataTaselfadatawdTaselfadataadata_partsaunused_dataTaselfadataadecompressedTaselfadataaretaprevious_stateTaselfaretTaselfwnafetchedaretaremainingachunkachunk_lengthaleft_chunkaright_chunkTaselfanameadefaultTaselfaamtadecode_contentacache_contentTaselfaamtadecode_contentacache_contentadataaflush_decoderadecoded_dataTaselfaamtadecode_contentTaselfaamtadecode_contentachunkadecodedalineTaselfwbatempTaselfaretriesTaselfaamtadecode_contentadataTaselfaurl.urllib3.util.connection>Lais_connectedu
    Returns True if the connection is dropped and should be closed.
    :param conn: :class:`urllib3.connection.HTTPConnection` object.
    utoo many values to unpack (expected 2)astartswithTw[astripTu[]aallowed_gai_familyahostaencodeTaidnaaLocationParseErrorw'uu', label empty or too longasocketagetaddrinfoaSOCK_STREAMutoo many values to unpack (expected 5)a_set_socket_optionsasocket_optionsatimeouta_DEFAULT_TIMEOUTasettimeoutasource_addressabindaconnectasockacloseaerrugetaddrinfo returns an empty listuConnect to *address* and return the socket object.

    Convenience function.  Connect to *address* (a 2-tuple ``(host,
    port)``) and return the socket object.  Passing the optional
    *timeout* parameter will set the timeout on the socket instance
    before attempting to connect.  If no *timeout* is supplied, the
    global default timeout setting returned by :func:`socket.getdefaulttimeout`
    is used.  If *source_address* is set it must be a tuple of (host, port)
    for the socket to bind as a source address before making the connection.
    An host of '' or port 0 tells the OS to use the default.
    asetsockoptaAF_INETaHAS_IPV6aAF_UNSPECuThis function is designed to work in the context of
    getaddrinfo, where family=socket.AF_UNSPEC is the default and
    will perform a DNS search for both IPv6 and IPv4 records.ahas_ipv6aAF_INET6luReturns True if the system can bind an IPv6 address.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingaexceptionsTaLocationParseErrorlTa_DEFAULT_TIMEOUTa_TYPE_TIMEOUTla_TYPE_TIMEOUTaSequenceaTupleaUnionTOintObytesa_TYPE_SOCKET_OPTIONSDaconnareturnaBaseHTTPConnectionaboolais_connection_droppedDaaddressatimeoutasource_addressasocket_optionsareturnutuple[str, int]a_TYPE_TIMEOUTutuple[str, int] | Noneu_TYPE_SOCKET_OPTIONS | Noneusocket.socketacreate_connectionDasockaoptionsareturnusocket.socketu_TYPE_SOCKET_OPTIONS | NoneaNoneDareturnusocket.AddressFamilyDahostareturnastraboola_has_ipv6Tu::1uurllib3\util\connection.pyu<module urllib3.util.connection>Tahostasockahas_ipv6TasockaoptionsaoptTafamilyTaaddressatimeoutasource_addressasocket_optionsahostaportaerrafamilyaresaafasocktypeaprotoacanonnameasaasockw_Taconn.urllib3.util;a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_urllib3u\not_existingautilTaNUITKA_PACKAGE_urllib3_utilu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsaconnectionTais_connection_droppedlais_connection_droppedlarequestTaSKIP_HEADERaSKIPPABLE_HEADERSamake_headersaSKIP_HEADERaSKIPPABLE_HEADERSamake_headersaresponseTais_fp_closedais_fp_closedaretryTaRetryaRetryassl_TaALPN_PROTOCOLSaIS_PYOPENSSLaSSLContextaassert_fingerprintacreate_urllib3_contextaresolve_cert_reqsaresolve_ssl_versionassl_wrap_socketaALPN_PROTOCOLSaIS_PYOPENSSLaSSLContextaassert_fingerprintacreate_urllib3_contextaresolve_cert_reqsaresolve_ssl_versionassl_wrap_socketatimeoutTaTimeoutaTimeoutaurlTaUrlaparse_urlaUrlaparse_urlawaitTawait_for_readawait_for_writeawait_for_readawait_for_writeTaIS_PYOPENSSLaSSLContextaALPN_PROTOCOLSaRetryaTimeoutaUrlaassert_fingerprintacreate_urllib3_contextais_connection_droppedais_fp_closedaparse_urlamake_headersaresolve_cert_reqsaresolve_ssl_versionassl_wrap_socketawait_for_readawait_for_writeaSKIP_HEADERaSKIPPABLE_HEADERSa__all__uurllib3\util\__init__.pyu<module urllib3.util>u.urllib3.util.proxyahttpaschemeahttpsause_forwarding_for_httpsu
    Returns True if the connection requires an HTTP CONNECT through the proxy.

    :param URL proxy_url:
        URL of the proxy.
    :param ProxyConfig proxy_config:
        Proxy configuration from poolmanager.py
    :param str destination_scheme:
        The scheme of the destination. (i.e https, http, etc)
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingaurlTaUrllaUrllTnnnDaproxy_urlaproxy_configadestination_schemeareturnuUrl | NoneuProxyConfig | Noneustr | Noneaboolaconnection_requires_http_tunneluurllib3\util\proxy.pyu<module urllib3.util.proxy>Taproxy_urlaproxy_configadestination_schemeu.urllib3.util.requestww,aACCEPT_ENCODINGuaccept-encodingaheadersuuser-agentukeep-aliveaconnectionuBasic ab64encodeaencodeTulatin-1adecodeuaauthorizationuproxy-authorizationuno-cacheucache-controlu
    Shortcuts for generating request headers.

    :param keep_alive:
        If ``True``, adds 'connection: keep-alive' header.

    :param accept_encoding:
        Can be a boolean, list, or string.
        ``True`` translates to 'gzip,deflate'.  If either the ``brotli`` or
        ``brotlicffi`` package is installed 'gzip,deflate,br' is used instead.
        List will get joined by comma.
        String will be used as provided.

    :param user_agent:
        String representing the user-agent you want, such as
        "python-urllib3/0.6"

    :param basic_auth:
        Colon-separated username:password string for 'authorization: basic ...'
        auth header.

    :param proxy_basic_auth:
        Colon-separated username:password string for 'proxy-authorization: basic ...'
        auth header.

    :param disable_cache:
        If ``True``, adds 'cache-control: no-cache' header.

    Example:

    .. code-block:: python

        import urllib3

        print(urllib3.util.make_headers(keep_alive=True, user_agent="Batman/1.0"))
        # {'connection': 'keep-alive', 'user-agent': 'Batman/1.0'}
        print(urllib3.util.make_headers(accept_encoding=True))
        # {'accept-encoding': 'gzip,deflate'}
    arewind_bodyatella_FAILEDTELLaposu
    If a position is provided, move file to that point.
    Otherwise, we'll attempt to record a position for future use.
    aseekaUnrewindableBodyErrorTuAn error occurred when rewinding request body for redirect/retry.TuUnable to record file position for rewinding request body during a redirect/retry.ubody_pos must be of type integer, instead it was w.u
    Attempt to rewind body to a certain position.
    Primarily used for request redirects and retries.

    :param body:
        File-like object that supports seek.

    :param int pos:
        Position to seek to in file.
    auppera_METHODS_NOT_EXPECTING_BODYlTOstrObytesato_bytesareadDareturnutyping.Iterable[bytes]achunk_readableubody_to_chunks.<locals>.chunk_readableu'body' must be a bytes-like object, file-like object, or iterable. Instead was abodyamvanbytesaChunksAndContentLengthachunksacontent_lengthTachunksacontent_lengthuTakes the HTTP request method, body, and blocksize and
    transforms them into an iterable of chunks to pass to
    socket.sendall() and an optional 'Content-Length' header.

    A 'Content-Length' of 'None' indicates the length of the body
    can't be determined so should use 'Transfer-Encoding: chunked'
    for framing instead.
    aioaTextIOBaseablocksizeTuiso-8859-1a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsatypingabase64Tab64encodeaenumTaEnumaEnumaexceptionsTaUnrewindableBodyErrorlautilTato_byteslu@@@SKIP_HEADER@@@aSKIP_HEADERPahostuuser-agentuaccept-encodingaSKIPPABLE_HEADERSugzip,deflateabrotlicffia_unused_module_brotliabrotliu,brazstandarda_unused_module_zstdu,zstda__prepare__a_TYPE_FAILEDTELLa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.util.requesta__module__a__qualname__atokena__orig_bases__uFinal[_TYPE_FAILEDTELL]aUniona_TYPE_BODY_POSITIONSaGETaCONNECTaDELETEaHEADaOPTIONSaTRACETnnnnnnDakeep_aliveaaccept_encodingauser_agentabasic_authaproxy_basic_authadisable_cacheareturnubool | Noneubool | list[str] | str | Noneustr | Noneustr | Noneustr | Noneubool | Noneudict[str, str]amake_headersDabodyaposareturnutyping.Anyu_TYPE_BODY_POSITION | Noneu_TYPE_BODY_POSITION | Noneaset_file_positionDabodyabody_posareturnutyping.IO[typing.AnyStr]a_TYPE_BODY_POSITIONaNoneaNamedTupleutyping.Iterable[bytes] | Noneuint | NoneDabodyamethodablocksizeareturnutyping.Any | NoneastraintaChunksAndContentLengthabody_to_chunksuurllib3\util\request.pyu<module urllib3.util.request>Ta__class__Tabodyamethodablocksizeachunksacontent_lengthachunk_readableamvTabodyablocksizeaencodeadatablockTablocksizeabodyTakeep_aliveaaccept_encodingauser_agentabasic_authaproxy_basic_authadisable_cacheaheadersTabodyabody_posabody_seekweTabodyapos.urllib3.util.response1aisclosedaclosedafpuUnable to determine whether fp is closed.u
    Checks whether a given file-like object is closed.

    :param obj:
        The file-like object to check.
    ahttplibaHTTPMessageuexpected httplib.Message, got uw.ais_multipartaget_payloadTObytesOstradefectsaStartBoundaryNotFoundDefectaMultipartInvariantViolationDefectaHeaderParsingErrorTadefectsaunparsed_datau
    Asserts whether all headers have been successfully parsed.
    Extracts encountered errors from the result of parsing headers.

    Only works on Python 3.

    :param http.client.HTTPMessage headers: Headers to verify.

    :raises urllib3.exceptions.HeaderParsingError:
        If parsing errors are found.
    a_methodaupperaHEADu
    Checks whether the request of a response has been a HEAD-request.

    :param http.client.HTTPResponse response:
        Response to check if the originating request
        used 'HEAD' as a method.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsuhttp.clientlaclientuemail.errorsTaMultipartInvariantViolationDefectaStartBoundaryNotFoundDefectaexceptionsTaHeaderParsingErrorlDaobjareturnaobjectaboolais_fp_closedDaheadersareturnuhttplib.HTTPMessageaNoneaassert_header_parsingDaresponseareturnuhttplib.HTTPResponseaboolais_response_to_headuurllib3\util\response.pyu<module urllib3.util.response>Taheadersaunparsed_dataapayloadadefectsTaobjTaresponseamethod_str.urllib3.util.retry,atotalaconnectareadastatusaotherlaredirectastatus_forcelistaallowed_methodsabackoff_factorabackoff_maxaraise_on_redirectaraise_on_statusTahistoryarespect_retry_after_headeraremove_headers_on_redirectabackoff_jitteraloweru<genexpr>uRetry.__init__.<locals>.<genexpr>aDEFAULTaRetryaclsTaredirectalogadebuguConverted retries value: %r -> %ruBackwards-compatibility for the old retries format.atakewhileu<lambda>uRetry.get_backoff_time.<locals>.<lambda>lZarandomamaxaminuFormula for computing the current backoff

        :rtype: float
        aredirect_locationareamatchu^\s*[0-9]+\s*$aemailautilsaparsedate_tzaInvalidHeaderuInvalid Retry-After header: uamktime_tzatimeaheadersagetTuRetry-Afteraparse_retry_afteruGet the value of Retry-After in seconds.aget_retry_afterasleepaget_backoff_timeasleep_for_retrya_sleep_backoffuSleep between retry attempts.

        This method will respect a server's ``Retry-After`` response header
        and sleep the duration of the time requested. If that is not present, it
        will use an exponential backoff. By default, the backoff factor is 0 and
        this method will return immediately.
        aProxyErroraoriginal_erroraConnectTimeoutErroruErrors when we're fairly sure that the server did not receive the
        request, so it should be safe to retry.
        aReadTimeoutErroraProtocolErroruErrors that occur after the request has been started, so we should
        assume that the server began processing it.
        aupperuChecks if a given HTTP method should be retried upon, depending if
        it is included in the allowed_methods
        a_is_method_retryableaRETRY_AFTER_STATUS_CODESuIs this method/status code retryable? (Based on allowlists and control
        variables such as the number of total retries to allow, whether to
        respect the Retry-After header, whether this header is present, and
        whether the returned status code is on the list of status codes to
        be retried upon on the presence of the aforementioned header)
        uAre we out of retries?areraiselaunknowna_is_connection_erroraerrora_is_read_erroraget_redirect_locationutoo many redirectsaresponseaResponseErroraGENERIC_ERRORaSPECIFIC_ERRORaformatTastatus_codeaRequestHistoryamethodanewTatotalaconnectareadaredirectastatusaotherahistoryais_exhaustedaMaxRetryErroruIncremented Retry for (url='%s'): %ruReturn a new Retry object with incremented retry counters.

        :param response: A response object, or None, if the server did not
            return a response.
        :type response: :class:`~urllib3.response.BaseHTTPResponse`
        :param Exception error: An error encountered during the request, or
            None if the response was received successfully.

        :return: A new ``Retry`` object.
        a__name__u(total=u, connect=u, read=u, redirect=u, status=w)a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaloggingatypingaitertoolsTatakewhileaTracebackTypeaexceptionsTaConnectTimeoutErroraInvalidHeaderaMaxRetryErroraProtocolErroraProxyErroraReadTimeoutErroraResponseErrorautilTareraiseagetLoggerTuurllib3.util.retryaNamedTuplea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uurllib3.util.retrya__module__a__qualname__a__annotations__ustr | NoneaurluException | Noneuint | Nonea__orig_bases__uRetry configuration.

    Each retry attempt will create a new Retry object with updated values, so
    they can be safely reused.

    Retries can be defined as a default for a pool:

    .. code-block:: python

        retries = Retry(connect=5, read=2, redirect=5)
        http = PoolManager(retries=retries)
        response = http.request("GET", "https://example.com/")

    Or per-request (which overrides the default for the pool):

    .. code-block:: python

        response = http.request("GET", "https://example.com/", retries=Retry(10))

    Retries can be disabled by passing ``False``:

    .. code-block:: python

        response = http.request("GET", "https://example.com/", retries=False)

    Errors will be wrapped in :class:`~urllib3.exceptions.MaxRetryError` unless
    retries are disabled, in which case the causing exception will be raised.

    :param int total:
        Total number of retries to allow. Takes precedence over other counts.

        Set to ``None`` to remove this constraint and fall back on other
        counts.

        Set to ``0`` to fail on the first retry.

        Set to ``False`` to disable and imply ``raise_on_redirect=False``.

    :param int connect:
        How many connection-related errors to retry on.

        These are errors raised before the request is sent to the remote server,
        which we assume has not triggered the server to process the request.

        Set to ``0`` to fail on the first retry of this type.

    :param int read:
        How many times to retry on read errors.

        These errors are raised after the request was sent to the server, so the
        request may have side-effects.

        Set to ``0`` to fail on the first retry of this type.

    :param int redirect:
        How many redirects to perform. Limit this to avoid infinite redirect
        loops.

        A redirect is a HTTP response with a status code 301, 302, 303, 307 or
        308.

        Set to ``0`` to fail on the first retry of this type.

        Set to ``False`` to disable and imply ``raise_on_redirect=False``.

    :param int status:
        How many times to retry on bad status codes.

        These are retries made on responses, where status code matches
        ``status_forcelist``.

        Set to ``0`` to fail on the first retry of this type.

    :param int other:
        How many times to retry on other errors.

        Other errors are errors that are not connect, read, redirect or status errors.
        These errors might be raised after the request was sent to the server, so the
        request might have side-effects.

        Set to ``0`` to fail on the first retry of this type.

        If ``total`` is not set, it's a good idea to set this to 0 to account
        for unexpected edge cases and avoid infinite retry loops.

    :param Collection allowed_methods:
        Set of uppercased HTTP method verbs that we should retry on.

        By default, we only retry on methods which are considered to be
        idempotent (multiple requests with the same parameters end with the
        same state). See :attr:`Retry.DEFAULT_ALLOWED_METHODS`.

        Set to a ``None`` value to retry on any verb.

    :param Collection status_forcelist:
        A set of integer HTTP status codes that we should force a retry on.
        A retry is initiated if the request method is in ``allowed_methods``
        and the response status code is in ``status_forcelist``.

        By default, this is disabled with ``None``.

    :param float backoff_factor:
        A backoff factor to apply between attempts after the second try
        (most errors are resolved immediately by a second try without a
        delay). urllib3 will sleep for::

            {backoff factor} * (2 ** ({number of previous retries}))

        seconds. If `backoff_jitter` is non-zero, this sleep is extended by::

            random.uniform(0, {backoff jitter})

        seconds. For example, if the backoff_factor is 0.1, then :func:`Retry.sleep` will
        sleep for [0.0s, 0.2s, 0.4s, 0.8s, ...] between retries. No backoff will ever
        be longer than `backoff_max`.

        By default, backoff is disabled (factor set to 0).

    :param bool raise_on_redirect: Whether, if the number of redirects is
        exhausted, to raise a MaxRetryError, or to return a response with a
        response code in the 3xx range.

    :param bool raise_on_status: Similar meaning to ``raise_on_redirect``:
        whether we should raise an exception, or return a response,
        if status falls in ``status_forcelist`` range and retries have
        been exhausted.

    :param tuple history: The history of the request encountered during
        each call to :meth:`~Retry.increment`. The list is in the order
        the requests occurred. Each list item is of class :class:`RequestHistory`.

    :param bool respect_retry_after_header:
        Whether to respect Retry-After header on status codes defined as
        :attr:`Retry.RETRY_AFTER_STATUS_CODES` or not.

    :param Collection remove_headers_on_redirect:
        Sequence of headers to remove from the request when a response
        indicating a redirect is returned before firing off the redirected
        request.
    PaGETaPUTaDELETEaHEADaOPTIONSaTRACEaDEFAULT_ALLOWED_METHODSPlllPaAuthorizationaCookieaDEFAULT_REMOVE_HEADERS_ON_REDIRECTlxaDEFAULT_BACKOFF_MAXutyping.ClassVar[Retry]l
Datotalaconnectareadaredirectastatusaotheraallowed_methodsastatus_forcelistabackoff_factorabackoff_maxaraise_on_redirectaraise_on_statusahistoryarespect_retry_after_headeraremove_headers_on_redirectabackoff_jitterareturnubool | int | Noneuint | Noneuint | Noneubool | int | Noneuint | Noneuint | Noneutyping.Collection[str] | Noneutyping.Collection[int] | Noneafloatpaboolputuple[RequestHistory, ...] | Noneaboolutyping.Collection[str]afloataNonea__init__uRetry.__init__Dakwareturnutyping.AnyaRetryuRetry.newTtnDaretriesaredirectadefaultareturnuRetry | bool | int | Noneubool | int | NoneuRetry | bool | int | NoneaRetryafrom_intuRetry.from_intDareturnafloatuRetry.get_backoff_timeDaretry_afterareturnastrafloatuRetry.parse_retry_afterDaresponseareturnaBaseHTTPResponseufloat | NoneuRetry.get_retry_afterDaresponseareturnaBaseHTTPResponseabooluRetry.sleep_for_retryDareturnaNoneuRetry._sleep_backoffTnDaresponseareturnuBaseHTTPResponse | NoneaNoneuRetry.sleepDaerrareturnaExceptionabooluRetry._is_connection_erroruRetry._is_read_errorDamethodareturnastrabooluRetry._is_method_retryableTFDamethodastatus_codeahas_retry_afterareturnastraintaboolpais_retryuRetry.is_retryDareturnabooluRetry.is_exhaustedTnnnnnnDamethodaurlaresponseaerrora_poola_stacktraceareturnustr | Noneustr | NoneuBaseHTTPResponse | NoneuException | NoneuConnectionPool | NoneuTracebackType | NoneaRetryaincrementuRetry.incrementDareturnastra__repr__uRetry.__repr__Tluurllib3\util\retry.pyTa.0whTwxu<module urllib3.util.retry>Ta__class__Taselfatotalaconnectareadaredirectastatusaotheraallowed_methodsastatus_forcelistabackoff_factorabackoff_maxaraise_on_redirectaraise_on_statusahistoryarespect_retry_after_headeraremove_headers_on_redirectabackoff_jitterTaselfTaselfaerrTaselfamethodTaselfabackoffTaclsaretriesaredirectadefaultanew_retriesTaselfaconsecutive_errors_lenabackoff_valueTaselfaresponsearetry_afterTaselfamethodaurlaresponseaerrora_poola_stacktraceatotalaconnectareadaredirectastatus_countaotheracauseastatusaredirect_locationaresponse_redirect_locationahistoryanew_retryareasonTaselfaretry_countsTaselfamethodastatus_codeahas_retry_afterTaselfakwaparamsTaselfaretry_afterasecondsaretry_date_tuplearetry_dateTaselfaresponseaslept.urllib3.util.ssl_#apypyTlllacpython:nlnlTlllTlllTll
uReturn True for CPython 3.8.9+, 3.9.3+ or 3.10+ and PyPy 7.3.8+ where
    setting SSLContext.hostname_checks_common_name to False works.

    Outside of CPython and PyPy we don't know which implementations work
    or not so we conservatively use our hostname matching as we know that works
    on all implementations.

    https://github.com/urllib3/urllib3/issues/2192#issuecomment-821832963
    https://foss.heptapod.net/pypy/pypy/-/issues/3539
    astartswithTuOpenSSL qa_is_bpo_43522_fixedaSSLErrorTuNo certificate for the peer.areplaceTw:ualoweraHASHFUNC_MAPagetuFingerprint of invalid length: uaunhexlifyaencodeadigestahmacacompare_digestuFingerprints did not match. Expected "u", got "ahexw"u
    Checks if given fingerprint matches the supplied certificate.

    :param cert:
        Certificate as bytes object.
    :param fingerprint:
        Fingerprint as string of hexdigits, can be interspersed by colons.
    aCERT_REQUIREDasslaCERT_u
    Resolves the argument to a numeric constant, which can be passed to
    the wrap_socket function/method from the ssl module.
    Defaults to :data:`ssl.CERT_REQUIRED`.
    If given a string it is assumed to be the name of the constant in the
    :mod:`ssl` module or its abbreviation.
    (So you can specify `REQUIRED` instead of `CERT_REQUIRED`.
    If it's neither `None` nor a string we assume it is already the numeric
    constant which can directly be passed to wrap_socket.
    aPROTOCOL_TLSaPROTOCOL_atypingacastu
    like resolve_cert_reqs
    aSSLContextuCan't create an SSLContext object without an ssl moduleaPROTOCOL_TLS_CLIENTuCan't specify both 'ssl_version' and either 'ssl_minimum_version' or 'ssl_maximum_version'a_SSL_VERSION_TO_TLS_VERSIONaTLSVersionaMINIMUM_SUPPORTEDaMAXIMUM_SUPPORTEDawarningsawarnaDeprecationWarningTu'ssl_version' option is deprecated and will be removed in urllib3 v2.1.0. Instead use 'ssl_minimum_version'Tacategoryastacklevelaminimum_versionaTLSv1_2acontextamaximum_versionaset_cipherslaOP_NO_SSLv2aOP_NO_SSLv3aOP_NO_COMPRESSIONaOP_NO_TICKETaoptionsapost_handshake_authaIS_PYOPENSSLaverify_modeacheck_hostnameahostname_checks_common_nameakeylog_filenameaosaenvironTaSSLKEYLOGFILEuCreates and configures an :class:`ssl.SSLContext` instance for use with urllib3.

    :param ssl_version:
        The desired protocol version to use. This will default to
        PROTOCOL_SSLv23 which will negotiate the highest protocol that both
        the server and your installation of OpenSSL support.

        This parameter is deprecated instead use 'ssl_minimum_version'.
    :param ssl_minimum_version:
        The minimum version of TLS to be used. Use the 'ssl.TLSVersion' enum for specifying the value.
    :param ssl_maximum_version:
        The maximum version of TLS to be used. Use the 'ssl.TLSVersion' enum for specifying the value.
        Not recommended to set to anything other than 'ssl.TLSVersion.MAXIMUM_SUPPORTED' which is the
        default value.
    :param cert_reqs:
        Whether to require the certificate verification. This defaults to
        ``ssl.CERT_REQUIRED``.
    :param options:
        Specific OpenSSL options. These default to ``ssl.OP_NO_SSLv2``,
        ``ssl.OP_NO_SSLv3``, ``ssl.OP_NO_COMPRESSION``, and ``ssl.OP_NO_TICKET``.
    :param ciphers:
        Which cipher suites to allow the server to select. Defaults to either system configured
        ciphers if OpenSSL 1.1.1+, otherwise uses a secure default set of ciphers.
    :returns:
        Constructed SSLContext object with specified options
    :rtype: SSLContext
    acreate_urllib3_contextTaciphersaload_verify_locationsaload_default_certsa_is_key_file_encryptedTuClient private key is encrypted, password is requiredaload_cert_chainakeyfileaset_alpn_protocolsaALPN_PROTOCOLSa_ssl_wrap_socket_implu
    All arguments except for server_hostname, ssl_context, tls_in_tls, ca_cert_data and
    ca_cert_dir have the same meaning as they do when using
    :func:`ssl.create_default_context`, :meth:`ssl.SSLContext.load_cert_chain`,
    :meth:`ssl.SSLContext.set_ciphers` and :meth:`ssl.SSLContext.wrap_socket`.

    :param server_hostname:
        When SNI is supported, the expected hostname of the certificate
    :param ssl_context:
        A pre-made :class:`SSLContext` object. If none is provided, one will
        be created using :func:`create_urllib3_context`.
    :param ciphers:
        A string of ciphers we wish the client to support.
    :param ca_cert_dir:
        A directory containing CA certificates in multiple separate files, as
        supported by OpenSSL's -CApath flag or the capath argument to
        SSLContext.load_verify_locations().
    :param key_password:
        Optional password if the keyfile is encrypted.
    :param ca_cert_data:
        Optional string containing CA certificates in PEM format suitable for
        passing as the cadata parameter to SSLContext.load_verify_locations()
    :param tls_in_tls:
        Use SSLTransport to wrap the existing socket.
    adecodeTaasciia_IPV4_REamatcha_BRACELESS_IPV6_ADDRZ_REuDetects whether the hostname given is an IPv4 or IPv6 address.
    Also detects IPv6 addresses with Zone IDs.

    :param str hostname: Hostname to examine.
    :return: True if the hostname is an IP address, False otherwise.
    a__enter__a__exit__aENCRYPTEDTnnnuDetects if a key file is encrypted or not.aSSLTransportaProxySchemeUnsupportedTuTLS in TLS requires support for the 'ssl' modulea_validate_ssl_context_for_tls_in_tlsawrap_socketTaserver_hostnamea__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsasocketasysabinasciiTaunhexlifyahashlibTamd5asha1asha256amd5asha1asha256aexceptionsTaProxySchemeUnsupportedaSSLErroraurlTa_BRACELESS_IPV6_ADDRZ_REa_IPV4_RElaHAS_NEVER_CHECK_COMMON_NAMEuhttp/1.1aTupleTOintppOstrOinta_TYPE_VERSION_INFOl l(l@Daimplementation_nameaversion_infoapypy_version_infoareturnastra_TYPE_VERSION_INFOu_TYPE_VERSION_INFO | NoneaboolDaopenssl_versionaopenssl_version_numberaimplementation_nameaversion_infoapypy_version_infoareturnastraintastra_TYPE_VERSION_INFOu_TYPE_VERSION_INFO | Noneaboola_is_has_never_check_common_name_reliableudict[int, int]TaCERT_REQUIREDaHAS_NEVER_CHECK_COMMON_NAMEaOP_NO_COMPRESSIONaOP_NO_TICKETaOPENSSL_VERSIONaOPENSSL_VERSION_NUMBERaPROTOCOL_TLSaPROTOCOL_TLS_CLIENTaOP_NO_SSLv2aOP_NO_SSLv3aSSLContextaTLSVersionaOPENSSL_VERSIONaOPENSSL_VERSION_NUMBERaPROTOCOL_SSLv23aimplementationanameapypy_version_infoTaTLSv1aTLSv1_1aTLSv1_2aattrassltransportTaSSLTransportll@lllaUnionTa_TYPE_PEER_CERT_RET_DICTObytesna_TYPE_PEER_CERT_RETDacertafingerprintareturnubytes | NoneastraNoneaassert_fingerprintDacandidateareturnuNone | int | straVerifyModearesolve_cert_reqsDacandidateareturnuNone | int | straintaresolve_ssl_versionTnnnnnnDassl_versionacert_reqsaoptionsaciphersassl_minimum_versionassl_maximum_versionareturnuint | Noneuint | Noneuint | Noneustr | Noneuint | Noneuint | Noneussl.SSLContextaoverloadTQQQQQQQQQQQQDasockakeyfileacertfileacert_reqsaca_certsaserver_hostnameassl_versionaciphersassl_contextaca_cert_dirakey_passwordaca_cert_dataatls_in_tlsareturnusocket.socketustr | Noneustr | Noneuint | Noneustr | Noneustr | Noneuint | Noneustr | Noneussl.SSLContext | Noneustr | Noneustr | NoneuNone | str | bytesuLiteral[False]ussl.SSLSocketassl_wrap_socketDasockakeyfileacertfileacert_reqsaca_certsaserver_hostnameassl_versionaciphersassl_contextaca_cert_dirakey_passwordaca_cert_dataatls_in_tlsareturnusocket.socketustr | Noneustr | Noneuint | Noneustr | Noneustr | Noneuint | Noneustr | Noneussl.SSLContext | Noneustr | Noneustr | NoneuNone | str | bytesaboolussl.SSLSocket | SSLTransportTypeTnnnnnnnnnnnFDahostnameareturnustr | bytesaboolais_ipaddressDakey_fileareturnastraboolTnDasockassl_contextatls_in_tlsaserver_hostnameareturnusocket.socketussl.SSLContextaboolustr | Noneussl.SSLSocket | SSLTransportTypeuurllib3\util\ssl_.pyu<module urllib3.util.ssl_>Taimplementation_nameaversion_infoapypy_version_infoamajor_minoramicroTaopenssl_versionaopenssl_version_numberaimplementation_nameaversion_infoapypy_version_infoais_opensslais_openssl_issue_14579_fixedTakey_filewfalineTasockassl_contextatls_in_tlsaserver_hostnameTacertafingerprintadigest_lengthahashfuncafingerprint_bytesacert_digestTassl_versionacert_reqsaoptionsaciphersassl_minimum_versionassl_maximum_versionacontextasslkeylogfileTahostnameTacandidatearesT
asockakeyfileacertfileacert_reqsaca_certsaserver_hostnameassl_versionaciphersassl_contextaca_cert_dirakey_passwordaca_cert_dataatls_in_tlsTasockakeyfileacertfileacert_reqsaca_certsaserver_hostnameassl_versionaciphersassl_contextaca_cert_dirakey_passwordaca_cert_dataatls_in_tlsacontextweassl_sock.urllib3.util.ssl_match_hostname[asplitTw.l:lnnacountTw*aCertificateErrorutoo many wildcards in certificate DNS name: alowerw*u[^.]+astartswithTuxn--areaescapeareplaceTu\*u[^.]*apatsaappendacompileu\Au\.u\ZaIGNORECASEamatchahostnameuMatching according to RFC 6125, section 6.4.3

    http://tools.ietf.org/html/rfc6125#section-6.4.3
    aipaddressaip_addressarstripapackeduExact matching of IP addresses.

    RFC 9110 section 4.3.5: "A reference identity of IP-ID contains the decoded
    bytes of the IP address. An IP version 4 address is 4 octets, and an IP
    version 6 address is 16 octets. [...] A reference identity of type IP-ID
    matches if the address is identical to an iPAddress value of the
    subjectAltName extension of the certificate."
    uempty or no certificate, match_hostname needs a SSL socket or SSL context with either CERT_OPTIONAL or CERT_REQUIREDw%arfindTw%agetTasubjectAltNameTutoo many values to unpack (expected 2)aDNSahost_ipa_dnsname_matchadnsnamesavalueuIP Addressa_ipaddress_matchTasubjectTacommonNameuhostname %r doesn't match either of %su, arepruhostname uu doesn't match Tuno appropriate subjectAltName fields were founduVerify that *cert* (in decoded format as returned by
    SSLSocket.getpeercert()) matches the *hostname*.  RFC 2818 and RFC 6125
    rules are followed, but IP addresses are not accepted for *hostname*.

    CertificateError is raised on failure. On success, the function
    returns nothing.
    uThe match_hostname() function from Python 3.5, essential when using SSL.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingTaIPv4AddressaIPv6AddressaIPv4AddressaIPv6Addressu3.5.0.1a__version__TEValueErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.util.ssl_match_hostnamea__module__a__qualname__a__orig_bases__TlDadnahostnameamax_wildcardsareturnutyping.Anyastraintutyping.Match[str] | None | boolDaipnameahost_ipareturnastruIPv4Address | IPv6AddressaboolTFDacertahostnameahostname_checks_common_nameareturnu_TYPE_PEER_CERT_RET_DICT | NoneastraboolaNoneamatch_hostnameuurllib3\util\ssl_match_hostname.pyu<module urllib3.util.ssl_match_hostname>T
adnahostnameamax_wildcardsapatsapartsaleftmostaremainderawildcardsafragapatTaipnameahost_ipaipTacertahostnameahostname_checks_common_nameasanakeyavalueahost_ipadnsnamesasub.urllib3.util.ssltransportNawrap_bioaProxySchemeUnsupportedTuTLS in TLS requires SSLContext.wrap_bio() which isn't available on non-native SSLContextu
        Raises a ProxySchemeUnsupported if the provided ssl_context can't be used
        for TLS in TLS.

        The only requirement is that the ssl_context provides the 'wrap_bio'
        methods.
        asslaMemoryBIOaincomingaoutgoingasuppress_ragged_eofsasocketTaserver_hostnameasslobja_ssl_io_loopado_handshakeu
        Create an SSLTransport around socket using the provided ssl_context.
        acloseafilenoa_wrap_ssl_readlunon-zero flags not allowed in calls to recvunon-zero flags not allowed in calls to recv_intoareadabufferunon-zero flags not allowed in calls to sendalla__enter__a__exit__acastTwBacountaselfasendTnnnunon-zero flags not allowed in calls to sendawriteSwrwbwwuinvalid mode uu (only r, w, b allowed)wwwrwbaSocketIOa_io_refsllaioaDEFAULT_BUFFER_SIZEuunbuffered streams must be binaryaBufferedRWPairaBufferedReaderaBufferedWriteraTextIOWrapperamodeu
        Python's httpclient uses makefile and buffered io when reading HTTP
        messages and we need to support it.

        This is unfortunately a copy and paste of socket.py makefile with small
        changes to point to the socket directly.
        aunwrapagetpeercertaversionacipheraselected_alpn_protocolaselected_npn_protocolashared_ciphersacompressionasettimeoutagettimeouta_decref_socketiosaSSLErroraerrnoaSSL_ERROR_EOFashould_loopaarg1aarg2afuncaSSL_ERROR_WANT_READaSSL_ERROR_WANT_WRITEasendallarecvaSSL_BLOCKSIZEawrite_eofatypinga_ReturnValuearetuPerforms an I/O loop between incoming/outgoing and the socket.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaexceptionsTaProxySchemeUnsupportedlaTypeVarTa_SelfTaSSLTransportTabounda_SelfTaUnionTObytearrayOmemoryviewa_WriteBufferTa_ReturnValuel@uurllib3.util.ssltransporta__module__u
    The SSLTransport wraps an existing socket and establishes an SSL connection.

    Contrary to Python's implementation of SSLSocket, it allows you to chain
    multiple TLS connections together. It's particularly useful if you need to
    implement TLS within TLS.

    The class supports most of the socket API operations.
    aSSLTransporta__qualname__Dassl_contextareturnussl.SSLContextaNonea_validate_ssl_context_for_tls_in_tlsuSSLTransport._validate_ssl_context_for_tls_in_tlsTntDasocketassl_contextaserver_hostnameasuppress_ragged_eofsareturnusocket.socketussl.SSLContextustr | NoneaboolaNonea__init__uSSLTransport.__init__Daselfareturna_SelfTpuSSLTransport.__enter__Dw_areturnutyping.AnyaNoneuSSLTransport.__exit__DareturnaintuSSLTransport.filenoTlnDalenabufferareturnaintutyping.Any | Noneuint | bytesuSSLTransport.readTllDabuflenaflagsareturnaintpuint | bytesuSSLTransport.recvTnlDabufferanbytesaflagsareturna_WriteBufferuint | NoneaintuNone | int | bytesarecv_intouSSLTransport.recv_intoTlDadataaflagsareturnabytesaintaNoneuSSLTransport.sendallDadataaflagsareturnabytesaintpuSSLTransport.sendTnDaencodingaerrorsanewlinennnDamodeabufferingaencodingaerrorsanewlineareturnastruint | Noneustr | Noneustr | Noneustr | Noneutyping.BinaryIO | typing.TextIO | socket.SocketIOamakefileuSSLTransport.makefileDareturnaNoneuSSLTransport.unwrapuSSLTransport.closeaoverloadTQDabinary_formareturnuLiteral[False]u_TYPE_PEER_CERT_RET_DICT | NoneuSSLTransport.getpeercertDabinary_formareturnuLiteral[True]ubytes | NoneTFDabinary_formareturnaboola_TYPE_PEER_CERT_RETDareturnustr | NoneuSSLTransport.versionDareturnutuple[str, str, int] | NoneuSSLTransport.cipheruSSLTransport.selected_alpn_protocoluSSLTransport.selected_npn_protocolDareturnulist[tuple[str, str, int]] | NoneuSSLTransport.shared_ciphersuSSLTransport.compressionDavalueareturnufloat | NoneaNoneuSSLTransport.settimeoutDareturnufloat | NoneuSSLTransport.gettimeoutuSSLTransport._decref_socketiosDalenabufferareturnaintubytearray | Noneuint | bytesuSSLTransport._wrap_ssl_readDafuncareturnutyping.Callable[[], None]aNoneuSSLTransport._ssl_io_loopDafuncaarg1areturnutyping.Callable[[bytes], int]abytesaintDafuncaarg1aarg2areturnutyping.Callable[[int, bytearray | None], bytes]aintubytearray | NoneabytesTnnDafuncaarg1aarg2areturnutyping.Callable[..., _ReturnValue]uNone | bytes | intubytearray | Nonea_ReturnValueTuurllib3\util\ssltransport.pyu<module urllib3.util.ssltransport>Ta__class__TaselfTaselfw_Taselfasocketassl_contextaserver_hostnameasuppress_ragged_eofsTaselfafuncTaselfafuncaarg1Taselfafuncaarg1aarg2Taselfafuncaarg1aarg2ashould_looparetaerrnoweabufTassl_contextTaselfalenabufferweTaselfabinary_formT
aselfamodeabufferingaencodingaerrorsanewlineabufferawritingareadingabinaryarawmodearawatextTaselfalenabufferTaselfabuflenaflagsTaselfabufferanbytesaflagsTaselfadataaflagsTaselfadataaflagsacountaviewabyte_viewaamountwvTaselfavalue.urllib3.util.timeout?ma_validate_timeoutaconnecta_connectareada_readatotala_start_connecta__name__uu(connect=u, read=u, total=w)a_DEFAULT_TIMEOUTagetdefaulttimeoutuTimeout cannot be a boolean value. It must be an int, float or None.TETypeErrorEValueErroruTimeout value %s was %s, but it must be an int, float or None.luAttempted to set %s timeout to %s, but the timeout cannot be set to a value less than or equal to 0.uCheck that a timeout attribute is valid.

        :param value: The timeout value to validate
        :param name: The name of the timeout attribute to validate. This is
            used to specify in error messages.
        :return: The validated and casted version of the given value.
        :raises ValueError: If it is a numeric value less than or equal to
            zero, or the type is not an integer, float, or None.
        aTimeoutTareadaconnectuCreate a new Timeout from a legacy timeout value.

        The timeout value used by httplib.py sets the same timeout on the
        connect(), and recv() socket requests. This creates a :class:`Timeout`
        object that sets the individual timeouts to the ``timeout`` value
        passed to this function.

        :param timeout: The legacy timeout value.
        :type timeout: integer, float, :attr:`urllib3.util.Timeout.DEFAULT_TIMEOUT`, or None
        :return: Timeout object
        :rtype: :class:`Timeout`
        TaconnectareadatotaluCreate a copy of the timeout object

        Timeout properties are stored per-pool but each request needs a fresh
        Timeout object to ensure each one has its own start/stop configured.

        :return: a copy of the timeout object
        :rtype: :class:`Timeout`
        aTimeoutStateErrorTuTimeout timer has already been started.atimeamonotonicuStart the timeout clock, used during a connect() attempt

        :raises urllib3.exceptions.TimeoutStateError: if you attempt
            to start a timer that has been started already.
        TuCan't get connect duration for timer that has not started.uGets the time elapsed since the call to :meth:`start_connect`.

        :return: Elapsed time in seconds.
        :rtype: float
        :raises urllib3.exceptions.TimeoutStateError: if you attempt
            to get duration for a timer that hasn't been started.
        aminuGet the value to use when setting a connection timeout.

        This will be a positive float or integer, the value None
        (never timeout), or the default system timeout.

        :return: Connect timeout.
        :rtype: int, float, :attr:`Timeout.DEFAULT_TIMEOUT` or None
        amaxaget_connect_durationaresolve_default_timeoutuGet the value for the read timeout.

        This assumes some time has elapsed in the connection timeout and
        computes the read timeout appropriately.

        If self.total is set, the read timeout is dependent on the amount of
        time taken by the connect timeout. If the connection time has not been
        established, a :exc:`~urllib3.exceptions.TimeoutStateError` will be
        raised.

        :return: Value to use for the read timeout.
        :rtype: int, float or None
        :raises urllib3.exceptions.TimeoutStateError: If :meth:`start_connect`
            has not yet been called on this object.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsatypingaenumTaEnumaEnumasocketTagetdefaulttimeoutaexceptionsTaTimeoutStateErrorla__prepare__a_TYPE_DEFAULTa__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uurllib3.util.timeouta__module__a__qualname__latokena__orig_bases__uFinal[_TYPE_DEFAULT]aOptionalaUniona_TYPE_TIMEOUTuTimeout configuration.

    Timeouts can be defined as a default for a pool:

    .. code-block:: python

        import urllib3

        timeout = urllib3.util.Timeout(connect=2.0, read=7.0)

        http = urllib3.PoolManager(timeout=timeout)

        resp = http.request("GET", "https://example.com/")

        print(resp.status)

    Or per-request (which overrides the default for the pool):

    .. code-block:: python

       response = http.request("GET", "https://example.com/", timeout=Timeout(10))

    Timeouts can be disabled by setting all the parameters to ``None``:

    .. code-block:: python

       no_timeout = Timeout(connect=None, read=None)
       response = http.request("GET", "https://example.com/", timeout=no_timeout)


    :param total:
        This combines the connect and read timeouts into one; the read timeout
        will be set to the time leftover from the connect attempt. In the
        event that both a connect timeout and a total are specified, or a read
        timeout and a total are specified, the shorter timeout will be applied.

        Defaults to None.

    :type total: int, float, or None

    :param connect:
        The maximum amount of time (in seconds) to wait for a connection
        attempt to a server to succeed. Omitting the parameter will default the
        connect timeout to the system default, probably `the global default
        timeout in socket.py
        <http://hg.python.org/cpython/file/603b4d593758/Lib/socket.py#l535>`_.
        None will set an infinite timeout for connection attempts.

    :type connect: int, float, or None

    :param read:
        The maximum amount of time (in seconds) to wait between consecutive
        read operations for a response from the server. Omitting the parameter
        will default the read timeout to the system default, probably `the
        global default timeout in socket.py
        <http://hg.python.org/cpython/file/603b4d593758/Lib/socket.py#l535>`_.
        None will set an infinite timeout.

    :type read: int, float, or None

    .. note::

        Many factors can affect the total amount of time for urllib3 to return
        an HTTP response.

        For example, Python's DNS resolver does not obey the timeout specified
        on the socket. Other factors that can affect total request time include
        high CPU load, high swap, the program running at a low priority level,
        or other behaviors.

        In addition, the read and total timeouts only measure the time between
        read operations on the socket connecting the client and the server,
        not the total amount of time for the request to return a complete
        response. For most requests, the timeout is raised because the server
        has not sent the first byte in the specified time. This is not always
        the case; if a server streams one byte every fifteen seconds, a timeout
        of 20 seconds will not trigger, even though the request will take
        several minutes to complete.

        If your goal is to cut off any request after a set amount of wall clock
        time, consider having a second "watcher" thread to cut off a slow
        request.
    aDEFAULT_TIMEOUTDatotalaconnectareadareturna_TYPE_TIMEOUTppaNonea__init__uTimeout.__init__Dareturnastra__repr__uTimeout.__repr__a__str__Datimeoutareturna_TYPE_TIMEOUTufloat | NoneuTimeout.resolve_default_timeoutDavalueanameareturna_TYPE_TIMEOUTastra_TYPE_TIMEOUTuTimeout._validate_timeoutDatimeoutareturna_TYPE_TIMEOUTaTimeoutafrom_floatuTimeout.from_floatDareturnaTimeoutacloneuTimeout.cloneDareturnafloatastart_connectuTimeout.start_connectuTimeout.get_connect_durationDareturna_TYPE_TIMEOUTaconnect_timeoutuTimeout.connect_timeoutDareturnufloat | Nonearead_timeoutuTimeout.read_timeoutTuurllib3\util\timeout.pyu<module urllib3.util.timeout>Ta__class__TaselfatotalaconnectareadTaselfTaclsavalueanameTaclsatimeoutTatimeout.urllib3.util.urlastartswithTw/w/apathalowera__class__a__new__ahostuFor backwards-compatibility with urlparse. We're nice like that.aqueryw?uAbsolute path including the query string.aauthanetlocuw@u
        Authority component as defined in RFC 3986 3.2.
        This includes userinfo (auth), host and port.

        i.e.
            userinfo@host:port
        aportw:u
        Network location including host and port.

        If you need the equivalent of urllib.parse's ``netloc``,
        use the ``authority`` property instead.
        utoo many values to unpack (expected 7)u://w#u
        Convert self into a url

        This function should more or less round-trip with :func:`.parse_url`. The
        returned url may not be exactly the same as the url inputted to
        :func:`.parse_url`, but it should be equivalent by the RFC (e.g., urls
        with a blank port will have : removed).

        Example:

        .. code-block:: python

            import urllib3

            U = urllib3.util.parse_url("https://google.com/mail/")

            print(U.url)
            # "https://google.com/mail/"

            print( urllib3.util.Url("https", "username:password",
                                    "host.com", 80, "/path", "query", "fragment"
                                    ).url
                )
            # "https://username:password@host.com:80/path?query#fragment"
        aurlato_stra_PERCENT_REasubnu<lambda>u_encode_invalid_chars.<locals>.<lambda>utoo many values to unpack (expected 2)aencodeTuutf-8asurrogatepassacountTd%Blld%ladecodeaencoded_componentabyteaextend:lnnazfillTlaupperuPercent-encodes a URI component without reapplying
    onto an already percent-encoded component.
    agroupTlasplitw.u..aoutputaappendapopainsertTluaendswithTTu/.u/..Tua_NORMALIZABLE_SCHEMESa_IPV6_ADDRZ_REamatcha_ZONE_ID_REasearchaspanTlTu%25u%25:lnn:lnna_encode_invalid_charsa_UNRESERVED_CHARSw%a_IPV4_REd.Tw.a_idna_encodeaasciiaisasciiaidnaaLocationParseErrorTuUnable to parse URL without the 'idna' moduleDastrictastd3_rulestpaIDNAErroruName 'u' is not a valid IDNA labelTaasciia_TARGET_REu is not a valid request URIagroupsa_PATH_CHARSa_QUERY_CHARSuPercent-encodes a request target so that there are no invalid characters

    Pre-condition for this function is that 'target' must start with '/'.
    If that is the case then _TARGET_RE will always produce a match.
    aUrla_SCHEME_REu//a_URI_REutoo many values to unpack (expected 5)aschemearpartitionTw@utoo many values to unpack (expected 3)a_HOST_PORT_REa_USERINFO_CHARSTnnnla_normalize_hosta_remove_path_dot_segmentsa_FRAGMENT_CHARSTEValueErrorEAttributeErroraport_intTaschemeaauthahostaportapathaqueryafragmentu
    Given a url, return a parsed :class:`.Url` namedtuple. Best-effort is
    performed to parse incomplete urls. Fields not provided will be None.
    This parser is RFC 3986 and RFC 6874 compliant.

    The parser logic and helper functions are based heavily on
    work done in the ``rfc3986`` module.

    :param str url: URL to parse into a :class:`.Url` namedtuple.

    Partly backwards-compatible with :mod:`urllib.parse`.

    Example:

    .. code-block:: python

        import urllib3

        print( urllib3.util.parse_url('http://google.com/mail/'))
        # Url(scheme='http', host='google.com', port=None, path='/mail/', ...)

        print( urllib3.util.parse_url('google.com:80'))
        # Url(scheme=None, host='google.com', port=80, path=None, ...)

        print( urllib3.util.parse_url('/foo?bar'))
        # Url(scheme=None, host=None, port=None, path='/foo', query='bar', ...)
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsareatypingaexceptionsTaLocationParseErrorlautilTato_strTahttpahttpsnacompileTu%[a-fA-F0-9]{2}Tu^(?:[a-zA-Z][a-zA-Z0-9+-]*:|/)u^(?:([a-zA-Z][a-zA-Z0-9+.-]*):)?(?://([^\\/?#]*))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?$aUNICODEaDOTALLu(?:[0-9]{1,3}\.){3}[0-9]{1,3}a_IPV4_PATu[0-9A-Fa-f]{1,4}a_HEX_PATu(?:{hex}:{hex}|{ipv4})Tahexaipv4a_LS32_PATahexals32a_subsLu(?:%(hex)s:){6}%(ls32)su::(?:%(hex)s:){5}%(ls32)su(?:%(hex)s)?::(?:%(hex)s:){4}%(ls32)su(?:(?:%(hex)s:)?%(hex)s)?::(?:%(hex)s:){3}%(ls32)su(?:(?:%(hex)s:){0,2}%(hex)s)?::(?:%(hex)s:){2}%(ls32)su(?:(?:%(hex)s:){0,3}%(hex)s)?::%(hex)s:%(ls32)su(?:(?:%(hex)s:){0,4}%(hex)s)?::%(ls32)su(?:(?:%(hex)s:){0,5}%(hex)s)?::%(hex)su(?:(?:%(hex)s:){0,6}%(hex)s)?::a_variationsuABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789._\-~a_UNRESERVED_PATu(?:w|w)a_IPV6_PATu(?:%25|%)(?:[u]|%[a-fA-F0-9]{2})+a_ZONE_ID_PATu\[u)?\]a_IPV6_ADDRZ_PATu(?:[^\[\]%:/?#]|%[a-fA-F0-9]{2})*a_REG_NAME_PATTu^(/[^?#]*)(?:\?([^#]*))?(?:#.*)?$w^w$a_IPV6_RE:llna_BRACELESS_IPV6_ADDRZ_REw(u)\]$u^(%s|%s|%s)(?::0*?(|0|[1-9][0-9]{0,4}))?$a_HOST_PORT_PATSBwMwFwYwiwrwxw2wpw-wdw8wXwKwQwcwDwywlwEwSwOw3whwHwmw.wPwBwUwJwzwVwAw6wIwLwkw5wowaw0wZw7w_wgw1wTwGwfwewWwuwwwRwnwbwqwjwtw~wNwsw4w9wvwCSw=w(w*w!w$w;w&w,w)w+w'a_SUB_DELIM_CHARSSw:Sw@w/Sw?aNamedTupleaOptionalafragmenta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.util.urla__module__u
    Data structure for representing an HTTP URL. Used as a return value for
    :func:`parse_url`. Both the scheme and host are normalized as they are
    both case-insensitive according to RFC 3986.
    a__qualname__TnnnnnnnDaschemeaauthahostaportapathaqueryafragmentustr | Noneustr | Noneustr | Noneuint | Noneustr | Noneustr | Noneustr | NoneuUrl.__new__apropertyDareturnustr | NoneahostnameuUrl.hostnameDareturnastrarequest_uriuUrl.request_uriaauthorityuUrl.authorityuUrl.netlocuUrl.urla__str__uUrl.__str__a__orig_bases__aoverloadDacomponentaallowed_charsareturnastrutyping.Container[str]astrDacomponentaallowed_charsareturnaNoneutyping.Container[str]aNoneDacomponentaallowed_charsareturnustr | Noneutyping.Container[str]ustr | NoneDapathareturnastrpDahostaschemeareturnaNoneustr | NoneaNoneDahostaschemeareturnastrustr | NoneastrDahostaschemeareturnustr | Noneustr | Noneustr | NoneDanameareturnastrabytesDatargetareturnastrpa_encode_targetDaurlareturnastraUrlaparse_urluurllib3\util\url.pyTamatchu<module urllib3.util.url>Ta__class__Taclsaschemeaauthahostaportapathaqueryafragmenta__class__TaselfTacomponentaallowed_charsTacomponentaallowed_charsapercent_encodingsauri_bytesais_percent_encodedaencoded_componentwiabyteabyte_ordTatargetamatchapathaqueryaencoded_targetTanameaidnaTahostaschemeTahostaschemeais_ipv6amatchastartaendazone_idTapathasegmentsaoutputasegmentTaselfauserinfoanetlocTaurlaschemeaauthorityaauthahostaportaport_intapathaqueryafragmentasource_urlanormalize_uriw_ahost_portweTaselfauriTaselfaschemeaauthahostaportapathaqueryafragmentaurl.urllib3.util.utilL unot expecting type a__name__uaencodeuutf-8astrictTaerrorsadecodea__traceback__awith_tracebacka__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingaTracebackTypelTnnDwxaencodingaerrorsareturnustr | bytesustr | Noneustr | Noneabytesato_bytesDwxaencodingaerrorsareturnustr | bytesustr | Noneustr | Noneastrato_strTnDatpavalueatbareturnutype[BaseException] | NoneaBaseExceptionuTracebackType | Noneutyping.NoReturnareraiseuurllib3\util\util.pyu<module urllib3.util.util>TatpavalueatbTwxaencodingaerrors.urllib3.util.wait4umust specify at least one of read=True, write=Trueasockapartialaselectarcheckawcheckutoo many values to unpack (expected 3)laPOLLINaPOLLOUTapollaregisterDwtareturnufloat | Noneulist[tuple[int, int]]ado_pollupoll_wait_for_socket.<locals>.do_polllapoll_objTlTEAttributeErrorEOSErrora_have_working_pollapoll_wait_for_socketawait_for_socketaselect_wait_for_socketTareadatimeoutuWaits for reading to be available on a given socket.
    Returns True if the socket is readable, or False if the timeout expired.
    TawriteatimeoutuWaits for writing to be available on a given socket.
    Returns True if the socket is readable, or False if the timeout expired.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsasocketawait_for_readawait_for_writea__all__TFpnDasockareadawriteatimeoutareturnusocket.socketaboolpufloat | NoneaboolDareturnaboolTnDasockatimeoutareturnusocket.socketufloat | Noneabooluurllib3\util\wait.pyu<module urllib3.util.wait>Tapoll_objTwtapoll_objTasockareadawriteatimeoutamaskapoll_objado_pollT
asockareadawriteatimeoutarcheckawcheckafnarreadyawreadyaxreadyTasockatimeoutTasockareadawriteatimeoutu.win32com.client.CLSIDToClassamapCLSIDToClassuRegister a class that wraps a CLSID

    This function allows a CLSID to be globally associated with a class.
    Certain module will automatically convert an IDispatch object to an
    instance of the associated class.
    aupdateuRegister a dictionary of CLSID's and classes.

    This module performs the same function as @RegisterCLSID@, but for
    an entire dictionary of associations.

    Typically called by makepy generated modules at import time.
    uGiven a CLSID, return the globally associated class.

    clsid -- a string CLSID representation to check.
    uDetermines if the CLSID has an associated class.

    clsid -- the string CLSID to check
    uManages a dictionary of CLSID strings to Python classes.

Primary use of this module is to allow modules generated by
makepy.py to share classes.  @makepy@ automatically generates code
which interacts with this module.  You should never need to reference
this module directly.

This module only provides support for modules which have been previously
been imported.  The gencache module provides some support for loading modules
on demand - once done, this module supports it...

As an example, the MSACCESS.TLB type library makes reference to the
CLSID of the Database object, as defined in DAO3032.DLL.  This
allows code using the MSAccess wrapper to natively use Databases.

This obviously applies to all cooperating objects, not just DAO and
Access.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aRegisterCLSIDaRegisterCLSIDsFromDictaGetClassaHasClassuwin32com\client\CLSIDToClass.pyu<module win32com.client.CLSIDToClass>TaclsidTaclsidapythonClassTadictu.win32com.client.build/JaintadispidadesclaselfanamesadocaresultCLSIDaresultDocumentationawasPropertyahiddenuMapEntry(dispid={s.dispid}, desc={s.desc}, names={s.names}, doc={s.doc!r}, resultCLSID={s.resultCLSID}, resultDocumentation={s.resultDocumentation}, wasProperty={s.wasProperty}, hidden={s.hidden}TwsapythoncomaIID_NULLaGetResultCLSIDaNoneaMakePublicAttributeNameapython_nameabWrittenabIsDispatchabIsSinkaclsidaco_classaOleItema__init__apropMapapropMapGetapropMapPutamapFuncsadefaultDispatchNameaBuildaCountInOutOptArgslutoo many values to unpack (expected 3)llaSetakeyaGetadesckindaDESCKIND_FUNCDESCamemidawFuncFlagsaGetNamesaole_erroruaGetDocumentationainvkindarettypea_ResolveTypeaargsatypeinfoaargListaappendaFUNCFLAG_FHIDDENaINVOKE_PROPERTYGETaINVOKE_PROPERTYPUTaINVOKE_PROPERTYPUTREFagetanamelaINVOKE_FUNCaMapEntryafunckindaFUNC_DISPATCHaDESCKIND_VARDESCavarkindaVAR_DISPATCHaelemdescVarawVarFlagsl@awTypeFlagsaTYPEFLAG_FDISPATCHABLEaGetFuncDesca_AddFunc_abForUserlaGetVarDesca_AddVar_aitemsutoo many values to unpack (expected 2)a_propMapGetCheck_a_propMapPutCheck_ainsaoutaPARAMFLAG_FINaPARAMFLAG_FOPTaoptsaPARAMFLAG_FOUTuReturn tuple counting in/outs/OPTS.  Sum of result may not be len(argTuple), as some args may be in/out.laMakeDispatchFuncMethodaMakeVarArgsFuncMethodwadefaultNamedOptArgadefaultNamedNotOptArgadefaultUnnamedArgupythoncom.Missingudef u(selfaBuildCallListu):a_makeDocStringu'%s'l:nlnaPARAMFLAG_FRETVALaretDescaNoTranslateMapu%sreturn self._oleobj_.InvokeTypes(%d, LCID, %s, %s, %s%s)a_BuildArgListaVT_DISPATCHaVT_UNKNOWNu%sret = self._oleobj_.InvokeTypes(%d, LCID, %s, %s, %s%s)
u%sif ret is not None:
u%s# See if this IUnknown is really an IDispatch
u%stry:
u%sret = ret.QueryInterface(pythoncom.IID_IDispatch)
u%sexcept pythoncom.error:
u%sreturn ret
u%sret = Dispatch(ret, %s, %s)
u%sreturn retaVT_BSTRu%s# Result is a Unicode object
u%sreturn self._ApplyTypes_(%d, %s, %s, %s, %s, %s%s)alinePrefixaargsDescw(u, *args):aDISPATCH_METHODureturn self._get_good_object_(self._oleobj_.Invoke(*((u,0,%d,1)+args)),'%s')aDispatchItemTuCant build vtables without type info!avaluesasortu<lambda>uVTableItem.Build.<locals>.<lambda>TakeyavtableFuncsaVT_PTRaVT_USERDEFINEDaVT_RECORDaVT_BYREFaVT_SAFEARRAYaVT_ARRAYaVT_CARRAYaGetRefTypeInfoacom_errorahresultawinerroraTYPE_E_CANTLOADLIBRARYaTYPE_E_LIBNOTREGISTEREDaGetTypeAttratypekindaTKIND_ALIASatdescAliasaTKIND_ENUMaTKIND_MODULEaVT_I4aTKIND_DISPATCHTlaTKIND_INTERFACEaTKIND_COCLASSaTKIND_RECORDaNotSupportedExceptionTuCan not resolve alias or user-defined typeatypeSubstMapatyperepramaxaindexTnuarg%dlu
w,u, uBuilds list of args to the underlying Invoke method.wiw_TuShould only be here with names starting with '__'a__ademunge_leading_underscoresaNONEaiskeywordacapitalizeauppera__builtins__aclassNameavalid_identifier_charsaPARAMFLAG_FHASDEFAULTadatetimeautctimetupleaTimeTypeayearamonthadayahouraminuteasecondamsecupywintypes.Time((%(year)d, %(month)d, %(day)d, %(hour)d, %(minute)d, %(second)d,0,0,0,%(msec)d))adefArgValainOutavalanumArgsaargaMakeDefaultArgRepradefOutArgadefNamedOptArgadefNamedNotOptArgadefUnnamedArgaargNameastrvalw
w#uw=anumOptArgsu, *uBuilds a Python declaration for a method.uContains knowledge to build a COM object definition.

This module is used by both the @dynamic@ and @makepy@ modules to build
all knowledge of a COM object.

This module contains classes which contain the actual knowledge of the object.
This include parameter and return type information, the COM dispid and CLSID, etc.

Other modules may use this information to generate .py files, use the information
dynamically, or possibly even generate .html documentation for objects.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__astringasysakeywordTaiskeywordapywintypesTaTimeTypeuPythonCOM.Client.Build erroraerrorTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uwin32com.client.builda__module__a__qualname__a__orig_bases__aDropIndirectionaVT_BOOLaVT_CLSIDaVT_CYaVT_DATEaVT_DECIMALaVT_EMPTYaVT_ERRORaVT_FILETIMEaVT_HRESULTaVT_I1aVT_I2aVT_I8aVT_INTaVT_NULLaVT_R4aVT_R8aVT_STREAMaVT_UI1aVT_UI2aVT_UI4aVT_UI8aVT_UINTaVT_VOIDaNoTranslateTypeswvuSimple holder for named attibutes - items in a map.uMapEntry.__init__a__repr__uMapEntry.__repr__uMapEntry.GetResultCLSIDaGetResultCLSIDStruMapEntry.GetResultCLSIDStraGetResultNameuMapEntry.GetResultNameTatypenameuOleItem.__init__TnnnluDispatchItem.__init__uDispatchItem._propMapPutCheck_uDispatchItem._propMapGetCheck_uDispatchItem._AddFunc_uDispatchItem._AddVar_TluDispatchItem.BuilduDispatchItem.CountInOutOptArgsaMakeFuncMethoduDispatchItem.MakeFuncMethoduDispatchItem.MakeDispatchFuncMethoduDispatchItem.MakeVarArgsFuncMethodaVTableItemuVTableItem.BuildaLazyDispatchItemuLazyDispatchItem.__init__aascii_lettersadigitsTFuwin32com\client\build.pyTwmu<module win32com.client.build>TaselfatypeinfoaattrabForUserwjafdescakeyaitemTaselfatypeinfoaattrabForUserameth_listaentryTafdescanamesadefNamedOptArgadefNamedNotOptArgadefUnnamedArgadefOutArgais_commentanumArgsanumOptArgsastrvalafirstOptArgaargaargNameanamedArgathisdescadefArgValTaselfaargTupleainsaoutaoptsaargCheckainOutTa__class__TaselfarcTaselfT
adefArgValainOutavalayearamonthadayahouraminuteasecondamsecTaselfaentryanameabMakeClassafdescadocanamesaretalinePrefixadefNamedOptArgadefNamedNotOptArgadefUnnamedArgadefOutArgaidwsaresclsidaretDescaargsDescaparam_flagsabad_paramsardTaselfaentryanameabMakeClassTaclassNameais_globalaretTaselfaentryanameabMakeClassafdescanamesadocaretaargPrefixalinePrefixainvoketypewsTaselfatypeinfoafdescabForUseraidafuncflagsanamesanameadocainvkindatyperepraflagadefvalaresultCLSIDaresultDocaargListaargDescaarg_typeaarg_clsidaarg_docahiddenamapaexistingTaselfatypeinfoavardescabForUseraidanamesatyperepraflagsadefvalaresultCLSIDaresultDocadocamapahiddenTafdescanamesanumArgswianame_numTatyperepraitypeinfoaindir_vtasubreprawas_userasub_clsidasub_docaresultTypeInfoadetailsaresultAttratypeKindatdescaclsidaretdocTaselfaattradocTaselfadesc_or_idanamesadocaresultCLSIDaresultDocahiddenTaselfadocTaselfatypeinfoaattradocabForUserTaselfakeyaitemainsaoutsaoptsanewKeyadeleteExistingTaclassNamewi.win32com.clienti+
Tuthis is deprecated and will go awayaGetTypeInfoaGetTypeAttrlapythoncomacom_erroruTagencachelagencacheaGetClassForCLSIDadispatchaCDispatchadynamicaDispatchatypeinfoTaclsctxu
    Helper function to return a makepy generated class for a CLSID if it exists,
    otherwise cope by using CDispatch.
    aCLSCTX_ALLuYou must specify a value for Pathname or Class, but not both.aGetActiveObjectaMonikeru
    Mimic VB's GetObject() function.

    ob = GetObject(Class = "ProgID") or GetObject(Class = clsid) will
    connect to an already running instance of the COM object.

    ob = GetObject(r"c:lahlahoo.xls") (aka the COM moniker syntax)
    will return a ready to use Python wrapping of the required COM object.

    Note: You must specifiy one or the other of these arguments. I know
    this isn't pretty, but it is what VB does. Blech. If you don't
    I'll throw ValueError at you. :)

    This will most likely throw pythoncom.com_error if anything fails.
    apywintypesaIIDaQueryInterfaceaIID_IDispatcha__WrapDispatchTaresultCLSIDaclsctxu
    Python friendly version of GetObject's ProgID/CLSID functionality.
    aMkParseDisplayNameutoo many values to unpack (expected 3)aBindToObjectu
    Python friendly version of GetObject's moniker functionality.
    a_GetGoodDispatchAndUserNameutoo many values to unpack (expected 2)uCreates a Dispatch based COM object.aCLSCTX_SERVERaCLSCTX_INPROCaCoCreateInstanceExaclsiduCreates a Dispatch based COM object on a specific machine.a__dir__aMakeModuleForTypelibalcidamajorlaminoruThe interface name '%s' does not appear in the specified library %raver_descaindexaCLSIDaEnsureDispatchaobuMust be a makepy-able object for this to workaGetModuleForCLSIDaGetModuleForTypelibaLCIDaMajorVersionaMinorVersionaNamesToIIDMapagetuThe interface name '%s' does not appear in the same library as object '%r'atargetadefault_interfaceu'Cast' a COM object to another interfacea__dicts__a__bases__a__setattr__a_obj_acloseTaCLSIDa_oleobj_aGetContainingTypeLibaGetLibAttraEnsureModulellDabValidateFilelaGetClassForProgIDuThis COM object can not automate the makepy process - please run makepy manually for this objectaClassTypeageteventsuThis COM object does not support events.aCOMEventClassa_event_setattr_a__init__aEventsProxyuCreate a COM object that can fire events to a user defined class.
    clsid -- The ProgID or CLSID of the object to create.
    user_event_class -- A Python class object that responds to the events.

    This requires makepy support for the COM object being created.  If
    this support does not exist it will be automatically generated by
    this function.  If the object does not support makepy, a TypeError
    exception will be raised.

    The result is a class instance that both represents the COM object
    and handles events from the COM object.

    It is important to note that the returned instance is not a direct
    instance of the user_event_class, but an instance of a temporary
    class object that derives from three classes:
    * The makepy generated class for the COM object
    * The makepy generated class for the COM events
    * The user_event_class as passed to this function.

    If this is not suitable, see the getevents function for an alternative
    technique of handling events.

    Object Lifetimes:  Whenever the object returned from this function is
    cleaned-up by Python, the events will be disconnected from
    the COM object.  This is almost always what should happen,
    but see the documentation for getevents() for more details.

    Example:

    >>> class IEEvents:
    ...    def OnVisible(self, visible):
    ...       print "Visible changed:", visible
    ...
    >>> ie = DispatchWithEvents("InternetExplorer.Application", IEEvents)
    >>> ie.Visible = 1
    Visible changed: 1
    >>>
    ainstanceuSimilar to DispatchWithEvents - except that the returned
    object is *not* also usable as the original Dispatch object - that is
    the returned object is not dispatchable.

    The difference is best summarised by example.

    >>> class IEEvents:
    ...    def OnVisible(self, visible):
    ...       print "Visible changed:", visible
    ...
    >>> ie = Dispatch("InternetExplorer.Application")
    >>> ie_events = WithEvents(ie, IEEvents)
    >>> ie.Visible = 1
    Visible changed: 1

    Compare with the code sample for DispatchWithEvents, where you get a
    single object that is both the interface and the event handler.  Note that
    the event handler instance will *not* be able to use 'self.' to refer to
    IE's methods and properties.

    This is mainly useful where using DispatchWithEvents causes
    circular reference problems that the simple proxy doesn't deal with
    adefault_sourceacoclass_clsiduDetermine the default outgoing interface for a class, given
    either a clsid or progid. It returns a class - you can
    conveniently derive your own handler from this class and implement
    the appropriate methods.

    This method relies on the classes produced by makepy. You must use
    either makepy or the gencache module to ensure that the
    appropriate support classes have been generated for the com server
    that you will be handling events from.

    Beware of COM circular references.  When the Events class is connected
    to the COM object, the COM object itself keeps a reference to the Python
    events class.  Thus, neither the Events instance or the COM object will
    ever die by themselves.  The 'close' method on the events instance
    must be called to break this chain and allow standard Python collection
    rules to manage object lifetimes.  Note that DispatchWithEvents() does
    work around this problem by the use of a proxy object, but if you use
    the getevents() function yourself, you must make your own arrangements
    to manage this circular reference issue.

    Beware of creating Python circular references: this will happen if your
    handler has a reference to an object that has a reference back to
    the event source. Call the 'close' method to break the chain.

    Example:

    >>>win32com.client.gencache.EnsureModule('{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B}',0,1,1)
    <module 'win32com.gen_py.....
    >>>
    >>> class InternetExplorerEvents(win32com.client.getevents("InternetExplorer.Application.1")):
    ...    def OnVisible(self, Visible):
    ...        print "Visibility changed: ", Visible
    ...
    >>>
    >>> ie=win32com.client.Dispatch("InternetExplorer.Application.1")
    >>> events=InternetExplorerEvents(ie)
    >>> ie.Visible=1
    Visibility changed:  1
    >>>
    asysamodulesa__module__aRecordMapuThe structure '%s' is not defined in module '%s'aGetRecordFromGuidsuCreates a new record object, given the name of the record,
    and an object from the same type library.

    Example usage would be:
      app = win32com.client.Dispatch("Some.Application")
      point = win32com.client.Record("SomeAppPoint", app)
      point.x = 0
      point.y = 0
      app.MoveTo(point)
    anewaDispatchBaseClassawinerrorahresultaE_NOINTERFACEaselfakeysa_prop_map_get_a_prop_map_put_aProperties_aNamea__doc__uwin32com.gen_py.a__name__uwin32com.gen_py.unknownu<%s.%s instance at 0x%s>a_get_good_object_aInvokeTypesu'%s' object has no attribute '%s'a_ApplyTypes_aInvokea_get_good_single_object_a_PyIDispatchTypea_dispobj_Ta__call__a__str__a__int__a__iter__a__len__a__nonzero__a__maybeu<win32com.gen_py.%s.%s>avalueaattra__call__a__str__a__int__a__iter__a__len__a__nonzero__avarianttypea_valueuwin32com.client.VARIANT(%r, %r)a__file__apathadirnameajoinaenvironTaNUITKA_PACKAGE_win32comu\not_existingaclientTaNUITKA_PACKAGE_win32com_clientu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__TadynamicagencacheaTypeIIDsTnnnaGetObjectTnnnnnnaDispatchExa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uwin32com.clientu
    The dynamic class used as a last resort.
    The purpose of this overriding of dynamic.CDispatch is to perpetuate the policy
    of using the makepy generated wrapper Python class instead of dynamic.CDispatch
    if/when possible.
    a__qualname__a_wrap_dispatch_uCDispatch._wrap_dispatch_uCDispatch.__dir__a__orig_bases__TnaCastTouA container for generated COM constants.aConstantsuConstants.__init__a__getattr__uConstants.__getattr__TaconstantsuEventsProxy.__init__a__del__uEventsProxy.__del__uEventsProxy.__getattr__uEventsProxy.__setattr__aDispatchWithEventsaWithEventsaRecorduDispatchBaseClass.__init__uDispatchBaseClass.__dir__a__repr__uDispatchBaseClass.__repr__a__eq__uDispatchBaseClass.__eq__a__ne__uDispatchBaseClass.__ne__uDispatchBaseClass._ApplyTypes_uDispatchBaseClass.__getattr__uDispatchBaseClass.__setattr__TnnuDispatchBaseClass._get_good_single_object_uDispatchBaseClass._get_good_object_aCoClassBaseClassuCoClassBaseClass.__init__uCoClassBaseClass.__repr__uCoClassBaseClass.__getattr__uCoClassBaseClass.__setattr__a__maybe__call__uCoClassBaseClass.__maybe__call__a__maybe__str__uCoClassBaseClass.__maybe__str__a__maybe__int__uCoClassBaseClass.__maybe__int__a__maybe__iter__uCoClassBaseClass.__maybe__iter__a__maybe__len__uCoClassBaseClass.__maybe__len__a__maybe__nonzero__uCoClassBaseClass.__maybe__nonzero__TOobjectaVARIANTuVARIANT.__init__a_get_valueuVARIANT._get_valuea_set_valueuVARIANT._set_valuea_del_valueuVARIANT._del_valueapropertyuVARIANT.__repr__uwin32com\client\__init__.pyu<module win32com.client>Ta__class__Taobatargetatypelibamodaclsidatarget_clsidatarget_classTadispatchauserNamearesultCLSIDatypeinfoaUnicodeToStringaclsctxTaclsidamachineauserNamearesultCLSIDatypeinfoaUnicodeToStringaclsctxaserverInfoadispatchT
aclsidauser_event_classadispatiadisp_clsidatlbaindexatlaadisp_classanew_typeaevents_classaresult_classainstanceTaClassaclsctxaresultCLSIDadispatchTaPathnameaClassaclsctxTaPathnameaclsctxamonikerwiabindCtxadispatchTanameaobjectagencacheamoduleapackageastruct_guidT
adispauser_event_classatiadisp_clsidatlbaindexatlaadisp_classaclsidanew_typeaevents_classaresult_classainstanceTaselfadispidawFlagsaretTypeaargTypesauseraresultCLSIDaargsTadispatchauserNamearesultCLSIDatypeinfoaUnicodeToStringaclsctxaWrapperClassagencacheaklassTaselfTaselfalstTaselfaotherTaselfwawdTaselfaattrTaselfaattraargsTaselfaattrwdTaselfaobTaselfaoobjadetailsawinerrorTaselfaoobjadispobjamaybeTaselfavtavalueTaselfaargsakwargsTaselfaargsTaselfamod_docamod_nameTaselfaattravalTaselfaattravalueaargsadefArgsTaselfaattravaluewdTaobjaobUserNamearesultCLSIDaobUserNameTuplearesultCLSIDTupleTaselfaobjaobUserNamearesultCLSIDTaobjaobUserNamearesultCLSIDTaselfanewvalTaselfaobauserNameareturnCLSIDaUnicodeToStringTaclsidaklass.win32com.client.dynamic4adebuggingaprintDaendw adebugging_attratypesaMethodTypeaPyIDispatchTypea_GoodDispatchTypesapythoncomaconnectaole_erroraCoCreateInstanceaIID_IDispatcha_oleobj_a_GetGoodDispatchaIDispatchadescaentryadesckindaDESCKIND_VARDESCainvkindTuthis is deprecated and will go awaya_GetGoodDispatchAndUserNameutoo many values to unpack (expected 2)aCDispatchaGetTypeInfoaGetTypeCompacom_erroraMakeOleRepratypeinfoTalazydataaGetTypeAttrlaTKIND_INTERFACElaTYPEFLAG_FDUALaGetRefTypeOfImplTypeTlaGetRefTypeInfoabuildaDispatchItemlaLazyDispatchItemuDispatch with no type infou<unknown>a_username_a_olerepr_a_mapCachedItems_a_builtMethods_a_enum_a_unicode_to_string_a_lazydata_adefaultDispatchNamea_find_dispatch_type_aDISPATCH_METHODaDISPATCH_PROPERTYGETaDISPID_VALUEaLCIDla_get_good_object_aInvokeuThis dispatch object does not define a default methoduProvide 'default dispatch' COM functionality - allow instance to be calledu<COMObject %s>a__call__ahresultaERRORS_BAD_CONTEXTa__repr__akeysa_dir_ole_aProperties_aNameaGetTypeInfoCountaselfa_UpdateWithITypeInfo_aitems_dictatypeInfosapopaiidainspectedIIDsacFuncsatypeInfoaGetFuncDescaGetNamesamemidacImplTypesaappendTaCountuThis dispatch object does not define a Count methodaInvokeTypesaDISPID_NEWENUMTl
l
TuTautilautilaWrapEnuma_NewEnuma__getitem__TaItemuThis object does not support enumerationaDISPATCH_PROPERTYPUTaDISPATCH_PROPERTYPUTREFamapFuncsladispidapropMapGetaGetIDsOfNamesTnnaDispatcha_wrap_dispatch_aPyIUnknownTypeaQueryInterfaceu<lambda>uCDispatch._get_good_object_.<locals>.<lambda>a_get_good_single_object_uGiven an object (usually the retval from a method), make it a good object to return.
        Basically checks if it is a COM object, and wraps it up.
        Also handles the fact that a retval may be a tuple of retvalsaMakePublicAttributeNameaMakeFuncMethodw
aexecacopyawin32comaclientu<string>aMakeMethodadebug_printuError building OLE definition for code atracebackaprint_excuMake a method object - Assumes in olerepr funcmapavaluesa_Release_aReleaseuCleanup object - like a close - to force cleanup when you dont
        want to rely on Python's reference counting.uCall the named method as a procedure, rather than function.
        Mainly used by Word.Basic, which whinges about such things.uAxDispatch containerTuMethods:wTuProps:apropMapaitemsu%s = 0x%x - %sTuGet Props:TuPut Props:apropMapPutuDebug routine - dumps what it knows about an object.a_LazyAddAttr_adebug_attr_printu%s.__LazyMap__(%s) added somethingaALL_INVOKE_TYPESatypecompaBindaattr:nlnTaSetaGet:lnnaDESCKIND_FUNCDESCaolerepra_AddFunc_a_AddVar_a_propMapPutCheck_a_propMapGetCheck_aresaMapEntrya__AttrToID__uFlag these attribute names as being methods.
        Some objects do not correctly differentiate methods and
        properties, leading to problems when calling these methods.

        Specifically, trying to say: ob.SomeFunc()
        may yield an exception "None object is not callable"
        In this case, an attempt to fetch the *property* has worked
        and returned None, rather than indicating it is really a method.
        Calling: ob._FlagAsMethod("SomeFunc")
        should then allow this to work.
        uCalling GetIDsOfNames for property %s in Dispatch container %sa__iter__uThis object can not function as an iteratoruwin32com.client.dynamica__module__uCDispatch.__getattr__.<locals>.Factorya__qualname__a__init__uCDispatch.__getattr__.<locals>.Factory.__init__uCDispatch.__getattr__.<locals>.Factory.__call__aFactoryastartswithTw_aendswitha_make_method_ageta__LazyMap__uCached items has attribute!TEKeyErrorEAttributeErroruAttribute %s not in cachearetEntrya_GetDescInvokeTypeaINVOKE_PROPERTYGETuGetting property Id 0x%x from OLE objectuOLE returned u%s.%saobuwin32com.client.utilaIteratoruSetAttr called for %s.%s=%s on DispatchContaineraINVOKE_PROPERTYPUTu__setattr__ property %s (id=0x%x) in Dispatch container %suProperty '%s.%s' can not be set.uSupport for dynamic COM client support.

Introduction
 Dynamic COM client support is the ability to use a COM server without
 prior knowledge of the server.  This can be used to talk to almost all
 COM servers, including much of MS Office.

 In general, you should not use this module directly - see below.

Example
 >>> import win32com.client
 >>> xl = win32com.client.Dispatch("Excel.Application")
 # The line above invokes the functionality of this class.
 # xl is now an object we can use to talk to Excel.
 >>> xl.Visible = 1 # The Excel window becomes visible.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__uwin32com.clientawinerrorapywintypesTaIIDTypeaIIDTypeTabuildaDISP_E_MEMBERNOTFOUNDaDISP_E_BADPARAMCOUNTaDISP_E_PARAMNOTOPTIONALaDISP_E_TYPEMISMATCHaE_INVALIDARGaINVOKE_PROPERTYPUTREFaINVOKE_FUNCaTypeIIDsaIID_IUnknowna_defaultDispatchItemaCLSCTX_SERVERaDumbDispatchTnnnuCDispatch.__init__uCDispatch.__call__a__bool__uCDispatch.__bool__uCDispatch.__repr__a__str__uCDispatch.__str__a__dir__uCDispatch.__dir__uCDispatch._dir_ole_uCDispatch._UpdateWithITypeInfo_a__eq__uCDispatch.__eq__a__ne__uCDispatch.__ne__a__int__uCDispatch.__int__a__len__uCDispatch.__len__uCDispatch._NewEnumuCDispatch.__getitem__a__setitem__uCDispatch.__setitem__uCDispatch._find_dispatch_type_a_ApplyTypes_uCDispatch._ApplyTypes_uCDispatch._wrap_dispatch_uCDispatch._get_good_single_object_uCDispatch._get_good_object_uCDispatch._make_method_uCDispatch._Release_a_proc_uCDispatch._proc_a_print_details_uCDispatch._print_details_uCDispatch.__LazyMap__uCDispatch._LazyAddAttr_a_FlagAsMethoduCDispatch._FlagAsMethoduCDispatch.__AttrToID__a__getattr__uCDispatch.__getattr__a__setattr__uCDispatch.__setattr__uwin32com\client\dynamic.pyTwowsaounarcu<module win32com.client.dynamic>TaIDispatchauserNameacreateClassatypeinfoaUnicodeToStringaclsctxalazydataatypecompaolereprTaIDispatchauserNameacreateClassaUnicodeToStringaclsctxTafuncainstaclsTaIDispatchatypeinfoatypecompaolerepraattrahrefTaselfadispidawFlagsaretTypeaargTypesauseraresultCLSIDaargsaresultTaselfamethodNamesanameadetailsTaentryainvoke_typeTaIDispatchaclsctxTaIDispatchauserNameaclsctxT
aselfaattraresatypeinfoatypecompaolereprwiwxwtwrakeyamapaitemTaselfainvkindaenumautilTaselfachildContTaselfaitems_dictatypeInfoatypeInfosainspectedIIDsatypeAttraiFunafunDescafunNameaiImplTypeaiRefTypearefTypeInfoTaselfaattrTaselfTaselfaargsainvkindadispidaallArgsTaselfawin32comTaselfalstTaselfaotherTaselfaattrainvkindaenumaFactoryaretEntryaretainvoke_typeadetailsTaselfaindexainvkindadispidTaselfaIDispatchaolereprauserNameaUnicodeToStringalazydataTaselfaobTaselfainvkindadispidTaselfaattravalueaentryainvoke_typeTaselfaindexaargsainvkindadispidaallArgsTaselfadetailsTaselfaitems_dictaiTIatypeInfoTaselfamethodNameaitemadispidTaselfaobauserNameaReturnCLSIDT
aselfanameamethodNameamethodCodeListamethodCodeacodeObjectatempNameSpaceaglobNameSpaceafnanewMethTaselfamethodapropaentryTaselfanameaargsaitemadispIdTaselfaobauserNameareturnCLSIDaUnicodeToStringTaargsaarg.win32com.client.gencache&a_LoadDictsaRebuildais_readonlyuTrying to write to a readonly gencache ('%s')!awin32coma__gen_path__ajoinaGetGeneratePathudicts.datawbapickleaPickleradumpapickleVersionaclsidToTypelibacloseais_zipa__loader__aarchiveastartswithaget_dataaBytesIOarbaUnpickleraloadaversionRedirectMapaclearaupper:llnux%sx%sx%suGiven the clsid, lcid, major and  minor for a type lib, return
    the file name (no extension) providing this support.
    asplitTwxluReverse of GetGeneratedFileName()TuWhy do you want the genpath for a readonly store?aosamakedirsaerrorapathu__init__.pyastatafnamewwawriteTu# Generated file - this directory may be deleted to reset the COM cache...
Tuimport win32com
Tuif __path__[:-1] != win32com.__gen_path__: __path__.append(win32com.__gen_path__)
uReturns the name of the path to generate to.
    Checks the directory is OK.
    apywintypesaIIDaGetClassForCLSIDuGet a Python class for a Program ID

    Given a Program ID, return a Python class which wraps the COM object

    Returns the Python class, or None if no module is available.

    Params
    progid -- A COM ProgramID or IID (eg, "Word.Application")
    aCLSIDToClassaHasClassaGetClassaGetModuleForCLSIDuGet a Python class for a CLSID

    Given a CLSID, return a Python class which wraps the COM object

    Returns the Python class, or None if no module is available.

    Params
    clsid -- A COM CLSID (or string repr of one)
    acom_erroruGet a Python module for a Program ID

    Given a Program ID, return a Python module which contains the
    class which wraps the COM object.

    Returns the Python module, or None if no module is available.

    Params
    progid -- A COM ProgramID or IID (eg, "Word.Application")
    utoo many values to unpack (expected 4)aGetModuleForTypelibaCLSIDToPackageMapagetaVTablesToPackageMapa__name__w.atypelibCLSIDalcidamajoraminorademandGeneratedTypeLibrariesuTamakepylamakepylaGenerateChildFromTypeLibSpecasysamodulesamoduGet a Python module for a CLSID

    Given a CLSID, return a Python module which contains the
    class which wraps the COM object.

    Returns the Python module, or None if no module is available.

    Params
    progid -- A COM CLSID (ie, not the description)
    aGetGeneratedFileNamea_GetModulea_in_gencache_aAddModuleToCacheuGet a Python module for a type library ID

    Given the CLSID of a typelibrary, return an imported Python module,
    else None

    Params
    typelibCLSID -- IID of the type library.
    major -- Integer major version.
    minor -- Integer minor version
    lcid -- Integer LCID for the library.
    aGenerateFromTypeLibSpecTaprogressInstanceabForDemandabBuildHiddenuGenerate support for a type library.

    Given the IID, LCID and version information for a type library, generate
    and import the necessary support files.

    Returns the Python module.  No exceptions are caught.

    Params
    typelibCLSID -- IID of the type library.
    major -- Integer major version.
    minor -- Integer minor version.
    lcid -- Integer LCID for the library.
    progressInstance -- Instance to use as progress indicator, or None to
                        use the GUI progress bar.
    abForDemandDefaultaGetLibAttrlluGenerate support for a type library.

    Given a PyITypeLib interface generate and import the necessary support files.  This is useful
    for getting makepy support for a typelibrary that is not registered - the caller can locate
    and load the type library itself, rather than relying on COM to find it.

    Returns the Python module.

    Params
    typelib_ob -- The type library itself
    progressInstance -- Instance to use as progress indicator, or None to
                        use the GUI progress bar.
    aMakeModuleForTypelibInterfaceuCheck we have support for a type library, generating if not.

    Given a PyITypeLib interface generate and import the necessary
    support files if necessary. This is useful for getting makepy support
    for a typelibrary that is not registered - the caller can locate and
    load the type library itself, rather than relying on COM to find it.

    Returns the Python module.

    Params
    typelib_ob -- The type library itself
    progressInstance -- Instance to use as progress indicator, or None to
                        use the GUI progress bar.
    aprintuForgetAboutTypelibInterface:: Warning - type library with info %s is not being remembered!aitemsutoo many values to unpack (expected 2)uDrop any references to a typelib previously added with EnsureModuleForTypelibInterface and forDemandapythoncomaLoadRegTypeLibTuCan't validate in a read-only gencacheaQueryPathOfRegTypeLiblw:nlnasupports_unicode_filenamesaencodeagetfilesystemencodingu%s\%su.pywcTagenpyagenpyaMinorVersionatlbAttributesamakepy_versionaunlinkaisdirashutilarmtreeu.pyclatypLibPathapyModTimeamoduleaGetGeneratedInfoslaappendasortaMakeModuleForTypelibTabForDemandabBuildHiddenareloaduEnsure Python support is loaded for a type library, generating if necessary.

    Given the IID, LCID and version information for a type library, check and if
    necessary (re)generate, then import the necessary support files. If we regenerate the file, there
    is no way to totally snuff out all instances of the old module in Python, and thus we will regenerate the file more than necessary,
    unless makepy/genpy is modified accordingly.


    Returns the Python module.  No exceptions are caught during the generate process.

    Params
    typelibCLSID -- IID of the type library.
    major -- Integer major version.
    minor -- Integer minor version
    lcid -- Integer LCID for the library.
    progressInstance -- Instance to use as progress indicator, or None to
                        use the GUI progress bar.
    bValidateFile -- Whether or not to perform cache validation or not
    bForDemand -- Should a complete generation happen now, or on demand?
    bBuildHidden -- Should hidden members/attributes etc be generated?
    aclientaDispatchTaCLSIDa_oleobj_aGetTypeInfoaGetTypeAttraGetContainingTypeLibaEnsureModuleTabForDemandTaCLSIDToClassuThis COM object can not automate the makepy process - please run makepy manually for this objectadispuGiven a COM prog_id, return an object that is using makepy support, building if necessaryaSetTypelibForAllClsidsuAddModuleToCache.<locals>.SetTypelibForAllClsidsaCLSIDToClassMapaVTablesToClassMapadict_modifieda_SaveDictsuAdd a newly generated file to the cache dictionary.ainfoafindTu.zip\azipfilelareplaceTw\w/aZipFileanamelistazip_pathTw/Twxw{w}ainfosakeysaglobu\*asplitextaretuwin32com.gen_py.%suGiven the name of a module in the gen_py directory, import and return it.TuRebuilding cache of generated files for COM support...averboseaCheckinguCould not add module %s - %s: %saexc_infoTuDone.uRebuild the cache indexes from the file system.uCache is in directorywdu%s - %sa__doc__Tu  Usage: gencache [-q] [-d] [-r]

 -q         - Quiet
 -d         - Dump the cache (typelibrary description and filename).
 -r         - Rebuild the cache dictionary from the existing .py files
aexitTluManages the cache of generated Python code.

Description
  This file manages the cache of generated Python code.  When run from the
  command line, it also provides a number of options for managing that cache.

Implementation
  Each typelib is generated into a filename of format "{guid}x{lcid}x{major}x{minor}.py"

  An external persistant dictionary maps from all known IIDs in all known type libraries
  to the type library itself.

  Thus, whenever Python code knows the IID of an object, it can find the IID, LCID and version of
  the type library which supports it.  Given this information, it can find the Python module
  with the support.

  If necessary, this support can be generated on the fly.

Hacks, to do, etc
  Currently just uses a pickled dictionary, but should used some sort of indexed file.
  Maybe an OLE2 compound file, or a bsddb file?
a__file__a__spec__aoriginahas_locationa__cached__uwin32com.clienta__init__aSplitGeneratedFileNameaGetClassForProgIDaGetModuleForProgIDaEnsureModuleForTypelibInterfaceaForgetAboutTypelibInterfaceaEnsureDispatcha_Dumpausageuwin32com\client\gencache.pyu<module win32com.client.gencache>TatypelibclsidalcidamajoraminoraverboseabFlushNowafnameamodainfoadict_modifiedaSetTypelibForAllClsidsTaprog_idabForDemandadispatiadisp_clsidatlbaindexatlaamodaCLSIDToClassadisp_classTatypelibCLSIDalcidamajoraminoraprogressInstanceabValidateFileabForDemandabBuildHiddenabReloadNeededamoduleatlbAttratypLibPathasufatlbAttributesafilePathPrefixafilePathafilePathPycagenpyashutilafModTimeSetapyModTimeweatypLibModTimeakeyaitemsadescanew_minoraretTatypelib_obaprogressInstanceabForDemandabBuildHiddenatlaaguidalcidamajoraminorTatypelib_obatlaaguidalcidamajoraminorainfoakeyavalTaclsidamodTaprogidaclsidTafnamewfTaclsidalcidamajoraminorTazip_posazipfileazip_fileazip_pathazfainfoswnabaseaiidalcidamajoraminorafilesaretafileanameTaclsidaclsid_stratypelibCLSIDalcidamajoraminoramodasub_modasub_mod_nameainfoamakepyTaprogidaiidTatypelibCLSIDalcidamajoraminoramodNameamodTatypelibCLSIDalcidamajoraminoraprogressInstanceabForDemandabBuildHiddenamakepyT
atypelib_obaprogressInstanceabForDemandabBuildHiddenamakepyatlaaguidalcidamajoraminorTaverboseainfosainfoaiidalcidamajoraminorTadictadict_modifiedaclsidaclsainfoTadict_modifiedainfoTafnameTwdaclsidatypelibCLSIDalcidamajoraminoramodTafnameamod_nameamodTaioaloaderaarc_pathadicts_pathadatawfwpaversionTwfwpTausageString.win32com.client.genpy4-:lnnabuildaMakeDefaultArgRepraretaappend:nlnu(%s, %d, %s, %s, "%s", %s)aOnaprintTu_dispid_to_func_ = {TafileapropMapGetaitemsapropMapPutamapFuncsutoo many values to unpack (expected 2)adescu%9d : "%s",amemidaMakeEventMethodNameanameslTu}acmpaorderadocuCompare for sortinguOleItem: doc=%s, order=%daOleItema__init__aclsidavaluesaitemaaliasDocaaliasaWriteAliasItemaaliasItemsastreamlaattratuplelaintaGetRefTypeInfoaGetDocumentationTlaGetTypeAttraaliasAttrabWrittenu = amapVTToTypeStringu# %s=%su = None # Can't convert alias info amapVarslapythoncomaTYPEFLAG_FHIDDENaTYPEFLAG_FRESTRICTEDahiddenlatypeinfoaGetVarDescaGetNamesaMapEntryaselfakeysasortlaVAR_CONSTu<makepy>aevalareplaceTw"w'w"u # This VARIANT type cannot be converted automaticallyu%-30s=%-10s # from enum %saMakePublicAttributeNameanumaWriteVTableMapafileu%s_vtables_dispatch_ = %dapython_nameabIsDispatchu%s_vtables_ = [avtableFuncsutoo many values to unpack (expected 3)adesckindaDESCKIND_FUNCDESCw Tu((Taendafilew,aitem_numlTu
u), %d, (%r, %r, [ascodeArrayaargslTu],afunckindainvkindacallconvacParamsOptaoVftarettypeawFuncFlagsTu)),Tw]aDispatchItematype_attracoclass_clsidatypekindaTKIND_DISPATCHabIsSinkaWriteEventSinkClassHeaderaWriteCallbackClassBodyaWriteClassHeaderaWriteClassBodyageneratoracheckWriteDispatchBaseClassuclass u(DispatchBaseClass):wa_makeDocStringaProgIDFromCLSIDu# This class is creatable by the name '%s'acom_erroruCLSID = Tucoclass_clsid = Noneucoclass_clsid = acheckWriteEventBaseClassw:uCLSID = CLSID_Sink = Tu_public_methods_ = [] # For COM Server supportaWriteSinkEventMapTudef __init__(self, oobj = None):Tuif oobj is None:Tuself._olecp = NoneTuelse:Tuimport win32com.server.utilTufrom win32com.server.policy import EventHandlerPolicyTucpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)Tucp=cpc.FindConnectionPoint(self.CLSID_Sink)Tucookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))Tuself._olecp,self._olecp_cookie = cp,cookieTudef __del__(self):Tutry:Tuself.close()Tuexcept pythoncom.com_error:TupassTudef close(self):Tuif self._olecp is not None:Tucp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,NoneTucp.Unadvise(cookie)Tudef _query_interface_(self, iid):Tuimport win32com.server.utilTuif iid==self.CLSID_Sink: return win32com.server.util.wrap(self)Tu# Event HandlersTu# If you create handlers, they should have the following prototypes:u#def u(selfaBuildCallListadefaultNamedOptArgadefaultNamedNotOptArgadefaultUnnamedArgupythoncom.MissingDais_commenttu):u#Dacountaitemavaluea_newenumnnnnaFUNCFLAG_FRESTRICTEDaDISPID_NEWENUMaFUNC_DISPATCHaDISPID_VALUEavalueaspecialItemsa_newenumalowerabBuildHiddenaGetResultNameu# Result is of type awasPropertyu# The method %s is actually a property, but must be used as a method to correctly pass the argumentsanameaMakeFuncMethodTu_prop_map_get_ = {apropMapaentryu# Property '%s' is an object of type '%s'lTaMakeMapLineEntryaDISPATCH_PROPERTYGETaGetResultCLSIDStru"%s": %s,u# Method '%s' returns object of type '%s'lTu}Tu_prop_map_put_ = {uu"%s" : ((%s, LCID, %d, 0),(%s)),aDISPATCH_PROPERTYPUTaMakeDefaultArgsForPropertyPutu"%s": ((%s, LCID, %d, 0),%s),amethoda__call__apropertyudef __call__(self):
return self._ApplyTypes_(*%s)u# Default %s for this class is '%s'Tudef __str__(self, *args):Tureturn str(self.__call__(*args))Tudef __int__(self, *args):Tureturn int(self.__call__(*args))aDISPATCH_METHODaNoneaItemTudef __iter__(self):Tu"Return a Python iterator for this object"uob = self._oleobj_.InvokeTypes(%d,LCID,%d,(13, 10),())Tuexcept pythoncom.error:Turaise TypeError("This object does not support enumeration")ureturn win32com.client.util.Iterator(ob, %s)Tu#This class has Item property/method which allows indexed access with the object[key] syntax.Tu#Some objects will accept a string or other type of key in addition to integers.Tu#Note that many Office objects do not use zero-based indexing.Tudef __getitem__(self, key):ureturn self._get_good_object_(self._oleobj_.Invoke(*(%d, LCID, %d, 1, key)), "Item", %s)acounta__len__udef __len__(self):
return self._ApplyTypes_(*%s)u#This class has Count() %s - allow len(ob) to provide thisTu#This class has a __len__ - this is needed so 'if object:' always returns TRUE.Tudef __nonzero__(self):Tureturn TrueasourcesainterfacesacheckWriteCoClassBaseClassagenerate_typeaGEN_DEMAND_CHILDareferenced_itemsTuimport sysu__import__('%s.%s')abase_mod_nameu%s = sys.modules['%s.%s'].%su# This CoClass is known by the name '%s'uclass %s(CoClassBaseClass): # A CoClassu# uCLSID = %rTucoclass_sources = [aIMPLTYPEFLAG_FDEFAULTu%s,Tu]adefItemudefault_source = %sTucoclass_interfaces = [udefault_interface = %satlb_descuCalled when the process starts.Tuthis is deprecated and will go awayabHaveWrittenDispatchBaseClassabHaveWrittenCoClassBaseClassabHaveWrittenEventBaseClassatypelibasourceFilenameaprogressaGetTypeInfoCountaGetTypeInfoaGetTypeInfoTypeutoo many values to unpack (expected 4)ainfoaGetImplTypeFlagsaGetRefTypeOfImplTypeachild_infosaCoClassItemutoo many values to unpack (expected 6)aTKIND_INTERFACEaTYPEFLAG_FDISPATCHABLEaoleItemsacoclassadispItemaIMPLTYPEFLAG_FSOURCEavtableItemsaTYPEFLAG_FDUALarefTypeTumust be interface bynow!aVTableItemawTypeFlagsTuMust be a real interface at this pointTuThis code doesnt look at the hidden flag - I thought everyone set it true!?!?!aCollectOleItemInfosFromTypeaTKIND_ENUMaTKIND_MODULEaEnumerationItemaenumItemsa_Build_InterfaceaTKIND_RECORDaTKIND_UNIONaRecordItemarecordItemsaTKIND_ALIASaTKIND_COCLASSa_Build_CoClassa_Build_CoClassChildrenaLogWarninguUnknown TKIND found: %daget_temp_filenameawtacloseaosaunlinkaerrorafilenamearenameu%s.%d.tempagetpidaGEN_DEMAND_BASEaGEN_FULLado_generateaFinishedaGetLibAttraencodingu# -*- coding: %s -*-u# Created by makepy.py version %samakepy_versionTu# By python version 3.10.7 (tags/v3.10.7:6cc6b13, Sep  5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)]u# From type library '%s'asplitu# On %satimeactimeumakepy_version =Tupython_version = 0x30a07f0Tuimport win32com.client.CLSIDToClass, pythoncom, pywintypesTuimport win32com.client.utilTufrom pywintypes import IIDTufrom win32com.client import DispatchTu# The following 3 lines may need tweaking for the particular serverTu# Candidates are pythoncom.Missing, .Empty and .ArgNotFoundTudefaultNamedOptArg=pythoncom.EmptyTudefaultNamedNotOptArg=pythoncom.EmptyTudefaultUnnamedArg=pythoncom.EmptyuCLSID = uMajorVersion = uMinorVersion = uLibraryFlags = uLCID = aStartingaSetDescriptionTuBuilding definitions from type library...ado_gen_file_headeraBuildOleItemsFromTypeuGenerating...Tuclass constants:anum_writtenaWriteEnumerationItemsaTickTupassaWriteClassTuRecordMap = {aIID_NULLu###%s: %s, # Record disabled because it doesn't have a non-null GUIDu%s: %s,Tw}TuCLSIDToClassMap = {u'%s' : %s,TuCLSIDToPackageMap = {}Tuwin32com.client.CLSIDToClass.RegisterCLSIDsFromDict( CLSIDToClassMap )TuVTablesToPackageMap = {}TuVTablesToClassMap = {u'%s' : '%s',TuCLSIDToClassMap = {}TuCLSIDToPackageMap = {TuVTablesToClassMap = {}TuVTablesToPackageMap = {amapTuNamesToIIDMap = {Tuwin32com.client.constants.__dicts__.append(constants.__dict__)uwin32com.gen_py.:llnux%sx%sx%safounduCant find the '%s' interface in the CoClasses, or the interfacesagetTualready have a file?apathajoinadiru.pyaopen_writerado_gen_child_itemafinish_writeruGenerate a single child.  May force a few children to be built as we generate depsuwin32com.client.CLSIDToClass.RegisterCLSID( "%s", %s )Tufrom win32com.client import DispatchBaseClassTufrom win32com.client import CoClassBaseClassugenpy.py - The worker for makepy.  See makepy.py for more details

This code was moved simply to speed Python in normal circumstances.  As the makepy.py
is normally run from the command line, it reparses the code each time.  Now makepy
is nothing more than the command line handler and public interface.

The makepy command line etc handling is also getting large enough in its own right!
a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysawin32comTabuildumakepy.erroru0.5.01afulludemand(base)udemand(child)aVT_I2utypes.IntTypeaVT_I4aVT_R4utypes.FloatTypeaVT_R8aVT_BSTRutypes.StringTypeaVT_BOOLaVT_VARIANTutypes.TypeTypeaVT_I1aVT_UI1aVT_UI2aVT_UI4aVT_I8utypes.LongTypeaVT_UI8aVT_INTaVT_DATEupythoncom.PyTimeTypeaVT_UINTuwin32com.client.genpya__module__aWritableItema__qualname__a__cmp__uWritableItem.__cmp__a__lt__uWritableItem.__lt__a__repr__uWritableItem.__repr__a__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>laRECORDatypenameTnluRecordItem.__init__uRecordItem.WriteClassa__orig_bases__aWriteAliasesForItemaAliasItemaALIASuAliasItem.__init__uAliasItem.WriteAliasItemaENUMERATIONuEnumerationItem.__init__uEnumerationItem.WriteEnumerationItemsuVTableItem.WriteClassuVTableItem.WriteVTableMapTnuDispatchItem.__init__uDispatchItem.WriteClassuDispatchItem.WriteClassHeaderuDispatchItem.WriteEventSinkClassHeaderuDispatchItem.WriteCallbackClassBodyuDispatchItem.WriteClassBodyaCOCLASSuCoClassItem.__init__uCoClassItem.WriteClassaGeneratorProgressuGeneratorProgress.__init__uGeneratorProgress.StartinguCalled when the process is complete.uGeneratorProgress.FinisheduWe are entering a major step.  If maxticks, then this
        is how many ticks we expect to make until finished
        uGeneratorProgress.SetDescriptionuMinor progress step.  Can provide new description if necessaryuGeneratorProgress.TickuVerbose/Debugging output.aVerboseProgressuGeneratorProgress.VerboseProgressuIf a warning is generateduGeneratorProgress.LogWarningaLogBeginGenerateuGeneratorProgress.LogBeginGenerateaCloseuGeneratorProgress.CloseaGeneratorTlnuGenerator.__init__uGenerator.CollectOleItemInfosFromTypeuGenerator._Build_CoClassuGenerator._Build_CoClassChildrenuGenerator._Build_InterfaceuGenerator.BuildOleItemsFromTypeTambcsuGenerator.open_writeruGenerator.finish_writeruGenerator.get_temp_filenameTlagenerateuGenerator.generateuGenerator.do_gen_file_headeruGenerator.do_generateagenerate_childuGenerator.generate_childuGenerator.do_gen_child_itemuGenerator.checkWriteDispatchBaseClassuGenerator.checkWriteCoClassBaseClassuGenerator.checkWriteEventBaseClassuwin32com\client\genpy.pyu<module win32com.client.genpy>Ta__class__TaselfaoleItemsaenumItemsarecordItemsavtableItemsatype_info_tupleainfoainfotypeadocaattraclsidanewItemaoleItemavtableItemachild_infosTaselfTaselfaretwiainfoainfotypeadocaattrTaselfafilenameTaselfadescTaargsDescaretadescadefaultTaeventNameTadispidawFlagsaretTypeaargTypesauseraresultCLSIDTaselfadescamaxticksTaselfatlb_descTaselfaaliasDictastreamadepNameaaiatypeStrTaitemaaliasItemsastreamaaliasTaselfageneratorastreamanameaentryafdescamethNameTaselfageneratorTaselfageneratoradocastreamareferenced_itemsarefaflagaprogIdadefItemaitemakeyadefNameTaselfageneratorastreamanamesaspecialItemsaitemCountanameaentryadispidalkeyaretalineakeyaresultNameadetailsaresultDescaargDescamapEntryadefArgDescainvoketypeapropArgsatypenameaenumEntryainvkindaresultCLSIDTaselfageneratoradocastreamaprogIdT
aselfastreamanumaenumNameanamesanameaentryavdescavalauseTaobjastreamanameaentryafdescT
aselfageneratorastreamwvanamesadispidadescaarg_reprsaitem_numanameaargadefvalaarg3_reprTaselfatype_info_tupleainfoainfotypeadocaattrachild_infoswjaflagsarefTypearefAttranewItemTaselfacoclassacoclass_infoaoleItemsavtableItemsasourcesainterfacesainfoainfo_typearefTypeadocarefAttraflagsaclsidadispItemavtableItemTaselfatype_info_tupleainfoainfotypeadocaattraoleItemavtableItemarefhtypeTaselfaotheraretTaselfatypeInfoatypeAttradocabForUserTaselfatypeinfoaattradocTaselfatypeinfoaattradocabForUseraaiahrefaalinfoTaselfatypeinfoaattradocabForUseratypeFlagswjavdescanameTaselfatypeinfoaattradocasourcesainterfacesabForUserTaselfatypelibasourceFilenameaprogressObjectabBuildHiddenabUnicodeToStringTaselfaotherTaselfaoleitemamoduleDocadocDescTaselfalaamoduleDocadocDescaencodingTaselfamoduleDocastreamadocDescaoleItemsaenumItemsarecordItemsavtableItemsaitemsanum_writtenaoleitemarecordaitemamapanameaiidTaselfafilenamewfaworkedatemp_filenameTaselfafileais_for_demandT#aselfachildadiralaalcidaclsidamajoraminoraoleItemsavtableItemsainfosafoundatype_info_tupleainfoainfotypeadocaattracoClassItemachild_infosainfo_typearefTypearefAttraflagsaoleItemavtableItemaitemsakeyavalueaexistinganew_valaoleitemavtableitemaan_itemaout_nameaworkedTaselfafilenameaencodingatemp_filename.win32com.client.makepyawriteausageHelpasysaexitTlaselecttlbaSelectTlbaFLAG_HIDDENTaexcludeFlagsapythoncomaLoadRegTypeLibaclsidamajoraminoralcidacom_erroruWarning - could not load registered typelib '%s'
aGetTypeLibsForSpecutoo many values to unpack (expected 2)adescu<Could not load typelib %s>adllaGetDocumentationTllaprintu %s, lcid=%s, major=%s, minor=%sTu >>> # Use these commands in Python code to auto generate .py supportTu >>> from win32com.client import gencacheu >>> gencache.EnsureModule('%s', %s, %s, %s)averboseLevellTuGeneration complete..
w
aVerboseProgressuGenerating to %suWARNING: apywinawin32uiaSimpleProgressa__init__adialogaCloseaStartingupywin.dialogsTastatusastatusaThreadedStatusProgressDialogaSetTitleaSetTextaSetMaxTicksaTickaLoadTypeLibaTypelibSpecTnlppaFromTypelibaFindTlbsWithDescriptionaDispatcha_oleobj_aGetTypeInfoaGetContainingTypeLibaappenduCould not locate a type library matching '%s'aGetLibAttrllatypelibsaexc_infoutoo many values to unpack (expected 3)uUnable to load type library from '%s' - %s
TluGiven an argument on the command line (either a file name, library
    description, or ProgID of an object) return a list of actual typelibs
    to use.Tuthis is deprecated and will go awayuYou can only perform a demand-build when the output goes to the gen_py directoryutoo many values to unpack (expected 4)agenpyaGeneratoraprogressabBuildHiddenTabBuildHiddenafileagencacheaGetGeneratedFileNameaosapathajoinaGetGeneratePathabForDemandaunlinku.pyaerroru.pycu.pyoaisdiramkdiru__init__.pyaopen_writeraLogBeginGenerateagenerateafinish_writeraoutputNameaimportlibainvalidate_cachesaSetDescriptionTuImporting moduleaAddModuleToCacheatupleatypelibCLSIDagenerate_childachilduwin32com.gen_py.w.agetoptabForDemandDefaultaargv:lnnuvo:huiqdu-hu-ou-vu-qu-iaargsaShowInfoTnu-dastderrausageTuCan not use -d and -o together
adoitadirnameuamakedirsaversion_infoTllawtambcsacodecsaopenwwaGenerateFromTypeLibSpecwfahiddenSpecTaverboseLevelabForDemandabBuildHiddenacloseuGenerate a .py file from an OLE TypeLibrary file.


 This module is concerned only with the actual writing of
 a .py file.  It draws on the @build@ module, which builds
 the knowledge of a COM interface.

a__doc__a__file__a__spec__aoriginahas_locationa__cached__u
Usage:

  makepy.py [-i] [-v|q] [-h] [-u] [-o output_file] [-d] [typelib, ...]

  -i    -- Show information for the specified typelib.

  -v    -- Verbose output.

  -q    -- Quiet output.

  -h    -- Do not generate hidden methods.

  -u    -- Python 1.5 and earlier: Do NOT convert all Unicode objects to
           strings.

           Python 1.6 and later: Convert all Unicode objects to strings.

  -o    -- Create output in a specified output file.  If the path leading
           to the file does not exist, any missing directories will be
           created.
           NOTE: -o cannot be used with -d.  This will generate an error.

  -d    -- Generate the base code now and the class code on demand.
           Recommended for large type libraries.

  typelib -- A TLB, DLL, OCX or anything containing COM type information.
             If a typelib is not specified, a window containing a textbox
             will open from which you can select a registered type
             library.

Examples:

  makepy.py -d

    Presents a list of registered type libraries from which you can make
    a selection.

  makepy.py -d "Microsoft Excel 8.0 Object Library"

    Generate support for the type library with the specified description
    (in this case, the MS Excel object model).

uwin32com.clientTaDispatchagencacheagenpyaselecttlbumakepy.erroraGeneratorProgressa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uwin32com.client.makepya__module__uA simple progress class prints its output to stderra__qualname__uSimpleProgress.__init__uSimpleProgress.CloseaFinisheduSimpleProgress.FinisheduSimpleProgress.SetDescriptionuSimpleProgress.TickuSimpleProgress.VerboseProgressuSimpleProgress.LogBeginGenerateaLogWarninguSimpleProgress.LogWarninga__orig_bases__aGUIProgressuGUIProgress.__init__uGUIProgress.CloseuGUIProgress.StartinguGUIProgress.SetDescriptionuGUIProgress.TickTnnnaGenerateChildFromTypeLibSpecamainuwin32com\client\makepy.pyu<module win32com.client.makepy>TaselfTa__class__TachildatypelibInfoaverboseLevelaprogressInstanceabUnicodeToStringatypelibCLSIDalcidamajoraminoratlbatlaaspecatypelibsaprogressatypelibainfoadir_nameadir_path_nameagenTatypelibInfoafileaverboseLevelaprogressInstanceabUnicodeToStringabForDemandabBuildHiddenatypelibCLSIDalcidamajoraminoratlbaspecatypelibsatlaaguidaprogressabToGenDiratypelibainfoagenathis_nameafull_nameaoutputNameafileUseaworkedTaargatypelibsatlbaspecatlbsaobaindexaattrwtwvatbTaselfafilenameTaselfadescTaselfadescamaxticksTaspecatlbSpecatlbainfosadescTaselfatlb_descastatusTaselfadescaverboseLevelTaselfaverboseLevelTaselfaverboseLevelapywinawin32uiTagetoptahiddenSpecaoutputNameaverboseLeveladoitabForDemandaoptsaargswowvaargamsgarcapathwfacodecs.win32com.client.selecttlbkaclsidalcidamajoraminoradlladescaver_descaflagsluCant index me!ualowerapythoncomaLoadTypeLibaFromTypeliblaGetLibAttrllawin32apiaRegEnumKeyarootaindexaerroraRegQueryValuearetaappendaRegOpenKeyawin32conaHKEY_CLASSES_ROOTaTypelibaEnumKeysutoo many values to unpack (expected 2)akeyasplitTw.lTw0akey2aFLAGSaexcludeFlagsakey3u%s\win32u%s\win64aRegQueryValueExaREG_EXPAND_SZaExpandEnvironmentStringsaTypelibSpecaiidatlbdescu (aversionw)aresultsuReturn a list of TypelibSpec objects, one for each registered library.aEnumTlbsuFind all installed type libraries with the specified descriptionupywin.dialogs.listlasortadialogsalistaSelectFromListsuType LibraryuDisplay a list of all the type libraries, and select one.   Returns None if cancelleduUtilities for selecting and enumerating the Type Libraries installed on the system
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uwin32com.client.selecttlba__module__a__qualname__Tla__init__uTypelibSpec.__init__a__getitem__uTypelibSpec.__getitem__a__lt__uTypelibSpec.__lt__a__eq__uTypelibSpec.__eq__aResolveuTypelibSpec.ResolveTnuTypelibSpec.FromTypelibTaFLAG_RESTRICTEDlaFLAG_CONTROLaFLAG_HIDDENaFindTlbsWithDescriptionTuSelect LibrarylaSelectTlbuwin32com\client\selecttlb.pyu<module win32com.client.selecttlb>TarootaindexaretaitemavalTaexcludeFlagsakeyaiidsaresultsaiidacrapakey2aversionatlbdescamajor_minoramajoraminorakey3aflagsalcidakey4adllatypaspecTadescaretaitemsaitemTaselfatypelibadllNamealaTaselfatlbTatitleaexcludeFlagsapywinaitemswiarcTaselfaotherTaselfaitemTaselfaclsidalcidamajoraminoraflagsTaselfaotherameathem.win32com.client.utilUapythoncomaTypeIIDsaIID_IEnumVARIANTaQueryInterfaceaEnumVARIANTuWrap an object in a VARIANT enumerator.

    All VT_DISPATCHs returned by the enumerator are converted to wrapper objects
    (which may be either a class instance, or a dynamic.Dispatch type object).

    a_oleobj_laindexa_Enumerator__GetIndexaintuOnly integer indexes are supported for enumeratorslaResetaSkipaNextTla_make_retval_lulist index out of rangearealRetsaappendaselfaClonearesultCLSIDaEnumeratora__init__a_get_good_object_TaresultCLSIDa_iter_uGeneral client side utilities.

This module contains utility functions, used primarily by advanced COM
programmers, or other COM modules.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uwin32com.clientTaDispatcha_get_good_object_aDispatchaIID_IDispatchaPyIDispatchTypeTnaWrapEnumuwin32com.client.utila__module__uA class that provides indexed access into an Enumerator

    By wrapping a PyIEnum* object in this class, you can perform
    natural looping and indexing into the Enumerator.

    Looping is very efficient, but it should be noted that although random
    access is supported, the underlying object is still an enumerator, so
    this will force many reset-and-seek operations to find the requested index.

    a__qualname__uEnumerator.__init__a__getitem__uEnumerator.__getitem__a__call__uEnumerator.__call__a__GetIndexuEnumerator.__GetIndexuEnumerator.NextuEnumerator.ResetuEnumerator.CloneuEnumerator._make_retval_Ta__prepare__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uEnumVARIANT.__init__uEnumVARIANT._make_retval_a__orig_bases__aIteratoruIterator.__init__a__iter__uIterator.__iter__a__next__uIterator.__next__uwin32com\client\util.pyu<module win32com.client.util>TaselfTa__class__TaselfacountaretarealRetswrTaobaresultCLSIDTaselfaindexaresultTaselfaindexTaselfaenumTaselfaenumaresultCLSIDTaselfaresultu.win32com8uSOFTWARE\Python\PythonCore\%s\PythonPath\win32comasysawinverawin32apiaRegOpenKeyqllaerrora__path__aappendaRegQueryValueaExtensionsaGetFullPathNameu\..\win32comextakeyaBuildPatha__build_path__aGenPatha__gen_path__aClosea_frozena__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_win32comu\not_existinga__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aosapythoncomafrozenuaSetupEnvironmenta__PackageSupportBuildPath__uwin32com.gen_pyawin32comamodulesaabspathajoinagen_pyaGetTempPathu3.10atypesaModuleTypeTuwin32com.gen_pya__name__uwin32com\__init__.pyu<module win32com>TaHKEY_LOCAL_MACHINEaKEY_QUERY_VALUEakeyNameakeyafoundTapackage_path.win32conVll
aIMAGE_ORDINAL_FLAGlllllla__doc__a__file__a__spec__aoriginahas_locationa__cached__laWINVERlaWM_USERaPY_0UlaOFN_READONLYlaOFN_OVERWRITEPROMPTlaOFN_HIDEREADONLYaOFN_NOCHANGEDIRaOFN_SHOWHELPl aOFN_ENABLEHOOKl@aOFN_ENABLETEMPLATElaOFN_ENABLETEMPLATEHANDLElaOFN_NOVALIDATElaOFN_ALLOWMULTISELECTaOFN_EXTENSIONDIFFERENTlaOFN_PATHMUSTEXISTlaOFN_FILEMUSTEXISTl aOFN_CREATEPROMPTl@aOFN_SHAREAWARElaOFN_NOREADONLYRETURNlaOFN_NOTESTFILECREATElaOFN_NONETWORKBUTTONlaOFN_NOLONGNAMESlaOFN_EXPLORERlaOFN_NODEREFERENCELINKSl aOFN_LONGNAMESl@aOFN_ENABLEINCLUDENOTIFYlaOFN_ENABLESIZINGlaOFN_DONTADDTORECENTqaOFN_FORCESHOWHIDDENaOFN_EX_NOPLACESBARaOFN_SHAREFALLTHROUGHaOFN_SHARENOWARNaOFN_SHAREWARNaCDN_FIRSTaCDN_LASTaCDN_INITDONEaCDN_SELCHANGEaCDN_FOLDERCHANGEaCDN_SHAREVIOLATIONaCDN_HELPaCDN_FILEOKaCDN_TYPECHANGEaCDN_INCLUDEITEMaCDM_FIRSTaCDM_LASTaCDM_GETSPECaCDM_GETFILEPATHaCDM_GETFOLDERPATHaCDM_GETFOLDERIDLISTaCDM_SETCONTROLTEXTaCDM_HIDECONTROLaCDM_SETDEFEXTaCC_RGBINITaCC_FULLOPENaCC_PREVENTFULLOPENaCC_SHOWHELPaCC_ENABLEHOOKaCC_ENABLETEMPLATEaCC_ENABLETEMPLATEHANDLEaCC_SOLIDCOLORaCC_ANYCOLORaFR_DOWNaFR_WHOLEWORDaFR_MATCHCASEaFR_FINDNEXTaFR_REPLACEaFR_REPLACEALLaFR_DIALOGTERMaFR_SHOWHELPaFR_ENABLEHOOKaFR_ENABLETEMPLATEaFR_NOUPDOWNaFR_NOMATCHCASEaFR_NOWHOLEWORDaFR_ENABLETEMPLATEHANDLEaFR_HIDEUPDOWNaFR_HIDEMATCHCASEaFR_HIDEWHOLEWORDaCF_SCREENFONTSaCF_PRINTERFONTSaCF_BOTHaCF_SHOWHELPaCF_ENABLEHOOKaCF_ENABLETEMPLATEaCF_ENABLETEMPLATEHANDLEaCF_INITTOLOGFONTSTRUCTaCF_USESTYLEaCF_EFFECTSaCF_APPLYaCF_ANSIONLYaCF_SCRIPTSONLYaCF_NOVECTORFONTSaCF_NOOEMFONTSaCF_NOSIMULATIONSaCF_LIMITSIZEaCF_FIXEDPITCHONLYaCF_WYSIWYGaCF_FORCEFONTEXISTaCF_SCALABLEONLYaCF_TTONLYaCF_NOFACESELaCF_NOSTYLESELaCF_NOSIZESELaCF_SELECTSCRIPTaCF_NOSCRIPTSELaCF_NOVERTFONTSaSIMULATED_FONTTYPEaPRINTER_FONTTYPEaSCREEN_FONTTYPEaBOLD_FONTTYPEaITALIC_FONTTYPEaREGULAR_FONTTYPEaOPENTYPE_FONTTYPEaTYPE1_FONTTYPEaDSIG_FONTTYPEaWM_CHOOSEFONT_GETLOGFONTaWM_CHOOSEFONT_SETLOGFONTaWM_CHOOSEFONT_SETFLAGSacommdlg_LBSelChangedNotifyaLBSELCHSTRINGAacommdlg_ShareViolationaSHAREVISTRINGAacommdlg_FileNameOKaFILEOKSTRINGAacommdlg_ColorOKaCOLOROKSTRINGAacommdlg_SetRGBColoraSETRGBSTRINGAacommdlg_helpaHELPMSGSTRINGAacommdlg_FindReplaceaFINDMSGSTRINGAaLBSELCHSTRINGaSHAREVISTRINGaFILEOKSTRINGaCOLOROKSTRINGaSETRGBSTRINGaHELPMSGSTRINGaFINDMSGSTRINGlaCD_LBSELNOITEMSaCD_LBSELCHANGEaCD_LBSELSUBaCD_LBSELADDaPD_ALLPAGESaPD_SELECTIONaPD_PAGENUMSaPD_NOSELECTIONaPD_NOPAGENUMSaPD_COLLATEaPD_PRINTTOFILEaPD_PRINTSETUPaPD_NOWARNINGaPD_RETURNDCaPD_RETURNICaPD_RETURNDEFAULTaPD_SHOWHELPaPD_ENABLEPRINTHOOKaPD_ENABLESETUPHOOKaPD_ENABLEPRINTTEMPLATEaPD_ENABLESETUPTEMPLATEaPD_ENABLEPRINTTEMPLATEHANDLEaPD_ENABLESETUPTEMPLATEHANDLEaPD_USEDEVMODECOPIESaPD_DISABLEPRINTTOFILEaPD_HIDEPRINTTOFILEaPD_NONETWORKBUTTONaDN_DEFAULTPRNaWM_PSD_PAGESETUPDLGaWM_PSD_FULLPAGERECTaWM_PSD_MINMARGINRECTaWM_PSD_MARGINRECTaWM_PSD_GREEKTEXTRECTaWM_PSD_ENVSTAMPRECTaWM_PSD_YAFULLPAGERECTaPSD_DEFAULTMINMARGINSaPSD_INWININIINTLMEASUREaPSD_MINMARGINSaPSD_MARGINSaPSD_INTHOUSANDTHSOFINCHESaPSD_INHUNDREDTHSOFMILLIMETERSaPSD_DISABLEMARGINSaPSD_DISABLEPRINTERaPSD_NOWARNINGaPSD_DISABLEORIENTATIONaPSD_RETURNDEFAULTaPSD_DISABLEPAPERaPSD_SHOWHELPaPSD_ENABLEPAGESETUPHOOKaPSD_ENABLEPAGESETUPTEMPLATEaPSD_ENABLEPAGESETUPTEMPLATEHANDLEaPSD_ENABLEPAGEPAINTHOOKaPSD_DISABLEPAGEPAINTINGaPSD_NONETWORKBUTTONqaHKEY_CLASSES_ROOTqaHKEY_CURRENT_USERqaHKEY_LOCAL_MACHINEqaHKEY_USERSqaHKEY_PERFORMANCE_DATAqaHKEY_CURRENT_CONFIGqaHKEY_DYN_DATAqPaHKEY_PERFORMANCE_TEXTq`aHKEY_PERFORMANCE_NLSTEXTaHWND_BROADCASTaHWND_DESKTOPaHWND_TOPaHWND_BOTTOMaHWND_TOPMOSTlaHWND_NOTOPMOSTlaHWND_MESSAGEaSM_CXSCREENaSM_CYSCREENaSM_CXVSCROLLlaSM_CYHSCROLLaSM_CYCAPTIONlaSM_CXBORDERlaSM_CYBORDERlaSM_CXDLGFRAMEaSM_CYDLGFRAMElaSM_CYVTHUMBaSM_CXHTHUMBlaSM_CXICONlaSM_CYICONl
aSM_CXCURSORlaSM_CYCURSORlaSM_CYMENUaSM_CXFULLSCREENlaSM_CYFULLSCREENlaSM_CYKANJIWINDOWlaSM_MOUSEPRESENTlaSM_CYVSCROLLlaSM_CXHSCROLLlaSM_DEBUGlaSM_SWAPBUTTONlaSM_RESERVED1laSM_RESERVED2laSM_RESERVED3laSM_RESERVED4laSM_CXMINlaSM_CYMINlaSM_CXSIZElaSM_CYSIZEaSM_CXFRAMEl!aSM_CYFRAMEl"aSM_CXMINTRACKl#aSM_CYMINTRACKl$aSM_CXDOUBLECLKl%aSM_CYDOUBLECLKl&aSM_CXICONSPACINGl'aSM_CYICONSPACINGl(aSM_MENUDROPALIGNMENTl)aSM_PENWINDOWSl*aSM_DBCSENABLEDl+aSM_CMOUSEBUTTONSaSM_CXFIXEDFRAMEaSM_CYFIXEDFRAMEaSM_CXSIZEFRAMEaSM_CYSIZEFRAMEl,aSM_SECUREl-aSM_CXEDGEl.aSM_CYEDGEl/aSM_CXMINSPACINGl0aSM_CYMINSPACINGl1aSM_CXSMICONl2aSM_CYSMICONl3aSM_CYSMCAPTIONl4aSM_CXSMSIZEl5aSM_CYSMSIZEl6aSM_CXMENUSIZEl7aSM_CYMENUSIZEl8aSM_ARRANGEl9aSM_CXMINIMIZEDl:aSM_CYMINIMIZEDl;aSM_CXMAXTRACKl<aSM_CYMAXTRACKl=aSM_CXMAXIMIZEDl>aSM_CYMAXIMIZEDl?aSM_NETWORKlCaSM_CLEANBOOTlDaSM_CXDRAGlEaSM_CYDRAGlFaSM_SHOWSOUNDSlGaSM_CXMENUCHECKlHaSM_CYMENUCHECKlIaSM_SLOWMACHINElJaSM_MIDEASTENABLEDlKaSM_MOUSEWHEELPRESENTlLaSM_XVIRTUALSCREENlMaSM_YVIRTUALSCREENlNaSM_CXVIRTUALSCREENlOaSM_CYVIRTUALSCREENlPaSM_CMONITORSlQaSM_SAMEDISPLAYFORMATlSaSM_CMETRICSaMNC_IGNOREaMNC_CLOSEaMNC_EXECUTEaMNC_SELECTaMNS_NOCHECKq@aMNS_MODELESSq aMNS_DRAGDROPaMNS_AUTODISMISSlaMNS_NOTIFYBYPOSlaMNS_CHECKORBMPaMIM_MAXHEIGHTaMIM_BACKGROUNDaMIM_HELPIDaMIM_MENUDATAaMIM_STYLEaMIM_APPLYTOSUBMENUSaMND_CONTINUEaMND_ENDMENUaMNGOF_GAPaMNGO_NOINTERFACEaMNGO_NOERRORaMIIM_STATEaMIIM_IDaMIIM_SUBMENUaMIIM_CHECKMARKSaMIIM_TYPEaMIIM_DATAaMIIM_STRINGaMIIM_BITMAPaMIIM_FTYPEaHBMMENU_CALLBACKaHBMMENU_SYSTEMaHBMMENU_MBAR_RESTOREaHBMMENU_MBAR_MINIMIZEaHBMMENU_MBAR_CLOSEaHBMMENU_MBAR_CLOSE_DaHBMMENU_MBAR_MINIMIZE_DaHBMMENU_POPUP_CLOSEaHBMMENU_POPUP_RESTOREaHBMMENU_POPUP_MAXIMIZEaHBMMENU_POPUP_MINIMIZEaGMDI_USEDISABLEDaGMDI_GOINTOPOPUPSaTPM_LEFTBUTTONaTPM_RIGHTBUTTONaTPM_LEFTALIGNaTPM_CENTERALIGNaTPM_RIGHTALIGNaTPM_TOPALIGNaTPM_VCENTERALIGNaTPM_BOTTOMALIGNaTPM_HORIZONTALaTPM_VERTICALaTPM_NONOTIFYaTPM_RETURNCMDaTPM_RECURSElaDOF_EXECUTABLElaDOF_DOCUMENTlaDOF_DIRECTORYlaDOF_MULTIPLEaDOF_PROGMANaDOF_SHELLDATAqFILEaDO_DROPFILEqPRNTaDO_PRINTFILEaDT_TOPaDT_LEFTaDT_CENTERaDT_RIGHTaDT_VCENTERaDT_BOTTOMaDT_WORDBREAKaDT_SINGLELINEaDT_EXPANDTABSaDT_TABSTOPaDT_NOCLIPaDT_EXTERNALLEADINGaDT_CALCRECTaDT_NOPREFIXaDT_INTERNALaDT_EDITCONTROLaDT_PATH_ELLIPSISaDT_END_ELLIPSISaDT_MODIFYSTRINGaDT_RTLREADINGaDT_WORD_ELLIPSISaDST_COMPLEXaDST_TEXTaDST_PREFIXTEXTaDST_ICONaDST_BITMAPaDSS_NORMALaDSS_UNIONaDSS_DISABLEDaDSS_MONOaDSS_RIGHTaDCX_WINDOWaDCX_CACHEaDCX_NORESETATTRSaDCX_CLIPCHILDRENaDCX_CLIPSIBLINGSaDCX_PARENTCLIPaDCX_EXCLUDERGNaDCX_INTERSECTRGNaDCX_EXCLUDEUPDATEaDCX_INTERSECTUPDATEaDCX_LOCKWINDOWUPDATEaDCX_VALIDATEaCUDR_NORMALaCUDR_NOSNAPTOGRIDaCUDR_NORESOLVEPOSITIONSaCUDR_NOCLOSEGAPSaCUDR_NEGATIVECOORDSaCUDR_NOPRIMARYaRDW_INVALIDATEaRDW_INTERNALPAINTaRDW_ERASEaRDW_VALIDATEaRDW_NOINTERNALPAINTaRDW_NOERASEaRDW_NOCHILDRENaRDW_ALLCHILDRENaRDW_UPDATENOWaRDW_ERASENOWaRDW_FRAMEaRDW_NOFRAMEaSW_SCROLLCHILDRENaSW_INVALIDATEaSW_ERASEaSW_SMOOTHSCROLLaESB_ENABLE_BOTHaESB_DISABLE_BOTHaESB_DISABLE_LEFTaESB_DISABLE_RIGHTaESB_DISABLE_UPaESB_DISABLE_DOWNaESB_DISABLE_LTUPaESB_DISABLE_RTDNaHELPINFO_WINDOWaHELPINFO_MENUITEMaMB_OKaMB_OKCANCELaMB_ABORTRETRYIGNOREaMB_YESNOCANCELaMB_YESNOaMB_RETRYCANCELaMB_ICONHANDaMB_ICONQUESTIONaMB_ICONEXCLAMATIONaMB_ICONASTERISKaMB_ICONWARNINGaMB_ICONERRORaMB_ICONINFORMATIONaMB_ICONSTOPaMB_DEFBUTTON1aMB_DEFBUTTON2aMB_DEFBUTTON3laMB_DEFBUTTON4aMB_APPLMODALaMB_SYSTEMMODALaMB_TASKMODALaMB_HELPaMB_NOFOCUSaMB_SETFOREGROUNDaMB_DEFAULT_DESKTOP_ONLYaMB_TOPMOSTaMB_RIGHTaMB_RTLREADINGaMB_SERVICE_NOTIFICATIONaMB_TYPEMASKaMB_USERICONlaMB_ICONMASKlaMB_DEFMASKl0aMB_MODEMASKlaMB_MISCMASKaCWP_ALLaCWP_SKIPINVISIBLEaCWP_SKIPDISABLEDaCWP_SKIPTRANSPARENTaCTLCOLOR_MSGBOXaCTLCOLOR_EDITaCTLCOLOR_LISTBOXaCTLCOLOR_BTNaCTLCOLOR_DLGaCTLCOLOR_SCROLLBARaCTLCOLOR_STATICaCTLCOLOR_MAXaCOLOR_SCROLLBARaCOLOR_BACKGROUNDaCOLOR_ACTIVECAPTIONaCOLOR_INACTIVECAPTIONaCOLOR_MENUaCOLOR_WINDOWaCOLOR_WINDOWFRAMEaCOLOR_MENUTEXTaCOLOR_WINDOWTEXTaCOLOR_CAPTIONTEXTaCOLOR_ACTIVEBORDERaCOLOR_INACTIVEBORDERaCOLOR_APPWORKSPACEaCOLOR_HIGHLIGHTaCOLOR_HIGHLIGHTTEXTaCOLOR_BTNFACEaCOLOR_BTNSHADOWaCOLOR_GRAYTEXTaCOLOR_BTNTEXTaCOLOR_INACTIVECAPTIONTEXTaCOLOR_BTNHIGHLIGHTaCOLOR_3DDKSHADOWaCOLOR_3DLIGHTaCOLOR_INFOTEXTaCOLOR_INFOBKaCOLOR_HOTLIGHTaCOLOR_GRADIENTACTIVECAPTIONaCOLOR_GRADIENTINACTIVECAPTIONaCOLOR_DESKTOPaCOLOR_3DFACEaCOLOR_3DSHADOWaCOLOR_3DHIGHLIGHTaCOLOR_3DHILIGHTaCOLOR_BTNHILIGHTaGW_HWNDFIRSTaGW_HWNDLASTaGW_HWNDNEXTaGW_HWNDPREVaGW_OWNERaGW_CHILDaGW_ENABLEDPOPUPaGW_MAXaMF_INSERTaMF_CHANGEaMF_APPENDaMF_DELETEaMF_REMOVEaMF_BYCOMMANDaMF_BYPOSITIONaMF_SEPARATORaMF_ENABLEDaMF_GRAYEDaMF_DISABLEDaMF_UNCHECKEDaMF_CHECKEDaMF_USECHECKBITMAPSaMF_STRINGaMF_BITMAPaMF_OWNERDRAWaMF_POPUPaMF_MENUBARBREAKaMF_MENUBREAKaMF_UNHILITEaMF_HILITEaMF_DEFAULTaMF_SYSMENUaMF_HELPaMF_RIGHTJUSTIFYaMF_MOUSESELECTaMF_ENDaMFT_STRINGaMFT_BITMAPaMFT_MENUBARBREAKaMFT_MENUBREAKaMFT_OWNERDRAWaMFT_RADIOCHECKaMFT_SEPARATORaMFT_RIGHTORDERaMFT_RIGHTJUSTIFYaMFS_GRAYEDaMFS_DISABLEDaMFS_CHECKEDaMFS_HILITEaMFS_ENABLEDaMFS_UNCHECKEDaMFS_UNHILITEaMFS_DEFAULTlaMFS_MASKaMFS_HOTTRACKDRAWNaMFS_CACHEDBMPaMFS_BOTTOMGAPDROPaMFS_TOPGAPDROPqaMFS_GAPDROPlaSC_SIZElaSC_MOVEl aSC_MINIMIZEl0aSC_MAXIMIZEl@aSC_NEXTWINDOWlPaSC_PREVWINDOWl`aSC_CLOSElpaSC_VSCROLLlaSC_HSCROLLlaSC_MOUSEMENUlaSC_KEYMENUlaSC_ARRANGEl aSC_RESTOREl0aSC_TASKLISTl@aSC_SCREENSAVElPaSC_HOTKEYl`aSC_DEFAULTlpaSC_MONITORPOWERlaSC_CONTEXTHELPlaSC_SEPARATORaSC_ICONaSC_ZOOMlaIDC_ARROWlaIDC_IBEAMlaIDC_WAITlaIDC_CROSSlaIDC_UPARROWlaIDC_SIZElaIDC_ICONlaIDC_SIZENWSElaIDC_SIZENESWlaIDC_SIZEWElaIDC_SIZENSlaIDC_SIZEALLlaIDC_NOlaIDC_HANDlaIDC_APPSTARTINGlaIDC_HELPaIMAGE_BITMAPaIMAGE_ICONaIMAGE_CURSORaIMAGE_ENHMETAFILEaLR_DEFAULTCOLORaLR_MONOCHROMEaLR_COLORaLR_COPYRETURNORGaLR_COPYDELETEORGaLR_LOADFROMFILEaLR_LOADTRANSPARENTaLR_DEFAULTSIZEaLR_LOADREALSIZEaLR_LOADMAP3DCOLORSaLR_CREATEDIBSECTIONaLR_COPYFROMRESOURCEaLR_SHAREDaDI_MASKaDI_IMAGEaDI_NORMALaDI_COMPATaDI_DEFAULTSIZEaRES_ICONaRES_CURSORlaOBM_CLOSElaOBM_UPARROWlaOBM_DNARROWlaOBM_RGARROWlaOBM_LFARROWlaOBM_REDUCElaOBM_ZOOMlaOBM_RESTORElaOBM_REDUCEDlaOBM_ZOOMDlaOBM_RESTOREDlaOBM_UPARROWDlaOBM_DNARROWDlaOBM_RGARROWDlaOBM_LFARROWDlaOBM_MNARROWlaOBM_COMBOlaOBM_UPARROWIlaOBM_DNARROWIlaOBM_RGARROWIlaOBM_LFARROWIlaOBM_OLD_CLOSElaOBM_SIZElaOBM_OLD_UPARROWlaOBM_OLD_DNARROWlaOBM_OLD_RGARROWlaOBM_OLD_LFARROWlaOBM_BTSIZElaOBM_CHECKlaOBM_CHECKBOXESlaOBM_BTNCORNERSlaOBM_OLD_REDUCElaOBM_OLD_ZOOMlaOBM_OLD_RESTOREaOCR_NORMALaOCR_IBEAMaOCR_WAITaOCR_CROSSaOCR_UPaOCR_SIZEaOCR_ICONaOCR_SIZENWSEaOCR_SIZENESWaOCR_SIZEWEaOCR_SIZENSaOCR_SIZEALLlaOCR_ICOCURaOCR_NOaOCR_HANDaOCR_APPSTARTINGaOIC_SAMPLEaOIC_HANDaOIC_QUESaOIC_BANGaOIC_NOTElaOIC_WINLOGOaOIC_WARNINGaOIC_ERRORaOIC_INFORMATIONaORD_LANGDRIVERaIDI_APPLICATIONaIDI_HANDaIDI_QUESTIONaIDI_EXCLAMATIONaIDI_ASTERISKaIDI_WINLOGOaIDI_WARNINGaIDI_ERRORaIDI_INFORMATIONaIDOKaIDCANCELaIDABORTaIDRETRYaIDIGNOREaIDYESaIDNOaIDCLOSEaIDHELPaES_LEFTaES_CENTERaES_RIGHTaES_MULTILINEaES_UPPERCASEaES_LOWERCASEaES_PASSWORDaES_AUTOVSCROLLaES_AUTOHSCROLLaES_NOHIDESELaES_OEMCONVERTaES_READONLYaES_WANTRETURNaES_NUMBERaEN_SETFOCUSaEN_KILLFOCUSaEN_CHANGEaEN_UPDATEaEN_ERRSPACElaEN_MAXTEXTlaEN_HSCROLLlaEN_VSCROLLaEC_LEFTMARGINaEC_RIGHTMARGINaEC_USEFONTINFOaEMSIS_COMPOSITIONSTRINGaEIMES_GETCOMPSTRATONCEaEIMES_CANCELCOMPSTRINFOCUSaEIMES_COMPLETECOMPSTRKILLFOCUSlaEM_GETSELlaEM_SETSELlaEM_GETRECTlaEM_SETRECTlaEM_SETRECTNPlaEM_SCROLLlaEM_LINESCROLLlaEM_SCROLLCARETlaEM_GETMODIFYlaEM_SETMODIFYlaEM_GETLINECOUNTlaEM_LINEINDEXlaEM_SETHANDLElaEM_GETHANDLElaEM_GETTHUMBlaEM_LINELENGTHlaEM_REPLACESELlaEM_GETLINElaEM_LIMITTEXTlaEM_CANUNDOlaEM_UNDOlaEM_FMTLINESlaEM_LINEFROMCHARlaEM_SETTABSTOPSlaEM_SETPASSWORDCHARlaEM_EMPTYUNDOBUFFERlaEM_GETFIRSTVISIBLELINElaEM_SETREADONLYlaEM_SETWORDBREAKPROClaEM_GETWORDBREAKPROClaEM_GETPASSWORDCHARlaEM_SETMARGINSlaEM_GETMARGINSaEM_SETLIMITTEXTlaEM_GETLIMITTEXTlaEM_POSFROMCHARlaEM_CHARFROMPOSlaEM_SETIMESTATUSlaEM_GETIMESTATUSaWB_LEFTaWB_RIGHTaWB_ISDELIMITERaBS_PUSHBUTTONaBS_DEFPUSHBUTTONaBS_CHECKBOXaBS_AUTOCHECKBOXaBS_RADIOBUTTONaBS_3STATEaBS_AUTO3STATEaBS_GROUPBOXaBS_USERBUTTONaBS_AUTORADIOBUTTONaBS_OWNERDRAWaBS_LEFTTEXTaBS_TEXTaBS_ICONaBS_BITMAPaBS_LEFTaBS_RIGHTaBS_CENTERaBS_TOPaBS_BOTTOMlaBS_VCENTERaBS_PUSHLIKEaBS_MULTILINEaBS_NOTIFYaBS_FLATaBS_RIGHTBUTTONaBN_CLICKEDaBN_PAINTaBN_HILITEaBN_UNHILITEaBN_DISABLEaBN_DOUBLECLICKEDaBN_PUSHEDaBN_UNPUSHEDaBN_DBLCLKaBN_SETFOCUSaBN_KILLFOCUSaBM_GETCHECKlaBM_SETCHECKlaBM_GETSTATElaBM_SETSTATElaBM_SETSTYLElaBM_CLICKlaBM_GETIMAGElaBM_SETIMAGEaBST_UNCHECKEDaBST_CHECKEDaBST_INDETERMINATEaBST_PUSHEDaBST_FOCUSaSS_LEFTaSS_CENTERaSS_RIGHTaSS_ICONaSS_BLACKRECTaSS_GRAYRECTaSS_WHITERECTaSS_BLACKFRAMEaSS_GRAYFRAMEaSS_WHITEFRAMEaSS_USERITEMaSS_SIMPLEaSS_LEFTNOWORDWRAPaSS_BITMAPaSS_OWNERDRAWaSS_ENHMETAFILEaSS_ETCHEDHORZaSS_ETCHEDVERTaSS_ETCHEDFRAMEaSS_TYPEMASKaSS_NOPREFIXaSS_NOTIFYaSS_CENTERIMAGEaSS_RIGHTJUSTaSS_REALSIZEIMAGEaSS_SUNKENaSS_ENDELLIPSISaSS_PATHELLIPSISaSS_WORDELLIPSISaSS_ELLIPSISMASKlpaSTM_SETICONlqaSTM_GETICONlraSTM_SETIMAGElsaSTM_GETIMAGEaSTN_CLICKEDaSTN_DBLCLKaSTN_ENABLEaSTN_DISABLEltaSTM_MSGMAXaDWL_MSGRESULTaDWL_DLGPROCaDWL_USERaDDL_READWRITEaDDL_READONLYaDDL_HIDDENaDDL_SYSTEMaDDL_DIRECTORYaDDL_ARCHIVEaDDL_POSTMSGSaDDL_DRIVESaDDL_EXCLUSIVEaRT_CURSORaRT_BITMAPaRT_ICONaRT_MENUaRT_DIALOGaRT_STRINGaRT_FONTDIRaRT_FONTaRT_ACCELERATORaRT_RCDATAaRT_MESSAGETABLEaDIFFERENCEaRT_GROUP_CURSORaRT_GROUP_ICONaRT_VERSIONaRT_DLGINCLUDEaRT_PLUGPLAYaRT_VXDaRT_ANICURSORaRT_ANIICONaRT_HTMLaSB_HORZaSB_VERTaSB_CTLaSB_BOTHaSB_LINEUPaSB_LINELEFTaSB_LINEDOWNaSB_LINERIGHTaSB_PAGEUPaSB_PAGELEFTaSB_PAGEDOWNaSB_PAGERIGHTaSB_THUMBPOSITIONaSB_THUMBTRACKaSB_TOPaSB_LEFTaSB_BOTTOMaSB_RIGHTaSB_ENDSCROLLaSW_HIDEaSW_SHOWNORMALaSW_NORMALaSW_SHOWMINIMIZEDaSW_SHOWMAXIMIZEDaSW_MAXIMIZEaSW_SHOWNOACTIVATEaSW_SHOWaSW_MINIMIZEaSW_SHOWMINNOACTIVEaSW_SHOWNAaSW_RESTOREaSW_SHOWDEFAULTaSW_FORCEMINIMIZEaSW_MAXaHIDE_WINDOWaSHOW_OPENWINDOWaSHOW_ICONWINDOWaSHOW_FULLSCREENaSHOW_OPENNOACTIVATEaSW_PARENTCLOSINGaSW_OTHERZOOMaSW_PARENTOPENINGaSW_OTHERUNZOOMaAW_HOR_POSITIVEaAW_HOR_NEGATIVEaAW_VER_POSITIVEaAW_VER_NEGATIVEaAW_CENTERaAW_HIDEaAW_ACTIVATEaAW_SLIDEaAW_BLENDaKF_EXTENDEDaKF_DLGMODEaKF_MENUMODEaKF_ALTDOWNaKF_REPEATaKF_UPaVK_LBUTTONaVK_RBUTTONaVK_CANCELaVK_MBUTTONaVK_BACKaVK_TABaVK_CLEARaVK_RETURNaVK_SHIFTaVK_CONTROLaVK_MENUaVK_PAUSEaVK_CAPITALaVK_KANAaVK_HANGEULaVK_HANGULaVK_JUNJAaVK_FINALaVK_HANJAaVK_KANJIaVK_ESCAPEaVK_CONVERTaVK_NONCONVERTaVK_ACCEPTaVK_MODECHANGEaVK_SPACEaVK_PRIORaVK_NEXTaVK_ENDaVK_HOMEaVK_LEFTaVK_UPaVK_RIGHTaVK_DOWNaVK_SELECTaVK_PRINTaVK_EXECUTEaVK_SNAPSHOTaVK_INSERTaVK_DELETEaVK_HELPl[aVK_LWINl\aVK_RWINl]aVK_APPSl`aVK_NUMPAD0laaVK_NUMPAD1lbaVK_NUMPAD2lcaVK_NUMPAD3ldaVK_NUMPAD4leaVK_NUMPAD5lfaVK_NUMPAD6lgaVK_NUMPAD7lhaVK_NUMPAD8liaVK_NUMPAD9ljaVK_MULTIPLYlkaVK_ADDllaVK_SEPARATORlmaVK_SUBTRACTlnaVK_DECIMALloaVK_DIVIDElpaVK_F1lqaVK_F2lraVK_F3lsaVK_F4ltaVK_F5luaVK_F6lvaVK_F7lwaVK_F8lxaVK_F9lyaVK_F10lzaVK_F11l{aVK_F12l|aVK_F13l}aVK_F14l~aVK_F15laVK_F16aVK_F17laVK_F18laVK_F19laVK_F20laVK_F21laVK_F22laVK_F23laVK_F24laVK_NUMLOCKlaVK_SCROLLlaVK_LSHIFTlaVK_RSHIFTlaVK_LCONTROLlaVK_RCONTROLlaVK_LMENUlaVK_RMENUlaVK_PROCESSKEYaVK_ATTNaVK_CRSELlaVK_EXSELlaVK_EREOFlaVK_PLAYlaVK_ZOOMlaVK_NONAMElaVK_PA1laVK_OEM_CLEARaMOUSEEVENTF_XDOWNaMOUSEEVENTF_XUPaMOUSEEVENTF_WHEELaVK_XBUTTON1aVK_XBUTTON2laVK_VOLUME_MUTElaVK_VOLUME_DOWNlaVK_VOLUME_UPaVK_MEDIA_NEXT_TRACKaVK_MEDIA_PREV_TRACKaVK_MEDIA_PLAY_PAUSElaVK_BROWSER_BACKlaVK_BROWSER_FORWARDaWH_MINaWH_MSGFILTERaWH_JOURNALRECORDaWH_JOURNALPLAYBACKaWH_KEYBOARDaWH_GETMESSAGEaWH_CALLWNDPROCaWH_CBTaWH_SYSMSGFILTERaWH_MOUSEaWH_HARDWAREaWH_DEBUGaWH_SHELLaWH_FOREGROUNDIDLEaWH_CALLWNDPROCRETaWH_KEYBOARD_LLaWH_MOUSE_LLaWH_MAXaWH_MINHOOKaWH_MAXHOOKaHC_ACTIONaHC_GETNEXTaHC_SKIPaHC_NOREMOVEaHC_NOREMaHC_SYSMODALONaHC_SYSMODALOFFaHCBT_MOVESIZEaHCBT_MINMAXaHCBT_QSaHCBT_CREATEWNDaHCBT_DESTROYWNDaHCBT_ACTIVATEaHCBT_CLICKSKIPPEDaHCBT_KEYSKIPPEDaHCBT_SYSCOMMANDaHCBT_SETFOCUSaMSGF_DIALOGBOXaMSGF_MESSAGEBOXaMSGF_MENUaMSGF_SCROLLBARaMSGF_NEXTWINDOWaMSGF_MAXaMSGF_USERaHSHELL_WINDOWCREATEDaHSHELL_WINDOWDESTROYEDaHSHELL_ACTIVATESHELLWINDOWaHSHELL_WINDOWACTIVATEDaHSHELL_GETMINRECTaHSHELL_REDRAWaHSHELL_TASKMANaHSHELL_LANGUAGEaHSHELL_ACCESSIBILITYSTATEaACCESS_STICKYKEYSaACCESS_FILTERKEYSaACCESS_MOUSEKEYSaLLKHF_EXTENDEDaLLKHF_INJECTEDaLLKHF_ALTDOWNaLLKHF_UPaLLKHF_LOWER_IL_INJECTEDaLLMHF_INJECTEDaLLMHF_LOWER_IL_INJECTEDaHKL_PREVaHKL_NEXTaKLF_ACTIVATEaKLF_SUBSTITUTE_OKaKLF_UNLOADPREVIOUSaKLF_REORDERaKLF_REPLACELANGaKLF_NOTELLSHELLaKLF_SETFORPROCESSaKL_NAMELENGTHaDESKTOP_READOBJECTSaDESKTOP_CREATEWINDOWaDESKTOP_CREATEMENUaDESKTOP_HOOKCONTROLaDESKTOP_JOURNALRECORDaDESKTOP_JOURNALPLAYBACKaDESKTOP_ENUMERATEaDESKTOP_WRITEOBJECTSaDESKTOP_SWITCHDESKTOPaDF_ALLOWOTHERACCOUNTHOOKaWINSTA_ENUMDESKTOPSaWINSTA_READATTRIBUTESaWINSTA_ACCESSCLIPBOARDaWINSTA_CREATEDESKTOPaWINSTA_WRITEATTRIBUTESaWINSTA_ACCESSGLOBALATOMSaWINSTA_EXITWINDOWSaWINSTA_ENUMERATEaWINSTA_READSCREENaWSF_VISIBLEaUOI_FLAGSaUOI_NAMEaUOI_TYPEaUOI_USER_SIDlaGWL_WNDPROClaGWL_HINSTANCElaGWL_HWNDPARENTlaGWL_STYLElaGWL_EXSTYLElaGWL_USERDATAlaGWL_IDaGCL_MENUNAMElaGCL_HBRBACKGROUNDaGCL_HCURSORlaGCL_HICONaGCL_HMODULElaGCL_CBWNDEXTRAaGCL_CBCLSEXTRAlaGCL_WNDPROClaGCL_STYLElaGCW_ATOMlaGCL_HICONSMaWM_NULLaWM_CREATEaWM_DESTROYaWM_MOVEaWM_SIZEaWM_ACTIVATEaWA_INACTIVEaWA_ACTIVEaWA_CLICKACTIVEaWM_SETFOCUSaWM_KILLFOCUSaWM_ENABLEaWM_SETREDRAWaWM_SETTEXTaWM_GETTEXTaWM_GETTEXTLENGTHaWM_PAINTaWM_CLOSEaWM_QUERYENDSESSIONaWM_QUITaWM_QUERYOPENaWM_ERASEBKGNDaWM_SYSCOLORCHANGEaWM_ENDSESSIONaWM_SHOWWINDOWaWM_WININICHANGEaWM_SETTINGCHANGEaWM_DEVMODECHANGEaWM_ACTIVATEAPPaWM_FONTCHANGEaWM_TIMECHANGEaWM_CANCELMODEaWM_SETCURSORaWM_MOUSEACTIVATEaWM_CHILDACTIVATEaWM_QUEUESYNCaWM_GETMINMAXINFOaWM_PAINTICONaWM_ICONERASEBKGNDaWM_NEXTDLGCTLaWM_SPOOLERSTATUSaWM_DRAWITEMaWM_MEASUREITEMaWM_DELETEITEMaWM_VKEYTOITEMaWM_CHARTOITEMaWM_SETFONTaWM_GETFONTaWM_SETHOTKEYaWM_GETHOTKEYaWM_QUERYDRAGICONaWM_COMPAREITEMaWM_GETOBJECTlAaWM_COMPACTINGaWM_COMMNOTIFYaWM_WINDOWPOSCHANGINGaWM_WINDOWPOSCHANGEDaWM_POWERaPWR_OKaPWR_FAILaPWR_SUSPENDREQUESTaPWR_SUSPENDRESUMEaPWR_CRITICALRESUMEaWM_COPYDATAaWM_CANCELJOURNALaWM_NOTIFYaWM_INPUTLANGCHANGEREQUESTaWM_INPUTLANGCHANGElRaWM_TCARDaWM_HELPlTaWM_USERCHANGEDlUaWM_NOTIFYFORMATaNFR_ANSIaNFR_UNICODEaNF_QUERYaNF_REQUERYaWM_CONTEXTMENUaWM_STYLECHANGINGaWM_STYLECHANGEDaWM_DISPLAYCHANGEaWM_GETICONaWM_SETICONaWM_NCCREATEaWM_NCDESTROYaWM_NCCALCSIZEaWM_NCHITTESTaWM_NCPAINTaWM_NCACTIVATEaWM_GETDLGCODElaWM_SYNCPAINTaWM_NCMOUSEMOVEaWM_NCLBUTTONDOWNaWM_NCLBUTTONUPaWM_NCLBUTTONDBLCLKaWM_NCRBUTTONDOWNaWM_NCRBUTTONUPaWM_NCRBUTTONDBLCLKaWM_NCMBUTTONDOWNlaWM_NCMBUTTONUPlaWM_NCMBUTTONDBLCLKaWM_KEYFIRSTaWM_KEYDOWNlaWM_KEYUPlaWM_CHARlaWM_DEADCHARlaWM_SYSKEYDOWNlaWM_SYSKEYUPlaWM_SYSCHARlaWM_SYSDEADCHARlaWM_KEYLASTl
aWM_IME_STARTCOMPOSITIONlaWM_IME_ENDCOMPOSITIONlaWM_IME_COMPOSITIONaWM_IME_KEYLASTlaWM_INITDIALOGlaWM_COMMANDlaWM_SYSCOMMANDlaWM_TIMERlaWM_HSCROLLlaWM_VSCROLLlaWM_INITMENUlaWM_INITMENUPOPUPlaWM_MENUSELECTl aWM_MENUCHARl!aWM_ENTERIDLEl"aWM_MENURBUTTONUPl#aWM_MENUDRAGl$aWM_MENUGETOBJECTl%aWM_UNINITMENUPOPUPl&aWM_MENUCOMMANDl2aWM_CTLCOLORMSGBOXl3aWM_CTLCOLOREDITl4aWM_CTLCOLORLISTBOXl5aWM_CTLCOLORBTNl6aWM_CTLCOLORDLGl7aWM_CTLCOLORSCROLLBARl8aWM_CTLCOLORSTATICaWM_MOUSEFIRSTaWM_MOUSEMOVElaWM_LBUTTONDOWNlaWM_LBUTTONUPlaWM_LBUTTONDBLCLKlaWM_RBUTTONDOWNlaWM_RBUTTONUPlaWM_RBUTTONDBLCLKlaWM_MBUTTONDOWNlaWM_MBUTTONUPlaWM_MBUTTONDBLCLKl
aWM_MOUSEWHEELaWM_MOUSELASTaWHEEL_DELTAaWHEEL_PAGESCROLLlaWM_PARENTNOTIFYaMENULOOP_WINDOWaMENULOOP_POPUPlaWM_ENTERMENULOOPlaWM_EXITMENULOOPlaWM_NEXTMENUlaWM_SIZINGlaWM_CAPTURECHANGEDlaWM_MOVINGlaWM_POWERBROADCASTaPBT_APMQUERYSUSPENDaPBT_APMQUERYSTANDBYaPBT_APMQUERYSUSPENDFAILEDaPBT_APMQUERYSTANDBYFAILEDaPBT_APMSUSPENDaPBT_APMSTANDBYaPBT_APMRESUMECRITICALaPBT_APMRESUMESUSPENDaPBT_APMRESUMESTANDBYaPBTF_APMRESUMEFROMFAILUREaPBT_APMBATTERYLOWaPBT_APMPOWERSTATUSCHANGEaPBT_APMOEMEVENTaPBT_APMRESUMEAUTOMATIClaWM_DEVICECHANGEl aWM_MDICREATEl!aWM_MDIDESTROYl"aWM_MDIACTIVATEl#aWM_MDIRESTOREl$aWM_MDINEXTl%aWM_MDIMAXIMIZEl&aWM_MDITILEl'aWM_MDICASCADEl(aWM_MDIICONARRANGEl)aWM_MDIGETACTIVEl0aWM_MDISETMENUl1aWM_ENTERSIZEMOVEl2aWM_EXITSIZEMOVEl3aWM_DROPFILESl4aWM_MDIREFRESHMENUlaWM_IME_SETCONTEXTlaWM_IME_NOTIFYlaWM_IME_CONTROLlaWM_IME_COMPOSITIONFULLlaWM_IME_SELECTlaWM_IME_CHARlaWM_IME_REQUESTlaWM_IME_KEYDOWNlaWM_IME_KEYUPlaWM_MOUSEHOVERlaWM_MOUSELEAVEaWM_CUTlaWM_COPYlaWM_PASTElaWM_CLEARlaWM_UNDOlaWM_RENDERFORMATlaWM_RENDERALLFORMATSlaWM_DESTROYCLIPBOARDlaWM_DRAWCLIPBOARDlaWM_PAINTCLIPBOARDl
aWM_VSCROLLCLIPBOARDlaWM_SIZECLIPBOARDlaWM_ASKCBFORMATNAMEl
aWM_CHANGECBCHAINlaWM_HSCROLLCLIPBOARDlaWM_QUERYNEWPALETTElaWM_PALETTEISCHANGINGlaWM_PALETTECHANGEDlaWM_HOTKEYlaWM_PRINTlaWM_PRINTCLIENTlXaWM_HANDHELDFIRSTl_aWM_HANDHELDLASTl`aWM_AFXFIRSTlaWM_AFXLASTlaWM_PENWINFIRSTlaWM_PENWINLASTaWM_APPaWMSZ_LEFTaWMSZ_RIGHTaWMSZ_TOPaWMSZ_TOPLEFTaWMSZ_TOPRIGHTaWMSZ_BOTTOMaWMSZ_BOTTOMLEFTaWMSZ_BOTTOMRIGHTaHTERRORaHTTRANSPARENTaHTNOWHEREaHTCLIENTaHTCAPTIONaHTSYSMENUaHTGROWBOXaHTSIZEaHTMENUaHTHSCROLLaHTVSCROLLaHTMINBUTTONaHTMAXBUTTONaHTLEFTaHTRIGHTaHTTOPaHTTOPLEFTaHTTOPRIGHTaHTBOTTOMaHTBOTTOMLEFTaHTBOTTOMRIGHTaHTBORDERaHTREDUCEaHTZOOMaHTSIZEFIRSTaHTSIZELASTaHTOBJECTaHTCLOSEaHTHELPaSMTO_NORMALaSMTO_BLOCKaSMTO_ABORTIFHUNGaSMTO_NOTIMEOUTIFNOTHUNGaMA_ACTIVATEaMA_ACTIVATEANDEATaMA_NOACTIVATEaMA_NOACTIVATEANDEATaICON_SMALLaICON_BIGaSIZE_RESTOREDaSIZE_MINIMIZEDaSIZE_MAXIMIZEDaSIZE_MAXSHOWaSIZE_MAXHIDEaSIZENORMALaSIZEICONICaSIZEFULLSCREENaSIZEZOOMSHOWaSIZEZOOMHIDEaWVR_ALIGNTOPaWVR_ALIGNLEFTaWVR_ALIGNBOTTOMaWVR_ALIGNRIGHTaWVR_HREDRAWaWVR_VREDRAWaWVR_REDRAWaWVR_VALIDRECTSaMK_LBUTTONaMK_RBUTTONaMK_SHIFTaMK_CONTROLaMK_MBUTTONaTME_HOVERaTME_LEAVEaTME_QUERYaTME_CANCELaHOVER_DEFAULTaWS_OVERLAPPEDaWS_POPUPaWS_CHILDaWS_MINIMIZEaWS_VISIBLEaWS_DISABLEDaWS_CLIPSIBLINGSaWS_CLIPCHILDRENaWS_MAXIMIZElaWS_CAPTIONaWS_BORDERaWS_DLGFRAMEaWS_VSCROLLaWS_HSCROLLaWS_SYSMENUaWS_THICKFRAMEaWS_GROUPaWS_TABSTOPaWS_MINIMIZEBOXaWS_MAXIMIZEBOXaWS_TILEDaWS_ICONICaWS_SIZEBOXaWS_OVERLAPPEDWINDOWaWS_POPUPWINDOWaWS_CHILDWINDOWaWS_TILEDWINDOWaWS_EX_DLGMODALFRAMEaWS_EX_NOPARENTNOTIFYaWS_EX_TOPMOSTaWS_EX_ACCEPTFILESaWS_EX_TRANSPARENTaWS_EX_MDICHILDaWS_EX_TOOLWINDOWaWS_EX_WINDOWEDGEaWS_EX_CLIENTEDGEaWS_EX_CONTEXTHELPaWS_EX_RIGHTaWS_EX_LEFTaWS_EX_RTLREADINGaWS_EX_LTRREADINGaWS_EX_LEFTSCROLLBARaWS_EX_RIGHTSCROLLBARaWS_EX_CONTROLPARENTaWS_EX_STATICEDGEaWS_EX_APPWINDOWaWS_EX_OVERLAPPEDWINDOWaWS_EX_PALETTEWINDOWaWS_EX_LAYEREDaWS_EX_NOINHERITLAYOUTaWS_EX_LAYOUTRTLaWS_EX_COMPOSITEDaWS_EX_NOACTIVATEaCS_VREDRAWaCS_HREDRAWaCS_DBLCLKSaCS_OWNDCaCS_CLASSDCaCS_PARENTDCaCS_NOCLOSEaCS_SAVEBITSaCS_BYTEALIGNCLIENTaCS_BYTEALIGNWINDOWaCS_GLOBALCLASSaCS_IMEaPRF_CHECKVISIBLEaPRF_NONCLIENTaPRF_CLIENTaPRF_ERASEBKGNDaPRF_CHILDRENaPRF_OWNEDaBDR_RAISEDOUTERaBDR_SUNKENOUTERaBDR_RAISEDINNERaBDR_SUNKENINNERaBDR_OUTERaBDR_INNERaEDGE_RAISEDaEDGE_SUNKENaEDGE_ETCHEDaEDGE_BUMPaISMEX_NOSENDaISMEX_SENDaISMEX_NOTIFYaISMEX_CALLBACKaISMEX_REPLIEDaCW_USEDEFAULTaFLASHW_STOPaFLASHW_CAPTIONaFLASHW_TRAYaFLASHW_ALLaFLASHW_TIMERaFLASHW_TIMERNOFGaDS_ABSALIGNaDS_SYSMODALaDS_LOCALEDITaDS_SETFONTaDS_MODALFRAMEaDS_NOIDLEMSGaDS_SETFOREGROUNDaDS_3DLOOKaDS_FIXEDSYSaDS_NOFAILCREATEaDS_CONTROLaDS_CENTERaDS_CENTERMOUSEaDS_CONTEXTHELPaDM_GETDEFIDaDM_SETDEFIDaDM_REPOSITIONlKSaDC_HASDEFIDaDLGC_WANTARROWSaDLGC_WANTTABaDLGC_WANTALLKEYSaDLGC_WANTMESSAGEaDLGC_HASSETSELaDLGC_DEFPUSHBUTTONaDLGC_UNDEFPUSHBUTTONaDLGC_RADIOBUTTONaDLGC_WANTCHARSaDLGC_STATICaDLGC_BUTTONaLB_CTLCODEaLB_OKAYaLB_ERRaLB_ERRSPACEaLBN_ERRSPACEaLBN_SELCHANGEaLBN_DBLCLKaLBN_SELCANCELaLBN_SETFOCUSaLBN_KILLFOCUSlaLB_ADDSTRINGlaLB_INSERTSTRINGlaLB_DELETESTRINGlaLB_SELITEMRANGEEXlaLB_RESETCONTENTlaLB_SETSELlaLB_SETCURSELlaLB_GETSELlaLB_GETCURSELlaLB_GETTEXTlaLB_GETTEXTLENlaLB_GETCOUNTlaLB_SELECTSTRINGlaLB_DIRlaLB_GETTOPINDEXlaLB_FINDSTRINGlaLB_GETSELCOUNTlaLB_GETSELITEMSlaLB_SETTABSTOPSlaLB_GETHORIZONTALEXTENTlaLB_SETHORIZONTALEXTENTlaLB_SETCOLUMNWIDTHlaLB_ADDFILElaLB_SETTOPINDEXlaLB_GETITEMRECTlaLB_GETITEMDATAlaLB_SETITEMDATAlaLB_SELITEMRANGElaLB_SETANCHORINDEXlaLB_GETANCHORINDEXlaLB_SETCARETINDEXlaLB_GETCARETINDEXlaLB_SETITEMHEIGHTlaLB_GETITEMHEIGHTlaLB_FINDSTRINGEXACTlaLB_SETLOCALElaLB_GETLOCALElaLB_SETCOUNTlaLB_INITSTORAGElaLB_ITEMFROMPOINTlaLB_MSGMAXaLBS_NOTIFYaLBS_SORTaLBS_NOREDRAWaLBS_MULTIPLESELaLBS_OWNERDRAWFIXEDaLBS_OWNERDRAWVARIABLEaLBS_HASSTRINGSaLBS_USETABSTOPSaLBS_NOINTEGRALHEIGHTaLBS_MULTICOLUMNaLBS_WANTKEYBOARDINPUTaLBS_EXTENDEDSELaLBS_DISABLENOSCROLLaLBS_NODATAaLBS_NOSELaLBS_STANDARDaCB_OKAYaCB_ERRaCB_ERRSPACEaCBN_ERRSPACEaCBN_SELCHANGEaCBN_DBLCLKaCBN_SETFOCUSaCBN_KILLFOCUSaCBN_EDITCHANGEaCBN_EDITUPDATEaCBN_DROPDOWNaCBN_CLOSEUPaCBN_SELENDOKaCBN_SELENDCANCELaCBS_SIMPLEaCBS_DROPDOWNaCBS_DROPDOWNLISTaCBS_OWNERDRAWFIXEDaCBS_OWNERDRAWVARIABLEaCBS_AUTOHSCROLLaCBS_OEMCONVERTaCBS_SORTaCBS_HASSTRINGSaCBS_NOINTEGRALHEIGHTaCBS_DISABLENOSCROLLaCBS_UPPERCASEaCBS_LOWERCASEl@aCB_GETEDITSELlAaCB_LIMITTEXTlBaCB_SETEDITSELlCaCB_ADDSTRINGlDaCB_DELETESTRINGlEaCB_DIRlFaCB_GETCOUNTlGaCB_GETCURSELlHaCB_GETLBTEXTlIaCB_GETLBTEXTLENlJaCB_INSERTSTRINGlKaCB_RESETCONTENTlLaCB_FINDSTRINGlMaCB_SELECTSTRINGlNaCB_SETCURSELlOaCB_SHOWDROPDOWNlPaCB_GETITEMDATAlQaCB_SETITEMDATAlRaCB_GETDROPPEDCONTROLRECTlSaCB_SETITEMHEIGHTlTaCB_GETITEMHEIGHTlUaCB_SETEXTENDEDUIlVaCB_GETEXTENDEDUIlWaCB_GETDROPPEDSTATElXaCB_FINDSTRINGEXACTlYaCB_SETLOCALElZaCB_GETLOCALEl[aCB_GETTOPINDEXl\aCB_SETTOPINDEXl]aCB_GETHORIZONTALEXTENTl^aCB_SETHORIZONTALEXTENTl_aCB_GETDROPPEDWIDTHl`aCB_SETDROPPEDWIDTHlaaCB_INITSTORAGElbaCB_MSGMAXaSBS_HORZaSBS_VERTaSBS_TOPALIGNaSBS_LEFTALIGNaSBS_BOTTOMALIGNaSBS_RIGHTALIGNaSBS_SIZEBOXTOPLEFTALIGNaSBS_SIZEBOXBOTTOMRIGHTALIGNaSBS_SIZEBOXaSBS_SIZEGRIPlaSBM_SETPOSlaSBM_GETPOSlaSBM_SETRANGElaSBM_SETRANGEREDRAWlaSBM_GETRANGElaSBM_ENABLE_ARROWSlaSBM_SETSCROLLINFOlaSBM_GETSCROLLINFOaSIF_RANGEaSIF_PAGEaSIF_POSaSIF_DISABLENOSCROLLaSIF_TRACKPOSaSIF_ALLaMDIS_ALLCHILDSTYLESaMDITILE_VERTICALaMDITILE_HORIZONTALaMDITILE_SKIPDISABLEDaMDITILE_ZORDERaIMC_GETCANDIDATEPOSaIMC_SETCANDIDATEPOSaIMC_GETCOMPOSITIONFONTaIMC_SETCOMPOSITIONFONTaIMC_GETCOMPOSITIONWINDOWaIMC_SETCOMPOSITIONWINDOWaIMC_GETSTATUSWINDOWPOSaIMC_SETSTATUSWINDOWPOSaIMC_CLOSESTATUSWINDOWaIMC_OPENSTATUSWINDOWaDELETEaREAD_CONTROLaWRITE_DACaWRITE_OWNERaSYNCHRONIZElaSTANDARD_RIGHTS_REQUIREDaSTANDARD_RIGHTS_READaSTANDARD_RIGHTS_WRITEaSTANDARD_RIGHTS_EXECUTElaSTANDARD_RIGHTS_ALLaSPECIFIC_RIGHTS_ALLaACCESS_SYSTEM_SECURITYaMAXIMUM_ALLOWEDaGENERIC_READaGENERIC_WRITEaGENERIC_EXECUTEaGENERIC_ALLaSERVICE_KERNEL_DRIVERaSERVICE_FILE_SYSTEM_DRIVERaSERVICE_ADAPTERaSERVICE_RECOGNIZER_DRIVERaSERVICE_DRIVERaSERVICE_WIN32_OWN_PROCESSaSERVICE_WIN32_SHARE_PROCESSaSERVICE_WIN32aSERVICE_INTERACTIVE_PROCESSaSERVICE_TYPE_ALLaSERVICE_BOOT_STARTaSERVICE_SYSTEM_STARTaSERVICE_AUTO_STARTaSERVICE_DEMAND_STARTaSERVICE_DISABLEDaSERVICE_ERROR_IGNOREaSERVICE_ERROR_NORMALaSERVICE_ERROR_SEVEREaSERVICE_ERROR_CRITICALaTAPE_ERASE_SHORTaTAPE_ERASE_LONGaTAPE_LOADaTAPE_UNLOADaTAPE_TENSIONaTAPE_LOCKaTAPE_UNLOCKaTAPE_FORMATaTAPE_SETMARKSaTAPE_FILEMARKSaTAPE_SHORT_FILEMARKSaTAPE_LONG_FILEMARKSaTAPE_ABSOLUTE_POSITIONaTAPE_LOGICAL_POSITIONaTAPE_PSEUDO_LOGICAL_POSITIONaTAPE_REWINDaTAPE_ABSOLUTE_BLOCKaTAPE_LOGICAL_BLOCKaTAPE_PSEUDO_LOGICAL_BLOCKaTAPE_SPACE_END_OF_DATAaTAPE_SPACE_RELATIVE_BLOCKSaTAPE_SPACE_FILEMARKSaTAPE_SPACE_SEQUENTIAL_FMKSaTAPE_SPACE_SETMARKSaTAPE_SPACE_SEQUENTIAL_SMKSaTAPE_DRIVE_FIXEDaTAPE_DRIVE_SELECTaTAPE_DRIVE_INITIATORaTAPE_DRIVE_ERASE_SHORTaTAPE_DRIVE_ERASE_LONGaTAPE_DRIVE_ERASE_BOP_ONLYaTAPE_DRIVE_ERASE_IMMEDIATEaTAPE_DRIVE_TAPE_CAPACITYaTAPE_DRIVE_TAPE_REMAININGaTAPE_DRIVE_FIXED_BLOCKaTAPE_DRIVE_VARIABLE_BLOCKaTAPE_DRIVE_WRITE_PROTECTaTAPE_DRIVE_EOT_WZ_SIZEaTAPE_DRIVE_ECCaTAPE_DRIVE_COMPRESSIONaTAPE_DRIVE_PADDINGaTAPE_DRIVE_REPORT_SMKSaTAPE_DRIVE_GET_ABSOLUTE_BLKaTAPE_DRIVE_GET_LOGICAL_BLKaTAPE_DRIVE_SET_EOT_WZ_SIZEaTAPE_DRIVE_LOAD_UNLOADaTAPE_DRIVE_TENSIONaTAPE_DRIVE_LOCK_UNLOCKqaTAPE_DRIVE_REWIND_IMMEDIATEqaTAPE_DRIVE_SET_BLOCK_SIZEq aTAPE_DRIVE_LOAD_UNLD_IMMEDq@aTAPE_DRIVE_TENSION_IMMEDqaTAPE_DRIVE_LOCK_UNLK_IMMEDqaTAPE_DRIVE_SET_ECCqaTAPE_DRIVE_SET_COMPRESSIONqaTAPE_DRIVE_SET_PADDINGqaTAPE_DRIVE_SET_REPORT_SMKSqaTAPE_DRIVE_ABSOLUTE_BLKq aTAPE_DRIVE_ABS_BLK_IMMEDq@aTAPE_DRIVE_LOGICAL_BLKqaTAPE_DRIVE_LOG_BLK_IMMEDqaTAPE_DRIVE_END_OF_DATAqaTAPE_DRIVE_RELATIVE_BLKSqaTAPE_DRIVE_FILEMARKSqaTAPE_DRIVE_SEQUENTIAL_FMKSqaTAPE_DRIVE_SETMARKSq aTAPE_DRIVE_SEQUENTIAL_SMKSq@aTAPE_DRIVE_REVERSE_POSITIONqaTAPE_DRIVE_SPACE_IMMEDIATEqaTAPE_DRIVE_WRITE_SETMARKSqaTAPE_DRIVE_WRITE_FILEMARKSqaTAPE_DRIVE_WRITE_SHORT_FMKSqaTAPE_DRIVE_WRITE_LONG_FMKSqaTAPE_DRIVE_WRITE_MARK_IMMEDqaTAPE_DRIVE_FORMATaTAPE_DRIVE_FORMAT_IMMEDIATEaTAPE_FIXED_PARTITIONSaTAPE_SELECT_PARTITIONSaTAPE_INITIATOR_PARTITIONSaAPPLICATION_ERROR_MASKaERROR_SEVERITY_SUCCESSaERROR_SEVERITY_INFORMATIONALaERROR_SEVERITY_WARNINGaERROR_SEVERITY_ERRORaMINCHARaMAXCHARaMINSHORTaMAXSHORTaMINLONGqaMAXLONGaMAXBYTEaMAXWORDaMAXDWORDaLANG_NEUTRALaLANG_BULGARIANaLANG_CHINESEaLANG_CROATIANaLANG_CZECHaLANG_DANISHaLANG_DUTCHaLANG_ENGLISHaLANG_FINNISHaLANG_FRENCHaLANG_GERMANaLANG_GREEKaLANG_HUNGARIANaLANG_ICELANDICaLANG_ITALIANaLANG_JAPANESEaLANG_KOREANaLANG_NORWEGIANaLANG_POLISHaLANG_PORTUGUESEaLANG_ROMANIANaLANG_RUSSIANaLANG_SLOVAKaLANG_SLOVENIANaLANG_SPANISHaLANG_SWEDISHaLANG_TURKISHaSUBLANG_NEUTRALaSUBLANG_DEFAULTaSUBLANG_SYS_DEFAULTaSUBLANG_CHINESE_TRADITIONALaSUBLANG_CHINESE_SIMPLIFIEDaSUBLANG_CHINESE_HONGKONGaSUBLANG_CHINESE_SINGAPOREaSUBLANG_DUTCHaSUBLANG_DUTCH_BELGIANaSUBLANG_ENGLISH_USaSUBLANG_ENGLISH_UKaSUBLANG_ENGLISH_AUSaSUBLANG_ENGLISH_CANaSUBLANG_ENGLISH_NZaSUBLANG_ENGLISH_EIREaSUBLANG_FRENCHaSUBLANG_FRENCH_BELGIANaSUBLANG_FRENCH_CANADIANaSUBLANG_FRENCH_SWISSaSUBLANG_GERMANaSUBLANG_GERMAN_SWISSaSUBLANG_GERMAN_AUSTRIANaSUBLANG_ITALIANaSUBLANG_ITALIAN_SWISSaSUBLANG_NORWEGIAN_BOKMALaSUBLANG_NORWEGIAN_NYNORSKaSUBLANG_PORTUGUESEaSUBLANG_PORTUGUESE_BRAZILIANaSUBLANG_SPANISHaSUBLANG_SPANISH_MEXICANaSUBLANG_SPANISH_MODERNaSORT_DEFAULTaSORT_JAPANESE_XJISaSORT_JAPANESE_UNICODEaSORT_CHINESE_BIG5aSORT_CHINESE_UNICODEaSORT_KOREAN_KSCaSORT_KOREAN_UNICODEaPRIMARYLANGIDaSUBLANGIDlaNLS_VALID_LOCALE_MASKaCONTEXT_PORTABLE_32BITaCONTEXT_ALPHAaCONTEXT_CONTROLaCONTEXT_FLOATING_POINTaCONTEXT_INTEGERaCONTEXT_FULLaSIZE_OF_80387_REGISTERSaPROCESS_TERMINATEaPROCESS_CREATE_THREADaPROCESS_VM_OPERATIONaPROCESS_VM_READaPROCESS_VM_WRITEaPROCESS_DUP_HANDLEaPROCESS_CREATE_PROCESSaPROCESS_SET_QUOTAaPROCESS_SET_INFORMATIONaPROCESS_QUERY_INFORMATIONaPROCESS_SUSPEND_RESUMEaPROCESS_QUERY_LIMITED_INFORMATIONaPROCESS_SET_LIMITED_INFORMATIONlaPROCESS_ALL_ACCESSaTHREAD_TERMINATEaTHREAD_SUSPEND_RESUMEaTHREAD_GET_CONTEXTaTHREAD_SET_CONTEXTaTHREAD_SET_INFORMATIONaTHREAD_QUERY_INFORMATIONaTHREAD_SET_THREAD_TOKENaTHREAD_IMPERSONATEaTHREAD_DIRECT_IMPERSONATIONaTHREAD_SET_LIMITED_INFORMATIONaTHREAD_QUERY_LIMITED_INFORMATIONaTHREAD_RESUMEaTLS_MINIMUM_AVAILABLEaEVENT_MODIFY_STATEaMUTANT_QUERY_STATEaSEMAPHORE_MODIFY_STATEaTIME_ZONE_ID_UNKNOWNaTIME_ZONE_ID_STANDARDaTIME_ZONE_ID_DAYLIGHTaPROCESSOR_INTEL_386laPROCESSOR_INTEL_486lJaPROCESSOR_INTEL_PENTIUMl\aPROCESSOR_INTEL_860laPROCESSOR_MIPS_R2000laPROCESSOR_MIPS_R3000laPROCESSOR_MIPS_R4000lHRaPROCESSOR_ALPHA_21064lYaPROCESSOR_PPC_601l[aPROCESSOR_PPC_603l\!<arch>
aIMAGE_ARCHIVE_STARTu`
aIMAGE_ARCHIVE_ENDw
aIMAGE_ARCHIVE_PADu/               aIMAGE_ARCHIVE_LINKER_MEMBERu//              aIMAGE_ARCHIVE_LONGNAMES_MEMBERaIMAGE_SIZEOF_ARCHIVE_MEMBER_HDRaIMAGE_SNAP_BY_ORDINALaIMAGE_ORDINALaIMAGE_RESOURCE_NAME_IS_STRINGaIMAGE_RESOURCE_DATA_IS_DIRECTORYaIMAGE_DEBUG_TYPE_UNKNOWNaIMAGE_DEBUG_TYPE_COFFaIMAGE_DEBUG_TYPE_CODEVIEWaIMAGE_DEBUG_TYPE_FPOaIMAGE_DEBUG_TYPE_MISCaIMAGE_DEBUG_TYPE_EXCEPTIONaIMAGE_DEBUG_TYPE_FIXUPaIMAGE_DEBUG_TYPE_OMAP_TO_SRCaIMAGE_DEBUG_TYPE_OMAP_FROM_SRCaFRAME_FPOaFRAME_TRAPaFRAME_TSSaSIZEOF_RFPO_DATAaIMAGE_DEBUG_MISC_EXENAMElDIaIMAGE_SEPARATE_DEBUG_SIGNATUREaNEWFRAMEaABORTDOCaNEXTBANDaSETCOLORTABLEaGETCOLORTABLEaFLUSHOUTPUTaDRAFTMODEaQUERYESCSUPPORTaSETABORTPROCaSTARTDOCaENDDOCaGETPHYSPAGESIZEaGETPRINTINGOFFSETaGETSCALINGFACTORaMFCOMMENTaGETPENWIDTHaSETCOPYCOUNTaSELECTPAPERSOURCEaDEVICEDATAaPASSTHROUGHaGETTECHNOLGYaGETTECHNOLOGYaSETLINECAPaSETLINEJOINaSETMITERLIMITaBANDINFOaDRAWPATTERNRECTaGETVECTORPENSIZEaGETVECTORBRUSHSIZEaENABLEDUPLEXaGETSETPAPERBINSaGETSETPRINTORIENTaENUMPAPERBINSaSETDIBSCALINGaEPSPRINTINGaENUMPAPERMETRICSaGETSETPAPERMETRICSaPOSTSCRIPT_DATAaPOSTSCRIPT_IGNOREaMOUSETRAILSaGETDEVICEUNITSaGETEXTENDEDTEXTMETRICSaGETEXTENTTABLEaGETPAIRKERNTABLEaGETTRACKKERNTABLEaEXTTEXTOUTaGETFACENAMEaDOWNLOADFACEaENABLERELATIVEWIDTHSaENABLEPAIRKERNINGaSETKERNTRACKaSETALLJUSTVALUESaSETCHARSETaSTRETCHBLTaGETSETSCREENPARAMSaBEGIN_PATHlaCLIP_TO_PATHlaEND_PATHlaEXT_DEVICE_CAPSlaRESTORE_CTMlaSAVE_CTMlaSET_ARC_DIRECTIONlaSET_BACKGROUND_COLORlaSET_POLY_MODElaSET_SCREEN_ANGLEl
aSET_SPREADlaTRANSFORM_CTMlaSET_CLIP_BOXl
aSET_BOUNDSlaSET_MIRROR_MODEaOPENCHANNELlaDOWNLOADHEADERlaCLOSECHANNELlaPOSTSCRIPT_PASSTHROUGHlaENCAPSULATED_POSTSCRIPTaSP_NOTREPORTEDaSP_ERRORaSP_APPABORTaSP_USERABORTaSP_OUTOFDISKlaSP_OUTOFMEMORYaPR_JOBSTATUSaOBJ_PENaOBJ_BRUSHaOBJ_DCaOBJ_METADCaOBJ_PALaOBJ_FONTaOBJ_BITMAPaOBJ_REGIONaOBJ_METAFILEaOBJ_MEMDCaOBJ_EXTPENaOBJ_ENHMETADCaOBJ_ENHMETAFILEaOBJ_COLORSPACEaMWT_IDENTITYaMWT_LEFTMULTIPLYaMWT_RIGHTMULTIPLYaMWT_MINaMWT_MAXaBI_RGBaBI_RLE8aBI_RLE4aBI_BITFIELDSaTMPF_FIXED_PITCHaTMPF_VECTORaTMPF_DEVICEaTMPF_TRUETYPEaNTM_REGULARaNTM_BOLDaNTM_ITALICaLF_FACESIZEaLF_FULLFACESIZEaOUT_DEFAULT_PRECISaOUT_STRING_PRECISaOUT_CHARACTER_PRECISaOUT_STROKE_PRECISaOUT_TT_PRECISaOUT_DEVICE_PRECISaOUT_RASTER_PRECISaOUT_TT_ONLY_PRECISaOUT_OUTLINE_PRECISaCLIP_DEFAULT_PRECISaCLIP_CHARACTER_PRECISaCLIP_STROKE_PRECISaCLIP_MASKaCLIP_LH_ANGLESaCLIP_TT_ALWAYSaCLIP_EMBEDDEDaDEFAULT_QUALITYaDRAFT_QUALITYaPROOF_QUALITYaNONANTIALIASED_QUALITYaANTIALIASED_QUALITYaCLEARTYPE_QUALITYaCLEARTYPE_NATURAL_QUALITYaDEFAULT_PITCHaFIXED_PITCHaVARIABLE_PITCHaANSI_CHARSETaDEFAULT_CHARSETaSYMBOL_CHARSETaSHIFTJIS_CHARSETaHANGEUL_CHARSETaCHINESEBIG5_CHARSETaOEM_CHARSETaJOHAB_CHARSETaHEBREW_CHARSETaARABIC_CHARSETaGREEK_CHARSETaTURKISH_CHARSETaVIETNAMESE_CHARSETlaTHAI_CHARSETlaEASTEUROPE_CHARSETaRUSSIAN_CHARSETaMAC_CHARSETaBALTIC_CHARSETaFF_DONTCAREaFF_ROMANaFF_SWISSaFF_MODERNaFF_SCRIPTaFF_DECORATIVEaFW_DONTCAREaFW_THINaFW_EXTRALIGHTl,aFW_LIGHTaFW_NORMALaFW_MEDIUMlXaFW_SEMIBOLDlaFW_BOLDl aFW_EXTRABOLDlaFW_HEAVYaFW_ULTRALIGHTaFW_REGULARaFW_DEMIBOLDaFW_ULTRABOLDaFW_BLACKaBS_SOLIDaBS_NULLaBS_HOLLOWaBS_HATCHEDaBS_PATTERNaBS_INDEXEDaBS_DIBPATTERNaBS_DIBPATTERNPTaBS_PATTERN8X8aBS_DIBPATTERN8X8aHS_HORIZONTALaHS_VERTICALaHS_FDIAGONALaHS_BDIAGONALaHS_CROSSaHS_DIAGCROSSaHS_FDIAGONAL1aHS_BDIAGONAL1aHS_SOLIDaHS_DENSE1aHS_DENSE2aHS_DENSE3aHS_DENSE4aHS_DENSE5aHS_DENSE6aHS_DENSE7aHS_DENSE8aHS_NOSHADEaHS_HALFTONEaHS_SOLIDCLRaHS_DITHEREDCLRaHS_SOLIDTEXTCLRaHS_DITHEREDTEXTCLRaHS_SOLIDBKCLRaHS_DITHEREDBKCLRaHS_API_MAXaPS_SOLIDaPS_DASHaPS_DOTaPS_DASHDOTaPS_DASHDOTDOTaPS_NULLaPS_INSIDEFRAMEaPS_USERSTYLEaPS_ALTERNATEaPS_STYLE_MASKaPS_ENDCAP_ROUNDaPS_ENDCAP_SQUAREaPS_ENDCAP_FLATaPS_ENDCAP_MASKaPS_JOIN_ROUNDaPS_JOIN_BEVELaPS_JOIN_MITERaPS_JOIN_MASKaPS_COSMETICaPS_GEOMETRICaPS_TYPE_MASKaAD_COUNTERCLOCKWISEaAD_CLOCKWISEaDRIVERVERSIONaTECHNOLOGYaHORZSIZEaVERTSIZEaHORZRESaVERTRESaBITSPIXELaPLANESaNUMBRUSHESaNUMPENSaNUMMARKERSaNUMFONTSaNUMCOLORSaPDEVICESIZEaCURVECAPSaLINECAPSaPOLYGONALCAPSaTEXTCAPSaCLIPCAPSaRASTERCAPSaASPECTXaASPECTYaASPECTXYlXaLOGPIXELSXlZaLOGPIXELSYaSIZEPALETTEaNUMRESERVEDaCOLORRESaPHYSICALWIDTHaPHYSICALHEIGHTaPHYSICALOFFSETXaPHYSICALOFFSETYaSCALINGFACTORXaSCALINGFACTORYaVREFRESHaDESKTOPVERTRESaDESKTOPHORZRESaBLTALIGNMENTaSHADEBLENDCAPSaCOLORMGMTCAPSaDT_PLOTTERaDT_RASDISPLAYaDT_RASPRINTERaDT_RASCAMERAaDT_CHARSTREAMaDT_METAFILEaDT_DISPFILEaCC_NONEaCC_CIRCLESaCC_PIEaCC_CHORDaCC_ELLIPSESaCC_WIDEaCC_STYLEDaCC_WIDESTYLEDaCC_INTERIORSaCC_ROUNDRECTaLC_NONEaLC_POLYLINEaLC_MARKERaLC_POLYMARKERaLC_WIDEaLC_STYLEDaLC_WIDESTYLEDaLC_INTERIORSaPC_NONEaPC_POLYGONaPC_RECTANGLEaPC_WINDPOLYGONaPC_TRAPEZOIDaPC_SCANLINEaPC_WIDEaPC_STYLEDaPC_WIDESTYLEDaPC_INTERIORSaCP_NONEaCP_RECTANGLEaCP_REGIONaTC_OP_CHARACTERaTC_OP_STROKEaTC_CP_STROKEaTC_CR_90aTC_CR_ANYaTC_SF_X_YINDEPaTC_SA_DOUBLEaTC_SA_INTEGERaTC_SA_CONTINaTC_EA_DOUBLEaTC_IA_ABLEaTC_UA_ABLEaTC_SO_ABLEaTC_RA_ABLEaTC_VA_ABLEaTC_RESERVEDaTC_SCROLLBLTaRC_BITBLTaRC_BANDINGaRC_SCALINGaRC_BITMAP64aRC_GDI20_OUTPUTaRC_GDI20_STATEaRC_SAVEBITMAPaRC_DI_BITMAPaRC_PALETTEaRC_DIBTODEVaRC_BIGFONTaRC_STRETCHBLTaRC_FLOODFILLaRC_STRETCHDIBaRC_OP_DX_OUTPUTaRC_DEVBITSaDIB_RGB_COLORSaDIB_PAL_COLORSaDIB_PAL_INDICESaDIB_PAL_PHYSINDICESaDIB_PAL_LOGINDICESaSYSPAL_ERRORaSYSPAL_STATICaSYSPAL_NOSTATICaCBM_CREATEDIBaCBM_INITaFLOODFILLBORDERaFLOODFILLSURFACEaCCHDEVICENAMEaCCHFORMNAMEaDM_SPECVERSIONaDM_ORIENTATIONaDM_PAPERSIZEaDM_PAPERLENGTHaDM_PAPERWIDTHaDM_SCALEaDM_POSITIONaDM_NUPaDM_DISPLAYORIENTATIONaDM_COPIESaDM_DEFAULTSOURCEaDM_PRINTQUALITYaDM_COLORaDM_DUPLEXaDM_YRESOLUTIONaDM_TTOPTIONaDM_COLLATEaDM_FORMNAMEaDM_LOGPIXELSaDM_BITSPERPELaDM_PELSWIDTHaDM_PELSHEIGHTaDM_DISPLAYFLAGSaDM_DISPLAYFREQUENCYaDM_ICMMETHODaDM_ICMINTENTaDM_MEDIATYPEaDM_DITHERTYPEaDM_PANNINGWIDTHaDM_PANNINGHEIGHTaDM_DISPLAYFIXEDOUTPUTaDMORIENT_PORTRAITaDMORIENT_LANDSCAPEaDMDO_DEFAULTaDMDO_90aDMDO_180aDMDO_270aDMDFO_DEFAULTaDMDFO_STRETCHaDMDFO_CENTERaDMPAPER_LETTERaDMPAPER_LETTERSMALLaDMPAPER_TABLOIDaDMPAPER_LEDGERaDMPAPER_LEGALaDMPAPER_STATEMENTaDMPAPER_EXECUTIVEaDMPAPER_A3aDMPAPER_A4aDMPAPER_A4SMALLaDMPAPER_A5aDMPAPER_B4aDMPAPER_B5aDMPAPER_FOLIOaDMPAPER_QUARTOaDMPAPER_10X14aDMPAPER_11X17aDMPAPER_NOTEaDMPAPER_ENV_9aDMPAPER_ENV_10aDMPAPER_ENV_11aDMPAPER_ENV_12aDMPAPER_ENV_14aDMPAPER_CSHEETaDMPAPER_DSHEETaDMPAPER_ESHEETaDMPAPER_ENV_DLaDMPAPER_ENV_C5aDMPAPER_ENV_C3aDMPAPER_ENV_C4aDMPAPER_ENV_C6aDMPAPER_ENV_C65aDMPAPER_ENV_B4aDMPAPER_ENV_B5aDMPAPER_ENV_B6aDMPAPER_ENV_ITALYaDMPAPER_ENV_MONARCHaDMPAPER_ENV_PERSONALaDMPAPER_FANFOLD_USaDMPAPER_FANFOLD_STD_GERMANaDMPAPER_FANFOLD_LGL_GERMANaDMPAPER_ISO_B4aDMPAPER_JAPANESE_POSTCARDaDMPAPER_9X11aDMPAPER_10X11aDMPAPER_15X11aDMPAPER_ENV_INVITEaDMPAPER_RESERVED_48aDMPAPER_RESERVED_49aDMPAPER_LETTER_EXTRAaDMPAPER_LEGAL_EXTRAaDMPAPER_TABLOID_EXTRAaDMPAPER_A4_EXTRAaDMPAPER_LETTER_TRANSVERSEaDMPAPER_A4_TRANSVERSEaDMPAPER_LETTER_EXTRA_TRANSVERSEaDMPAPER_A_PLUSaDMPAPER_B_PLUSaDMPAPER_LETTER_PLUSaDMPAPER_A4_PLUSaDMPAPER_A5_TRANSVERSEaDMPAPER_B5_TRANSVERSEaDMPAPER_A3_EXTRAaDMPAPER_A5_EXTRAaDMPAPER_B5_EXTRAlBaDMPAPER_A2aDMPAPER_A3_TRANSVERSEaDMPAPER_A3_EXTRA_TRANSVERSEaDMPAPER_DBL_JAPANESE_POSTCARDaDMPAPER_A6aDMPAPER_JENV_KAKU2aDMPAPER_JENV_KAKU3aDMPAPER_JENV_CHOU3aDMPAPER_JENV_CHOU4aDMPAPER_LETTER_ROTATEDaDMPAPER_A3_ROTATEDaDMPAPER_A4_ROTATEDaDMPAPER_A5_ROTATEDaDMPAPER_B4_JIS_ROTATEDaDMPAPER_B5_JIS_ROTATEDaDMPAPER_JAPANESE_POSTCARD_ROTATEDaDMPAPER_DBL_JAPANESE_POSTCARD_ROTATEDaDMPAPER_A6_ROTATEDaDMPAPER_JENV_KAKU2_ROTATEDaDMPAPER_JENV_KAKU3_ROTATEDlVaDMPAPER_JENV_CHOU3_ROTATEDlWaDMPAPER_JENV_CHOU4_ROTATEDaDMPAPER_B6_JISlYaDMPAPER_B6_JIS_ROTATEDaDMPAPER_12X11aDMPAPER_JENV_YOU4aDMPAPER_JENV_YOU4_ROTATEDaDMPAPER_P16Kl^aDMPAPER_P32Kl_aDMPAPER_P32KBIGaDMPAPER_PENV_1aDMPAPER_PENV_2aDMPAPER_PENV_3aDMPAPER_PENV_4aDMPAPER_PENV_5aDMPAPER_PENV_6aDMPAPER_PENV_7aDMPAPER_PENV_8aDMPAPER_PENV_9aDMPAPER_PENV_10aDMPAPER_P16K_ROTATEDaDMPAPER_P32K_ROTATEDaDMPAPER_P32KBIG_ROTATEDaDMPAPER_PENV_1_ROTATEDaDMPAPER_PENV_2_ROTATEDaDMPAPER_PENV_3_ROTATEDaDMPAPER_PENV_4_ROTATEDaDMPAPER_PENV_5_ROTATEDaDMPAPER_PENV_6_ROTATEDaDMPAPER_PENV_7_ROTATEDaDMPAPER_PENV_8_ROTATEDaDMPAPER_PENV_9_ROTATEDaDMPAPER_PENV_10_ROTATEDaDMPAPER_LASTaDMPAPER_USERaDMBIN_UPPERaDMBIN_ONLYONEaDMBIN_LOWERaDMBIN_MIDDLEaDMBIN_MANUALaDMBIN_ENVELOPEaDMBIN_ENVMANUALaDMBIN_AUTOaDMBIN_TRACTORaDMBIN_SMALLFMTaDMBIN_LARGEFMTaDMBIN_LARGECAPACITYaDMBIN_CASSETTEaDMBIN_FORMSOURCEaDMBIN_LASTaDMBIN_USERaDMRES_DRAFTaDMRES_LOWaDMRES_MEDIUMaDMRES_HIGHaDMCOLOR_MONOCHROMEaDMCOLOR_COLORaDMDUP_SIMPLEXaDMDUP_VERTICALaDMDUP_HORIZONTALaDMTT_BITMAPaDMTT_DOWNLOADaDMTT_SUBDEVaDMTT_DOWNLOAD_OUTLINEaDMCOLLATE_FALSEaDMCOLLATE_TRUEaDM_GRAYSCALEaDM_INTERLACEDaDMICMMETHOD_NONEaDMICMMETHOD_SYSTEMaDMICMMETHOD_DRIVERaDMICMMETHOD_DEVICEaDMICMMETHOD_USERaDMICM_SATURATEaDMICM_CONTRASTaDMICM_COLORIMETRICaDMICM_ABS_COLORIMETRICaDMICM_USERaDMMEDIA_STANDARDaDMMEDIA_TRANSPARENCYaDMMEDIA_GLOSSYaDMMEDIA_USERaDMDITHER_NONEaDMDITHER_COARSEaDMDITHER_FINEaDMDITHER_LINEARTaDMDITHER_ERRORDIFFUSIONaDMDITHER_RESERVED6aDMDITHER_RESERVED7aDMDITHER_RESERVED8aDMDITHER_RESERVED9aDMDITHER_GRAYSCALEaDMDITHER_USERaDMNUP_SYSTEMaDMNUP_ONEUPaFEATURESETTING_NUPaFEATURESETTING_OUTPUTaFEATURESETTING_PSLEVELaFEATURESETTING_CUSTPAPERaFEATURESETTING_MIRRORaFEATURESETTING_NEGATIVEaFEATURESETTING_PROTOCOLaFEATURESETTING_PRIVATE_BEGINlaFEATURESETTING_PRIVATE_ENDaRDH_RECTANGLESaGGO_METRICSaGGO_BITMAPaGGO_NATIVEaTT_POLYGON_TYPEaTT_PRIM_LINEaTT_PRIM_QSPLINEaTT_AVAILABLEaTT_ENABLEDaDM_UPDATEaDM_COPYaDM_PROMPTaDM_MODIFYaDM_IN_BUFFERaDM_IN_PROMPTaDM_OUT_BUFFERaDM_OUT_DEFAULTaDISPLAY_DEVICE_ATTACHED_TO_DESKTOPaDISPLAY_DEVICE_MULTI_DRIVERaDISPLAY_DEVICE_PRIMARY_DEVICEaDISPLAY_DEVICE_MIRRORING_DRIVERaDISPLAY_DEVICE_VGA_COMPATIBLEaDISPLAY_DEVICE_REMOVABLEaDISPLAY_DEVICE_MODESPRUNEDaDISPLAY_DEVICE_REMOTEaDISPLAY_DEVICE_DISCONNECTaDC_FIELDSaDC_PAPERSaDC_PAPERSIZEaDC_MINEXTENTaDC_MAXEXTENTaDC_BINSaDC_DUPLEXaDC_SIZEaDC_EXTRAaDC_VERSIONaDC_DRIVERaDC_BINNAMESaDC_ENUMRESOLUTIONSaDC_FILEDEPENDENCIESaDC_TRUETYPEaDC_PAPERNAMESaDC_ORIENTATIONaDC_COPIESaDC_BINADJUSTaDC_EMF_COMPLIANTaDC_DATATYPE_PRODUCEDaDC_COLLATEaDC_MANUFACTURERaDC_MODELaDC_PERSONALITYaDC_PRINTRATEaDC_PRINTRATEUNITaDC_PRINTERMEMaDC_MEDIAREADYaDC_STAPLEaDC_PRINTRATEPPMaDC_COLORDEVICEaDC_NUPaDC_MEDIATYPENAMESaDC_MEDIATYPESaPRINTRATEUNIT_PPMaPRINTRATEUNIT_CPSaPRINTRATEUNIT_LPMaPRINTRATEUNIT_IPMaDCTT_BITMAPaDCTT_DOWNLOADaDCTT_SUBDEVaDCTT_DOWNLOAD_OUTLINEaDCBA_FACEUPNONEaDCBA_FACEUPCENTERaDCBA_FACEUPLEFTaDCBA_FACEUPRIGHTaDCBA_FACEDOWNNONEaDCBA_FACEDOWNCENTERaDCBA_FACEDOWNLEFTaDCBA_FACEDOWNRIGHTaCA_NEGATIVEaCA_LOG_FILTERaILLUMINANT_DEVICE_DEFAULTaILLUMINANT_AaILLUMINANT_BaILLUMINANT_CaILLUMINANT_D50aILLUMINANT_D55aILLUMINANT_D65aILLUMINANT_D75aILLUMINANT_F2aILLUMINANT_MAX_INDEXaILLUMINANT_TUNGSTENaILLUMINANT_DAYLIGHTaILLUMINANT_FLUORESCENTaILLUMINANT_NTSCaFONTMAPPER_MAXq EMFaENHMETA_SIGNATUREaENHMETA_STOCK_OBJECTaEMR_HEADERaEMR_POLYBEZIERaEMR_POLYGONaEMR_POLYLINEaEMR_POLYBEZIERTOaEMR_POLYLINETOaEMR_POLYPOLYLINEaEMR_POLYPOLYGONaEMR_SETWINDOWEXTEXaEMR_SETWINDOWORGEXaEMR_SETVIEWPORTEXTEXaEMR_SETVIEWPORTORGEXaEMR_SETBRUSHORGEXaEMR_EOFaEMR_SETPIXELVaEMR_SETMAPPERFLAGSaEMR_SETMAPMODEaEMR_SETBKMODEaEMR_SETPOLYFILLMODEaEMR_SETROP2aEMR_SETSTRETCHBLTMODEaEMR_SETTEXTALIGNaEMR_SETCOLORADJUSTMENTaEMR_SETTEXTCOLORaEMR_SETBKCOLORaEMR_OFFSETCLIPRGNaEMR_MOVETOEXaEMR_SETMETARGNaEMR_EXCLUDECLIPRECTaEMR_INTERSECTCLIPRECTaEMR_SCALEVIEWPORTEXTEXaEMR_SCALEWINDOWEXTEXaEMR_SAVEDCaEMR_RESTOREDCaEMR_SETWORLDTRANSFORMaEMR_MODIFYWORLDTRANSFORMaEMR_SELECTOBJECTaEMR_CREATEPENaEMR_CREATEBRUSHINDIRECTaEMR_DELETEOBJECTaEMR_ANGLEARCaEMR_ELLIPSEaEMR_RECTANGLEaEMR_ROUNDRECTaEMR_ARCaEMR_CHORDaEMR_PIEaEMR_SELECTPALETTEaEMR_CREATEPALETTEaEMR_SETPALETTEENTRIESaEMR_RESIZEPALETTEaEMR_REALIZEPALETTEaEMR_EXTFLOODFILLaEMR_LINETOaEMR_ARCTOaEMR_POLYDRAWaEMR_SETARCDIRECTIONaEMR_SETMITERLIMITaEMR_BEGINPATHaEMR_ENDPATHaEMR_CLOSEFIGUREaEMR_FILLPATHaEMR_STROKEANDFILLPATHaEMR_STROKEPATHaEMR_FLATTENPATHaEMR_WIDENPATHaEMR_SELECTCLIPPATHaEMR_ABORTPATHaEMR_GDICOMMENTaEMR_FILLRGNaEMR_FRAMERGNaEMR_INVERTRGNaEMR_PAINTRGNaEMR_EXTSELECTCLIPRGNaEMR_BITBLTaEMR_STRETCHBLTaEMR_MASKBLTaEMR_PLGBLTaEMR_SETDIBITSTODEVICEaEMR_STRETCHDIBITSaEMR_EXTCREATEFONTINDIRECTWaEMR_EXTTEXTOUTAaEMR_EXTTEXTOUTWaEMR_POLYBEZIER16aEMR_POLYGON16aEMR_POLYLINE16aEMR_POLYBEZIERTO16aEMR_POLYLINETO16aEMR_POLYPOLYLINE16aEMR_POLYPOLYGON16aEMR_POLYDRAW16aEMR_CREATEMONOBRUSHaEMR_CREATEDIBPATTERNBRUSHPTaEMR_EXTCREATEPENaEMR_POLYTEXTOUTAaEMR_POLYTEXTOUTWaEMR_MINaEMR_MAXaPANOSE_COUNTaPAN_FAMILYTYPE_INDEXaPAN_SERIFSTYLE_INDEXaPAN_WEIGHT_INDEXaPAN_PROPORTION_INDEXaPAN_CONTRAST_INDEXaPAN_STROKEVARIATION_INDEXaPAN_ARMSTYLE_INDEXaPAN_LETTERFORM_INDEXaPAN_MIDLINE_INDEXaPAN_XHEIGHT_INDEXaPAN_CULTURE_LATINaPAN_ANYaPAN_NO_FITaPAN_FAMILY_TEXT_DISPLAYaPAN_FAMILY_SCRIPTaPAN_FAMILY_DECORATIVEaPAN_FAMILY_PICTORIALaPAN_SERIF_COVEaPAN_SERIF_OBTUSE_COVEaPAN_SERIF_SQUARE_COVEaPAN_SERIF_OBTUSE_SQUARE_COVEaPAN_SERIF_SQUAREaPAN_SERIF_THINaPAN_SERIF_BONEaPAN_SERIF_EXAGGERATEDaPAN_SERIF_TRIANGLEaPAN_SERIF_NORMAL_SANSaPAN_SERIF_OBTUSE_SANSaPAN_SERIF_PERP_SANSaPAN_SERIF_FLAREDaPAN_SERIF_ROUNDEDaPAN_WEIGHT_VERY_LIGHTaPAN_WEIGHT_LIGHTaPAN_WEIGHT_THINaPAN_WEIGHT_BOOKaPAN_WEIGHT_MEDIUMaPAN_WEIGHT_DEMIaPAN_WEIGHT_BOLDaPAN_WEIGHT_HEAVYaPAN_WEIGHT_BLACKaPAN_WEIGHT_NORDaPAN_PROP_OLD_STYLEaPAN_PROP_MODERNaPAN_PROP_EVEN_WIDTHaPAN_PROP_EXPANDEDaPAN_PROP_CONDENSEDaPAN_PROP_VERY_EXPANDEDaPAN_PROP_VERY_CONDENSEDaPAN_PROP_MONOSPACEDaPAN_CONTRAST_NONEaPAN_CONTRAST_VERY_LOWaPAN_CONTRAST_LOWaPAN_CONTRAST_MEDIUM_LOWaPAN_CONTRAST_MEDIUMaPAN_CONTRAST_MEDIUM_HIGHaPAN_CONTRAST_HIGHaPAN_CONTRAST_VERY_HIGHaPAN_STROKE_GRADUAL_DIAGaPAN_STROKE_GRADUAL_TRANaPAN_STROKE_GRADUAL_VERTaPAN_STROKE_GRADUAL_HORZaPAN_STROKE_RAPID_VERTaPAN_STROKE_RAPID_HORZaPAN_STROKE_INSTANT_VERTaPAN_STRAIGHT_ARMS_HORZaPAN_STRAIGHT_ARMS_WEDGEaPAN_STRAIGHT_ARMS_VERTaPAN_STRAIGHT_ARMS_SINGLE_SERIFaPAN_STRAIGHT_ARMS_DOUBLE_SERIFaPAN_BENT_ARMS_HORZaPAN_BENT_ARMS_WEDGEaPAN_BENT_ARMS_VERTaPAN_BENT_ARMS_SINGLE_SERIFaPAN_BENT_ARMS_DOUBLE_SERIFaPAN_LETT_NORMAL_CONTACTaPAN_LETT_NORMAL_WEIGHTEDaPAN_LETT_NORMAL_BOXEDaPAN_LETT_NORMAL_FLATTENEDaPAN_LETT_NORMAL_ROUNDEDaPAN_LETT_NORMAL_OFF_CENTERaPAN_LETT_NORMAL_SQUAREaPAN_LETT_OBLIQUE_CONTACTaPAN_LETT_OBLIQUE_WEIGHTEDaPAN_LETT_OBLIQUE_BOXEDaPAN_LETT_OBLIQUE_FLATTENEDaPAN_LETT_OBLIQUE_ROUNDEDaPAN_LETT_OBLIQUE_OFF_CENTERaPAN_LETT_OBLIQUE_SQUAREaPAN_MIDLINE_STANDARD_TRIMMEDaPAN_MIDLINE_STANDARD_POINTEDaPAN_MIDLINE_STANDARD_SERIFEDaPAN_MIDLINE_HIGH_TRIMMEDaPAN_MIDLINE_HIGH_POINTEDaPAN_MIDLINE_HIGH_SERIFEDaPAN_MIDLINE_CONSTANT_TRIMMEDaPAN_MIDLINE_CONSTANT_POINTEDaPAN_MIDLINE_CONSTANT_SERIFEDaPAN_MIDLINE_LOW_TRIMMEDaPAN_MIDLINE_LOW_POINTEDaPAN_MIDLINE_LOW_SERIFEDaPAN_XHEIGHT_CONSTANT_SMALLaPAN_XHEIGHT_CONSTANT_STDaPAN_XHEIGHT_CONSTANT_LARGEaPAN_XHEIGHT_DUCKING_SMALLaPAN_XHEIGHT_DUCKING_STDaPAN_XHEIGHT_DUCKING_LARGEaELF_VENDOR_SIZEaELF_VERSIONaELF_CULTURE_LATINaRASTER_FONTTYPEaDEVICE_FONTTYPEaTRUETYPE_FONTTYPEaPALETTEINDEXaPC_RESERVEDaPC_EXPLICITaPC_NOCOLLAPSEaGetRValueaGetGValueaGetBValueaTRANSPARENTaOPAQUEaBKMODE_LASTaGM_COMPATIBLEaGM_ADVANCEDaGM_LASTaPT_CLOSEFIGUREaPT_LINETOaPT_BEZIERTOaPT_MOVETOaMM_TEXTaMM_LOMETRICaMM_HIMETRICaMM_LOENGLISHaMM_HIENGLISHaMM_TWIPSaMM_ISOTROPICaMM_ANISOTROPICaMM_MINaMM_MAXaMM_MAX_FIXEDSCALEaABSOLUTEaRELATIVEaWHITE_BRUSHaLTGRAY_BRUSHaGRAY_BRUSHaDKGRAY_BRUSHaBLACK_BRUSHaNULL_BRUSHaHOLLOW_BRUSHaWHITE_PENaBLACK_PENaNULL_PENaOEM_FIXED_FONTaANSI_FIXED_FONTaANSI_VAR_FONTaSYSTEM_FONTaDEVICE_DEFAULT_FONTaDEFAULT_PALETTEaSYSTEM_FIXED_FONTaSTOCK_LASTaCLR_INVALIDaDC_BRUSHaDC_PENaSTATUS_WAIT_0aSTATUS_ABANDONED_WAIT_0aSTATUS_USER_APCaSTATUS_TIMEOUTaSTATUS_PENDINGq@aSTATUS_SEGMENT_NOTIFICATIONaSTATUS_GUARD_PAGE_VIOLATIONaSTATUS_DATATYPE_MISALIGNMENTaSTATUS_BREAKPOINTaSTATUS_SINGLE_STEPqaSTATUS_ACCESS_VIOLATIONqaSTATUS_IN_PAGE_ERRORqaSTATUS_INVALID_HANDLEqaSTATUS_NO_MEMORYqaSTATUS_ILLEGAL_INSTRUCTIONq%aSTATUS_NONCONTINUABLE_EXCEPTIONq&aSTATUS_INVALID_DISPOSITIONqaSTATUS_ARRAY_BOUNDS_EXCEEDEDqaSTATUS_FLOAT_DENORMAL_OPERANDqaSTATUS_FLOAT_DIVIDE_BY_ZEROqaSTATUS_FLOAT_INEXACT_RESULTqaSTATUS_FLOAT_INVALID_OPERATIONqaSTATUS_FLOAT_OVERFLOWqaSTATUS_FLOAT_STACK_CHECKqaSTATUS_FLOAT_UNDERFLOWqaSTATUS_INTEGER_DIVIDE_BY_ZEROqaSTATUS_INTEGER_OVERFLOWqaSTATUS_PRIVILEGED_INSTRUCTIONqaSTATUS_STACK_OVERFLOWq:aSTATUS_CONTROL_C_EXITaWAIT_FAILEDaWAIT_OBJECT_0aWAIT_ABANDONEDaWAIT_ABANDONED_0aWAIT_TIMEOUTaWAIT_IO_COMPLETIONaSTILL_ACTIVEaEXCEPTION_ACCESS_VIOLATIONaEXCEPTION_DATATYPE_MISALIGNMENTaEXCEPTION_BREAKPOINTaEXCEPTION_SINGLE_STEPaEXCEPTION_ARRAY_BOUNDS_EXCEEDEDaEXCEPTION_FLT_DENORMAL_OPERANDaEXCEPTION_FLT_DIVIDE_BY_ZEROaEXCEPTION_FLT_INEXACT_RESULTaEXCEPTION_FLT_INVALID_OPERATIONaEXCEPTION_FLT_OVERFLOWaEXCEPTION_FLT_STACK_CHECKaEXCEPTION_FLT_UNDERFLOWaEXCEPTION_INT_DIVIDE_BY_ZEROaEXCEPTION_INT_OVERFLOWaEXCEPTION_PRIV_INSTRUCTIONaEXCEPTION_IN_PAGE_ERRORaEXCEPTION_ILLEGAL_INSTRUCTIONaEXCEPTION_NONCONTINUABLE_EXCEPTIONaEXCEPTION_STACK_OVERFLOWaEXCEPTION_INVALID_DISPOSITIONaEXCEPTION_GUARD_PAGEaEXCEPTION_INVALID_HANDLEaCONTROL_C_EXITaSPI_GETBEEPaSPI_SETBEEPaSPI_GETMOUSEaSPI_SETMOUSEaSPI_GETBORDERaSPI_SETBORDERaSPI_GETKEYBOARDSPEEDaSPI_SETKEYBOARDSPEEDaSPI_LANGDRIVERaSPI_ICONHORIZONTALSPACINGaSPI_GETSCREENSAVETIMEOUTaSPI_SETSCREENSAVETIMEOUTaSPI_GETSCREENSAVEACTIVEaSPI_SETSCREENSAVEACTIVEaSPI_GETGRIDGRANULARITYaSPI_SETGRIDGRANULARITYaSPI_SETDESKWALLPAPERaSPI_SETDESKPATTERNaSPI_GETKEYBOARDDELAYaSPI_SETKEYBOARDDELAYaSPI_ICONVERTICALSPACINGaSPI_GETICONTITLEWRAPaSPI_SETICONTITLEWRAPaSPI_GETMENUDROPALIGNMENTaSPI_SETMENUDROPALIGNMENTaSPI_SETDOUBLECLKWIDTHaSPI_SETDOUBLECLKHEIGHTaSPI_GETICONTITLELOGFONTaSPI_SETDOUBLECLICKTIMEaSPI_SETMOUSEBUTTONSWAPaSPI_SETICONTITLELOGFONTaSPI_GETFASTTASKSWITCHaSPI_SETFASTTASKSWITCHaSPI_SETDRAGFULLWINDOWSaSPI_GETDRAGFULLWINDOWSaSPI_GETNONCLIENTMETRICSaSPI_SETNONCLIENTMETRICSaSPI_GETMINIMIZEDMETRICSaSPI_SETMINIMIZEDMETRICSaSPI_GETICONMETRICSaSPI_SETICONMETRICSaSPI_SETWORKAREAaSPI_GETWORKAREAaSPI_SETPENWINDOWSaSPI_GETFILTERKEYSaSPI_SETFILTERKEYSaSPI_GETTOGGLEKEYSaSPI_SETTOGGLEKEYSaSPI_GETMOUSEKEYSaSPI_SETMOUSEKEYSaSPI_GETSHOWSOUNDSaSPI_SETSHOWSOUNDSaSPI_GETSTICKYKEYSaSPI_SETSTICKYKEYSaSPI_GETACCESSTIMEOUTaSPI_SETACCESSTIMEOUTaSPI_GETSERIALKEYSaSPI_SETSERIALKEYSaSPI_GETSOUNDSENTRYaSPI_SETSOUNDSENTRYaSPI_GETHIGHCONTRASTaSPI_SETHIGHCONTRASTaSPI_GETKEYBOARDPREFaSPI_SETKEYBOARDPREFaSPI_GETSCREENREADERaSPI_SETSCREENREADERaSPI_GETANIMATIONaSPI_SETANIMATIONaSPI_GETFONTSMOOTHINGaSPI_SETFONTSMOOTHINGaSPI_SETDRAGWIDTHaSPI_SETDRAGHEIGHTaSPI_SETHANDHELDaSPI_GETLOWPOWERTIMEOUTaSPI_GETPOWEROFFTIMEOUTaSPI_SETLOWPOWERTIMEOUTaSPI_SETPOWEROFFTIMEOUTaSPI_GETLOWPOWERACTIVEaSPI_GETPOWEROFFACTIVEaSPI_SETLOWPOWERACTIVEaSPI_SETPOWEROFFACTIVEaSPI_SETCURSORSaSPI_SETICONSaSPI_GETDEFAULTINPUTLANGaSPI_SETDEFAULTINPUTLANGaSPI_SETLANGTOGGLEaSPI_GETWINDOWSEXTENSIONaSPI_SETMOUSETRAILSaSPI_GETMOUSETRAILSaSPI_GETSNAPTODEFBUTTONaSPI_SETSNAPTODEFBUTTONaSPI_SETSCREENSAVERRUNNINGaSPI_SCREENSAVERRUNNINGaSPI_GETMOUSEHOVERWIDTHaSPI_SETMOUSEHOVERWIDTHaSPI_GETMOUSEHOVERHEIGHTaSPI_SETMOUSEHOVERHEIGHTaSPI_GETMOUSEHOVERTIMEaSPI_SETMOUSEHOVERTIMEaSPI_GETWHEELSCROLLLINESaSPI_SETWHEELSCROLLLINESaSPI_GETMENUSHOWDELAYaSPI_SETMENUSHOWDELAYaSPI_GETSHOWIMEUIaSPI_SETSHOWIMEUIaSPI_GETMOUSESPEEDaSPI_SETMOUSESPEEDaSPI_GETSCREENSAVERRUNNINGaSPI_GETDESKWALLPAPERaSPI_GETACTIVEWINDOWTRACKINGaSPI_SETACTIVEWINDOWTRACKINGaSPI_GETMENUANIMATIONaSPI_SETMENUANIMATIONaSPI_GETCOMBOBOXANIMATIONaSPI_SETCOMBOBOXANIMATIONaSPI_GETLISTBOXSMOOTHSCROLLINGaSPI_SETLISTBOXSMOOTHSCROLLINGaSPI_GETGRADIENTCAPTIONSaSPI_SETGRADIENTCAPTIONSaSPI_GETKEYBOARDCUESaSPI_SETKEYBOARDCUESaSPI_GETMENUUNDERLINESaSPI_SETMENUUNDERLINESaSPI_GETACTIVEWNDTRKZORDERaSPI_SETACTIVEWNDTRKZORDERaSPI_GETHOTTRACKINGaSPI_SETHOTTRACKINGlaSPI_GETMENUFADEaSPI_SETMENUFADEaSPI_GETSELECTIONFADElaSPI_SETSELECTIONFADElaSPI_GETTOOLTIPANIMATIONlaSPI_SETTOOLTIPANIMATIONlaSPI_GETTOOLTIPFADElaSPI_SETTOOLTIPFADElaSPI_GETCURSORSHADOWlaSPI_SETCURSORSHADOWlaSPI_GETMOUSESONARlaSPI_SETMOUSESONARlaSPI_GETMOUSECLICKLOCKlaSPI_SETMOUSECLICKLOCKl aSPI_GETMOUSEVANISHl!aSPI_SETMOUSEVANISHl"aSPI_GETFLATMENUl#aSPI_SETFLATMENUl$aSPI_GETDROPSHADOWl%aSPI_SETDROPSHADOWl&aSPI_GETBLOCKSENDINPUTRESETSl'aSPI_SETBLOCKSENDINPUTRESETSl>aSPI_GETUIEFFECTSl?aSPI_SETUIEFFECTSaSPI_GETFOREGROUNDLOCKTIMEOUTl aSPI_SETFOREGROUNDLOCKTIMEOUTl aSPI_GETACTIVEWNDTRKTIMEOUTl aSPI_SETACTIVEWNDTRKTIMEOUTl aSPI_GETFOREGROUNDFLASHCOUNTl aSPI_SETFOREGROUNDFLASHCOUNTl aSPI_GETCARETWIDTHl aSPI_SETCARETWIDTHl aSPI_GETMOUSECLICKLOCKTIMEl aSPI_SETMOUSECLICKLOCKTIMEl
 aSPI_GETFONTSMOOTHINGTYPEl aSPI_SETFONTSMOOTHINGTYPEl aSPI_GETFONTSMOOTHINGCONTRASTl
 aSPI_SETFONTSMOOTHINGCONTRASTl aSPI_GETFOCUSBORDERWIDTHl aSPI_SETFOCUSBORDERWIDTHl aSPI_GETFOCUSBORDERHEIGHTl aSPI_SETFOCUSBORDERHEIGHTl aSPI_GETFONTSMOOTHINGORIENTATIONl aSPI_SETFONTSMOOTHINGORIENTATIONaSPIF_UPDATEINIFILEaSPIF_SENDWININICHANGEaSPIF_SENDCHANGEaFE_FONTSMOOTHINGSTANDARDaFE_FONTSMOOTHINGCLEARTYPEaFE_FONTSMOOTHINGDOCKINGaMETRICS_USEDEFAULTaARW_BOTTOMLEFTaARW_BOTTOMRIGHTaARW_TOPLEFTaARW_TOPRIGHTaARW_STARTMASKaARW_STARTRIGHTaARW_STARTTOPaARW_LEFTaARW_RIGHTaARW_UPaARW_DOWNaARW_HIDEaSERKF_SERIALKEYSONaSERKF_AVAILABLEaSERKF_INDICATORaHCF_HIGHCONTRASTONaHCF_AVAILABLEaHCF_HOTKEYACTIVEaHCF_CONFIRMHOTKEYaHCF_HOTKEYSOUNDaHCF_INDICATORaHCF_HOTKEYAVAILABLEaCDS_UPDATEREGISTRYaCDS_TESTaCDS_FULLSCREENaCDS_GLOBALaCDS_SET_PRIMARYaCDS_RESETaCDS_SETRECTaCDS_NORESETaDISP_CHANGE_SUCCESSFULaDISP_CHANGE_RESTARTaDISP_CHANGE_FAILEDaDISP_CHANGE_BADMODEaDISP_CHANGE_NOTUPDATEDaDISP_CHANGE_BADFLAGSaDISP_CHANGE_BADPARAMaDISP_CHANGE_BADDUALVIEWaENUM_CURRENT_SETTINGSaENUM_REGISTRY_SETTINGSaFKF_FILTERKEYSONaFKF_AVAILABLEaFKF_HOTKEYACTIVEaFKF_CONFIRMHOTKEYaFKF_HOTKEYSOUNDaFKF_INDICATORaFKF_CLICKONaSKF_STICKYKEYSONaSKF_AVAILABLEaSKF_HOTKEYACTIVEaSKF_CONFIRMHOTKEYaSKF_HOTKEYSOUNDaSKF_INDICATORaSKF_AUDIBLEFEEDBACKaSKF_TRISTATEaSKF_TWOKEYSOFFaSKF_LALTLATCHEDaSKF_LCTLLATCHEDaSKF_LSHIFTLATCHEDaSKF_RALTLATCHEDaSKF_RCTLLATCHEDaSKF_RSHIFTLATCHEDaSKF_LWINLATCHEDaSKF_RWINLATCHEDaSKF_LALTLOCKEDaSKF_LCTLLOCKEDaSKF_LSHIFTLOCKEDaSKF_RALTLOCKEDaSKF_RCTLLOCKEDaSKF_RSHIFTLOCKEDaSKF_LWINLOCKEDaSKF_RWINLOCKEDaMKF_MOUSEKEYSONaMKF_AVAILABLEaMKF_HOTKEYACTIVEaMKF_CONFIRMHOTKEYaMKF_HOTKEYSOUNDaMKF_INDICATORaMKF_MODIFIERSaMKF_REPLACENUMBERSaMKF_LEFTBUTTONSELaMKF_RIGHTBUTTONSELaMKF_LEFTBUTTONDOWNaMKF_RIGHTBUTTONDOWNaMKF_MOUSEMODEaATF_TIMEOUTONaATF_ONOFFFEEDBACKaSSGF_NONEaSSGF_DISPLAYaSSTF_NONEaSSTF_CHARSaSSTF_BORDERaSSTF_DISPLAYaSSWF_NONEaSSWF_TITLEaSSWF_WINDOWaSSWF_DISPLAYaSSWF_CUSTOMaSSF_SOUNDSENTRYONaSSF_AVAILABLEaSSF_INDICATORaTKF_TOGGLEKEYSONaTKF_AVAILABLEaTKF_HOTKEYACTIVEaTKF_CONFIRMHOTKEYaTKF_HOTKEYSOUNDaTKF_INDICATORaSLE_ERRORaSLE_MINORERRORaSLE_WARNINGaMONITOR_DEFAULTTONULLaMONITOR_DEFAULTTOPRIMARYaMONITOR_DEFAULTTONEARESTaMONITORINFOF_PRIMARYaCHILDID_SELFaINDEXID_OBJECTaINDEXID_CONTAINERaOBJID_WINDOWaOBJID_SYSMENUaOBJID_TITLEBARaOBJID_MENUaOBJID_CLIENTaOBJID_VSCROLLaOBJID_HSCROLLlaOBJID_SIZEGRIPaOBJID_CARETlaOBJID_CURSORaOBJID_ALERTlaOBJID_SOUNDaEVENT_MINaEVENT_MAXaEVENT_SYSTEM_SOUNDaEVENT_SYSTEM_ALERTaEVENT_SYSTEM_FOREGROUNDaEVENT_SYSTEM_MENUSTARTaEVENT_SYSTEM_MENUENDaEVENT_SYSTEM_MENUPOPUPSTARTaEVENT_SYSTEM_MENUPOPUPENDaEVENT_SYSTEM_CAPTURESTARTaEVENT_SYSTEM_CAPTUREENDaEVENT_SYSTEM_MOVESIZESTARTaEVENT_SYSTEM_MOVESIZEENDaEVENT_SYSTEM_CONTEXTHELPSTARTaEVENT_SYSTEM_CONTEXTHELPENDaEVENT_SYSTEM_DRAGDROPSTARTaEVENT_SYSTEM_DRAGDROPENDaEVENT_SYSTEM_DIALOGSTARTaEVENT_SYSTEM_DIALOGENDaEVENT_SYSTEM_SCROLLINGSTARTaEVENT_SYSTEM_SCROLLINGENDaEVENT_SYSTEM_SWITCHSTARTaEVENT_SYSTEM_SWITCHENDaEVENT_SYSTEM_MINIMIZESTARTaEVENT_SYSTEM_MINIMIZEENDaEVENT_OBJECT_CREATEaEVENT_OBJECT_DESTROYaEVENT_OBJECT_SHOWaEVENT_OBJECT_HIDEaEVENT_OBJECT_REORDERlaEVENT_OBJECT_FOCUSlaEVENT_OBJECT_SELECTIONlaEVENT_OBJECT_SELECTIONADDlaEVENT_OBJECT_SELECTIONREMOVElaEVENT_OBJECT_SELECTIONWITHINl
aEVENT_OBJECT_STATECHANGElaEVENT_OBJECT_LOCATIONCHANGElaEVENT_OBJECT_NAMECHANGEl
aEVENT_OBJECT_DESCRIPTIONCHANGElaEVENT_OBJECT_VALUECHANGElaEVENT_OBJECT_PARENTCHANGElaEVENT_OBJECT_HELPCHANGElaEVENT_OBJECT_DEFACTIONCHANGElaEVENT_OBJECT_ACCELERATORCHANGEaSOUND_SYSTEM_STARTUPaSOUND_SYSTEM_SHUTDOWNaSOUND_SYSTEM_BEEPaSOUND_SYSTEM_ERRORaSOUND_SYSTEM_QUESTIONaSOUND_SYSTEM_WARNINGaSOUND_SYSTEM_INFORMATIONaSOUND_SYSTEM_MAXIMIZEaSOUND_SYSTEM_MINIMIZEaSOUND_SYSTEM_RESTOREUPaSOUND_SYSTEM_RESTOREDOWNaSOUND_SYSTEM_APPSTARTaSOUND_SYSTEM_FAULTaSOUND_SYSTEM_APPENDaSOUND_SYSTEM_MENUCOMMANDaSOUND_SYSTEM_MENUPOPUPaCSOUND_SYSTEMaALERT_SYSTEM_INFORMATIONALaALERT_SYSTEM_WARNINGaALERT_SYSTEM_ERRORaALERT_SYSTEM_QUERYaALERT_SYSTEM_CRITICALaCALERT_SYSTEMaWINEVENT_OUTOFCONTEXTaWINEVENT_SKIPOWNTHREADaWINEVENT_SKIPOWNPROCESSaWINEVENT_INCONTEXTaGUI_CARETBLINKINGaGUI_INMOVESIZEaGUI_INMENUMODEaGUI_SYSTEMMENUMODEaGUI_POPUPMENUMODEaSTATE_SYSTEM_UNAVAILABLEaSTATE_SYSTEM_SELECTEDaSTATE_SYSTEM_FOCUSEDaSTATE_SYSTEM_PRESSEDaSTATE_SYSTEM_CHECKEDaSTATE_SYSTEM_MIXEDaSTATE_SYSTEM_READONLYaSTATE_SYSTEM_HOTTRACKEDaSTATE_SYSTEM_DEFAULTaSTATE_SYSTEM_EXPANDEDaSTATE_SYSTEM_COLLAPSEDaSTATE_SYSTEM_BUSYaSTATE_SYSTEM_FLOATINGaSTATE_SYSTEM_MARQUEEDaSTATE_SYSTEM_ANIMATEDaSTATE_SYSTEM_INVISIBLEaSTATE_SYSTEM_OFFSCREENaSTATE_SYSTEM_SIZEABLEaSTATE_SYSTEM_MOVEABLEaSTATE_SYSTEM_SELFVOICINGaSTATE_SYSTEM_FOCUSABLEaSTATE_SYSTEM_SELECTABLEaSTATE_SYSTEM_LINKEDaSTATE_SYSTEM_TRAVERSEDaSTATE_SYSTEM_MULTISELECTABLEaSTATE_SYSTEM_EXTSELECTABLEaSTATE_SYSTEM_ALERT_LOWaSTATE_SYSTEM_ALERT_MEDIUMaSTATE_SYSTEM_ALERT_HIGHqaSTATE_SYSTEM_VALIDaCCHILDREN_TITLEBARaCCHILDREN_SCROLLBARaCURSOR_SHOWINGaWS_ACTIVECAPTIONaGA_MICaGA_PARENTaGA_ROOTaGA_ROOTOWNERaGA_MACaBF_LEFTaBF_TOPaBF_RIGHTaBF_BOTTOMaBF_TOPLEFTaBF_TOPRIGHTaBF_BOTTOMLEFTaBF_BOTTOMRIGHTaBF_RECTaBF_DIAGONALaBF_DIAGONAL_ENDTOPRIGHTaBF_DIAGONAL_ENDTOPLEFTaBF_DIAGONAL_ENDBOTTOMLEFTaBF_DIAGONAL_ENDBOTTOMRIGHTaBF_MIDDLEaBF_SOFTaBF_ADJUSTaBF_FLATaBF_MONOaDFC_CAPTIONaDFC_MENUaDFC_SCROLLaDFC_BUTTONaDFC_POPUPMENUaDFCS_CAPTIONCLOSEaDFCS_CAPTIONMINaDFCS_CAPTIONMAXaDFCS_CAPTIONRESTOREaDFCS_CAPTIONHELPaDFCS_MENUARROWaDFCS_MENUCHECKaDFCS_MENUBULLETaDFCS_MENUARROWRIGHTaDFCS_SCROLLUPaDFCS_SCROLLDOWNaDFCS_SCROLLLEFTaDFCS_SCROLLRIGHTaDFCS_SCROLLCOMBOBOXaDFCS_SCROLLSIZEGRIPaDFCS_SCROLLSIZEGRIPRIGHTaDFCS_BUTTONCHECKaDFCS_BUTTONRADIOIMAGEaDFCS_BUTTONRADIOMASKaDFCS_BUTTONRADIOaDFCS_BUTTON3STATEaDFCS_BUTTONPUSHaDFCS_INACTIVEaDFCS_PUSHEDaDFCS_CHECKEDaDFCS_TRANSPARENTaDFCS_HOTaDFCS_ADJUSTRECTaDFCS_FLATaDFCS_MONOaDC_ACTIVEaDC_SMALLCAPaDC_ICONaDC_TEXTaDC_INBUTTONaDC_GRADIENTaIDANI_OPENaIDANI_CLOSEaIDANI_CAPTIONaCF_TEXTaCF_BITMAPaCF_METAFILEPICTaCF_SYLKaCF_DIFaCF_TIFFaCF_OEMTEXTaCF_DIBaCF_PALETTEaCF_PENDATAaCF_RIFFaCF_WAVEaCF_UNICODETEXTaCF_ENHMETAFILEaCF_HDROPaCF_LOCALEaCF_DIBV5aCF_MAXaCF_OWNERDISPLAYaCF_DSPTEXTaCF_DSPBITMAPaCF_DSPMETAFILEPICTlaCF_DSPENHMETAFILEaCF_PRIVATEFIRSTlaCF_PRIVATELASTaCF_GDIOBJFIRSTaCF_GDIOBJLASTaFVIRTKEYaFNOINVERTaFSHIFTaFCONTROLaFALTaWPF_SETMINPOSITIONaWPF_RESTORETOMAXIMIZEDaODT_MENUaODT_LISTBOXaODT_COMBOBOXaODT_BUTTONaODT_STATICaODA_DRAWENTIREaODA_SELECTaODA_FOCUSaODS_SELECTEDaODS_GRAYEDaODS_DISABLEDaODS_CHECKEDaODS_FOCUSaODS_DEFAULTaODS_COMBOBOXEDITaODS_HOTLIGHTaODS_INACTIVEaPM_NOREMOVEaPM_REMOVEaPM_NOYIELDaMOD_ALTaMOD_CONTROLaMOD_SHIFTaMOD_WINaIDHOT_SNAPWINDOWaIDHOT_SNAPDESKTOPaENDSESSION_LOGOFFaEWX_LOGOFFaEWX_SHUTDOWNaEWX_REBOOTaEWX_FORCEaEWX_POWEROFFaEWX_FORCEIFHUNGaBSM_ALLCOMPONENTSaBSM_VXDSaBSM_NETDRIVERaBSM_INSTALLABLEDRIVERSaBSM_APPLICATIONSaBSM_ALLDESKTOPSaBSF_QUERYaBSF_IGNORECURRENTTASKaBSF_FLUSHDISKaBSF_NOHANGaBSF_POSTMESSAGEaBSF_FORCEIFHUNGaBSF_NOTIMEOUTIFNOTHUNGqDQMBaBROADCAST_QUERY_DENYaDBWF_LPARAMPOINTERaSWP_NOSIZEaSWP_NOMOVEaSWP_NOZORDERaSWP_NOREDRAWaSWP_NOACTIVATEaSWP_FRAMECHANGEDaSWP_SHOWWINDOWaSWP_HIDEWINDOWaSWP_NOCOPYBITSaSWP_NOOWNERZORDERaSWP_NOSENDCHANGINGaSWP_DRAWFRAMEaSWP_NOREPOSITIONaSWP_DEFERERASEaSWP_ASYNCWINDOWPOSaDLGWINDOWEXTRAaKEYEVENTF_EXTENDEDKEYaKEYEVENTF_KEYUPaKEYEVENTF_UNICODEaKEYEVENTF_SCANCODEaMOUSEEVENTF_MOVEaMOUSEEVENTF_LEFTDOWNaMOUSEEVENTF_LEFTUPaMOUSEEVENTF_RIGHTDOWNaMOUSEEVENTF_RIGHTUPaMOUSEEVENTF_MIDDLEDOWNaMOUSEEVENTF_MIDDLEUPaMOUSEEVENTF_HWHEELaMOUSEEVENTF_MOVE_NOCOALESCEaMOUSEEVENTF_VIRTUALDESKaMOUSEEVENTF_ABSOLUTEaINPUT_MOUSEaINPUT_KEYBOARDaINPUT_HARDWAREaMWMO_WAITALLaMWMO_ALERTABLEaMWMO_INPUTAVAILABLEaQS_KEYaQS_MOUSEMOVEaQS_MOUSEBUTTONaQS_POSTMESSAGEaQS_TIMERaQS_PAINTaQS_SENDMESSAGEaQS_HOTKEYaQS_MOUSEaQS_INPUTaQS_ALLEVENTSaQS_ALLINPUTaIMN_CLOSESTATUSWINDOWaIMN_OPENSTATUSWINDOWaIMN_CHANGECANDIDATEaIMN_CLOSECANDIDATEaIMN_OPENCANDIDATEaIMN_SETCONVERSIONMODEaIMN_SETSENTENCEMODEaIMN_SETOPENSTATUSaIMN_SETCANDIDATEPOSaIMN_SETCOMPOSITIONFONTaIMN_SETCOMPOSITIONWINDOWaIMN_SETSTATUSWINDOWPOSaIMN_GUIDELINEaIMN_PRIVATEaHELP_CONTEXTaHELP_QUITaHELP_INDEXaHELP_CONTENTSaHELP_HELPONHELPaHELP_SETINDEXaHELP_SETCONTENTSaHELP_CONTEXTPOPUPaHELP_FORCEFILEaHELP_KEYaHELP_COMMANDaHELP_PARTIALKEYaHELP_MULTIKEYaHELP_SETWINPOSaHELP_CONTEXTMENUaHELP_FINDERaHELP_WM_HELPaHELP_SETPOPUP_POSaHELP_TCARDaHELP_TCARD_DATAaHELP_TCARD_OTHER_CALLERloaIDH_NO_HELPloaIDH_MISSING_CONTEXTloaIDH_GENERIC_HELP_BUTTONloaIDH_OKloaIDH_CANCELloaIDH_HELPaGR_GDIOBJECTSaGR_USEROBJECTSl aSRCCOPYlaSRCPAINTlaSRCANDlFfaSRCINVERTl(DaSRCERASEl3aNOTSRCCOPYlaNOTSRCERASElaMERGECOPYl&aMERGEPAINTl!aPATCOPYl
aPATPAINTlIZaPATINVERTlUaDSTINVERTaBLACKNESSlbaWHITENESSaR2_BLACKaR2_NOTMERGEPENaR2_MASKNOTPENaR2_NOTCOPYPENaR2_MASKPENNOTaR2_NOTaR2_XORPENaR2_NOTMASKPENaR2_MASKPENaR2_NOTXORPENaR2_NOPaR2_MERGENOTPENaR2_COPYPENaR2_MERGEPENNOTaR2_MERGEPENaR2_WHITEaR2_LASTaGDI_ERRORaERRORaNULLREGIONaSIMPLEREGIONaCOMPLEXREGIONaRGN_ERRORaRGN_ANDaRGN_ORaRGN_XORaRGN_DIFFaRGN_COPYaRGN_MINaRGN_MAXaBLACKONWHITEaWHITEONBLACKaCOLORONCOLORaHALFTONEaMAXSTRETCHBLTMODEaSTRETCH_ANDSCANSaSTRETCH_ORSCANSaSTRETCH_DELETESCANSaSTRETCH_HALFTONEaALTERNATEaWINDINGaPOLYFILL_LASTaLAYOUT_RTLaLAYOUT_BTTaLAYOUT_VBHaLAYOUT_ORIENTATIONMASKaLAYOUT_BITMAPORIENTATIONPRESERVEDaTA_NOUPDATECPaTA_UPDATECPaTA_LEFTaTA_RIGHTaTA_CENTERaTA_TOPaTA_BOTTOMaTA_BASELINEaTA_MASKaVTA_BASELINEaVTA_LEFTaVTA_RIGHTaVTA_CENTERaVTA_BOTTOMaVTA_TOPaETO_GRAYEDaETO_OPAQUEaETO_CLIPPEDaASPECT_FILTERINGaDCB_RESETaDCB_ACCUMULATEaDCB_DIRTYaDCB_SETaDCB_ENABLEaDCB_DISABLEaMETA_SETBKCOLORaMETA_SETBKMODEaMETA_SETMAPMODEaMETA_SETROP2aMETA_SETRELABSaMETA_SETPOLYFILLMODEaMETA_SETSTRETCHBLTMODEaMETA_SETTEXTCHAREXTRAaMETA_SETTEXTCOLORaMETA_SETTEXTJUSTIFICATIONlaMETA_SETWINDOWORGlaMETA_SETWINDOWEXTl
aMETA_SETVIEWPORTORGlaMETA_SETVIEWPORTEXTlaMETA_OFFSETWINDOWORGlaMETA_SCALEWINDOWEXTaMETA_OFFSETVIEWPORTORGlaMETA_SCALEVIEWPORTEXTaMETA_LINETOaMETA_MOVETOlaMETA_EXCLUDECLIPRECTlaMETA_INTERSECTCLIPRECTlaMETA_ARClaMETA_ELLIPSElaMETA_FLOODFILLlaMETA_PIElaMETA_RECTANGLElaMETA_ROUNDRECTlaMETA_PATBLTaMETA_SAVEDClaMETA_SETPIXELaMETA_OFFSETCLIPRGNl!aMETA_TEXTOUTl"aMETA_BITBLTl#aMETA_STRETCHBLTl$aMETA_POLYGONl%aMETA_POLYLINEl&aMETA_ESCAPEl'aMETA_RESTOREDCaMETA_FILLREGIONl)aMETA_FRAMEREGIONl*aMETA_INVERTREGIONl+aMETA_PAINTREGIONaMETA_SELECTCLIPREGIONl-aMETA_SELECTOBJECTl.aMETA_SETTEXTALIGNl0aMETA_CHORDaMETA_SETMAPPERFLAGSl2
aMETA_EXTTEXTOUTl3
aMETA_SETDIBTODEVaMETA_SELECTPALETTEaMETA_REALIZEPALETTEl6aMETA_ANIMATEPALETTEaMETA_SETPALENTRIESl8aMETA_POLYPOLYGONl9aMETA_RESIZEPALETTEl@aMETA_DIBBITBLTlAaMETA_DIBSTRETCHBLTaMETA_DIBCREATEPATTERNBRUSHlCaMETA_STRETCHDIBlHaMETA_EXTFLOODFILLlaMETA_DELETEOBJECTaMETA_CREATEPALETTElaMETA_CREATEPATTERNBRUSHlaMETA_CREATEPENINDIRECTlaMETA_CREATEFONTINDIRECTlaMETA_CREATEBRUSHINDIRECTlaMETA_CREATEREGIONaFILE_BEGINaFILE_CURRENTaFILE_ENDaFILE_FLAG_WRITE_THROUGHaFILE_FLAG_OVERLAPPEDaFILE_FLAG_NO_BUFFERINGaFILE_FLAG_RANDOM_ACCESSaFILE_FLAG_SEQUENTIAL_SCANaFILE_FLAG_DELETE_ON_CLOSEaFILE_FLAG_BACKUP_SEMANTICSaFILE_FLAG_POSIX_SEMANTICSaCREATE_NEWaCREATE_ALWAYSaOPEN_EXISTINGaOPEN_ALWAYSaTRUNCATE_EXISTINGaPIPE_ACCESS_INBOUNDaPIPE_ACCESS_OUTBOUNDaPIPE_ACCESS_DUPLEXaPIPE_CLIENT_ENDaPIPE_SERVER_ENDaPIPE_WAITaPIPE_NOWAITaPIPE_READMODE_BYTEaPIPE_READMODE_MESSAGEaPIPE_TYPE_BYTEaPIPE_TYPE_MESSAGEaPIPE_UNLIMITED_INSTANCESaSECURITY_CONTEXT_TRACKINGaSECURITY_EFFECTIVE_ONLYaSECURITY_SQOS_PRESENTaSECURITY_VALID_SQOS_FLAGSaDTR_CONTROL_DISABLEaDTR_CONTROL_ENABLEaDTR_CONTROL_HANDSHAKEaRTS_CONTROL_DISABLEaRTS_CONTROL_ENABLEaRTS_CONTROL_HANDSHAKEaRTS_CONTROL_TOGGLEaGMEM_FIXEDaGMEM_MOVEABLEaGMEM_NOCOMPACTaGMEM_NODISCARDaGMEM_ZEROINITaGMEM_MODIFYaGMEM_DISCARDABLEaGMEM_NOT_BANKEDaGMEM_SHAREaGMEM_DDESHAREaGMEM_NOTIFYaGMEM_LOWERlraGMEM_VALID_FLAGSaGMEM_INVALID_HANDLEaGHNDaGPTRaGMEM_DISCARDEDaGMEM_LOCKCOUNTaLMEM_FIXEDaLMEM_MOVEABLEaLMEM_NOCOMPACTaLMEM_NODISCARDaLMEM_ZEROINITaLMEM_MODIFYaLMEM_DISCARDABLElraLMEM_VALID_FLAGSaLMEM_INVALID_HANDLEaLHNDaLPTRaNONZEROLHNDaNONZEROLPTRaLMEM_DISCARDEDaLMEM_LOCKCOUNTaDEBUG_PROCESSaDEBUG_ONLY_THIS_PROCESSaCREATE_SUSPENDEDaDETACHED_PROCESSaCREATE_NEW_CONSOLEaNORMAL_PRIORITY_CLASSaIDLE_PRIORITY_CLASSaHIGH_PRIORITY_CLASSaREALTIME_PRIORITY_CLASSaCREATE_NEW_PROCESS_GROUPaCREATE_UNICODE_ENVIRONMENTaCREATE_SEPARATE_WOW_VDMaCREATE_SHARED_WOW_VDMaCREATE_DEFAULT_ERROR_MODEaCREATE_NO_WINDOWaPROFILE_USERaPROFILE_KERNELaPROFILE_SERVERaTHREAD_BASE_PRIORITY_LOWRTaTHREAD_BASE_PRIORITY_MAXaTHREAD_BASE_PRIORITY_MINlaTHREAD_BASE_PRIORITY_IDLEaTHREAD_PRIORITY_LOWESTaTHREAD_PRIORITY_BELOW_NORMALaTHREAD_PRIORITY_HIGHESTaTHREAD_PRIORITY_ABOVE_NORMALaTHREAD_PRIORITY_ERROR_RETURNaTHREAD_PRIORITY_TIME_CRITICALaTHREAD_PRIORITY_IDLEaTHREAD_PRIORITY_NORMALaTHREAD_MODE_BACKGROUND_BEGINaTHREAD_MODE_BACKGROUND_ENDaEXCEPTION_DEBUG_EVENTaCREATE_THREAD_DEBUG_EVENTaCREATE_PROCESS_DEBUG_EVENTaEXIT_THREAD_DEBUG_EVENTaEXIT_PROCESS_DEBUG_EVENTaLOAD_DLL_DEBUG_EVENTaUNLOAD_DLL_DEBUG_EVENTaOUTPUT_DEBUG_STRING_EVENTaRIP_EVENTaDRIVE_UNKNOWNaDRIVE_NO_ROOT_DIRaDRIVE_REMOVABLEaDRIVE_FIXEDaDRIVE_REMOTEaDRIVE_CDROMaDRIVE_RAMDISKaFILE_TYPE_UNKNOWNaFILE_TYPE_DISKaFILE_TYPE_CHARaFILE_TYPE_PIPEaFILE_TYPE_REMOTEaNOPARITYaODDPARITYaEVENPARITYaMARKPARITYaSPACEPARITYaONESTOPBITaONE5STOPBITSaTWOSTOPBITSaCBR_110aCBR_300aCBR_600laCBR_1200l`aCBR_2400laCBR_4800l%aCBR_9600l@8aCBR_14400lKaCBR_19200laCBR_38400laCBR_56000laCBR_57600laCBR_115200laCBR_128000laCBR_256000aS_QUEUEEMPTYaS_THRESHOLDaS_ALLTHRESHOLDaS_NORMALaS_LEGATOaS_STACCATOaNMPWAIT_WAIT_FOREVERaNMPWAIT_NOWAITaNMPWAIT_USE_DEFAULT_WAITaOF_READaOF_WRITEaOF_READWRITEaOF_SHARE_COMPATaOF_SHARE_EXCLUSIVEaOF_SHARE_DENY_WRITEaOF_SHARE_DENY_READaOF_SHARE_DENY_NONEaOF_PARSEaOF_DELETEaOF_VERIFYaOF_CANCELaOF_CREATEaOF_PROMPTaOF_EXISTaOF_REOPENaOFS_MAXPATHNAMEaMAXINTATOMaPROCESS_HEAP_REGIONaPROCESS_HEAP_UNCOMMITTED_RANGEaPROCESS_HEAP_ENTRY_BUSYaPROCESS_HEAP_ENTRY_MOVEABLEaPROCESS_HEAP_ENTRY_DDESHAREaSCS_32BIT_BINARYaSCS_DOS_BINARYaSCS_WOW_BINARYaSCS_PIF_BINARYaSCS_POSIX_BINARYaSCS_OS216_BINARYaSEM_FAILCRITICALERRORSaSEM_NOGPFAULTERRORBOXaSEM_NOALIGNMENTFAULTEXCEPTaSEM_NOOPENFILEERRORBOXaLOCKFILE_FAIL_IMMEDIATELYaLOCKFILE_EXCLUSIVE_LOCKaHANDLE_FLAG_INHERITaHANDLE_FLAG_PROTECT_FROM_CLOSEaHINSTANCE_ERRORaGET_TAPE_MEDIA_INFORMATIONaGET_TAPE_DRIVE_INFORMATIONaSET_TAPE_MEDIA_INFORMATIONaSET_TAPE_DRIVE_INFORMATIONaFORMAT_MESSAGE_ALLOCATE_BUFFERaFORMAT_MESSAGE_IGNORE_INSERTSaFORMAT_MESSAGE_FROM_STRINGaFORMAT_MESSAGE_FROM_HMODULEaFORMAT_MESSAGE_FROM_SYSTEMaFORMAT_MESSAGE_ARGUMENT_ARRAYaFORMAT_MESSAGE_MAX_WIDTH_MASKaBACKUP_INVALIDaBACKUP_DATAaBACKUP_EA_DATAaBACKUP_SECURITY_DATAaBACKUP_ALTERNATE_DATAaBACKUP_LINKaBACKUP_PROPERTY_DATAaBACKUP_OBJECT_IDaBACKUP_REPARSE_DATAaBACKUP_SPARSE_BLOCKaSTREAM_NORMAL_ATTRIBUTEaSTREAM_MODIFIED_WHEN_READaSTREAM_CONTAINS_SECURITYaSTREAM_CONTAINS_PROPERTIESaSTARTF_USESHOWWINDOWaSTARTF_USESIZEaSTARTF_USEPOSITIONaSTARTF_USECOUNTCHARSaSTARTF_USEFILLATTRIBUTEaSTARTF_FORCEONFEEDBACKaSTARTF_FORCEOFFFEEDBACKaSTARTF_USESTDHANDLESaSTARTF_USEHOTKEYaSHUTDOWN_NORETRYaDONT_RESOLVE_DLL_REFERENCESaLOAD_LIBRARY_AS_DATAFILEaLOAD_WITH_ALTERED_SEARCH_PATHaDDD_RAW_TARGET_PATHaDDD_REMOVE_DEFINITIONaDDD_EXACT_MATCH_ON_REMOVEaMOVEFILE_REPLACE_EXISTINGaMOVEFILE_COPY_ALLOWEDaMOVEFILE_DELAY_UNTIL_REBOOTaMAX_COMPUTERNAME_LENGTHaLOGON32_LOGON_INTERACTIVEaLOGON32_LOGON_NETWORKaLOGON32_LOGON_BATCHaLOGON32_LOGON_SERVICEaLOGON32_LOGON_UNLOCKaLOGON32_LOGON_NETWORK_CLEARTEXTaLOGON32_LOGON_NEW_CREDENTIALSaLOGON32_PROVIDER_DEFAULTaLOGON32_PROVIDER_WINNT35aLOGON32_PROVIDER_WINNT40aLOGON32_PROVIDER_WINNT50aVER_PLATFORM_WIN32saVER_PLATFORM_WIN32_WINDOWSaVER_PLATFORM_WIN32_NTaTC_NORMALaTC_HARDERRaTC_GP_TRAPaTC_SIGNALaAC_LINE_OFFLINEaAC_LINE_ONLINEaAC_LINE_BACKUP_POWERaAC_LINE_UNKNOWNaBATTERY_FLAG_HIGHaBATTERY_FLAG_LOWaBATTERY_FLAG_CRITICALaBATTERY_FLAG_CHARGINGaBATTERY_FLAG_NO_BATTERYaBATTERY_FLAG_UNKNOWNaBATTERY_PERCENTAGE_UNKNOWNaBATTERY_LIFE_UNKNOWNacchTextLimitDefaultlaEN_MSGFILTERlaEN_REQUESTRESIZElaEN_SELCHANGElaEN_DROPFILESlaEN_PROTECTEDlaEN_CORRECTTEXTlaEN_STOPNOUNDOlaEN_IMECHANGElaEN_SAVECLIPBOARDlaEN_OLEOPFAILEDaENM_NONEaENM_CHANGEaENM_UPDATEaENM_SCROLLaENM_KEYEVENTSaENM_MOUSEEVENTSaENM_REQUESTRESIZEaENM_SELCHANGEaENM_DROPFILESaENM_PROTECTEDaENM_CORRECTTEXTaENM_IMECHANGEaES_SAVESELaES_SUNKENaES_DISABLENOSCROLLaES_SELECTIONBARaES_EX_NOCALLOLEINITaES_VERTICALaES_NOIMEaES_SELFIMEaECO_AUTOWORDSELECTIONaECO_AUTOVSCROLLaECO_AUTOHSCROLLaECO_NOHIDESELaECO_READONLYaECO_WANTRETURNaECO_SAVESELaECO_SELECTIONBARaECO_VERTICALaECOOP_SETaECOOP_ORaECOOP_ANDaECOOP_XORaWB_CLASSIFYaWB_MOVEWORDLEFTaWB_MOVEWORDRIGHTaWB_LEFTBREAKaWB_RIGHTBREAKaWB_MOVEWORDPREVaWB_MOVEWORDNEXTaWB_PREVBREAKaWB_NEXTBREAKaPC_FOLLOWINGaPC_LEADINGaPC_OVERFLOWaPC_DELIMITERaWBF_WORDWRAPaWBF_WORDBREAKaWBF_OVERFLOWaWBF_LEVEL1aWBF_LEVEL2aWBF_CUSTOMaCFM_BOLDaCFM_ITALICaCFM_UNDERLINEaCFM_STRIKEOUTaCFM_PROTECTEDaCFM_SIZEaCFM_COLORaCFM_FACEaCFM_OFFSETaCFM_CHARSETaCFE_BOLDaCFE_ITALICaCFE_UNDERLINEaCFE_STRIKEOUTaCFE_PROTECTEDaCFE_AUTOCOLORlfayHeightCharPtsMostaSCF_SELECTIONaSCF_WORDaSF_TEXTaSF_RTFaSF_RTFNOOBJSaSF_TEXTIZEDaSFF_SELECTIONaSFF_PLAINRTFaMAX_TAB_STOPSlalDefaultTabaPFM_STARTINDENTaPFM_RIGHTINDENTaPFM_OFFSETaPFM_ALIGNMENTaPFM_TABSTOPSaPFM_NUMBERINGaPFM_OFFSETINDENTaPFN_BULLETaPFA_LEFTaPFA_RIGHTaPFA_CENTERaSEL_EMPTYaSEL_TEXTaSEL_OBJECTaSEL_MULTICHARaSEL_MULTIOBJECTaOLEOP_DOVERBuRich Text FormataCF_RTFuRich Text Format Without ObjectsaCF_RTFNOOBJSuRichEdit Text and ObjectsaCF_RETEXTOBJaRIGHT_ALT_PRESSEDaLEFT_ALT_PRESSEDaRIGHT_CTRL_PRESSEDaLEFT_CTRL_PRESSEDaSHIFT_PRESSEDaNUMLOCK_ONaSCROLLLOCK_ONaCAPSLOCK_ONaENHANCED_KEYaNLS_DBCSCHARaNLS_ALPHANUMERICaNLS_KATAKANAaNLS_HIRAGANAaNLS_ROMANaNLS_IME_CONVERSIONaNLS_IME_DISABLEaFROM_LEFT_1ST_BUTTON_PRESSEDaRIGHTMOST_BUTTON_PRESSEDaFROM_LEFT_2ND_BUTTON_PRESSEDaFROM_LEFT_3RD_BUTTON_PRESSEDaFROM_LEFT_4TH_BUTTON_PRESSEDaCTRL_C_EVENTaCTRL_BREAK_EVENTaCTRL_CLOSE_EVENTaCTRL_LOGOFF_EVENTaCTRL_SHUTDOWN_EVENTaMOUSE_MOVEDaDOUBLE_CLICKaMOUSE_WHEELEDaPSM_SETCURSELaPSM_REMOVEPAGEaPSM_ADDPAGEaPSM_CHANGEDaPSM_RESTARTWINDOWSaPSM_REBOOTSYSTEMaPSM_CANCELTOCLOSEaPSM_QUERYSIBLINGSaPSM_UNCHANGEDaPSM_APPLYaPSM_SETTITLEAaPSM_SETTITLEWaPSM_SETWIZBUTTONSaPSM_PRESSBUTTONaPSM_SETCURSELIDaPSM_SETFINISHTEXTAaPSM_SETFINISHTEXTWaPSM_GETTABCONTROLaPSM_ISDIALOGMESSAGEaPSM_GETCURRENTPAGEHWNDaPSM_INSERTPAGEaPSM_SETHEADERTITLEAaPSM_SETHEADERTITLEWaPSM_SETHEADERSUBTITLEAaPSM_SETHEADERSUBTITLEWaPSM_HWNDTOINDEXaPSM_INDEXTOHWNDaPSM_PAGETOINDEXaPSM_INDEXTOPAGEaPSM_IDTOINDEXaPSM_INDEXTOIDaPSM_GETRESULTaPSM_RECALCPAGESIZESaNameUnknownaNameFullyQualifiedDNaNameSamCompatibleaNameDisplayaNameUniqueIdaNameCanonicalaNameUserPrincipalaNameCanonicalExaNameServicePrincipalaNameDnsDomainaComputerNameNetBIOSaComputerNameDnsHostnameaComputerNameDnsDomainaComputerNameDnsFullyQualifiedaComputerNamePhysicalNetBIOSaComputerNamePhysicalDnsHostnameaComputerNamePhysicalDnsDomainaComputerNamePhysicalDnsFullyQualifiedaLWA_COLORKEYaLWA_ALPHAaULW_COLORKEYaULW_ALPHAaULW_OPAQUEaTRUEaFALSEaMAX_PATHaAC_SRC_OVERaAC_SRC_ALPHAaGRADIENT_FILL_RECT_HaGRADIENT_FILL_RECT_VaGRADIENT_FILL_TRIANGLEaGRADIENT_FILL_OP_FLAGaMM_WORKING_SET_MAX_HARD_ENABLEaMM_WORKING_SET_MAX_HARD_DISABLEaMM_WORKING_SET_MIN_HARD_ENABLEaMM_WORKING_SET_MIN_HARD_DISABLEaVOLUME_NAME_DOSaVOLUME_NAME_GUIDaVOLUME_NAME_NTaVOLUME_NAME_NONEaFILE_NAME_NORMALIZEDaFILE_NAME_OPENEDaDEVICE_NOTIFY_WINDOW_HANDLEaDEVICE_NOTIFY_SERVICE_HANDLEaBSF_MSGSRV32ISOKaBSF_MSGSRV32ISOK_BITaDBT_APPYBEGINaDBT_APPYENDaDBT_DEVNODES_CHANGEDaDBT_QUERYCHANGECONFIGaDBT_CONFIGCHANGEDaDBT_CONFIGCHANGECANCELEDaDBT_MONITORCHANGEaDBT_SHELLLOGGEDONaDBT_CONFIGMGAPI32aDBT_VXDINITCOMPLETElAaDBT_VOLLOCKQUERYLOCKlBaDBT_VOLLOCKLOCKTAKENlCaDBT_VOLLOCKLOCKFAILEDlDaDBT_VOLLOCKQUERYUNLOCKlEaDBT_VOLLOCKLOCKRELEASEDlFaDBT_VOLLOCKUNLOCKFAILEDaLOCKP_ALLOW_WRITESaLOCKP_FAIL_WRITESaLOCKP_FAIL_MEM_MAPPINGaLOCKP_ALLOW_MEM_MAPPINGaLOCKP_USER_MASKaLOCKP_LOCK_FOR_FORMATaLOCKF_LOGICAL_LOCKaLOCKF_PHYSICAL_LOCKaDBT_NO_DISK_SPACEaDBT_LOW_DISK_SPACEaDBT_CONFIGMGPRIVATEaDBT_DEVICEARRIVALaDBT_DEVICEQUERYREMOVEaDBT_DEVICEQUERYREMOVEFAILEDaDBT_DEVICEREMOVEPENDINGaDBT_DEVICEREMOVECOMPLETEaDBT_DEVICETYPESPECIFICaDBT_CUSTOMEVENTaDBT_DEVTYP_OEMaDBT_DEVTYP_DEVNODEaDBT_DEVTYP_VOLUMEaDBT_DEVTYP_PORTaDBT_DEVTYP_NETaDBT_DEVTYP_DEVICEINTERFACEaDBT_DEVTYP_HANDLEaDBTF_MEDIAaDBTF_NETaDBTF_RESOURCEaDBTF_XPORTaDBTF_SLOWNETlaDBT_VPOWERDAPIaDBT_USERDEFINEDuwin32con.pyu<module win32con>TargbTaOrdinalTwiTalgidu.win32ui-preLoada__doc__a__file__a__spec__aoriginahas_locationa__cached__apywin32_system32luwin32ui-preLoad.pyu<module win32ui-preLoad>u.winerrorAqllllllaFACILITY_NT_BITuError related constants for win32

Generated by h2py from winerror.h
a__doc__a__file__a__spec__aoriginahas_locationa__cached__qaTRUST_E_PROVIDER_UNKNOWNqaTRUST_E_ACTION_UNKNOWNqaTRUST_E_SUBJECT_FORM_UNKNOWNqaTRUST_E_SUBJECT_NOT_TRUSTEDl3aFACILITY_WINRMl$aFACILITY_WINDOWSUPDATElPaFACILITY_WINDOWS_DEFENDERlaFACILITY_WINDOWS_CElaFACILITY_WINDOWSlaFACILITY_URTlaFACILITY_UMIl)aFACILITY_TPM_SOFTWAREl(aFACILITY_TPM_SERVICESlaFACILITY_SXSlaFACILITY_STORAGEl"aFACILITY_STATE_MANAGEMENTlaFACILITY_SSPIaFACILITY_SCARDl'aFACILITY_SHELLlaFACILITY_SETUPAPIaFACILITY_SECURITYaFACILITY_RPCl0aFACILITY_PLAlaFACILITY_WIN32l
aFACILITY_CONTROLaFACILITY_NULLl4aFACILITY_NDISl#aFACILITY_METADIRECTORYlaFACILITY_MSMQl
aFACILITY_MEDIASERVERlaFACILITY_INTERNETlaFACILITY_ITFl5aFACILITY_USERMODE_HYPERVISORlaFACILITY_HTTPl&aFACILITY_GRAPHICSl2aFACILITY_FWPl1aFACILITY_FVEaFACILITY_USERMODE_FILTER_MANAGERlaFACILITY_DPLAYlaFACILITY_DISPATCHl%aFACILITY_DIRECTORYSERVICEl!aFACILITY_CONFIGURATIONlaFACILITY_COMPLUSlaFACILITY_USERMODE_COMMONLOGl6aFACILITY_CMIlaFACILITY_CERTl aFACILITY_BACKGROUNDCOPYlaFACILITY_ACSlaFACILITY_AAFaERROR_SUCCESSaNO_ERRORaS_OKaS_FALSEaERROR_INVALID_FUNCTIONaERROR_FILE_NOT_FOUNDaERROR_PATH_NOT_FOUNDaERROR_TOO_MANY_OPEN_FILESlaERROR_ACCESS_DENIEDlaERROR_INVALID_HANDLEaERROR_ARENA_TRASHEDaERROR_NOT_ENOUGH_MEMORYaERROR_INVALID_BLOCKaERROR_BAD_ENVIRONMENTaERROR_BAD_FORMATaERROR_INVALID_ACCESSaERROR_INVALID_DATAaERROR_OUTOFMEMORYaERROR_INVALID_DRIVEaERROR_CURRENT_DIRECTORYaERROR_NOT_SAME_DEVICEaERROR_NO_MORE_FILESaERROR_WRITE_PROTECTaERROR_BAD_UNITaERROR_NOT_READYaERROR_BAD_COMMANDaERROR_CRCaERROR_BAD_LENGTHaERROR_SEEKaERROR_NOT_DOS_DISKlaERROR_SECTOR_NOT_FOUNDlaERROR_OUT_OF_PAPERlaERROR_WRITE_FAULTlaERROR_READ_FAULTaERROR_GEN_FAILUREaERROR_SHARING_VIOLATIONaERROR_LOCK_VIOLATIONaERROR_WRONG_DISKaERROR_SHARING_BUFFER_EXCEEDEDaERROR_HANDLE_EOFaERROR_HANDLE_DISK_FULLaERROR_NOT_SUPPORTEDaERROR_REM_NOT_LISTaERROR_DUP_NAMEaERROR_BAD_NETPATHaERROR_NETWORK_BUSYl7aERROR_DEV_NOT_EXISTl8aERROR_TOO_MANY_CMDSl9aERROR_ADAP_HDW_ERRl:aERROR_BAD_NET_RESPl;aERROR_UNEXP_NET_ERRl<aERROR_BAD_REM_ADAPl=aERROR_PRINTQ_FULLl>aERROR_NO_SPOOL_SPACEl?aERROR_PRINT_CANCELLEDl@aERROR_NETNAME_DELETEDlAaERROR_NETWORK_ACCESS_DENIEDlBaERROR_BAD_DEV_TYPElCaERROR_BAD_NET_NAMElDaERROR_TOO_MANY_NAMESlEaERROR_TOO_MANY_SESSlFaERROR_SHARING_PAUSEDlGaERROR_REQ_NOT_ACCEPlHaERROR_REDIR_PAUSEDaERROR_FILE_EXISTSlRaERROR_CANNOT_MAKElSaERROR_FAIL_I24lTaERROR_OUT_OF_STRUCTURESlUaERROR_ALREADY_ASSIGNEDlVaERROR_INVALID_PASSWORDlWaERROR_INVALID_PARAMETERlXaERROR_NET_WRITE_FAULTlYaERROR_NO_PROC_SLOTSldaERROR_TOO_MANY_SEMAPHORESleaERROR_EXCL_SEM_ALREADY_OWNEDlfaERROR_SEM_IS_SETlgaERROR_TOO_MANY_SEM_REQUESTSlhaERROR_INVALID_AT_INTERRUPT_TIMEliaERROR_SEM_OWNER_DIEDljaERROR_SEM_USER_LIMITlkaERROR_DISK_CHANGEllaERROR_DRIVE_LOCKEDlmaERROR_BROKEN_PIPElnaERROR_OPEN_FAILEDloaERROR_BUFFER_OVERFLOWlpaERROR_DISK_FULLlqaERROR_NO_MORE_SEARCH_HANDLESlraERROR_INVALID_TARGET_HANDLEluaERROR_INVALID_CATEGORYlvaERROR_INVALID_VERIFY_SWITCHlwaERROR_BAD_DRIVER_LEVELlxaERROR_CALL_NOT_IMPLEMENTEDlyaERROR_SEM_TIMEOUTlzaERROR_INSUFFICIENT_BUFFERl{aERROR_INVALID_NAMEl|aERROR_INVALID_LEVELl}aERROR_NO_VOLUME_LABELl~aERROR_MOD_NOT_FOUNDlaERROR_PROC_NOT_FOUNDlaERROR_WAIT_NO_CHILDRENlaERROR_CHILD_NOT_COMPLETElaERROR_DIRECT_ACCESS_HANDLElaERROR_NEGATIVE_SEEKlaERROR_SEEK_ON_DEVICElaERROR_IS_JOIN_TARGETlaERROR_IS_JOINEDlaERROR_IS_SUBSTEDlaERROR_NOT_JOINEDlaERROR_NOT_SUBSTEDlaERROR_JOIN_TO_JOINlaERROR_SUBST_TO_SUBSTlaERROR_JOIN_TO_SUBSTlaERROR_SUBST_TO_JOINlaERROR_BUSY_DRIVElaERROR_SAME_DRIVElaERROR_DIR_NOT_ROOTlaERROR_DIR_NOT_EMPTYlaERROR_IS_SUBST_PATHlaERROR_IS_JOIN_PATHlaERROR_PATH_BUSYlaERROR_IS_SUBST_TARGETlaERROR_SYSTEM_TRACElaERROR_INVALID_EVENT_COUNTlaERROR_TOO_MANY_MUXWAITERSlaERROR_INVALID_LIST_FORMATlaERROR_LABEL_TOO_LONGlaERROR_TOO_MANY_TCBSlaERROR_SIGNAL_REFUSEDlaERROR_DISCARDEDlaERROR_NOT_LOCKEDlaERROR_BAD_THREADID_ADDRlaERROR_BAD_ARGUMENTSlaERROR_BAD_PATHNAMElaERROR_SIGNAL_PENDINGlaERROR_MAX_THRDS_REACHEDlaERROR_LOCK_FAILEDlaERROR_BUSYlaERROR_CANCEL_VIOLATIONlaERROR_ATOMIC_LOCKS_NOT_SUPPORTEDlaERROR_INVALID_SEGMENT_NUMBERlaERROR_INVALID_ORDINALlaERROR_ALREADY_EXISTSlaERROR_INVALID_FLAG_NUMBERlaERROR_SEM_NOT_FOUNDlaERROR_INVALID_STARTING_CODESEGlaERROR_INVALID_STACKSEGlaERROR_INVALID_MODULETYPElaERROR_INVALID_EXE_SIGNATURElaERROR_EXE_MARKED_INVALIDlaERROR_BAD_EXE_FORMATlaERROR_ITERATED_DATA_EXCEEDS_64klaERROR_INVALID_MINALLOCSIZElaERROR_DYNLINK_FROM_INVALID_RINGlaERROR_IOPL_NOT_ENABLEDlaERROR_INVALID_SEGDPLlaERROR_AUTODATASEG_EXCEEDS_64klaERROR_RING2SEG_MUST_BE_MOVABLElaERROR_RELOC_CHAIN_XEEDS_SEGLIMlaERROR_INFLOOP_IN_RELOC_CHAINlaERROR_ENVVAR_NOT_FOUNDlaERROR_NO_SIGNAL_SENTlaERROR_FILENAME_EXCED_RANGElaERROR_RING2_STACK_IN_USElaERROR_META_EXPANSION_TOO_LONGlaERROR_INVALID_SIGNAL_NUMBERlaERROR_THREAD_1_INACTIVElaERROR_LOCKEDlaERROR_TOO_MANY_MODULESlaERROR_NESTING_NOT_ALLOWEDlaERROR_EXE_MACHINE_TYPE_MISMATCHlaERROR_EXE_CANNOT_MODIFY_SIGNED_BINARYlaERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARYlaERROR_FILE_CHECKED_OUTlaERROR_CHECKOUT_REQUIREDlaERROR_BAD_FILE_TYPElaERROR_FILE_TOO_LARGElaERROR_FORMS_AUTH_REQUIREDlaERROR_VIRUS_INFECTEDlaERROR_VIRUS_DELETEDlaERROR_PIPE_LOCALlaERROR_BAD_PIPElaERROR_PIPE_BUSYlaERROR_NO_DATAlaERROR_PIPE_NOT_CONNECTEDlaERROR_MORE_DATAlaERROR_VC_DISCONNECTEDlaERROR_INVALID_EA_NAMElaERROR_EA_LIST_INCONSISTENTlaWAIT_TIMEOUTlaERROR_NO_MORE_ITEMSl
aERROR_CANNOT_COPYlaERROR_DIRECTORYlaERROR_EAS_DIDNT_FITlaERROR_EA_FILE_CORRUPTlaERROR_EA_TABLE_FULLlaERROR_INVALID_EA_HANDLElaERROR_EAS_NOT_SUPPORTEDl aERROR_NOT_OWNERl*aERROR_TOO_MANY_POSTSl+aERROR_PARTIAL_COPYl,aERROR_OPLOCK_NOT_GRANTEDl-aERROR_INVALID_OPLOCK_PROTOCOLl.aERROR_DISK_TOO_FRAGMENTEDl/aERROR_DELETE_PENDINGl=aERROR_MR_MID_NOT_FOUNDl>aERROR_SCOPE_NOT_FOUNDl^aERROR_FAIL_NOACTION_REBOOTl_aERROR_FAIL_SHUTDOWNl`aERROR_FAIL_RESTARTlaaERROR_MAX_SESSIONS_REACHEDlaERROR_THREAD_MODE_ALREADY_BACKGROUNDlaERROR_THREAD_MODE_NOT_BACKGROUNDlaERROR_PROCESS_MODE_ALREADY_BACKGROUNDlaERROR_PROCESS_MODE_NOT_BACKGROUNDlaERROR_INVALID_ADDRESSlaERROR_USER_PROFILE_LOADlaERROR_ARITHMETIC_OVERFLOWlaERROR_PIPE_CONNECTEDlaERROR_PIPE_LISTENINGlaERROR_VERIFIER_STOPlaERROR_ABIOS_ERRORlaERROR_WX86_WARNINGlaERROR_WX86_ERRORlaERROR_TIMER_NOT_CANCELEDlaERROR_UNWINDlaERROR_BAD_STACKl aERROR_INVALID_UNWIND_TARGETl!aERROR_INVALID_PORT_ATTRIBUTESl"aERROR_PORT_MESSAGE_TOO_LONGl#aERROR_INVALID_QUOTA_LOWERl$aERROR_DEVICE_ALREADY_ATTACHEDl%aERROR_INSTRUCTION_MISALIGNMENTl&aERROR_PROFILING_NOT_STARTEDl'aERROR_PROFILING_NOT_STOPPEDl(aERROR_COULD_NOT_INTERPRETl)aERROR_PROFILING_AT_LIMITl*aERROR_CANT_WAITl+aERROR_CANT_TERMINATE_SELFl,aERROR_UNEXPECTED_MM_CREATE_ERRl-aERROR_UNEXPECTED_MM_MAP_ERRORl.aERROR_UNEXPECTED_MM_EXTEND_ERRl/aERROR_BAD_FUNCTION_TABLEl0aERROR_NO_GUID_TRANSLATIONl1aERROR_INVALID_LDT_SIZEl3aERROR_INVALID_LDT_OFFSETl4aERROR_INVALID_LDT_DESCRIPTORl5aERROR_TOO_MANY_THREADSl6aERROR_THREAD_NOT_IN_PROCESSl7aERROR_PAGEFILE_QUOTA_EXCEEDEDl8aERROR_LOGON_SERVER_CONFLICTl9aERROR_SYNCHRONIZATION_REQUIREDl:aERROR_NET_OPEN_FAILEDl;aERROR_IO_PRIVILEGE_FAILEDl<aERROR_CONTROL_C_EXITl=aERROR_MISSING_SYSTEMFILEl>aERROR_UNHANDLED_EXCEPTIONl?aERROR_APP_INIT_FAILUREl@aERROR_PAGEFILE_CREATE_FAILEDlAaERROR_INVALID_IMAGE_HASHlBaERROR_NO_PAGEFILElCaERROR_ILLEGAL_FLOAT_CONTEXTlDaERROR_NO_EVENT_PAIRlEaERROR_DOMAIN_CTRLR_CONFIG_ERRORlFaERROR_ILLEGAL_CHARACTERlGaERROR_UNDEFINED_CHARACTERlHaERROR_FLOPPY_VOLUMElIaERROR_BIOS_FAILED_TO_CONNECT_INTERRUPTlJaERROR_BACKUP_CONTROLLERlKaERROR_MUTANT_LIMIT_EXCEEDEDlLaERROR_FS_DRIVER_REQUIREDlMaERROR_CANNOT_LOAD_REGISTRY_FILElNaERROR_DEBUG_ATTACH_FAILEDlOaERROR_SYSTEM_PROCESS_TERMINATEDlPaERROR_DATA_NOT_ACCEPTEDlQaERROR_VDM_HARD_ERRORlRaERROR_DRIVER_CANCEL_TIMEOUTlSaERROR_REPLY_MESSAGE_MISMATCHlTaERROR_LOST_WRITEBEHIND_DATAlUaERROR_CLIENT_SERVER_PARAMETERS_INVALIDlVaERROR_NOT_TINY_STREAMlWaERROR_STACK_OVERFLOW_READlXaERROR_CONVERT_TO_LARGElYaERROR_FOUND_OUT_OF_SCOPElZaERROR_ALLOCATE_BUCKETl[aERROR_MARSHALL_OVERFLOWl\aERROR_INVALID_VARIANTl]aERROR_BAD_COMPRESSION_BUFFERl^aERROR_AUDIT_FAILEDl_aERROR_TIMER_RESOLUTION_NOT_SETl`aERROR_INSUFFICIENT_LOGON_INFOlaaERROR_BAD_DLL_ENTRYPOINTlbaERROR_BAD_SERVICE_ENTRYPOINTlcaERROR_IP_ADDRESS_CONFLICT1ldaERROR_IP_ADDRESS_CONFLICT2leaERROR_REGISTRY_QUOTA_LIMITlfaERROR_NO_CALLBACK_ACTIVElgaERROR_PWD_TOO_SHORTlhaERROR_PWD_TOO_RECENTliaERROR_PWD_HISTORY_CONFLICTljaERROR_UNSUPPORTED_COMPRESSIONlkaERROR_INVALID_HW_PROFILEllaERROR_INVALID_PLUGPLAY_DEVICE_PATHlmaERROR_QUOTA_LIST_INCONSISTENTlnaERROR_EVALUATION_EXPIRATIONloaERROR_ILLEGAL_DLL_RELOCATIONlpaERROR_DLL_INIT_FAILED_LOGOFFlqaERROR_VALIDATE_CONTINUElraERROR_NO_MORE_MATCHESlsaERROR_RANGE_LIST_CONFLICTltaERROR_SERVER_SID_MISMATCHluaERROR_CANT_ENABLE_DENY_ONLYlvaERROR_FLOAT_MULTIPLE_FAULTSlwaERROR_FLOAT_MULTIPLE_TRAPSlxaERROR_NOINTERFACElyaERROR_DRIVER_FAILED_SLEEPlzaERROR_CORRUPT_SYSTEM_FILEl{aERROR_COMMITMENT_MINIMUMl|aERROR_PNP_RESTART_ENUMERATIONl}aERROR_SYSTEM_IMAGE_BAD_SIGNATUREl~aERROR_PNP_REBOOT_REQUIREDlaERROR_INSUFFICIENT_POWERlaERROR_MULTIPLE_FAULT_VIOLATIONlaERROR_SYSTEM_SHUTDOWNlaERROR_PORT_NOT_SETlaERROR_DS_VERSION_CHECK_FAILURElaERROR_RANGE_NOT_FOUNDlaERROR_NOT_SAFE_MODE_DRIVERlaERROR_FAILED_DRIVER_ENTRYlaERROR_DEVICE_ENUMERATION_ERRORlaERROR_MOUNT_POINT_NOT_RESOLVEDlaERROR_INVALID_DEVICE_OBJECT_PARAMETERlaERROR_MCA_OCCUREDlaERROR_DRIVER_DATABASE_ERRORlaERROR_SYSTEM_HIVE_TOO_LARGElaERROR_DRIVER_FAILED_PRIOR_UNLOADlaERROR_VOLSNAP_PREPARE_HIBERNATElaERROR_HIBERNATION_FAILURElaERROR_FILE_SYSTEM_LIMITATIONlaERROR_ASSERTION_FAILURElaERROR_ACPI_ERRORlaERROR_WOW_ASSERTIONlaERROR_PNP_BAD_MPS_TABLElaERROR_PNP_TRANSLATION_FAILEDlaERROR_PNP_IRQ_TRANSLATION_FAILEDlaERROR_PNP_INVALID_IDlaERROR_WAKE_SYSTEM_DEBUGGERlaERROR_HANDLES_CLOSEDlaERROR_EXTRANEOUS_INFORMATIONlaERROR_RXACT_COMMIT_NECESSARYlaERROR_MEDIA_CHECKlaERROR_GUID_SUBSTITUTION_MADElaERROR_STOPPED_ON_SYMLINKlaERROR_LONGJUMPlaERROR_PLUGPLAY_QUERY_VETOEDlaERROR_UNWIND_CONSOLIDATElaERROR_REGISTRY_HIVE_RECOVEREDlaERROR_DLL_MIGHT_BE_INSECURElaERROR_DLL_MIGHT_BE_INCOMPATIBLElaERROR_DBG_EXCEPTION_NOT_HANDLEDlaERROR_DBG_REPLY_LATERlaERROR_DBG_UNABLE_TO_PROVIDE_HANDLElaERROR_DBG_TERMINATE_THREADlaERROR_DBG_TERMINATE_PROCESSlaERROR_DBG_CONTROL_ClaERROR_DBG_PRINTEXCEPTION_ClaERROR_DBG_RIPEXCEPTIONlaERROR_DBG_CONTROL_BREAKlaERROR_DBG_COMMAND_EXCEPTIONlaERROR_OBJECT_NAME_EXISTSlaERROR_THREAD_WAS_SUSPENDEDlaERROR_IMAGE_NOT_AT_BASElaERROR_RXACT_STATE_CREATEDlaERROR_SEGMENT_NOTIFICATIONlaERROR_BAD_CURRENT_DIRECTORYlaERROR_FT_READ_RECOVERY_FROM_BACKUPlaERROR_FT_WRITE_RECOVERYlaERROR_IMAGE_MACHINE_TYPE_MISMATCHlaERROR_RECEIVE_PARTIALlaERROR_RECEIVE_EXPEDITEDlaERROR_RECEIVE_PARTIAL_EXPEDITEDlaERROR_EVENT_DONElaERROR_EVENT_PENDINGlaERROR_CHECKING_FILE_SYSTEMlaERROR_FATAL_APP_EXITlaERROR_PREDEFINED_HANDLElaERROR_WAS_UNLOCKEDlaERROR_SERVICE_NOTIFICATIONlaERROR_WAS_LOCKEDlaERROR_LOG_HARD_ERRORlaERROR_ALREADY_WIN32laERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXElaERROR_NO_YIELD_PERFORMEDlaERROR_TIMER_RESUME_IGNOREDlaERROR_ARBITRATION_UNHANDLEDlaERROR_CARDBUS_NOT_SUPPORTEDlaERROR_MP_PROCESSOR_MISMATCHlaERROR_HIBERNATEDlaERROR_RESUME_HIBERNATIONlaERROR_FIRMWARE_UPDATEDlaERROR_DRIVERS_LEAKING_LOCKED_PAGESlaERROR_WAKE_SYSTEMlaERROR_WAIT_1laERROR_WAIT_2laERROR_WAIT_3laERROR_WAIT_63laERROR_ABANDONED_WAIT_0laERROR_ABANDONED_WAIT_63laERROR_USER_APClaERROR_KERNEL_APClaERROR_ALERTEDlaERROR_ELEVATION_REQUIREDlaERROR_REPARSElaERROR_OPLOCK_BREAK_IN_PROGRESSlaERROR_VOLUME_MOUNTEDlaERROR_RXACT_COMMITTEDlaERROR_NOTIFY_CLEANUPlaERROR_PRIMARY_TRANSPORT_CONNECT_FAILEDlaERROR_PAGE_FAULT_TRANSITIONlaERROR_PAGE_FAULT_DEMAND_ZEROlaERROR_PAGE_FAULT_COPY_ON_WRITElaERROR_PAGE_FAULT_GUARD_PAGElaERROR_PAGE_FAULT_PAGING_FILElaERROR_CACHE_PAGE_LOCKEDlaERROR_CRASH_DUMPlaERROR_BUFFER_ALL_ZEROSlaERROR_REPARSE_OBJECTlaERROR_RESOURCE_REQUIREMENTS_CHANGEDlaERROR_TRANSLATION_COMPLETElaERROR_NOTHING_TO_TERMINATElaERROR_PROCESS_NOT_IN_JOBlaERROR_PROCESS_IN_JOBlaERROR_VOLSNAP_HIBERNATE_READYlaERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLYlaERROR_INTERRUPT_VECTOR_ALREADY_CONNECTEDlaERROR_INTERRUPT_STILL_CONNECTEDlaERROR_WAIT_FOR_OPLOCKlaERROR_DBG_EXCEPTION_HANDLEDlaERROR_DBG_CONTINUElaERROR_CALLBACK_POP_STACKlaERROR_COMPRESSION_DISABLEDlaERROR_CANTFETCHBACKWARDSlaERROR_CANTSCROLLBACKWARDSlaERROR_ROWSNOTRELEASEDlaERROR_BAD_ACCESSOR_FLAGSlaERROR_ERRORS_ENCOUNTEREDlaERROR_NOT_CAPABLElaERROR_REQUEST_OUT_OF_SEQUENCElaERROR_VERSION_PARSE_ERRORl
aERROR_BADSTARTPOSITIONlaERROR_MEMORY_HARDWARElaERROR_DISK_REPAIR_DISABLEDl
aERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZElaERROR_SYSTEM_POWERSTATE_TRANSITIONlaERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITIONlaERROR_MCA_EXCEPTIONlaERROR_ACCESS_AUDIT_BY_POLICYlaERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICYlaERROR_ABANDON_HIBERFILElaERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTEDlaERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERRORlaERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERRORlaERROR_BAD_MCFG_TABLElaERROR_EA_ACCESS_DENIEDlaERROR_OPERATION_ABORTEDlaERROR_IO_INCOMPLETElaERROR_IO_PENDINGlaERROR_NOACCESSlaERROR_SWAPERRORlaERROR_STACK_OVERFLOWlaERROR_INVALID_MESSAGElaERROR_CAN_NOT_COMPLETElaERROR_INVALID_FLAGSlaERROR_UNRECOGNIZED_VOLUMElaERROR_FILE_INVALIDlaERROR_FULLSCREEN_MODElaERROR_NO_TOKENlaERROR_BADDBlaERROR_BADKEYlaERROR_CANTOPENlaERROR_CANTREADlaERROR_CANTWRITElaERROR_REGISTRY_RECOVEREDlaERROR_REGISTRY_CORRUPTlaERROR_REGISTRY_IO_FAILEDlaERROR_NOT_REGISTRY_FILElaERROR_KEY_DELETEDlaERROR_NO_LOG_SPACElaERROR_KEY_HAS_CHILDRENlaERROR_CHILD_MUST_BE_VOLATILElaERROR_NOTIFY_ENUM_DIRlaERROR_DEPENDENT_SERVICES_RUNNINGlaERROR_INVALID_SERVICE_CONTROLlaERROR_SERVICE_REQUEST_TIMEOUTlaERROR_SERVICE_NO_THREADlaERROR_SERVICE_DATABASE_LOCKEDl aERROR_SERVICE_ALREADY_RUNNINGl!aERROR_INVALID_SERVICE_ACCOUNTl"aERROR_SERVICE_DISABLEDl#aERROR_CIRCULAR_DEPENDENCYl$aERROR_SERVICE_DOES_NOT_EXISTl%aERROR_SERVICE_CANNOT_ACCEPT_CTRLl&aERROR_SERVICE_NOT_ACTIVEl'aERROR_FAILED_SERVICE_CONTROLLER_CONNECTl(aERROR_EXCEPTION_IN_SERVICEl)aERROR_DATABASE_DOES_NOT_EXISTl*aERROR_SERVICE_SPECIFIC_ERRORl+aERROR_PROCESS_ABORTEDl,aERROR_SERVICE_DEPENDENCY_FAILl-aERROR_SERVICE_LOGON_FAILEDl.aERROR_SERVICE_START_HANGl/aERROR_INVALID_SERVICE_LOCKl0aERROR_SERVICE_MARKED_FOR_DELETEl1aERROR_SERVICE_EXISTSl2aERROR_ALREADY_RUNNING_LKGl3aERROR_SERVICE_DEPENDENCY_DELETEDl4aERROR_BOOT_ALREADY_ACCEPTEDl5aERROR_SERVICE_NEVER_STARTEDl6aERROR_DUPLICATE_SERVICE_NAMEl7aERROR_DIFFERENT_SERVICE_ACCOUNTl8aERROR_CANNOT_DETECT_DRIVER_FAILUREl9aERROR_CANNOT_DETECT_PROCESS_ABORTl:aERROR_NO_RECOVERY_PROGRAMl;aERROR_SERVICE_NOT_IN_EXEl<aERROR_NOT_SAFEBOOT_SERVICElLaERROR_END_OF_MEDIAlMaERROR_FILEMARK_DETECTEDlNaERROR_BEGINNING_OF_MEDIAlOaERROR_SETMARK_DETECTEDlPaERROR_NO_DATA_DETECTEDlQaERROR_PARTITION_FAILURElRaERROR_INVALID_BLOCK_LENGTHlSaERROR_DEVICE_NOT_PARTITIONEDlTaERROR_UNABLE_TO_LOCK_MEDIAlUaERROR_UNABLE_TO_UNLOAD_MEDIAlVaERROR_MEDIA_CHANGEDlWaERROR_BUS_RESETlXaERROR_NO_MEDIA_IN_DRIVElYaERROR_NO_UNICODE_TRANSLATIONlZaERROR_DLL_INIT_FAILEDl[aERROR_SHUTDOWN_IN_PROGRESSl\aERROR_NO_SHUTDOWN_IN_PROGRESSl]aERROR_IO_DEVICEl^aERROR_SERIAL_NO_DEVICEl_aERROR_IRQ_BUSYl`aERROR_MORE_WRITESlaaERROR_COUNTER_TIMEOUTlbaERROR_FLOPPY_ID_MARK_NOT_FOUNDlcaERROR_FLOPPY_WRONG_CYLINDERldaERROR_FLOPPY_UNKNOWN_ERRORleaERROR_FLOPPY_BAD_REGISTERSlfaERROR_DISK_RECALIBRATE_FAILEDlgaERROR_DISK_OPERATION_FAILEDlhaERROR_DISK_RESET_FAILEDliaERROR_EOM_OVERFLOWljaERROR_NOT_ENOUGH_SERVER_MEMORYlkaERROR_POSSIBLE_DEADLOCKllaERROR_MAPPED_ALIGNMENTltaERROR_SET_POWER_STATE_VETOEDluaERROR_SET_POWER_STATE_FAILEDlvaERROR_TOO_MANY_LINKSl~aERROR_OLD_WIN_VERSIONlaERROR_APP_WRONG_OSlaERROR_SINGLE_INSTANCE_APPlaERROR_RMODE_APPlaERROR_INVALID_DLLlaERROR_NO_ASSOCIATIONlaERROR_DDE_FAILlaERROR_DLL_NOT_FOUNDlaERROR_NO_MORE_USER_HANDLESlaERROR_MESSAGE_SYNC_ONLYlaERROR_SOURCE_ELEMENT_EMPTYlaERROR_DESTINATION_ELEMENT_FULLlaERROR_ILLEGAL_ELEMENT_ADDRESSlaERROR_MAGAZINE_NOT_PRESENTlaERROR_DEVICE_REINITIALIZATION_NEEDEDlaERROR_DEVICE_REQUIRES_CLEANINGlaERROR_DEVICE_DOOR_OPENlaERROR_DEVICE_NOT_CONNECTEDlaERROR_NOT_FOUNDlaERROR_NO_MATCHlaERROR_SET_NOT_FOUNDlaERROR_POINT_NOT_FOUNDlaERROR_NO_TRACKING_SERVICElaERROR_NO_VOLUME_IDl<aERROR_CONNECTED_OTHER_PASSWORDlaERROR_BAD_USERNAMElaERROR_NOT_CONNECTEDlaaERROR_OPEN_FILESlbaERROR_ACTIVE_CONNECTIONSldaERROR_DEVICE_IN_USElaERROR_BAD_DEVICElaERROR_CONNECTION_UNAVAILlaERROR_DEVICE_ALREADY_REMEMBEREDlaERROR_NO_NET_OR_BAD_PATHlaERROR_BAD_PROVIDERlaERROR_CANNOT_OPEN_PROFILElaERROR_BAD_PROFILElaERROR_NOT_CONTAINERlaERROR_EXTENDED_ERRORlaERROR_INVALID_GROUPNAMElaERROR_INVALID_COMPUTERNAMElaERROR_INVALID_EVENTNAMElaERROR_INVALID_DOMAINNAMElaERROR_INVALID_SERVICENAMElaERROR_INVALID_NETNAMElaERROR_INVALID_SHARENAMElaERROR_INVALID_PASSWORDNAMElaERROR_INVALID_MESSAGENAMElaERROR_INVALID_MESSAGEDESTlaERROR_SESSION_CREDENTIAL_CONFLICTlaERROR_REMOTE_SESSION_LIMIT_EXCEEDEDlaERROR_DUP_DOMAINNAMElaERROR_NO_NETWORKlaERROR_CANCELLEDlaERROR_USER_MAPPED_FILElaERROR_CONNECTION_REFUSEDlaERROR_GRACEFUL_DISCONNECTlaERROR_ADDRESS_ALREADY_ASSOCIATEDlaERROR_ADDRESS_NOT_ASSOCIATEDlaERROR_CONNECTION_INVALIDlaERROR_CONNECTION_ACTIVElaERROR_NETWORK_UNREACHABLElaERROR_HOST_UNREACHABLElaERROR_PROTOCOL_UNREACHABLElaERROR_PORT_UNREACHABLElaERROR_REQUEST_ABORTEDlaERROR_CONNECTION_ABORTEDlaERROR_RETRYlaERROR_CONNECTION_COUNT_LIMITlaERROR_LOGIN_TIME_RESTRICTIONlaERROR_LOGIN_WKSTA_RESTRICTIONlaERROR_INCORRECT_ADDRESSlaERROR_ALREADY_REGISTEREDlaERROR_SERVICE_NOT_FOUNDlaERROR_NOT_AUTHENTICATEDlaERROR_NOT_LOGGED_ONlaERROR_CONTINUElaERROR_ALREADY_INITIALIZEDlaERROR_NO_MORE_DEVICESlaERROR_NO_SUCH_SITElaERROR_DOMAIN_CONTROLLER_EXISTSlaERROR_DS_NOT_INSTALLEDlaERROR_NOT_ALL_ASSIGNEDlaERROR_SOME_NOT_MAPPEDlaERROR_NO_QUOTAS_FOR_ACCOUNTlaERROR_LOCAL_USER_SESSION_KEYlaERROR_NULL_LM_PASSWORDlaERROR_UNKNOWN_REVISIONlaERROR_REVISION_MISMATCHlaERROR_INVALID_OWNERlaERROR_INVALID_PRIMARY_GROUPlaERROR_NO_IMPERSONATION_TOKENlaERROR_CANT_DISABLE_MANDATORYlaERROR_NO_LOGON_SERVERSl aERROR_NO_SUCH_LOGON_SESSIONl!aERROR_NO_SUCH_PRIVILEGEl"aERROR_PRIVILEGE_NOT_HELDl#aERROR_INVALID_ACCOUNT_NAMEl$aERROR_USER_EXISTSl%aERROR_NO_SUCH_USERl&aERROR_GROUP_EXISTSl'aERROR_NO_SUCH_GROUPl(aERROR_MEMBER_IN_GROUPl)aERROR_MEMBER_NOT_IN_GROUPl*aERROR_LAST_ADMINl+aERROR_WRONG_PASSWORDl,aERROR_ILL_FORMED_PASSWORDl-aERROR_PASSWORD_RESTRICTIONl.aERROR_LOGON_FAILUREl/aERROR_ACCOUNT_RESTRICTIONl0aERROR_INVALID_LOGON_HOURSl1aERROR_INVALID_WORKSTATIONl2aERROR_PASSWORD_EXPIREDl3aERROR_ACCOUNT_DISABLEDl4aERROR_NONE_MAPPEDl5aERROR_TOO_MANY_LUIDS_REQUESTEDl6aERROR_LUIDS_EXHAUSTEDl7aERROR_INVALID_SUB_AUTHORITYl8aERROR_INVALID_ACLl9aERROR_INVALID_SIDl:aERROR_INVALID_SECURITY_DESCRl<aERROR_BAD_INHERITANCE_ACLl=aERROR_SERVER_DISABLEDl>aERROR_SERVER_NOT_DISABLEDl?aERROR_INVALID_ID_AUTHORITYl@aERROR_ALLOTTED_SPACE_EXCEEDEDlAaERROR_INVALID_GROUP_ATTRIBUTESlBaERROR_BAD_IMPERSONATION_LEVELlCaERROR_CANT_OPEN_ANONYMOUSlDaERROR_BAD_VALIDATION_CLASSlEaERROR_BAD_TOKEN_TYPElFaERROR_NO_SECURITY_ON_OBJECTlGaERROR_CANT_ACCESS_DOMAIN_INFOlHaERROR_INVALID_SERVER_STATElIaERROR_INVALID_DOMAIN_STATElJaERROR_INVALID_DOMAIN_ROLElKaERROR_NO_SUCH_DOMAINlLaERROR_DOMAIN_EXISTSlMaERROR_DOMAIN_LIMIT_EXCEEDEDlNaERROR_INTERNAL_DB_CORRUPTIONlOaERROR_INTERNAL_ERRORlPaERROR_GENERIC_NOT_MAPPEDlQaERROR_BAD_DESCRIPTOR_FORMATlRaERROR_NOT_LOGON_PROCESSlSaERROR_LOGON_SESSION_EXISTSlTaERROR_NO_SUCH_PACKAGElUaERROR_BAD_LOGON_SESSION_STATElVaERROR_LOGON_SESSION_COLLISIONlWaERROR_INVALID_LOGON_TYPElXaERROR_CANNOT_IMPERSONATElYaERROR_RXACT_INVALID_STATElZaERROR_RXACT_COMMIT_FAILUREl[aERROR_SPECIAL_ACCOUNTl\aERROR_SPECIAL_GROUPl]aERROR_SPECIAL_USERl^aERROR_MEMBERS_PRIMARY_GROUPl_aERROR_TOKEN_ALREADY_IN_USEl`aERROR_NO_SUCH_ALIASlaaERROR_MEMBER_NOT_IN_ALIASlbaERROR_MEMBER_IN_ALIASlcaERROR_ALIAS_EXISTSldaERROR_LOGON_NOT_GRANTEDleaERROR_TOO_MANY_SECRETSlfaERROR_SECRET_TOO_LONGlgaERROR_INTERNAL_DB_ERRORlhaERROR_TOO_MANY_CONTEXT_IDSliaERROR_LOGON_TYPE_NOT_GRANTEDljaERROR_NT_CROSS_ENCRYPTION_REQUIREDlkaERROR_NO_SUCH_MEMBERllaERROR_INVALID_MEMBERlmaERROR_TOO_MANY_SIDSlnaERROR_LM_CROSS_ENCRYPTION_REQUIREDloaERROR_NO_INHERITANCElpaERROR_FILE_CORRUPTlqaERROR_DISK_CORRUPTlraERROR_NO_USER_SESSION_KEYlsaERROR_LICENSE_QUOTA_EXCEEDEDlxaERROR_INVALID_WINDOW_HANDLElyaERROR_INVALID_MENU_HANDLElzaERROR_INVALID_CURSOR_HANDLEl{aERROR_INVALID_ACCEL_HANDLEl|aERROR_INVALID_HOOK_HANDLEl}aERROR_INVALID_DWP_HANDLEl~aERROR_TLW_WITH_WSCHILDlaERROR_CANNOT_FIND_WND_CLASSlaERROR_WINDOW_OF_OTHER_THREADlaERROR_HOTKEY_ALREADY_REGISTEREDlaERROR_CLASS_ALREADY_EXISTSlaERROR_CLASS_DOES_NOT_EXISTlaERROR_CLASS_HAS_WINDOWSlaERROR_INVALID_INDEXlaERROR_INVALID_ICON_HANDLElaERROR_PRIVATE_DIALOG_INDEXlaERROR_LISTBOX_ID_NOT_FOUNDlaERROR_NO_WILDCARD_CHARACTERSlaERROR_CLIPBOARD_NOT_OPENlaERROR_HOTKEY_NOT_REGISTEREDlaERROR_WINDOW_NOT_DIALOGlaERROR_CONTROL_ID_NOT_FOUNDlaERROR_INVALID_COMBOBOX_MESSAGElaERROR_WINDOW_NOT_COMBOBOXlaERROR_INVALID_EDIT_HEIGHTlaERROR_DC_NOT_FOUNDlaERROR_INVALID_HOOK_FILTERlaERROR_INVALID_FILTER_PROClaERROR_HOOK_NEEDS_HMODlaERROR_GLOBAL_ONLY_HOOKlaERROR_JOURNAL_HOOK_SETlaERROR_HOOK_NOT_INSTALLEDlaERROR_INVALID_LB_MESSAGElaERROR_SETCOUNT_ON_BAD_LBlaERROR_LB_WITHOUT_TABSTOPSlaERROR_DESTROY_OBJECT_OF_OTHER_THREADlaERROR_CHILD_WINDOW_MENUlaERROR_NO_SYSTEM_MENUlaERROR_INVALID_MSGBOX_STYLElaERROR_INVALID_SPI_VALUElaERROR_SCREEN_ALREADY_LOCKEDlaERROR_HWNDS_HAVE_DIFF_PARENTlaERROR_NOT_CHILD_WINDOWlaERROR_INVALID_GW_COMMANDlaERROR_INVALID_THREAD_IDlaERROR_NON_MDICHILD_WINDOWlaERROR_POPUP_ALREADY_ACTIVElaERROR_NO_SCROLLBARSlaERROR_INVALID_SCROLLBAR_RANGElaERROR_INVALID_SHOWWIN_COMMANDlaERROR_NO_SYSTEM_RESOURCESlaERROR_NONPAGED_SYSTEM_RESOURCESlaERROR_PAGED_SYSTEM_RESOURCESlaERROR_WORKING_SET_QUOTAlaERROR_PAGEFILE_QUOTAlaERROR_COMMITMENT_LIMITlaERROR_MENU_ITEM_NOT_FOUNDlaERROR_INVALID_KEYBOARD_HANDLElaERROR_HOOK_TYPE_NOT_ALLOWEDlaERROR_REQUIRES_INTERACTIVE_WINDOWSTATIONlaERROR_TIMEOUTlaERROR_INVALID_MONITOR_HANDLElaERROR_INCORRECT_SIZElaERROR_SYMLINK_CLASS_DISABLEDlaERROR_SYMLINK_NOT_SUPPORTEDlaERROR_XML_PARSE_ERRORlaERROR_XMLDSIG_ERRORlaERROR_RESTART_APPLICATIONlaERROR_WRONG_COMPARTMENTlaERROR_AUTHIP_FAILURElaERROR_EVENTLOG_FILE_CORRUPTlaERROR_EVENTLOG_CANT_STARTlaERROR_LOG_FILE_FULLlaERROR_EVENTLOG_FILE_CHANGEDlAaERROR_INSTALL_SERVICElBaERROR_INSTALL_USEREXITlCaERROR_INSTALL_FAILURElDaERROR_INSTALL_SUSPENDlEaERROR_UNKNOWN_PRODUCTlFaERROR_UNKNOWN_FEATURElGaERROR_UNKNOWN_COMPONENTlHaERROR_UNKNOWN_PROPERTYlIaERROR_INVALID_HANDLE_STATElJaERROR_BAD_CONFIGURATIONlKaERROR_INDEX_ABSENTlLaERROR_INSTALL_SOURCE_ABSENTlMaERROR_BAD_DATABASE_VERSIONlNaERROR_PRODUCT_UNINSTALLEDlOaERROR_BAD_QUERY_SYNTAXlPaERROR_INVALID_FIELDlQaERROR_DEVICE_REMOVEDlRaERROR_INSTALL_ALREADY_RUNNINGlSaERROR_INSTALL_PACKAGE_OPEN_FAILEDlTaERROR_INSTALL_PACKAGE_INVALIDlUaERROR_INSTALL_UI_FAILURElVaERROR_INSTALL_LOG_FAILURElWaERROR_INSTALL_LANGUAGE_UNSUPPORTEDlXaERROR_INSTALL_TRANSFORM_FAILURElYaERROR_INSTALL_PACKAGE_REJECTEDlZaERROR_FUNCTION_NOT_CALLEDl[aERROR_FUNCTION_FAILEDl\aERROR_INVALID_TABLEl]aERROR_DATATYPE_MISMATCHl^aERROR_UNSUPPORTED_TYPEl_aERROR_CREATE_FAILEDl`aERROR_INSTALL_TEMP_UNWRITABLElaaERROR_INSTALL_PLATFORM_UNSUPPORTEDlbaERROR_INSTALL_NOTUSEDlcaERROR_PATCH_PACKAGE_OPEN_FAILEDldaERROR_PATCH_PACKAGE_INVALIDleaERROR_PATCH_PACKAGE_UNSUPPORTEDlfaERROR_PRODUCT_VERSIONlgaERROR_INVALID_COMMAND_LINElhaERROR_INSTALL_REMOTE_DISALLOWEDliaERROR_SUCCESS_REBOOT_INITIATEDljaERROR_PATCH_TARGET_NOT_FOUNDlkaERROR_PATCH_PACKAGE_REJECTEDllaERROR_INSTALL_TRANSFORM_REJECTEDlmaERROR_INSTALL_REMOTE_PROHIBITEDlnaERROR_PATCH_REMOVAL_UNSUPPORTEDloaERROR_UNKNOWN_PATCHlpaERROR_PATCH_NO_SEQUENCElqaERROR_PATCH_REMOVAL_DISALLOWEDlraERROR_INVALID_PATCH_XMLlsaERROR_PATCH_MANAGED_ADVERTISED_PRODUCTltaERROR_INSTALL_SERVICE_SAFEBOOTlaRPC_S_INVALID_STRING_BINDINGlaRPC_S_WRONG_KIND_OF_BINDINGlaRPC_S_INVALID_BINDINGlaRPC_S_PROTSEQ_NOT_SUPPORTEDlaRPC_S_INVALID_RPC_PROTSEQlaRPC_S_INVALID_STRING_UUIDlaRPC_S_INVALID_ENDPOINT_FORMATlaRPC_S_INVALID_NET_ADDRlaRPC_S_NO_ENDPOINT_FOUNDlaRPC_S_INVALID_TIMEOUTlaRPC_S_OBJECT_NOT_FOUNDlaRPC_S_ALREADY_REGISTEREDlaRPC_S_TYPE_ALREADY_REGISTEREDlaRPC_S_ALREADY_LISTENINGlaRPC_S_NO_PROTSEQS_REGISTEREDlaRPC_S_NOT_LISTENINGlaRPC_S_UNKNOWN_MGR_TYPElaRPC_S_UNKNOWN_IFlaRPC_S_NO_BINDINGSlaRPC_S_NO_PROTSEQSlaRPC_S_CANT_CREATE_ENDPOINTlaRPC_S_OUT_OF_RESOURCESlaRPC_S_SERVER_UNAVAILABLElaRPC_S_SERVER_TOO_BUSYlaRPC_S_INVALID_NETWORK_OPTIONSlaRPC_S_NO_CALL_ACTIVElaRPC_S_CALL_FAILEDlaRPC_S_CALL_FAILED_DNElaRPC_S_PROTOCOL_ERRORlaRPC_S_PROXY_ACCESS_DENIEDlaRPC_S_UNSUPPORTED_TRANS_SYNlaRPC_S_UNSUPPORTED_TYPElaRPC_S_INVALID_TAGlaRPC_S_INVALID_BOUNDlaRPC_S_NO_ENTRY_NAMElaRPC_S_INVALID_NAME_SYNTAXlaRPC_S_UNSUPPORTED_NAME_SYNTAXlaRPC_S_UUID_NO_ADDRESSlaRPC_S_DUPLICATE_ENDPOINTlaRPC_S_UNKNOWN_AUTHN_TYPElaRPC_S_MAX_CALLS_TOO_SMALLlaRPC_S_STRING_TOO_LONGlaRPC_S_PROTSEQ_NOT_FOUNDlaRPC_S_PROCNUM_OUT_OF_RANGElaRPC_S_BINDING_HAS_NO_AUTHlaRPC_S_UNKNOWN_AUTHN_SERVICElaRPC_S_UNKNOWN_AUTHN_LEVELlaRPC_S_INVALID_AUTH_IDENTITYlaRPC_S_UNKNOWN_AUTHZ_SERVICElaEPT_S_INVALID_ENTRYlaEPT_S_CANT_PERFORM_OPlaEPT_S_NOT_REGISTEREDlaRPC_S_NOTHING_TO_EXPORTlaRPC_S_INCOMPLETE_NAMElaRPC_S_INVALID_VERS_OPTIONlaRPC_S_NO_MORE_MEMBERSlaRPC_S_NOT_ALL_OBJS_UNEXPORTEDlaRPC_S_INTERFACE_NOT_FOUNDlaRPC_S_ENTRY_ALREADY_EXISTSlaRPC_S_ENTRY_NOT_FOUNDlaRPC_S_NAME_SERVICE_UNAVAILABLElaRPC_S_INVALID_NAF_IDlaRPC_S_CANNOT_SUPPORTlaRPC_S_NO_CONTEXT_AVAILABLElaRPC_S_INTERNAL_ERRORlaRPC_S_ZERO_DIVIDElaRPC_S_ADDRESS_ERRORlaRPC_S_FP_DIV_ZEROlaRPC_S_FP_UNDERFLOWlaRPC_S_FP_OVERFLOWlaRPC_X_NO_MORE_ENTRIESlaRPC_X_SS_CHAR_TRANS_OPEN_FAILlaRPC_X_SS_CHAR_TRANS_SHORT_FILElaRPC_X_SS_IN_NULL_CONTEXTlaRPC_X_SS_CONTEXT_DAMAGEDlaRPC_X_SS_HANDLES_MISMATCHlaRPC_X_SS_CANNOT_GET_CALL_HANDLElaRPC_X_NULL_REF_POINTERlaRPC_X_ENUM_VALUE_OUT_OF_RANGElaRPC_X_BYTE_COUNT_TOO_SMALLlaRPC_X_BAD_STUB_DATAlaERROR_INVALID_USER_BUFFERlaERROR_UNRECOGNIZED_MEDIAlaERROR_NO_TRUST_LSA_SECRETlaERROR_NO_TRUST_SAM_ACCOUNTlaERROR_TRUSTED_DOMAIN_FAILURElaERROR_TRUSTED_RELATIONSHIP_FAILURElaERROR_TRUST_FAILURElaRPC_S_CALL_IN_PROGRESSlaERROR_NETLOGON_NOT_STARTEDlaERROR_ACCOUNT_EXPIREDlaERROR_REDIRECTOR_HAS_OPEN_HANDLESlaERROR_PRINTER_DRIVER_ALREADY_INSTALLEDlaERROR_UNKNOWN_PORTlaERROR_UNKNOWN_PRINTER_DRIVERlaERROR_UNKNOWN_PRINTPROCESSORlaERROR_INVALID_SEPARATOR_FILElaERROR_INVALID_PRIORITYlaERROR_INVALID_PRINTER_NAMEl
aERROR_PRINTER_ALREADY_EXISTSlaERROR_INVALID_PRINTER_COMMANDlaERROR_INVALID_DATATYPEl
aERROR_INVALID_ENVIRONMENTlaRPC_S_NO_MORE_BINDINGSlaERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNTlaERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNTlaERROR_NOLOGON_SERVER_TRUST_ACCOUNTlaERROR_DOMAIN_TRUST_INCONSISTENTlaERROR_SERVER_HAS_OPEN_HANDLESlaERROR_RESOURCE_DATA_NOT_FOUNDlaERROR_RESOURCE_TYPE_NOT_FOUNDlaERROR_RESOURCE_NAME_NOT_FOUNDlaERROR_RESOURCE_LANG_NOT_FOUNDlaERROR_NOT_ENOUGH_QUOTAlaRPC_S_NO_INTERFACESlaRPC_S_CALL_CANCELLEDlaRPC_S_BINDING_INCOMPLETElaRPC_S_COMM_FAILURElaRPC_S_UNSUPPORTED_AUTHN_LEVELlaRPC_S_NO_PRINC_NAMElaRPC_S_NOT_RPC_ERRORl aRPC_S_UUID_LOCAL_ONLYl!aRPC_S_SEC_PKG_ERRORl"aRPC_S_NOT_CANCELLEDl#aRPC_X_INVALID_ES_ACTIONl$aRPC_X_WRONG_ES_VERSIONl%aRPC_X_WRONG_STUB_VERSIONl&aRPC_X_INVALID_PIPE_OBJECTl'aRPC_X_WRONG_PIPE_ORDERl(aRPC_X_WRONG_PIPE_VERSIONljaRPC_S_GROUP_MEMBER_NOT_FOUNDlkaEPT_S_CANT_CREATEllaRPC_S_INVALID_OBJECTlmaERROR_INVALID_TIMElnaERROR_INVALID_FORM_NAMEloaERROR_INVALID_FORM_SIZElpaERROR_ALREADY_WAITINGlqaERROR_PRINTER_DELETEDlraERROR_INVALID_PRINTER_STATElsaERROR_PASSWORD_MUST_CHANGEltaERROR_DOMAIN_CONTROLLER_NOT_FOUNDluaERROR_ACCOUNT_LOCKED_OUTlvaOR_INVALID_OXIDlwaOR_INVALID_OIDlxaOR_INVALID_SETlyaRPC_S_SEND_INCOMPLETElzaRPC_S_INVALID_ASYNC_HANDLEl{aRPC_S_INVALID_ASYNC_CALLl|aRPC_X_PIPE_CLOSEDl}aRPC_X_PIPE_DISCIPLINE_ERRORl~aRPC_X_PIPE_EMPTYlaERROR_NO_SITENAMElaERROR_CANT_ACCESS_FILElaERROR_CANT_RESOLVE_FILENAMElaRPC_S_ENTRY_TYPE_MISMATCHlaRPC_S_NOT_ALL_OBJS_EXPORTEDlaRPC_S_INTERFACE_NOT_EXPORTEDlaRPC_S_PROFILE_NOT_ADDEDlaRPC_S_PRF_ELT_NOT_ADDEDlaRPC_S_PRF_ELT_NOT_REMOVEDlaRPC_S_GRP_ELT_NOT_ADDEDlaRPC_S_GRP_ELT_NOT_REMOVEDlaERROR_KM_DRIVER_BLOCKEDlaERROR_CONTEXT_EXPIREDlaERROR_PER_USER_TRUST_QUOTA_EXCEEDEDlaERROR_ALL_USER_TRUST_QUOTA_EXCEEDEDlaERROR_USER_DELETE_TRUST_QUOTA_EXCEEDEDlaERROR_AUTHENTICATION_FIREWALL_FAILEDlaERROR_REMOTE_PRINT_CONNECTIONS_BLOCKEDlaERROR_NTLM_BLOCKEDlaERROR_INVALID_PIXEL_FORMATlaERROR_BAD_DRIVERlaERROR_INVALID_WINDOW_STYLElaERROR_METAFILE_NOT_SUPPORTEDlaERROR_TRANSFORM_NOT_SUPPORTEDlaERROR_CLIPPING_NOT_SUPPORTEDlaERROR_INVALID_CMMlaERROR_INVALID_PROFILElaERROR_TAG_NOT_FOUNDlaERROR_TAG_NOT_PRESENTlaERROR_DUPLICATE_TAGlaERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICElaERROR_PROFILE_NOT_FOUNDlaERROR_INVALID_COLORSPACElaERROR_ICM_NOT_ENABLEDlaERROR_DELETING_ICM_XFORMlaERROR_INVALID_TRANSFORMlaERROR_COLORSPACE_MISMATCHlaERROR_INVALID_COLORINDEXlaERROR_PROFILE_DOES_NOT_MATCH_DEVICEl=aERROR_CONNECTED_OTHER_PASSWORD_DEFAULTllllllllllllaERROR_UNKNOWN_PRINT_MONITORlaERROR_PRINTER_DRIVER_IN_USElaERROR_SPOOL_FILE_NOT_FOUNDlaERROR_SPL_NO_STARTDOClaERROR_SPL_NO_ADDJOBlaERROR_PRINT_PROCESSOR_ALREADY_INSTALLEDlaERROR_PRINT_MONITOR_ALREADY_INSTALLEDlaERROR_INVALID_PRINT_MONITORlaERROR_PRINT_MONITOR_IN_USElaERROR_PRINTER_HAS_JOBS_QUEUEDlaERROR_SUCCESS_REBOOT_REQUIREDlaERROR_SUCCESS_RESTART_REQUIREDlaERROR_PRINTER_NOT_FOUNDlaERROR_PRINTER_DRIVER_WARNEDlaERROR_PRINTER_DRIVER_BLOCKEDlaERROR_PRINTER_DRIVER_PACKAGE_IN_USElaERROR_CORE_DRIVER_PACKAGE_NOT_FOUNDlaERROR_FAIL_REBOOT_REQUIREDlaERROR_FAIL_REBOOT_INITIATEDlaERROR_PRINTER_DRIVER_DOWNLOAD_NEEDEDlaERROR_PRINT_JOB_RESTART_REQUIREDlnaERROR_IO_REISSUE_AS_CACHEDlaERROR_WINS_INTERNALlaERROR_CAN_NOT_DEL_LOCAL_WINSlaERROR_STATIC_INITlaERROR_INC_BACKUPlaERROR_FULL_BACKUPlaERROR_REC_NON_EXISTENTlaERROR_RPL_NOT_ALLOWEDlaERROR_DHCP_ADDRESS_CONFLICTlhaERROR_WMI_GUID_NOT_FOUNDliaERROR_WMI_INSTANCE_NOT_FOUNDljaERROR_WMI_ITEMID_NOT_FOUNDlkaERROR_WMI_TRY_AGAINllaERROR_WMI_DP_NOT_FOUNDlmaERROR_WMI_UNRESOLVED_INSTANCE_REFlnaERROR_WMI_ALREADY_ENABLEDloaERROR_WMI_GUID_DISCONNECTEDlpaERROR_WMI_SERVER_UNAVAILABLElqaERROR_WMI_DP_FAILEDlraERROR_WMI_INVALID_MOFlsaERROR_WMI_INVALID_REGINFOltaERROR_WMI_ALREADY_DISABLEDluaERROR_WMI_READ_ONLYlvaERROR_WMI_SET_FAILURElaERROR_INVALID_MEDIAlaERROR_INVALID_LIBRARYlaERROR_INVALID_MEDIA_POOLlaERROR_DRIVE_MEDIA_MISMATCHlaERROR_MEDIA_OFFLINElaERROR_LIBRARY_OFFLINElaERROR_EMPTYlaERROR_NOT_EMPTYlaERROR_MEDIA_UNAVAILABLElaERROR_RESOURCE_DISABLEDlaERROR_INVALID_CLEANERlaERROR_UNABLE_TO_CLEANlaERROR_OBJECT_NOT_FOUNDlaERROR_DATABASE_FAILURElaERROR_DATABASE_FULLlaERROR_MEDIA_INCOMPATIBLElaERROR_RESOURCE_NOT_PRESENTlaERROR_INVALID_OPERATIONlaERROR_MEDIA_NOT_AVAILABLElaERROR_DEVICE_NOT_AVAILABLElaERROR_REQUEST_REFUSEDlaERROR_INVALID_DRIVE_OBJECTlaERROR_LIBRARY_FULLlaERROR_MEDIUM_NOT_ACCESSIBLElaERROR_UNABLE_TO_LOAD_MEDIUMlaERROR_UNABLE_TO_INVENTORY_DRIVElaERROR_UNABLE_TO_INVENTORY_SLOTlaERROR_UNABLE_TO_INVENTORY_TRANSPORTlaERROR_TRANSPORT_FULLlaERROR_CONTROLLING_IEPORTlaERROR_UNABLE_TO_EJECT_MOUNTED_MEDIAlaERROR_CLEANER_SLOT_SETlaERROR_CLEANER_SLOT_NOT_SETlaERROR_CLEANER_CARTRIDGE_SPENTlaERROR_UNEXPECTED_OMIDlaERROR_CANT_DELETE_LAST_ITEMlaERROR_MESSAGE_EXCEEDS_MAX_SIZElaERROR_VOLUME_CONTAINS_SYS_FILESlaERROR_INDIGENOUS_TYPElaERROR_NO_SUPPORTING_DRIVESlaERROR_CLEANER_CARTRIDGE_INSTALLEDlaERROR_IEPORT_FULLlaERROR_FILE_OFFLINElaERROR_REMOTE_STORAGE_NOT_ACTIVElaERROR_REMOTE_STORAGE_MEDIA_ERRORl&aERROR_NOT_A_REPARSE_POINTl'aERROR_REPARSE_ATTRIBUTE_CONFLICTl(aERROR_INVALID_REPARSE_DATAl)aERROR_REPARSE_TAG_INVALIDl*aERROR_REPARSE_TAG_MISMATCHlaERROR_VOLUME_NOT_SIS_ENABLEDlaERROR_DEPENDENT_RESOURCE_EXISTSlaERROR_DEPENDENCY_NOT_FOUNDlaERROR_DEPENDENCY_ALREADY_EXISTSlaERROR_RESOURCE_NOT_ONLINElaERROR_HOST_NODE_NOT_AVAILABLElaERROR_RESOURCE_NOT_AVAILABLElaERROR_RESOURCE_NOT_FOUNDlaERROR_SHUTDOWN_CLUSTERlaERROR_CANT_EVICT_ACTIVE_NODElaERROR_OBJECT_ALREADY_EXISTSlaERROR_OBJECT_IN_LISTlaERROR_GROUP_NOT_AVAILABLElaERROR_GROUP_NOT_FOUNDlaERROR_GROUP_NOT_ONLINElaERROR_HOST_NODE_NOT_RESOURCE_OWNERlaERROR_HOST_NODE_NOT_GROUP_OWNERlaERROR_RESMON_CREATE_FAILEDlaERROR_RESMON_ONLINE_FAILEDlaERROR_RESOURCE_ONLINElaERROR_QUORUM_RESOURCElaERROR_NOT_QUORUM_CAPABLElaERROR_CLUSTER_SHUTTING_DOWNlaERROR_INVALID_STATElaERROR_RESOURCE_PROPERTIES_STOREDlaERROR_NOT_QUORUM_CLASSlaERROR_CORE_RESOURCElaERROR_QUORUM_RESOURCE_ONLINE_FAILEDlaERROR_QUORUMLOG_OPEN_FAILEDlaERROR_CLUSTERLOG_CORRUPTlaERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZElaERROR_CLUSTERLOG_EXCEEDS_MAXSIZElaERROR_CLUSTERLOG_CHKPOINT_NOT_FOUNDlaERROR_CLUSTERLOG_NOT_ENOUGH_SPACElaERROR_QUORUM_OWNER_ALIVElaERROR_NETWORK_NOT_AVAILABLElaERROR_NODE_NOT_AVAILABLElaERROR_ALL_NODES_NOT_AVAILABLElaERROR_RESOURCE_FAILEDlaERROR_CLUSTER_INVALID_NODElaERROR_CLUSTER_NODE_EXISTSlaERROR_CLUSTER_JOIN_IN_PROGRESSlaERROR_CLUSTER_NODE_NOT_FOUNDlaERROR_CLUSTER_LOCAL_NODE_NOT_FOUNDlaERROR_CLUSTER_NETWORK_EXISTSlaERROR_CLUSTER_NETWORK_NOT_FOUNDlaERROR_CLUSTER_NETINTERFACE_EXISTSlaERROR_CLUSTER_NETINTERFACE_NOT_FOUNDlaERROR_CLUSTER_INVALID_REQUESTlaERROR_CLUSTER_INVALID_NETWORK_PROVIDERlaERROR_CLUSTER_NODE_DOWNlaERROR_CLUSTER_NODE_UNREACHABLElaERROR_CLUSTER_NODE_NOT_MEMBERlaERROR_CLUSTER_JOIN_NOT_IN_PROGRESSlaERROR_CLUSTER_INVALID_NETWORKlaERROR_CLUSTER_NODE_UPlaERROR_CLUSTER_IPADDR_IN_USElaERROR_CLUSTER_NODE_NOT_PAUSEDlaERROR_CLUSTER_NO_SECURITY_CONTEXTlaERROR_CLUSTER_NETWORK_NOT_INTERNALlaERROR_CLUSTER_NODE_ALREADY_UPlaERROR_CLUSTER_NODE_ALREADY_DOWNlaERROR_CLUSTER_NETWORK_ALREADY_ONLINElaERROR_CLUSTER_NETWORK_ALREADY_OFFLINElaERROR_CLUSTER_NODE_ALREADY_MEMBERlaERROR_CLUSTER_LAST_INTERNAL_NETWORKlaERROR_CLUSTER_NETWORK_HAS_DEPENDENTSlaERROR_INVALID_OPERATION_ON_QUORUMlaERROR_DEPENDENCY_NOT_ALLOWEDlaERROR_CLUSTER_NODE_PAUSEDlaERROR_NODE_CANT_HOST_RESOURCElaERROR_CLUSTER_NODE_NOT_READYlaERROR_CLUSTER_NODE_SHUTTING_DOWNlaERROR_CLUSTER_JOIN_ABORTEDlaERROR_CLUSTER_INCOMPATIBLE_VERSIONSlaERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDEDlaERROR_CLUSTER_SYSTEM_CONFIG_CHANGEDlaERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUNDlaERROR_CLUSTER_RESTYPE_NOT_SUPPORTEDlaERROR_CLUSTER_RESNAME_NOT_FOUNDlaERROR_CLUSTER_NO_RPC_PACKAGES_REGISTEREDlaERROR_CLUSTER_OWNER_NOT_IN_PREFLISTlaERROR_CLUSTER_DATABASE_SEQMISMATCHlaERROR_RESMON_INVALID_STATElaERROR_CLUSTER_GUM_NOT_LOCKERlaERROR_QUORUM_DISK_NOT_FOUNDlaERROR_DATABASE_BACKUP_CORRUPTlaERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOTlaERROR_RESOURCE_PROPERTY_UNCHANGEABLElaERROR_CLUSTER_MEMBERSHIP_INVALID_STATElaERROR_CLUSTER_QUORUMLOG_NOT_FOUNDlaERROR_CLUSTER_MEMBERSHIP_HALTlaERROR_CLUSTER_INSTANCE_ID_MISMATCHlaERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IPlaERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCHlaERROR_CLUSTER_EVICT_WITHOUT_CLEANUPlaERROR_CLUSTER_PARAMETER_MISMATCHl
aERROR_NODE_CANNOT_BE_CLUSTEREDlaERROR_CLUSTER_WRONG_OS_VERSIONlaERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAMEl
aERROR_CLUSCFG_ALREADY_COMMITTEDlaERROR_CLUSCFG_ROLLBACK_FAILEDlaERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICTlaERROR_CLUSTER_OLD_VERSIONlaERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAMElaERROR_CLUSTER_NO_NET_ADAPTERSlaERROR_CLUSTER_POISONEDlaERROR_CLUSTER_GROUP_MOVINGlaERROR_CLUSTER_RESOURCE_TYPE_BUSYlaERROR_RESOURCE_CALL_TIMED_OUTlaERROR_INVALID_CLUSTER_IPV6_ADDRESSlaERROR_CLUSTER_INTERNAL_INVALID_FUNCTIONlaERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDSlaERROR_CLUSTER_PARTIAL_SENDlaERROR_CLUSTER_REGISTRY_INVALID_FUNCTIONlaERROR_CLUSTER_INVALID_STRING_TERMINATIONlaERROR_CLUSTER_INVALID_STRING_FORMATlaERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESSlaERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESSl aERROR_CLUSTER_NULL_DATAl!aERROR_CLUSTER_PARTIAL_READl"aERROR_CLUSTER_PARTIAL_WRITEl#aERROR_CLUSTER_CANT_DESERIALIZE_DATAl$aERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICTl%aERROR_CLUSTER_NO_QUORUMl&aERROR_CLUSTER_INVALID_IPV6_NETWORKl'aERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORKl(aERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUPl)aERROR_DEPENDENCY_TREE_TOO_COMPLEXl*aERROR_EXCEPTION_IN_RESOURCE_CALLl+aERROR_CLUSTER_RHS_FAILED_INITIALIZATIONl,aERROR_CLUSTER_NOT_INSTALLEDl-aERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODElpaERROR_ENCRYPTION_FAILEDlqaERROR_DECRYPTION_FAILEDlraERROR_FILE_ENCRYPTEDlsaERROR_NO_RECOVERY_POLICYltaERROR_NO_EFSluaERROR_WRONG_EFSlvaERROR_NO_USER_KEYSlwaERROR_FILE_NOT_ENCRYPTEDlxaERROR_NOT_EXPORT_FORMATlyaERROR_FILE_READ_ONLYlzaERROR_DIR_EFS_DISALLOWEDl{aERROR_EFS_SERVER_NOT_TRUSTEDl|aERROR_BAD_RECOVERY_POLICYl}aERROR_EFS_ALG_BLOB_TOO_BIGl~aERROR_VOLUME_NOT_SUPPORT_EFSlaERROR_EFS_DISABLEDlaERROR_EFS_VERSION_NOT_SUPPORTlaERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSElaERROR_CS_ENCRYPTION_UNSUPPORTED_SERVERlaERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILElaERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILElaERROR_CS_ENCRYPTION_FILE_NOT_CSElaERROR_NO_BROWSER_SERVERS_FOUNDlaERROR_LOG_SECTOR_INVALIDlaERROR_LOG_SECTOR_PARITY_INVALIDlaERROR_LOG_SECTOR_REMAPPEDlaERROR_LOG_BLOCK_INCOMPLETElaERROR_LOG_INVALID_RANGElaERROR_LOG_BLOCKS_EXHAUSTEDlaERROR_LOG_READ_CONTEXT_INVALIDlaERROR_LOG_RESTART_INVALIDlaERROR_LOG_BLOCK_VERSIONlaERROR_LOG_BLOCK_INVALIDlaERROR_LOG_READ_MODE_INVALIDlaERROR_LOG_NO_RESTARTlaERROR_LOG_METADATA_CORRUPTlaERROR_LOG_METADATA_INVALIDlaERROR_LOG_METADATA_INCONSISTENTlaERROR_LOG_RESERVATION_INVALIDlaERROR_LOG_CANT_DELETElaERROR_LOG_CONTAINER_LIMIT_EXCEEDEDlaERROR_LOG_START_OF_LOGlaERROR_LOG_POLICY_ALREADY_INSTALLEDlaERROR_LOG_POLICY_NOT_INSTALLEDlaERROR_LOG_POLICY_INVALIDlaERROR_LOG_POLICY_CONFLICTlaERROR_LOG_PINNED_ARCHIVE_TAILlaERROR_LOG_RECORD_NONEXISTENTlaERROR_LOG_RECORDS_RESERVED_INVALIDlaERROR_LOG_SPACE_RESERVED_INVALIDlaERROR_LOG_TAIL_INVALIDlaERROR_LOG_FULLlaERROR_COULD_NOT_RESIZE_LOGlaERROR_LOG_MULTIPLEXEDlaERROR_LOG_DEDICATEDlaERROR_LOG_ARCHIVE_NOT_IN_PROGRESSlaERROR_LOG_ARCHIVE_IN_PROGRESSlaERROR_LOG_EPHEMERALlaERROR_LOG_NOT_ENOUGH_CONTAINERSlaERROR_LOG_CLIENT_ALREADY_REGISTEREDlaERROR_LOG_CLIENT_NOT_REGISTEREDlaERROR_LOG_FULL_HANDLER_IN_PROGRESSlaERROR_LOG_CONTAINER_READ_FAILEDlaERROR_LOG_CONTAINER_WRITE_FAILEDlaERROR_LOG_CONTAINER_OPEN_FAILEDlaERROR_LOG_CONTAINER_STATE_INVALIDlaERROR_LOG_STATE_INVALIDlaERROR_LOG_PINNEDlaERROR_LOG_METADATA_FLUSH_FAILEDlaERROR_LOG_INCONSISTENT_SECURITYlaERROR_LOG_APPENDED_FLUSH_FAILEDlaERROR_LOG_PINNED_RESERVATIONl,aERROR_INVALID_TRANSACTIONl-aERROR_TRANSACTION_NOT_ACTIVEl.aERROR_TRANSACTION_REQUEST_NOT_VALIDl/aERROR_TRANSACTION_NOT_REQUESTEDl0aERROR_TRANSACTION_ALREADY_ABORTEDl1aERROR_TRANSACTION_ALREADY_COMMITTEDl2aERROR_TM_INITIALIZATION_FAILEDl3aERROR_RESOURCEMANAGER_READ_ONLYl4aERROR_TRANSACTION_NOT_JOINEDl5aERROR_TRANSACTION_SUPERIOR_EXISTSl6aERROR_CRM_PROTOCOL_ALREADY_EXISTSl7aERROR_TRANSACTION_PROPAGATION_FAILEDl8aERROR_CRM_PROTOCOL_NOT_FOUNDl9aERROR_TRANSACTION_INVALID_MARSHALL_BUFFERl:aERROR_CURRENT_TRANSACTION_NOT_VALIDl;aERROR_TRANSACTION_NOT_FOUNDl<aERROR_RESOURCEMANAGER_NOT_FOUNDl=aERROR_ENLISTMENT_NOT_FOUNDl>aERROR_TRANSACTIONMANAGER_NOT_FOUNDl?aERROR_TRANSACTIONMANAGER_NOT_ONLINEl@aERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISIONlAaERROR_TRANSACTION_NOT_ROOTlBaERROR_TRANSACTION_OBJECT_EXPIREDlCaERROR_TRANSACTION_RESPONSE_NOT_ENLISTEDlDaERROR_TRANSACTION_RECORD_TOO_LONGlEaERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTEDlFaERROR_TRANSACTION_INTEGRITY_VIOLATEDlaERROR_TRANSACTIONAL_CONFLICTlaERROR_RM_NOT_ACTIVElaERROR_RM_METADATA_CORRUPTlaERROR_DIRECTORY_NOT_RMlaERROR_TRANSACTIONS_UNSUPPORTED_REMOTElaERROR_LOG_RESIZE_INVALID_SIZElaERROR_OBJECT_NO_LONGER_EXISTSlaERROR_STREAM_MINIVERSION_NOT_FOUNDlaERROR_STREAM_MINIVERSION_NOT_VALIDlaERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTIONlaERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENTlaERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONSlaERROR_REMOTE_FILE_VERSION_MISMATCHlaERROR_HANDLE_NO_LONGER_VALIDlaERROR_NO_TXF_METADATAlaERROR_LOG_CORRUPTION_DETECTEDlaERROR_CANT_RECOVER_WITH_HANDLE_OPENlaERROR_RM_DISCONNECTEDlaERROR_ENLISTMENT_NOT_SUPERIORlaERROR_RECOVERY_NOT_NEEDEDlaERROR_RM_ALREADY_STARTEDlaERROR_FILE_IDENTITY_NOT_PERSISTENTlaERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCYlaERROR_CANT_CROSS_RM_BOUNDARYlaERROR_TXF_DIR_NOT_EMPTYlaERROR_INDOUBT_TRANSACTIONS_EXISTlaERROR_TM_VOLATILElaERROR_ROLLBACK_TIMER_EXPIREDlaERROR_TXF_ATTRIBUTE_CORRUPTlaERROR_EFS_NOT_ALLOWED_IN_TRANSACTIONlaERROR_TRANSACTIONAL_OPEN_NOT_ALLOWEDlaERROR_LOG_GROWTH_FAILEDlaERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTElaERROR_TXF_METADATA_ALREADY_PRESENTlaERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SETlaERROR_TRANSACTION_REQUIRED_PROMOTIONlaERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTIONlaERROR_TRANSACTIONS_NOT_FROZENlaERROR_TRANSACTION_FREEZE_IN_PROGRESSlaERROR_NOT_SNAPSHOT_VOLUMElaERROR_NO_SAVEPOINT_WITH_OPEN_FILESlaERROR_DATA_LOST_REPAIRlaERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTIONlaERROR_TM_IDENTITY_MISMATCHlaERROR_FLOATED_SECTIONlaERROR_CANNOT_ACCEPT_TRANSACTED_WORKlaERROR_CANNOT_ABORT_TRANSACTIONSlaERROR_BAD_CLUSTERSlaERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTIONlaERROR_VOLUME_DIRTYlaERROR_NO_LINK_TRACKING_IN_TRANSACTIONlaERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTIONlYaERROR_CTX_WINSTATION_NAME_INVALIDlZaERROR_CTX_INVALID_PDl[aERROR_CTX_PD_NOT_FOUNDl\aERROR_CTX_WD_NOT_FOUNDl]aERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRYl^aERROR_CTX_SERVICE_NAME_COLLISIONl_aERROR_CTX_CLOSE_PENDINGl`aERROR_CTX_NO_OUTBUFlaaERROR_CTX_MODEM_INF_NOT_FOUNDlbaERROR_CTX_INVALID_MODEMNAMElcaERROR_CTX_MODEM_RESPONSE_ERRORldaERROR_CTX_MODEM_RESPONSE_TIMEOUTleaERROR_CTX_MODEM_RESPONSE_NO_CARRIERlfaERROR_CTX_MODEM_RESPONSE_NO_DIALTONElgaERROR_CTX_MODEM_RESPONSE_BUSYlhaERROR_CTX_MODEM_RESPONSE_VOICEliaERROR_CTX_TD_ERRORlnaERROR_CTX_WINSTATION_NOT_FOUNDloaERROR_CTX_WINSTATION_ALREADY_EXISTSlpaERROR_CTX_WINSTATION_BUSYlqaERROR_CTX_BAD_VIDEO_MODEl{aERROR_CTX_GRAPHICS_INVALIDl}aERROR_CTX_LOGON_DISABLEDl~aERROR_CTX_NOT_CONSOLElaERROR_CTX_CLIENT_QUERY_TIMEOUTlaERROR_CTX_CONSOLE_DISCONNECTlaERROR_CTX_CONSOLE_CONNECTlaERROR_CTX_SHADOW_DENIEDlaERROR_CTX_WINSTATION_ACCESS_DENIEDlaERROR_CTX_INVALID_WDlaERROR_CTX_SHADOW_INVALIDlaERROR_CTX_SHADOW_DISABLEDlaERROR_CTX_CLIENT_LICENSE_IN_USElaERROR_CTX_CLIENT_LICENSE_NOT_SETlaERROR_CTX_LICENSE_NOT_AVAILABLElaERROR_CTX_LICENSE_CLIENT_INVALIDlaERROR_CTX_LICENSE_EXPIREDlaERROR_CTX_SHADOW_NOT_RUNNINGlaERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGElaERROR_ACTIVATION_COUNT_EXCEEDEDlaERROR_CTX_WINSTATIONS_DISABLEDlaERROR_CTX_ENCRYPTION_LEVEL_REQUIREDlaERROR_CTX_SESSION_IN_USElaERROR_CTX_NO_FORCE_LOGOFFlaERROR_CTX_ACCOUNT_RESTRICTIONlaERROR_RDP_PROTOCOL_ERRORlaERROR_CTX_CDM_CONNECTlaERROR_CTX_CDM_DISCONNECTlaERROR_CTX_SECURITY_LAYER_ERRORlaERROR_TS_INCOMPATIBLE_SESSIONSlAaFRS_ERR_INVALID_API_SEQUENCElBaFRS_ERR_STARTING_SERVICElCaFRS_ERR_STOPPING_SERVICElDaFRS_ERR_INTERNAL_APIlEaFRS_ERR_INTERNALlFaFRS_ERR_SERVICE_COMMlGaFRS_ERR_INSUFFICIENT_PRIVlHaFRS_ERR_AUTHENTICATIONlIaFRS_ERR_PARENT_INSUFFICIENT_PRIVlJaFRS_ERR_PARENT_AUTHENTICATIONlKaFRS_ERR_CHILD_TO_PARENT_COMMlLaFRS_ERR_PARENT_TO_CHILD_COMMlMaFRS_ERR_SYSVOL_POPULATElNaFRS_ERR_SYSVOL_POPULATE_TIMEOUTlOaFRS_ERR_SYSVOL_IS_BUSYlPaFRS_ERR_SYSVOL_DEMOTElQaFRS_ERR_INVALID_SERVICE_PARAMETERaDS_S_SUCCESSl l aERROR_DS_MEMBERSHIP_EVALUATED_LOCALLYl
 aERROR_DS_NO_ATTRIBUTE_OR_VALUEl aERROR_DS_INVALID_ATTRIBUTE_SYNTAXl aERROR_DS_ATTRIBUTE_TYPE_UNDEFINEDl
 aERROR_DS_ATTRIBUTE_OR_VALUE_EXISTSl aERROR_DS_BUSYl aERROR_DS_UNAVAILABLEl aERROR_DS_NO_RIDS_ALLOCATEDl aERROR_DS_NO_MORE_RIDSl aERROR_DS_INCORRECT_ROLE_OWNERl aERROR_DS_RIDMGR_INIT_ERRORl aERROR_DS_OBJ_CLASS_VIOLATIONl aERROR_DS_CANT_ON_NON_LEAFl aERROR_DS_CANT_ON_RDNl aERROR_DS_CANT_MOD_OBJ_CLASSl aERROR_DS_CROSS_DOM_MOVE_ERRORl aERROR_DS_GC_NOT_AVAILABLEl aERROR_SHARED_POLICYl aERROR_POLICY_OBJECT_NOT_FOUNDl aERROR_POLICY_ONLY_IN_DSl aERROR_PROMOTION_ACTIVEl aERROR_NO_PROMOTION_ACTIVEl  aERROR_DS_OPERATIONS_ERRORl! aERROR_DS_PROTOCOL_ERRORl" aERROR_DS_TIMELIMIT_EXCEEDEDl# aERROR_DS_SIZELIMIT_EXCEEDEDl$ aERROR_DS_ADMIN_LIMIT_EXCEEDEDl% aERROR_DS_COMPARE_FALSEl& aERROR_DS_COMPARE_TRUEl' aERROR_DS_AUTH_METHOD_NOT_SUPPORTEDl( aERROR_DS_STRONG_AUTH_REQUIREDl) aERROR_DS_INAPPROPRIATE_AUTHl* aERROR_DS_AUTH_UNKNOWNl+ aERROR_DS_REFERRALl, aERROR_DS_UNAVAILABLE_CRIT_EXTENSIONl- aERROR_DS_CONFIDENTIALITY_REQUIREDl. aERROR_DS_INAPPROPRIATE_MATCHINGl/ aERROR_DS_CONSTRAINT_VIOLATIONl0 aERROR_DS_NO_SUCH_OBJECTl1 aERROR_DS_ALIAS_PROBLEMl2 aERROR_DS_INVALID_DN_SYNTAXl3 aERROR_DS_IS_LEAFl4 aERROR_DS_ALIAS_DEREF_PROBLEMl5 aERROR_DS_UNWILLING_TO_PERFORMl6 aERROR_DS_LOOP_DETECTl7 aERROR_DS_NAMING_VIOLATIONl8 aERROR_DS_OBJECT_RESULTS_TOO_LARGEl9 aERROR_DS_AFFECTS_MULTIPLE_DSASl: aERROR_DS_SERVER_DOWNl; aERROR_DS_LOCAL_ERRORl< aERROR_DS_ENCODING_ERRORl= aERROR_DS_DECODING_ERRORl> aERROR_DS_FILTER_UNKNOWNl? aERROR_DS_PARAM_ERRORl@ aERROR_DS_NOT_SUPPORTEDlA aERROR_DS_NO_RESULTS_RETURNEDlB aERROR_DS_CONTROL_NOT_FOUNDlC aERROR_DS_CLIENT_LOOPlD aERROR_DS_REFERRAL_LIMIT_EXCEEDEDlE aERROR_DS_SORT_CONTROL_MISSINGlF aERROR_DS_OFFSET_RANGE_ERRORlm aERROR_DS_ROOT_MUST_BE_NCln aERROR_DS_ADD_REPLICA_INHIBITEDlo aERROR_DS_ATT_NOT_DEF_IN_SCHEMAlp aERROR_DS_MAX_OBJ_SIZE_EXCEEDEDlq aERROR_DS_OBJ_STRING_NAME_EXISTSlr aERROR_DS_NO_RDN_DEFINED_IN_SCHEMAls aERROR_DS_RDN_DOESNT_MATCH_SCHEMAlt aERROR_DS_NO_REQUESTED_ATTS_FOUNDlu aERROR_DS_USER_BUFFER_TO_SMALLlv aERROR_DS_ATT_IS_NOT_ON_OBJlw aERROR_DS_ILLEGAL_MOD_OPERATIONlx aERROR_DS_OBJ_TOO_LARGEly aERROR_DS_BAD_INSTANCE_TYPElz aERROR_DS_MASTERDSA_REQUIREDl{ aERROR_DS_OBJECT_CLASS_REQUIREDl| aERROR_DS_MISSING_REQUIRED_ATTl} aERROR_DS_ATT_NOT_DEF_FOR_CLASSl~ aERROR_DS_ATT_ALREADY_EXISTSl aERROR_DS_CANT_ADD_ATT_VALUESl aERROR_DS_SINGLE_VALUE_CONSTRAINTl aERROR_DS_RANGE_CONSTRAINTl aERROR_DS_ATT_VAL_ALREADY_EXISTSl aERROR_DS_CANT_REM_MISSING_ATTl aERROR_DS_CANT_REM_MISSING_ATT_VALl aERROR_DS_ROOT_CANT_BE_SUBREFl aERROR_DS_NO_CHAININGl aERROR_DS_NO_CHAINED_EVALl aERROR_DS_NO_PARENT_OBJECTl aERROR_DS_PARENT_IS_AN_ALIASl aERROR_DS_CANT_MIX_MASTER_AND_REPSl aERROR_DS_CHILDREN_EXISTl aERROR_DS_OBJ_NOT_FOUNDl aERROR_DS_ALIASED_OBJ_MISSINGl aERROR_DS_BAD_NAME_SYNTAXl aERROR_DS_ALIAS_POINTS_TO_ALIASl aERROR_DS_CANT_DEREF_ALIASl aERROR_DS_OUT_OF_SCOPEl aERROR_DS_OBJECT_BEING_REMOVEDl aERROR_DS_CANT_DELETE_DSA_OBJl aERROR_DS_GENERIC_ERRORl aERROR_DS_DSA_MUST_BE_INT_MASTERl aERROR_DS_CLASS_NOT_DSAl aERROR_DS_INSUFF_ACCESS_RIGHTSl aERROR_DS_ILLEGAL_SUPERIORl aERROR_DS_ATTRIBUTE_OWNED_BY_SAMl aERROR_DS_NAME_TOO_MANY_PARTSl aERROR_DS_NAME_TOO_LONGl aERROR_DS_NAME_VALUE_TOO_LONGl aERROR_DS_NAME_UNPARSEABLEl aERROR_DS_NAME_TYPE_UNKNOWNl aERROR_DS_NOT_AN_OBJECTl aERROR_DS_SEC_DESC_TOO_SHORTl aERROR_DS_SEC_DESC_INVALIDl aERROR_DS_NO_DELETED_NAMEl aERROR_DS_SUBREF_MUST_HAVE_PARENTl aERROR_DS_NCNAME_MUST_BE_NCl aERROR_DS_CANT_ADD_SYSTEM_ONLYl aERROR_DS_CLASS_MUST_BE_CONCRETEl aERROR_DS_INVALID_DMDl aERROR_DS_OBJ_GUID_EXISTSl aERROR_DS_NOT_ON_BACKLINKl aERROR_DS_NO_CROSSREF_FOR_NCl aERROR_DS_SHUTTING_DOWNl aERROR_DS_UNKNOWN_OPERATIONl aERROR_DS_INVALID_ROLE_OWNERl aERROR_DS_COULDNT_CONTACT_FSMOl aERROR_DS_CROSS_NC_DN_RENAMEl aERROR_DS_CANT_MOD_SYSTEM_ONLYl aERROR_DS_REPLICATOR_ONLYl aERROR_DS_OBJ_CLASS_NOT_DEFINEDl aERROR_DS_OBJ_CLASS_NOT_SUBCLASSl aERROR_DS_NAME_REFERENCE_INVALIDl aERROR_DS_CROSS_REF_EXISTSl aERROR_DS_CANT_DEL_MASTER_CROSSREFl aERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEADl aERROR_DS_NOTIFY_FILTER_TOO_COMPLEXl aERROR_DS_DUP_RDNl aERROR_DS_DUP_OIDl aERROR_DS_DUP_MAPI_IDl aERROR_DS_DUP_SCHEMA_ID_GUIDl aERROR_DS_DUP_LDAP_DISPLAY_NAMEl aERROR_DS_SEMANTIC_ATT_TESTl aERROR_DS_SYNTAX_MISMATCHl aERROR_DS_EXISTS_IN_MUST_HAVEl aERROR_DS_EXISTS_IN_MAY_HAVEl aERROR_DS_NONEXISTENT_MAY_HAVEl aERROR_DS_NONEXISTENT_MUST_HAVEl aERROR_DS_AUX_CLS_TEST_FAILl aERROR_DS_NONEXISTENT_POSS_SUPl aERROR_DS_SUB_CLS_TEST_FAILl aERROR_DS_BAD_RDN_ATT_ID_SYNTAXl aERROR_DS_EXISTS_IN_AUX_CLSl aERROR_DS_EXISTS_IN_SUB_CLSl aERROR_DS_EXISTS_IN_POSS_SUPl aERROR_DS_RECALCSCHEMA_FAILEDl aERROR_DS_TREE_DELETE_NOT_FINISHEDl aERROR_DS_CANT_DELETEl aERROR_DS_ATT_SCHEMA_REQ_IDl aERROR_DS_BAD_ATT_SCHEMA_SYNTAXl aERROR_DS_CANT_CACHE_ATTl aERROR_DS_CANT_CACHE_CLASSl aERROR_DS_CANT_REMOVE_ATT_CACHEl aERROR_DS_CANT_REMOVE_CLASS_CACHEl aERROR_DS_CANT_RETRIEVE_DNl aERROR_DS_MISSING_SUPREFl aERROR_DS_CANT_RETRIEVE_INSTANCEl aERROR_DS_CODE_INCONSISTENCYl aERROR_DS_DATABASE_ERRORl aERROR_DS_GOVERNSID_MISSINGl aERROR_DS_MISSING_EXPECTED_ATTl aERROR_DS_NCNAME_MISSING_CR_REFl aERROR_DS_SECURITY_CHECKING_ERRORl aERROR_DS_SCHEMA_NOT_LOADEDl aERROR_DS_SCHEMA_ALLOC_FAILEDl aERROR_DS_ATT_SCHEMA_REQ_SYNTAXl aERROR_DS_GCVERIFY_ERRORl aERROR_DS_DRA_SCHEMA_MISMATCHl aERROR_DS_CANT_FIND_DSA_OBJl aERROR_DS_CANT_FIND_EXPECTED_NCl aERROR_DS_CANT_FIND_NC_IN_CACHEl aERROR_DS_CANT_RETRIEVE_CHILDl aERROR_DS_SECURITY_ILLEGAL_MODIFYl aERROR_DS_CANT_REPLACE_HIDDEN_RECl aERROR_DS_BAD_HIERARCHY_FILEl aERROR_DS_BUILD_HIERARCHY_TABLE_FAILEDl aERROR_DS_CONFIG_PARAM_MISSINGl aERROR_DS_COUNTING_AB_INDICES_FAILEDl aERROR_DS_HIERARCHY_TABLE_MALLOC_FAILEDl aERROR_DS_INTERNAL_FAILUREl aERROR_DS_UNKNOWN_ERRORl aERROR_DS_ROOT_REQUIRES_CLASS_TOPl aERROR_DS_REFUSING_FSMO_ROLESl aERROR_DS_MISSING_FSMO_SETTINGSl aERROR_DS_UNABLE_TO_SURRENDER_ROLESl aERROR_DS_DRA_GENERICl aERROR_DS_DRA_INVALID_PARAMETERl aERROR_DS_DRA_BUSYl aERROR_DS_DRA_BAD_DNl aERROR_DS_DRA_BAD_NCl aERROR_DS_DRA_DN_EXISTSl aERROR_DS_DRA_INTERNAL_ERRORl aERROR_DS_DRA_INCONSISTENT_DITl aERROR_DS_DRA_CONNECTION_FAILEDl aERROR_DS_DRA_BAD_INSTANCE_TYPEl aERROR_DS_DRA_OUT_OF_MEMl aERROR_DS_DRA_MAIL_PROBLEMl!aERROR_DS_DRA_REF_ALREADY_EXISTSl!aERROR_DS_DRA_REF_NOT_FOUNDl!aERROR_DS_DRA_OBJ_IS_REP_SOURCEl!aERROR_DS_DRA_DB_ERRORl!aERROR_DS_DRA_NO_REPLICAl!aERROR_DS_DRA_ACCESS_DENIEDl!aERROR_DS_DRA_NOT_SUPPORTEDl!aERROR_DS_DRA_RPC_CANCELLEDl!aERROR_DS_DRA_SOURCE_DISABLEDl!aERROR_DS_DRA_SINK_DISABLEDl
!aERROR_DS_DRA_NAME_COLLISIONl!aERROR_DS_DRA_SOURCE_REINSTALLEDl!aERROR_DS_DRA_MISSING_PARENTl
!aERROR_DS_DRA_PREEMPTEDl!aERROR_DS_DRA_ABANDON_SYNCl!aERROR_DS_DRA_SHUTDOWNl!aERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SETl!aERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICAl!aERROR_DS_DRA_EXTN_CONNECTION_FAILEDl!aERROR_DS_INSTALL_SCHEMA_MISMATCHl!aERROR_DS_DUP_LINK_IDl!aERROR_DS_NAME_ERROR_RESOLVINGl!aERROR_DS_NAME_ERROR_NOT_FOUNDl!aERROR_DS_NAME_ERROR_NOT_UNIQUEl!aERROR_DS_NAME_ERROR_NO_MAPPINGl!aERROR_DS_NAME_ERROR_DOMAIN_ONLYl!aERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPINGl!aERROR_DS_CONSTRUCTED_ATT_MODl!aERROR_DS_WRONG_OM_OBJ_CLASSl!aERROR_DS_DRA_REPL_PENDINGl!aERROR_DS_DS_REQUIREDl!aERROR_DS_INVALID_LDAP_DISPLAY_NAMEl !aERROR_DS_NON_BASE_SEARCHl!!aERROR_DS_CANT_RETRIEVE_ATTSl"!aERROR_DS_BACKLINK_WITHOUT_LINKl#!aERROR_DS_EPOCH_MISMATCHl$!aERROR_DS_SRC_NAME_MISMATCHl%!aERROR_DS_SRC_AND_DST_NC_IDENTICALl&!aERROR_DS_DST_NC_MISMATCHl'!aERROR_DS_NOT_AUTHORITIVE_FOR_DST_NCl(!aERROR_DS_SRC_GUID_MISMATCHl)!aERROR_DS_CANT_MOVE_DELETED_OBJECTl*!aERROR_DS_PDC_OPERATION_IN_PROGRESSl+!aERROR_DS_CROSS_DOMAIN_CLEANUP_REQDl,!aERROR_DS_ILLEGAL_XDOM_MOVE_OPERATIONl-!aERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPSl.!aERROR_DS_NC_MUST_HAVE_NC_PARENTl/!aERROR_DS_CR_IMPOSSIBLE_TO_VALIDATEl0!aERROR_DS_DST_DOMAIN_NOT_NATIVEl1!aERROR_DS_MISSING_INFRASTRUCTURE_CONTAINERl2!aERROR_DS_CANT_MOVE_ACCOUNT_GROUPl3!aERROR_DS_CANT_MOVE_RESOURCE_GROUPl4!aERROR_DS_INVALID_SEARCH_FLAGl5!aERROR_DS_NO_TREE_DELETE_ABOVE_NCl6!aERROR_DS_COULDNT_LOCK_TREE_FOR_DELETEl7!aERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETEl8!aERROR_DS_SAM_INIT_FAILUREl9!aERROR_DS_SENSITIVE_GROUP_VIOLATIONl:!aERROR_DS_CANT_MOD_PRIMARYGROUPIDl;!aERROR_DS_ILLEGAL_BASE_SCHEMA_MODl<!aERROR_DS_NONSAFE_SCHEMA_CHANGEl=!aERROR_DS_SCHEMA_UPDATE_DISALLOWEDl>!aERROR_DS_CANT_CREATE_UNDER_SCHEMAl?!aERROR_DS_INSTALL_NO_SRC_SCH_VERSIONl@!aERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILElA!aERROR_DS_INVALID_GROUP_TYPElB!aERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAINlC!aERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAINlD!aERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBERlE!aERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBERlF!aERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBERlG!aERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBERlH!aERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBERlI!aERROR_DS_HAVE_PRIMARY_MEMBERSlJ!aERROR_DS_STRING_SD_CONVERSION_FAILEDlK!aERROR_DS_NAMING_MASTER_GClL!aERROR_DS_DNS_LOOKUP_FAILURElM!aERROR_DS_COULDNT_UPDATE_SPNSlN!aERROR_DS_CANT_RETRIEVE_SDlO!aERROR_DS_KEY_NOT_UNIQUElP!aERROR_DS_WRONG_LINKED_ATT_SYNTAXlQ!aERROR_DS_SAM_NEED_BOOTKEY_PASSWORDlR!aERROR_DS_SAM_NEED_BOOTKEY_FLOPPYlS!aERROR_DS_CANT_STARTlT!aERROR_DS_INIT_FAILURElU!aERROR_DS_NO_PKT_PRIVACY_ON_CONNECTIONlV!aERROR_DS_SOURCE_DOMAIN_IN_FORESTlW!aERROR_DS_DESTINATION_DOMAIN_NOT_IN_FORESTlX!aERROR_DS_DESTINATION_AUDITING_NOT_ENABLEDlY!aERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAINlZ!aERROR_DS_SRC_OBJ_NOT_GROUP_OR_USERl[!aERROR_DS_SRC_SID_EXISTS_IN_FORESTl\!aERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCHl]!aERROR_SAM_INIT_FAILUREl^!aERROR_DS_DRA_SCHEMA_INFO_SHIPl_!aERROR_DS_DRA_SCHEMA_CONFLICTl`!aERROR_DS_DRA_EARLIER_SCHEMA_CONFLICTla!aERROR_DS_DRA_OBJ_NC_MISMATCHlb!aERROR_DS_NC_STILL_HAS_DSASlc!aERROR_DS_GC_REQUIREDld!aERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLYle!aERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPSlf!aERROR_DS_CANT_ADD_TO_GClg!aERROR_DS_NO_CHECKPOINT_WITH_PDClh!aERROR_DS_SOURCE_AUDITING_NOT_ENABLEDli!aERROR_DS_CANT_CREATE_IN_NONDOMAIN_NClj!aERROR_DS_INVALID_NAME_FOR_SPNlk!aERROR_DS_FILTER_USES_CONTRUCTED_ATTRSll!aERROR_DS_UNICODEPWD_NOT_IN_QUOTESlm!aERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDEDln!aERROR_DS_MUST_BE_RUN_ON_DST_DClo!aERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATERlp!aERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJlq!aERROR_DS_INIT_FAILURE_CONSOLElr!aERROR_DS_SAM_INIT_FAILURE_CONSOLEls!aERROR_DS_FOREST_VERSION_TOO_HIGHlt!aERROR_DS_DOMAIN_VERSION_TOO_HIGHlu!aERROR_DS_FOREST_VERSION_TOO_LOWlv!aERROR_DS_DOMAIN_VERSION_TOO_LOWlw!aERROR_DS_INCOMPATIBLE_VERSIONlx!aERROR_DS_LOW_DSA_VERSIONly!aERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAINlz!aERROR_DS_NOT_SUPPORTED_SORT_ORDERl{!aERROR_DS_NAME_NOT_UNIQUEl|!aERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4l}!aERROR_DS_OUT_OF_VERSION_STOREl~!aERROR_DS_INCOMPATIBLE_CONTROLS_USEDl!aERROR_DS_NO_REF_DOMAINl!aERROR_DS_RESERVED_LINK_IDl!aERROR_DS_LINK_ID_NOT_AVAILABLEl!aERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBERl!aERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPEl!aERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NCl!aERROR_DS_MODIFYDN_DISALLOWED_BY_FLAGl!aERROR_DS_MODIFYDN_WRONG_GRANDPARENTl!aERROR_DS_NAME_ERROR_TRUST_REFERRALl!aERROR_NOT_SUPPORTED_ON_STANDARD_SERVERl!aERROR_DS_CANT_ACCESS_REMOTE_PART_OF_ADl!aERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2l!aERROR_DS_THREAD_LIMIT_EXCEEDEDl!aERROR_DS_NOT_CLOSESTl!aERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REFl!aERROR_DS_SINGLE_USER_MODE_FAILEDl!aERROR_DS_NTDSCRIPT_SYNTAX_ERRORl!aERROR_DS_NTDSCRIPT_PROCESS_ERRORl!aERROR_DS_DIFFERENT_REPL_EPOCHSl!aERROR_DS_DRS_EXTENSIONS_CHANGEDl!aERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CRl!aERROR_DS_NO_MSDS_INTIDl!aERROR_DS_DUP_MSDS_INTIDl!aERROR_DS_EXISTS_IN_RDNATTIDl!aERROR_DS_AUTHORIZATION_FAILEDl!aERROR_DS_INVALID_SCRIPTl!aERROR_DS_REMOTE_CROSSREF_OP_FAILEDl!aERROR_DS_CROSS_REF_BUSYl!aERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAINl!aERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NCl!aERROR_DS_DUPLICATE_ID_FOUNDl!aERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECTl!aERROR_DS_GROUP_CONVERSION_ERRORl!aERROR_DS_CANT_MOVE_APP_BASIC_GROUPl!aERROR_DS_CANT_MOVE_APP_QUERY_GROUPl!aERROR_DS_ROLE_NOT_VERIFIEDl!aERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIALl!aERROR_DS_DOMAIN_RENAME_IN_PROGRESSl!aERROR_DS_EXISTING_AD_CHILD_NCl!aERROR_DS_REPL_LIFETIME_EXCEEDEDl!aERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINERl!aERROR_DS_LDAP_SEND_QUEUE_FULLl!aERROR_DS_DRA_OUT_SCHEDULE_WINDOWl!aERROR_DS_POLICY_NOT_KNOWNl!aERROR_NO_SITE_SETTINGS_OBJECTl!aERROR_NO_SECRETSl!aERROR_NO_WRITABLE_DC_FOUNDl!aERROR_DS_NO_SERVER_OBJECTl!aERROR_DS_NO_NTDSA_OBJECTl!aERROR_DS_NON_ASQ_SEARCHl!aERROR_DS_AUDIT_FAILUREl!aERROR_DS_INVALID_SEARCH_FLAG_SUBTREEl!aERROR_DS_INVALID_SEARCH_FLAG_TUPLEl!aERROR_DS_HIERARCHY_TABLE_TOO_DEEPaSEVERITY_SUCCESSaSEVERITY_ERRORaHRESULT_FROM_WIN32aSUCCEEDEDaFAILEDaHRESULT_CODEaSCODE_CODEaHRESULT_FACILITYaSCODE_FACILITYaHRESULT_SEVERITYaSCODE_SEVERITYqaHRESULT_FROM_NTaGetScodeaResultFromScodeaNOERRORqaE_UNEXPECTEDq@aE_NOTIMPLqaE_OUTOFMEMORYqWaE_INVALIDARGq@aE_NOINTERFACEq@aE_POINTERqaE_HANDLEq@aE_ABORTq@aE_FAILqaE_ACCESSDENIEDqawin16_E_NOTIMPLqawin16_E_OUTOFMEMORYqawin16_E_INVALIDARGqawin16_E_NOINTERFACEqawin16_E_POINTERqawin16_E_HANDLEqawin16_E_ABORTqawin16_E_FAILqawin16_E_ACCESSDENIEDq
aE_PENDINGq@aCO_E_INIT_TLSq@aCO_E_INIT_SHARED_ALLOCATORq@aCO_E_INIT_MEMORY_ALLOCATORq@aCO_E_INIT_CLASS_CACHEq
@aCO_E_INIT_RPC_CHANNELq@aCO_E_INIT_TLS_SET_CHANNEL_CONTROLq@aCO_E_INIT_TLS_CHANNEL_CONTROLq
@aCO_E_INIT_UNACCEPTED_USER_ALLOCATORq@aCO_E_INIT_SCM_MUTEX_EXISTSq@aCO_E_INIT_SCM_FILE_MAPPING_EXISTSq@aCO_E_INIT_SCM_MAP_VIEW_OF_FILEq@aCO_E_INIT_SCM_EXEC_FAILUREq@aCO_E_INIT_ONLY_SINGLE_THREADEDq@aCO_E_CANT_REMOTEq@aCO_E_BAD_SERVER_NAMEq@aCO_E_WRONG_SERVER_IDENTITYq@aCO_E_OLE1DDE_DISABLEDq@aCO_E_RUNAS_SYNTAXq@aCO_E_CREATEPROCESS_FAILUREq@aCO_E_RUNAS_CREATEPROCESS_FAILUREq@aCO_E_RUNAS_LOGON_FAILUREq@aCO_E_LAUNCH_PERMSSION_DENIEDq@aCO_E_START_SERVICE_FAILUREq@aCO_E_REMOTE_COMMUNICATION_FAILUREq@aCO_E_SERVER_START_TIMEOUTq@aCO_E_CLSREG_INCONSISTENTq @aCO_E_IIDREG_INCONSISTENTq!@aCO_E_NOT_SUPPORTEDq"@aCO_E_RELOAD_DLLq#@aCO_E_MSI_ERRORqaOLE_E_FIRSTqaOLE_E_LASTlaOLE_S_FIRSTlaOLE_S_LASTaOLE_E_OLEVERBqaOLE_E_ADVFqaOLE_E_ENUM_NOMOREqaOLE_E_ADVISENOTSUPPORTEDqaOLE_E_NOCONNECTIONqaOLE_E_NOTRUNNINGqaOLE_E_NOCACHEqaOLE_E_BLANKqaOLE_E_CLASSDIFFqaOLE_E_CANT_GETMONIKERq
aOLE_E_CANT_BINDTOSOURCEqaOLE_E_STATICqaOLE_E_PROMPTSAVECANCELLEDq
aOLE_E_INVALIDRECTqaOLE_E_WRONGCOMPOBJqaOLE_E_INVALIDHWNDqaOLE_E_NOT_INPLACEACTIVEqaOLE_E_CANTCONVERTqaOLE_E_NOSTORAGEqdaDV_E_FORMATETCqeaDV_E_DVTARGETDEVICEqfaDV_E_STGMEDIUMqgaDV_E_STATDATAqhaDV_E_LINDEXqiaDV_E_TYMEDqjaDV_E_CLIPFORMATqkaDV_E_DVASPECTqlaDV_E_DVTARGETDEVICE_SIZEqmaDV_E_NOIVIEWOBJECTqaDRAGDROP_E_FIRSTqaDRAGDROP_E_LASTlaDRAGDROP_S_FIRSTlaDRAGDROP_S_LASTaDRAGDROP_E_NOTREGISTEREDqaDRAGDROP_E_ALREADYREGISTEREDqaDRAGDROP_E_INVALIDHWNDqaCLASSFACTORY_E_FIRSTqaCLASSFACTORY_E_LASTlaCLASSFACTORY_S_FIRSTlaCLASSFACTORY_S_LASTaCLASS_E_NOAGGREGATIONqaCLASS_E_CLASSNOTAVAILABLEqaCLASS_E_NOTLICENSEDq aMARSHAL_E_FIRSTq/aMARSHAL_E_LASTl aMARSHAL_S_FIRSTl/aMARSHAL_S_LASTq0aDATA_E_FIRSTq?aDATA_E_LASTl0aDATA_S_FIRSTl?aDATA_S_LASTq@aVIEW_E_FIRSTqOaVIEW_E_LASTl@aVIEW_S_FIRSTlOaVIEW_S_LASTaVIEW_E_DRAWqPaREGDB_E_FIRSTq_aREGDB_E_LASTlPaREGDB_S_FIRSTl_aREGDB_S_LASTaREGDB_E_READREGDBqQaREGDB_E_WRITEREGDBqRaREGDB_E_KEYMISSINGqSaREGDB_E_INVALIDVALUEqTaREGDB_E_CLASSNOTREGqUaREGDB_E_IIDNOTREGq`aCAT_E_FIRSTqaaCAT_E_LASTaCAT_E_CATIDNOEXISTaCAT_E_NODESCRIPTIONqdaCS_E_FIRSTqhaCS_E_LASTaCS_E_PACKAGE_NOTFOUNDqeaCS_E_NOT_DELETABLEqfaCS_E_CLASS_NOTFOUNDqgaCS_E_INVALID_VERSIONaCS_E_NO_CLASSSTOREqpaCACHE_E_FIRSTqaCACHE_E_LASTlpaCACHE_S_FIRSTlaCACHE_S_LASTaCACHE_E_NOCACHE_UPDATEDqaOLEOBJ_E_FIRSTqaOLEOBJ_E_LASTlaOLEOBJ_S_FIRSTlaOLEOBJ_S_LASTaOLEOBJ_E_NOVERBSqaOLEOBJ_E_INVALIDVERBqaCLIENTSITE_E_FIRSTqaCLIENTSITE_E_LASTlaCLIENTSITE_S_FIRSTlaCLIENTSITE_S_LASTqaINPLACE_E_NOTUNDOABLEqaINPLACE_E_NOTOOLSPACEaINPLACE_E_FIRSTqaINPLACE_E_LASTlaINPLACE_S_FIRSTlaINPLACE_S_LASTqaENUM_E_FIRSTqaENUM_E_LASTlaENUM_S_FIRSTlaENUM_S_LASTqaCONVERT10_E_FIRSTqaCONVERT10_E_LASTlaCONVERT10_S_FIRSTlaCONVERT10_S_LASTaCONVERT10_E_OLESTREAM_GETqaCONVERT10_E_OLESTREAM_PUTqaCONVERT10_E_OLESTREAM_FMTqaCONVERT10_E_OLESTREAM_BITMAP_TO_DIBqaCONVERT10_E_STG_FMTqaCONVERT10_E_STG_NO_STD_STREAMqaCONVERT10_E_STG_DIB_TO_BITMAPqaCLIPBRD_E_FIRSTqaCLIPBRD_E_LASTlaCLIPBRD_S_FIRSTlaCLIPBRD_S_LASTaCLIPBRD_E_CANT_OPENqaCLIPBRD_E_CANT_EMPTYqaCLIPBRD_E_CANT_SETqaCLIPBRD_E_BAD_DATAqaCLIPBRD_E_CANT_CLOSEqaMK_E_FIRSTqaMK_E_LASTlaMK_S_FIRSTlaMK_S_LASTaMK_E_CONNECTMANUALLYqaMK_E_EXCEEDEDDEADLINEqaMK_E_NEEDGENERICqaMK_E_UNAVAILABLEqaMK_E_SYNTAXqaMK_E_NOOBJECTqaMK_E_INVALIDEXTENSIONqaMK_E_INTERMEDIATEINTERFACENOTSUPPORTEDqaMK_E_NOTBINDABLEqaMK_E_NOTBOUNDqaMK_E_CANTOPENFILEqaMK_E_MUSTBOTHERUSERqaMK_E_NOINVERSEqaMK_E_NOSTORAGEqaMK_E_NOPREFIXaMK_E_ENUMERATION_FAILEDqaCO_E_FIRSTqaCO_E_LASTlaCO_S_FIRSTlaCO_S_LASTaCO_E_NOTINITIALIZEDqaCO_E_ALREADYINITIALIZEDqaCO_E_CANTDETERMINECLASSqaCO_E_CLASSSTRINGqaCO_E_IIDSTRINGqaCO_E_APPNOTFOUNDqaCO_E_APPSINGLEUSEqaCO_E_ERRORINAPPqaCO_E_DLLNOTFOUNDqaCO_E_ERRORINDLLqaCO_E_WRONGOSFORAPPqaCO_E_OBJNOTREGqaCO_E_OBJISREGqaCO_E_OBJNOTCONNECTEDqaCO_E_APPDIDNTREGaCO_E_RELEASEDqaCO_E_FAILEDTOIMPERSONATEqaCO_E_FAILEDTOGETSECCTXqaCO_E_FAILEDTOOPENTHREADTOKENqaCO_E_FAILEDTOGETTOKENINFOqaCO_E_TRUSTEEDOESNTMATCHCLIENTqaCO_E_FAILEDTOQUERYCLIENTBLANKETqaCO_E_FAILEDTOSETDACLqaCO_E_ACCESSCHECKFAILEDqaCO_E_NETACCESSAPIFAILEDqaCO_E_WRONGTRUSTEENAMESYNTAXq
aCO_E_INVALIDSIDqaCO_E_CONVERSIONFAILEDqaCO_E_NOMATCHINGSIDFOUNDq
aCO_E_LOOKUPACCSIDFAILEDqaCO_E_NOMATCHINGNAMEFOUNDqaCO_E_LOOKUPACCNAMEFAILEDqaCO_E_SETSERLHNDLFAILEDqaCO_E_FAILEDTOGETWINDIRqaCO_E_PATHTOOLONGqaCO_E_FAILEDTOGENUUIDqaCO_E_FAILEDTOCREATEFILEqaCO_E_FAILEDTOCLOSEHANDLEqaCO_E_EXCEEDSYSACLLIMITqaCO_E_ACESINWRONGORDERqaCO_E_INCOMPATIBLESTREAMVERSIONqaCO_E_FAILEDTOOPENPROCESSTOKENqaCO_E_DECODEFAILEDqaCO_E_ACNOTINITIALIZEDaOLE_S_USEREGlaOLE_S_STATIClaOLE_S_MAC_CLIPFORMATaDRAGDROP_S_DROPlaDRAGDROP_S_CANCELlaDRAGDROP_S_USEDEFAULTCURSORSaDATA_S_SAMEFORMATETCaVIEW_S_ALREADY_FROZENaCACHE_S_FORMATETC_NOTSUPPORTEDlqaCACHE_S_SAMECACHElraCACHE_S_SOMECACHES_NOTUPDATEDaOLEOBJ_S_INVALIDVERBlaOLEOBJ_S_CANNOT_DOVERB_NOWlaOLEOBJ_S_INVALIDHWNDaINPLACE_S_TRUNCATEDaCONVERT10_S_NO_PRESENTATIONlaMK_S_REDUCED_TO_SELFlaMK_S_MElaMK_S_HIMlaMK_S_USlaMK_S_MONIKERALREADYREGISTEREDqaCO_E_CLASS_CREATE_FAILEDqaCO_E_SCM_ERRORqaCO_E_SCM_RPC_FAILUREqaCO_E_BAD_PATHqaCO_E_SERVER_EXEC_FAILUREqaCO_E_OBJSRV_RPC_FAILUREqaMK_E_NO_NORMALIZEDqaCO_E_SERVER_STOPPINGqaMEM_E_INVALID_ROOTqaMEM_E_INVALID_LINKqaMEM_E_INVALID_SIZElaCO_S_NOTALLINTERFACESqaDISP_E_UNKNOWNINTERFACEqaDISP_E_MEMBERNOTFOUNDqaDISP_E_PARAMNOTFOUNDqaDISP_E_TYPEMISMATCHqaDISP_E_UNKNOWNNAMEqaDISP_E_NONAMEDARGSqaDISP_E_BADVARTYPEqaDISP_E_EXCEPTIONq
aDISP_E_OVERFLOWqaDISP_E_BADINDEXqaDISP_E_UNKNOWNLCIDq
aDISP_E_ARRAYISLOCKEDqaDISP_E_BADPARAMCOUNTqaDISP_E_PARAMNOTOPTIONALqaDISP_E_BADCALLEEqaDISP_E_NOTACOLLECTIONqaDISP_E_DIVBYZEROqaTYPE_E_BUFFERTOOSMALLqaTYPE_E_FIELDNOTFOUNDqaTYPE_E_INVDATAREADqaTYPE_E_UNSUPFORMATqaTYPE_E_REGISTRYACCESSqaTYPE_E_LIBNOTREGISTEREDq'aTYPE_E_UNDEFINEDTYPEq(aTYPE_E_QUALIFIEDNAMEDISALLOWEDq)aTYPE_E_INVALIDSTATEq*aTYPE_E_WRONGTYPEKINDq+aTYPE_E_ELEMENTNOTFOUNDq,aTYPE_E_AMBIGUOUSNAMEq-aTYPE_E_NAMECONFLICTq.aTYPE_E_UNKNOWNLCIDq/aTYPE_E_DLLFUNCTIONNOTFOUNDqaTYPE_E_BADMODULEKINDqňaTYPE_E_SIZETOOBIGqƈaTYPE_E_DUPLICATEIDqψaTYPE_E_INVALIDIDqaTYPE_E_TYPEMISMATCHqaTYPE_E_OUTOFBOUNDSqaTYPE_E_IOERRORqaTYPE_E_CANTCREATETMPFILEqJaTYPE_E_CANTLOADLIBRARYqaTYPE_E_INCONSISTENTPROPFUNCSqaTYPE_E_CIRCULARTYPEqaSTG_E_INVALIDFUNCTIONqaSTG_E_FILENOTFOUNDqaSTG_E_PATHNOTFOUNDqaSTG_E_TOOMANYOPENFILESqaSTG_E_ACCESSDENIEDqaSTG_E_INVALIDHANDLEqaSTG_E_INSUFFICIENTMEMORYqaSTG_E_INVALIDPOINTERqaSTG_E_NOMOREFILESqaSTG_E_DISKISWRITEPROTECTEDqaSTG_E_SEEKERRORqaSTG_E_WRITEFAULTqaSTG_E_READFAULTq aSTG_E_SHAREVIOLATIONq!aSTG_E_LOCKVIOLATIONqPaSTG_E_FILEALREADYEXISTSqWaSTG_E_INVALIDPARAMETERqpaSTG_E_MEDIUMFULLqaSTG_E_PROPSETMISMATCHEDqaSTG_E_ABNORMALAPIEXITqaSTG_E_INVALIDHEADERqaSTG_E_INVALIDNAMEqaSTG_E_UNKNOWNqaSTG_E_UNIMPLEMENTEDFUNCTIONqaSTG_E_INVALIDFLAGqaSTG_E_INUSEqaSTG_E_NOTCURRENTqaSTG_E_REVERTEDqaSTG_E_CANTSAVEqaSTG_E_OLDFORMATqaSTG_E_OLDDLLqaSTG_E_SHAREREQUIREDqaSTG_E_NOTFILEBASEDSTORAGEqaSTG_E_EXTANTMARSHALLINGSqaSTG_E_DOCFILECORRUPTqaSTG_E_BADBASEADDRESSqaSTG_E_INCOMPLETEqaSTG_E_TERMINATEDlaSTG_S_CONVERTEDlaSTG_S_BLOCKlaSTG_S_RETRYNOWlaSTG_S_MONITORINGlaSTG_S_MULTIPLEOPENSlaSTG_S_CONSOLIDATIONFAILEDlaSTG_S_CANNOTCONSOLIDATEqaRPC_E_CALL_REJECTEDqaRPC_E_CALL_CANCELEDqaRPC_E_CANTPOST_INSENDCALLqaRPC_E_CANTCALLOUT_INASYNCCALLqaRPC_E_CANTCALLOUT_INEXTERNALCALLqaRPC_E_CONNECTION_TERMINATEDqaRPC_E_SERVER_DIEDqaRPC_E_CLIENT_DIEDqaRPC_E_INVALID_DATAPACKETq
aRPC_E_CANTTRANSMIT_CALLqaRPC_E_CLIENT_CANTMARSHAL_DATAqaRPC_E_CLIENT_CANTUNMARSHAL_DATAq
aRPC_E_SERVER_CANTMARSHAL_DATAqaRPC_E_SERVER_CANTUNMARSHAL_DATAqaRPC_E_INVALID_DATAqaRPC_E_INVALID_PARAMETERqaRPC_E_CANTCALLOUT_AGAINqaRPC_E_SERVER_DIED_DNEqaRPC_E_SYS_CALL_FAILEDqaRPC_E_OUT_OF_RESOURCESqaRPC_E_ATTEMPTED_MULTITHREADqaRPC_E_NOT_REGISTEREDqaRPC_E_FAULTqaRPC_E_SERVERFAULTqaRPC_E_CHANGED_MODEqaRPC_E_INVALIDMETHODqaRPC_E_DISCONNECTEDqaRPC_E_RETRYq
aRPC_E_SERVERCALL_RETRYLATERqaRPC_E_SERVERCALL_REJECTEDqaRPC_E_INVALID_CALLDATAq
aRPC_E_CANTCALLOUT_ININPUTSYNCCALLqaRPC_E_WRONG_THREADqaRPC_E_THREAD_NOT_INITqaRPC_E_VERSION_MISMATCHqaRPC_E_INVALID_HEADERqaRPC_E_INVALID_EXTENSIONqaRPC_E_INVALID_IPIDqaRPC_E_INVALID_OBJECTqaRPC_S_CALLPENDINGqaRPC_S_WAITONTIMERqaRPC_E_CALL_COMPLETEqaRPC_E_UNSECURE_CALLqaRPC_E_TOO_LATEqaRPC_E_NO_GOOD_SECURITY_PACKAGESqaRPC_E_ACCESS_DENIEDqaRPC_E_REMOTE_DISABLEDqaRPC_E_INVALID_OBJREFqaRPC_E_NO_CONTEXTqaRPC_E_TIMEOUTq aRPC_E_NO_SYNCqaRPC_E_UNEXPECTEDqaNTE_BAD_UIDqaNTE_BAD_HASHqaNTE_BAD_KEYqaNTE_BAD_LENqaNTE_BAD_DATAqaNTE_BAD_SIGNATUREqaNTE_BAD_VERqaNTE_BAD_ALGIDqaNTE_BAD_FLAGSq
aNTE_BAD_TYPEqaNTE_BAD_KEY_STATEqaNTE_BAD_HASH_STATEq
aNTE_NO_KEYqaNTE_NO_MEMORYqaNTE_EXISTSqaNTE_PERMqaNTE_NOT_FOUNDqaNTE_DOUBLE_ENCRYPTqaNTE_BAD_PROVIDERqaNTE_BAD_PROV_TYPEqaNTE_BAD_PUBLIC_KEYqaNTE_BAD_KEYSETqaNTE_PROV_TYPE_NOT_DEFqaNTE_PROV_TYPE_ENTRY_BADqaNTE_KEYSET_NOT_DEFqaNTE_KEYSET_ENTRY_BADqaNTE_PROV_TYPE_NO_MATCHqaNTE_SIGNATURE_FILE_BADqaNTE_PROVIDER_DLL_FAILqaNTE_PROV_DLL_NOT_FOUNDqaNTE_BAD_KEYSET_PARAMq aNTE_FAILq!aNTE_SYS_ERRqaCRYPT_E_MSG_ERRORqaCRYPT_E_UNKNOWN_ALGOqaCRYPT_E_OID_FORMATqaCRYPT_E_INVALID_MSG_TYPEqaCRYPT_E_UNEXPECTED_ENCODINGqaCRYPT_E_AUTH_ATTR_MISSINGqaCRYPT_E_HASH_VALUEqaCRYPT_E_INVALID_INDEXqaCRYPT_E_ALREADY_DECRYPTEDq
aCRYPT_E_NOT_DECRYPTEDqaCRYPT_E_RECIPIENT_NOT_FOUNDqaCRYPT_E_CONTROL_TYPEq
aCRYPT_E_ISSUER_SERIALNUMBERqaCRYPT_E_SIGNER_NOT_FOUNDqaCRYPT_E_ATTRIBUTES_MISSINGqaCRYPT_E_STREAM_MSG_NOT_READYqaCRYPT_E_STREAM_INSUFFICIENT_DATAq aCRYPT_E_BAD_LENq aCRYPT_E_BAD_ENCODEq aCRYPT_E_FILE_ERRORq aCRYPT_E_NOT_FOUNDq aCRYPT_E_EXISTSq aCRYPT_E_NO_PROVIDERq aCRYPT_E_SELF_SIGNEDq aCRYPT_E_DELETED_PREVq aCRYPT_E_NO_MATCHq
 aCRYPT_E_UNEXPECTED_MSG_TYPEq aCRYPT_E_NO_KEY_PROPERTYq aCRYPT_E_NO_DECRYPT_CERTq
 aCRYPT_E_BAD_MSGq aCRYPT_E_NO_SIGNERq aCRYPT_E_PENDING_CLOSEq aCRYPT_E_REVOKEDq aCRYPT_E_NO_REVOCATION_DLLq aCRYPT_E_NO_REVOCATION_CHECKq aCRYPT_E_REVOCATION_OFFLINEq aCRYPT_E_NOT_IN_REVOCATION_DATABASEq  aCRYPT_E_INVALID_NUMERIC_STRINGq! aCRYPT_E_INVALID_PRINTABLE_STRINGq" aCRYPT_E_INVALID_IA5_STRINGq# aCRYPT_E_INVALID_X500_STRINGq$ aCRYPT_E_NOT_CHAR_STRINGq% aCRYPT_E_FILERESIZEDq& aCRYPT_E_SECURITY_SETTINGSq' aCRYPT_E_NO_VERIFY_USAGE_DLLq( aCRYPT_E_NO_VERIFY_USAGE_CHECKq) aCRYPT_E_VERIFY_USAGE_OFFLINEq* aCRYPT_E_NOT_IN_CTLq+ aCRYPT_E_NO_TRUSTED_SIGNERq0aCRYPT_E_OSS_ERRORq@aCERTSRV_E_BAD_REQUESTSUBJECTq@aCERTSRV_E_NO_REQUESTq@aCERTSRV_E_BAD_REQUESTSTATUSq@aCERTSRV_E_PROPERTY_EMPTYqPaCERTDB_E_JET_ERRORq`aTRUST_E_SYSTEM_ERRORq`aTRUST_E_NO_SIGNER_CERTq`aTRUST_E_COUNTER_SIGNERq`aTRUST_E_CERT_SIGNATUREq`aTRUST_E_TIME_STAMPq`aTRUST_E_BAD_DIGESTq`aTRUST_E_BASIC_CONSTRAINTSq`aTRUST_E_FINANCIAL_CRITERIAaNTE_OP_OKqaDIGSIG_E_ENCODEqaDIGSIG_E_DECODEqaDIGSIG_E_EXTENSIBILITYqaDIGSIG_E_CRYPTOqaPERSIST_E_SIZEDEFINITEq
aPERSIST_E_SIZEINDEFINITEqaPERSIST_E_NOTSELFSIZINGqaTRUST_E_NOSIGNATUREqaCERT_E_EXPIREDqaCERT_E_VALIDITYPERIODNESTINGqaCERT_E_ROLEqaCERT_E_PATHLENCONSTqaCERT_E_CRITICALqaCERT_E_PURPOSEqaCERT_E_ISSUERCHAININGqaCERT_E_MALFORMEDqaCERT_E_UNTRUSTEDROOTq
aCERT_E_CHAININGqaTRUST_E_FAILqaCERT_E_REVOKEDq
aCERT_E_UNTRUSTEDTESTROOTqaCERT_E_REVOCATION_FAILUREqaCERT_E_CN_NO_MATCHqaCERT_E_WRONG_USAGEqaSPAPI_E_EXPECTED_SECTION_NAMEqaSPAPI_E_BAD_SECTION_NAME_LINEqaSPAPI_E_SECTION_NAME_TOO_LONGqaSPAPI_E_GENERAL_SYNTAXqaSPAPI_E_WRONG_INF_STYLEqaSPAPI_E_SECTION_NOT_FOUNDqaSPAPI_E_LINE_NOT_FOUNDqaSPAPI_E_NO_ASSOCIATED_CLASSqaSPAPI_E_CLASS_MISMATCHqaSPAPI_E_DUPLICATE_FOUNDqaSPAPI_E_NO_DRIVER_SELECTEDqaSPAPI_E_KEY_DOES_NOT_EXISTqaSPAPI_E_INVALID_DEVINST_NAMEqaSPAPI_E_INVALID_CLASSqaSPAPI_E_DEVINST_ALREADY_EXISTSqaSPAPI_E_DEVINFO_NOT_REGISTEREDqaSPAPI_E_INVALID_REG_PROPERTYq
aSPAPI_E_NO_INFqaSPAPI_E_NO_SUCH_DEVINSTqaSPAPI_E_CANT_LOAD_CLASS_ICONq
aSPAPI_E_INVALID_CLASS_INSTALLERqaSPAPI_E_DI_DO_DEFAULTqaSPAPI_E_DI_NOFILECOPYqaSPAPI_E_INVALID_HWPROFILEqaSPAPI_E_NO_DEVICE_SELECTEDqaSPAPI_E_DEVINFO_LIST_LOCKEDqaSPAPI_E_DEVINFO_DATA_LOCKEDqaSPAPI_E_DI_BAD_PATHqaSPAPI_E_NO_CLASSINSTALL_PARAMSqaSPAPI_E_FILEQUEUE_LOCKEDqaSPAPI_E_BAD_SERVICE_INSTALLSECTqaSPAPI_E_NO_CLASS_DRIVER_LISTqaSPAPI_E_NO_ASSOCIATED_SERVICEqaSPAPI_E_NO_DEFAULT_DEVICE_INTERFACEqaSPAPI_E_DEVICE_INTERFACE_ACTIVEqaSPAPI_E_DEVICE_INTERFACE_REMOVEDqaSPAPI_E_BAD_INTERFACE_INSTALLSECTqaSPAPI_E_NO_SUCH_INTERFACE_CLASSqaSPAPI_E_INVALID_REFERENCE_STRINGq aSPAPI_E_INVALID_MACHINENAMEq!aSPAPI_E_REMOTE_COMM_FAILUREq"aSPAPI_E_MACHINE_UNAVAILABLEq#aSPAPI_E_NO_CONFIGMGR_SERVICESq$aSPAPI_E_INVALID_PROPPAGE_PROVIDERq%aSPAPI_E_NO_SUCH_DEVICE_INTERFACEq&aSPAPI_E_DI_POSTPROCESSING_REQUIREDq'aSPAPI_E_INVALID_COINSTALLERq(aSPAPI_E_NO_COMPAT_DRIVERSq)aSPAPI_E_NO_DEVICE_ICONq*aSPAPI_E_INVALID_INF_LOGCONFIGq+aSPAPI_E_DI_DONT_INSTALLq,aSPAPI_E_INVALID_FILTER_DRIVERqaSPAPI_E_ERROR_NOT_INSTALLEDaCDERR_DIALOGFAILUREaCDERR_GENERALCODESaCDERR_STRUCTSIZEaCDERR_INITIALIZATIONaCDERR_NOTEMPLATEaCDERR_NOHINSTANCEaCDERR_LOADSTRFAILUREaCDERR_FINDRESFAILUREaCDERR_LOADRESFAILUREaCDERR_LOCKRESFAILUREaCDERR_MEMALLOCFAILUREaCDERR_MEMLOCKFAILUREaCDERR_NOHOOKaCDERR_REGISTERMSGFAILlaPDERR_PRINTERCODESlaPDERR_SETUPFAILURElaPDERR_PARSEFAILURElaPDERR_RETDEFFAILUREaPDERR_LOADDRVFAILURElaPDERR_GETDEVMODEFAILlaPDERR_INITFAILURElaPDERR_NODEVICESlaPDERR_NODEFAULTPRNlaPDERR_DNDMMISMATCHl
aPDERR_CREATEICFAILURElaPDERR_PRINTERNOTFOUNDlaPDERR_DEFAULTDIFFERENTl aCFERR_CHOOSEFONTCODESl aCFERR_NOFONTSl aCFERR_MAXLESSTHANMINl0aFNERR_FILENAMECODESl0aFNERR_SUBCLASSFAILUREl0aFNERR_INVALIDFILENAMEl0aFNERR_BUFFERTOOSMALLl@aFRERR_FINDREPLACECODESl@aFRERR_BUFFERLENGTHZEROlPaCCERR_CHOOSECOLORCODESuwinerror.pyu<module winerror>TaStatusTahrTwxTascodeTascu.wmi1sOastructaunpackwLapackwlutoo many values to unpack (expected 1)uConvert a (possibly signed) long to unsigned hex. Useful
    when converting a COM error code to the more conventional
    8-digit hex::

        print("%08X" % signed_to_unsigned(-2147023174))
    adictalistadict_onlyawarningsawarnuIn future this will be a list and not a dictionaryaDeprecationWarninga_constantsa_oleobj_aGetTypeInfoaGetContainingTypeLiblaGetTypeCompa_ProvideConstants__typecompastartswithTa__aendswithaBindlavalueainfoacom_erroru<x_wmi: %s %s>uUnexpected COM Erroru(no underlying exception)asysaexc_infoutoo many values to unpack (expected 3)aargsutoo many values to unpack (expected 4)asigned_to_unsignedu%s - %sutoo many values to unpack (expected 6)u    Error in: %su    %s - %suastripaWMI_EXCEPTIONSaitemsutoo many values to unpack (expected 2)ax_wmiaklassTacom_erroruConvenience wrapper for displaying all manner of COM errors.
    Raises a :exc:`x_wmi` exception with more useful information attached

    :param err: The structure attached to a `pywintypes.com_error`
    aBASEadatetimeatimedeltal
Tamicrosecondsastr_or_starsufrom_time.<locals>.str_or_starsllw.lw+w-atimezoneluConvenience wrapper to take a series of date/time elements and return a WMI time
    of the form `yyyymmddHHMMSS.mmmmmm+UUU`. All elements may be int, string or
    omitted altogether. If omitted, they will be replaced in the output string
    by a series of stars of the appropriate length.

    :param year: The year element of the date/time
    :param month: The month element of the date/time
    :param day: The day element of the date/time
    :param hours: The hours element of the date/time
    :param minutes: The minutes element of the date/time
    :param seconds: The seconds element of the date/time
    :param microseconds: The microseconds element of the date/time
    :param timezone: The timeezone element of the date/time

    :returns: A WMI datetime string of the form: `yyyymmddHHMMSS.mmmmmm+UUU`
    w*arjustw0aint_or_noneuto_time.<locals>.int_or_nonelllll:lnnu***uConvenience wrapper to take a WMI datetime string of the form
    yyyymmddHHMMSS.mmmmmm+UUU and return a 9-tuple containing the
    individual elements, or None where string contains placeholder
    stars.

    :param wmi_time: The WMI datetime string in `yyyymmddHHMMSS.mmmmmm+UUU` format

    :returns: A 9-tuple of (year, month, day, hours, minutes, seconds, microseconds, timezone)
    uHelper function to add an attribute directly into the instance
    dictionary, bypassing possible `__getattr__` calls

    :param obj: Any python object
    :param attribute: String containing attribute name
    :param value: Any python object
    aparameter_namesu_wmi_method.__init__.<locals>.parameter_namesaDispatchaole_objectaMethods_amethodaqualifiersaQualifiers_aValueaselfaNamew
agetaMappingStringsaprovenanceaInParametersain_parametersaOutParametersaout_parametersain_parameter_namesaProperties_aIsArrayaout_parameter_namesu%s (%s) => (%s)u, Tuu[]aPrivilegesu | Needs: a__doc__apywintypesahandle_com_erroru
        :param ole_object: The WMI class/instance whose method is to be called
        :param method_name: The name of the method to be called
        aCIMTYPEaBitMapaappendadatatypeabitmapaparametersuparameter %d must be iterableaargu%s is not a valid parameter for %su%s must be iterablewvaExecMethod_aresultaresultsuExecute the call to a WMI method, returning
        a tuple (even if is of only one value) containing
        the out and return parameters.
        u<function %s>apropertyanameTaCIMTYPEnatypeu<genexpr>u_wmi_property.__init__.<locals>.<genexpr>u<wmi_property: %s>a_setaidaPath_aDisplayNamealowera_instance_ofapropertiesamethodsaproperty_mapa_associated_classesa_keysa_propertiesakeysa_methodsais_associationaAssociationu_wmi_object.__init__.<locals>.<genexpr>aGetObjectText_uFor a call to print([object]) return the OLE description
        of the properties / values of the object
        u<%s: %s>a__name__aPathaencodeTaasciiabackslashreplaceuIndicate both the fact that this is a wrapped WMI object
        and the WMI object's own identifying class.
        a_wmi_propertyaattributea_wmi_methoda_cached_propertiesu<lambda>u_wmi_object.__getattr__.<locals>.<lambda>Turef:aWMITamonikera_cached_methodsuAttempt to pass attribute calls to the proxied COM object.
        If the attribute is recognised as a property, return its value;
        if it is recognised as a method, return a method wrapper which
        can then be called with parameters; otherwise pass the lookup
        on to the underlying object.
        asetaPut_uIf the attribute to be set is valid for the proxied
        COM object, set that objects's parameter value; if not,
        raise an exception.
        aextenduReturn list of methods/properties for IPython completionakeyuA WMI object is uniquely defined by a set of properties
        which constitute its keys. Lazily retrieves the keys for this
        instance or class.

        :returns: list of key property names
        uReturn the cached object representing one property
        of this object
        uPush all outstanding property updates back to the
        WMI database.
        uSet several properties of the underlying object
        at one go. This is particularly useful in combination
        with the new() method below. However, an instance
        which has been spawned in this way won't have enough
        information to write pack, so only try if the
        instance has a path.
        uReturn the WMI URI to this object. Can be used to
        determine the path relative to the parent namespace::

            pp0 = wmi.WMI().Win32_ParallelPort()[0]
            print(pp0.path().RelPath)

        ..    Do more with this
        aDerivation_uReturn a tuple representing the object derivation for
        this object, with the most specific object first::

            pp0 = wmi.WMI().Win32_ParallelPort()[0]
            print(' <- '.join(pp0.derivation()))
        a_wmi_classaAssociators_TtTabSchemaOnlyaClassa_namespaceu_wmi_object._cached_associated_classes.<locals>.<genexpr>TastrAssocClassastrResultClassa_wmi_objectuReturn a list of objects related to this one, optionally limited
        either by association class(ie the name of the class which relates
        them) or by result class(ie the name of the class which would be
        retrieved)::

            c = wmi.WMI()
            pp = c.Win32_ParallelPort()[0]

            for i in pp.associators(wmi_association_class="Win32_PortResource"):
                print(i)

            for i in pp.associators(wmi_result_class="Win32_PnPEntity"):
                print(i)
        aReferences_TastrResultClassuReturn a list of associations involving this object, optionally
        limited by the result class (the name of the association class).

        NB Associations are treated specially; although WMI only returns
        the string corresponding to the instance of each associated object,
        this module will automatically convert that to the object itself::

            c =    wmi.WMI()
            sp = c.Win32_SerialPort()[0]

            for i in sp.references():
                print(i)

            for i in sp.references(wmi_class="Win32_SerialPortSetting"):
                print(i)
        a__init__Tafieldsaevent_typeatimestampapreviousaevent_type_reamatchagroupTlaTIME_CREATEDafrom_1601aPreviousInstancea_class_nameasplitTw:a_wmi_namespaceaGetObjectw:a__getattr__a_to_utf8u_wmi_class.to_csv.<locals>._to_utf8u.csvawba__enter__a__exit__acsvawriterawriterowaqueryafieldsTnnnuGenerate a csv listing all the instances of this class with the class
        name as a header.
        aunicodeTuutf-8u_wmi_class.to_csv.<locals>.<genexpr>ax_wmi_no_namespaceTuYou cannot query directly from a WMI classuSELECT u FROM u WHERE u AND u%s = %ruMake it slightly easier to query against the class,
         by calling the namespace's query with the class preset.
         Won't work if the class has been instantiated directly.
        TuYou cannot watch directly from a WMI classTaoperationacreationadeletionamodificationTunotification_type must be one of operation, creation, deletion, modificationawatch_foranotification_typeawmi_classadelay_secsaInstances_uReturn a list of instances of the WMI class
        aSpawnInstance_uThis is the equivalent to the raw-WMI SpawnInstance\_
        method. Note that there are relatively few uses for
        this, certainly fewer than you might imagine. Most
        classes which need to create a new *real* instance
        of themselves, eg Win32_Process, offer a .Create
        method. SpawnInstance\_ is generally reserved for
        instances which are passed as parameters to such
        `.Create` methods, a common example being the
        `Win32_SecurityDescriptor`, passed to `Win32_Share.Create`
        and other instances which need security.

        The example here is `Win32_ProcessStartup`, which
        controls the shown/hidden state etc. of a new
        `Win32_Process` instance::

            import win32con
            import wmi
            c = wmi.WMI()
            startup = c.Win32_ProcessStartup.new(ShowWindow=win32con.SW_SHOWMINIMIZED)
            pid, retval = c.Win32_Process.Create(
                CommandLine="notepad.exe",
                ProcessStartupInformation=startup
            )

        ..    warning::
                previous versions of this docstring illustrated using this function
                to create a new process. This is *not* a good example of its use;
                it is better handled with something like the example above.
        aobjawmia_classesa_classes_mapaclassesu<_wmi_namespace: %s>asubclasses_ofaSelfDeprecatingDictaGetuThe raw OLE object representing the WMI namespaceaSubclassesOfarearegexu_wmi_namespace.subclasses_of.<locals>.<genexpr>aInstancesOfuReturn a list of instances of the WMI class. This is
       (probably) equivalent to querying with no qualifiers::

            wmi.WMI().instances("Win32_LogicalDisk")
            # should be the same as
            wmi.WMI().Win32_LogicalDisk()
        anewuThis is now implemented by a call to :meth:`_wmi_class.new`awbemFlagReturnImmediatelyawbemFlagForwardOnlyareplaceTw\u\\aExecQueryTastrQueryaiFlagsuExecute a WQL query and return its raw results.    Use the flags
        recommended by Microsoft to achieve a read-only, semi-synchronous
        query where the time is taken while looping through.
        NB Backslashes need to be doubled up.
        a_raw_queryainstance_ofuPerform an arbitrary query against a WMI object, and return
        a list of _wmi_object representations of the results.
        uSELECT %s FROM %su%s = '%s'a_wmi_resultuBuild and execute a wql query to fetch the specified list of fields from
        the specified wmi_classname + where_clause, then return the results as
        a list of simple class instances with attributes matching field_list.

        If fields is left empty, select * and pre-load all class attributes for
        each class returned.
        uBuild and execute a wql query to fetch the specified list of fields from
        the specified wmi_classname + where_clause, then return the results as
        a list of lists whose values correspond to field_list.
        a__ExtrinsicEventaderivationaTargetInstanceuTargetInstance.%s = '%s'uSELECT %s FROM __Instance%sEvent WITHIN %d WHERE TargetInstance ISA '%s' %sa_wmi_watcheraExecNotificationQueryTais_extrinsicafieldsuSet up an event tracker on a WMI event. This function
        returns an wmi_watcher which can be called to get the
        next event::

            c = wmi.WMI()

            raw_wql = "SELECT * FROM __InstanceCreationEvent WITHIN 2 WHERE TargetInstance ISA 'Win32_Process'"
            watcher = c.watch_for(raw_wql=raw_wql)
            while 1:
                process_created = watcher()
                print(process_created.Name)

            # or

            watcher = c.watch_for(
                notification_type="Creation",
                wmi_class="Win32_Process",
                delay_secs=2,
                Name='calc.exe'
            )
            calc_created = watcher()

        Now supports timeout on the call to watcher::

            import pythoncom
            import wmi
            c = wmi.WMI(privileges=["Security"])
            watcher1 = c.watch_for(
                notification_type="Creation",
                wmi_class="Win32_NTLogEvent",
                Type="error"
            )
            watcher2 = c.watch_for(
                notification_type="Creation",
                wmi_class="Win32_NTLogEvent",
                Type="warning"
            )

            while 1:
                try:
                    error_log = watcher1(500)
                except wmi.x_wmi_timed_out:
                    pythoncom.PumpWaitingMessages()
                else:
                    print(error_log)

                try:
                    warning_log = watcher2(500)
                except wmi.x_wmi_timed_out:
                    pythoncom.PumpWaitingMessages()
                else:
                    print(warning_log)
        a_cached_classesuOffer WMI classes as simple attributes. Pass through any untrapped
        unattribute to the underlying OLE object. This means that new or
        unmapped functionality is still available to the module user.
        aclass_nameuStandard caching helper which keeps track of classes
        already retrieved by name and returns the existing object
        if found. If this is the first retrieval, store it and
        pass it back
        uReturn list of classes for IPython completion engineawmi_eventais_extrinsicaNextEventa_wmi_eventTaTargetInstancea_event_property_mapTaproperty_mapuWhen called, return the instance which caused the event. Supports
         timeout in milliseconds (defaulting to infinite). If the watcher
         times out, :exc:`x_wmi_timed_out` is raised. This makes it easy to support
         watching for multiple objects.
        a_DEBUGaPROTOCOLamonikerax_wmi_authenticationTuYou can't specify privileges or a suffix as well as a usernameTnuw.TuYou can only specify user/password for a remote connectionaconnect_serverTaserveranamespaceauserapasswordaauthorityaimpersonation_levelaauthentication_levelaconstruct_monikerTacomputeraimpersonation_levelaauthentication_levelaauthorityaprivilegesanamespaceasuffixaget_wmi_typeanamespaceaclassainstanceTuUnknown moniker typeax_wmi_uninitialised_threadTuWMI returned a syntax error: you're probably running inside a thread without first calling pythoncom.CoInitialize[Ex]uThe WMI constructor can either take a ready-made moniker or as many
    parts of one as are necessary. Eg::

        c = wmi.WMI(moniker="winmgmts:{impersonationLevel=Delegate}//remote")
        # or
        c = wmi.WMI(computer="remote", privileges=["!RemoteShutdown", "Security"])

    I daren't link to a Microsoft URL; they change so often. Try Googling for
    WMI construct moniker and see what it comes back with.

    For complete control, a named argument "wmi" can be supplied, which
    should be a SWbemServices object, which you create yourself. Eg::

        loc = win32com.client.Dispatch("WbemScripting.SWbemLocator")
        svc = loc.ConnectServer(...)
        c = wmi.WMI(wmi=svc)

    This is the only way of connecting to a remote computer with a different
    username, as the moniker syntax does not allow specification of a user
    name.

    If the `wmi` parameter is supplied, all other parameters are ignored.
    uimpersonationLevel=%sasecurityuauthenticationLevel=%suauthority=%su(%s)u{%s}!w,u//%s/u[/\\]arootainsertTlarootw/apartsu:%saIsClassuwbemImpersonationLevel%satitleuNo such impersonation level: %suwbemAuthenticationLevel%sTuWbemScripting.SWbemLocatoraConnectServeraSecurity_aImpersonationLevelaserveraAuthenticationLeveluReturn a remote server running WMI

    :param server: name of the server
    :param namespace: namespace to connect to - defaults to whatever's defined as default
    :param user: username to connect as, either local or domain(dom\name or user@domain for XP)
    :param password: leave blank to use current context
    :param locale: desired locale in form MS_XXXX(eg MS_409 for Am En)
    :param authority: either "Kerberos:" or an NT domain. Not needed if included in user
    :param impersonation_level: valid WMI impersonation level
    :param security_flags: if 0, connect will wait forever; if 0x80, connect will timeout at 2 mins
    :param named_value_set: typically empty, otherwise a context-specific `SWbemNamedValueSet`

    Example::

        remote_connection = wmi.connect_server(
            server="remote_machine", user="myname", password="mypassword"
        )
        c = wmi.WMI(wmi=remote_connection)
    uThis function can be implemented using wmi.WMI(namespace='DEFAULT').StdRegProvadefaultaStdRegProvuWindows Management Instrumentation (WMI) is Microsoft's answer to
the DMTF's Common Information Model. It allows you to query just
about any conceivable piece of information from any computer which
is running the necessary agent and over which have you the
necessary authority.

Since the COM implementation doesn't give much away to Python
programmers, I've wrapped it in some lightweight classes with
some getattr / setattr magic to ease the way. In particular:

*   The :class:`_wmi_namespace` object itself will determine its classes
    and allow you to return all instances of any of them by
    using its name as an attribute::

        disks = wmi.WMI().Win32_LogicalDisk()

*   In addition, you can specify what would become the WHERE clause
    as keyword parameters::

        fixed_disks = wmi.WMI().Win32_LogicalDisk(DriveType=3)

*   The objects returned by a WMI lookup are wrapped in a Python
    class which determines their methods and classes and allows
    you to access them as though they were Python classes. The
    methods only allow named parameters::

        for p in wmi.WMI().Win32_Process(Name="notepad.exe"):
            p.Terminate(Result=1)

*   Doing a print on one of the WMI objects will result in its
    `GetObjectText\_` method being called, which usually produces
    a meaningful printout of current values.
    The repr of the object will include its full WMI path,
    which lets you get directly to it if you need to.

*   You can get the associators and references of an object as
    a list of python objects by calling the associators() and
    references() methods on a WMI Python object::

        for p in wmi.WMI().Win32_Process(Name="notepad.exe"):
            for r in p.references():
                print(r)

    ..    note::
            Don't do this on a Win32_ComputerSystem object; it will
            take all day and kill your machine!


*   WMI classes (as opposed to instances) are first-class
    objects, so you can get hold of a class, and call
    its methods or set up a watch against it::

        process = wmi.WMI().Win32_Process
        process.Create(CommandLine="notepad.exe")

*   To make it easier to use in embedded systems and py2exe-style
    executable wrappers, the module will not force early Dispatch.
    To do this, it uses a handy hack by Thomas Heller for easy access
    to constants.

Typical usage will be::

    import wmi

    vodev1 = wmi.WMI("vodev1")
    for disk in vodev1.Win32_LogicalDisk():
        if disk.DriveType == 3:
            space = 100 * long(disk.FreeSpace) / long(disk.Size)
            print("%s has %d%% free" %(disk.Name, space))

Many thanks, obviously to Mark Hammond for creating the win32all
extensions, but also to Alex Martelli and Roger Upole, whose
c.l.py postings pointed me in the right direction.
Thanks especially in release 1.2 to Paul Tiemann for his code
contributions and robust testing.

Copyright Tim Golden - mail at timgolden.me.uk 2003 - 2015

Licensed under the (GPL-compatible) MIT License:

http://www.opensource.org/licenses/mit-license.php

For change history see CHANGELOG.TXT
a__file__a__spec__aoriginahas_locationa__cached__awith_statementu1.5.1a__version__a__VERSION__a__title__uWindows Management Instrumentationa__description__uTim Goldena__author__umail@timgolden.me.uka__email__uhttp://timgolden.me.uk/python/wmi.htmla__url__uhttp://www.opensource.org/licenses/mit-license.phpa__license__uwin32com.clientTaGetObjectaDispatchTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>a__module__uProvide for graceful degradation of objects which
    are currently dictionaries (and therefore accessed via
    `.keys`, `.items`, etc.) into lists. Wraps an existing
    `dict` and allows it to be addressed as a `dict` or as a
    `list` during an interregnum, issuing a `DeprecationWarning`
    if accessed as a `dict`.
    a__qualname__adiradifferenceuSelfDeprecatingDict.__init__uSelfDeprecatingDict.__getattr__a__iter__uSelfDeprecatingDict.__iter__a__str__uSelfDeprecatingDict.__str__a__repr__uSelfDeprecatingDict.__repr__uSelfDeprecatingDict.__getitem__a__orig_bases__aProvideConstantsuWhen called on a ``win32com.client.Dispatch`` object,
    provides lazy access to constants defined in the typelib.
    They can then be accessed as attributes of the :attr:`_constants`
    property. (From Thomas Heller on c.l.py).
    uProvideConstants.__init__uProvideConstants.__getattr__Tuwinmgmts:awbemErrInvalidQueryawbemErrTimedoutTEExceptionuAncestor of all wmi-related exceptions. Keeps track of
    an info message and the underlying COM error if any, exposed
    as the :attr:`com_error` attribute.
    Tunux_wmi.__init__ux_wmi.__str__ax_wmi_invalid_queryuRaised when a WMI returns `wbemErrInvalidQuery`ax_wmi_timed_outuRaised when a watcher times outuRaised when an attempt is made to query or watch
    from a class without a namespace.
    ax_access_denieduRaised when WMI raises 80070005uRaised when an invalid combination of authentication properties is attempted when connectinguRaised when WMI returns 800401E4 on connection, usually
    indicating that no COM threading model has been initialised
    qqqTnTlAlpTnnnnnnnnafrom_timeato_timeuA currying sort of wrapper around a WMI method name. It
    abstract's the method's parameters and can be called like
    a normal Python object passing in the parameter values.

    Output parameters are returned from the call as a tuple.
    In addition, the docstring is set up as the method's
    signature, including an indication as to whether any
    given parameter is expecting an array, and what
    special privileges are required to call the method.
    u_wmi_method.__init__a__call__u_wmi_method.__call__u_wmi_method.__repr__u_wmi_property.__init__u_wmi_property.setu_wmi_property.__repr__u_wmi_property.__getattr__uThe heart of the WMI module: wraps the objects returned by COM
    ISWbemObject interface and provide readier access to their properties
    and methods resulting in a more Pythonic interface. Not usually
    instantiated directly, rather as a result of calling a :class:`_wmi_class`
    on the parent :class:`_wmi_namespace`.

    If you get hold of a WMI-related COM object from some other
    source than this module, you can wrap it in one of these objects
    to get the benefits of the module::

        import win32com.client
        import wmi

        wmiobj = win32com.client.GetObject("winmgmts:Win32_LogicalDisk.DeviceID='C:'")
        c_drive = wmi._wmi_object(wmiobj)
        print(c_drive)
    u_wmi_object.__init__a__lt__u_wmi_object.__lt__u_wmi_object.__str__u_wmi_object.__repr__u_wmi_object._cached_propertiesu_wmi_object._cached_methodsu_wmi_object.__getattr__a__setattr__u_wmi_object.__setattr__a__eq__u_wmi_object.__eq__a__hash__u_wmi_object.__hash__a_getAttributeNamesu_wmi_object._getAttributeNamesa_get_keysu_wmi_object._get_keysawmi_propertyu_wmi_object.wmi_propertyaputu_wmi_object.putu_wmi_object.setapathu_wmi_object.pathu_wmi_object.derivationa_cached_associated_classesu_wmi_object._cached_associated_classesaassociated_classesTupaassociatorsu_wmi_object.associatorsTuareferencesu_wmi_object.referencesuSlight extension of the _wmi_object class to allow
    objects which are the result of events firing to return
    extra information such as the type of event.
    acompileTu__Instance(Creation|Modification|Deletion)Eventu_wmi_event.__init__uCurrying class to assist in issuing queries against
     a WMI namespace. The idea is that when someone issues
     an otherwise unknown method against the WMI object, if
     it matches a known WMI class a query object will be
     returned which may then be called with one or more params
     which will form the WHERE clause::

        c = wmi.WMI()
        c_drives = c.Win32_LogicalDisk(Name='C:')
    u_wmi_class.__init__u_wmi_class.__getattr__ato_csvu_wmi_class.to_csvu_wmi_class.queryaoperationu_wmi_class.watch_forainstancesu_wmi_class.instancesu_wmi_class.newuSimple, data only result for targeted WMI queries which request
    data only result classes via fetch_as_classes.
    u_wmi_result.__init__uA WMI root of a computer system. The classes attribute holds a list
    of the classes on offer. This means you can explore a bit with
    things like this::

        c = wmi.WMI()
        for i in c.classes:
            if "user" in i.lower():
                print(i)
    u_wmi_namespace.__init__u_wmi_namespace.__repr__u_wmi_namespace.__str__a_get_classesu_wmi_namespace._get_classesu_wmi_namespace.getahandleu_wmi_namespace.handleTuu.*u_wmi_namespace.subclasses_ofu_wmi_namespace.instancesu_wmi_namespace.newanew_instance_ofu_wmi_namespace._raw_queryu_wmi_namespace.queryTTafetch_as_classesu_wmi_namespace.fetch_as_classesafetch_as_listsu_wmi_namespace.fetch_as_listsu_wmi_namespace.watch_foru_wmi_namespace.__getattr__u_wmi_namespace._cached_classesu_wmi_namespace._getAttributeNamesuHelper class for WMI.watch_for below(qv)u_wmi_watcher.__init__Tlu_wmi_watcher.__call__uwinmgmts:T
upppppnupppFpaconnectTnnnnnnnTupppppplnTnaImpersonateaDefaultnnnaRegistryuwmi.pyTa.0aassocaselfTa.0wcaregexTa.0wpTa.0wqTwxu<module wmi>Ta__class__Tacomputeraimpersonation_levelaauthentication_levelaauthorityaprivilegesamonikerTaselfaargsakwargsaparameter_namesanameais_arrayaparametersan_argaargaparameterwkwvaresultaresultsavalueTaselfatimeout_msaeventTaselfaotherTaselfaattrTaselfaattributeTaselfaattributeapropertyafactoryavalueTaselfanamearesultTaselfaitemTaselfTaselfacomobjTaselfadictlikeTaselfaeventaevent_infoafieldsaevent_typeTaselfainfoacom_errorTaselfanamespaceafind_classesw_Taselfanamespaceawmi_classaclass_monikerawinmgmtsanamespace_monikeraclass_nameTaselfaobjaattributesaattrwpTaselfaole_objectainstance_ofafieldsaproperty_mapafieldwpwmTaselfaole_objectamethod_nameaparameter_nameswqadocaprivilegesTaselfapropertyTaselfawmi_eventais_extrinsicafieldsTaselfaattributeavalueTaselfaobjaassociated_classesTaselfaclass_nameTaselfaattribsTaselfapropertyaqualifierTaselfawqlaflagsTaobjaattributeavalueTaitemTaselfawmi_association_classawmi_result_classTacomputeraimpersonation_levelaauthentication_levelaauthorityaprivilegesamonikerawmianamespaceasuffixauserapasswordafind_classesadebugaobjawmi_typeTaserveranamespaceauserapasswordalocaleaauthorityaimpersonation_levelaauthentication_levelasecurity_flagsanamed_value_setaimpersonationaauthenticationT
acomputeraimpersonation_levelaauthentication_levelaauthorityaprivilegesanamespaceasuffixasecurityamonikerapartsTaselfawmi_classnameafieldsawhere_clauseawqlTaselfawmi_classnameafieldsawhere_clauseawqlaresultsaobjTans100T
ayearamonthadayahoursaminutesasecondsamicrosecondsatimezoneastr_or_starsawmi_timeTaselfamonikerTaobjapathTaerrw_ahresult_codeahresult_nameaadditional_infoaparameter_in_erroraexception_stringascodeawcodeasource_of_erroraerror_descriptionawhlp_fileawhlp_contextaerror_codeaklassTwsastartaendTaselfakwargsaobjTaselfawmi_classakwargsTamethod_parametersaparameter_namesaparamanameais_arrayadatatypeabitmapaqualifierTaselfafieldsawhere_clauseafield_listawqlTaselfawqlainstance_ofafieldsTaselfawmi_classTaselfakwargsaattributeavalueTaselfavalueTasignedaunsignedTwialengthTaselfarootaregexaSubclassesOfTaselfafilepatha_to_utf8afieldswfawriterainstanceT
awmi_timeaint_or_noneayearamonthadayahoursaminutesasecondsamicrosecondsatimezoneTaselfanotification_typeadelay_secsafieldsawhere_clauseavalid_notification_typesTaselfaraw_wqlanotification_typeawmi_classadelay_secsafieldsawhere_clauseawqlais_extrinsicaclass_nameafield_listawhereTaselfaproperty_name.zstandard.backend_cffiTKaosacpu_countlasysconfTaSC_NPROCESSORS_ONLNTEAttributeErrorEValueErroruThe byte offset of this segment within its parent buffer.uObtain the length of the segment, in bytes.uObtain bytes copy of this segment.uTotal sizein bytes of the backing buffer.uObtains a segment within the buffer.

        The returned object references memory within this buffer.

        :param i:
           Integer index of segment to retrieve.
        :return:
           :py:class:`BufferSegment`
        uObtain the array of ``(offset, length)`` segments in the buffer.

        :return:
           :py:class:`BufferSegments`
        uObtain bytes copy of this instance.uThe number of segments within all ``BufferWithSegments``.uObtain the ``BufferSegment`` at an offset.affiastringalibaZSTD_getErrorNameadecodeTuutf-8aZSTD_createCCtxParamsaNULLagcaZSTD_freeCCtxParamsaZSTD_c_formataformataZSTD_c_compressionLevelacompression_levelaZSTD_c_windowLogawindow_logaZSTD_c_hashLogahash_logaZSTD_c_chainLogachain_logaZSTD_c_searchLogasearch_logaZSTD_c_minMatchamin_matchaZSTD_c_targetLengthatarget_lengthaZSTD_c_strategyastrategyaZSTD_c_contentSizeFlagawrite_content_sizeaZSTD_c_checksumFlagawrite_checksumaZSTD_c_dictIDFlagawrite_dict_idaZSTD_c_nbWorkersathreadsaZSTD_c_jobSizeajob_sizeaZSTD_c_overlapLogaoverlap_logaZSTD_c_forceMaxWindowaforce_max_windowaZSTD_c_enableLongDistanceMatchingaenable_ldmaZSTD_c_ldmHashLogaldm_hash_logaZSTD_c_ldmMinMatchaldm_min_matchaZSTD_c_ldmBucketSizeLogaldm_bucket_size_logaZSTD_c_ldmHashRateLogaldm_hash_rate_logutoo many values to unpack (expected 2)a_set_compression_parameteraresaZSTD_getCParamsDawindow_logachain_logahash_logasearch_logamin_matchatarget_lengthastrategyawindowLogachainLogahashLogasearchLogaminMatchatargetLengthastrategyakwargsaZstdCompressionParametersuCreate compression parameters from a compression level.

        :param level:
           Integer compression level.
        :param source_size:
           Integer size in bytes of source to be compressed.
        :param dict_size:
           Integer size in bytes of compression dictionary to use.
        :return:
           :py:class:`ZstdCompressionParameters`
        a_paramsa_cpu_countla_get_compression_parameteraZSTD_estimateCCtxSize_usingCCtxParamsuEstimated size in bytes needed to compress with these parameters.aZSTD_estimateDCtxSizeuEstimate the memory size requirements for a decompressor instance.

    :return:
       Integer number of bytes.
    aZSTD_CCtxParams_setParameteraZSTD_isErroraZstdErroruunable to set compression context parameter: %sa_zstd_erroranewTuint *aZSTD_CCtxParams_getParameteruunable to get compression context parameter: %sa_compressora_writera_write_sizea_write_return_reada_closefda_entereda_closinga_closeda_bytes_compresseduchar[]a_dst_bufferTuZSTD_outBuffer *a_out_bufferadstasizeaposaZSTD_CCtx_setPledgedSrcSizea_cctxuerror setting source size: %sustream is closedTucannot __enter__ multiple timesacloseaioaUnsupportedOperationaZSTD_sizeof_CCtxafilenoufileno not available on underlying writeraflushaFLUSH_FRAMEuwritelines() is not yet implementedafrom_bufferTuZSTD_inBuffer *asrcain_bufferaZSTD_compressStream2aselfaout_bufferaZSTD_e_continueuzstd compress error: %sawriteabuffer:nnnatotal_writeuSend data to the compressor and possibly to the inner stream.aFLUSH_BLOCKaZSTD_e_flushaZSTD_e_enduunknown flush_mode: %ruEvict data from compressor's internal state and write it to inner stream.

        Calling this method may result in 0 or more ``write()`` calls to the
        inner stream.

        This method will also call ``flush()`` on the inner stream, if such a
        method exists.

        :param flush_mode:
           How to flush the zstd compressor.

           ``zstandard.FLUSH_BLOCK`` will flush data already sent to the
           compressor but not emitted to the inner stream. The stream is still
           writable after calling this. This is the default behavior.

           See documentation for other ``zstandard.FLUSH_*`` constants for more
           flushing options.
        :return:
           Integer number of bytes written to the inner stream.
        a_finishedTucannot call compress() after compressor finishedasourcea_outachunksaappendcuSend data to the compressor.

        This method receives bytes to feed to the compressor and returns
        bytes constituting zstd compressed data.

        The zstd compressor accumulates bytes and the returned bytes may be
        substantially smaller or larger than the size of the input data on
        any given call. The returned value may be the empty byte string
        (``b""``).

        :param data:
           Data to write to the compressor.
        :return:
           Compressed data.
        aCOMPRESSOBJ_FLUSH_FINISHaCOMPRESSOBJ_FLUSH_BLOCKuflush mode not recognizedTucompressor object already finishedTuunhandled flush modeaz_flush_modeuerror ending compression stream: %suEmit data accumulated in the compressor that hasn't been outputted yet.

        The ``flush_mode`` argument controls how to end the stream.

        ``zstandard.COMPRESSOBJ_FLUSH_FINISH`` (the default) ends the
        compression stream and finishes a zstd frame. Once this type of flush
        is performed, ``compress()`` and ``flush()`` can no longer be called.
        This type of flush **must** be called to end the compression context. If
        not called, the emitted data may be incomplete and may not be readable
        by a decompressor.

        ``zstandard.COMPRESSOBJ_FLUSH_BLOCK`` will flush a zstd block. This
        ensures that all data fed to this instance will have been omitted and
        can be decoded by a decompressor. Flushes of this type can be performed
        multiple times. The next call to ``compress()`` will begin a new zstd
        block.

        :param flush_mode:
           How to flush the zstd compressor.
        :return:
           Compressed data.
        a_inuFeed new input data into the compressor.

        :param data:
           Data to feed to compressor.
        :return:
           Iterator of ``bytes`` representing chunks of compressed data.
        Tucannot call compress() after compression finishedTucannot perform operation before consuming output from previous operationadataacompressuZstdCompressionChunker.compressuFlushes all data currently in the compressor.

        :return:
           Iterator of ``bytes`` of compressed data.
        Tucannot call flush() after compression finishedTucannot call flush() before consuming output from previous operationuZstdCompressionChunker.flushuSignals the end of input data.

        No new data can be compressed after this method is called.

        This method will flush buffered data and finish the zstd frame.

        :return:
           Iterator of ``bytes`` of compressed data.
        Tucannot call finish() after compression finishedTucannot call finish() before consuming output from previous operationafinishuZstdCompressionChunker.finisha_sourcea_read_sizea_finished_inputa_finished_outputa_in_buffera_source_bufferucannot __enter__ multiple timesustream is not writableareadTlucannot read negative amounts less than -1areadalla_compress_into_buffera_read_inputaCOMPRESSION_RECOMMENDED_OUTPUT_SIZEamemmoveaZSTD_maxCLevelulevel must be less than %ducannot define compression_params and write_checksumucannot define compression_params and write_content_sizeucannot define compression_params and write_dict_iducannot define compression_params and threadsa_make_cctx_paramslaZSTD_createCCtxa_dict_dataa_setup_cctxaZSTD_freeCCtxTasizeaZSTD_CCtx_setParametersUsingCCtxParamsucould not set compression parameters: %sa_cdictaZSTD_CCtx_refCDictaZSTD_CCtx_loadDictionary_advancedaas_bytesaZSTD_dlm_byRefa_dict_typeucould not load compression dictionary: %suObtain the memory usage of this compressor, in bytes.

        >>> cctx = zstandard.ZstdCompressor()
        >>> memory = cctx.memory_size()
        aZSTD_CCtx_resetaZSTD_reset_session_onlyaZSTD_compressBoundanew_nonzeroucannot compress: %sTuunexpected partial frame flushu
        Compress data in a single operation.

        This is the simplest mechanism to perform compression: simply pass in a
        value and get a compressed value back. It is almost the most prone to
        abuse.

        The input and output values must fit in memory, so passing in very large
        values can result in excessive memory usage. For this reason, one of the
        streaming based APIs is preferred for larger values.

        :param data:
           Source data to compress
        :return:
           Compressed data

        >>> cctx = zstandard.ZstdCompressor()
        >>> compressed = cctx.compress(b"data to compress")
        aZSTD_CONTENTSIZE_UNKNOWNaZstdCompressionObju
        Obtain a compressor exposing the Python standard library compression API.

        See :py:class:`ZstdCompressionObj` for the full documentation.

        :param size:
           Size in bytes of data that will be compressed.
        :return:
           :py:class:`ZstdCompressionObj`
        aZstdCompressionChunkerTachunk_sizeu
        Create an object for iterative compressing to same-sized chunks.

        This API is similar to :py:meth:`ZstdCompressor.compressobj` but has
        better performance properties.

        :param size:
           Size in bytes of data that will be compressed.
        :param chunk_size:
           Size of compressed chunks.
        :return:
           :py:class:`ZstdCompressionChunker`
        ufirst argument must have a read() methodusecond argument must have a write() methodTlpaifharead_sizeatotal_readaofhu
        Copy data between 2 streams while compressing it.

        Data will be read from ``ifh``, compressed, and written to ``ofh``.
        ``ifh`` must have a ``read(size)`` method. ``ofh`` must have a
        ``write(data)``
        method.

        >>> cctx = zstandard.ZstdCompressor()
        >>> with open(input_path, "rb") as ifh, open(output_path, "wb") as ofh:
        ...     cctx.copy_stream(ifh, ofh)

        It is also possible to declare the size of the source stream:

        >>> cctx = zstandard.ZstdCompressor()
        >>> cctx.copy_stream(ifh, ofh, size=len_of_input)

        You can also specify how large the chunks that are ``read()``
        and ``write()`` from and to the streams:

        >>> cctx = zstandard.ZstdCompressor()
        >>> cctx.copy_stream(ifh, ofh, read_size=32768, write_size=16384)

        The stream copier returns a 2-tuple of bytes read and written:

        >>> cctx = zstandard.ZstdCompressor()
        >>> read_count, write_count = cctx.copy_stream(ifh, ofh)

        :param ifh:
           Source stream to read from
        :param ofh:
           Destination stream to write to
        :param size:
           Size in bytes of the source stream. If defined, compression
           parameters will be tuned for this size.
        :param read_size:
           Chunk sizes that source stream should be ``read()`` from.
        :param write_size:
           Chunk sizes that destination stream should be ``write()`` to.
        :return:
           2-tuple of ints of bytes read and written, respectively.
        aZstdCompressionReaderTaclosefdu
        Wrap a readable source with a stream that can read compressed data.

        This will produce an object conforming to the ``io.RawIOBase``
        interface which can be ``read()`` from to retrieve compressed data
        from a source.

        The source object can be any object with a ``read(size)`` method
        or an object that conforms to the buffer protocol.

        See :py:class:`ZstdCompressionReader` for type documentation and usage
        examples.

        :param source:
           Object to read source data from
        :param size:
           Size in bytes of source object.
        :param read_size:
           How many bytes to request when ``read()``'ing from the source.
        :param closefd:
           Whether to close the source stream when the returned stream is
           closed.
        :return:
           :py:class:`ZstdCompressionReader`
        umust pass an object with a write() methodaZstdCompressionWriteru
        Create a stream that will write compressed data into another stream.

        The argument to ``stream_writer()`` must have a ``write(data)`` method.
        As compressed data is available, ``write()`` will be called with the
        compressed data as its argument. Many common Python types implement
        ``write()``, including open file handles and ``io.BytesIO``.

        See :py:class:`ZstdCompressionWriter` for more documentation, including
        usage examples.

        :param writer:
           Stream to write compressed data to.
        :param size:
           Size in bytes of data to be compressed. If set, it will be used
           to influence compression parameter tuning and could result in the
           size being written into the header of the compressed data.
        :param write_size:
           How much data to ``write()`` to ``writer`` at a time.
        :param write_return_read:
           Whether ``write()`` should return the number of bytes that were
           consumed from the input.
        :param closefd:
           Whether to ``close`` the ``writer`` when this stream is closed.
        :return:
           :py:class:`ZstdCompressionWriter`
        u
        Read uncompressed data from a reader and return an iterator

        Returns an iterator of compressed data produced from reading from
        ``reader``.

        This method provides a mechanism to stream compressed data out of a
        source as an iterator of data chunks.

        Uncompressed data will be obtained from ``reader`` by calling the
        ``read(size)`` method of it or by reading a slice (if ``reader``
        conforms to the *buffer protocol*). The source data will be streamed
        into a compressor. As compressed data is available, it will be exposed
        to the iterator.

        Data is read from the source in chunks of ``read_size``. Compressed
        chunks are at most ``write_size`` bytes. Both values default to the
        zstd input and and output defaults, respectively.

        If reading from the source via ``read()``, ``read()`` will be called
        until it raises or returns an empty bytes (``b""``). It is perfectly
        valid for the source to deliver fewer bytes than were what requested
        by ``read(size)``.

        The caller is partially in control of how fast data is fed into the
        compressor by how it consumes the returned iterator. The compressor
        will not consume from the reader unless the caller consumes from the
        iterator.

        >>> cctx = zstandard.ZstdCompressor()
        >>> for chunk in cctx.read_to_iter(fh):
        ...     # Do something with emitted data.

        ``read_to_iter()`` accepts a ``size`` argument declaring the size of
        the input stream:

        >>> cctx = zstandard.ZstdCompressor()
        >>> for chunk in cctx.read_to_iter(fh, size=some_int):
        >>>     pass

        You can also control the size that data is ``read()`` from the source
        and the ideal size of output chunks:

        >>> cctx = zstandard.ZstdCompressor()
        >>> for chunk in cctx.read_to_iter(fh, read_size=16384, write_size=8192):
        >>>     pass

        ``read_to_iter()`` does not give direct control over the sizes of chunks
        fed into the compressor. Instead, chunk sizes will be whatever the object
        being read from delivers. These will often be of a uniform size.

        :param reader:
           Stream providing data to be compressed.
        :param size:
           Size in bytes of input data.
        :param read_size:
           Controls how many bytes are ``read()`` from the source.
        :param write_size:
           Controls the output size of emitted chunks.
        :return:
           Iterator of ``bytes``.
        areadera__getitem__umust pass an object with a read() method or conforms to buffer protocolawrite_sizeabuffer_offsetaminaread_to_iteruZstdCompressor.read_to_iteru
        Compress multiple pieces of data as a single function call.

        (Experimental. Not yet supported by CFFI backend.)

        This function is optimized to perform multiple compression operations
        as as possible with as little overhead as possible.

        Data to be compressed can be passed as a ``BufferWithSegmentsCollection``,
        a ``BufferWithSegments``, or a list containing byte like objects. Each
        element of the container will be compressed individually using the
        configured parameters on the ``ZstdCompressor`` instance.

        The ``threads`` argument controls how many threads to use for
        compression. The default is ``0`` which means to use a single thread.
        Negative values use the number of logical CPUs in the machine.

        The function returns a ``BufferWithSegmentsCollection``. This type
        represents N discrete memory allocations, each holding 1 or more
        compressed frames.

        Output data is written to shared memory buffers. This means that unlike
        regular Python objects, a reference to *any* object within the collection
        keeps the shared buffer and therefore memory backing it alive. This can
        have undesirable effects on process memory usage.

        The API and behavior of this function is experimental and will likely
        change. Known deficiencies include:

        * If asked to use multiple threads, it will always spawn that many
          threads, even if the input is too small to use them. It should
          automatically lower the thread count when the extra threads would
          just add overhead.
        * The buffer allocation strategy is fixed. There is room to make it
          dynamic, perhaps even to allow one output buffer per input,
          facilitating a variation of the API to return a list without the
          adverse effects of shared memory buffers.

        :param data:
           Source to read discrete pieces of data to compress.

           Can be a ``BufferWithSegmentsCollection``, a ``BufferWithSegments``,
           or a ``list[bytes]``.
        :return:
           BufferWithSegmentsCollection holding compressed data.
        aZSTD_getFrameProgressionaingestedaconsumedaproducedu
        Return information on how much work the compressor has done.

        Returns a 3-tuple of (ingested, consumed, produced).

        >>> cctx = zstandard.ZstdCompressor()
        >>> (ingested, consumed, produced) = cctx.frame_progression()
        aframeContentSizeacontent_sizeawindowSizeawindow_sizeadictIDadict_idachecksumFlagahas_checksumaZSTD_getFrameContentSizeaZSTD_CONTENTSIZE_ERRORTuerror when determining content sizeuObtain the decompressed size of a frame.

    The returned value is usually accurate. But strictly speaking it should
    not be trusted.

    :return:
       ``-1`` if size unknown and a non-negative integer otherwise.
    aZSTD_frameHeaderSizeucould not determine frame header size: %suObtain the size of a frame header.

    :return:
       Integer size in bytes.
    TuZSTD_frameHeader *aZSTD_getFrameHeaderucannot get frame parameters: %sunot enough data for frame parameters; need %d bytesaFrameParametersu
    Parse a zstd frame header into frame parameters.

    Depending on which fields are present in the frame and their values, the
    length of the frame parameters varies. If insufficient bytes are passed
    in to fully parse the frame parameters, ``ZstdError`` is raised. To ensure
    frame parameters can be parsed, pass in at least 18 bytes.

    :param data:
       Data from which to read frame parameters.
    :return:
       :py:class:`FrameParameters`
    a_datawkwdaDICT_TYPE_AUTOaDICT_TYPE_RAWCONTENTaDICT_TYPE_FULLDICTuinvalid dictionary load mode: %d; must use DICT_TYPE_* constantsaZDICT_getDictIDuObtain the integer ID of the dictionary.uObtain the ``bytes`` representation of the dictionary.umust only specify one of level or compression_paramsumust specify one of level or compression_paramsTaZSTD_compressionParametersachainLogahashLogaminMatchasearchLogatargetLengthawindowLogaZSTD_createCDict_advancedacparamsaZSTD_defaultCMemTuunable to precompute dictionaryaZSTD_freeCDictaZSTD_sizeof_CDictuPrecompute a dictionary os it can be used by multiple compressors.

        Calling this method on an instance that will be used by multiple
        :py:class:`ZstdCompressor` instances will improve performance.
        aZSTD_createDDict_advancedTucould not create decompression dictaZSTD_freeDDictaZSTD_sizeof_DDicta_ddictusamples must be a listlllalenusize_t[]usamples must be bytesasamples_bufferaoffsetasample_sizesTuZDICT_fastCover_params_t *wfastepsanbThreadsasplitPointaaccelazParamsanotificationLevelacompressionLevelaZDICT_optimizeTrainFromBuffer_fastCoveraaddressofaZDICT_isErroraZDICT_getErrorNameucannot train dict: %saZstdCompressionDictTadict_typewkwduTrain a dictionary from sample data using the COVER algorithm.

    A compression dictionary of size ``dict_size`` will be created from the
    iterable of ``samples``. The raw dictionary bytes will be returned.

    The dictionary training mechanism is known as *cover*. More details about it
    are available in the paper *Effective Construction of Relative Lempel-Ziv
    Dictionaries* (authors: Liao, Petri, Moffat, Wirth).

    The cover algorithm takes parameters ``k`` and ``d``. These are the
    *segment size* and *dmer size*, respectively. The returned dictionary
    instance created by this function has ``k`` and ``d`` attributes
    containing the values for these parameters. If a ``ZstdCompressionDict``
    is constructed from raw bytes data (a content-only dictionary), the
    ``k`` and ``d`` attributes will be ``0``.

    The segment and dmer size parameters to the cover algorithm can either be
    specified manually or ``train_dictionary()`` can try multiple values
    and pick the best one, where *best* means the smallest compressed data size.
    This later mode is called *optimization* mode.

    Under the hood, this function always calls
    ``ZDICT_optimizeTrainFromBuffer_fastCover()``. See the corresponding C library
    documentation for more.

    If neither ``steps`` nor ``threads`` is defined, defaults for ``d``, ``steps``,
    and ``level`` will be used that are equivalent with what
    ``ZDICT_trainFromBuffer()`` would use.


    :param dict_size:
       Target size in bytes of the dictionary to generate.
    :param samples:
       A list of bytes holding samples the dictionary will be trained from.
    :param k:
       Segment size : constraint: 0 < k : Reasonable range [16, 2048+]
    :param d:
       dmer size : constraint: 0 < d <= k : Reasonable range [6, 16]
    :param f:
       log of size of frequency array : constraint: 0 < f <= 31 : 1 means
       default(20)
    :param split_point:
       Percentage of samples used for training: Only used for optimization.
       The first # samples * ``split_point`` samples will be used to training.
       The last # samples * (1 - split_point) samples will be used for testing.
       0 means default (0.75), 1.0 when all samples are used for both training
       and testing.
    :param accel:
       Acceleration level: constraint: 0 < accel <= 10. Higher means faster
       and less accurate, 0 means default(1).
    :param dict_id:
       Integer dictionary ID for the produced dictionary. Default is 0, which uses
       a random value.
    :param steps:
       Number of steps through ``k`` values to perform when trying parameter
       variations.
    :param threads:
       Number of threads to use when trying parameter variations. Default is 0,
       which means to use a single thread. A negative value can be specified to
       use as many threads as there are detected logical CPUs.
    :param level:
       Integer target compression level when trying parameter variations.
    :param notifications:
       Controls writing of informational messages to ``stderr``. ``0`` (the
       default) means to write nothing. ``1`` writes errors. ``2`` writes
       progression info. ``3`` writes more details. And ``4`` writes all info.
    a_decompressora_read_across_framesa_unused_inputTucannot use a decompressobj multiple timesaZSTD_decompressStreama_dctxuzstd decompressor error: %suSend compressed data to the decompressor and obtain decompressed data.

        :param data:
           Data to feed into the decompressor.
        :return:
           Decompressed bytes.
        uBytes past the end of compressed data.

        If ``decompress()`` is fed additional data beyond the end of a zstd
        frame, this value will be non-empty once ``decompress()`` fully decodes
        the input frame.
        uWhether the end of the compressed data stream has been reached.a_bytes_decompresseduzstd decompress error: %suDecompress available input into an output buffer.

        Returns True if data in output buffer should be emitted.
        a_decompress_into_bufferaDECOMPRESSION_RECOMMENDED_OUTPUT_SIZEaSEEK_SETucannot seek to negative position with SEEK_SETucannot seek zstd decompression stream backwardsaSEEK_CURaSEEK_ENDuzstd decompression streams cannot be seeked with SEEK_ENDaread_amounta_ensure_dctxaZSTD_sizeof_DCtxadctxa_max_window_sizea_formataZSTD_createDCtxaZSTD_freeDCtxuSize of decompression context, in bytes.

        >>> dctx = zstandard.ZstdDecompressor()
        >>> size = dctx.memory_size()
        TuZstdDecompressor.read_across_frames=True is not yet implementedTuerror determining content size from frame headerTucould not determine content size in frame headerudecompression error: %sTudecompression error: did not decompress full frameaoutput_sizeudecompression error: decompressed %d bytes; expected %ducompressed input contains %d bytes of unused data, which is disallowedu
        Decompress data in a single operation.

        This method will decompress the input data in a single operation and
        return the decompressed data.

        The input bytes are expected to contain at least 1 full Zstandard frame
        (something compressed with :py:meth:`ZstdCompressor.compress` or
        similar). If the input does not contain a full frame, an exception will
        be raised.

        ``read_across_frames`` controls whether to read multiple zstandard
        frames in the input. When False, decompression stops after reading the
        first frame. This feature is not yet implemented but the argument is
        provided for forward API compatibility when the default is changed to
        True in a future release. For now, if you need to decompress multiple
        frames, use an API like :py:meth:`ZstdCompressor.stream_reader` with
        ``read_across_frames=True``.

        ``allow_extra_data`` controls how to handle extra input data after a
        fully decoded frame. If False, any extra data (which could be a valid
        zstd frame) will result in ``ZstdError`` being raised. If True, extra
        data is silently ignored. The default will likely change to False in a
        future release when ``read_across_frames`` defaults to True.

        If the input contains extra data after a full frame, that extra input
        data is silently ignored. This behavior is undesirable in many scenarios
        and will likely be changed or controllable in a future release (see
        #181).

        If the frame header of the compressed data does not contain the content
        size, ``max_output_size`` must be specified or ``ZstdError`` will be
        raised. An allocation of size ``max_output_size`` will be performed and an
        attempt will be made to perform decompression into that buffer. If the
        buffer is too small or cannot be allocated, ``ZstdError`` will be
        raised. The buffer will be resized if it is too large.

        Uncompressed data could be much larger than compressed data. As a result,
        calling this function could result in a very large memory allocation
        being performed to hold the uncompressed data. This could potentially
        result in ``MemoryError`` or system memory swapping. If you don't need
        the full output data in a single contiguous array in memory, consider
        using streaming decompression for more resilient memory behavior.

        Usage:

        >>> dctx = zstandard.ZstdDecompressor()
        >>> decompressed = dctx.decompress(data)

        If the compressed data doesn't have its content size embedded within it,
        decompression can be attempted by specifying the ``max_output_size``
        argument:

        >>> dctx = zstandard.ZstdDecompressor()
        >>> uncompressed = dctx.decompress(data, max_output_size=1048576)

        Ideally, ``max_output_size`` will be identical to the decompressed
        output size.

        .. important::

           If the exact size of decompressed data is unknown (not passed in
           explicitly and not stored in the zstd frame), for performance
           reasons it is encouraged to use a streaming API.

        :param data:
           Compressed data to decompress.
        :param max_output_size:
           Integer max size of response.

           If ``0``, there is no limit and we can attempt to allocate an output
           buffer of infinite size.
        :return:
           ``bytes`` representing decompressed output.
        aZstdDecompressionReaderu
        Read-only stream wrapper that performs decompression.

        This method obtains an object that conforms to the ``io.RawIOBase``
        interface and performs transparent decompression via ``read()``
        operations. Source data is obtained by calling ``read()`` on a
        source stream or object implementing the buffer protocol.

        See :py:class:`zstandard.ZstdDecompressionReader` for more documentation
        and usage examples.

        :param source:
           Source of compressed data to decompress. Can be any object
           with a ``read(size)`` method or that conforms to the buffer protocol.
        :param read_size:
           Integer number of bytes to read from the source and feed into the
           compressor at a time.
        :param read_across_frames:
           Whether to read data across multiple zstd frames. If False,
           decompression is stopped at frame boundaries.
        :param closefd:
           Whether to close the source stream when this instance is closed.
        :return:
           :py:class:`zstandard.ZstdDecompressionReader`.
        uwrite_size must be positiveaZstdDecompressionObjTawrite_sizearead_across_framesuObtain a standard library compatible incremental decompressor.

        See :py:class:`ZstdDecompressionObj` for more documentation
        and usage examples.

        :param write_size: size of internal output buffer to collect decompressed
          chunks in.
        :param read_across_frames: whether to read across multiple zstd frames.
          If False, reading stops after 1 frame and subsequent decompress
          attempts will raise an exception.
        :return:
           :py:class:`zstandard.ZstdDecompressionObj`
        uRead compressed data to an iterator of uncompressed chunks.

        This method will read data from ``reader``, feed it to a decompressor,
        and emit ``bytes`` chunks representing the decompressed result.

        >>> dctx = zstandard.ZstdDecompressor()
        >>> for chunk in dctx.read_to_iter(fh):
        ...     # Do something with original data.

        ``read_to_iter()`` accepts an object with a ``read(size)`` method that
        will return compressed bytes or an object conforming to the buffer
        protocol.

        ``read_to_iter()`` returns an iterator whose elements are chunks of the
        decompressed data.

        The size of requested ``read()`` from the source can be specified:

        >>> dctx = zstandard.ZstdDecompressor()
        >>> for chunk in dctx.read_to_iter(fh, read_size=16384):
        ...    pass

        It is also possible to skip leading bytes in the input data:

        >>> dctx = zstandard.ZstdDecompressor()
        >>> for chunk in dctx.read_to_iter(fh, skip_bytes=1):
        ...    pass

        .. tip::

           Skipping leading bytes is useful if the source data contains extra
           *header* data. Traditionally, you would need to create a slice or
           ``memoryview`` of the data you want to decompress. This would create
           overhead. It is more efficient to pass the offset into this API.

        Similarly to :py:meth:`ZstdCompressor.read_to_iter`, the consumer of the
        iterator controls when data is decompressed. If the iterator isn't consumed,
        decompression is put on hold.

        When ``read_to_iter()`` is passed an object conforming to the buffer protocol,
        the behavior may seem similar to what occurs when the simple decompression
        API is used. However, this API works when the decompressed size is unknown.
        Furthermore, if feeding large inputs, the decompressor will work in chunks
        instead of performing a single operation.

        :param reader:
           Source of compressed data. Can be any object with a
           ``read(size)`` method or any object conforming to the buffer
           protocol.
        :param read_size:
           Integer size of data chunks to read from ``reader`` and feed into
           the decompressor.
        :param write_size:
           Integer size of data chunks to emit from iterator.
        :param skip_bytes:
           Integer number of bytes to skip over before sending data into
           the decompressor.
        :return:
           Iterator of ``bytes`` representing uncompressed data.
        askip_bytesuskip_bytes must be smaller than read_sizeuskip_bytes larger than first input chunkuZstdDecompressor.read_to_iteraZstdDecompressionWriteru
        Push-based stream wrapper that performs decompression.

        This method constructs a stream wrapper that conforms to the
        ``io.RawIOBase`` interface and performs transparent decompression
        when writing to a wrapper stream.

        See :py:class:`zstandard.ZstdDecompressionWriter` for more documentation
        and usage examples.

        :param writer:
           Destination for decompressed output. Can be any object with a
           ``write(data)``.
        :param write_size:
           Integer size of chunks to ``write()`` to ``writer``.
        :param write_return_read:
           Whether ``write()`` should return the number of bytes of input
           consumed. If False, ``write()`` returns the number of bytes sent
           to the inner stream.
        :param closefd:
           Whether to ``close()`` the inner stream when this stream is closed.
        :return:
           :py:class:`zstandard.ZstdDecompressionWriter`
        u
        Copy data between streams, decompressing in the process.

        Compressed data will be read from ``ifh``, decompressed, and written
        to ``ofh``.

        >>> dctx = zstandard.ZstdDecompressor()
        >>> dctx.copy_stream(ifh, ofh)

        e.g. to decompress a file to another file:

        >>> dctx = zstandard.ZstdDecompressor()
        >>> with open(input_path, 'rb') as ifh, open(output_path, 'wb') as ofh:
        ...     dctx.copy_stream(ifh, ofh)

        The size of chunks being ``read()`` and ``write()`` from and to the
        streams can be specified:

        >>> dctx = zstandard.ZstdDecompressor()
        >>> dctx.copy_stream(ifh, ofh, read_size=8192, write_size=16384)

        :param ifh:
           Source stream to read compressed data from.

           Must have a ``read()`` method.
        :param ofh:
           Destination stream to write uncompressed data to.

           Must have a ``write()`` method.
        :param read_size:
           The number of bytes to ``read()`` from the source in a single
           operation.
        :param write_size:
           The number of bytes to ``write()`` to the destination in a single
           operation.
        :return:
           2-tuple of integers representing the number of bytes read and
           written, respectively.
        uargument must be a listuempty input chainuchunk 0 must be bytesuchunk 0 is not a valid zstd frameuchunk 0 is too small to contain a zstd frameuchunk 0 missing content size in frameTFTaload_dictucould not decompress chunk 0: %sTuchunk 0 did not decompress full framewiuchunk %d must be bytesaparamsuchunk %d is not a valid zstd frameuchunk %d is too small to contain a zstd frameuchunk %d missing content size in frameucould not decompress chunk %d: %suchunk %d did not decompress full framealast_bufferu
        Decompress a series of frames using the content dictionary chaining technique.

        Such a list of frames is produced by compressing discrete inputs where
        each non-initial input is compressed with a *prefix* dictionary consisting
        of the content of the previous input.

        For example, say you have the following inputs:

        >>> inputs = [b"input 1", b"input 2", b"input 3"]

        The zstd frame chain consists of:

        1. ``b"input 1"`` compressed in standalone/discrete mode
        2. ``b"input 2"`` compressed using ``b"input 1"`` as a *prefix* dictionary
        3. ``b"input 3"`` compressed using ``b"input 2"`` as a *prefix* dictionary

        Each zstd frame **must** have the content size written.

        The following Python code can be used to produce a *prefix dictionary chain*:

        >>> def make_chain(inputs):
        ...    frames = []
        ...
        ...    # First frame is compressed in standalone/discrete mode.
        ...    zctx = zstandard.ZstdCompressor()
        ...    frames.append(zctx.compress(inputs[0]))
        ...
        ...    # Subsequent frames use the previous fulltext as a prefix dictionary
        ...    for i, raw in enumerate(inputs[1:]):
        ...        dict_data = zstandard.ZstdCompressionDict(
        ...            inputs[i], dict_type=zstandard.DICT_TYPE_RAWCONTENT)
        ...        zctx = zstandard.ZstdCompressor(dict_data=dict_data)
        ...        frames.append(zctx.compress(raw))
        ...
        ...    return frames

        ``decompress_content_dict_chain()`` returns the uncompressed data of the last
        element in the input chain.

        .. note::

           It is possible to implement *prefix dictionary chain* decompression
           on top of other APIs. However, this function will likely be faster -
           especially for long input chains - as it avoids the overhead of
           instantiating and passing around intermediate objects between
           multiple functions.

        :param frames:
           List of ``bytes`` holding compressed zstd frames.
        :return:
        u
        Decompress multiple zstd frames to output buffers as a single operation.

        (Experimental. Not available in CFFI backend.)

        Compressed frames can be passed to the function as a
        ``BufferWithSegments``, a ``BufferWithSegmentsCollection``, or as a
        list containing objects that conform to the buffer protocol. For best
        performance, pass a ``BufferWithSegmentsCollection`` or a
        ``BufferWithSegments``, as minimal input validation will be done for
        that type. If calling from Python (as opposed to C), constructing one
        of these instances may add overhead cancelling out the performance
        overhead of validation for list inputs.

        Returns a ``BufferWithSegmentsCollection`` containing the decompressed
        data. All decompressed data is allocated in a single memory buffer. The
        ``BufferWithSegments`` instance tracks which objects are at which offsets
        and their respective lengths.

        >>> dctx = zstandard.ZstdDecompressor()
        >>> results = dctx.multi_decompress_to_buffer([b'...', b'...'])

        The decompressed size of each frame MUST be discoverable. It can either be
        embedded within the zstd frame or passed in via the ``decompressed_sizes``
        argument.

        The ``decompressed_sizes`` argument is an object conforming to the buffer
        protocol which holds an array of 64-bit unsigned integers in the machine's
        native format defining the decompressed sizes of each frame. If this argument
        is passed, it avoids having to scan each frame for its decompressed size.
        This frame scanning can add noticeable overhead in some scenarios.

        >>> frames = [...]
        >>> sizes = struct.pack('=QQQQ', len0, len1, len2, len3)
        >>>
        >>> dctx = zstandard.ZstdDecompressor()
        >>> results = dctx.multi_decompress_to_buffer(frames, decompressed_sizes=sizes)

        .. note::

           It is possible to pass a ``mmap.mmap()`` instance into this function by
           wrapping it with a ``BufferWithSegments`` instance (which will define the
           offsets of frames within the memory mapped region).

        This function is logically equivalent to performing
        :py:meth:`ZstdCompressor.decompress` on each input frame and returning the
        result.

        This function exists to perform decompression on multiple frames as fast
        as possible by having as little overhead as possible. Since decompression is
        performed as a single operation and since the decompressed output is stored in
        a single buffer, extra memory allocations, Python objects, and Python function
        calls are avoided. This is ideal for scenarios where callers know up front that
        they need to access data for multiple frames, such as when  *delta chains* are
        being used.

        Currently, the implementation always spawns multiple threads when requested,
        even if the amount of work to do is small. In the future, it will be smarter
        about avoiding threads and their associated overhead when the amount of
        work to do is small.

        :param frames:
           Source defining zstd frames to decompress.
        :param decompressed_sizes:
           Array of integers representing sizes of decompressed zstd frames.
        :param threads:
           How many threads to use for decompression operations.

           Negative values will use the same number of threads as logical CPUs
           on the machine. Values ``0`` or ``1`` use a single thread.
        :return:
           ``BufferWithSegmentsCollection``
        aZSTD_DCtx_resetaZSTD_DCtx_setMaxWindowSizeuunable to set max window size: %saZSTD_DCtx_setParameteraZSTD_d_formatuunable to set decoding format: %saZSTD_DCtx_refDDictuunable to reference prepared dictionary: %suPython interface to the Zstandard (zstd) compression library.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importaunicode_literalsLFaBufferSegmentaBufferSegmentsaBufferWithSegmentsaBufferWithSegmentsCollectionaZstdCompressionChunkeraZstdCompressionDictaZstdCompressionObjaZstdCompressionParametersaZstdCompressionReaderaZstdCompressionWriteraZstdCompressoraZstdDecompressionObjaZstdDecompressionReaderaZstdDecompressionWriteraZstdDecompressoraZstdErroraFrameParametersabackend_featuresaestimate_decompression_context_sizeaframe_content_sizeaframe_header_sizeaget_frame_parametersatrain_dictionaryaFLUSH_BLOCKaFLUSH_FRAMEaCOMPRESSOBJ_FLUSH_FINISHaCOMPRESSOBJ_FLUSH_BLOCKaZSTD_VERSIONaFRAME_HEADERaCONTENTSIZE_UNKNOWNaCONTENTSIZE_ERRORaMAX_COMPRESSION_LEVELaCOMPRESSION_RECOMMENDED_INPUT_SIZEaCOMPRESSION_RECOMMENDED_OUTPUT_SIZEaDECOMPRESSION_RECOMMENDED_INPUT_SIZEaDECOMPRESSION_RECOMMENDED_OUTPUT_SIZEaMAGIC_NUMBERaBLOCKSIZELOG_MAXaBLOCKSIZE_MAXaWINDOWLOG_MINaWINDOWLOG_MAXaCHAINLOG_MINaCHAINLOG_MAXaHASHLOG_MINaHASHLOG_MAXaMINMATCH_MINaMINMATCH_MAXaSEARCHLOG_MINaSEARCHLOG_MAXaSEARCHLENGTH_MINaSEARCHLENGTH_MAXaTARGETLENGTH_MINaTARGETLENGTH_MAXaLDM_MINMATCH_MINaLDM_MINMATCH_MAXaLDM_BUCKETSIZELOG_MAXaSTRATEGY_FASTaSTRATEGY_DFASTaSTRATEGY_GREEDYaSTRATEGY_LAZYaSTRATEGY_LAZY2aSTRATEGY_BTLAZY2aSTRATEGY_BTOPTaSTRATEGY_BTULTRAaSTRATEGY_BTULTRA2aDICT_TYPE_AUTOaDICT_TYPE_RAWCONTENTaDICT_TYPE_FULLDICTaFORMAT_ZSTD1aFORMAT_ZSTD1_MAGICLESSa__all__a_cffiTaffialibabackend_featuresaZSTD_CStreamInSizeaCOMPRESSION_RECOMMENDED_INPUT_SIZEaZSTD_CStreamOutSizeaZSTD_DStreamInSizeaDECOMPRESSION_RECOMMENDED_INPUT_SIZEaZSTD_DStreamOutSizeanew_allocatorTashould_clear_after_allocaMAX_COMPRESSION_LEVELaZSTD_MAGICNUMBERaMAGIC_NUMBERc(/aFRAME_HEADERaCONTENTSIZE_UNKNOWNaCONTENTSIZE_ERRORaZSTD_VERSION_MAJORaZSTD_VERSION_MINORaZSTD_VERSION_RELEASEaZSTD_VERSIONaZSTD_BLOCKSIZELOG_MAXaBLOCKSIZELOG_MAXaZSTD_BLOCKSIZE_MAXaBLOCKSIZE_MAXaZSTD_WINDOWLOG_MINaWINDOWLOG_MINaZSTD_WINDOWLOG_MAXaWINDOWLOG_MAXaZSTD_CHAINLOG_MINaCHAINLOG_MINaZSTD_CHAINLOG_MAXaCHAINLOG_MAXaZSTD_HASHLOG_MINaHASHLOG_MINaZSTD_HASHLOG_MAXaHASHLOG_MAXaZSTD_MINMATCH_MINaMINMATCH_MINaZSTD_MINMATCH_MAXaMINMATCH_MAXaZSTD_SEARCHLOG_MINaSEARCHLOG_MINaZSTD_SEARCHLOG_MAXaSEARCHLOG_MAXaSEARCHLENGTH_MINaSEARCHLENGTH_MAXaZSTD_TARGETLENGTH_MINaTARGETLENGTH_MINaZSTD_TARGETLENGTH_MAXaTARGETLENGTH_MAXaZSTD_LDM_MINMATCH_MINaLDM_MINMATCH_MINaZSTD_LDM_MINMATCH_MAXaLDM_MINMATCH_MAXaZSTD_LDM_BUCKETSIZELOG_MAXaLDM_BUCKETSIZELOG_MAXaZSTD_fastaSTRATEGY_FASTaZSTD_dfastaSTRATEGY_DFASTaZSTD_greedyaSTRATEGY_GREEDYaZSTD_lazyaSTRATEGY_LAZYaZSTD_lazy2aSTRATEGY_LAZY2aZSTD_btlazy2aSTRATEGY_BTLAZY2aZSTD_btoptaSTRATEGY_BTOPTaZSTD_btultraaSTRATEGY_BTULTRAaZSTD_btultra2aSTRATEGY_BTULTRA2aZSTD_dct_autoaZSTD_dct_rawContentaZSTD_dct_fullDictaZSTD_f_zstd1aFORMAT_ZSTD1aZSTD_f_zstd1_magiclessaFORMAT_ZSTD1_MAGICLESSuzstandard.backend_cffia__module__uRepresents a segment within a ``BufferWithSegments``.

    This type is essentially a reference to N bytes within a
    ``BufferWithSegments``.

    The object conforms to the buffer protocol.
    aBufferSegmenta__qualname__uBufferSegment.offseta__len__uBufferSegment.__len__atobytesuBufferSegment.tobytesTuRepresents an array of ``(offset, length)`` integers.

    This type is effectively an index used by :py:class:`BufferWithSegments`.

    The array members are 64-bit unsigned integers using host/native bit order.

    Instances conform to the buffer protocol.
    aBufferSegmentsuA memory buffer containing N discrete items of known lengths.

    This type is essentially a fixed size memory address and an array
    of 2-tuples of ``(offset, length)`` 64-bit unsigned native-endian
    integers defining the byte offset and length of each segment within
    the buffer.

    Instances behave like containers.

    Instances also conform to the buffer protocol. So a reference to the
    backing bytes can be obtained via ``memoryview(o)``. A *copy* of the
    backing bytes can be obtained via ``.tobytes()``.

    This type exists to facilitate operations against N>1 items without
    the overhead of Python object creation and management. Used with
    APIs like :py:meth:`ZstdDecompressor.multi_decompress_to_buffer`, it
    is possible to decompress many objects in parallel without the GIL
    held, leading to even better performance.
    aBufferWithSegmentsuBufferWithSegments.sizeuBufferWithSegments.__len__uBufferWithSegments.__getitem__asegmentsuBufferWithSegments.segmentsuBufferWithSegments.tobytesuA virtual spanning view over multiple BufferWithSegments.

    Instances are constructed from 1 or more :py:class:`BufferWithSegments`
    instances. The resulting object behaves like an ordered sequence whose
    members are the segments within each ``BufferWithSegments``.

    If the object is composed of 2 ``BufferWithSegments`` instances with the
    first having 2 segments and the second have 3 segments, then ``b[0]``
    and ``b[1]`` access segments in the first object and ``b[2]``, ``b[3]``,
    and ``b[4]`` access segments from the second.
    aBufferWithSegmentsCollectionuBufferWithSegmentsCollection.__len__uBufferWithSegmentsCollection.__getitem__TEExceptiona__prepare__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>a__orig_bases__TOobjectuLow-level zstd compression parameters.

    This type represents a collection of parameters to control how zstd
    compression is performed.

    Instances can be constructed from raw parameters or derived from a
    base set of defaults specified from a compression level (recommended)
    via :py:meth:`ZstdCompressionParameters.from_level`.

    >>> # Derive compression settings for compression level 7.
    >>> params = zstandard.ZstdCompressionParameters.from_level(7)

    >>> # With an input size of 1MB
    >>> params = zstandard.ZstdCompressionParameters.from_level(7, source_size=1048576)

    Using ``from_level()``, it is also possible to override individual compression
    parameters or to define additional settings that aren't automatically derived.
    e.g.:

    >>> params = zstandard.ZstdCompressionParameters.from_level(4, window_log=10)
    >>> params = zstandard.ZstdCompressionParameters.from_level(5, threads=4)

    Or you can define low-level compression settings directly:

    >>> params = zstandard.ZstdCompressionParameters(window_log=12, enable_ldm=True)

    Once a ``ZstdCompressionParameters`` instance is obtained, it can be used to
    configure a compressor:

    >>> cctx = zstandard.ZstdCompressor(compression_params=params)

    Some of these are very low-level settings. It may help to consult the official
    zstandard documentation for their behavior. Look for the ``ZSTD_p_*`` constants
    in ``zstd.h`` (https://github.com/facebook/zstd/blob/dev/lib/zstd.h).
    astaticmethodafrom_leveluZstdCompressionParameters.from_levelTlppppppplllppllpppplla__init__uZstdCompressionParameters.__init__apropertyuZstdCompressionParameters.formatuZstdCompressionParameters.compression_leveluZstdCompressionParameters.window_loguZstdCompressionParameters.hash_loguZstdCompressionParameters.chain_loguZstdCompressionParameters.search_loguZstdCompressionParameters.min_matchuZstdCompressionParameters.target_lengthuZstdCompressionParameters.strategyuZstdCompressionParameters.write_content_sizeuZstdCompressionParameters.write_checksumuZstdCompressionParameters.write_dict_iduZstdCompressionParameters.job_sizeuZstdCompressionParameters.overlap_loguZstdCompressionParameters.force_max_windowuZstdCompressionParameters.enable_ldmuZstdCompressionParameters.ldm_hash_loguZstdCompressionParameters.ldm_min_matchuZstdCompressionParameters.ldm_bucket_size_loguZstdCompressionParameters.ldm_hash_rate_loguZstdCompressionParameters.threadsaestimated_compression_context_sizeuZstdCompressionParameters.estimated_compression_context_sizeaestimate_decompression_context_sizeuWritable compressing stream wrapper.

    ``ZstdCompressionWriter`` is a write-only stream interface for writing
    compressed data to another stream.

    This type conforms to the ``io.RawIOBase`` interface and should be usable
    by any type that operates against a *file-object* (``typing.BinaryIO``
    in Python type hinting speak). Only methods that involve writing will do
    useful things.

    As data is written to this stream (e.g. via ``write()``), that data
    is sent to the compressor. As compressed data becomes available from
    the compressor, it is sent to the underlying stream by calling its
    ``write()`` method.

    Both ``write()`` and ``flush()`` return the number of bytes written to the
    object's ``write()``. In many cases, small inputs do not accumulate enough
    data to cause a write and ``write()`` will return ``0``.

    Calling ``close()`` will mark the stream as closed and subsequent I/O
    operations will raise ``ValueError`` (per the documented behavior of
    ``io.RawIOBase``). ``close()`` will also call ``close()`` on the underlying
    stream if such a method exists and the instance was constructed with
    ``closefd=True``

    Instances are obtained by calling :py:meth:`ZstdCompressor.stream_writer`.

    Typically usage is as follows:

    >>> cctx = zstandard.ZstdCompressor(level=10)
    >>> compressor = cctx.stream_writer(fh)
    >>> compressor.write(b"chunk 0\n")
    >>> compressor.write(b"chunk 1\n")
    >>> compressor.flush()
    >>> # Receiver will be able to decode ``chunk 0\nchunk 1\n`` at this point.
    >>> # Receiver is also expecting more data in the zstd *frame*.
    >>>
    >>> compressor.write(b"chunk 2\n")
    >>> compressor.flush(zstandard.FLUSH_FRAME)
    >>> # Receiver will be able to decode ``chunk 0\nchunk 1\nchunk 2``.
    >>> # Receiver is expecting no more data, as the zstd frame is closed.
    >>> # Any future calls to ``write()`` at this point will construct a new
    >>> # zstd frame.

    Instances can be used as context managers. Exiting the context manager is
    the equivalent of calling ``close()``, which is equivalent to calling
    ``flush(zstandard.FLUSH_FRAME)``:

    >>> cctx = zstandard.ZstdCompressor(level=10)
    >>> with cctx.stream_writer(fh) as compressor:
    ...     compressor.write(b'chunk 0')
    ...     compressor.write(b'chunk 1')
    ...     ...

    .. important::

       If ``flush(FLUSH_FRAME)`` is not called, emitted data doesn't
       constitute a full zstd *frame* and consumers of this data may complain
       about malformed input. It is recommended to use instances as a context
       manager to ensure *frames* are properly finished.

    If the size of the data being fed to this streaming compressor is known,
    you can declare it before compression begins:

    >>> cctx = zstandard.ZstdCompressor()
    >>> with cctx.stream_writer(fh, size=data_len) as compressor:
    ...     compressor.write(chunk0)
    ...     compressor.write(chunk1)
    ...     ...

    Declaring the size of the source data allows compression parameters to
    be tuned. And if ``write_content_size`` is used, it also results in the
    content size being written into the frame header of the output data.

    The size of chunks being ``write()`` to the destination can be specified:

    >>> cctx = zstandard.ZstdCompressor()
    >>> with cctx.stream_writer(fh, write_size=32768) as compressor:
    ...     ...

    To see how much memory is being used by the streaming compressor:

    >>> cctx = zstandard.ZstdCompressor()
    >>> with cctx.stream_writer(fh) as compressor:
    ...     ...
    ...     byte_size = compressor.memory_size()

    Thte total number of bytes written so far are exposed via ``tell()``:

    >>> cctx = zstandard.ZstdCompressor()
    >>> with cctx.stream_writer(fh) as compressor:
    ...     ...
    ...     total_written = compressor.tell()

    ``stream_writer()`` accepts a ``write_return_read`` boolean argument to
    control the return value of ``write()``. When ``False`` (the default),
    ``write()`` returns the number of bytes that were ``write()``'en to the
    underlying object. When ``True``, ``write()`` returns the number of bytes
    read from the input that were subsequently written to the compressor.
    ``True`` is the *proper* behavior for ``write()`` as specified by the
    ``io.RawIOBase`` interface and will become the default value in a future
    release.
    TtuZstdCompressionWriter.__init__a__enter__uZstdCompressionWriter.__enter__a__exit__uZstdCompressionWriter.__exit__a__iter__uZstdCompressionWriter.__iter__a__next__uZstdCompressionWriter.__next__amemory_sizeuZstdCompressionWriter.memory_sizeuZstdCompressionWriter.filenouZstdCompressionWriter.closeacloseduZstdCompressionWriter.closedaisattyuZstdCompressionWriter.isattyareadableuZstdCompressionWriter.readableTlareadlineuZstdCompressionWriter.readlineareadlinesuZstdCompressionWriter.readlinesTnaseekuZstdCompressionWriter.seekaseekableuZstdCompressionWriter.seekableatruncateuZstdCompressionWriter.truncateawritableuZstdCompressionWriter.writableawritelinesuZstdCompressionWriter.writelinesuZstdCompressionWriter.readuZstdCompressionWriter.readallareadintouZstdCompressionWriter.readintouZstdCompressionWriter.writeuZstdCompressionWriter.flushatelluZstdCompressionWriter.telluA compressor conforming to the API in Python's standard library.

    This type implements an API similar to compression types in Python's
    standard library such as ``zlib.compressobj`` and ``bz2.BZ2Compressor``.
    This enables existing code targeting the standard library API to swap
    in this type to achieve zstd compression.

    .. important::

       The design of this API is not ideal for optimal performance.

       The reason performance is not optimal is because the API is limited to
       returning a single buffer holding compressed data. When compressing
       data, we don't know how much data will be emitted. So in order to
       capture all this data in a single buffer, we need to perform buffer
       reallocations and/or extra memory copies. This can add significant
       overhead depending on the size or nature of the compressed data how
       much your application calls this type.

       If performance is critical, consider an API like
       :py:meth:`ZstdCompressor.stream_reader`,
       :py:meth:`ZstdCompressor.stream_writer`,
       :py:meth:`ZstdCompressor.chunker`, or
       :py:meth:`ZstdCompressor.read_to_iter`, which result in less overhead
       managing buffers.

    Instances are obtained by calling :py:meth:`ZstdCompressor.compressobj`.

    Here is how this API should be used:

    >>> cctx = zstandard.ZstdCompressor()
    >>> cobj = cctx.compressobj()
    >>> data = cobj.compress(b"raw input 0")
    >>> data = cobj.compress(b"raw input 1")
    >>> data = cobj.flush()

    Or to flush blocks:

    >>> cctx.zstandard.ZstdCompressor()
    >>> cobj = cctx.compressobj()
    >>> data = cobj.compress(b"chunk in first block")
    >>> data = cobj.flush(zstandard.COMPRESSOBJ_FLUSH_BLOCK)
    >>> data = cobj.compress(b"chunk in second block")
    >>> data = cobj.flush()

    For best performance results, keep input chunks under 256KB. This avoids
    extra allocations for a large output object.

    It is possible to declare the input size of the data that will be fed
    into the compressor:

    >>> cctx = zstandard.ZstdCompressor()
    >>> cobj = cctx.compressobj(size=6)
    >>> data = cobj.compress(b"foobar")
    >>> data = cobj.flush()
    uZstdCompressionObj.compressuZstdCompressionObj.flushuCompress data to uniformly sized chunks.

    This type allows you to iteratively feed chunks of data into a compressor
    and produce output chunks of uniform size.

    ``compress()``, ``flush()``, and ``finish()`` all return an iterator of
    ``bytes`` instances holding compressed data. The iterator may be empty.
    Callers MUST iterate through all elements of the returned iterator before
    performing another operation on the object or else the compressor's
    internal state may become confused. This can result in an exception being
    raised or malformed data being emitted.

    All chunks emitted by ``compress()`` will have a length of the configured
    chunk size.

    ``flush()`` and ``finish()`` may return a final chunk smaller than
    the configured chunk size.

    Instances are obtained by calling :py:meth:`ZstdCompressor.chunker`.

    Here is how the API should be used:

    >>> cctx = zstandard.ZstdCompressor()
    >>> chunker = cctx.chunker(chunk_size=32768)
    >>>
    >>> with open(path, 'rb') as fh:
    ...     while True:
    ...         in_chunk = fh.read(32768)
    ...         if not in_chunk:
    ...             break
    ...
    ...         for out_chunk in chunker.compress(in_chunk):
    ...             # Do something with output chunk of size 32768.
    ...
    ...     for out_chunk in chunker.finish():
    ...         # Do something with output chunks that finalize the zstd frame.

    This compressor type is often a better alternative to
    :py:class:`ZstdCompressor.compressobj` because it has better performance
    properties.

    ``compressobj()`` will emit output data as it is available. This results
    in a *stream* of output chunks of varying sizes. The consistency of the
    output chunk size with ``chunker()`` is more appropriate for many usages,
    such as sending compressed data to a socket.

    ``compressobj()`` may also perform extra memory reallocations in order
    to dynamically adjust the sizes of the output chunks. Since ``chunker()``
    output chunks are all the same size (except for flushed or final chunks),
    there is less memory allocation/copying overhead.
    uZstdCompressionChunker.__init__uReadable compressing stream wrapper.

    ``ZstdCompressionReader`` is a read-only stream interface for obtaining
    compressed data from a source.

    This type conforms to the ``io.RawIOBase`` interface and should be usable
    by any type that operates against a *file-object* (``typing.BinaryIO``
    in Python type hinting speak).

    Instances are neither writable nor seekable (even if the underlying
    source is seekable). ``readline()`` and ``readlines()`` are not implemented
    because they don't make sense for compressed data. ``tell()`` returns the
    number of compressed bytes emitted so far.

    Instances are obtained by calling :py:meth:`ZstdCompressor.stream_reader`.

    In this example, we open a file for reading and then wrap that file
    handle with a stream from which compressed data can be ``read()``.

    >>> with open(path, 'rb') as fh:
    ...     cctx = zstandard.ZstdCompressor()
    ...     reader = cctx.stream_reader(fh)
    ...     while True:
    ...         chunk = reader.read(16384)
    ...         if not chunk:
    ...             break
    ...
    ...         # Do something with compressed chunk.

    Instances can also be used as context managers:

    >>> with open(path, 'rb') as fh:
    ...     cctx = zstandard.ZstdCompressor()
    ...     with cctx.stream_reader(fh) as reader:
    ...         while True:
    ...             chunk = reader.read(16384)
    ...             if not chunk:
    ...                 break
    ...
    ...             # Do something with compressed chunk.

    When the context manager exits or ``close()`` is called, the stream is
    closed, underlying resources are released, and future operations against
    the compression stream will fail.

    ``stream_reader()`` accepts a ``size`` argument specifying how large the
    input stream is. This is used to adjust compression parameters so they are
    tailored to the source size. e.g.

    >>> with open(path, 'rb') as fh:
    ...     cctx = zstandard.ZstdCompressor()
    ...     with cctx.stream_reader(fh, size=os.stat(path).st_size) as reader:
    ...         ...

    If the ``source`` is a stream, you can specify how large ``read()``
    requests to that stream should be via the ``read_size`` argument.
    It defaults to ``zstandard.COMPRESSION_RECOMMENDED_INPUT_SIZE``. e.g.

    >>> with open(path, 'rb') as fh:
    ...     cctx = zstandard.ZstdCompressor()
    ...     # Will perform fh.read(8192) when obtaining data to feed into the
    ...     # compressor.
    ...     with cctx.stream_reader(fh, read_size=8192) as reader:
    ...         ...
    uZstdCompressionReader.__init__uZstdCompressionReader.__enter__uZstdCompressionReader.__exit__uZstdCompressionReader.readableuZstdCompressionReader.writableuZstdCompressionReader.seekableuZstdCompressionReader.readlineuZstdCompressionReader.readlinesuZstdCompressionReader.writeuZstdCompressionReader.writelinesuZstdCompressionReader.isattyuZstdCompressionReader.flushuZstdCompressionReader.closeuZstdCompressionReader.closeduZstdCompressionReader.telluZstdCompressionReader.readalluZstdCompressionReader.__iter__uZstdCompressionReader.__next__anextuZstdCompressionReader._read_inputuZstdCompressionReader._compress_into_bufferuZstdCompressionReader.readaread1uZstdCompressionReader.read1uZstdCompressionReader.readintoareadinto1uZstdCompressionReader.readinto1aZstdCompressoru
    Create an object used to perform Zstandard compression.

    Each instance is essentially a wrapper around a ``ZSTD_CCtx`` from
    zstd's C API.

    An instance can compress data various ways. Instances can be used
    multiple times. Each compression operation will use the compression
    parameters defined at construction time.

    .. note:

       When using a compression dictionary and multiple compression
       operations are performed, the ``ZstdCompressionParameters`` derived
       from an integer compression ``level`` and the first compressed data's
       size will be reused for all subsequent operations. This may not be
       desirable if source data sizes vary significantly.

    ``compression_params`` is mutually exclusive with ``level``,
    ``write_checksum``, ``write_content_size``, ``write_dict_id``, and
    ``threads``.

    Assume that each ``ZstdCompressor`` instance can only handle a single
    logical compression operation at the same time. i.e. if you call a method
    like ``stream_reader()`` to obtain multiple objects derived from the same
    ``ZstdCompressor`` instance and attempt to use them simultaneously, errors
    will likely occur.

    If you need to perform multiple logical compression operations and you
    can't guarantee those operations are temporally non-overlapping, you need
    to obtain multiple ``ZstdCompressor`` instances.

    Unless specified otherwise, assume that no two methods of
    ``ZstdCompressor`` instances can be called from multiple Python
    threads simultaneously. In other words, assume instances are not thread safe
    unless stated otherwise.

    :param level:
       Integer compression level. Valid values are all negative integers
       through 22. Lower values generally yield faster operations with lower
       compression ratios. Higher values are generally slower but compress
       better. The default is 3, which is what the ``zstd`` CLI uses. Negative
       levels effectively engage ``--fast`` mode from the ``zstd`` CLI.
    :param dict_data:
       A ``ZstdCompressionDict`` to be used to compress with dictionary
        data.
    :param compression_params:
       A ``ZstdCompressionParameters`` instance defining low-level compression
       parameters. If defined, this will overwrite the ``level`` argument.
    :param write_checksum:
       If True, a 4 byte content checksum will be written with the compressed
       data, allowing the decompressor to perform content verification.
    :param write_content_size:
       If True (the default), the decompressed content size will be included
       in the header of the compressed data. This data will only be written if
       the compressor knows the size of the input data.
    :param write_dict_id:
       Determines whether the dictionary ID will be written into the compressed
       data. Defaults to True. Only adds content to the compressed data if
       a dictionary is being used.
    :param threads:
       Number of threads to use to compress data concurrently. When set,
       compression operations are performed on multiple threads. The default
       value (0) disables multi-threaded compression. A value of ``-1`` means
       to set the number of threads to the number of detected logical CPUs.
    TlnnnnnluZstdCompressor.__init__uZstdCompressor._setup_cctxuZstdCompressor.memory_sizeuZstdCompressor.compressacompressobjuZstdCompressor.compressobjachunkeruZstdCompressor.chunkeracopy_streamuZstdCompressor.copy_streamastream_readeruZstdCompressor.stream_readerastream_writeruZstdCompressor.stream_writeramulti_compress_to_bufferuZstdCompressor.multi_compress_to_bufferaframe_progressionuZstdCompressor.frame_progressionuInformation about a zstd frame.

    Instances have the following attributes:

    ``content_size``
       Integer size of original, uncompressed content. This will be ``0`` if the
       original content size isn't written to the frame (controlled with the
       ``write_content_size`` argument to ``ZstdCompressor``) or if the input
       content size was ``0``.

    ``window_size``
       Integer size of maximum back-reference distance in compressed data.

    ``dict_id``
       Integer of dictionary ID used for compression. ``0`` if no dictionary
       ID was used or if the dictionary ID was ``0``.

    ``has_checksum``
       Bool indicating whether a 4 byte content checksum is stored at the end
       of the frame.
    uFrameParameters.__init__aframe_content_sizeaframe_header_sizeaget_frame_parametersuRepresents a computed compression dictionary.

    Instances are obtained by calling :py:func:`train_dictionary` or by
    passing bytes obtained from another source into the constructor.

    Instances can be constructed from bytes:

    >>> dict_data = zstandard.ZstdCompressionDict(data)

    It is possible to construct a dictionary from *any* data. If the data
    doesn't begin with a magic header, it will be treated as a *prefix*
    dictionary. *Prefix* dictionaries allow compression operations to
    reference raw data within the dictionary.

    It is possible to force the use of *prefix* dictionaries or to require
    a dictionary header:

    >>> dict_data = zstandard.ZstdCompressionDict(data, dict_type=zstandard.DICT_TYPE_RAWCONTENT)
    >>> dict_data = zstandard.ZstdCompressionDict(data, dict_type=zstandard.DICT_TYPE_FULLDICT)

    You can see how many bytes are in the dictionary by calling ``len()``:

    >>> dict_data = zstandard.train_dictionary(size, samples)
    >>> dict_size = len(dict_data)  # will not be larger than ``size``

    Once you have a dictionary, you can pass it to the objects performing
    compression and decompression:

    >>> dict_data = zstandard.train_dictionary(131072, samples)
    >>> cctx = zstandard.ZstdCompressor(dict_data=dict_data)
    >>> for source_data in input_data:
    ...     compressed = cctx.compress(source_data)
    ...     # Do something with compressed data.
    ...
    >>> dctx = zstandard.ZstdDecompressor(dict_data=dict_data)
    >>> for compressed_data in input_data:
    ...     buffer = io.BytesIO()
    ...     with dctx.stream_writer(buffer) as decompressor:
    ...         decompressor.write(compressed_data)
    ...         # Do something with raw data in ``buffer``.

    Dictionaries have unique integer IDs. You can retrieve this ID via:

    >>> dict_id = zstandard.dictionary_id(dict_data)

    You can obtain the raw data in the dict (useful for persisting and constructing
    a ``ZstdCompressionDict`` later) via ``as_bytes()``:

    >>> dict_data = zstandard.train_dictionary(size, samples)
    >>> raw_data = dict_data.as_bytes()

    By default, when a ``ZstdCompressionDict`` is *attached* to a
    ``ZstdCompressor``, each ``ZstdCompressor`` performs work to prepare the
    dictionary for use. This is fine if only 1 compression operation is being
    performed or if the ``ZstdCompressor`` is being reused for multiple operations.
    But if multiple ``ZstdCompressor`` instances are being used with the dictionary,
    this can add overhead.

    It is possible to *precompute* the dictionary so it can readily be consumed
    by multiple ``ZstdCompressor`` instances:

    >>> d = zstandard.ZstdCompressionDict(data)
    >>> # Precompute for compression level 3.
    >>> d.precompute_compress(level=3)
    >>> # Precompute with specific compression parameters.
    >>> params = zstandard.ZstdCompressionParameters(...)
    >>> d.precompute_compress(compression_params=params)

    .. note::

       When a dictionary is precomputed, the compression parameters used to
       precompute the dictionary overwrite some of the compression parameters
       specified to ``ZstdCompressor``.

    :param data:
       Dictionary data.
    :param dict_type:
       Type of dictionary. One of the ``DICT_TYPE_*`` constants.
    uZstdCompressionDict.__init__uZstdCompressionDict.__len__uZstdCompressionDict.dict_iduZstdCompressionDict.as_bytesTlnaprecompute_compressuZstdCompressionDict.precompute_compressuZstdCompressionDict._ddictT
lppZlpppppatrain_dictionaryuA standard library API compatible decompressor.

    This type implements a compressor that conforms to the API by other
    decompressors in Python's standard library. e.g. ``zlib.decompressobj``
    or ``bz2.BZ2Decompressor``. This allows callers to use zstd compression
    while conforming to a similar API.

    Compressed data chunks are fed into ``decompress(data)`` and
    uncompressed output (or an empty bytes) is returned. Output from
    subsequent calls needs to be concatenated to reassemble the full
    decompressed byte sequence.

    If ``read_across_frames=False``, each instance is single use: once an
    input frame is decoded, ``decompress()`` will raise an exception. If
    ``read_across_frames=True``, instances can decode multiple frames.

    >>> dctx = zstandard.ZstdDecompressor()
    >>> dobj = dctx.decompressobj()
    >>> data = dobj.decompress(compressed_chunk_0)
    >>> data = dobj.decompress(compressed_chunk_1)

    By default, calls to ``decompress()`` write output data in chunks of size
    ``DECOMPRESSION_RECOMMENDED_OUTPUT_SIZE``. These chunks are concatenated
    before being returned to the caller. It is possible to define the size of
    these temporary chunks by passing ``write_size`` to ``decompressobj()``:

    >>> dctx = zstandard.ZstdDecompressor()
    >>> dobj = dctx.decompressobj(write_size=1048576)

    .. note::

       Because calls to ``decompress()`` may need to perform multiple
       memory (re)allocations, this streaming decompression API isn't as
       efficient as other APIs.
    uZstdDecompressionObj.__init__adecompressuZstdDecompressionObj.decompressTluEffectively a no-op.

        Implemented for compatibility with the standard library APIs.

        Safe to call at any time.

        :return:
           Empty bytes.
        uZstdDecompressionObj.flushaunused_datauZstdDecompressionObj.unused_datauData that has not yet been fed into the decompressor.aunconsumed_tailuZstdDecompressionObj.unconsumed_tailaeofuZstdDecompressionObj.eofuRead only decompressor that pull uncompressed data from another stream.

    This type provides a read-only stream interface for performing transparent
    decompression from another stream or data source. It conforms to the
    ``io.RawIOBase`` interface. Only methods relevant to reading are
    implemented.

    >>> with open(path, 'rb') as fh:
    >>> dctx = zstandard.ZstdDecompressor()
    >>> reader = dctx.stream_reader(fh)
    >>> while True:
    ...     chunk = reader.read(16384)
    ...     if not chunk:
    ...         break
    ...     # Do something with decompressed chunk.

    The stream can also be used as a context manager:

    >>> with open(path, 'rb') as fh:
    ...     dctx = zstandard.ZstdDecompressor()
    ...     with dctx.stream_reader(fh) as reader:
    ...         ...

    When used as a context manager, the stream is closed and the underlying
    resources are released when the context manager exits. Future operations
    against the stream will fail.

    The ``source`` argument to ``stream_reader()`` can be any object with a
    ``read(size)`` method or any object implementing the *buffer protocol*.

    If the ``source`` is a stream, you can specify how large ``read()`` requests
    to that stream should be via the ``read_size`` argument. It defaults to
    ``zstandard.DECOMPRESSION_RECOMMENDED_INPUT_SIZE``.:

    >>> with open(path, 'rb') as fh:
    ...     dctx = zstandard.ZstdDecompressor()
    ...     # Will perform fh.read(8192) when obtaining data for the decompressor.
    ...     with dctx.stream_reader(fh, read_size=8192) as reader:
    ...         ...

    Instances are *partially* seekable. Absolute and relative positions
    (``SEEK_SET`` and ``SEEK_CUR``) forward of the current position are
    allowed. Offsets behind the current read position and offsets relative
    to the end of stream are not allowed and will raise ``ValueError``
    if attempted.

    ``tell()`` returns the number of decompressed bytes read so far.

    Not all I/O methods are implemented. Notably missing is support for
    ``readline()``, ``readlines()``, and linewise iteration support. This is
    because streams operate on binary data - not text data. If you want to
    convert decompressed output to text, you can chain an ``io.TextIOWrapper``
    to the stream:

    >>> with open(path, 'rb') as fh:
    ...     dctx = zstandard.ZstdDecompressor()
    ...     stream_reader = dctx.stream_reader(fh)
    ...     text_stream = io.TextIOWrapper(stream_reader, encoding='utf-8')
    ...     for line in text_stream:
    ...         ...
    uZstdDecompressionReader.__init__uZstdDecompressionReader.__enter__uZstdDecompressionReader.__exit__uZstdDecompressionReader.readableuZstdDecompressionReader.writableuZstdDecompressionReader.seekableuZstdDecompressionReader.readlineuZstdDecompressionReader.readlinesuZstdDecompressionReader.writeuZstdDecompressionReader.writelinesuZstdDecompressionReader.isattyuZstdDecompressionReader.flushuZstdDecompressionReader.closeuZstdDecompressionReader.closeduZstdDecompressionReader.telluZstdDecompressionReader.readalluZstdDecompressionReader.__iter__uZstdDecompressionReader.__next__uZstdDecompressionReader._read_inputuZstdDecompressionReader._decompress_into_bufferuZstdDecompressionReader.readuZstdDecompressionReader.readintouZstdDecompressionReader.read1uZstdDecompressionReader.readinto1uZstdDecompressionReader.seeku
    Write-only stream wrapper that performs decompression.

    This type provides a writable stream that performs decompression and writes
    decompressed data to another stream.

    This type implements the ``io.RawIOBase`` interface. Only methods that
    involve writing will do useful things.

    Behavior is similar to :py:meth:`ZstdCompressor.stream_writer`: compressed
    data is sent to the decompressor by calling ``write(data)`` and decompressed
    output is written to the inner stream by calling its ``write(data)``
    method:

    >>> dctx = zstandard.ZstdDecompressor()
    >>> decompressor = dctx.stream_writer(fh)
    >>> # Will call fh.write() with uncompressed data.
    >>> decompressor.write(compressed_data)

    Instances can be used as context managers. However, context managers add no
    extra special behavior other than automatically calling ``close()`` when
    they exit.

    Calling ``close()`` will mark the stream as closed and subsequent I/O
    operations will raise ``ValueError`` (per the documented behavior of
    ``io.RawIOBase``). ``close()`` will also call ``close()`` on the
    underlying stream if such a method exists and the instance was created with
    ``closefd=True``.

    The size of chunks to ``write()`` to the destination can be specified:

    >>> dctx = zstandard.ZstdDecompressor()
    >>> with dctx.stream_writer(fh, write_size=16384) as decompressor:
    >>>    pass

    You can see how much memory is being used by the decompressor:

    >>> dctx = zstandard.ZstdDecompressor()
    >>> with dctx.stream_writer(fh) as decompressor:
    >>>    byte_size = decompressor.memory_size()

    ``stream_writer()`` accepts a ``write_return_read`` boolean argument to control
    the return value of ``write()``. When ``True`` (the default)``, ``write()``
    returns the number of bytes that were read from the input. When ``False``,
    ``write()`` returns the number of bytes that were ``write()`` to the inner
    stream.
    uZstdDecompressionWriter.__init__uZstdDecompressionWriter.__enter__uZstdDecompressionWriter.__exit__uZstdDecompressionWriter.__iter__uZstdDecompressionWriter.__next__uZstdDecompressionWriter.memory_sizeuZstdDecompressionWriter.closeuZstdDecompressionWriter.closeduZstdDecompressionWriter.filenouZstdDecompressionWriter.flushuZstdDecompressionWriter.isattyuZstdDecompressionWriter.readableuZstdDecompressionWriter.readlineuZstdDecompressionWriter.readlinesuZstdDecompressionWriter.seekuZstdDecompressionWriter.seekableuZstdDecompressionWriter.telluZstdDecompressionWriter.truncateuZstdDecompressionWriter.writableuZstdDecompressionWriter.writelinesuZstdDecompressionWriter.readuZstdDecompressionWriter.readalluZstdDecompressionWriter.readintouZstdDecompressionWriter.writeaZstdDecompressoru
    Context for performing zstandard decompression.

    Each instance is essentially a wrapper around a ``ZSTD_DCtx`` from zstd's
    C API.

    An instance can compress data various ways. Instances can be used multiple
    times.

    The interface of this class is very similar to
    :py:class:`zstandard.ZstdCompressor` (by design).

    Assume that each ``ZstdDecompressor`` instance can only handle a single
    logical compression operation at the same time. i.e. if you call a method
    like ``decompressobj()`` to obtain multiple objects derived from the same
    ``ZstdDecompressor`` instance and attempt to use them simultaneously, errors
    will likely occur.

    If you need to perform multiple logical decompression operations and you
    can't guarantee those operations are temporally non-overlapping, you need
    to obtain multiple ``ZstdDecompressor`` instances.

    Unless specified otherwise, assume that no two methods of
    ``ZstdDecompressor`` instances can be called from multiple Python
    threads simultaneously. In other words, assume instances are not thread safe
    unless stated otherwise.

    :param dict_data:
       Compression dictionary to use.
    :param max_window_size:
       Sets an upper limit on the window size for decompression operations in
       kibibytes. This setting can be used to prevent large memory allocations
       for inputs using large compression windows.
    :param format:
       Set the format of data for the decoder.

       By default this is ``zstandard.FORMAT_ZSTD1``. It can be set to
       ``zstandard.FORMAT_ZSTD1_MAGICLESS`` to allow decoding frames without
       the 4 byte magic header. Not all decompression APIs support this mode.
    uZstdDecompressor.__init__uZstdDecompressor.memory_sizeTlFtuZstdDecompressor.decompressuZstdDecompressor.stream_readeradecompressobjuZstdDecompressor.decompressobjuZstdDecompressor.stream_writeruZstdDecompressor.copy_streamadecompress_content_dict_chainuZstdDecompressor.decompress_content_dict_chainTnlamulti_decompress_to_bufferuZstdDecompressor.multi_decompress_to_bufferuZstdDecompressor._ensure_dctxuzstandard\backend_cffi.pyu<module zstandard.backend_cffi>Ta__class__TaselfTaselfaexc_typeaexc_valueaexc_tbTaselfwiTaselfacompressorachunk_sizeTaselfacompressorasourcearead_sizeaclosefdTaselfacompressorawriterasource_sizeawrite_sizeawrite_return_readaclosefdazresultTaselfadataadict_typewkwdTaselfadecompressorasourcearead_sizearead_across_framesaclosefdTaselfadecompressorawrite_sizearead_across_framesTaselfadecompressorawriterawrite_sizeawrite_return_readaclosefdTaselfadict_dataamax_window_sizeaformatadctxTaselfaformatacompression_levelawindow_logahash_logachain_logasearch_logamin_matchatarget_lengthastrategyawrite_content_sizeawrite_checksumawrite_dict_idajob_sizeaoverlap_logaforce_max_windowaenable_ldmaldm_hash_logaldm_min_matchaldm_bucket_size_logaldm_hash_rate_logathreadsaparamsTaselfafparamsT
aselfaleveladict_dataacompression_paramsawrite_checksumawrite_content_sizeawrite_dict_idathreadsaparamsacctxTaselfaout_bufferaold_posazresultTaselfaddictTaselfaout_bufferazresultTaselfaload_dictazresultTaparamsaparamaresultazresultTaparamsaresaattrsaparamavalueTaselfadataTaparamsaparamavalueazresultTaselfazresultadict_dataTazresultTaselfasizeachunk_sizeazresultTaselfwfTaselfadataadata_bufferadest_sizeaoutazresultaout_bufferain_bufferTaselfadataadata_bufferasourceachunksazresultTaselfadataadata_bufferazresultTaselfasizeazresultacobjT
aselfaifhaofharead_sizeawrite_sizeain_bufferaout_bufferadst_bufferatotal_readatotal_writeadataadata_bufferazresultTaselfaifhaofhasizearead_sizeawrite_sizeazresultain_bufferaout_bufferadst_bufferatotal_readatotal_writeadataadata_bufferTaselfadataain_bufferaout_bufferadata_bufferadst_bufferachunksazresultT
aselfadataamax_output_sizearead_across_framesaallow_extra_dataadata_bufferaoutput_sizearesult_bufferaresult_sizeaout_bufferain_bufferazresultacountTaselfaframesachunkachunk_bufferaparamsazresultalast_bufferaout_bufferain_bufferwiadest_bufferTaselfawrite_sizearead_across_framesTaselfazresultTaselfaflush_modeaflushatotal_writeaout_bufferain_bufferazresultwfTaselfaflush_modeaz_flush_modeain_bufferachunksazresultTaselfalengthTadataadata_bufferasizeTadataadata_bufferazresultTaselfaprogressionTalevelasource_sizeadict_sizeakwargsaparamsaargsaargaattrTadataaparamsadata_bufferazresultTaselfadataathreadsTaselfaframesadecompressed_sizesathreadsTaselfalevelacompression_paramsacparamsacdictTaselfasizeTaselfasizeadst_bufferaout_bufferTaselfasizeadst_bufferaout_bufferaold_posazresultTaselfareaderaread_sizeawrite_sizeaskip_bytesahave_readabuffer_offsetasizeain_bufferaout_bufferadst_bufferaread_resultaremainingaslice_sizearead_bufferazresultadataTaselfareaderasizearead_sizeawrite_sizeahave_readabuffer_offsetazresultain_bufferaout_bufferadst_bufferaread_resultaremainingaslice_sizearead_bufferadataTaselfachunksachunkTaselfwbTaselfwbadest_bufferaout_bufferTaselfwbadest_bufferaout_bufferaold_posazresultTaselfahintTaselfaoffsetawhenceTaselfaposawhencearead_amountaresultTaselfasourcearead_sizearead_across_framesaclosefdTaselfasourceasizearead_sizeaclosefdazresultTaselfawriterasizeawrite_sizeawrite_return_readaclosefdTaselfawriterawrite_sizeawrite_return_readaclosefdTadict_sizeasampleswkwdwfasplit_pointaaccelanotificationsadict_idalevelastepsathreadsatotal_sizeasamples_bufferasample_sizesaoffsetwiasamplewladict_dataadparamsazresultamsgTaselfadataatotal_writeadata_bufferain_bufferaout_bufferazresultTaselfadataatotal_writeain_bufferaout_bufferadata_bufferadst_bufferadctxazresultTaselfaignoredTaselfalinesu.zstandard2eareplaceTwtuTwrarbaZstdDecompressorwrarbTwwawbwaaabwxaxbaZstdCompressorwwaendswithTwbwbaValueErroruInvalid mode: {!r}ahasattraosaPathLikeastrabytesaisinstancearaw_open_modeareadawriteaboolaTypeErrorTufilename must be a str, bytes, file or PathLike objectastream_readerTaclosefdastream_writeraRuntimeErrorTulogic error in zstandard.open() handling open modeanormalized_modeaioaTextIOWrapperTaencodingaerrorsanewlineuCreate a file object with zstd (de)compression.

    The object returned from this function will be a
    :py:class:`ZstdDecompressionReader` if opened for reading in binary mode,
    a :py:class:`ZstdCompressionWriter` if opened for writing in binary mode,
    or an ``io.TextIOWrapper`` if opened for reading or writing in text mode.

    :param filename:
       ``bytes``, ``str``, or ``os.PathLike`` defining a file to open or a
       file object (with a ``read()`` or ``write()`` method).
    :param mode:
       ``str`` File open mode. Accepts any of the open modes recognized by
       ``open()``.
    :param cctx:
       ``ZstdCompressor`` to use for compression. If not specified and file
       is opened for writing, the default ``ZstdCompressor`` will be used.
    :param dctx:
       ``ZstdDecompressor`` to use for decompression. If not specified and file
       is opened for reading, the default ``ZstdDecompressor`` will be used.
    :param encoding:
        ``str`` that defines text encoding to use when file is opened in text
        mode.
    :param errors:
       ``str`` defining text encoding error handling mode.
    :param newline:
       ``str`` defining newline to use in text mode.
    :param closefd:
       ``bool`` whether to close the file when the returned object is closed.
        Only used if a file object is passed. If a filename is specified, the
        opened file is always closed when the returned object is closed.
    TalevelacompressuCompress source data using the zstd compression format.

    This performs one-shot compression using basic/default compression
    settings.

    This method is provided for convenience and is equivalent to calling
    ``ZstdCompressor(level=level).compress(data)``.

    If you find yourself calling this function in a tight loop,
    performance will be greater if you construct a single ``ZstdCompressor``
    and repeatedly call ``compress()`` on it.
    adecompressTamax_output_sizeuDecompress a zstd frame into its original data.

    This performs one-shot decompression using basic/default compression
    settings.

    This method is provided for convenience and is equivalent to calling
    ``ZstdDecompressor().decompress(data, max_output_size=max_output_size)``.

    If you find yourself calling this function in a tight loop, performance
    will be greater if you construct a single ``ZstdDecompressor`` and
    repeatedly call ``decompress()`` on it.
    uPython interface to the Zstandard (zstd) compression library.a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_zstandardu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aabsolute_importaunicode_literalsabuiltinsaplatformlaByteStringTaPYTHON_ZSTANDARD_IMPORT_POLICYadefaulta_module_policyadefaultapython_implementationTaCPythonabackend_cTw*lacextabackendTaPyPyabackend_cffiacffiaImportErroracffi_fallbackarustabackend_rustuunknown module import policy: %s; use default, cffi_fallback, cext, or cffiu0.22.0a__version__a_MODE_CLOSEDa_MODE_READla_MODE_WRITETarbnnnnnnaopenTladataalevelaintareturnTlamax_output_sizeuzstandard\__init__.pyu<module zstandard>TadataalevelacctxTadataamax_output_sizeadctxTafilenameamodeacctxadctxaencodingaerrorsanewlineaclosefdanormalized_modeaopen_modearaw_open_modeatypesainner_fhafhu.

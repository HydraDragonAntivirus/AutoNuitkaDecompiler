.Crypto.Cipher.AES]apopTause_aesnitTakeyuMissing 'key' parameterakey_sizeuIncorrect AES key length (%d bytes)a_raw_aesni_libaAESNI_start_operationaAESNI_stop_operationa_raw_aes_libaAES_start_operationaAES_stop_operationaVoidPointerac_uint8_ptrac_size_taaddress_ofuError %X while instantiating the AES cipheraSmartPointeragetuThis method instantiates and returns a handle to a low-level
    base cipher. It will absorb named parameters in the process.uPoly1305 with AES requires a 32-byte keyaget_random_bytesTluPoly1305 with AES requires a 16-byte nonceanew:nlnaMODE_ECBaencryptanonce:lnnuDerive a tuple (r, s, nonce) for a Poly1305 MAC.

    If nonce is ``None``, a new 16-byte nonce is generated.
    aadd_aes_modesa_create_cipheramodulesuCrypto.Cipher.AESuCreate a new AES cipher.

    Args:
      key(bytes/bytearray/memoryview):
        The secret key to use in the symmetric cipher.

        It must be 16 (*AES-128)*, 24 (*AES-192*) or 32 (*AES-256*) bytes long.

        For ``MODE_SIV`` only, it doubles to 32, 48, or 64 bytes.
      mode (a ``MODE_*`` constant):
        The chaining mode to use for encryption or decryption.
        If in doubt, use ``MODE_EAX``.

    Keyword Args:
      iv (bytes/bytearray/memoryview):
        (Only applicable for ``MODE_CBC``, ``MODE_CFB``, ``MODE_OFB``,
        and ``MODE_OPENPGP`` modes).

        The initialization vector to use for encryption or decryption.

        For ``MODE_CBC``, ``MODE_CFB``, and ``MODE_OFB`` it must be 16 bytes long.

        For ``MODE_OPENPGP`` mode only,
        it must be 16 bytes long for encryption
        and 18 bytes for decryption (in the latter case, it is
        actually the *encrypted* IV which was prefixed to the ciphertext).

        If not provided, a random byte string is generated (you must then
        read its value with the :attr:`iv` attribute).

      nonce (bytes/bytearray/memoryview):
        (Only applicable for ``MODE_CCM``, ``MODE_EAX``, ``MODE_GCM``,
        ``MODE_SIV``, ``MODE_OCB``, and ``MODE_CTR``).

        A value that must never be reused for any other encryption done
        with this key (except possibly for ``MODE_SIV``, see below).

        For ``MODE_EAX``, ``MODE_GCM`` and ``MODE_SIV`` there are no
        restrictions on its length (recommended: **16** bytes).

        For ``MODE_CCM``, its length must be in the range **[7..13]**.
        Bear in mind that with CCM there is a trade-off between nonce
        length and maximum message size. Recommendation: **11** bytes.

        For ``MODE_OCB``, its length must be in the range **[1..15]**
        (recommended: **15**).

        For ``MODE_CTR``, its length must be in the range **[0..15]**
        (recommended: **8**).

        For ``MODE_SIV``, the nonce is optional, if it is not specified,
        then no nonce is being used, which renders the encryption
        deterministic.

        If not provided, for modes other than ``MODE_SIV``, a random
        byte string of the recommended length is used (you must then
        read its value with the :attr:`nonce` attribute).

      segment_size (integer):
        (Only ``MODE_CFB``).The number of **bits** the plaintext and ciphertext
        are segmented in. It must be a multiple of 8.
        If not specified, it will be assumed to be 8.

      mac_len (integer):
        (Only ``MODE_EAX``, ``MODE_GCM``, ``MODE_OCB``, ``MODE_CCM``)
        Length of the authentication tag, in bytes.

        It must be even and in the range **[4..16]**.
        The recommended value (and the default, if not specified) is **16**.

      msg_len (integer):
        (Only ``MODE_CCM``). Length of the message to (de)cipher.
        If not specified, ``encrypt`` must be called with the entire message.
        Similarly, ``decrypt`` can only be called once.

      assoc_len (integer):
        (Only ``MODE_CCM``). Length of the associated data.
        If not specified, all associated data is buffered internally,
        which may represent a problem for very large messages.

      initial_value (integer or bytes/bytearray/memoryview):
        (Only ``MODE_CTR``).
        The initial value for the counter. If not present, the cipher will
        start counting from 0. The value is incremented by one for each block.
        The counter number is encoded in big endian mode.

      counter (object):
        (Only ``MODE_CTR``).
        Instance of ``Crypto.Util.Counter``, which allows full customization
        of the counter block. This parameter is incompatible to both ``nonce``
        and ``initial_value``.

      use_aesni: (boolean):
        Use Intel AES-NI hardware extensions (default: use if available).

    Returns:
        an AES object, of the applicable mode.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysuCrypto.CipherTa_create_cipherluCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointerac_size_tac_uint8_ptraload_pycryptodome_raw_libuCrypto.UtilTa_cpu_featuresa_cpu_featuresuCrypto.RandomTaget_random_bytesllaMODE_CBClaMODE_CFBlaMODE_OFBlaMODE_CTRlaMODE_OPENPGPlaMODE_CCMlaMODE_EAXl
aMODE_SIVlaMODE_GCMlaMODE_OCBu
        int AES_start_operation(const uint8_t key[],
                                size_t key_len,
                                void **pResult);
        int AES_encrypt(const void *state,
                        const uint8_t *in,
                        uint8_t *out,
                        size_t data_len);
        int AES_decrypt(const void *state,
                        const uint8_t *in,
                        uint8_t *out,
                        size_t data_len);
        int AES_stop_operation(void *state);
        a_cprotouCrypto.Cipher._raw_aesahave_aes_niuCrypto.Cipher._raw_aesniareplaceTaAESaAESNIa_create_base_ciphera_derive_Poly1305_key_pairlablock_sizeTlll uCrypto\Cipher\AES.pyu<module Crypto.Cipher.AES>Tadict_parametersause_aesniakeyastart_operationastop_operationacipheraresultTakeyanoncewsTakeyamodeaargsakwargsu.Crypto.Cipher._EKSBlowfish"5apopTakeyTasaltTacostuMissing EKSBlowfish parameter: Tainverttakey_sizeuIncorrect EKSBlowfish key length (%d bytes)a_raw_blowfish_libaEKSBlowfish_start_operationaEKSBlowfish_stop_operationaVoidPointerac_uint8_ptrac_size_tac_uintaaddress_ofuError %X while instantiating the EKSBlowfish cipheraSmartPointeragetuThis method instantiates and returns a smart pointer to
    a low-level base cipher. It will absorb named parameters in
    the process.asaltacostainverta_create_cipheramodulesuCrypto.Cipher._EKSBlowfishuCreate a new EKSBlowfish cipher

    Args:

      key (bytes, bytearray, memoryview):
        The secret key to use in the symmetric cipher.
        Its length can vary from 0 to 72 bytes.

      mode (one of the supported ``MODE_*`` constants):
        The chaining mode to use for encryption or decryption.

      salt (bytes, bytearray, memoryview):
        The salt that bcrypt uses to thwart rainbow table attacks

      cost (integer):
        The complexity factor in bcrypt

      invert (bool):
        If ``False``, in the inner loop use ``ExpandKey`` first over the salt
        and then over the key, as defined in
        the `original bcrypt specification <https://www.usenix.org/legacy/events/usenix99/provos/provos_html/node4.html>`_.
        If ``True``, reverse the order, as in the first implementation of
        `bcrypt` in OpenBSD.

    :Return: an EKSBlowfish object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysuCrypto.CipherTa_create_cipherluCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointerac_size_tac_uint8_ptrac_uintaload_pycryptodome_raw_libTuCrypto.Cipher._raw_eksblowfishu
        int EKSBlowfish_start_operation(const uint8_t key[],
                                        size_t key_len,
                                        const uint8_t salt[16],
                                        size_t salt_len,
                                        unsigned cost,
                                        unsigned invert,
                                        void **pResult);
        int EKSBlowfish_encrypt(const void *state,
                                const uint8_t *in,
                                uint8_t *out,
                                size_t data_len);
        int EKSBlowfish_decrypt(const void *state,
                                const uint8_t *in,
                                uint8_t *out,
                                size_t data_len);
        int EKSBlowfish_stop_operation(void *state);
        a_create_base_cipheranewlaMODE_ECBlablock_size;llIluCrypto\Cipher\_EKSBlowfish.pyu<module Crypto.Cipher._EKSBlowfish>T
adict_parametersakeyasaltacostweainvertastart_operationastop_operationavoid_paresultTakeyamodeasaltacostainvertakwargsu.Crypto.Cipher._mode_cbcZaVoidPointera_statearaw_cbc_libaCBC_start_operationagetac_uint8_ptrac_size_taaddress_ofuError %d while instantiating the CBC modeaSmartPointeraCBC_stop_operationareleaseablock_sizea_copy_bytesaivaIVaencryptadecrypta_nextuCreate a new block cipher, configured in CBC mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.

          iv : bytes/bytearray/memoryview
            The initialization vector to use for encryption or decryption.
            It is as long as the cipher block.

            **The IV must be unpredictable**. Ideally it is picked randomly.

            Reusing the *IV* for encryptions performed with the same key
            compromises confidentiality.
        uencrypt() cannot be called after decrypt()acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aCBC_encryptaplaintextluData must be padded to %d byte boundary in CBC modeuError %d while encrypting in CBC modeaget_raw_bufferuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        That also means that you cannot reuse an object for encrypting
        or decrypting other data with the same key.

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            Its lenght must be multiple of the cipher block size.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        udecrypt() cannot be called after encrypt()aCBC_decryptaciphertextuError %d while decrypting in CBC modeuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            Its length must be multiple of the cipher block size.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipherapopTaIVnTaivnTnnaget_random_bytesuYou must either use 'iv' or 'IV', not bothuIncorrect IV length (it must be %d bytes long)uUnknown parameters for CBC: %saCbcModeuInstantiate a cipher object that performs CBC encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Crypto.Cipher``.

    :Keywords:
      iv : bytes/bytearray/memoryview
        The IV to use for CBC.

      IV : bytes/bytearray/memoryview
        Alias for ``iv``.

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Ciphertext Block Chaining (CBC) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCrypto.Util.py3compatTa_copy_bytesluCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libuCrypto.RandomTaget_random_bytesTuCrypto.Cipher._raw_cbcu
                int CBC_start_operation(void *cipher,
                                        const uint8_t iv[],
                                        size_t iv_len,
                                        void **pResult);
                int CBC_encrypt(void *cbcState,
                                const uint8_t *in,
                                uint8_t *out,
                                size_t data_len);
                int CBC_decrypt(void *cbcState,
                                const uint8_t *in,
                                uint8_t *out,
                                size_t data_len);
                int CBC_stop_operation(void *state);
                TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_cbca__module__u*Cipher-Block Chaining (CBC)*.

    Each of the ciphertext blocks depends on the current
    and all previous plaintext blocks.

    An Initialization Vector (*IV*) is required.

    See `NIST SP800-38A`_ , Section 6.2 .

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uCbcMode.__init__TnuCbcMode.encryptuCbcMode.decrypta__orig_bases__a_create_cbc_cipheruCrypto\Cipher\_mode_cbc.pyu<module Crypto.Cipher._mode_cbc>Ta__class__Taselfablock_cipheraivaresultTafactoryakwargsacipher_stateaivaIVTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Crypto.Cipher._mode_ccm2aEnumuCrypto.Cipher._mode_ccmablock_sizea_copy_bytesanoncea_factorya_keya_mac_lena_msg_lena_assoc_lena_cipher_paramsa_mac_tagluCCM mode is only available for ciphers that operate on 128 bits blocksTllll
llluParameter 'mac_len' must be even and in the range 4..16 (not %d)uLength of parameter 'nonce' must be in the range 7..13 bytesanewaMODE_CBCDaivba_macaMacStatusaNOT_STARTEDa_mac_statusa_tLaupdateaencryptadecryptadigestaverifya_nextla_cumul_assoc_lena_cumul_msg_lena_cacheaMODE_CTRastructapackwBa_cipheraencryptTba_s_0a_start_macl@llalong_to_bytesclgclcainsertlaPROCESSING_AUTH_DATAa_updatedaupdateuupdate() can only be called immediately after initializationuAssociated data is too longuProtect associated data

        If there is any associated data, the caller has to invoke
        this function one or more times, before using
        ``decrypt`` or ``encrypt``.

        By *associated data* it is meant any data (e.g. packet headers) that
        will not be encrypted and will be transmitted in the clear.
        However, the receiver is still able to detect any modification to it.
        In CCM, the *associated data* is also called
        *additional authenticated data* (AAD).

        If there is no associated data, this method must not be called.

        The caller may split associated data in segments of any size, and
        invoke this method multiple times, each time with the next segment.

        :Parameters:
          assoc_data : bytes/bytearray/memoryview
            A piece of associated data. There are no restrictions on its size.
        ais_writeable_bufferaappendaassoc_data_ptamin:qnnuUpdate the MAC with associated data or plaintext
           (without FSM checks)uencrypt() can only be called after initialization or an update()adigestuAssociated data is too shortuMessage is too longa_pad_cache_and_updateaPROCESSING_PLAINTEXTTaoutputuEncrypt data with the key set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        This method can be called only **once** if ``msg_len`` was
        not passed at initialization.

        If ``msg_len`` was given, the data to encrypt can be broken
        up in two or more pieces and `encrypt` can be called
        multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext as ``bytes``.
          Otherwise, ``None``.
        adecryptudecrypt() can only be called after initialization or an update()averifyuDecrypt data with the key set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        This method can be called only **once** if ``msg_len`` was
        not passed at initialization.

        If ``msg_len`` was given, the data to decrypt can be
        broken up in two or more pieces and `decrypt` can be
        called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext as ``bytes``.
          Otherwise, ``None``.
        udigest() cannot be called when decrypting or validating a messagea_digestuCompute the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method returns the MAC that shall be sent to the receiver,
        together with the ciphertext.

        :Return: the MAC, as a byte string.
        uMessage is too shortastrxoruu%02xaborduCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        uverify() cannot be called when encrypting a messageaget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method checks if the decrypted message is indeed valid
        (that is, if the key is correct) and it has not been
        tampered with while in transit.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        uPerform encrypt() and digest() in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
            a tuple with two items:

            - the ciphertext, as ``bytes``
            - the MAC tag, as ``bytes``

            The first item becomes ``None`` when the ``output`` parameter
            specified a location for the result.
        uPerform decrypt() and verify() in one step.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return: the plaintext as ``bytes`` or ``None`` when the ``output``
            parameter specified a location for the result.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        akeyuMissing parameter: apopTanoncenTlamac_lenTamsg_lennTaassoc_lennaCcmModeuCreate a new block cipher, configured in CCM mode.

    :Parameters:
      factory : module
        A symmetric cipher module from `Crypto.Cipher` (like
        `Crypto.Cipher.AES`).

    :Keywords:
      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.

      nonce : bytes/bytearray/memoryview
        A value that must never be reused for any other encryption.

        Its length must be in the range ``[7..13]``.
        11 or 12 bytes are reasonable values in general. Bear in
        mind that with CCM there is a trade-off between nonce length and
        maximum message size.

        If not specified, a 11 byte long random string is used.

      mac_len : integer
        Length of the MAC, in bytes. It must be even and in
        the range ``[4..16]``. The default is 16.

      msg_len : integer
        Length of the message to (de)cipher.
        If not specified, ``encrypt`` or ``decrypt`` may only be called once.

      assoc_len : integer
        Length of the associated data.
        If not specified, all data is internally buffered.
    u
Counter with CBC-MAC (CCM) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__abinasciiTaunhexlifyuCrypto.Util.py3compatTabyte_stringaborda_copy_bytesabyte_stringuCrypto.Util._raw_apiTais_writeable_bufferuCrypto.Util.strxorTastrxoruCrypto.Util.numberTalong_to_bytesuCrypto.HashTaBLAKE2suCrypto.RandomTaget_random_bytesaenumTlllTaNOT_STARTEDaPROCESSING_AUTH_DATAaPROCESSING_PLAINTEXTTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>a__module__uCounter with CBC-MAC (CCM).

    This is an Authenticated Encryption with Associated Data (`AEAD`_) mode.
    It provides both confidentiality and authenticity.

    The header of the message may be left in the clear, if needed, and it will
    still be subject to authentication. The decryption step tells the receiver
    if the message comes from a source that really knowns the secret key.
    Additionally, decryption detects if any part of the message - including the
    header - has been modified or corrupted.

    This mode requires a nonce. The nonce shall never repeat for two
    different messages encrypted with the same key, but it does not need
    to be random.
    Note that there is a trade-off between the size of the nonce and the
    maximum size of a single message you can encrypt.

    It is important to use a large nonce if the key is reused across several
    messages and the nonce is chosen randomly.

    It is acceptable to us a short nonce if the key is only used a few times or
    if the nonce is taken from a counter.

    The following table shows the trade-off when the nonce is chosen at
    random. The column on the left shows how many messages it takes
    for the keystream to repeat **on average**. In practice, you will want to
    stop using the key way before that.

    +--------------------+---------------+-------------------+
    | Avg. # of messages |    nonce      |     Max. message  |
    | before keystream   |    size       |     size          |
    | repeats            |    (bytes)    |     (bytes)       |
    +====================+===============+===================+
    |       2^52         |      13       |        64K        |
    +--------------------+---------------+-------------------+
    |       2^48         |      12       |        16M        |
    +--------------------+---------------+-------------------+
    |       2^44         |      11       |         4G        |
    +--------------------+---------------+-------------------+
    |       2^40         |      10       |         1T        |
    +--------------------+---------------+-------------------+
    |       2^36         |       9       |        64P        |
    +--------------------+---------------+-------------------+
    |       2^32         |       8       |        16E        |
    +--------------------+---------------+-------------------+

    This mode is only available for ciphers that operate on 128 bits blocks
    (e.g. AES but not TDES).

    See `NIST SP800-38C`_ or RFC3610_.

    .. _`NIST SP800-38C`: http://csrc.nist.gov/publications/nistpubs/800-38C/SP800-38C.pdf
    .. _RFC3610: https://tools.ietf.org/html/rfc3610
    .. _AEAD: http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html

    :undocumented: __init__
    a__qualname__a__init__uCcmMode.__init__uCcmMode._start_macuCcmMode._pad_cache_and_updateuCcmMode.updateTcuCcmMode._updateTnuCcmMode.encryptuCcmMode.decryptuCcmMode.digestuCcmMode._digestahexdigestuCcmMode.hexdigestuCcmMode.verifyahexverifyuCcmMode.hexverifyaencrypt_and_digestuCcmMode.encrypt_and_digestadecrypt_and_verifyuCcmMode.decrypt_and_verifya__orig_bases__a_create_ccm_cipheruCrypto\Cipher\_mode_ccm.pyu<module Crypto.Cipher._mode_ccm>Ta__class__Taselfafactoryakeyanonceamac_lenamsg_lenaassoc_lenacipher_paramswqTafactoryakwargsakeyweanonceamac_lenamsg_lenaassoc_lenacipher_paramsTaselfTaselfalen_cacheTaselfwqaflagsab_0aassoc_len_encodedaenc_sizeafirst_data_to_macTaselfaassoc_data_ptafilleraupdate_lenTaselfaciphertextaoutputaplaintextTaselfaciphertextareceived_mac_tagaoutputaplaintextTaselfaplaintextaoutputTaenumsTaselfahex_mac_tagTaselfaassoc_dataTaselfareceived_mac_tagasecretamac1amac2.Crypto.Cipher._mode_cfbe\aVoidPointera_statearaw_cfb_libaCFB_start_operationagetac_uint8_ptrac_size_taaddress_ofuError %d while instantiating the CFB modeaSmartPointeraCFB_stop_operationareleaseablock_sizea_copy_bytesaivaIVaencryptadecrypta_nextuCreate a new block cipher, configured in CFB mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.

          iv : bytes/bytearray/memoryview
            The initialization vector to use for encryption or decryption.
            It is as long as the cipher block.

            **The IV must be unpredictable**. Ideally it is picked randomly.

            Reusing the *IV* for encryptions performed with the same key
            compromises confidentiality.

          segment_size : integer
            The number of bytes the plaintext and ciphertext are segmented in.
        uencrypt() cannot be called after decrypt()acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aCFB_encryptaplaintextuError %d while encrypting in CFB modeaget_raw_bufferuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        udecrypt() cannot be called after encrypt()aCFB_decryptaciphertextuError %d while decrypting in CFB modeuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipherapopTaIVnTaivnTnnaget_random_bytesuYou must either use 'iv' or 'IV', not bothuIncorrect IV length (it must be %d bytes long)Tasegment_sizellutoo many values to unpack (expected 2)lu'segment_size' must be positive and multiple of 8 bitsuUnknown parameters for CFB: %saCfbModeuInstantiate a cipher object that performs CFB encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Crypto.Cipher``.

    :Keywords:
      iv : bytes/bytearray/memoryview
        The IV to use for CFB.

      IV : bytes/bytearray/memoryview
        Alias for ``iv``.

      segment_size : integer
        The number of bit the plaintext and ciphertext are segmented in.
        If not present, the default is 8.

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Counter Feedback (CFB) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCrypto.Util.py3compatTa_copy_bytesuCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libuCrypto.RandomTaget_random_bytesTuCrypto.Cipher._raw_cfbu
                    int CFB_start_operation(void *cipher,
                                            const uint8_t iv[],
                                            size_t iv_len,
                                            size_t segment_len, /* In bytes */
                                            void **pResult);
                    int CFB_encrypt(void *cfbState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int CFB_decrypt(void *cfbState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int CFB_stop_operation(void *state);TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_cfba__module__u*Cipher FeedBack (CFB)*.

    This mode is similar to CFB, but it transforms
    the underlying block cipher into a stream cipher.

    Plaintext and ciphertext are processed in *segments*
    of **s** bits. The mode is therefore sometimes
    labelled **s**-bit CFB.

    An Initialization Vector (*IV*) is required.

    See `NIST SP800-38A`_ , Section 6.3.

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uCfbMode.__init__TnuCfbMode.encryptuCfbMode.decrypta__orig_bases__a_create_cfb_cipheruCrypto\Cipher\_mode_cfb.pyu<module Crypto.Cipher._mode_cfb>Ta__class__Taselfablock_cipheraivasegment_sizearesultTafactoryakwargsacipher_stateaivaIVasegment_size_bytesaremTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Crypto.Cipher._mode_ctr#ua_copy_bytesanonceaVoidPointera_statearaw_ctr_libaCTR_start_operationagetac_uint8_ptrac_size_taaddress_ofuError %X while instantiating the CTR modeaSmartPointeraCTR_stop_operationareleaseablock_sizeaencryptadecrypta_nextuCreate a new block cipher, configured in CTR mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.

          initial_counter_block : bytes/bytearray/memoryview
            The initial plaintext to use to generate the key stream.

            It is as large as the cipher block, and it embeds
            the initial value of the counter.

            This value must not be reused.
            It shall contain a nonce or a random component.
            Reusing the *initial counter block* for encryptions
            performed with the same key compromises confidentiality.

          prefix_len : integer
            The amount of bytes at the beginning of the counter block
            that never change.

          counter_len : integer
            The length in bytes of the counter embedded in the counter
            block.

          little_endian : boolean
            True if the counter in the counter block is an integer encoded
            in little endian mode. If False, it is big endian.
        uencrypt() cannot be called after decrypt()acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aCTR_encryptaplaintextluThe counter has wrapped around in CTR modeuError %X while encrypting in CTR modeaget_raw_bufferuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        udecrypt() cannot be called after encrypt()aCTR_decryptaciphertextuError %X while decrypting in CTR modeuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipherapopTacounternTanoncenTainitial_valuenuInvalid parameters for CTR mode: %sTnnu'counter' and 'nonce'/'initial_value' are mutually exclusiveluImpossible to create a safe nonce for short block sizesaget_random_bytesluNonce is too longlais_native_intlluInitial counter value is too largealong_to_bytesuIncorrect length for counter byte string (%d bytes, expected %d)aCtrModeacounter_lenaprefixasuffixainitial_valuealittle_endianuIncorrect counter object (use Crypto.Util.Counter.new)awordsastructapackwBldamaxareversecuSize of the counter block (%d bytes) must match block size (%d)uInstantiate a cipher object that performs CTR encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Crypto.Cipher``.

    :Keywords:
      nonce : bytes/bytearray/memoryview
        The fixed part at the beginning of the counter block - the rest is
        the counter number that gets increased when processing the next block.
        The nonce must be such that no two messages are encrypted under the
        same key and the same nonce.

        The nonce must be shorter than the block size (it can have
        zero length; the counter is then as long as the block).

        If this parameter is not present, a random nonce will be created with
        length equal to half the block size. No random nonce shorter than
        64 bits will be created though - you must really think through all
        security consequences of using such a short block size.

      initial_value : posive integer or bytes/bytearray/memoryview
        The initial value for the counter. If not present, the cipher will
        start counting from 0. The value is incremented by one for each block.
        The counter number is encoded in big endian mode.

      counter : object
        Instance of ``Crypto.Util.Counter``, which allows full customization
        of the counter block. This parameter is incompatible to both ``nonce``
        and ``initial_value``.

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Counter (CTR) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libuCrypto.RandomTaget_random_bytesuCrypto.Util.py3compatTa_copy_bytesais_native_intuCrypto.Util.numberTalong_to_bytesTuCrypto.Cipher._raw_ctru
                    int CTR_start_operation(void *cipher,
                                            uint8_t   initialCounterBlock[],
                                            size_t    initialCounterBlock_len,
                                            size_t    prefix_len,
                                            unsigned  counter_len,
                                            unsigned  littleEndian,
                                            void **pResult);
                    int CTR_encrypt(void *ctrState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int CTR_decrypt(void *ctrState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int CTR_stop_operation(void *ctrState);TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_ctra__module__u*CounTeR (CTR)* mode.

    This mode is very similar to ECB, in that
    encryption of one block is done independently of all other blocks.

    Unlike ECB, the block *position* contributes to the encryption
    and no information leaks about symbol frequency.

    Each message block is associated to a *counter* which
    must be unique across all messages that get encrypted
    with the same key (not just within the same message).
    The counter is as big as the block size.

    Counters can be generated in several ways. The most
    straightword one is to choose an *initial counter block*
    (which can be made public, similarly to the *IV* for the
    other modes) and increment its lowest **m** bits by one
    (modulo *2^m*) for each block. In most cases, **m** is
    chosen to be half the block size.

    See `NIST SP800-38A`_, Section 6.5 (for the mode) and
    Appendix B (for how to manage the *initial counter block*).

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uCtrMode.__init__TnuCtrMode.encryptuCtrMode.decrypta__orig_bases__a_create_ctr_cipheruCrypto\Cipher\_mode_ctr.pyu<module Crypto.Cipher._mode_ctr>Ta__class__Taselfablock_cipherainitial_counter_blockaprefix_lenacounter_lenalittle_endianaresultT
afactoryakwargsacipher_stateacounteranonceainitial_valueacounter_lenainitial_counter_blocka_counteraprefixasuffixalittle_endianawordsTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Crypto.Cipher._mode_eaxY%ablock_sizea_copy_bytesanoncea_mac_lena_mac_tagLaupdateaencryptadecryptadigestaverifya_nextlu'mac_len' must be at least 2 and not larger than %duNonce cannot be empty in EAX modeais_bufferunonce must be bytes, bytearray or memoryview;lllaCMACanewakeydaselflastructapackwBafactoryacipher_paramsTaciphermodacipher_paramsa_omaclaupdatea_signerabytes_to_longadigestaMODE_CTRainitial_valueca_cipheruEAX cipher modeuupdate() can only be called immediately after initializationuProtect associated data

        If there is any associated data, the caller has to invoke
        this function one or more times, before using
        ``decrypt`` or ``encrypt``.

        By *associated data* it is meant any data (e.g. packet headers) that
        will not be encrypted and will be transmitted in the clear.
        However, the receiver is still able to detect any modification to it.

        If there is no associated data, this method must not be called.

        The caller may split associated data in segments of any size, and
        invoke this method multiple times, each time with the next segment.

        :Parameters:
          assoc_data : bytes/bytearray/memoryview
            A piece of associated data. There are no restrictions on its size.
        aencryptuencrypt() can only be called after initialization or an update()TaoutputuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext as ``bytes``.
          Otherwise, ``None``.
        adecryptudecrypt() can only be called after initialization or an update()averifyuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext as ``bytes``.
          Otherwise, ``None``.
        udigest() cannot be called when decrypting or validating a messageastrxorataguCompute the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method returns the MAC that shall be sent to the receiver,
        together with the ciphertext.

        :Return: the MAC, as a byte string.
        uu%02xaborduCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        uverify() cannot be called when encrypting a messageaget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method checks if the decrypted message is indeed valid
        (that is, if the key is correct) and it has not been
        tampered with while in transit.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises MacMismatchError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises MacMismatchError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        uPerform encrypt() and digest() in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
            a tuple with two items:

            - the ciphertext, as ``bytes``
            - the MAC tag, as ``bytes``

            The first item becomes ``None`` when the ``output`` parameter
            specified a location for the result.
        uPerform decrypt() and verify() in one step.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return: the plaintext as ``bytes`` or ``None`` when the ``output``
            parameter specified a location for the result.
        :Raises MacMismatchError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        apopTanoncenamac_lenuMissing parameter: aEaxModeuCreate a new block cipher, configured in EAX mode.

    :Parameters:
      factory : module
        A symmetric cipher module from `Crypto.Cipher` (like
        `Crypto.Cipher.AES`).

    :Keywords:
      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.

      nonce : bytes/bytearray/memoryview
        A value that must never be reused for any other encryption.
        There are no restrictions on its length, but it is recommended to use
        at least 16 bytes.

        The nonce shall never repeat for two different messages encrypted with
        the same key, but it does not need to be random.

        If not specified, a 16 byte long random string is used.

      mac_len : integer
        Length of the MAC, in bytes. It must be no larger than the cipher
        block bytes (which is the default).
    u
EAX mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__abinasciiTaunhexlifyuCrypto.Util.py3compatTabyte_stringaborda_copy_bytesabyte_stringuCrypto.Util._raw_apiTais_bufferuCrypto.Util.strxorTastrxoruCrypto.Util.numberTalong_to_bytesabytes_to_longalong_to_bytesuCrypto.HashTaCMACaBLAKE2suCrypto.RandomTaget_random_bytesTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_eaxa__module__u*EAX* mode.

    This is an Authenticated Encryption with Associated Data
    (`AEAD`_) mode. It provides both confidentiality and authenticity.

    The header of the message may be left in the clear, if needed,
    and it will still be subject to authentication.

    The decryption step tells the receiver if the message comes
    from a source that really knowns the secret key.
    Additionally, decryption detects if any part of the message -
    including the header - has been modified or corrupted.

    This mode requires a *nonce*.

    This mode is only available for ciphers that operate on 64 or
    128 bits blocks.

    There are no official standards defining EAX.
    The implementation is based on `a proposal`__ that
    was presented to NIST.

    .. _AEAD: http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html
    .. __: http://csrc.nist.gov/groups/ST/toolkit/BCM/documents/proposedmodes/eax/eax-spec.pdf

    :undocumented: __init__
    a__qualname__a__init__uEaxMode.__init__uEaxMode.updateTnuEaxMode.encryptuEaxMode.decryptuEaxMode.digestahexdigestuEaxMode.hexdigestuEaxMode.verifyahexverifyuEaxMode.hexverifyaencrypt_and_digestuEaxMode.encrypt_and_digestadecrypt_and_verifyuEaxMode.decrypt_and_verifya__orig_bases__a_create_eax_cipheruCrypto\Cipher\_mode_eax.pyu<module Crypto.Cipher._mode_eax>Ta__class__Taselfafactoryakeyanonceamac_lenacipher_paramsacounter_intTafactoryakwargsakeyanonceamac_lenweTaselfaciphertextaoutputTaselfaciphertextareceived_mac_tagaoutputaptTaselfatagwiTaselfaplaintextaoutputactTaselfaplaintextaoutputTaselfTaselfahex_mac_tagTaselfaassoc_dataTaselfareceived_mac_tagatagwiasecretamac1amac2.Crypto.Cipher._mode_ecbIablock_sizeaVoidPointera_statearaw_ecb_libaECB_start_operationagetaaddress_ofuError %d while instantiating the ECB modeaSmartPointeraECB_stop_operationareleaseuCreate a new block cipher, configured in ECB mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.
        acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aECB_encryptac_uint8_ptraplaintextac_size_tluData must be aligned to block boundary in ECB modeuError %d while encrypting in ECB modeaget_raw_bufferuEncrypt data with the key set at initialization.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            The length must be multiple of the cipher block length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        aECB_decryptaciphertextuError %d while decrypting in ECB modeuDecrypt data with the key set at initialization.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            The length must be multiple of the cipher block length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipheruUnknown parameters for ECB: %saEcbModeuInstantiate a cipher object that performs ECB encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Crypto.Cipher``.

    All keywords are passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be presentu
Electronic Code Book (ECB) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferlaload_pycryptodome_raw_libTuCrypto.Cipher._raw_ecbu
                    int ECB_start_operation(void *cipher,
                                            void **pResult);
                    int ECB_encrypt(void *ecbState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int ECB_decrypt(void *ecbState,
                                    const uint8_t *in,
                                    uint8_t *out,
                                    size_t data_len);
                    int ECB_stop_operation(void *state);
                    TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_ecba__module__u*Electronic Code Book (ECB)*.

    This is the simplest encryption mode. Each of the plaintext blocks
    is directly encrypted into a ciphertext block, independently of
    any other block.

    This mode is dangerous because it exposes frequency of symbols
    in your plaintext. Other modes (e.g. *CBC*) should be used instead.

    See `NIST SP800-38A`_ , Section 6.1.

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uEcbMode.__init__TnaencryptuEcbMode.encryptadecryptuEcbMode.decrypta__orig_bases__a_create_ecb_cipheruCrypto\Cipher\_mode_ecb.pyu<module Crypto.Cipher._mode_ecb>Ta__class__Taselfablock_cipheraresultTafactoryakwargsacipher_stateTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Crypto.Cipher._mode_gcm/acollectionsTanamedtuplelanamedtupleTa_GHash_ImpTaghashaghash_expandaghash_destroyTaghashaghash_expandaghash_destroyw_apostfixa_ghash_api_templateareplaceTu%imp%aportableaload_pycryptodome_raw_libuCrypto.Hash._ghash_portablea_build_implaportablea_cpu_featuresahave_clmulTu%imp%aclmuluCrypto.Hash._ghash_clmulaclmuluReturn None if CLMUL implementation is not availableaghash_caVoidPointera_exp_keyaghash_expandac_uint8_ptraaddress_ofuError %d while expanding the GHASH keyaSmartPointeragetaghash_destroyacreate_string_bufferTla_last_ylaghashac_size_tuError %d while updating GHASHaget_raw_bufferaEnumuCrypto.Cipher._mode_gcmablock_sizeuGCM mode is only available for ciphers that operate on 128 bits blocksuNonce cannot be emptyais_bufferuNonce must be bytes, bytearray or memoryviewguNonce exceeds maximum lengtha_copy_bytesanoncea_factorya_keya_taga_mac_lenluParameter 'mac_len' must be in the range 4..16Laupdateaencryptadecryptadigestaverifya_nexta_no_more_assoc_dataa_auth_lena_msg_lenanewaMODE_ECBaencryptTbbdalong_to_bytesla_GHASHaupdateadigest:nlnabytes_to_longlgaMODE_CTRainitial_valuea_ciphera_signerca_tag_ciphera_cacheaMacStatusaPROCESSING_AUTH_DATAa_statusuupdate() can only be called immediately after initializationa_updateuAdditional Authenticated Data exceeds maximum lengthuProtect associated data

        If there is any associated data, the caller has to invoke
        this function one or more times, before using
        ``decrypt`` or ``encrypt``.

        By *associated data* it is meant any data (e.g. packet headers) that
        will not be encrypted and will be transmitted in the clear.
        However, the receiver is still able to detect any modification to it.
        In GCM, the *associated data* is also called
        *additional authenticated data* (AAD).

        If there is no associated data, this method must not be called.

        The caller may split associated data in segments of any size, and
        invoke this method multiple times, each time with the next segment.

        :Parameters:
          assoc_data : bytes/bytearray/memoryview
            A piece of associated data. There are no restrictions on its size.
        aminuencrypt() can only be called after initialization or an update()Taoutputa_pad_cache_and_updateaPROCESSING_CIPHERTEXTguPlaintext exceeds maximum lengthuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext as ``bytes``.
          Otherwise, ``None``.
        adecryptudecrypt() can only be called after initialization or an update()averifyuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext as ``bytes``.
          Otherwise, ``None``.
        udigest() cannot be called when decrypting or validating a messagea_compute_macuCompute the *binary* MAC tag in an AEAD mode.

        The caller invokes this function at the very end.

        This method returns the MAC that shall be sent to the receiver,
        together with the ciphertext.

        :Return: the MAC, as a byte string.
        uCompute MAC without any FSM checks.uu%02xaborduCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        uverify() cannot be called when encrypting a messageaget_random_bytesaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method checks if the decrypted message is indeed valid
        (that is, if the key is correct) and it has not been
        tampered with while in transit.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        uPerform encrypt() and digest() in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
            a tuple with two items:

            - the ciphertext, as ``bytes``
            - the MAC tag, as ``bytes``

            The first item becomes ``None`` when the ``output`` parameter
            specified a location for the result.
        uPerform decrypt() and verify() in one step.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
          received_mac_tag : byte string
            This is the *binary* MAC, as received from the sender.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return: the plaintext as ``bytes`` or ``None`` when the ``output``
            parameter specified a location for the result.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        akeyuMissing parameter:apopTanoncenTamac_lenlTause_clmulta_ghash_clmula_ghash_portableaGcmModeuCreate a new block cipher, configured in Galois Counter Mode (GCM).

    :Parameters:
      factory : module
        A block cipher module, taken from `Crypto.Cipher`.
        The cipher must have block length of 16 bytes.
        GCM has been only defined for `Crypto.Cipher.AES`.

    :Keywords:
      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.
        It must be 16 (e.g. *AES-128*), 24 (e.g. *AES-192*)
        or 32 (e.g. *AES-256*) bytes long.

      nonce : bytes/bytearray/memoryview
        A value that must never be reused for any other encryption.

        There are no restrictions on its length,
        but it is recommended to use at least 16 bytes.

        The nonce shall never repeat for two
        different messages encrypted with the same key,
        but it does not need to be random.

        If not provided, a 16 byte nonce will be randomly created.

      mac_len : integer
        Length of the MAC, in bytes.
        It must be no larger than 16 bytes (which is the default).
    u
Galois/Counter Mode (GCM).
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__abinasciiTaunhexlifyuCrypto.Util.py3compatTaborda_copy_bytesuCrypto.Util._raw_apiTais_bufferuCrypto.Util.numberTalong_to_bytesabytes_to_longuCrypto.HashTaBLAKE2suCrypto.RandomTaget_random_bytesTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptruCrypto.UtilTa_cpu_featuresu
    int ghash_%imp%(uint8_t y_out[16],
                    const uint8_t block_data[],
                    size_t len,
                    const uint8_t y_in[16],
                    const void *exp_key);
    int ghash_expand_%imp%(const uint8_t h[16],
                           void **ghash_tables);
    int ghash_destroy_%imp%(void *ghash_tables);
a_get_ghash_portablea_get_ghash_clmulTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>a__module__uGHASH function defined in NIST SP 800-38D, Algorithm 2.

    If X_1, X_2, .. X_m are the blocks of input data, the function
    computes:

       X_1*H^{m} + X_2*H^{m-1} + ... + X_m*H

    in the Galois field GF(2^256) using the reducing polynomial
    (x^128 + x^7 + x^2 + x + 1).
    a__qualname__a__init__u_GHASH.__init__u_GHASH.updateu_GHASH.digesta__orig_bases__aenumTllTaPROCESSING_AUTH_DATAaPROCESSING_CIPHERTEXTuGalois Counter Mode (GCM).

    This is an Authenticated Encryption with Associated Data (`AEAD`_) mode.
    It provides both confidentiality and authenticity.

    The header of the message may be left in the clear, if needed, and it will
    still be subject to authentication. The decryption step tells the receiver
    if the message comes from a source that really knowns the secret key.
    Additionally, decryption detects if any part of the message - including the
    header - has been modified or corrupted.

    This mode requires a *nonce*.

    This mode is only available for ciphers that operate on 128 bits blocks
    (e.g. AES but not TDES).

    See `NIST SP800-38D`_.

    .. _`NIST SP800-38D`: http://csrc.nist.gov/publications/nistpubs/800-38D/SP-800-38D.pdf
    .. _AEAD: http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html

    :undocumented: __init__
    uGcmMode.__init__uGcmMode.updateuGcmMode._updateuGcmMode._pad_cache_and_updateTnuGcmMode.encryptuGcmMode.decryptuGcmMode.digestuGcmMode._compute_macahexdigestuGcmMode.hexdigestuGcmMode.verifyahexverifyuGcmMode.hexverifyaencrypt_and_digestuGcmMode.encrypt_and_digestadecrypt_and_verifyuGcmMode.decrypt_and_verifya_create_gcm_cipheruCrypto\Cipher\_mode_gcm.pyu<module Crypto.Cipher._mode_gcm>Ta__class__T
aselfafactoryakeyanonceamac_lenacipher_paramsaghash_cahash_subkeyaj0afillaghash_inanonce_ctraiv_ctrTaselfasubkeyaghash_caresultTalibapostfixanamedtupleafuncsaGHASH_Impaimp_funcsaparamsTaselfas_tagTafactoryakwargsakeyweanonceamac_lenause_clmulaghash_cTaapialibaresultTaselfalen_cacheTaselfadataafilleraupdate_lenTaselfaciphertextaoutputTaselfaciphertextareceived_mac_tagaoutputaplaintextTaselfTaselfaplaintextaoutputaciphertextTaselfaplaintextaoutputTaenumsTaselfahex_mac_tagTaselfaassoc_dataTaselfablock_dataaresultTaselfareceived_mac_tagasecretamac1amac2.Crypto.Cipher._mode_ocbH*ablock_sizeluOCB mode is only available for ciphers that operate on 128 bits blocksa_copy_bytesanonce;llluNonce must be at most 15 bytes longais_bufferuNonce must be bytes, bytearray or memoryviewa_mac_lenluMAC tag must be between 8 and 16 bytes longa_mac_tagca_cache_Aa_cache_PLaupdateaencryptadecryptadigestaverifya_nextakeylabchrlddabordll?lanewaMODE_ECBaencryptastructapacku15sB:nlnastrxor:nln:llnalong_to_bytesabytes_to_longl@l:lnna_create_base_cipheruUnknown keywords: aVoidPointera_statea_raw_ocb_libaOCB_start_operationagetac_size_taaddress_ofuError %d while instantiating the OCB modeaSmartPointeraOCB_stop_operationareleaseaOCB_updateac_uint8_ptruError %d while computing MAC in OCB modeaupdateuupdate() can only be called immediately after initializationLaencryptadecryptadigestaverifyaupdateaminutoo many values to unpack (expected 2)a_updateuProcess the associated data.

        If there is any associated data, the caller has to invoke
        this method one or more times, before using
        ``decrypt`` or ``encrypt``.

        By *associated data* it is meant any data (e.g. packet headers) that
        will not be encrypted and will be transmitted in the clear.
        However, the receiver shall still able to detect modifications.

        If there is no associated data, this method must not be called.

        The caller may split associated data in segments of any size, and
        invoke this method multiple times, each time with the next segment.

        :Parameters:
          assoc_data : bytes/bytearray/memoryview
            A piece of associated data.
        acreate_string_bufferuError %d while %sing in OCB modeaget_raw_buffera_transcrypt_aligneduencrypt() can only be called after initialization or an update()adigesta_transcryptaOCB_encryptuEncrypt the next piece of plaintext.

        After the entire plaintext has been passed (but before `digest`),
        you **must** call this method one last time with no arguments to collect
        the final piece of ciphertext.

        If possible, use the method `encrypt_and_digest` instead.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The next piece of data to encrypt or ``None`` to signify
            that encryption has finished and that any remaining ciphertext
            has to be produced.
        :Return:
            the ciphertext, as a byte string.
            Its length may not match the length of the *plaintext*.
        adecryptudecrypt() can only be called after initialization or an update()averifyaOCB_decryptuDecrypt the next piece of ciphertext.

        After the entire ciphertext has been passed (but before `verify`),
        you **must** call this method one last time with no arguments to collect
        the remaining piece of plaintext.

        If possible, use the method `decrypt_and_verify` instead.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The next piece of data to decrypt or ``None`` to signify
            that decryption has finished and that any remaining plaintext
            has to be produced.
        :Return:
            the plaintext, as a byte string.
            Its length may not match the length of the *ciphertext*.
        TlaOCB_digestuError %d while computing digest in OCB modeudigest() cannot be called now for this ciphera_compute_mac_taguCompute the *binary* MAC tag.

        Call this method after the final `encrypt` (the one with no arguments)
        to obtain the MAC tag.

        The MAC tag is needed by the receiver to determine authenticity
        of the message.

        :Return: the MAC, as a byte string.
        uu%02xuCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        uverify() cannot be called now for this cipheraget_random_bytesaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        Call this method after the final `decrypt` (the one with no arguments)
        to check if the message is authentic and valid.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        uEncrypt the message and create the MAC tag in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The entire message to encrypt.
        :Return:
            a tuple with two byte strings:

            - the encrypted data
            - the MAC
        uDecrypted the message and verify its authenticity in one step.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The entire message to decrypt.
          received_mac_tag : byte string
            This is the *binary* MAC, as received from the sender.

        :Return: the decrypted data (byte string).
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        TlapopTamac_lenluKeyword missing: aOcbModeuCreate a new block cipher, configured in OCB mode.

    :Parameters:
      factory : module
        A symmetric cipher module from `Crypto.Cipher`
        (like `Crypto.Cipher.AES`).

    :Keywords:
      nonce : bytes/bytearray/memoryview
        A  value that must never be reused for any other encryption.
        Its length can vary from 1 to 15 bytes.
        If not specified, a random 15 bytes long nonce is generated.

      mac_len : integer
        Length of the MAC, in bytes.
        It must be in the range ``[8..16]``.
        The default is 16 (128 bits).

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Offset Codebook (OCB) mode.

OCB is Authenticated Encryption with Associated Data (AEAD) cipher mode
designed by Prof. Phillip Rogaway and specified in `RFC7253`_.

The algorithm provides both authenticity and privacy, it is very efficient,
it uses only one key and it can be used in online mode (so that encryption
or decryption can start before the end of the message is available).

This module implements the third and last variant of OCB (OCB3) and it only
works in combination with a 128-bit block symmetric cipher, like AES.

OCB is patented in US but `free licenses`_ exist for software implementations
meant for non-military purposes.

Example:
    >>> from Crypto.Cipher import AES
    >>> from Crypto.Random import get_random_bytes
    >>>
    >>> key = get_random_bytes(32)
    >>> cipher = AES.new(key, AES.MODE_OCB)
    >>> plaintext = b"Attack at dawn"
    >>> ciphertext, mac = cipher.encrypt_and_digest(plaintext)
    >>> # Deliver cipher.nonce, ciphertext and mac
    ...
    >>> cipher = AES.new(key, AES.MODE_OCB, nonce=nonce)
    >>> try:
    >>>     plaintext = cipher.decrypt_and_verify(ciphertext, mac)
    >>> except ValueError:
    >>>     print "Invalid message"
    >>> else:
    >>>     print plaintext

:undocumented: __package__

.. _RFC7253: http://www.rfc-editor.org/info/rfc7253
.. _free licenses: http://web.cs.ucdavis.edu/~rogaway/ocb/license.htm
a__doc__a__file__a__spec__aoriginahas_locationa__cached__labinasciiTaunhexlifyuCrypto.Util.py3compatTaborda_copy_bytesabchruCrypto.Util.numberTalong_to_bytesabytes_to_longuCrypto.Util.strxorTastrxoruCrypto.HashTaBLAKE2suCrypto.RandomTaget_random_bytesuCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_bufferaload_pycryptodome_raw_libTuCrypto.Cipher._raw_ocbu
                                    int OCB_start_operation(void *cipher,
                                        const uint8_t *offset_0,
                                        size_t offset_0_len,
                                        void **pState);
                                    int OCB_encrypt(void *state,
                                        const uint8_t *in,
                                        uint8_t *out,
                                        size_t data_len);
                                    int OCB_decrypt(void *state,
                                        const uint8_t *in,
                                        uint8_t *out,
                                        size_t data_len);
                                    int OCB_update(void *state,
                                        const uint8_t *in,
                                        size_t data_len);
                                    int OCB_digest(void *state,
                                        uint8_t *tag,
                                        size_t tag_len);
                                    int OCB_stop_operation(void *state);
                                    TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_ocba__module__uOffset Codebook (OCB) mode.

    :undocumented: __init__
    a__qualname__a__init__uOcbMode.__init__uOcbMode._updateuOcbMode.updateuOcbMode._transcrypt_aligneduOcbMode._transcryptTnuOcbMode.encryptuOcbMode.decryptuOcbMode._compute_mac_taguOcbMode.digestahexdigestuOcbMode.hexdigestuOcbMode.verifyahexverifyuOcbMode.hexverifyaencrypt_and_digestuOcbMode.encrypt_and_digestadecrypt_and_verifyuOcbMode.decrypt_and_verifya__orig_bases__a_create_ocb_cipheruCrypto\Cipher\_mode_ocb.pyu<module Crypto.Cipher._mode_ocb>Ta__class__Taselfafactoryanonceamac_lenacipher_paramsaparams_without_keyakeyataglen_mod128abottom_bitsatop_bitsaktop_cipheraktopastretchaoffset_0araw_cipheraresultTaselfamac_tagaresultTafactoryakwargsanonceamac_lenweTaselfain_dataatrans_funcatrans_descaout_dataaprefixafilleratrans_lenaresultTaselfain_dataain_data_lenatrans_funcatrans_descaout_dataaresultTaselfaassoc_dataaassoc_data_lenaresultTaselfaciphertextTaselfaciphertextareceived_mac_tagaplaintextTaselfTaselfaplaintextTaselfahex_mac_tagTaselfaassoc_dataafillerasegaupdate_lenTaselfareceived_mac_tagasecretamac1amac2.Crypto.Cipher._mode_ofbXaVoidPointera_statearaw_ofb_libaOFB_start_operationagetac_uint8_ptrac_size_taaddress_ofuError %d while instantiating the OFB modeaSmartPointeraOFB_stop_operationareleaseablock_sizea_copy_bytesaivaIVaencryptadecrypta_nextuCreate a new block cipher, configured in OFB mode.

        :Parameters:
          block_cipher : C pointer
            A smart pointer to the low-level block cipher instance.

          iv : bytes/bytearray/memoryview
            The initialization vector to use for encryption or decryption.
            It is as long as the cipher block.

            **The IV must be a nonce, to to be reused for any other
            message**. It shall be a nonce or a random value.

            Reusing the *IV* for encryptions performed with the same key
            compromises confidentiality.
        uencrypt() cannot be called after decrypt()acreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)aOFB_encryptaplaintextuError %d while encrypting in OFB modeaget_raw_bufferuEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
          If ``output`` is ``None``, the ciphertext is returned as ``bytes``.
          Otherwise, ``None``.
        udecrypt() cannot be called after encrypt()aOFB_decryptaciphertextuError %d while decrypting in OFB modeuDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext is written to.
            If ``None``, the plaintext is returned.
        :Return:
          If ``output`` is ``None``, the plaintext is returned as ``bytes``.
          Otherwise, ``None``.
        a_create_base_cipherapopTaIVnTaivnTnnaget_random_bytesuYou must either use 'iv' or 'IV', not bothuIncorrect IV length (it must be %d bytes long)uUnknown parameters for OFB: %saOfbModeuInstantiate a cipher object that performs OFB encryption/decryption.

    :Parameters:
      factory : module
        The underlying block cipher, a module from ``Crypto.Cipher``.

    :Keywords:
      iv : bytes/bytearray/memoryview
        The IV to use for OFB.

      IV : bytes/bytearray/memoryview
        Alias for ``iv``.

    Any other keyword will be passed to the underlying block cipher.
    See the relevant documentation for details (at least ``key`` will need
    to be present).
    u
Output Feedback (CFB) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCrypto.Util.py3compatTa_copy_bytesluCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeracreate_string_bufferaget_raw_bufferaSmartPointerac_size_tac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libuCrypto.RandomTaget_random_bytesTuCrypto.Cipher._raw_ofbu
                        int OFB_start_operation(void *cipher,
                                                const uint8_t iv[],
                                                size_t iv_len,
                                                void **pResult);
                        int OFB_encrypt(void *ofbState,
                                        const uint8_t *in,
                                        uint8_t *out,
                                        size_t data_len);
                        int OFB_decrypt(void *ofbState,
                                        const uint8_t *in,
                                        uint8_t *out,
                                        size_t data_len);
                        int OFB_stop_operation(void *state);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_ofba__module__u*Output FeedBack (OFB)*.

    This mode is very similar to CBC, but it
    transforms the underlying block cipher into a stream cipher.

    The keystream is the iterated block encryption of the
    previous ciphertext block.

    An Initialization Vector (*IV*) is required.

    See `NIST SP800-38A`_ , Section 6.4.

    .. _`NIST SP800-38A` : http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf

    :undocumented: __init__
    a__qualname__a__init__uOfbMode.__init__TnuOfbMode.encryptuOfbMode.decrypta__orig_bases__a_create_ofb_cipheruCrypto\Cipher\_mode_ofb.pyu<module Crypto.Cipher._mode_ofb>Ta__class__Taselfablock_cipheraivaresultTafactoryakwargsacipher_stateaivaIVTaselfaciphertextaoutputaplaintextaresultTaselfaplaintextaoutputaciphertextaresultu.Crypto.Cipher._mode_openpgpBablock_sizea_done_first_blockanewaMODE_CFBaIVdasegment_sizela_copy_bytesaencrypt:qnna_encrypted_IVladecrypt:nqnuLength of IV must be %d or %d bytes for MODE_OPENPGPaiva_cipheruEncrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have encrypted a message
        you cannot encrypt (or decrypt) another message using the same
        object.

        The data to encrypt can be broken up in two or
        more pieces and `encrypt` can be called multiple times.

        That is, the statement:

            >>> c.encrypt(a) + c.encrypt(b)

        is equivalent to:

             >>> c.encrypt(a+b)

        This function does not add any padding to the plaintext.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.

        :Return:
            the encrypted data, as a byte string.
            It is as long as *plaintext* with one exception:
            when encrypting the first message chunk,
            the encypted IV is prepended to the returned ciphertext.
        uDecrypt data with the key and the parameters set at initialization.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        The data to decrypt can be broken up in two or
        more pieces and `decrypt` can be called multiple times.

        That is, the statement:

            >>> c.decrypt(a) + c.decrypt(b)

        is equivalent to:

             >>> c.decrypt(a+b)

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.

        :Return: the decrypted data (byte string).
        apopTaivnTnnaget_random_bytesuYou must either use 'iv' or 'IV', not bothTakeyuMissing component: aOpenPgpModeuCreate a new block cipher, configured in OpenPGP mode.

    :Parameters:
      factory : module
        The module.

    :Keywords:
      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.

      IV : bytes/bytearray/memoryview
        The initialization vector to use for encryption or decryption.

        For encryption, the IV must be as long as the cipher block size.

        For decryption, it must be 2 bytes longer (it is actually the
        *encrypted* IV which was prefixed to the ciphertext).
    u
OpenPGP mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__uCrypto.Util.py3compatTa_copy_bytesluCrypto.RandomTaget_random_bytesTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_openpgpa__module__uOpenPGP mode.

    This mode is a variant of CFB, and it is only used in PGP and
    OpenPGP_ applications. If in doubt, use another mode.

    An Initialization Vector (*IV*) is required.

    Unlike CFB, the *encrypted* IV (not the IV itself) is
    transmitted to the receiver.

    The IV is a random data block. For legacy reasons, two of its bytes are
    duplicated to act as a checksum for the correctness of the key, which is now
    known to be insecure and is ignored. The encrypted IV is therefore 2 bytes
    longer than the clean IV.

    .. _OpenPGP: http://tools.ietf.org/html/rfc4880

    :undocumented: __init__
    a__qualname__a__init__uOpenPgpMode.__init__uOpenPgpMode.encryptuOpenPgpMode.decrypta__orig_bases__a_create_openpgp_cipheruCrypto\Cipher\_mode_openpgp.pyu<module Crypto.Cipher._mode_openpgp>Ta__class__Taselfafactoryakeyaivacipher_paramsaIV_cipherTafactoryakwargsaivaIVakeyweTaselfaciphertextTaselfaplaintextaresu.Crypto.Cipher._mode_sivs$ablock_sizea_factorya_cipher_paramsTl l0l@uIncorrect key length (%d bytes)ais_bufferuWhen provided, the nonce must be bytes, bytearray or memoryviewuWhen provided, the nonce must be non-emptya_copy_bytesanoncela_mac_taga_S2VTaciphermodacipher_paramsa_kdfa_subkey_cipheranewaMODE_ECBLaupdateaencryptadecryptadigestaverifya_nextabytes_to_longgaMODE_CTRainitial_valuecuCreate a new CTR cipher from V in SIV modeaupdateuupdate() can only be called immediately after initializationuProtect one associated data component

        For SIV, the associated data is a sequence (*vector*) of non-empty
        byte strings (*components*).

        This method consumes the next component. It must be called
        once for each of the components that constitue the associated data.

        Note that the components have clear boundaries, so that:

            >>> cipher.update(b"builtin")
            >>> cipher.update(b"securely")

        is not equivalent to:

            >>> cipher.update(b"built")
            >>> cipher.update(b"insecurely")

        If there is no associated data, this method must not be called.

        :Parameters:
          component : bytes/bytearray/memoryview
            The next associated data component.
        uencrypt() not allowed for SIV mode. Use encrypt_and_digest() instead.u
        For SIV, encryption and MAC authentication must take place at the same
        point. This method shall not be used.

        Use `encrypt_and_digest` instead.
        udecrypt() not allowed for SIV mode. Use decrypt_and_verify() instead.u
        For SIV, decryption and verification must take place at the same
        point. This method shall not be used.

        Use `decrypt_and_verify` instead.
        adigestudigest() cannot be called when decrypting or validating a messageaderiveuCompute the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method returns the MAC that shall be sent to the receiver,
        together with the ciphertext.

        :Return: the MAC, as a byte string.
        uu%02xaborduCompute the *printable* MAC tag.

        This method is like `digest`.

        :Return: the MAC, as a hexadecimal string.
        averifyuverify() cannot be called when encrypting a messageaget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduValidate the *binary* MAC tag.

        The caller invokes this function at the very end.

        This method checks if the decrypted message is indeed valid
        (that is, if the key is correct) and it has not been
        tampered with while in transit.

        :Parameters:
          received_mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aunhexlifyuValidate the *printable* MAC tag.

        This method is like `verify`.

        :Parameters:
          hex_mac_tag : string
            This is the *printable* MAC, as received from the sender.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        aencryptuencrypt() can only be called after initialization or an update()a_create_ctr_cipherTaoutputuPerform encrypt() and digest() in one step.

        :Parameters:
          plaintext : bytes/bytearray/memoryview
            The piece of data to encrypt.
        :Keywords:
          output : bytearray/memoryview
            The location where the ciphertext must be written to.
            If ``None``, the ciphertext is returned.
        :Return:
            a tuple with two items:

            - the ciphertext, as ``bytes``
            - the MAC tag, as ``bytes``

            The first item becomes ``None`` when the ``output`` parameter
            specified a location for the result.
        adecryptudecrypt() can only be called after initialization or an update()a_cipheruPerform decryption and verification in one step.

        A cipher object is stateful: once you have decrypted a message
        you cannot decrypt (or encrypt) another message with the same
        object.

        You cannot reuse an object for encrypting
        or decrypting other data with the same key.

        This function does not remove any padding from the plaintext.

        :Parameters:
          ciphertext : bytes/bytearray/memoryview
            The piece of data to decrypt.
            It can be of any length.
          mac_tag : bytes/bytearray/memoryview
            This is the *binary* MAC, as received from the sender.
        :Keywords:
          output : bytearray/memoryview
            The location where the plaintext must be written to.
            If ``None``, the plaintext is returned.
        :Return: the plaintext as ``bytes`` or ``None`` when the ``output``
            parameter specified a location for the result.
        :Raises ValueError:
            if the MAC does not match. The message has been tampered with
            or the key is incorrect.
        akeyuMissing parameter: apopTanoncenaSivModeuCreate a new block cipher, configured in
    Synthetic Initializaton Vector (SIV) mode.

    :Parameters:

      factory : object
        A symmetric cipher module from `Crypto.Cipher`
        (like `Crypto.Cipher.AES`).

    :Keywords:

      key : bytes/bytearray/memoryview
        The secret key to use in the symmetric cipher.
        It must be 32, 48 or 64 bytes long.
        If AES is the chosen cipher, the variants *AES-128*,
        *AES-192* and or *AES-256* will be used internally.

      nonce : bytes/bytearray/memoryview
        For deterministic encryption, it is not present.

        Otherwise, it is a value that must never be reused
        for encrypting message under this key.

        There are no restrictions on its length,
        but it is recommended to use at least 16 bytes.
    u
Synthetic Initialization Vector (SIV) mode.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__all__abinasciiTahexlifyaunhexlifylahexlifyuCrypto.Util.py3compatTaborda_copy_bytesuCrypto.Util._raw_apiTais_bufferuCrypto.Util.numberTalong_to_bytesabytes_to_longalong_to_bytesuCrypto.Protocol.KDFTa_S2VuCrypto.HashTaBLAKE2suCrypto.RandomTaget_random_bytesTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Cipher._mode_siva__module__uSynthetic Initialization Vector (SIV).

    This is an Authenticated Encryption with Associated Data (`AEAD`_) mode.
    It provides both confidentiality and authenticity.

    The header of the message may be left in the clear, if needed, and it will
    still be subject to authentication. The decryption step tells the receiver
    if the message comes from a source that really knowns the secret key.
    Additionally, decryption detects if any part of the message - including the
    header - has been modified or corrupted.

    Unlike other AEAD modes such as CCM, EAX or GCM, accidental reuse of a
    nonce is not catastrophic for the confidentiality of the message. The only
    effect is that an attacker can tell when the same plaintext (and same
    associated data) is protected with the same key.

    The length of the MAC is fixed to the block size of the underlying cipher.
    The key size is twice the length of the key of the underlying cipher.

    This mode is only available for AES ciphers.

    +--------------------+---------------+-------------------+
    |      Cipher        | SIV MAC size  |   SIV key length  |
    |                    |    (bytes)    |     (bytes)       |
    +====================+===============+===================+
    |    AES-128         |      16       |        32         |
    +--------------------+---------------+-------------------+
    |    AES-192         |      16       |        48         |
    +--------------------+---------------+-------------------+
    |    AES-256         |      16       |        64         |
    +--------------------+---------------+-------------------+

    See `RFC5297`_ and the `original paper`__.

    .. _RFC5297: https://tools.ietf.org/html/rfc5297
    .. _AEAD: http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html
    .. __: http://www.cs.ucdavis.edu/~rogaway/papers/keywrap.pdf

    :undocumented: __init__
    a__qualname__a__init__uSivMode.__init__uSivMode._create_ctr_cipheruSivMode.updateuSivMode.encryptuSivMode.decryptuSivMode.digestahexdigestuSivMode.hexdigestuSivMode.verifyahexverifyuSivMode.hexverifyTnaencrypt_and_digestuSivMode.encrypt_and_digestadecrypt_and_verifyuSivMode.decrypt_and_verifya__orig_bases__a_create_siv_cipheruCrypto\Cipher\_mode_siv.pyu<module Crypto.Cipher._mode_siv>Ta__class__Taselfafactoryakeyanonceakwargsasubkey_sizeTaselfwvav_intwqTafactoryakwargsakeyweanonceTaselfaciphertextTaselfaciphertextamac_tagaoutputaplaintextTaselfTaselfaplaintextTaselfaplaintextaoutputacipherTaselfahex_mac_tagTaselfacomponentTaselfareceived_mac_tagasecretamac1amac2.Crypto.CipherOakeya_modesapopTaadd_aes_modesFa_extra_modesuMode not supportedTlll
lluToo many arguments for this modelanonceTllllaIVlluIV is not meaningful for the ECB modea__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptou\not_existingaCipherTaNUITKA_PACKAGE_Crypto_Cipheru\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aosuCrypto.Cipher._mode_ecbTa_create_ecb_ciphera_create_ecb_cipheruCrypto.Cipher._mode_cbcTa_create_cbc_ciphera_create_cbc_cipheruCrypto.Cipher._mode_cfbTa_create_cfb_ciphera_create_cfb_cipheruCrypto.Cipher._mode_ofbTa_create_ofb_ciphera_create_ofb_cipheruCrypto.Cipher._mode_ctrTa_create_ctr_ciphera_create_ctr_cipheruCrypto.Cipher._mode_openpgpTa_create_openpgp_ciphera_create_openpgp_cipheruCrypto.Cipher._mode_ccmTa_create_ccm_ciphera_create_ccm_cipheruCrypto.Cipher._mode_eaxTa_create_eax_ciphera_create_eax_cipheruCrypto.Cipher._mode_sivTa_create_siv_ciphera_create_siv_cipheruCrypto.Cipher._mode_gcmTa_create_gcm_ciphera_create_gcm_cipheruCrypto.Cipher._mode_ocbTa_create_ocb_ciphera_create_ocb_cipherlllllll
lla_create_cipheruCrypto\Cipher\__init__.pyu<module Crypto.Cipher>Tafactoryakeyamodeaargsakwargsamodesu.Crypto.Hash.BLAKE2s|sadigest_sizea_update_after_digesta_digest_doneTllll u1.3.6.1.4.1.1722.12.2.2.aoidaVoidPointera_raw_blake2s_libablake2s_initaaddress_ofac_uint8_ptrac_size_tuError %d while instantiating BLAKE2saSmartPointeragetablake2s_destroya_stateaupdateuYou can only call 'digest' or 'hexdigest' on this objectablake2s_updateuError %d while hashing BLAKE2s datauContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferTl ablake2s_digestuError %d while creating BLAKE2s digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aget_random_bytesTlanewlTadigest_bitsakeyadatauMAC check faileduVerify that a given **binary** MAC (computed by another party)
        is valid.

        Args:
          mac_tag (byte string/byte array/memoryview): the expected MAC of the message.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        averifyaunhexlifyatobytesuVerify that a given **printable** MAC (computed by another party)
        is valid.

        Args:
            hex_mac_tag (string): the expected MAC of the message, as a hexadecimal string.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        adigest_bytesadigest_bitsuReturn a new instance of a BLAKE2s hash object.
        See :func:`new`.
        adataapopTaupdate_after_digestFTadigest_bytesnTadigest_bitsnuOnly one digest parameter must be providedTnnl lu'digest_bytes' not in range 1..32llu'digest_bits' not in range 8..256, with steps of 8TakeycuBLAKE2s key cannot exceed 32 bytesuUnknown parameters: aBLAKE2s_HashuCreate a new hash object.

    Args:
        data (byte string/byte array/memoryview):
            Optional. The very first chunk of the message to hash.
            It is equivalent to an early call to :meth:`BLAKE2s_Hash.update`.
        digest_bytes (integer):
            Optional. The size of the digest, in bytes (1 to 32). Default is 32.
        digest_bits (integer):
            Optional and alternative to ``digest_bytes``.
            The size of the digest, in bits (8 to 256, in steps of 8).
            Default is 256.
        key (byte string):
            Optional. The key to use to compute the MAC (1 to 64 bytes).
            If not specified, no key will be used.
        update_after_digest (boolean):
            Optional. By default, a hash object cannot be updated anymore after
            the digest is computed. When this flag is ``True``, such check
            is no longer enforced.

    Returns:
        A :class:`BLAKE2s_Hash` hash object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__abinasciiTaunhexlifyluCrypto.Util.py3compatTabordatobytesuCrypto.RandomTaget_random_bytesuCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCrypto.Hash._BLAKE2su
                        int blake2s_init(void **state,
                                         const uint8_t *key,
                                         size_t key_size,
                                         size_t digest_size);
                        int blake2s_destroy(void *state);
                        int blake2s_update(void *state,
                                           const uint8_t *buf,
                                           size_t len);
                        int blake2s_digest(const void *state,
                                           uint8_t digest[32]);
                        int blake2s_copy(const void *src, void *dst);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.BLAKE2sa__module__uA BLAKE2s hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__ablock_sizea__init__uBLAKE2s_Hash.__init__uBLAKE2s_Hash.updateuBLAKE2s_Hash.digestahexdigestuBLAKE2s_Hash.hexdigestuBLAKE2s_Hash.verifyahexverifyuBLAKE2s_Hash.hexverifyuBLAKE2s_Hash.newa__orig_bases__uCrypto\Hash\BLAKE2s.pyu<module Crypto.Hash.BLAKE2s>Ta__class__Taselfadataakeyadigest_bytesaupdate_after_digestastatearesultTaselfabfraresultTaselfTaselfahex_mac_tagTaselfakwargsTakwargsadataaupdate_after_digestadigest_bytesadigest_bitsakeyTaselfadataaresultTaselfamac_tagasecretamac1amac2.Crypto.Hash.CMACabytes_to_longlalong_to_bytesadigest_sizea_copy_bytesa_keya_factorya_cipher_paramsablock_sizea_block_sizea_mac_taga_update_after_digestllla_max_sizellguCMAC requires a cipher with a block size of 8 or 16 bytes, not %ddanewaMODE_ECBa_ecbaencryptabordlla_shift_bytesa_k1a_k2aMODE_CBCa_cbca_cachea_cache_na_last_cta_last_pta_data_sizeaupdateuupdate() cannot be called after digest() or verify()amina_updateamsguAuthenticate the next chunk of message.

        Args:
            data (byte string/byte array/memoryview): The next chunk of data
        lastrxoruUpdate a block aligned to the block boundarya__new__aCMACacopy:nnnuReturn a copy ("clone") of the CMAC object.

        The copy will have the same internal state as the original CMAC
        object.
        This can be used to efficiently compute the MAC tag of byte
        strings that share a common initial substring.

        :return: An :class:`CMAC`
        uMAC is unsafe for this messageduReturn the **binary** (non-printable) MAC tag of the message
        that has been authenticated so far.

        :return: The MAC tag, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xuReturn the **printable** MAC tag of the message authenticated so far.

        :return: The MAC tag, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduVerify that a given **binary** MAC (computed by another party)
        is valid.

        Args:
          mac_tag (byte string/byte array/memoryview): the expected MAC of the message.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        averifyaunhexlifyatobytesuVerify that a given **printable** MAC (computed by another party)
        is valid.

        Args:
          hex_mac_tag (string): the expected MAC of the message, as a hexadecimal string.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        uciphermod must be specified (try AES)luMAC tag length must be at least 4 bytes longuMAC tag length cannot be larger than a cipher block (%d) bytesuCreate a new MAC object.

    Args:
        key (byte string/byte array/memoryview):
            key for the CMAC object.
            The key must be valid for the underlying cipher algorithm.
            For instance, it must be 16 bytes long for AES-128.
        ciphermod (module):
            A cipher module from :mod:`Crypto.Cipher`.
            The cipher's block size has to be 128 bits,
            like :mod:`Crypto.Cipher.AES`, to reduce the probability
            of collisions.
        msg (byte string/byte array/memoryview):
            Optional. The very first chunk of the message to authenticate.
            It is equivalent to an early call to `CMAC.update`. Optional.
        cipher_params (dict):
            Optional. A set of parameters to use when instantiating a cipher
            object.
        mac_len (integer):
            Length of the MAC, in bytes.
            It must be at least 4 bytes long.
            The default (and recommended) length matches the size of a cipher block.
        update_after_digest (boolean):
            Optional. By default, a hash object cannot be updated anymore after
            the digest is computed. When this flag is ``True``, such check
            is no longer enforced.
    Returns:
        A :class:`CMAC` object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__abinasciiTaunhexlifyuCrypto.HashTaBLAKE2suCrypto.Util.strxorTastrxoruCrypto.Util.numberTalong_to_bytesabytes_to_longuCrypto.Util.py3compatTabordatobytesa_copy_bytesuCrypto.RandomTaget_random_bytesTlTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.CMACa__module__uA CMAC hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar digest_size: the size in bytes of the resulting MAC tag
    :vartype digest_size: integer
    a__qualname__a__init__uCMAC.__init__uCMAC.updateuCMAC._updateuCMAC.copyuCMAC.digestahexdigestuCMAC.hexdigestuCMAC.verifyahexverifyuCMAC.hexverifya__orig_bases__TnnnnFuCrypto\Hash\CMAC.pyu<module Crypto.Hash.CMAC>Ta__class__Taselfakeyamsgaciphermodacipher_paramsamac_lenaupdate_after_digestabsaconst_Rbazero_blockwLTabsaxor_lsbanumTaselfadata_blockabsactasecond_lastTaselfaobjTaselfabsaptapartialTaselfTaselfahex_mac_tagTakeyamsgaciphermodacipher_paramsamac_lenaupdate_after_digestTaselfamsgabsafilleraremainTaselfamac_tagasecretamac1amac2.Crypto.Hash.HMAC%duCrypto.HashTaMD5laMD5cadigest_sizea_digestmoda_hash2hmac_oidaoidTEKeyErrorEAttributeErroratobytesablock_sizedanewadigestuHash type incompatible to HMACastrxord6a_inneraupdated\a_outeruAuthenticate the next chunk of message.

        Args:
            data (byte string/byte array/memoryview): The next chunk of data
        a_pbkdf2_hmac_assistuCarry out the expensive inner loop for PBKDF2-HMACaHMACTcfake keyTadigestmodacopyuReturn a copy ("clone") of the HMAC object.

        The copy will have the same internal state as the original HMAC
        object.
        This can be used to efficiently compute the MAC tag of byte
        strings that share a common initial substring.

        :return: An :class:`HMAC`
        uReturn the **binary** (non-printable) MAC tag of the message
        authenticated so far.

        :return: The MAC tag digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        aget_random_bytesTlaBLAKE2slTadigest_bitsakeyadatauMAC check faileduVerify that a given **binary** MAC (computed by another party)
        is valid.

        Args:
          mac_tag (byte string/byte string/memoryview): the expected MAC of the message.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        uu%02xaborduReturn the **printable** MAC tag of the message authenticated so far.

        :return: The MAC tag, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        averifyaunhexlifyuVerify that a given **printable** MAC (computed by another party)
        is valid.

        Args:
            hex_mac_tag (string): the expected MAC of the message,
                as a hexadecimal string.

        Raises:
            ValueError: if the MAC does not match. It means that the message
                has been tampered with or that the MAC key is incorrect.
        uCreate a new MAC object.

    Args:
        key (bytes/bytearray/memoryview):
            key for the MAC object.
            It must be long enough to match the expected security level of the
            MAC.
        msg (bytes/bytearray/memoryview):
            Optional. The very first chunk of the message to authenticate.
            It is equivalent to an early call to :meth:`HMAC.update`.
        digestmod (module):
            The hash to use to implement the HMAC.
            Default is :mod:`Crypto.Hash.MD5`.

    Returns:
        An :class:`HMAC` object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTabordatobytesabinasciiTaunhexlifyTaBLAKE2suCrypto.Util.strxorTastrxoruCrypto.RandomTaget_random_bytesa__all__Du1.3.14.3.2.26u2.16.840.1.101.3.4.2.4u2.16.840.1.101.3.4.2.1u2.16.840.1.101.3.4.2.2u2.16.840.1.101.3.4.2.3u2.16.840.1.101.3.4.2.5u2.16.840.1.101.3.4.2.6u2.16.840.1.101.3.4.2.7u2.16.840.1.101.3.4.2.8u2.16.840.1.101.3.4.2.9u2.16.840.1.101.3.4.2.10u1.2.840.113549.2.7u1.2.840.113549.2.8u1.2.840.113549.2.9u1.2.840.113549.2.10u1.2.840.113549.2.11u1.2.840.113549.2.12u1.2.840.113549.2.13u2.16.840.1.101.3.4.2.13u2.16.840.1.101.3.4.2.14u2.16.840.1.101.3.4.2.15u2.16.840.1.101.3.4.2.16utoo many values to unpack (expected 2)a_hmac2hash_oidTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.HMACa__module__uAn HMAC hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar digest_size: the size in bytes of the resulting MAC tag
    :vartype digest_size: integer

    :ivar oid: the ASN.1 object ID of the HMAC algorithm.
               Only present if the algorithm was officially assigned one.
    a__qualname__Tcna__init__uHMAC.__init__uHMAC.updateuHMAC._pbkdf2_hmac_assistuHMAC.copyuHMAC.digestuHMAC.verifyahexdigestuHMAC.hexdigestahexverifyuHMAC.hexverifya__orig_bases__uCrypto\Hash\HMAC.pyu<module Crypto.Hash.HMAC>Ta__class__TaselfakeyamsgadigestmodaMD5akey_0ahash_kakey_0_ipadakey_0_opadTaselfafirst_digestaiterationsaresultTaselfanew_hmacTaselfafrozen_outer_hashTaselfTaselfahex_mac_tagTakeyamsgadigestmodTaselfamsgTaselfamac_tagasecretamac1amac2.Crypto.Hash.MD5LWaVoidPointera_raw_md5_libaMD5_initaaddress_ofaValueErroruError %d while instantiating MD5aSmartPointeragetaMD5_destroya_stateaupdateaMD5_updateac_uint8_ptrac_size_talenuContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferadigest_sizeaMD5_digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aMD5HashaMD5_copyuError %d while copying MD5uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA-1 hash object.anewuCreate a new hash object.

    :parameter data:
        Optional. The very first chunk of the message to hash.
        It is equivalent to an early call to :meth:`MD5Hash.update`.
    :type data: byte string/byte array/memoryview

    :Return: A :class:`MD5Hash` hash object
    laMD5_pbkdf2_hmac_assistuError %d with PBKDF2-HMAC assis for MD5uCompute the expensive inner loop in PBKDF-HMAC.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTw*uCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCrypto.Hash._MD5u
                        #define MD5_DIGEST_SIZE 16

                        int MD5_init(void **shaState);
                        int MD5_destroy(void *shaState);
                        int MD5_update(void *hs,
                                          const uint8_t *buf,
                                          size_t len);
                        int MD5_digest(const void *shaState,
                                          uint8_t digest[MD5_DIGEST_SIZE]);
                        int MD5_copy(const void *src, void *dst);

                        int MD5_pbkdf2_hmac_assist(const void *inner,
                                            const void *outer,
                                            const uint8_t first_digest[MD5_DIGEST_SIZE],
                                            uint8_t final_digest[MD5_DIGEST_SIZE],
                                            size_t iterations);
                        aobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.MD5a__module__uA MD5 hash object.
    Do not instantiate directly.
    Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__ll@ablock_sizeu1.2.840.113549.2.5aoidTna__init__uMD5Hash.__init__uMD5Hash.updateuMD5Hash.digestahexdigestuMD5Hash.hexdigestacopyuMD5Hash.copyuMD5Hash.newa__orig_bases__a_pbkdf2_hmac_assistuCrypto\Hash\MD5.pyu<module Crypto.Hash.MD5>Ta__class__TaselfadataastatearesultTainneraouterafirst_digestaiterationsabfraresultTaselfaclonearesultTaselfabfraresultTaselfTaselfadataTadataTaselfadataaresult.Crypto.Hash.SHA1jWaVoidPointera_raw_sha1_libaSHA1_initaaddress_ofaValueErroruError %d while instantiating SHA1aSmartPointeragetaSHA1_destroya_stateaupdateaSHA1_updateac_uint8_ptrac_size_talenuContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferadigest_sizeaSHA1_digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aSHA1HashaSHA1_copyuError %d while copying SHA1uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA-1 hash object.anewuCreate a new hash object.

    :parameter data:
        Optional. The very first chunk of the message to hash.
        It is equivalent to an early call to :meth:`SHA1Hash.update`.
    :type data: byte string/byte array/memoryview

    :Return: A :class:`SHA1Hash` hash object
    laSHA1_pbkdf2_hmac_assistuError %d with PBKDF2-HMAC assis for SHA1uCompute the expensive inner loop in PBKDF-HMAC.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTw*uCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCrypto.Hash._SHA1u
                        #define SHA1_DIGEST_SIZE 20

                        int SHA1_init(void **shaState);
                        int SHA1_destroy(void *shaState);
                        int SHA1_update(void *hs,
                                          const uint8_t *buf,
                                          size_t len);
                        int SHA1_digest(const void *shaState,
                                          uint8_t digest[SHA1_DIGEST_SIZE]);
                        int SHA1_copy(const void *src, void *dst);

                        int SHA1_pbkdf2_hmac_assist(const void *inner,
                                            const void *outer,
                                            const uint8_t first_digest[SHA1_DIGEST_SIZE],
                                            uint8_t final_digest[SHA1_DIGEST_SIZE],
                                            size_t iterations);
                        aobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.SHA1a__module__uA SHA-1 hash object.
    Do not instantiate directly.
    Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__ll@ablock_sizeu1.3.14.3.2.26aoidTna__init__uSHA1Hash.__init__uSHA1Hash.updateuSHA1Hash.digestahexdigestuSHA1Hash.hexdigestacopyuSHA1Hash.copyuSHA1Hash.newa__orig_bases__a_pbkdf2_hmac_assistuCrypto\Hash\SHA1.pyu<module Crypto.Hash.SHA1>Ta__class__TaselfadataastatearesultTainneraouterafirst_digestaiterationsabfraresultTaselfaclonearesultTaselfabfraresultTaselfTaselfadataTadataTaselfadataaresult.Crypto.Hash.SHA224WaVoidPointera_raw_sha224_libaSHA224_initaaddress_ofuError %d while instantiating SHA224aSmartPointeragetaSHA224_destroya_stateaupdateaSHA224_updateac_uint8_ptrac_size_tuError %d while hashing data with SHA224uContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferadigest_sizeaSHA224_digestuError %d while making SHA224 digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aSHA224HashaSHA224_copyuError %d while copying SHA224uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA-224 hash object.anewuCreate a new hash object.

    :parameter data:
        Optional. The very first chunk of the message to hash.
        It is equivalent to an early call to :meth:`SHA224Hash.update`.
    :type data: byte string/byte array/memoryview

    :Return: A :class:`SHA224Hash` hash object
    laSHA224_pbkdf2_hmac_assistuError %d with PBKDF2-HMAC assist for SHA224uCompute the expensive inner loop in PBKDF-HMAC.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTaborduCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCrypto.Hash._SHA224u
                        int SHA224_init(void **shaState);
                        int SHA224_destroy(void *shaState);
                        int SHA224_update(void *hs,
                                          const uint8_t *buf,
                                          size_t len);
                        int SHA224_digest(const void *shaState,
                                          uint8_t *digest,
                                          size_t digest_size);
                        int SHA224_copy(const void *src, void *dst);

                        int SHA224_pbkdf2_hmac_assist(const void *inner,
                                            const void *outer,
                                            const uint8_t *first_digest,
                                            uint8_t *final_digest,
                                            size_t iterations,
                                            size_t digest_size);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.SHA224a__module__uA SHA-224 hash object.
    Do not instantiate directly.
    Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__ll@ablock_sizeu2.16.840.1.101.3.4.2.4aoidTna__init__uSHA224Hash.__init__uSHA224Hash.updateuSHA224Hash.digestahexdigestuSHA224Hash.hexdigestacopyuSHA224Hash.copyuSHA224Hash.newa__orig_bases__a_pbkdf2_hmac_assistuCrypto\Hash\SHA224.pyu<module Crypto.Hash.SHA224>Ta__class__TaselfadataastatearesultTainneraouterafirst_digestaiterationsabfraresultTaselfaclonearesultTaselfabfraresultTaselfTaselfadataTadataTaselfadataaresult.Crypto.Hash.SHA256WaVoidPointera_raw_sha256_libaSHA256_initaaddress_ofuError %d while instantiating SHA256aSmartPointeragetaSHA256_destroya_stateaupdateaSHA256_updateac_uint8_ptrac_size_tuError %d while hashing data with SHA256uContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferadigest_sizeaSHA256_digestuError %d while making SHA256 digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aSHA256HashaSHA256_copyuError %d while copying SHA256uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA-256 hash object.anewuCreate a new hash object.

    :parameter data:
        Optional. The very first chunk of the message to hash.
        It is equivalent to an early call to :meth:`SHA256Hash.update`.
    :type data: byte string/byte array/memoryview

    :Return: A :class:`SHA256Hash` hash object
    laSHA256_pbkdf2_hmac_assistuError %d with PBKDF2-HMAC assist for SHA256uCompute the expensive inner loop in PBKDF-HMAC.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTaborduCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCrypto.Hash._SHA256u
                        int SHA256_init(void **shaState);
                        int SHA256_destroy(void *shaState);
                        int SHA256_update(void *hs,
                                          const uint8_t *buf,
                                          size_t len);
                        int SHA256_digest(const void *shaState,
                                          uint8_t *digest,
                                          size_t digest_size);
                        int SHA256_copy(const void *src, void *dst);

                        int SHA256_pbkdf2_hmac_assist(const void *inner,
                                            const void *outer,
                                            const uint8_t *first_digest,
                                            uint8_t *final_digest,
                                            size_t iterations,
                                            size_t digest_size);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.SHA256a__module__uA SHA-256 hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__l l@ablock_sizeu2.16.840.1.101.3.4.2.1aoidTna__init__uSHA256Hash.__init__uSHA256Hash.updateuSHA256Hash.digestahexdigestuSHA256Hash.hexdigestacopyuSHA256Hash.copyuSHA256Hash.newa__orig_bases__a_pbkdf2_hmac_assistuCrypto\Hash\SHA256.pyu<module Crypto.Hash.SHA256>Ta__class__TaselfadataastatearesultTainneraouterafirst_digestaiterationsabfraresultTaselfaclonearesultTaselfabfraresultTaselfTaselfadataTadataTaselfadataaresult.Crypto.Hash.SHA384WaVoidPointera_raw_sha384_libaSHA384_initaaddress_ofuError %d while instantiating SHA384aSmartPointeragetaSHA384_destroya_stateaupdateaSHA384_updateac_uint8_ptrac_size_tuError %d while hashing data with SHA384uContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferadigest_sizeaSHA384_digestuError %d while making SHA384 digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aSHA384HashaSHA384_copyuError %d while copying SHA384uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA-384 hash object.anewuCreate a new hash object.

    :parameter data:
        Optional. The very first chunk of the message to hash.
        It is equivalent to an early call to :meth:`SHA384Hash.update`.
    :type data: byte string/byte array/memoryview

    :Return: A :class:`SHA384Hash` hash object
    laSHA384_pbkdf2_hmac_assistuError %d with PBKDF2-HMAC assist for SHA384uCompute the expensive inner loop in PBKDF-HMAC.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTaborduCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCrypto.Hash._SHA384u
                        int SHA384_init(void **shaState);
                        int SHA384_destroy(void *shaState);
                        int SHA384_update(void *hs,
                                          const uint8_t *buf,
                                          size_t len);
                        int SHA384_digest(const void *shaState,
                                          uint8_t *digest,
                                          size_t digest_size);
                        int SHA384_copy(const void *src, void *dst);

                        int SHA384_pbkdf2_hmac_assist(const void *inner,
                                            const void *outer,
                                            const uint8_t *first_digest,
                                            uint8_t *final_digest,
                                            size_t iterations,
                                            size_t digest_size);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.SHA384a__module__uA SHA-384 hash object.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__l0lablock_sizeu2.16.840.1.101.3.4.2.2aoidTna__init__uSHA384Hash.__init__uSHA384Hash.updateuSHA384Hash.digestahexdigestuSHA384Hash.hexdigestacopyuSHA384Hash.copyuSHA384Hash.newa__orig_bases__a_pbkdf2_hmac_assistuCrypto\Hash\SHA384.pyu<module Crypto.Hash.SHA384>Ta__class__TaselfadataastatearesultTainneraouterafirst_digestaiterationsabfraresultTaselfaclonearesultTaselfabfraresultTaselfTaselfadataTadataTaselfadataaresult.Crypto.Hash.SHA3_224`a_update_after_digesta_digest_donela_paddingaVoidPointera_raw_keccak_libakeccak_initaaddress_ofac_size_tadigest_sizelac_ubyteTluError %d while instantiating SHA-3/224aSmartPointeragetakeccak_destroya_stateaupdateuYou can only call 'digest' or 'hexdigest' on this objectakeccak_absorbac_uint8_ptruError %d while updating SHA-3/224uContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferakeccak_digestaget_raw_buffera_digest_valueuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        anewakeccak_copyuError %d while copying SHA3-224uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA3-224 hash object.adataapopTaupdate_after_digestFuInitial data for hash specified twiceluUnknown parameters: aSHA3_224_HashuCreate a new hash object.

    Args:
        data (byte string/byte array/memoryview):
            The very first chunk of the message to hash.
            It is equivalent to an early call to :meth:`update`.
        update_after_digest (boolean):
            Whether :meth:`digest` can be followed by another :meth:`update`
            (default: ``False``).

    :Return: A :class:`SHA3_224_Hash` hash object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTaborduCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptrac_ubyteaload_pycryptodome_raw_libuCrypto.Hash.keccakTa_raw_keccak_libTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.SHA3_224a__module__uA SHA3-224 hash object.
    Do not instantiate directly.
    Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__lu2.16.840.1.101.3.4.2.7aoidlablock_sizea__init__uSHA3_224_Hash.__init__uSHA3_224_Hash.updateuSHA3_224_Hash.digestahexdigestuSHA3_224_Hash.hexdigestacopyuSHA3_224_Hash.copyTnuSHA3_224_Hash.newa__orig_bases__uCrypto\Hash\SHA3_224.pyu<module Crypto.Hash.SHA3_224>Ta__class__Taselfadataaupdate_after_digestastatearesultTaselfaclonearesultTaselfabfraresultTaselfTaselfadataTaargsakwargsadataaupdate_after_digestTaselfadataaresult.Crypto.Hash.SHA3_256`a_update_after_digesta_digest_donela_paddingaVoidPointera_raw_keccak_libakeccak_initaaddress_ofac_size_tadigest_sizelac_ubyteTluError %d while instantiating SHA-3/256aSmartPointeragetakeccak_destroya_stateaupdateuYou can only call 'digest' or 'hexdigest' on this objectakeccak_absorbac_uint8_ptruError %d while updating SHA-3/256uContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferakeccak_digestaget_raw_buffera_digest_valueuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        anewakeccak_copyuError %d while copying SHA3-256uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA3-256 hash object.adataapopTaupdate_after_digestFuInitial data for hash specified twiceluUnknown parameters: aSHA3_256_HashuCreate a new hash object.

    Args:
        data (byte string/byte array/memoryview):
            The very first chunk of the message to hash.
            It is equivalent to an early call to :meth:`update`.
        update_after_digest (boolean):
            Whether :meth:`digest` can be followed by another :meth:`update`
            (default: ``False``).

    :Return: A :class:`SHA3_256_Hash` hash object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTaborduCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptrac_ubyteaload_pycryptodome_raw_libuCrypto.Hash.keccakTa_raw_keccak_libTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.SHA3_256a__module__uA SHA3-256 hash object.
    Do not instantiate directly.
    Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__l u2.16.840.1.101.3.4.2.8aoidlablock_sizea__init__uSHA3_256_Hash.__init__uSHA3_256_Hash.updateuSHA3_256_Hash.digestahexdigestuSHA3_256_Hash.hexdigestacopyuSHA3_256_Hash.copyTnuSHA3_256_Hash.newa__orig_bases__uCrypto\Hash\SHA3_256.pyu<module Crypto.Hash.SHA3_256>Ta__class__Taselfadataaupdate_after_digestastatearesultTaselfaclonearesultTaselfabfraresultTaselfTaselfadataTaargsakwargsadataaupdate_after_digestTaselfadataaresult.Crypto.Hash.SHA3_384aa_update_after_digesta_digest_donela_paddingaVoidPointera_raw_keccak_libakeccak_initaaddress_ofac_size_tadigest_sizelac_ubyteTluError %d while instantiating SHA-3/384aSmartPointeragetakeccak_destroya_stateaupdateuYou can only call 'digest' or 'hexdigest' on this objectakeccak_absorbac_uint8_ptruError %d while updating SHA-3/384uContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferakeccak_digestaget_raw_buffera_digest_valueuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        anewakeccak_copyuError %d while copying SHA3-384uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA3-256 hash object.uCreate a fresh SHA3-384 hash object.adataapopTaupdate_after_digestFuInitial data for hash specified twiceluUnknown parameters: aSHA3_384_HashuCreate a new hash object.

    Args:
        data (byte string/byte array/memoryview):
            The very first chunk of the message to hash.
            It is equivalent to an early call to :meth:`update`.
        update_after_digest (boolean):
            Whether :meth:`digest` can be followed by another :meth:`update`
            (default: ``False``).

    :Return: A :class:`SHA3_384_Hash` hash object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTaborduCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptrac_ubyteaload_pycryptodome_raw_libuCrypto.Hash.keccakTa_raw_keccak_libTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.SHA3_384a__module__uA SHA3-384 hash object.
    Do not instantiate directly.
    Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__l0u2.16.840.1.101.3.4.2.9aoidlhablock_sizea__init__uSHA3_384_Hash.__init__uSHA3_384_Hash.updateuSHA3_384_Hash.digestahexdigestuSHA3_384_Hash.hexdigestacopyuSHA3_384_Hash.copyTnuSHA3_384_Hash.newa__orig_bases__uCrypto\Hash\SHA3_384.pyu<module Crypto.Hash.SHA3_384>Ta__class__Taselfadataaupdate_after_digestastatearesultTaselfaclonearesultTaselfabfraresultTaselfTaselfadataTaargsakwargsadataaupdate_after_digestTaselfadataaresult.Crypto.Hash.SHA3_512`a_update_after_digesta_digest_donela_paddingaVoidPointera_raw_keccak_libakeccak_initaaddress_ofac_size_tadigest_sizelac_ubyteTluError %d while instantiating SHA-3/512aSmartPointeragetakeccak_destroya_stateaupdateuYou can only call 'digest' or 'hexdigest' on this objectakeccak_absorbac_uint8_ptruError %d while updating SHA-3/512uContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferakeccak_digestaget_raw_buffera_digest_valueuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        anewakeccak_copyuError %d while copying SHA3-512uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA3-521 hash object.adataapopTaupdate_after_digestFuInitial data for hash specified twiceluUnknown parameters: aSHA3_512_HashuCreate a new hash object.

    Args:
        data (byte string/byte array/memoryview):
            The very first chunk of the message to hash.
            It is equivalent to an early call to :meth:`update`.
        update_after_digest (boolean):
            Whether :meth:`digest` can be followed by another :meth:`update`
            (default: ``False``).

    :Return: A :class:`SHA3_512_Hash` hash object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTaborduCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptrac_ubyteaload_pycryptodome_raw_libuCrypto.Hash.keccakTa_raw_keccak_libTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.SHA3_512a__module__uA SHA3-512 hash object.
    Do not instantiate directly.
    Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__l@u2.16.840.1.101.3.4.2.10aoidlHablock_sizea__init__uSHA3_512_Hash.__init__uSHA3_512_Hash.updateuSHA3_512_Hash.digestahexdigestuSHA3_512_Hash.hexdigestacopyuSHA3_512_Hash.copyTnuSHA3_512_Hash.newa__orig_bases__uCrypto\Hash\SHA3_512.pyu<module Crypto.Hash.SHA3_512>Ta__class__Taselfadataaupdate_after_digestastatearesultTaselfaclonearesultTaselfabfraresultTaselfTaselfadataTaargsakwargsadataaupdate_after_digestTaselfadataaresult.Crypto.Hash.SHA512`a_truncateu2.16.840.1.101.3.4.2.3aoidl@adigest_sizeu224u2.16.840.1.101.3.4.2.5lu256u2.16.840.1.101.3.4.2.6l uIncorrect truncation length. It must be '224' or '256'.aVoidPointera_raw_sha512_libaSHA512_initaaddress_ofac_size_tuError %d while instantiating SHA-512aSmartPointeragetaSHA512_destroya_stateaupdateaSHA512_updateac_uint8_ptruError %d while hashing data with SHA512uContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferaSHA512_digestuError %d while making SHA512 digestaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        aSHA512HashaSHA512_copyuError %d while copying SHA512uReturn a copy ("clone") of the hash object.

        The copy will have the same internal state as the original hash
        object.
        This can be used to efficiently compute the digests of strings that
        share a common initial substring.

        :return: A hash object of the same type
        uCreate a fresh SHA-512 hash object.uCreate a new hash object.

    Args:
      data (bytes/bytearray/memoryview):
        Optional. The very first chunk of the message to hash.
        It is equivalent to an early call to :meth:`SHA512Hash.update`.
      truncate (string):
        Optional. The desired length of the digest. It can be either "224" or
        "256". If not present, the digest is 512 bits long.
        Passing this parameter is **not** equivalent to simply truncating
        the output digest.

    :Return: A :class:`SHA512Hash` hash object
    laSHA512_pbkdf2_hmac_assistuError %d with PBKDF2-HMAC assist for SHA512uCompute the expensive inner loop in PBKDF-HMAC.a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTaborduCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptraload_pycryptodome_raw_libTuCrypto.Hash._SHA512u
                        int SHA512_init(void **shaState,
                                        size_t digest_size);
                        int SHA512_destroy(void *shaState);
                        int SHA512_update(void *hs,
                                          const uint8_t *buf,
                                          size_t len);
                        int SHA512_digest(const void *shaState,
                                          uint8_t *digest,
                                          size_t digest_size);
                        int SHA512_copy(const void *src, void *dst);

                        int SHA512_pbkdf2_hmac_assist(const void *inner,
                                            const void *outer,
                                            const uint8_t *first_digest,
                                            uint8_t *final_digest,
                                            size_t iterations,
                                            size_t digest_size);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.SHA512a__module__uA SHA-512 hash object (possibly in its truncated version SHA-512/224 or
    SHA-512/256.
    Do not instantiate directly. Use the :func:`new` function.

    :ivar oid: ASN.1 Object ID
    :vartype oid: string

    :ivar block_size: the size in bytes of the internal message block,
                      input to the compression function
    :vartype block_size: integer

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__lablock_sizea__init__uSHA512Hash.__init__uSHA512Hash.updateuSHA512Hash.digestahexdigestuSHA512Hash.hexdigestacopyuSHA512Hash.copyTnanewuSHA512Hash.newa__orig_bases__Tnna_pbkdf2_hmac_assistuCrypto\Hash\SHA512.pyu<module Crypto.Hash.SHA512>Ta__class__TaselfadataatruncateastatearesultTainneraouterafirst_digestaiterationsabfraresultTaselfaclonearesultTaselfabfraresultTaselfTaselfadataTadataatruncateTaselfadataaresult.Crypto.Hash<aupperTu1.3.14.3.2.26aSHA1uSHA-1uTaSHA1laSHA1lanewTu2.16.840.1.101.3.4.2.4aSHA224uSHA-224TaSHA224aSHA224Tu2.16.840.1.101.3.4.2.1aSHA256uSHA-256TaSHA256aSHA256Tu2.16.840.1.101.3.4.2.2aSHA384uSHA-384TaSHA384aSHA384Tu2.16.840.1.101.3.4.2.3aSHA512uSHA-512TaSHA512aSHA512Tu2.16.840.1.101.3.4.2.5uSHA512-224uSHA-512-224Tu224TatruncateTu2.16.840.1.101.3.4.2.6uSHA512-256uSHA-512-256Tu256Tu2.16.840.1.101.3.4.2.7uSHA3-224uSHA-3-224TaSHA3_224aSHA3_224Tu2.16.840.1.101.3.4.2.8uSHA3-256uSHA-3-256TaSHA3_256aSHA3_256Tu2.16.840.1.101.3.4.2.9uSHA3-384uSHA-3-384TaSHA3_384aSHA3_384Tu2.16.840.1.101.3.4.2.10uSHA3-512uSHA-3-512TaSHA3_512aSHA3_512uUnknown hash %suReturn a new hash instance, based on its name or
    on its ASN.1 Object IDa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptou\not_existingaHashTaNUITKA_PACKAGE_Crypto_Hashu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__LaHMACaMD2aMD4aMD5aRIPEMD160aSHA1aSHA224aSHA256aSHA384aSHA512aSHA3_224aSHA3_256aSHA3_384aSHA3_512aCMACaPoly1305acSHAKE128acSHAKE256aKMAC128aKMAC256aTupleHash128aTupleHash256aKangarooTwelveaTurboSHAKE128aTurboSHAKE256a__all__uCrypto\Hash\__init__.pyu<module Crypto.Hash>T
anameaSHA1aSHA224aSHA256aSHA384aSHA512aSHA3_224aSHA3_256aSHA3_384aSHA3_512.Crypto.Hash.keccak=^adigest_sizea_update_after_digesta_digest_donela_paddingaVoidPointera_raw_keccak_libakeccak_initaaddress_ofac_size_tlac_ubyteTluError %d while instantiating keccakaSmartPointeragetakeccak_destroya_stateaupdateuYou can only call 'digest' or 'hexdigest' on this objectakeccak_absorbac_uint8_ptruError %d while updating keccakuContinue hashing of a message by consuming the next chunk of data.

        Args:
            data (byte string/byte array/memoryview): The next chunk of the message being hashed.
        acreate_string_bufferakeccak_digestuError %d while squeezing keccakaget_raw_bufferuReturn the **binary** (non-printable) digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Binary form.
        :rtype: byte string
        uadigestu%02xaborduReturn the **printable** digest of the message that has been hashed so far.

        :return: The hash digest, computed over the data processed so far.
                 Hexadecimal encoded.
        :rtype: string
        adigest_bytesadigest_bitsanewuCreate a fresh Keccak hash object.adataapopTaupdate_after_digestFTadigest_bytesnTadigest_bitsnuOnly one digest parameter must be providedTnnuDigest size (bits, bytes) not providedTll l0l@u'digest_bytes' must be: 28, 32, 48 or 64Tllllu'digest_bytes' must be: 224, 256, 384 or 512luUnknown parameters: aKeccak_HashuCreate a new hash object.

    Args:
        data (bytes/bytearray/memoryview):
            The very first chunk of the message to hash.
            It is equivalent to an early call to :meth:`Keccak_Hash.update`.
        digest_bytes (integer):
            The size of the digest, in bytes (28, 32, 48, 64).
        digest_bits (integer):
            The size of the digest, in bits (224, 256, 384, 512).
        update_after_digest (boolean):
            Whether :meth:`Keccak.digest` can be followed by another
            :meth:`Keccak.update` (default: ``False``).

    :Return: A :class:`Keccak_Hash` hash object
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTabordluCrypto.Util._raw_apiTaload_pycryptodome_raw_libaVoidPointeraSmartPointeracreate_string_bufferaget_raw_bufferac_size_tac_uint8_ptrac_ubyteaload_pycryptodome_raw_libTuCrypto.Hash._keccaku
                        int keccak_init(void **state,
                                        size_t capacity_bytes,
                                        uint8_t rounds);
                        int keccak_destroy(void *state);
                        int keccak_absorb(void *state,
                                          const uint8_t *in,
                                          size_t len);
                        int keccak_squeeze(const void *state,
                                           uint8_t *out,
                                           size_t len,
                                           uint8_t padding);
                        int keccak_digest(void *state,
                                          uint8_t *digest,
                                          size_t len,
                                          uint8_t padding);
                        int keccak_copy(const void *src, void *dst);
                        int keccak_reset(void *state);
                        TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Hash.keccaka__module__uA Keccak hash object.
    Do not instantiate directly.
    Use the :func:`new` function.

    :ivar digest_size: the size in bytes of the resulting hash
    :vartype digest_size: integer
    a__qualname__a__init__uKeccak_Hash.__init__uKeccak_Hash.updateuKeccak_Hash.digestahexdigestuKeccak_Hash.hexdigestuKeccak_Hash.newa__orig_bases__uCrypto\Hash\keccak.pyu<module Crypto.Hash.keccak>Ta__class__Taselfadataadigest_bytesaupdate_after_digestastatearesultTaselfabfraresultTaselfTaselfakwargsTakwargsadataaupdate_after_digestadigest_bytesadigest_bitsTaselfadataaresult.Crypto.Protocol.KDF)8aSHA1atobytesanewadigest_sizeuSelected hash algorithm has a too short digest (%d bytes).uSalt is not 8 bytes long (%d bytes instead).aiter_rangelapHashadigestuDerive one key from a password (or passphrase).

    This function performs key derivation according to an old version of
    the PKCS#5 standard (v1.5) or `RFC2898
    <https://www.ietf.org/rfc/rfc2898.txt>`_.

    Args:
     password (string):
        The secret password to generate the key from.
     salt (byte string):
        An 8 byte string to use for better protection from dictionary attacks.
        This value does not need to be kept secret, but it should be randomly
        chosen for each derivation.
     dkLen (integer):
        The length of the desired key. The default is 16 bytes, suitable for
        instance for :mod:`Crypto.Cipher.AES`.
     count (integer):
        The number of iterations to carry out. The recommendation is 1000 or
        more.
     hashAlgo (module):
        The hash algorithm to use, as a module or an object from the :mod:`Crypto.Hash` package.
        The digest length must be no shorter than ``dkLen``.
        The default algorithm is :mod:`Crypto.Hash.SHA1`.

    Return:
        A byte string of length ``dkLen`` that can be used as key.
    u'prf' and 'hmac_hash_module' are mutually exlusiveahmac_hash_modulea_pbkdf2_hmac_assistu<lambda>uPBKDF2.<locals>.<lambda>alinkuPBKDF2.<locals>.linkcakeyaprfapasswordasaltastructapacku>IwilareduceastrxoraHMACacopyaupdateacountuDerive one or more keys from a password (or passphrase).

    This function performs key derivation according to the PKCS#5 standard (v2.0).

    Args:
     password (string or byte string):
        The secret password to generate the key from.

        Strings will be encoded as ISO 8859-1 (also known as Latin-1),
        which does not allow any characters with codepoints > 255.
     salt (string or byte string):
        A (byte) string to use for better protection from dictionary attacks.
        This value does not need to be kept secret, but it should be randomly
        chosen for each derivation. It is recommended to use at least 16 bytes.

        Strings will be encoded as ISO 8859-1 (also known as Latin-1),
        which does not allow any characters with codepoints > 255.
     dkLen (integer):
        The cumulative length of the keys to produce.

        Due to a flaw in the PBKDF2 design, you should not request more bytes
        than the ``prf`` can output. For instance, ``dkLen`` should not exceed
        20 bytes in combination with ``HMAC-SHA1``.
     count (integer):
        The number of iterations to carry out. The higher the value, the slower
        and the more secure the function becomes.

        You should find the maximum number of iterations that keeps the
        key derivation still acceptable on the slowest hardware you must support.

        Although the default value is 1000, **it is recommended to use at least
        1000000 (1 million) iterations**.
     prf (callable):
        A pseudorandom function. It must be a function that returns a
        pseudorandom byte string from two parameters: a secret and a salt.
        The slower the algorithm, the more secure the derivation function.
        If not specified, **HMAC-SHA1** is used.
     hmac_hash_module (module):
        A module from ``Crypto.Hash`` implementing a Merkle-Damgard cryptographic
        hash, which PBKDF2 must use in combination with HMAC.
        This parameter is mutually exclusive with ``prf``.

    Return:
        A byte string of length ``dkLen`` that can be used as key material.
        If you want multiple keys, just break up this string into segments of the desired length.
    utoo many values to unpack (expected 2)lwsu<genexpr>uPBKDF2.<locals>.<genexpr>a_copy_bytesa_keya_ciphermoddablock_sizea_last_stringa_cachela_n_updatesa_cipher_paramsuInitialize the S2V PRF.

        :Parameters:
          key : byte string
            A secret that can be used as key for CMACs
            based on ciphers from ``ciphermod``.
          ciphermod : module
            A block cipher module from `Crypto.Cipher`.
          cipher_params : dictionary
            A set of extra parameters to use to create a cipher instance.
        a_S2VuCreate a new S2V PRF.

        :Parameters:
          key : byte string
            A secret that can be used as key for CMACs
            based on ciphers from ``ciphermod``.
          ciphermod : module
            A block cipher module from `Crypto.Cipher`.
        abytes_to_longabordllalong_to_bytesuToo many components passed to S2VaCMACTamsgaciphermodacipher_paramsa_doubleuPass the next component of the vector.

        The maximum number of components you can pass is equal to the block
        length of the cipher (in bits) minus 1.

        :Parameters:
          item : byte string
            The next component of the vector.
        :Raise TypeError: when the limit on the number of components has been reached.
        :nqn:qnndb:nlnu"Derive a secret from the vector of components.

        :Return: a byte string, as long as the block length of the cipher.
        luToo much secret data to deriveTadigestmodatlenaprkwtqacontextwBwnahashmodakey_lenuDerive one or more keys from a master secret using
    the HMAC-based KDF defined in RFC5869_.

    Args:
     master (byte string):
        The unguessable value used by the KDF to generate the other keys.
        It must be a high-entropy secret, though not necessarily uniform.
        It must not be a password.
     key_len (integer):
        The length in bytes of every derived key.
     salt (byte string):
        A non-secret, reusable value that strengthens the randomness
        extraction step.
        Ideally, it is as long as the digest size of the chosen hash.
        If empty, a string of zeroes in used.
     hashmod (module):
        A cryptographic hash algorithm from :mod:`Crypto.Hash`.
        :mod:`Crypto.Hash.SHA512` is a good choice.
     num_keys (integer):
        The number of keys to derive. Every key is :data:`key_len` bytes long.
        The maximum cumulative length of all keys is
        255 times the digest size.
     context (byte string):
        Optional identifier describing what the keys are used for.

    Return:
        A byte string or a tuple of byte strings.

    .. _RFC5869: http://tools.ietf.org/html/rfc5869
    abit_sizeuN must be a power of 2guN is too bigg?up or r are too biguscrypt.<locals>.<lambda>aPBKDF2Taprfa_raw_scrypt_libascryptROMixa_raw_salsa20_libaSalsa20_8_corewracreate_string_bufferac_size_twNacoreuError %X while running scryptadata_outaget_raw_bufferuDerive one or more keys from a passphrase.

    Args:
     password (string):
        The secret pass phrase to generate the keys from.
     salt (string):
        A string to use for better protection from dictionary attacks.
        This value does not need to be kept secret,
        but it should be randomly chosen for each derivation.
        It is recommended to be at least 16 bytes long.
     key_len (integer):
        The length in bytes of each derived key.
     N (integer):
        CPU/Memory cost parameter. It must be a power of 2 and less
        than :math:`2^{32}`.
     r (integer):
        Block size parameter.
     p (integer):
        Parallelization parameter.
        It must be no greater than :math:`(2^{32}-1)/(4r)`.
     num_keys (integer):
        The number of keys to derive. Every key is :data:`key_len` bytes long.
        By default, only 1 key is generated.
        The maximum cumulative length of all keys is :math:`(2^{32}-1)*32`
        (that is, 128TB).

    A good choice of parameters *(N, r , p)* was suggested
    by Colin Percival in his `presentation in 2009`__:

    - *( 2¹⁴, 8, 1 )* for interactive logins (≤100ms)
    - *( 2²⁰, 8, 1 )* for file encryption (≤5s)

    Return:
        A byte string or a tuple of byte strings.

    .. __: http://www.tarsnap.com/scrypt/scrypt-slides.pdf
    aSHA256:lnnazfillTlabitsabstrl:nqnaresultu./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789uatostrTlluIncorrect length:nqn:nqnabchruCrypto.CipherTa_EKSBlowfisha_EKSBlowfishuThe password is too long. It must be 72 bytes at most.lubcrypt cost factor must be in the range 4..31aMODE_ECB;ll@lacipheraencryptactextuutf-8afindTluThe password contains the zero byteaget_random_bytesTlubcrypt salt must be 16 bytes longa_bcrypt_hashcOrpheanBeholderScryDoubtd$Tla_bcrypt_encodec$2auHash a password into a key, using the OpenBSD bcrypt protocol.

    Args:
      password (byte string or string):
        The secret password or pass phrase.
        It must be at most 72 bytes long.
        It must not contain the zero byte.
        Unicode strings will be encoded as UTF-8.
      cost (integer):
        The exponential factor that makes it slower to compute the hash.
        It must be in the range 4 to 31.
        A value of at least 12 is recommended.
      salt (byte string):
        Optional. Random byte string to thwarts dictionary and rainbow table
        attacks. It must be 16 bytes long.
        If not passed, a random value is generated.

    Return (byte string):
        The bcrypt hash

    Raises:
        ValueError: if password is longer than 72 bytes or if it contains the zero byte

   uIncorrect length of the bcrypt hash: %d bytes instead of 60:nlnc$2a$uUnsupported prefixareacompileTc\$2a\$([0-9][0-9])\$([A-Za-z0-9./]{22,22})([A-Za-z0-9./]{31,31})amatchuIncorrect bcrypt hash formatagroupTluIncorrect costa_bcrypt_decodeabcryptaBLAKE2slTadigest_bitsakeyadatauIncorrect bcrypt hashuVerify if the provided password matches the given bcrypt hash.

    Args:
      password (byte string or string):
        The secret password or pass phrase to test.
        It must be at most 72 bytes long.
        It must not contain the zero byte.
        Unicode strings will be encoded as UTF-8.
      bcrypt_hash (byte string, bytearray):
        The reference bcrypt hash the password needs to be checked against.

    Raises:
        ValueError: if the password does not match
    TduNull byte found in contextadkalabelakey_len_encamasterguOverflow in SP800 108 counteruDerive one or more keys from a master secret using
    a pseudorandom function in Counter Mode, as specified in
    `NIST SP 800-108r1 <https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-108r1.pdf>`_.

    Args:
     master (byte string):
        The secret value used by the KDF to derive the other keys.
        It must not be a password.
        The length on the secret must be consistent with the input expected by
        the :data:`prf` function.
     key_len (integer):
        The length in bytes of each derived key.
     prf (function):
        A pseudorandom function that takes two byte strings as parameters:
        the secret and an input. It returns another byte string.
     num_keys (integer):
        The number of keys to derive. Every key is :data:`key_len` bytes long.
        By default, only 1 key is derived.
     label (byte string):
        Optional description of the purpose of the derived keys.
        It must not contain zero bytes.
     context (byte string):
        Optional information pertaining to
        the protocol that uses the keys, such as the identity of the
        participants, nonces, session IDs, etc.
        It must not contain zero bytes.

    Return:
        - a byte string (if ``num_keys`` is not specified), or
        - a tuple of byte strings (if ``num_key`` is specified).
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util.py3compatTatobytesaborda_copy_bytesaiter_rangeatostrabchrabstruCrypto.HashTaSHA1aSHA256aHMACaCMACaBLAKE2suCrypto.Util.strxorTastrxoruCrypto.RandomTaget_random_bytesuCrypto.Util.numberTasizealong_to_bytesabytes_to_longasizeuCrypto.Util._raw_apiTaload_pycryptodome_raw_libacreate_string_bufferaget_raw_bufferac_size_taload_pycryptodome_raw_libTuCrypto.Cipher._Salsa20u
                    int Salsa20_8_core(const uint8_t *x, const uint8_t *y,
                                       uint8_t *out);
                    TuCrypto.Protocol._scryptu
                    typedef int (core_t)(const uint8_t [64], const uint8_t [64], uint8_t [64]);
                    int scryptROMix(const uint8_t *data_in, uint8_t *data_out,
                           size_t data_len, unsigned N, core_t *core);
                    TlnaPBKDF1TllnnTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Protocol.KDFa__module__uString-to-vector PRF as defined in `RFC5297`_.

    This class implements a pseudorandom function family
    based on CMAC that takes as input a vector of strings.

    .. _RFC5297: http://tools.ietf.org/html/rfc5297
    a__qualname__Tna__init__u_S2V.__init__astaticmethodu_S2V.newu_S2V._doubleu_S2V.updateaderiveu_S2V.derivea__orig_bases__TlnaHKDFascryptabcrypt_checkTncpaSP800_108_CounteruCrypto\Protocol\KDF.pyTa.0wjalinkwsTwpwsahmac_hash_moduleTahmac_hash_moduleTwpwsu<module Crypto.Protocol.KDF>Tamasterakey_lenasaltahashmodanum_keysacontextaoutput_lenahmacaprkwtwnatlenaderived_outputakolTapasswordasaltadkLenacountahashAlgoapHashadigestwiTapasswordasaltadkLenacountaprfahmac_hash_modulealinkakeywiwsabaseafirst_digestTamasterakey_lenaprfanum_keysalabelacontextakey_len_encaoutput_lenwiadkainfoakolTa__class__Taselfakeyaciphermodacipher_paramsT
adatawsabitswcaidxabits6amodulo4abits8aresultwgTadatawsabitswcabits_cabits6aresultwgaidxTapasswordacostasaltaconstantainverta_EKSBlowfishacipheractextw_TaselfabsadoubledTapasswordacostasaltactextacost_encasalt_encahash_encT
apasswordabcrypt_hashwpwracostasaltabcrypt_hash2asecretamac1amac2TaselfafinalapaddedamacTwsaprfapasswordTapasswordaprfTakeyaciphermodTapasswordasaltakey_lenwNwrwpanum_keysaprf_hmac_sha256astage_1ascryptROMixacoreadata_outaflowaidxabuffer_outaresultadkakolTaselfaitemamac.Crypto.ProtocolHa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptou\not_existingaProtocolTaNUITKA_PACKAGE_Crypto_Protocolu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aKDFaSecretSharingaDHa__all__uCrypto\Protocol\__init__.pyu<module Crypto.Protocol>u.Crypto.RandomF3aurandomuReturn a random byte string of the desired size.a_UrandomRNGuReturn a file-like object that outputs cryptographically random bytes.a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptou\not_existingaRandomTaNUITKA_PACKAGE_Crypto_Randomu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__anewaget_random_bytesa__all__lTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Randoma__module__a__qualname__areadu_UrandomRNG.readuMethod provided for backward compatibility only.aflushu_UrandomRNG.flushareinitu_UrandomRNG.reinitacloseu_UrandomRNG.closea__orig_bases__aatforkuCrypto\Random\__init__.pyu<module Crypto.Random>Ta__class__TaselfTaargsakwargsTaselfwnu.Crypto.Util._cpu_featuresa_raw_cpuid_libahave_aes_niahave_clmula__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util._raw_apiTaload_pycryptodome_raw_liblaload_pycryptodome_raw_libTuCrypto.Util._cpuid_cu
                                           int have_aes_ni(void);
                                           int have_clmul(void);
                                           uCrypto\Util\_cpu_features.pyu<module Crypto.Util._cpu_features>u.Crypto.Util._file_systemZlaCryptouOnly available for modules under 'Crypto':lnnasplita__file__utoo many values to unpack (expected 2)ajoinu..uReturn the complete file name for the module

    dir_comps : list of string
        The list of directory names in the PyCryptodome package.
        The first element must be "Crypto".

    filename : string
        The filename (inclusing extension) in the target directory.
    a__doc__a__spec__aoriginahas_locationa__cached__aosapycryptodome_filenameuCrypto\Util\_file_system.pyu<module Crypto.Util._file_system>Tadir_compsafilenameautil_libw_aroot_libu.Crypto.Util._raw_api
affiaRTLD_DEEPBINDagetenvTaPYCRYPTODOME_DISABLE_DEEPBINDadlopenacdefuLoad a shared library and return a handle to it.

        @name,  either an absolute path or the name of a library
                in the system search path.

        @cdecl, the C function declarations.
        uConvert a Python integer to unsigned longuConvert a Python integer to size_tamaxanewuuint8_t[]:nnnuSize must be specified once onlyaresultuAllocate the given amount of bytes (initially set to 0)astringuConvert a C string into a Python byte sequenceabufferuConvert a C buffer into a Python byte sequencea_buffer_typeacastauint8_t_typeafrom_bufferabyte_stringa_ArrayuObject type %s cannot be passed to C codeTuvoid *[1]a_pplaVoidPointer_cffilactypesac_ubyteacached_architectureaplatformaarchitectureutoo many values to unpack (expected 2)w.astartswithTaWinafind_libraryuCannot load library '%s'aCDLLavaluearawa_py_objecta_Py_buffera_PyObject_GetBufferabyrefa_PyBUF_SIMPLEalenafrom_addressabufa_PyBuffer_Releaseac_void_pa_paVoidPointer_ctypesa_raw_pointera_destructorasplitTw.:nqnqaextension_suffixesabasenameapycryptodome_filenameadir_compsaattemptsuNot found '%s'aload_libacdecluCannot load '%s': %safilenameuCannot load native module '%s': %su, uLoad a shared library and return a handle to it.

    @name,  the name of the library expressed as a PyCryptodome module,
            for instance Crypto.Cipher._raw_cbc.

    @cdecl, the C function declarations.
    TObytesObytearrayOmemoryviewuReturn True if object x supports the buffer interfaceareadonlya__doc__a__file__a__spec__aoriginahas_locationa__cached__aosaabcasysuCrypto.Util.py3compatTabyte_stringuCrypto.Util._file_systemTapycryptodome_filenameamachineryaEXTENSION_SUFFIXESTObytearrayOmemoryviewTOobjecta__prepare__a_VoidPointera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uCrypto.Util._raw_apia__module__a__qualname__aabstractmethoduReturn the memory location we point toagetu_VoidPointer.getuReturn a raw pointer to this pointeraaddress_ofu_VoidPointer.address_ofa__orig_bases__aflagsaoptimizeluCFFI with optimize=2 fails due to pycparser bug.acffiTaFFIaFFIaNULLanull_pointeratypeofTuconst uint8_t*Tuuint8_t[1]a__bases__ac_ulongac_ulonglongac_uintac_size_tTnacreate_string_bufferaget_c_stringaget_raw_bufferac_uint8_ptruModel a newly allocated pointer to voida__init__uVoidPointer_cffi.__init__uVoidPointer_cffi.getuVoidPointer_cffi.address_ofaVoidPointerabackenductypes.utilTafind_libraryaArrayac_ssize_ta_c_ssize_tapythonapiaPyObject_GetBufferaPyBuffer_Releaseapy_objectaPOINTERa_c_ssize_paStructureaobjaitemsizeac_intandimaformatac_char_pashapeastridesasuboffsetsainternala_fields_aversion_infoainsertasmalltableuVoidPointer_ctypes.__init__uVoidPointer_ctypes.getuVoidPointer_ctypes.address_ofaSmartPointeruClass to hold a non-managed piece of memoryuSmartPointer.__init__uSmartPointer.getareleaseuSmartPointer.releasea__del__uSmartPointer.__del__aload_pycryptodome_raw_libais_bufferais_writeable_bufferuCrypto\Util\_raw_api.pyu<module Crypto.Util._raw_api>Ta__class__TaselfTaselfaraw_pointeradestructorTwxTwcTadataTadataaobjabufabuffer_typeTainit_or_sizeasizearesultTac_stringTabufTanameacdeclalibTanameacdeclaplatformabitsalinkageafull_nameT
anameacdeclasplitadir_compsabasenameaattemptsaextafilenameafull_nameaexpTaselfarpu.Crypto.UtiluMiscellaneous modules

Contains useful modules that don't belong into any of the
other Crypto.* subpackages.

========================    =============================================
Module                      Description
========================    =============================================
`Crypto.Util.number`        Number-theoretic functions (primality testing, etc.)
`Crypto.Util.Counter`       Fast counter functions for CTR cipher modes.
`Crypto.Util.RFC1751`       Converts between 128-bit keys and human-readable
                            strings of words.
`Crypto.Util.asn1`          Minimal support for ASN.1 DER encoding
`Crypto.Util.Padding`       Set of functions for adding and removing padding.
========================    =============================================

:undocumented: _galois, _number_new, cpuid, py3compat, _raw_api
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_Cryptou\not_existingaUtilTaNUITKA_PACKAGE_Crypto_Utilu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__LaRFC1751anumberastrxoraasn1aCounteraPaddinga__all__uCrypto\Util\__init__.pyu<module Crypto.Util>u.Crypto.Util.numberܬluNon positive valuesutoo many values to unpack (expected 2)luReturn ceil(n/d), that is, the smallest integer r such that r*d >= nuSize in bits only available for non-negative numbersabit_lengthuReturns the size of the number N in bits.aRandomaget_random_bytesllTlastructapackwBabytes_to_longuReturn a random number at most N bits long.

    If :data:`randfunc` is omitted, then :meth:`Random.get_random_bytes` is used.

    .. deprecated:: 3.0
        This function is for internal use only and may be renamed or removed in
        the future. Use :func:`Crypto.Random.random.getrandbits` instead.
    asizeagetRandomIntegeravalueabitsarandfuncuReturn a random number *n* so that *a <= n < b*.

    If :data:`randfunc` is omitted, then :meth:`Random.get_random_bytes` is used.

    .. deprecated:: 3.0
        This function is for internal use only and may be renamed or removed in
        the future. Use :func:`Crypto.Random.random.randrange` instead.
    luReturn a random number with exactly N-bits,
    i.e. a random number between 2**(N-1) and (2**N)-1.

    If :data:`randfunc` is omitted, then :meth:`Random.get_random_bytes` is used.

    .. deprecated:: 3.0
        This function is for internal use only and may be renamed or removed in
        the future.
    uModulus cannot be zerouModulus cannot be negativeapowquThe inverse of :data:`u` *mod* :data:`v`.uN must be larger than 1agetRandomNBitIntegerwNaisPrimeTarandfuncuReturn a random N-bit prime number.

    N must be an integer larger than 1.
    If randfunc is omitted, then :meth:`Random.get_random_bytes` is used.
    wmwbaiter_rangeaminagetRandomRangewnwaatestedwzu_rabinMillerTest(n:long, rounds:int, randfunc:callable):int
    Tests if n is prime.
    Returns 0 when n is definitely composite.
    Returns 1 when n is probably prime.
    Returns 2 when n is definitely prime.

    If randfunc is omitted, then Random.new().read is used.

    This function is for internal use only and may be renamed or removed in
    the future.
    a_fastmathagetStrongPrimealongllubits must be multiple of 128 and > 512amathaceilalogTllg՗DlgOTllleasieve_basewyafielda_rabinMillerTestarabin_miller_roundswparesultuCouln't find prime in field. Developer: Increase field_sizeainversewXweaGCDaincrementu
    Return a random strong *N*-bit prime number.
    In this context, *p* is a strong prime if *p-1* and *p+1* have at
    least one large prime factor.

    Args:
        N (integer): the exact length of the strong prime.
          It must be a multiple of 128 and > 512.
        e (integer): if provided, the returned prime (minus 1)
          will be coprime to *e* and thus suitable for RSA where
          *e* is the public exponent.
        false_positive_prob (float):
          The statistical probability for the result not to be actually a
          prime. It defaults to 10\ :sup:`-6`.
          Note that the real probability of a false-positive is far less. This is
          just the mathematically provable limit.
        randfunc (callable):
          A function that takes a parameter *N* and that returns
          a random byte string of such length.
          If omitted, :func:`Crypto.Random.get_random_bytes` is used.
    Return:
        The new strong prime.

    .. deprecated:: 3.0
        This function is for internal use only and may be renamed or removed in
        the future.
    uTest if a number *N* is a prime.

    Args:
        false_positive_prob (float):
          The statistical probability for the result not to be actually a
          prime. It defaults to 10\ :sup:`-6`.
          Note that the real probability of a false-positive is far less.
          This is just the mathematically provable limit.
        randfunc (callable):
          A function that takes a parameter *N* and that returns
          a random byte string of such length.
          If omitted, :func:`Crypto.Random.get_random_bytes` is used.

    Return:
        `True` if the input is indeed prime.
    uValues must be non-negativeabsru>Qgl@lu>Igl u>BldcalstripTduConvert a positive integer to a byte string using big endian encoding.

    If :data:`blocksize` is absent or zero, the byte string will
    be of minimal length.

    Otherwise, the length of the byte string is guaranteed to be a multiple
    of :data:`blocksize`. If necessary, zeroes (``\x00``) are added at the left.

    .. note::
        In Python 3, if you are sure that :data:`n` can fit into
        :data:`blocksize` bytes, you can simply use the native method instead::

            >>> n.to_bytes(blocksize, 'big')

        For instance::

            >>> n = 80
            >>> n.to_bytes(2, 'big')
            b'\x00P'

        However, and unlike this ``long_to_bytes()`` function,
        an ``OverflowError`` exception is raised if :data:`n` does not fit.
    aunpackaaccwsvConvert a byte string to a long integer (big endian).

    In Python 3.2+, use the native method instead::

        >>> int.from_bytes(s, 'big')

    For instance::

        >>> int.from_bytes(b'P', 'big')
        80

    This is (essentially) the inverse of :func:`long_to_bytes`.
    awarningsawarnTulong2str() has been replaced by long_to_bytes()along_to_bytesTustr2long() has been replaced by bytes_to_long()a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaCryptoTaRandomuCrypto.Util.py3compatTaiter_rangeaceil_divTnagcdagetPrimeTlfư>nTfư>nTlalong2strastr2longTNllllll
llllll%l)l+l/l5l;l=lClGlIlOlSlYlalelglklmlqllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
l
l
l
l
l
l
l
l
l
l
l
l
l
l
llllllllllllllllllllllllllllllllllllllll
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll l l l l l l l l l l l l l l!l!l!l!l!l!l!l!l!l!l!l!l!l!l!l!l"l"l"l"l"l"l"l"l"l"l"l"l"l#l#l#l#l#l#l#l#l#l#l#l#l#l#l#l#l$l$l$l$l$l$l$l$l$l$l$l$l$l$l$l$l%l%l%l%l%l%l%l%l%l%l%l%l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l&l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l(l(l(l(l(l(l(l(l(l(l(l(l)l)l)l)l)l)l)l)l)l)l)l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l+l+l+l+l+l+l+l+l+l+l+l+l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l.l.l.l.l.l.l.l.l.l.l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l2l2l2l2l2l2l2l2l2l3l3l3l3l3l3l3l3l3l3l3l3l3l3l4l4l4l4l4l4l4l4l4l4l4l4l4l4l4l4l5l5l5l5l5l5l5l5l5l5l5l5l5l5l5l5l6l6l6l6l6l6l6l6l6l6l6l6l6l6l6l6l7l7l7l7l7l7l7l7l7l7l7l8l8l8l8l8l8l8l8l8l8l8l8l8l9l9l9l9l9l9l9l9l9l9l9l9l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l<l<l<l<l<l<l<l<l<l<l<l<l<l<l=l=l=l=l=l=l=l=l=l=l=l=l=l=l=l>l>l>l>l>l>l>l>l>l>l>l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l@l@l@l@l@l@l@l@l@l@l@l@l@l@l@l@lAlAlAlAlAlAlAlAlAlAlAlAlAlBlBlBlBlBlBlBlBlBlBlBlClClClClClClClClClClClClClClClClDlDlDlDlDlDlDlDlDlDlDlDlDlDlDlDlElElElElElElElElElElElElElFlFlFlFlFlFlFlFlFlFlFlFlFlFlGlGlGlGlGlGlGlGlGlGlGlGlGlGlGlHlHlHlHlHlHlHlHlHlHlHlHlHlHlHlIlIlIlIlIlIlIlIlIlIlIlIlIlIlIlIlJlJlJlJlJlJlJlJlJlJlJlKlKlKlKlKlKlKlKlKlKlKlKlKlKlKlLlLlLlLlLlLlLlLlLlLlLlLlLlLlLlLlMlMlMlMlMlMlMlMlMlMlMlMlMlMlNlNlNlNlNlNlNlNlNlNlNlNlNlOlOlOlOlOlOlOlOlOlOlOlOlPlPlPlPlPlPlPlPlPlPlPlPlPlPlPlPlPlQlQlQlQlQlQlQlQlQlQlQlQlRlRlRlRlRlRlRlRlRlRlRlRlSlSlSlSlSlSlSlSlSlSlSlSlSlSlSlTlTlTlTlTlTlTlTlTlTlTlTlUlUlUlUlUlUlUlUlUlUlUlUlUlUlVlVlVlVlVlVlVlVlVlVlVlVlVlWlWlWlWlWlWlWlWlWlWlWlWlWlXlXlXlXlXlXlXlXlXlXlXlXlYlYlYlYlYlYlYlYlYlYlYlYlYlYlYlZlZlZlZlZlZlZlZlZlZl[l[l[l[l[l[l[l[l[l[l\l\l\l\l\l\l\l\l\l\l\l\l\l\l\l\l\l]l]l]l]l]l]l]l]l]l]l]l]l]l]l^l^l^l^l^l^l^l^l^l^l^l^l^l^l^l_l_l_l_l_l_l_l_l_l_l_l_l_l_l`l`l`l`l`l`l`l`l`l`l`l`l`lalalalalalalalalalalalalalalalalblblblblblblblblblblblblblblblblclclclclclclclclclclclcldldldldldldldldldldldldldldlelelelelelelelelelelelelelelelflflflflflflflflflflflflflflglglglglglglglglglglglhlhlhlhlhlhlhlhlhlhlhlhlilililililililililililililjljljljljljljljljljljljljljlklklklklklklklklklklklklklklllllllllllllllllllllllllllllllmlmlmlmlmlmlmlmlmlmlmlnlnlnlnlnlnlnlnlnlnlnlnlololololololololololplplplplplplplplplplplplplplplqlqlqlqlqlqlqlqlqlqlqlqlqlrlrlrlrlrlrlrlrlrlrlrlrlrlslslslslslslslslslslslslslslslslsltltltltltltltltltltltltltltlulululululululululululvlvlvlvlvlvlvlvlvlvlvlvlvlwlwlwlwlwlwlwlwlwlwlwlwlwlwlwlwlwlxlxlxlxlxlxlxlxlxlxlxlxlxlxlylylylylylylylylylylylylzlzlzlzlzlzlzlzlzlzlzlzlzlzlzlzl{l{l{l{l{l{l{l{l{l{l{l{l|l|l|l|l|l|l|l|l|l|l|l|l|l|l}l}l}l}l}l}l}l}l}l}l}l}l}l}l}l~l~l~l~l~l~l~l~l~l~l~l~llllllllllllllllllÀlŀl݀lllllllllllہl߁lllllllllllllقllllllllll˃llllllllllllÄlӄlՄlۄlllllllllllŅl˅lӅl݅lllllllllllφl׆llllllllllǇlχllllllllllllllňlˈlшlӈlوlllllllllllɉl׉lۉlllllllllɊlӊlՊllllllllllǋlًllllllllllllllÌlŌl݌llllllllllǍlɍlύlӍlՍlߍlllllllllllˎl͎lюlݎlllllllllllÏlˏlݏllllllllllllǐlՐlِlېllllllll͑lllllllllllŒlՒllllllllӓlߓllllllllllŔlהlݔllllllllÕlŕlՕlەlllllllllllÖlɖlٖllllllllll˗lٗlݗlߗlllllllllllllll˘l՘lטlllllllll͙llllllllllllllњlٚllllllllllɛlϛlכllllllllllllllϜlӜlߜlllllllllllll͝lѝlםlllllllllɞlllllllllllllllϟlٟl۟lllllllllŠlǠlӠllllllllɡlաlllllllllllllǢlɢlllllllllllˣlӣlߣlllllllllllälŤlˤllllllllllllålǥlɥlۥllllllllŦlǦl˦lݦlllllllllllۧlllllllllllllllɨlӨlըlߨllllllllllũlѩlߩllllllllllllϪlѪl۪llllllllllɫl٫llllllllllllllˬlͬlݬl߬lllllllllllխlllllllllllǮlͮl߮llllllllllůlѯlӯllllllllllհl۰lݰlllllllllllllǱlӱlձl߱llllllllŲl˲lͲlײlݲlllllllllѳl۳llllllllllllllllʹl۴lllllllllllӵllllllllllllɶl˶lllllllɷlշllllllllllllllǸl˸l͸lѸllllllllllùlɹlѹl׹lݹlllllllllllǺlϺlպlۺlllllllllllǻlӻl׻lݻllllllllllllllżlɼl׼lllllllllllٽllllllllǾl׾lݾllllllllllſlϿlտllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllǀlˀllllllllllɁlˁlׁlہllllllllllllÂlӂlقl߂llllllllllǃl߃lllllllllÄlńlɄlτllllllllllǅlυlՅl߅lllllllllllll͆lцlӆl׆l݆llllllllˇlՇlׇl݇llllllllllllǈlψllllllllll͉lllllllˊlϊlъl݊llllllllll͋lӋlՋlۋllllllllllllll͌llllllllllÍlōlύlэl׍llllllllllǎlَlێlllllllllllŏlǏlˏlݏlllllllllÐlѐllllllllϑlӑlllllllllllllŒl͒lђlגlllllllÓlϓlѓlۓllllllllllɔlϔl۔lߔlllllllllǕl˕l͕lѕlוllllllllזlݖlllllll՗lٗlۗlllllllllllǘlӘlݘllllllllllllřlݙlllllllllllۚlߚlllllllllśl˛lӛlٛlߛlllllllќlllllllllllllǝlϝlӝl۝llllllllllŞl˞lӞlٞlllllllllllllɟl՟lllllllllllllàlϠlӠlllllllllllšlߡllllllllŢlϢlѢllllllllllɣl٣lۣllllllllllǤlפllllllllllllllålťl˥lեlץllllllllllælզlllllllǧlקlݧllllllllŨl˨lϨllllllllllélllllllllll˪lתlݪlߪllllllllllllϫlllllllllllllllll˭lѭlӭlllllllllllllîlɮlѮlۮlݮllllllllïlͯlӯlٯlllllllllllѰllllllllllñlɱlϱlݱlllllllllllllǲlɲlӲlllllllllǳl˳lͳl׳llllllll˴lϴlմl״llllllllõlǵlϵllllllllllŶlѶlٶlllllllllllllŷl˷lϷlݷllllllllɸl͸l߸lllllllllll׹lٹlllllllllllպlۺllllllûllllllllllllǼlѼlӼl߼llllllllllllllllllþlӾllllllllllllllǿl߿llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllǀllllllllllӁlׁlفlllllllllllłlɂlۂlllllllllÃl̓lۃllllllllll˄l̈́lӄl݄lllllllllllυlՅlllllllllǆlɆlφlllllllllllllǇlˇlчlӇlllllllllՈl׈lllllllllllɉlωlӉllllllllǊlъlߊllllllllllËl׋lۋlllllllόlՌlٌlllllllllˍl͍lݍllllllllll׎llllllllllϏlՏllllllllllllӐlאlllllllllϑlՑlۑlݑlllllllllllllllӒlߒlllllllllll˓lٓlߓlllllllll˔lՔl۔lllllllllllÕlɕlٕllllllllllӖlٖlllllllll×lїl՗lחlݗlllllllllØl͘l٘llllllllљllllllllllɚlњlךlۚlllllllllӛlٛllllllllllǜl͜lќllllllllllɝlםlݝllllllllll͞l՞lߞllllllllllllşl͟lџllllllllllˠlϠlllllllllll͡llllllllעl٢lݢllllllllllllãlգlףlllllllllǤl٤lllllllllllllǥlllllllllæl˦lզlllllllllɧllllllllll˨l٨lߨllllllllllllũlݩllllllllllllllɪl٪lߪllllllllllǫl߫llllllllìlլlݬlllllllllílǭl٭llllllllllŮlͮl׮llllllllll˯lѯlۯlllllllllͰlհllllllllͱlױllllllllòlŲlϲlѲlײllllllllllllӳllllllllllllllѴlٴlݴlߴlllllllllõlɵlllllllllllölնllllllllllǷl˷lͷllllllllɸlѸllllllllllllllǹlϹlӹlչl߹llllllllӺl׺lߺllllllllllŻl˻lϻllllllllllllͼlϼlټlۼllllllllllͽlѽl׽llllllllllll˾lվl۾lllllllllllÿlǿlտlllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllɀlрl݀llllllllllllllÁlllllllllll˂lقllllllllllɃllllllllllllلllllllll߅llllllllņlɆlφlllllllllÇl͇lۇlllllllllllňlӈl݈llllllllllˉllllllllllÊlɊlllllllllll͋lًllllllllllÌlŌlьlՌllllllllllllǍlɍlٍlllllllǎlюlӎlݎllllllllllllÏlˏlяlۏllllllllllÐlߐlllllllllllǑl͑lّlߑlllllllllגlےlݒllllllllllɓlՓlۓlllllllll˔llllllllllוllllllՖlۖlߖlllllllllllllחllllllll˘lϘlۘlllllllllll͙lәlՙlllllllllllӚllllllllśl˛lћllllllllǜlɜl͜lӜlllllllllŝlٝlݝllllllllllўlמl۞lllllllllٟlllllll͠lllllllllálšlɡlסlllllllllǢllllllllllllӣlߣllllllllllllllϤlդlݤllllllllllϥlllllllllllѦlצl٦llllllllllϧlۧlݧlllllllllɨlllllllllũlөlݩlߩlllllllllllêlŪlϪlժlתllllllllϫl٫llllllllllŬlѬl٬lݬl߬llllllllllllílۭlݭlllllllllllllϮlllllllllѯl߯llllllllllѰlllllllllllǱlɱlϱl۱llllllllllllӲl߲lllllllllll˳llllllllllllʹlϴlմlߴllllllllllllllllllնllllllll÷lǷlɷlշl߷llllllllllllݸlllllllllŹl˹lϹl۹llllllllllllͺlϺlӺlllllllllݻllllll˼l׼lݼlllllllllɽlͽlٽlllllllll˾lѾlپlllllllllllɿlϿlѿlݿlllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllӀl׀lـl݀llllllllсlہl݁llllllllllllllՂlۂllllllllŃlӃlكlllllllllÄl˄lllllllllllllɅlۅlllllllņlǆlˆl݆llllllllÇlɇlˇlׇllllllllψlllllllllllllllllllllÊlŊlɊllllllllǋlɋlϋlًlߋlllllllllьllllllllllllōlύlllllllllώlllllllllǏlяlݏlllllllϐlՐlېlݐllllllllÑlӑlՑlߑlllllllll˒lӒlْlݒlߒllllllllœlϓlՓlۓllllllllllllǔlϔllllllllӕlٕlݕlllllllllɖl˖lۖlllllllӗlllllllllllŘl٘lߘllllllllləlϙlљlݙllllllllllӚl՚lllllllllǛl˛l͛lݛlllllllÜlɜlݜllllllllllllǝlϝl՝lllllllŞlǞl͞lӞlמlݞllllllllllllllàlߠlllllllllllllߡllllllllllllŢlϢlѢlբlllllllllllãlͣlۣllllllllllǤllllllllɥlץllllllllælɦlͦlզllllllllŧlѧlllllllllèlϨlѨlݨlllllllllөlթl٩llllllllllתlllllllllëlիl׫lݫllllllllllllǬlͬlϬl٬l۬llllllllllllǭl׭llllllllŮlɮlϮlllllllllllïlǯlӯlllllllllllllñlűllllllllͲl۲lllllllll˳llllllôl˴lѴlմl״l۴llllllõlյlٵlߵllllllllllllllǶl׶llllllllllѷl۷lllllllllllllllllllllll͹l׹lllllllllźlɺl׺llllllllllllٻlۻl߻lllllllllllżlǼlѼlټllllllŽlѽl۽lݽllllllllllþlӾlllllllllllllſl˿lӿl׿lٿlllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllɀlӀlՀllllllllllllˁlׁllllllllÂlςlтllllllllllՃlۃlllllllllǄl̈́lфlӄl݄l߄llllllllllŅlɅlυllllllllllllÆl͆llllllllll͇lهllllllllňlɈlшllllllÉlǉlɉl߉llllllllll͊lӊlߊllllllllllˋlыllllllllllllÌlӌlٌlllllllˍlэlٍlllllllɎl׎lݎllllllllÏlɏlُllllllllllllߐlllllllllllÑlőlϑllllllllՒlےlߒllllllll˓lדlݓllllllÔlɔlϔlݔllllllllǕlٕlllllllllllll͖lӖlזlٖllllllll˗l՗lݗllllllllllɘlۘllllllllllllřl͙lߙlllllllllŚlךlۚlllllllllɛl͛lϛllllllllllŜl˜lٜllllllllllllll՝lםl۝llllllllllɞl՞lٞlllllllllllןlߟllllllllѠlllllllllllllϡlӡlllllllllllllllllˣlףlݣllllllllǤl٤lߤllllllllllӥlllllllŦllllllllۧlߧllllllllllרlllllllllllél۩lllllllll٪lllllllllѫl߫llllllllllllìlɬlլlllllllllllӭlխllllllllllٮl߮llllllllllɯlϯllllllllϰlٰl߰lllllllll˱lӱlllllllllluCrypto\Util\number.pyu<module Crypto.Util.number>Twnaroundsarandfuncan_1wbwmatestedwiwawzacompositewrTwsaaccaunpackalengthaextrawiTwnwdwrwqTwNarandfuncanumberTwNarandfuncwSaodd_bitsarand_bitsavalueTwNarandfuncavalueTwawbarandfuncarange_abitsavalueTwNweafalse_positive_probarandfuncarabin_miller_roundswxalower_boundaupper_boundwXwpwiwyafieldaprimeaoffsetwjaresultacompositeatmpatmp1atmp2wRaincrementais_possible_primeTwuwvTwNafalse_positive_probarandfuncwparoundsTwnablocksizeTwnablocksizearesultapackabsrabresultatarget_lenTwNTwsu.Crypto.Util.py3compat,aencodeTulatin-1ulatin-1atobytesadecodeuReturn an immutable copy of a sequence (byte string, byte array, memoryview)
    in a certain interval [start:seq]uCompatibility code for handling string/bytes changes from Python 2.x to Py3k

In Python 2.x, strings (of type ''str'') contain binary data, including encoded
Unicode text (e.g. UTF-8).  The separate type ''unicode'' holds Unicode text.
Unicode literals are specified via the u'...' prefix.  Indexing or slicing
either type always produces a string of the same type as the original.
Data read from a file is always of '''str'' type.

In Python 3.x, strings (type ''str'') may only contain Unicode text. The u'...'
prefix and the ''unicode'' type are now redundant.  A new type (called
''bytes'') has to be used for binary data (including any particular
''encoding'' of a string).  The b'...' prefix allows one to specify a binary
literal.  Indexing or slicing a string produces another string.  Slicing a byte
string produces another byte string, but the indexing operation produces an
integer.  Data read from a file is of '''str'' type if the file was opened in
text mode, or of ''bytes'' type otherwise.

Since PyCrypto aims at supporting both Python 2.x and 3.x, the following helper
functions are used to keep the rest of the library as independent as possible
from the actual Python version.

In general, the code should always deal with binary strings, and use integers
instead of 1-byte character strings.

b(s)
    Take a text string literal (with no prefix or with u'...' prefix) and
    make a byte string.
bchr(c)
    Take an integer and make a 1-character byte string.
bord(c)
    Take the result of indexing on a byte string and make an integer.
tobytes(s)
    Take a text string, a byte string, or a sequence of character taken from
    a byte string and make a byte string.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaabclwbabchrabstrabordatostrabyte_stringaconcat_buffersaBytesIOaStringIOgamaxintaiter_rangeais_native_intais_stringais_bytesTaABCaABCaFileNotFoundErrora_copy_bytesuCrypto\Util\py3compat.pyu<module Crypto.Util.py3compat>TastartaendaseqTwsTwawbTwxTwsaencodingTabsu.Crypto.Util.strxor$uOnly byte strings of equal length can be xoredacreate_string_bufferais_writeable_bufferuoutput must be a bytearray or a writeable memoryviewuoutput must have the same length as the input  (%d bytes)a_raw_strxorastrxorac_uint8_ptrac_size_taget_raw_bufferuFrom two byte strings of equal length,
    create a third one which is the byte-by-byte XOR of the two.

    Args:
      term1 (bytes/bytearray/memoryview):
        The first byte string to XOR.
      term2 (bytes/bytearray/memoryview):
        The second byte string to XOR.
      output (bytearray/memoryview):
        The location where the result will be written to.
        It must have the same length as ``term1`` and ``term2``.
        If ``None``, the result is returned.
    :Return:
        If ``output`` is ``None``, a new byte string with the result.
        Otherwise ``None``.

    .. note::
        ``term1`` and ``term2`` must have the same length.
    lluc must be in range(256)astrxor_catermuFrom a byte string, create a second one of equal length
    where each byte is XOR-red with the same value.

    Args:
      term(bytes/bytearray/memoryview):
        The byte string to XOR.
      c (int):
        Every byte in the string will be XOR-ed with this value.
        It must be between 0 and 255 (included).
      output (None or bytearray/memoryview):
        The location where the result will be written to.
        It must have the same length as ``term``.
        If ``None``, the result is returned.

    Return:
        If ``output`` is ``None``, a new ``bytes`` string with the result.
        Otherwise ``None``.
    uVery fast XOR - check conditions!a__doc__a__file__a__spec__aoriginahas_locationa__cached__uCrypto.Util._raw_apiTaload_pycryptodome_raw_libac_size_tacreate_string_bufferaget_raw_bufferac_uint8_ptrais_writeable_bufferaload_pycryptodome_raw_libTuCrypto.Util._strxoru
                    void strxor(const uint8_t *in1,
                                const uint8_t *in2,
                                uint8_t *out, size_t len);
                    void strxor_c(const uint8_t *in,
                                  uint8_t c,
                                  uint8_t *out,
                                  size_t len);
                    Tna_strxor_directuCrypto\Util\strxor.pyu<module Crypto.Util.strxor>Taterm1aterm2aresultTaterm1aterm2aoutputaresultTatermwcaoutputaresultu.CryptoBa__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_Cryptou\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__LaCipheraHashaProtocolaPublicKeyaUtilaSignatureaIOaMatha__all__Tllw0aversion_infow.a__version__uCrypto\__init__.pyu<module Crypto>u.OpenSSL.SSLwa_problemsa_raise_current_erroraErrorapopTlu
        Raise an exception from the OpenSSL error queue or that was previously
        captured whe running a callback.
        a_CallbackExceptionHelpera__init__awrapsawrapperu_VerifyHelper.__init__.<locals>.wrappera_ffiacallbackuint (*)(int, X509_STORE_CTX *)a_libaX509_STORE_CTX_get_current_certaX509_up_refaX509a_from_raw_x509_ptraX509_STORE_CTX_get_erroraX509_STORE_CTX_get_error_depthaSSL_get_ex_data_X509_STORE_CTX_idxaX509_STORE_CTX_get_ex_dataaConnectiona_reverse_mappingaselfaappendlaX509_STORE_CTX_set_erroraX509_V_OKlu_ALPNSelectHelper.__init__.<locals>.wrapperuint (*)(SSL *, unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)abuffer:nnnainstraprotolistaNO_OVERLAPPING_PROTOCOLScuALPN callback must return a bytestring or the special NO_OVERLAPPING_PROTOCOLS sentinel value.anewuunsigned char *uunsigned char[]a_alpn_select_callback_argsaSSL_TLSEXT_ERR_NOACKaSSL_TLSEXT_ERR_OKaSSL_TLSEXT_ERR_ALERT_FATALu_OCSPServerCallbackHelper.__init__.<locals>.wrapperuint (*)(SSL *, void *)aNULLafrom_handleuOCSP callback must return a bytestring.laOPENSSL_mallocaSSL_set_tlsext_status_ocsp_resplu_OCSPClientCallbackHelper.__init__.<locals>.wrapperTuunsigned char **aSSL_get_tlsext_status_ocsp_respqu_CookieGenerateCallbackHelper.__init__.<locals>.wrapperuint (*)(SSL *, unsigned char *, unsigned int *)u_CookieVerifyCallbackHelper.__init__.<locals>.wrapperuint (*)(SSL *, unsigned char *, unsigned int)afilenouargument must be an int, or have a fileno() method.ufile descriptor cannot be a negative integer (wiw)uastringaOpenSSL_versionu
    Return a string describing the version of OpenSSL in use.

    :param type: One of the :const:`OPENSSL_` constants defined in this module.
    a_requires_decoratoru_make_requires.<locals>._requires_decoratoru
    Builds a decorator that ensures that functions that rely on OpenSSL
    functions that are not present in this build raise NotImplementedError,
    rather than AttributeError coming out of cryptography.

    :param flag: A cryptography flag that guards the functions, e.g.
        ``Cryptography_HAS_NEXTPROTONEG``.
    :param error: The string to be used in the exception if the flag is false.
    aflagaexplodeu_make_requires.<locals>._requires_decorator.<locals>.explodeaerrorumethod must be an integera_methodsutoo many values to unpack (expected 2)uNo such protocola_openssl_assertaSSL_CTX_newagcaSSL_CTX_freea_contexta_passphrase_helpera_passphrase_callbacka_passphrase_userdataa_verify_helpera_verify_callbacka_info_callbacka_keylog_callbacka_tlsext_servername_callbacka_app_dataa_alpn_select_helpera_alpn_select_callbacka_ocsp_helpera_ocsp_callbacka_ocsp_dataa_cookie_generate_helpera_cookie_verify_helperaset_modeaSSL_MODE_ENABLE_PARTIAL_WRITEaset_min_proto_versionaset_max_proto_versionaSSL_CTX_set_min_proto_versionu
        Set the minimum supported protocol version. Setting the minimum
        version to 0 will enable protocol versions down to the lowest version
        supported by the library.

        If the underlying OpenSSL build is missing support for the selected
        version, this method will raise an exception.
        aSSL_CTX_set_max_proto_versionu
        Set the maximum supported protocol version. Setting the maximum
        version to 0 will enable protocol versions up to the highest version
        supported by the library.

        If the underlying OpenSSL build is missing support for the selected
        version, this method will raise an exception.
        a_path_bytesaSSL_CTX_load_verify_locationsu
        Let SSL know where we can find trusted certificates for the certificate
        chain.  Note that the certificates have to be in PEM format.

        If capath is passed, it must be a directory prepared using the
        ``c_rehash`` tool included with OpenSSL.  Either, but not both, of
        *pemfile* or *capath* may be :data:`None`.

        :param cafile: In which file we can find the certificates (``bytes`` or
            ``str``).
        :param capath: In which directory we can find the certificates
            (``bytes`` or ``str``).

        :return: None
        DasizeaverifyauserdataareturnaintaboolaAnyabytesuContext._wrap_callback.<locals>.wrappera_PassphraseHelperaFILETYPE_PEMDamore_argsatruncatetpacallableucallback must be callablea_wrap_callbackaSSL_CTX_set_default_passwd_cbu
        Set the passphrase callback.  This function will be called
        when a private key with a passphrase is loaded.

        :param callback: The Python callback to use.  This must accept three
            positional arguments.  First, an integer giving the maximum length
            of the passphrase it may return.  If the returned passphrase is
            longer than this, it will be truncated.  Second, a boolean value
            which will be true if the user should be prompted for the
            passphrase twice and the callback should verify that the two values
            supplied are equal. Third, the value given as the *userdata*
            parameter to :meth:`set_passwd_cb`.  The *callback* must return
            a byte string. If an error occurs, *callback* should return a false
            value (e.g. an empty string).
        :param userdata: (optional) A Python object which will be given as
                         argument to the callback
        :return: None
        aSSL_CTX_set_default_verify_pathsaX509_get_default_cert_dir_envadecodeTaasciiaX509_get_default_cert_file_enva_check_env_vars_setaX509_get_default_cert_diraX509_get_default_cert_filea_CRYPTOGRAPHY_MANYLINUX_CA_DIRa_CRYPTOGRAPHY_MANYLINUX_CA_FILEa_fallback_default_verify_pathsa_CERTIFICATE_FILE_LOCATIONSa_CERTIFICATE_PATH_LOCATIONSu
        Specify that the platform provided CA certificates are to be used for
        verification purposes. This method has some caveats related to the
        binary wheels that cryptography (pyOpenSSL's primary dependency) ships:

        *   macOS will only load certificates using this method if the user has
            the ``openssl@1.1`` `Homebrew <https://brew.sh>`_ formula installed
            in the default location.
        *   Windows will not work.
        *   manylinux cryptography wheels will work on most common Linux
            distributions in pyOpenSSL 17.1.0 and above.  pyOpenSSL detects the
            manylinux wheel and attempts to load roots via a fallback path.

        :return: None
        aenvironagetu
        Check to see if the default cert dir/file environment vars are present.

        :return: bool
        aload_verify_locationsu
        Default verify paths are based on the compiled version of OpenSSL.
        However, when pyca/cryptography is compiled as a manylinux wheel
        that compiled location can potentially be wrong. So, like Go, we
        will try a predefined set of paths and attempt to load roots
        from there.

        :return: None
        aSSL_CTX_use_certificate_chain_fileu
        Load a certificate chain from a file.

        :param certfile: The name of the certificate chain file (``bytes`` or
            ``str``).  Must be PEM encoded.

        :return: None
        ufiletype must be an integeraSSL_CTX_use_certificate_fileu
        Load a certificate from a file

        :param certfile: The name of the certificate file (``bytes`` or
            ``str``).
        :param filetype: (optional) The encoding of the file, which is either
            :const:`FILETYPE_PEM` or :const:`FILETYPE_ASN1`.  The default is
            :const:`FILETYPE_PEM`.

        :return: None
        afrom_cryptographyawarningsawarnuPassing pyOpenSSL X509 objects is deprecated. You should use a cryptography.x509.Certificate instead.aDeprecationWarningDastacklevellaSSL_CTX_use_certificatea_x509u
        Load a certificate from a X509 object

        :param cert: The X509 object
        :return: None
        aX509_dupaSSL_CTX_add_extra_chain_certaX509_freeu
        Add certificate to chain

        :param certobj: The X509 certificate object to add to the chain
        :return: None
        araise_if_problemaSSL_CTX_use_PrivateKey_filea_raise_passphrase_exceptionu
        Load a private key from a file

        :param keyfile: The name of the key file (``bytes`` or ``str``)
        :param filetype: (optional) The encoding of the file, which is either
            :const:`FILETYPE_PEM` or :const:`FILETYPE_ASN1`.  The default is
            :const:`FILETYPE_PEM`.

        :return: None
        aPKeyafrom_cryptography_keyuPassing pyOpenSSL PKey objects is deprecated. You should use a cryptography private key instead.aSSL_CTX_use_PrivateKeya_pkeyu
        Load a private key from a PKey object

        :param pkey: The PKey object
        :return: None
        aSSL_CTX_check_private_keyu
        Check if the private key (loaded with :meth:`use_privatekey`) matches
        the certificate (loaded with :meth:`use_certificate`)

        :return: :data:`None` (raises :exc:`Error` if something's wrong)
        aSSL_load_client_CA_filea_text_to_bytes_and_warnacafileaSSL_CTX_set_client_CA_listu
        Load the trusted certificates that will be sent to the client.  Does
        not actually imply any of the certificates are trusted; that must be
        configured separately.

        :param bytes cafile: The path to a certificates file in PEM format.
        :return: None
        abufaSSL_CTX_set_session_id_contextu
        Set the session id to *buf* within which a session can be reused for
        this Context object.  This is needed when doing session resumption,
        because there is no way for a stored session to know which Context
        object it is associated with.

        :param bytes buf: The session id.

        :returns: None
        umode must be an integeraSSL_CTX_set_session_cache_modeu
        Set the behavior of the session cache used by all connections using
        this Context.  The previously set mode is returned.  See
        :const:`SESS_CACHE_*` for details about particular modes.

        :param mode: One or more of the SESS_CACHE_* flags (combine using
            bitwise or)
        :returns: The previously set caching mode.

        .. versionadded:: 0.14
        aSSL_CTX_get_session_cache_modeu
        Get the current session cache mode.

        :returns: The currently used cache mode.

        .. versionadded:: 0.14
        aSSL_CTX_set_verifya_VerifyHelperu
        Set the verification flags for this Context object to *mode* and
        specify that *callback* should be used for verification callbacks.

        :param mode: The verify mode, this should be one of
            :const:`VERIFY_NONE` and :const:`VERIFY_PEER`. If
            :const:`VERIFY_PEER` is used, *mode* can be OR:ed with
            :const:`VERIFY_FAIL_IF_NO_PEER_CERT` and
            :const:`VERIFY_CLIENT_ONCE` to further control the behaviour.
        :param callback: The optional Python verification callback to use.
            This should take five arguments: A Connection object, an X509
            object, and three integer variables, which are in turn potential
            error number, error depth and return code. *callback* should
            return True if verification passes and False otherwise.
            If omitted, OpenSSL's default verification is used.
        :return: None

        See SSL_CTX_set_verify(3SSL) for further details.
        udepth must be an integeraSSL_CTX_set_verify_depthu
        Set the maximum depth for the certificate chain verification that shall
        be allowed for this Context object.

        :param depth: An integer specifying the verify depth
        :return: None
        aSSL_CTX_get_verify_modeu
        Retrieve the Context object's verify mode, as set by
        :meth:`set_verify`.

        :return: The verify mode
        aSSL_CTX_get_verify_depthu
        Retrieve the Context object's verify depth, as set by
        :meth:`set_verify_depth`.

        :return: The verify depth
        aBIO_new_filedraBIO_freeaPEM_read_bio_DHparamsaDH_freeaSSL_CTX_set_tmp_dhu
        Load parameters for Ephemeral Diffie-Hellman

        :param dhfile: The file to load EDH parameters from (``bytes`` or
            ``str``).

        :return: None
        a_EllipticCurveuPassing pyOpenSSL elliptic curves to set_tmp_ecdh is deprecated. You should use cryptography's elliptic curve types instead.aSSL_CTX_set_tmp_ecdha_to_EC_KEYanameasecp192r1aprime192v1asecp256r1aprime256v1aOBJ_txt2nidaencodeaNID_undefaEC_KEY_new_by_curve_nameaEC_KEY_freeu
        Select a curve to use for ECDHE key exchange.

        :param curve: A curve instance from cryptography
            (:class:`~cryptogragraphy.hazmat.primitives.asymmetric.ec.EllipticCurve`).
            Alternatively (deprecated) a curve object from either
            :meth:`OpenSSL.crypto.get_elliptic_curve` or
            :meth:`OpenSSL.crypto.get_elliptic_curves`.

        :return: None
        acipher_listucipher_list must be a byte string.aSSL_CTX_set_cipher_listaget_cipher_listaTLS_AES_256_GCM_SHA384aTLS_CHACHA20_POLY1305_SHA256aTLS_AES_128_GCM_SHA256TuSSL routinesaSSL_CTX_set_cipher_listuno cipher matchu
        Set the list of ciphers to be used in this context.

        See the OpenSSL manual for more information (e.g.
        :manpage:`ciphers(1)`).

        :param bytes cipher_list: An OpenSSL cipher string.
        :return: None
        ask_X509_NAME_new_nullaX509Nameuclient CAs must be X509Name objects, not a__name__u objectsaX509_NAME_dupa_nameask_X509_NAME_pushaname_stackaX509_NAME_freeask_X509_NAME_freeu
        Set the list of preferred client certificate signers for this server
        context.

        This list of certificate authorities will be sent to the client when
        the server requests a client certificate.

        :param certificate_authorities: a sequence of X509Names.
        :return: None

        .. versionadded:: 0.10
        aSSL_CTX_add_client_CAu
        Add the CA certificate to the list of preferred signers for this
        context.

        The list of certificate authorities will be sent to the client when the
        server requests a client certificate.

        :param certificate_authority: certificate authority's X509 certificate.
        :return: None

        .. versionadded:: 0.10
        utimeout must be an integeraSSL_CTX_set_timeoutu
        Set the timeout for newly created sessions for this Context object to
        *timeout*.  The default value is 300 seconds. See the OpenSSL manual
        for more information (e.g. :manpage:`SSL_CTX_set_timeout(3)`).

        :param timeout: The timeout in (whole) seconds
        :return: The previous session timeout
        aSSL_CTX_get_timeoutu
        Retrieve session timeout, as set by :meth:`set_timeout`. The default
        is 300 seconds.

        :return: The session timeout
        uContext.set_info_callback.<locals>.wrapperuvoid (*)(const SSL *, int, int)aSSL_CTX_set_info_callbacku
        Set the information callback to *callback*. This function will be
        called from time to time during SSL handshakes.

        :param callback: The Python callback to use.  This should take three
            arguments: a Connection object and two integers.  The first integer
            specifies where in the SSL handshake the function was called, and
            the other the return code from a (possibly failed) internal
            function call.
        :return: None
        uContext.set_keylog_callback.<locals>.wrapperuvoid (*)(const SSL *, const char *)aSSL_CTX_set_keylog_callbacku
        Set the TLS key logging callback to *callback*. This function will be
        called whenever TLS key material is generated or received, in order
        to allow applications to store this keying material for debugging
        purposes.

        :param callback: The Python callback to use.  This should take two
            arguments: a Connection object and a bytestring that contains
            the key material in the format used by NSS for its SSLKEYLOGFILE
            debugging output.
        :return: None
        u
        Get the application data (supplied via :meth:`set_app_data()`)

        :return: The application data
        u
        Set the application data (will be returned from get_app_data())

        :param data: Any Python object
        :return: None
        aSSL_CTX_get_cert_storeaX509Storea__new__a_storeu
        Get the certificate store for the context.  This can be used to add
        "trusted" certificates without using the
        :meth:`load_verify_locations` method.

        :return: A X509Store object or None if it does not have one.
        uoptions must be an integeraSSL_CTX_set_optionsu
        Add options. Options set before are not cleared!
        This method should be used with the :const:`OP_*` constants.

        :param options: The options to add.
        :return: The new option bitmask.
        aSSL_CTX_set_modeu
        Add modes via bitmask. Modes set before are not cleared!  This method
        should be used with the :const:`MODE_*` constants.

        :param mode: The mode to add.
        :return: The new mode bitmask.
        uContext.set_tlsext_servername_callback.<locals>.wrapperuint (*)(SSL *, int *, void *)aSSL_CTX_set_tlsext_servername_callbacku
        Specify a callback function to be called when clients specify a server
        name.

        :param callback: The callback function.  It will be invoked with one
            argument, the Connection instance.

        .. versionadded:: 0.13
        uprofiles must be a byte string.aSSL_CTX_set_tlsext_use_srtpu
        Enable support for negotiating SRTP keying material.

        :param bytes profiles: A colon delimited list of protection profile
            names, like ``b'SRTP_AES128_CM_SHA1_80:SRTP_AES128_CM_SHA1_32'``.
        :return: None
        uat least one protocol must be specifiedachainafrom_iterableaSSL_CTX_set_alpn_protosu
        Specify the protocols that the client is prepared to speak after the
        TLS connection has been negotiated using Application Layer Protocol
        Negotiation.

        :param protos: A list of the protocols to be offered to the server.
            This list should be a Python list of bytestrings representing the
            protocols to offer, e.g. ``[b'http/1.1', b'spdy/2']``.
        u<genexpr>uContext.set_alpn_protos.<locals>.<genexpr>a_ALPNSelectHelperaSSL_CTX_set_alpn_select_cbu
        Specify a callback function that will be called on the server when a
        client offers protocols using ALPN.

        :param callback: The callback function.  It will be invoked with two
            arguments: the Connection, and a list of offered protocols as
            bytestrings, e.g ``[b'http/1.1', b'spdy/2']``.  It can return
            one of those bytestrings to indicate the chosen protocol, the
            empty bytestring to terminate the TLS connection, or the
            :py:obj:`NO_OVERLAPPING_PROTOCOLS` to indicate that no offered
            protocol was selected, but that the connection should not be
            aborted.
        anew_handleaSSL_CTX_set_tlsext_status_cbaSSL_CTX_set_tlsext_status_argu
        This internal helper does the common work for
        ``set_ocsp_server_callback`` and ``set_ocsp_client_callback``, which is
        almost all of it.
        a_OCSPServerCallbackHelpera_set_ocsp_callbacku
        Set a callback to provide OCSP data to be stapled to the TLS handshake
        on the server side.

        :param callback: The callback function. It will be invoked with two
            arguments: the Connection, and the optional arbitrary data you have
            provided. The callback must return a bytestring that contains the
            OCSP data to staple to the handshake. If no OCSP data is available
            for this connection, return the empty bytestring.
        :param data: Some opaque data that will be passed into the callback
            function when called. This can be used to avoid needing to do
            complex data lookups or to keep track of what context is being
            used. This parameter is optional.
        a_OCSPClientCallbackHelperu
        Set a callback to validate OCSP data stapled to the TLS handshake on
        the client side.

        :param callback: The callback function. It will be invoked with three
            arguments: the Connection, a bytestring containing the stapled OCSP
            assertion, and the optional arbitrary data you have provided. The
            callback must return a boolean that indicates the result of
            validating the OCSP data: ``True`` if the OCSP data is valid and
            the certificate can be trusted, or ``False`` if either the OCSP
            data is invalid or the certificate has been revoked.
        :param data: Some opaque data that will be passed into the callback
            function when called. This can be used to avoid needing to do
            complex data lookups or to keep track of what context is being
            used. This parameter is optional.
        a_CookieGenerateCallbackHelperaSSL_CTX_set_cookie_generate_cba_CookieVerifyCallbackHelperaSSL_CTX_set_cookie_verify_cbaContextucontext must be a Context instanceaSSL_newaSSL_freea_sslaSSL_set_modeaSSL_MODE_AUTO_RETRYa_socketaBIO_newaBIO_s_mema_into_ssla_from_sslaSSL_set_bioaSSL_set_fda_asFileDescriptoru
        Create a new Connection object, using the given OpenSSL.SSL.Context
        instance and socket.

        :param context: An SSL Context to use for this connection
        :param socket: The socket to use for transport layer
        w'u' object has no attribute 'u
        Look up attributes on the wrapped socket object if they are not found
        on the Connection object.
        aSSL_get_erroraSSL_ERROR_WANT_READaWantReadErroraSSL_ERROR_WANT_WRITEaWantWriteErroraSSL_ERROR_ZERO_RETURNaZeroReturnErroraSSL_ERROR_WANT_X509_LOOKUPaWantX509LookupErroraSSL_ERROR_SYSCALLagetwinerroraERR_peek_erroraSysCallErroraerrorcodeTquUnexpected EOFaSSL_ERROR_SSLaERR_GET_REASONaCryptography_HAS_UNEXPECTED_EOF_WHILE_READINGaSSL_R_UNEXPECTED_EOF_WHILE_READINGaERR_clear_erroraSSL_ERROR_NONEu
        Retrieve the :class:`Context` object associated with this
        :class:`Connection`.
        aSSL_set_SSL_CTXu
        Switch this connection to a new session context.

        :param context: A :class:`Context` instance giving the new session
            context to use.
        aSSL_get_servernameaTLSEXT_NAMETYPE_host_nameu
        Retrieve the servername extension value if provided in the client hello
        message, or None if there wasn't one.

        :return: A byte string giving the server name or :data:`None`.

        .. versionadded:: 0.13
        aSSL_set_verifyu
        Override the Context object's verification flags for this specific
        connection. See :py:meth:`Context.set_verify` for details.
        aSSL_get_verify_modeu
        Retrieve the Connection object's verify mode, as set by
        :meth:`set_verify`.

        :return: The verify mode
        aSSL_use_certificateaSSL_use_PrivateKeyaSSL_set_mtuu
        For DTLS, set the maximum UDP payload size (*not* including IP/UDP
        overhead).

        Note that you might have to set :data:`OP_NO_QUERY_MTU` to prevent
        OpenSSL from spontaneously clearing this.

        :param mtu: An integer giving the maximum transmission unit.

        .. versionadded:: 21.1
        aDTLS_get_data_mtuurequires OpenSSL 1.1.1 or betteru
        For DTLS, get the maximum size of unencrypted data you can pass to
        :meth:`write` without exceeding the MTU (as passed to
        :meth:`set_ciphertext_mtu`).

        :return: The effective MTU as an integer.

        .. versionadded:: 21.1
        uname must be a byte stringduname must not contain NUL byteaSSL_set_tlsext_host_nameu
        Set the value of the servername extension to send in the client hello.

        :param name: A byte string giving the name.

        .. versionadded:: 0.13
        aSSL_pendingu
        Get the number of bytes that can be safely read from the SSL buffer
        (**not** the underlying transport buffer).

        :return: The number of bytes available in the receive buffer.
        afrom_buffera__enter__a__exit__guCannot send more than 2**31-1 bytes at once.aSSL_writea_raise_ssl_errorTnnnu
        Send data on the connection. NOTE: If you get one of the WantRead,
        WantWrite or WantX509Lookup exceptions on this, you have to call the
        method again with the SAME buffer.

        :param buf: The string, buffer or memoryview to send
        :param flags: (optional) Included for compatibility with the socket
                      API, the value is ignored
        :return: The number of bytes written
        aleft_to_sendadataatotal_sentaminu
        Send "all" data on the connection. This calls send() repeatedly until
        all data is sent. If an error occurs, it's impossible to tell how much
        data has been sent.

        :param buf: The string, buffer or memoryview to send
        :param flags: (optional) Included for compatibility with the socket
                      API, the value is ignored
        :return: The number of bytes written
        a_no_zero_allocatoruchar[]asocketaMSG_PEEKaSSL_peekaSSL_readu
        Receive data on the connection.

        :param bufsiz: The maximum number of bytes to read
        :param flags: (optional) The only supported flag is ``MSG_PEEK``,
            all other flags are ignored.
        :return: The string read from the Connection
        u
        Receive data on the connection and copy it directly into the provided
        buffer, rather than creating a new string.

        :param buffer: The buffer to copy into.
        :param nbytes: (optional) The maximum number of bytes to read into the
            buffer. If not present, defaults to the size of the buffer. If
            larger than the size of the buffer, is reduced to the size of the
            buffer.
        :param flags: (optional) The only supported flag is ``MSG_PEEK``,
            all other flags are ignored.
        :return: The number of bytes read into the buffer.
        aBIO_should_retryaBIO_should_readaBIO_should_writeaBIO_should_io_specialuunknown bio failureuConnection sock was not Noneubufsiz must be an integeraBIO_reada_handle_bio_errorsu
        If the Connection was created with a memory BIO, this method can be
        used to read bytes from the write end of that memory BIO.  Many
        Connection methods will add bytes which must be read in this manner or
        the buffer will eventually fill up and the Connection will be able to
        take no further actions.

        :param bufsiz: The maximum number of bytes to read
        :return: The string read.
        aBIO_writeu
        If the Connection was created with a memory BIO, this method can be
        used to add bytes to the read end of that memory BIO.  The Connection
        can then read the bytes (for example, in response to a call to
        :meth:`recv`).

        :param buf: The string to put into the memory BIO.
        :return: The number of bytes written
        arenegotiate_pendingaSSL_renegotiateu
        Renegotiate the session.

        :return: True if the renegotiation can be started, False otherwise
        aSSL_do_handshakeu
        Perform an SSL handshake (usually called after :meth:`renegotiate` or
        one of :meth:`set_accept_state` or :meth:`set_connect_state`). This can
        raise the same exceptions as :meth:`send` and :meth:`recv`.

        :return: None.
        aSSL_renegotiate_pendingu
        Check if there's a renegotiation in progress, it will return False once
        a renegotiation is finished.

        :return: Whether there's a renegotiation in progress
        aSSL_total_renegotiationsu
        Find out the total number of renegotiations.

        :return: The number of renegotiations.
        aSSL_set_connect_stateaconnectu
        Call the :meth:`connect` method of the underlying socket and set up SSL
        on the socket, using the :class:`Context` object supplied to this
        :class:`Connection` object at creation.

        :param addr: A remote address
        :return: What the socket's connect method returns
        aconnect_exaset_connect_stateu
        Call the :meth:`connect_ex` method of the underlying socket and set up
        SSL on the socket, using the Context object supplied to this Connection
        object at creation. Note that if the :meth:`connect_ex` method of the
        socket doesn't return 0, SSL won't be initialized.

        :param addr: A remove address
        :return: What the socket's connect_ex method returns
        aacceptaset_accept_stateu
        Call the :meth:`accept` method of the underlying socket and set up SSL
        on the returned socket, using the Context object supplied to this
        :class:`Connection` object at creation.

        :return: A *(conn, addr)* pair where *conn* is the new
            :class:`Connection` object created, and *address* is as returned by
            the socket's :meth:`accept`.
        aBIO_ADDR_newaDTLSv1_listenaBIO_ADDR_freeu
        Call the OpenSSL function DTLSv1_listen on this connection. See the
        OpenSSL manual for more details.

        :return: None
        Tutime_t *Tulong *aCryptography_DTLSv1_get_timeoutl=u
        Determine when the DTLS SSL object next needs to perform internal
        processing due to the passage of time.

        When the returned number of seconds have passed, the
        :meth:`DTLSv1_handle_timeout` method needs to be called.

        :return: The time left in seconds before the next timeout or `None`
            if no timeout is currently active.
        aDTLSv1_handle_timeoutTaunreachableu
        Handles any timeout events which have become pending on a DTLS SSL
        object.

        :return: `True` if there was a pending timeout, `False` otherwise.
        aBIO_set_mem_eof_returnu
        If the Connection was created with a memory BIO, this method can be
        used to indicate that *end of file* has been reached on the read end of
        that memory BIO.

        :return: None
        aSSL_shutdownu
        Send the shutdown message to the Connection.

        :return: True if the shutdown completed successfully (i.e. both sides
                 have sent closure alerts), False otherwise (in which case you
                 call :meth:`recv` or :meth:`send` when the connection becomes
                 readable/writeable).
        acountaSSL_get_cipher_listaciphersTuutf-8u
        Retrieve the list of ciphers used by the Connection object.

        :return: A list of native cipher strings.
        aSSL_get_client_CA_listask_X509_NAME_numask_X509_NAME_valueaca_namesaresultu
        Get CAs whose certificates are suggested for client authentication.

        :return: If this is a server connection, the list of certificate
            authorities that will be sent or has been sent to the client, as
            controlled by this :class:`Connection`'s :class:`Context`.

            If this is a client connection, the list will be empty until the
            connection with the server is established.

        .. versionadded:: 0.10
        uCannot make file object of OpenSSL.SSL.Connectionu
        The makefile() method is not implemented, since there is no dup
        semantics for SSL connections

        :raise: NotImplementedError
        u
        Retrieve application data as set by :meth:`set_app_data`.

        :return: The application data
        u
        Set application data

        :param data: The application data
        :return: None
        aSSL_get_shutdownu
        Get the shutdown state of the Connection.

        :return: The shutdown state, a bitvector of SENT_SHUTDOWN,
            RECEIVED_SHUTDOWN.
        ustate must be an integeraSSL_set_shutdownu
        Set the shutdown state of the Connection.

        :param state: bitvector of SENT_SHUTDOWN, RECEIVED_SHUTDOWN.
        :return: None
        aSSL_state_string_longu
        Retrieve a verbose string detailing the state of the Connection.

        :return: A string representing the state
        aSSL_get_sessionaSSL_get_server_randomu
        Retrieve the random value used with the server hello message.

        :return: A string representing the state
        aSSL_get_client_randomu
        Retrieve the random value used with the client hello message.

        :return: A string representing the state
        aSSL_SESSION_get_master_keyu
        Retrieve the value of the master key for this session.

        :return: A string representing the state
        aSSL_export_keying_materialu
        Obtain keying material for application use.

        :param: label - a disambiguating label string as described in RFC 5705
        :param: olen - the length of the exported key material in bytes
        :param: context - a per-association context value
        :return: the exported key material bytes or None
        ashutdownu
        Call the :meth:`shutdown` method of the underlying socket.
        See :manpage:`shutdown(2)`.

        :return: What the socket's shutdown() method returns
        aSSL_get_certificateato_cryptographyu
        Retrieve the local certificate (if any)

        :param bool as_cryptography: Controls whether a
            ``cryptography.x509.Certificate`` or an ``OpenSSL.crypto.X509``
            object should be returned.

        :return: The local certificate
        aSSL_get_peer_certificateu
        Retrieve the other side's certificate (if any)

        :param bool as_cryptography: Controls whether a
            ``cryptography.x509.Certificate`` or an ``OpenSSL.crypto.X509``
            object should be returned.

        :return: The peer's certificate
        ask_X509_numask_X509_valueacert_stacku
        Internal helper to convert a STACK_OF(X509) to a list of X509
        instances.
        aSSL_get_peer_cert_chaina_cert_stack_to_cryptography_lista_cert_stack_to_listu
        Retrieve the other side's certificate (if any)

        :param bool as_cryptography: Controls whether a list of
            ``cryptography.x509.Certificate`` or ``OpenSSL.crypto.X509``
            object should be returned.

        :return: A list of X509 instances giving the peer's certificate chain,
                 or None if it does not have one.
        aSSL_get0_verified_chainu
        Retrieve the verified certificate chain of the peer including the
        peer's end entity certificate. It must be called after a session has
        been successfully established. If peer verification was not successful
        the chain may be incomplete, invalid, or None.

        :param bool as_cryptography: Controls whether a list of
            ``cryptography.x509.Certificate`` or ``OpenSSL.crypto.X509``
            object should be returned.

        :return: A list of X509 instances giving the peer's verified
                 certificate chain, or None if it does not have one.

        .. versionadded:: 20.0
        aSSL_want_readu
        Checks if more data has to be read from the transport layer to complete
        an operation.

        :return: True iff more data has to be read
        aSSL_want_writeu
        Checks if there is data to write to the transport layer to complete an
        operation.

        :return: True iff there is data to write
        aSSL_set_accept_stateu
        Set the connection to work in server mode. The handshake will be
        handled automatically by read/write.

        :return: None
        u
        Set the connection to work in client mode. The handshake will be
        handled automatically by read/write.

        :return: None
        aSSL_get1_sessionaSessionaSSL_SESSION_freea_sessionu
        Returns the Session currently used.

        :return: An instance of :class:`OpenSSL.SSL.Session` or
            :obj:`None` if no session exists.

        .. versionadded:: 0.14
        usession must be a Session instanceaSSL_set_sessionu
        Set the session to be used when the TLS/SSL connection is established.

        :param session: A Session instance representing the session to use.
        :returns: None

        .. versionadded:: 0.14
        Tuchar[]lu
        Helper to implement :meth:`get_finished` and
        :meth:`get_peer_finished`.

        :param function: Either :data:`SSL_get_finished`: or
            :data:`SSL_get_peer_finished`.

        :return: :data:`None` if the desired message has not yet been
            received, otherwise the contents of the message.
        a_get_finished_messageaSSL_get_finishedu
        Obtain the latest TLS Finished message that we sent.

        :return: The contents of the message or :obj:`None` if the TLS
            handshake has not yet completed.

        .. versionadded:: 0.15
        aSSL_get_peer_finishedu
        Obtain the latest TLS Finished message that we received from the peer.

        :return: The contents of the message or :obj:`None` if the TLS
            handshake has not yet completed.

        .. versionadded:: 0.15
        aSSL_get_current_cipheraSSL_CIPHER_get_nameu
        Obtain the name of the currently used cipher.

        :returns: The name of the currently used cipher or :obj:`None`
            if no connection has been established.

        .. versionadded:: 0.15
        aSSL_CIPHER_get_bitsu
        Obtain the number of secret bits of the currently used cipher.

        :returns: The number of secret bits of the currently used cipher
            or :obj:`None` if no connection has been established.

        .. versionadded:: 0.15
        aSSL_CIPHER_get_versionu
        Obtain the protocol version of the currently used cipher.

        :returns: The protocol name of the currently used cipher
            or :obj:`None` if no connection has been established.

        .. versionadded:: 0.15
        aSSL_get_versionu
        Retrieve the protocol version of the current connection.

        :returns: The TLS version of the current connection, for example
            the value for TLS 1.2 would be ``TLSv1.2``or ``Unknown``
            for connections that were not successfully established.
        aSSL_versionu
        Retrieve the SSL or TLS protocol version of the current connection.

        :returns: The TLS version of the current connection.  For example,
            it will return ``0x769`` for connections made over TLS version 1.
        aSSL_set_alpn_protosu
        Specify the client's ALPN protocol list.

        These protocols are offered to the server during protocol negotiation.

        :param protos: A list of the protocols to be offered to the server.
            This list should be a Python list of bytestrings representing the
            protocols to offer, e.g. ``[b'http/1.1', b'spdy/2']``.
        uConnection.set_alpn_protos.<locals>.<genexpr>Tuunsigned int *aSSL_get0_alpn_selectedu
        Get the protocol that was negotiated by ALPN.

        :returns: A bytestring of the protocol name.  If no protocol has been
            negotiated yet, returns an empty bytestring.
        aSSL_get_selected_srtp_profileu
        Get the SRTP protocol which was negotiated.

        :returns: A bytestring of the SRTP profile name. If no profile has been
            negotiated yet, returns an empty bytestring.
        aSSL_set_tlsext_status_typeaTLSEXT_STATUSTYPE_ocspu
        Called to request that the server sends stapled OCSP data, if
        available. If this is not called on the client side then the server
        will not send OCSP data. Should be used in conjunction with
        :meth:`Context.set_ocsp_client_callback`.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsaosatypingucollections.abcTaSequenceaSequenceaerrnoTaerrorcodeapartialaitertoolsTachainacountawin32aplatformaAnyaCallableaOptionalaTypeVaraweakrefTaWeakValueDictionaryaWeakValueDictionaryacryptographyTax509ax509ucryptography.hazmat.primitives.asymmetricTaecaecuOpenSSL._utilTaStrOrBytesPathaStrOrBytesPatha_StrOrBytesPathTaexception_from_error_queueaexception_from_error_queuea_exception_from_error_queueTaffiaffiTalibalibTamake_assertamake_asserta_make_assertTano_zero_allocatorano_zero_allocatorTapath_bytesapath_bytesTatext_to_bytes_and_warnatext_to_bytes_and_warnuOpenSSL.cryptoTaFILETYPE_PEMaX509aPKeyaX509NameaX509Storea_EllipticCurvea_PassphraseHelpera_PrivateKeya_PrivateKeyLcaDTLS_CLIENT_METHODaDTLS_METHODaDTLS_SERVER_METHODaMODE_RELEASE_BUFFERSaNO_OVERLAPPING_PROTOCOLSaOPENSSL_BUILT_ONaOPENSSL_CFLAGSaOPENSSL_DIRaOPENSSL_PLATFORMaOPENSSL_VERSIONaOPENSSL_VERSION_NUMBERaOP_ALLaOP_CIPHER_SERVER_PREFERENCEaOP_COOKIE_EXCHANGEaOP_DONT_INSERT_EMPTY_FRAGMENTSaOP_EPHEMERAL_RSAaOP_MICROSOFT_BIG_SSLV3_BUFFERaOP_MICROSOFT_SESS_ID_BUGaOP_MSIE_SSLV2_RSA_PADDINGaOP_NETSCAPE_CA_DN_BUGaOP_NETSCAPE_CHALLENGE_BUGaOP_NETSCAPE_DEMO_CIPHER_CHANGE_BUGaOP_NETSCAPE_REUSE_CIPHER_CHANGE_BUGaOP_NO_COMPRESSIONaOP_NO_QUERY_MTUaOP_NO_TICKETaOP_PKCS1_CHECK_1aOP_PKCS1_CHECK_2aOP_SINGLE_DH_USEaOP_SINGLE_ECDH_USEaOP_SSLEAY_080_CLIENT_DH_BUGaOP_SSLREF2_REUSE_CERT_TYPE_BUGaOP_TLS_BLOCK_PADDING_BUGaOP_TLS_D5_BUGaOP_TLS_ROLLBACK_BUGaRECEIVED_SHUTDOWNaSENT_SHUTDOWNaSESS_CACHE_BOTHaSESS_CACHE_CLIENTaSESS_CACHE_NO_AUTO_CLEARaSESS_CACHE_NO_INTERNALaSESS_CACHE_NO_INTERNAL_LOOKUPaSESS_CACHE_NO_INTERNAL_STOREaSESS_CACHE_OFFaSESS_CACHE_SERVERaSSL3_VERSIONaSSLEAY_BUILT_ONaSSLEAY_CFLAGSaSSLEAY_DIRaSSLEAY_PLATFORMaSSLEAY_VERSIONaSSL_CB_ACCEPT_EXITaSSL_CB_ACCEPT_LOOPaSSL_CB_ALERTaSSL_CB_CONNECT_EXITaSSL_CB_CONNECT_LOOPaSSL_CB_EXITaSSL_CB_HANDSHAKE_DONEaSSL_CB_HANDSHAKE_STARTaSSL_CB_LOOPaSSL_CB_READaSSL_CB_READ_ALERTaSSL_CB_WRITEaSSL_CB_WRITE_ALERTaSSL_ST_ACCEPTaSSL_ST_CONNECTaSSL_ST_MASKaTLS1_1_VERSIONaTLS1_2_VERSIONaTLS1_3_VERSIONaTLS1_VERSIONaTLS_CLIENT_METHODaTLS_METHODaTLS_SERVER_METHODaVERIFY_CLIENT_ONCEaVERIFY_FAIL_IF_NO_PEER_CERTaVERIFY_NONEaVERIFY_PEERaConnectionaContextaErroraOP_NO_SSLv2aOP_NO_SSLv3aOP_NO_TLSv1aOP_NO_TLSv1_1aOP_NO_TLSv1_2aOP_NO_TLSv1_3aSSLeay_versionaSSLv23_METHODaSessionaSysCallErroraTLSv1_1_METHODaTLSv1_2_METHODaTLSv1_METHODaWantReadErroraWantWriteErroraWantX509LookupErroraX509VerificationCodesaZeroReturnErrora__all__aOPENSSL_VERSION_NUMBERaintaOPENSSL_VERSIONaOPENSSL_CFLAGSaOPENSSL_PLATFORMaOPENSSL_DIRaOPENSSL_BUILT_ONaSSLEAY_VERSIONaSSLEAY_CFLAGSaSSLEAY_PLATFORMaSSLEAY_DIRaSSLEAY_BUILT_ONaSSL_SENT_SHUTDOWNaSENT_SHUTDOWNaSSL_RECEIVED_SHUTDOWNaRECEIVED_SHUTDOWNaSSLv23_METHODlaTLSv1_METHODlaTLSv1_1_METHODlaTLSv1_2_METHODlaTLS_METHODlaTLS_SERVER_METHODlaTLS_CLIENT_METHODl
aDTLS_METHODlaDTLS_SERVER_METHODlaDTLS_CLIENT_METHODaSSL3_VERSIONaTLS1_VERSIONaTLS1_1_VERSIONaTLS1_2_VERSIONaTLS1_3_VERSIONaSSL_OP_NO_SSLv2aOP_NO_SSLv2aSSL_OP_NO_SSLv3aOP_NO_SSLv3aSSL_OP_NO_TLSv1aOP_NO_TLSv1aSSL_OP_NO_TLSv1_1aOP_NO_TLSv1_1aSSL_OP_NO_TLSv1_2aOP_NO_TLSv1_2aSSL_OP_NO_TLSv1_3aOP_NO_TLSv1_3aSSL_MODE_RELEASE_BUFFERSaMODE_RELEASE_BUFFERSaSSL_OP_SINGLE_DH_USEaOP_SINGLE_DH_USEaSSL_OP_SINGLE_ECDH_USEaOP_SINGLE_ECDH_USEaSSL_OP_EPHEMERAL_RSAaOP_EPHEMERAL_RSAaSSL_OP_MICROSOFT_SESS_ID_BUGaOP_MICROSOFT_SESS_ID_BUGaSSL_OP_NETSCAPE_CHALLENGE_BUGaOP_NETSCAPE_CHALLENGE_BUGaSSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUGaOP_NETSCAPE_REUSE_CIPHER_CHANGE_BUGaSSL_OP_SSLREF2_REUSE_CERT_TYPE_BUGaOP_SSLREF2_REUSE_CERT_TYPE_BUGaSSL_OP_MICROSOFT_BIG_SSLV3_BUFFERaOP_MICROSOFT_BIG_SSLV3_BUFFERaSSL_OP_MSIE_SSLV2_RSA_PADDINGaOP_MSIE_SSLV2_RSA_PADDINGaSSL_OP_SSLEAY_080_CLIENT_DH_BUGaOP_SSLEAY_080_CLIENT_DH_BUGaSSL_OP_TLS_D5_BUGaOP_TLS_D5_BUGaSSL_OP_TLS_BLOCK_PADDING_BUGaOP_TLS_BLOCK_PADDING_BUGaSSL_OP_DONT_INSERT_EMPTY_FRAGMENTSaOP_DONT_INSERT_EMPTY_FRAGMENTSaSSL_OP_CIPHER_SERVER_PREFERENCEaOP_CIPHER_SERVER_PREFERENCEaSSL_OP_TLS_ROLLBACK_BUGaOP_TLS_ROLLBACK_BUGaSSL_OP_PKCS1_CHECK_1aOP_PKCS1_CHECK_1aSSL_OP_PKCS1_CHECK_2aOP_PKCS1_CHECK_2aSSL_OP_NETSCAPE_CA_DN_BUGaOP_NETSCAPE_CA_DN_BUGaSSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUGaOP_NETSCAPE_DEMO_CIPHER_CHANGE_BUGaSSL_OP_NO_COMPRESSIONaOP_NO_COMPRESSIONaSSL_OP_NO_QUERY_MTUaOP_NO_QUERY_MTUaSSL_OP_COOKIE_EXCHANGEaOP_COOKIE_EXCHANGEaSSL_OP_NO_TICKETaOP_NO_TICKETaSSL_OP_NO_RENEGOTIATIONaOP_NO_RENEGOTIATIONTaOP_NO_RENEGOTIATIONaSSL_OP_IGNORE_UNEXPECTED_EOFaOP_IGNORE_UNEXPECTED_EOFTaOP_IGNORE_UNEXPECTED_EOFaSSL_OP_LEGACY_SERVER_CONNECTaOP_LEGACY_SERVER_CONNECTTaOP_LEGACY_SERVER_CONNECTaSSL_OP_ALLaOP_ALLaSSL_VERIFY_PEERaVERIFY_PEERaSSL_VERIFY_FAIL_IF_NO_PEER_CERTaVERIFY_FAIL_IF_NO_PEER_CERTaSSL_VERIFY_CLIENT_ONCEaVERIFY_CLIENT_ONCEaSSL_VERIFY_NONEaVERIFY_NONEaSSL_SESS_CACHE_OFFaSESS_CACHE_OFFaSSL_SESS_CACHE_CLIENTaSESS_CACHE_CLIENTaSSL_SESS_CACHE_SERVERaSESS_CACHE_SERVERaSSL_SESS_CACHE_BOTHaSESS_CACHE_BOTHaSSL_SESS_CACHE_NO_AUTO_CLEARaSESS_CACHE_NO_AUTO_CLEARaSSL_SESS_CACHE_NO_INTERNAL_LOOKUPaSESS_CACHE_NO_INTERNAL_LOOKUPaSSL_SESS_CACHE_NO_INTERNAL_STOREaSESS_CACHE_NO_INTERNAL_STOREaSSL_SESS_CACHE_NO_INTERNALaSESS_CACHE_NO_INTERNALaSSL_ST_CONNECTaSSL_ST_ACCEPTaSSL_ST_MASKaSSL_CB_LOOPaSSL_CB_EXITaSSL_CB_READaSSL_CB_WRITEaSSL_CB_ALERTaSSL_CB_READ_ALERTaSSL_CB_WRITE_ALERTaSSL_CB_ACCEPT_LOOPaSSL_CB_ACCEPT_EXITaSSL_CB_CONNECT_LOOPaSSL_CB_CONNECT_EXITaSSL_CB_HANDSHAKE_STARTaSSL_CB_HANDSHAKE_DONETa_Ta_TuOpenSSL.SSLa__module__a_NoOverlappingProtocolsa__qualname__aUnionaLista_ALPNSelectCallbackTLaConnectionObytesa_CookieGenerateCallbackTLaConnectionObytesOboola_CookieVerifyCallbacka_OCSPClientCallbacka_OCSPServerCallbacka_PassphraseCallbacka_VerifyCallbacku
    Success and error codes for X509 verification, as returned by the
    underlying ``X509_STORE_CTX_get_error()`` function and passed by pyOpenSSL
    to verification callback functions.

    See `OpenSSL Verification Errors
    <https://www.openssl.org/docs/manmaster/man3/X509_verify_cert_error_string.html#ERROR-CODES>`_
    for details.
    aX509VerificationCodesaOKaX509_V_ERR_UNABLE_TO_GET_ISSUER_CERTaERR_UNABLE_TO_GET_ISSUER_CERTaX509_V_ERR_UNABLE_TO_GET_CRLaERR_UNABLE_TO_GET_CRLaX509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATUREaERR_UNABLE_TO_DECRYPT_CERT_SIGNATUREaX509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATUREaERR_UNABLE_TO_DECRYPT_CRL_SIGNATUREaX509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEYaERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEYaX509_V_ERR_CERT_SIGNATURE_FAILUREaERR_CERT_SIGNATURE_FAILUREaX509_V_ERR_CRL_SIGNATURE_FAILUREaERR_CRL_SIGNATURE_FAILUREaX509_V_ERR_CERT_NOT_YET_VALIDaERR_CERT_NOT_YET_VALIDaX509_V_ERR_CERT_HAS_EXPIREDaERR_CERT_HAS_EXPIREDaX509_V_ERR_CRL_NOT_YET_VALIDaERR_CRL_NOT_YET_VALIDaX509_V_ERR_CRL_HAS_EXPIREDaERR_CRL_HAS_EXPIREDaX509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELDaERR_ERROR_IN_CERT_NOT_BEFORE_FIELDaX509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELDaERR_ERROR_IN_CERT_NOT_AFTER_FIELDaX509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELDaERR_ERROR_IN_CRL_LAST_UPDATE_FIELDaX509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELDaERR_ERROR_IN_CRL_NEXT_UPDATE_FIELDaX509_V_ERR_OUT_OF_MEMaERR_OUT_OF_MEMaX509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERTaERR_DEPTH_ZERO_SELF_SIGNED_CERTaX509_V_ERR_SELF_SIGNED_CERT_IN_CHAINaERR_SELF_SIGNED_CERT_IN_CHAINaX509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLYaERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLYaX509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATUREaERR_UNABLE_TO_VERIFY_LEAF_SIGNATUREaX509_V_ERR_CERT_CHAIN_TOO_LONGaERR_CERT_CHAIN_TOO_LONGaX509_V_ERR_CERT_REVOKEDaERR_CERT_REVOKEDaX509_V_ERR_INVALID_CAaERR_INVALID_CAaX509_V_ERR_PATH_LENGTH_EXCEEDEDaERR_PATH_LENGTH_EXCEEDEDaX509_V_ERR_INVALID_PURPOSEaERR_INVALID_PURPOSEaX509_V_ERR_CERT_UNTRUSTEDaERR_CERT_UNTRUSTEDaX509_V_ERR_CERT_REJECTEDaERR_CERT_REJECTEDaX509_V_ERR_SUBJECT_ISSUER_MISMATCHaERR_SUBJECT_ISSUER_MISMATCHaX509_V_ERR_AKID_SKID_MISMATCHaERR_AKID_SKID_MISMATCHaX509_V_ERR_AKID_ISSUER_SERIAL_MISMATCHaERR_AKID_ISSUER_SERIAL_MISMATCHaX509_V_ERR_KEYUSAGE_NO_CERTSIGNaERR_KEYUSAGE_NO_CERTSIGNaX509_V_ERR_UNABLE_TO_GET_CRL_ISSUERaERR_UNABLE_TO_GET_CRL_ISSUERaX509_V_ERR_UNHANDLED_CRITICAL_EXTENSIONaERR_UNHANDLED_CRITICAL_EXTENSIONaX509_V_ERR_KEYUSAGE_NO_CRL_SIGNaERR_KEYUSAGE_NO_CRL_SIGNaX509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSIONaERR_UNHANDLED_CRITICAL_CRL_EXTENSIONaX509_V_ERR_INVALID_NON_CAaERR_INVALID_NON_CAaX509_V_ERR_PROXY_PATH_LENGTH_EXCEEDEDaERR_PROXY_PATH_LENGTH_EXCEEDEDaX509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATUREaERR_KEYUSAGE_NO_DIGITAL_SIGNATUREaX509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWEDaERR_PROXY_CERTIFICATES_NOT_ALLOWEDaX509_V_ERR_INVALID_EXTENSIONaERR_INVALID_EXTENSIONaX509_V_ERR_INVALID_POLICY_EXTENSIONaERR_INVALID_POLICY_EXTENSIONaX509_V_ERR_NO_EXPLICIT_POLICYaERR_NO_EXPLICIT_POLICYaX509_V_ERR_DIFFERENT_CRL_SCOPEaERR_DIFFERENT_CRL_SCOPEaX509_V_ERR_UNSUPPORTED_EXTENSION_FEATUREaERR_UNSUPPORTED_EXTENSION_FEATUREaX509_V_ERR_UNNESTED_RESOURCEaERR_UNNESTED_RESOURCEaX509_V_ERR_PERMITTED_VIOLATIONaERR_PERMITTED_VIOLATIONaX509_V_ERR_EXCLUDED_VIOLATIONaERR_EXCLUDED_VIOLATIONaX509_V_ERR_SUBTREE_MINMAXaERR_SUBTREE_MINMAXaX509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPEaERR_UNSUPPORTED_CONSTRAINT_TYPEaX509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAXaERR_UNSUPPORTED_CONSTRAINT_SYNTAXaX509_V_ERR_UNSUPPORTED_NAME_SYNTAXaERR_UNSUPPORTED_NAME_SYNTAXaX509_V_ERR_CRL_PATH_VALIDATION_ERRORaERR_CRL_PATH_VALIDATION_ERRORaX509_V_ERR_HOSTNAME_MISMATCHaERR_HOSTNAME_MISMATCHaX509_V_ERR_EMAIL_MISMATCHaERR_EMAIL_MISMATCHaX509_V_ERR_IP_ADDRESS_MISMATCHaERR_IP_ADDRESS_MISMATCHaX509_V_ERR_APPLICATION_VERIFICATIONaERR_APPLICATION_VERIFICATIONLu/etc/ssl/certs/ca-certificates.crtu/etc/pki/tls/certs/ca-bundle.crtu/etc/ssl/ca-bundle.pemu/etc/pki/tls/cacert.pemu/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pemu/etc/ssl/certsc/opt/pyca/cryptography/openssl/certsc/opt/pyca/cryptography/openssl/cert.pemTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>u
    An error occurred in an `OpenSSL.SSL` API.
    a__orig_bases__u
    A base class for wrapper classes that allow for intelligent exception
    handling in OpenSSL callbacks.

    :ivar list _problems: Any exceptions that occurred while executing in a
        context where they could not be raised in the normal way.  Typically
        this is because OpenSSL has called into some Python code and requires a
        return value.  The exceptions are saved to be raised later when it is
        possible to do so.
    DareturnaNoneu_CallbackExceptionHelper.__init__u_CallbackExceptionHelper.raise_if_problemu
    Wrap a callback such that it can be used as a certificate verification
    callback.
    Dacallbackareturna_VerifyCallbackaNoneu_VerifyHelper.__init__u
    Wrap a callback such that it can be used as an ALPN selection callback.
    Dacallbackareturna_ALPNSelectCallbackaNoneu_ALPNSelectHelper.__init__u
    Wrap a callback such that it can be used as an OCSP callback for the server
    side.

    Annoyingly, OpenSSL defines one OCSP callback but uses it in two different
    ways. For servers, that callback is expected to retrieve some OCSP data and
    hand it to OpenSSL, and may return only SSL_TLSEXT_ERR_OK,
    SSL_TLSEXT_ERR_FATAL, and SSL_TLSEXT_ERR_NOACK. For clients, that callback
    is expected to check the OCSP data, and returns a negative value on error,
    0 if the response is not acceptable, or positive if it is. These are
    mutually exclusive return code behaviours, and they mean that we need two
    helpers so that we always return an appropriate error code if the user's
    code throws an exception.

    Given that we have to have two helpers anyway, these helpers are a bit more
    helpery than most: specifically, they hide a few more of the OpenSSL
    functions so that the user has an easier time writing these callbacks.

    This helper implements the server side.
    Dacallbackareturnu_OCSPServerCallback[Any]aNoneu_OCSPServerCallbackHelper.__init__u
    Wrap a callback such that it can be used as an OCSP callback for the client
    side.

    Annoyingly, OpenSSL defines one OCSP callback but uses it in two different
    ways. For servers, that callback is expected to retrieve some OCSP data and
    hand it to OpenSSL, and may return only SSL_TLSEXT_ERR_OK,
    SSL_TLSEXT_ERR_FATAL, and SSL_TLSEXT_ERR_NOACK. For clients, that callback
    is expected to check the OCSP data, and returns a negative value on error,
    0 if the response is not acceptable, or positive if it is. These are
    mutually exclusive return code behaviours, and they mean that we need two
    helpers so that we always return an appropriate error code if the user's
    code throws an exception.

    Given that we have to have two helpers anyway, these helpers are a bit more
    helpery than most: specifically, they hide a few more of the OpenSSL
    functions so that the user has an easier time writing these callbacks.

    This helper implements the client side.
    Dacallbackareturnu_OCSPClientCallback[Any]aNoneu_OCSPClientCallbackHelper.__init__Dacallbackareturna_CookieGenerateCallbackaNoneu_CookieGenerateCallbackHelper.__init__Dacallbackareturna_CookieVerifyCallbackaNoneu_CookieVerifyCallbackHelper.__init__DaobjareturnaAnyaintDatypeareturnaintabytesaSSLeay_versionDaflagaerrorareturnaintastruCallable[[_T], _T]a_make_requiresaCryptography_HAS_KEYLOGuKey logging not availablea_requires_keylogu
    A class representing an SSL session.  A session defines certain connection
    parameters which may be re-used to speed up the setup of subsequent
    connections.

    .. versionadded:: 0.14
    u
    :class:`OpenSSL.SSL.Context` instances define the parameters for setting
    up new SSL connections.

    :param method: One of TLS_METHOD, TLS_CLIENT_METHOD, TLS_SERVER_METHOD,
                   DTLS_METHOD, DTLS_CLIENT_METHOD, or DTLS_SERVER_METHOD.
                   SSLv23_METHOD, TLSv1_METHOD, etc. are deprecated and should
                   not be used.
    aTLS_methodaTLS_server_methodaTLS_client_methodaDTLS_methodaDTLS_server_methodaDTLS_client_methodutyping.ClassVar[dict[int, tuple[Callable[[], Any], int | None]]]DamethodareturnaintaNoneuContext.__init__DaversionareturnaintaNoneuContext.set_min_proto_versionuContext.set_max_proto_versionTnDacafileacapathareturnu_StrOrBytesPath | Noneu_StrOrBytesPath | NoneaNoneuContext.load_verify_locationsDacallbackareturnu_PassphraseCallback[_T]a_PassphraseHelperuContext._wrap_callbackDacallbackauserdataareturnu_PassphraseCallback[_T]u_T | NoneaNoneaset_passwd_cbuContext.set_passwd_cbaset_default_verify_pathsuContext.set_default_verify_pathsDadir_env_varafile_env_varareturnastrpabooluContext._check_env_vars_setDafile_pathadir_pathareturnulist[str]ulist[str]aNoneuContext._fallback_default_verify_pathsDacertfileareturna_StrOrBytesPathaNoneause_certificate_chain_fileuContext.use_certificate_chain_fileDacertfileafiletypeareturna_StrOrBytesPathaintaNoneause_certificate_fileuContext.use_certificate_fileDacertareturnuX509 | x509.CertificateaNoneause_certificateuContext.use_certificateDacertobjareturnuX509 | x509.CertificateaNoneaadd_extra_chain_certuContext.add_extra_chain_certuContext._raise_passphrase_exceptionDakeyfileafiletypeareturna_StrOrBytesPathaintaNoneause_privatekey_fileuContext.use_privatekey_fileDapkeyareturnu_PrivateKey | PKeyaNoneause_privatekeyuContext.use_privatekeyacheck_privatekeyuContext.check_privatekeyDacafileareturnabytesaNoneaload_client_cauContext.load_client_caDabufareturnabytesaNoneaset_session_iduContext.set_session_idDamodeareturnaintaNoneaset_session_cache_modeuContext.set_session_cache_modeDareturnaintaget_session_cache_modeuContext.get_session_cache_modeDamodeacallbackareturnaintu_VerifyCallback | NoneaNoneaset_verifyuContext.set_verifyDadepthareturnaintaNoneaset_verify_depthuContext.set_verify_depthaget_verify_modeuContext.get_verify_modeaget_verify_depthuContext.get_verify_depthDadhfileareturna_StrOrBytesPathaNoneaload_tmp_dhuContext.load_tmp_dhDacurveareturnu_EllipticCurve | ec.EllipticCurveaNoneaset_tmp_ecdhuContext.set_tmp_ecdhDacipher_listareturnabytesaNoneaset_cipher_listuContext.set_cipher_listDacertificate_authoritiesareturnuSequence[X509Name]aNoneaset_client_ca_listuContext.set_client_ca_listDacertificate_authorityareturnuX509 | x509.CertificateaNoneaadd_client_cauContext.add_client_caDatimeoutareturnaintaNoneaset_timeoutuContext.set_timeoutaget_timeoutuContext.get_timeoutDacallbackareturnuCallable[[Connection, int, int], None]aNoneaset_info_callbackuContext.set_info_callbackDacallbackareturnuCallable[[Connection, bytes], None]aNoneaset_keylog_callbackuContext.set_keylog_callbackDareturnaAnyaget_app_datauContext.get_app_dataDadataareturnaAnyaNoneaset_app_datauContext.set_app_dataDareturnuX509Store | Noneaget_cert_storeuContext.get_cert_storeDaoptionsareturnaintaNoneaset_optionsuContext.set_optionsuContext.set_modeDacallbackareturnuCallable[[Connection], None]aNoneaset_tlsext_servername_callbackuContext.set_tlsext_servername_callbackDaprofilesareturnabytesaNoneaset_tlsext_use_srtpuContext.set_tlsext_use_srtpDaprotosareturnulist[bytes]aNoneaset_alpn_protosuContext.set_alpn_protosaset_alpn_select_callbackuContext.set_alpn_select_callbackDahelperadataareturnu_OCSPClientCallbackHelper | _OCSPServerCallbackHelperuAny | NoneaNoneuContext._set_ocsp_callbackDacallbackadataareturnu_OCSPServerCallback[_T]u_T | NoneaNoneaset_ocsp_server_callbackuContext.set_ocsp_server_callbackDacallbackadataareturnu_OCSPClientCallback[_T]u_T | NoneaNoneaset_ocsp_client_callbackuContext.set_ocsp_client_callbackaset_cookie_generate_callbackuContext.set_cookie_generate_callbackaset_cookie_verify_callbackuContext.set_cookie_verify_callbackutyping.MutableMapping[Any, Connection]DacontextasocketareturnaContextusocket.socket | NoneaNoneuConnection.__init__DanameareturnastraAnya__getattr__uConnection.__getattr__DasslaresultareturnaAnyaintaNoneuConnection._raise_ssl_errorDareturnaContextaget_contextuConnection.get_contextDacontextareturnaContextaNoneaset_contextuConnection.set_contextDareturnubytes | Noneaget_servernameuConnection.get_servernameuConnection.set_verifyuConnection.get_verify_modeuConnection.use_certificateuConnection.use_privatekeyDamtuareturnaintaNoneaset_ciphertext_mtuuConnection.set_ciphertext_mtuaget_cleartext_mtuuConnection.get_cleartext_mtuDanameareturnabytesaNoneaset_tlsext_host_nameuConnection.set_tlsext_host_nameapendinguConnection.pendingDabufaflagsareturnabytesaintpasenduConnection.sendawriteasendalluConnection.sendallDabufsizaflagsareturnaintuint | NoneabytesarecvuConnection.recvareadTnnDabufferanbytesaflagsareturnaAnyuint | Noneuint | Noneaintarecv_intouConnection.recv_intoDabioaresultareturnaAnyaintutyping.NoReturnuConnection._handle_bio_errorsDabufsizareturnaintabytesabio_readuConnection.bio_readDabufareturnabytesaintabio_writeuConnection.bio_writeDareturnaboolarenegotiateuConnection.renegotiateado_handshakeuConnection.do_handshakeuConnection.renegotiate_pendingatotal_renegotiationsuConnection.total_renegotiationsDaaddrareturnaAnyaNoneuConnection.connectDaaddrareturnaAnyaintuConnection.connect_exDareturnutuple[Connection, Any]uConnection.acceptuConnection.DTLSv1_listenDareturnuint | NoneaDTLSv1_get_timeoutuConnection.DTLSv1_get_timeoutuConnection.DTLSv1_handle_timeoutabio_shutdownuConnection.bio_shutdownuConnection.shutdownDareturnulist[str]uConnection.get_cipher_listDareturnulist[X509Name]aget_client_ca_listuConnection.get_client_ca_listDaargsakwargsareturnaAnyputyping.NoReturnamakefileuConnection.makefileuConnection.get_app_datauConnection.set_app_dataaget_shutdownuConnection.get_shutdownDastateareturnaintaNoneaset_shutdownuConnection.set_shutdownDareturnabytesaget_state_stringuConnection.get_state_stringaserver_randomuConnection.server_randomaclient_randomuConnection.client_randomamaster_keyuConnection.master_keyDalabelaolenacontextareturnabytesaintubytes | Noneabytesaexport_keying_materialuConnection.export_keying_materialDaargsakwargsareturnaAnypaNoneasock_shutdownuConnection.sock_shutdownaoverloadDaas_cryptographyareturnutyping.Literal[True]ux509.Certificate | Noneaget_certificateuConnection.get_certificateDaas_cryptographyFDaas_cryptographyareturnutyping.Literal[False]uX509 | NoneDaas_cryptographyareturnutyping.Literal[True] | typing.Literal[False]uX509 | x509.Certificate | Noneaget_peer_certificateuConnection.get_peer_certificateDacert_stackareturnaAnyulist[X509]uConnection._cert_stack_to_listDacert_stackareturnaAnyulist[x509.Certificate]uConnection._cert_stack_to_cryptography_listDaas_cryptographyareturnutyping.Literal[True]ulist[x509.Certificate] | Noneaget_peer_cert_chainuConnection.get_peer_cert_chainDaas_cryptographyareturnutyping.Literal[False]ulist[X509] | NoneDaas_cryptographyareturnutyping.Literal[True] | typing.Literal[False]ulist[X509] | list[x509.Certificate] | Noneaget_verified_chainuConnection.get_verified_chainawant_readuConnection.want_readawant_writeuConnection.want_writeuConnection.set_accept_stateuConnection.set_connect_stateDareturnuSession | Noneaget_sessionuConnection.get_sessionDasessionareturnaSessionaNoneaset_sessionuConnection.set_sessionDafunctionareturnuCallable[[Any, Any, int], int]ubytes | NoneuConnection._get_finished_messageaget_finisheduConnection.get_finishedaget_peer_finisheduConnection.get_peer_finishedDareturnustr | Noneaget_cipher_nameuConnection.get_cipher_nameaget_cipher_bitsuConnection.get_cipher_bitsaget_cipher_versionuConnection.get_cipher_versionDareturnastraget_protocol_version_nameuConnection.get_protocol_version_nameaget_protocol_versionuConnection.get_protocol_versionuConnection.set_alpn_protosaget_alpn_proto_negotiateduConnection.get_alpn_proto_negotiatedaget_selected_srtp_profileuConnection.get_selected_srtp_profilearequest_ocspuConnection.request_ocspuOpenSSL\SSL.pyTa.0wpu<module OpenSSL.SSL>Ta__class__Taselfaptv_secaptv_usecTaselfaresultTaselfabio_addraresultTatypeTaselfanameTaselfacontextasocketasslaset_resultTaselfamethodamethod_funcaversionamethod_objacontextTaselfacallbackawrapperTaselfTaobjafdamethTacert_stackaresultwiacertaresapycertTaselfadir_env_varafile_env_varTaselfafile_pathadir_pathacafileacapathTaselfafunctionaemptyasizeabufTaselfabioaresultTaflagaerrora_requires_decoratorTaselfasslaresultaerroraerrnoapeeked_errorareasonTafuncaexplodeaflagTaerroraflagTaselfahelperadataarcTaselfaclientaaddraconnTaselfacertificate_authorityaadd_resultTaselfacertobjacopyaadd_resultTaselfabufsizabufaresultTaselfabufadataaresultTaselfasessionalengthaoutpTaselfaaddrTaselfaaddraconnect_exTaargsakwargsaerrorTaerrorTaselfalabelaolenacontextaoutpacontext_bufacontext_lenause_contextasuccessTaselfadataadata_lenTaselfastoreapystoreTaselfaas_cryptographyTaselfaas_cryptographyacertapycertTaselfacipherTaselfacipherswiaresultTaselfacipheranameTaselfacipheraversionTaselfaca_namesaresultwianameacopyapynameTaselfaas_cryptographyacert_stackTaselfaversionTaselfaprofileTaselfasessionapysessionTaselfacafileaca_listTaselfadhfileabioadharesTaselfacafileacapathaload_resultTaselfaargsakwargsTaselfabufsizaflagsabufaresultTaselfabufferanbytesaflagsabufaresultTaselfarcTaselfabufaflagsadataaresultTaselfabufaflagsadataaleft_to_sendatotal_sentaresultTaselfaprotosaprotostrainput_strTaselfacallbackTaselfadataTaselfacipher_listatmpconnTaselfamtuTaselfacertificate_authoritiesaname_stackaca_nameacopyapush_resultTaselfacontextTaselfaset_resultadir_env_varafile_env_varadefault_diradefault_fileTaselfamodeTaselfacallbackadataahelperTaselfaoptionsTaselfacallbackauserdataTaselfasessionaresultTaselfabufTaselfastateTaselfatimeoutTaselfaprofilesTaselfacurveanameanidaecTaselfamodeacallbackTaselfadepthTaselfacertause_resultTaselfacertfilearesultTaselfacertfileafiletypeause_resultTaselfapkeyause_resultTaselfakeyfileafiletypeause_resultTasizeaverifyauserdataacallbackaselfTacallbackaselfTasslawhereareturn_codeacallbackTacallbackTasslalineacallbackTasslaalertaargacallbackTasslaoutaoutlenain_ainlenaargaconnainstraprotolistaencoded_lenaprotoaoutbytesaany_acceptedweacallbackaselfTasslaoutaoutlenaconnacookieweacallbackaselfTasslac_cookieacookie_lenaconnweacallbackaselfTasslacdataaconnadataaocsp_ptraocsp_lenaocsp_dataavalidweacallbackaselfT
asslacdataaconnadataaocsp_dataaocsp_data_lengthadata_ptrweacallbackaselfT
aokastore_ctxax509acertaerror_numberaerror_depthaindexasslaconnectionaresultweacallbackaself.OpenSSL._util?
PuaffiastringadecodeTuutf-8u
    Get a native string type representing of the given CFFI ``char*`` object.

    :param charp: A C-style string represented using CFFI.

    :return: :class:`str`
    alibaERR_get_errorlaerrorsatextaERR_lib_error_stringaERR_func_error_stringaERR_reason_error_stringu
    Convert an OpenSSL library failure into a Python exception.

    When a call to the native OpenSSL library fails, this is usually signalled
    by the return value, and an error code is stored in an error queue
    associated with the current thread. The err library provides functions to
    obtain these error codes and textual error messages.
    DaokareturnaboolaNoneu
        If *ok* is not True, retrieve the error from OpenSSL and raise it.
        aopenssl_assertumake_assert.<locals>.openssl_assertu
    Create an assert function that uses :func:`exception_from_error_queue` to
    raise an exception wrapped by *error*.
    aexception_from_error_queueaerrorafspathaencodeagetfilesystemencodingu
    Convert a Python path to a :py:class:`bytes` for the path which can be
    passed into an OpenSSL API accepting a filename.

    :param s: A path (valid for os.fspath).

    :return: An instance of :py:class:`bytes`.
    Tacharmapawarningsawarna_TEXT_WARNINGaformataDeprecationWarninglTacategoryastacklevelu
    If ``obj`` is text, emit a warning that it should be bytes instead and try
    to convert it to bytes automatically.

    :param str label: The name of the parameter from which ``obj`` was taken
        (so a developer can easily find the source of the problem and correct
        it).

    :return: If ``obj`` is the text string type, a ``bytes`` object giving the
        UTF-8 encoding of that text is returned.  Otherwise, ``obj`` itself is
        returned.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaosasysaAnyaCallableaNoReturnaUnionucryptography.hazmat.bindings.openssl.bindingTaBindingaBindingaPathLikeaStrOrBytesPathabindinganew_allocatorTFTashould_clear_after_allocano_zero_allocatorDacharpareturnaAnyastrDaexception_typeareturnutype[Exception]aNoReturnDaerrorareturnutype[Exception]uCallable[[bool], Any]amake_assertDwsareturnaStrOrBytesPathabytesapath_bytesDwsareturnastrabytesabyte_stringaUNSPECIFIEDustr for {0} is no longer accepted, use bytesDalabelaobjareturnastraAnypatext_to_bytes_and_warnuOpenSSL\_util.pyu<module OpenSSL._util>TwsTaexception_typeaerrorsaerrorTaerroraopenssl_assertTaokaerrorTaerrorTwswbTacharpTalabelaobj.OpenSSL"u
pyOpenSSL - A simple wrapper around the OpenSSL library
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_OpenSSLu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aOpenSSLTaSSLacryptolaSSLacryptouOpenSSL.versionTa__author__a__copyright__a__email__a__license__a__summary__a__title__a__uri__a__version__a__author__a__copyright__a__email__a__license__a__summary__a__title__a__uri__a__version__L
aSSLa__author__a__copyright__a__email__a__license__a__summary__a__title__a__uri__a__version__acryptoa__all__uOpenSSL\__init__.pyu<module OpenSSL>u.OpenSSL.cryptoa_libaBIO_newaBIO_s_memaBIO_freea_ffianewuchar[]aBIO_new_mem_bufDabioarefareturnaAnyppafreeu_new_mem_buf.<locals>.freea_openssl_assertaNULLagcu
    Allocate a new OpenSSL memory BIO.

    Arrange for the garbage collector to clean it up automatically.

    :param buffer: None or some bytes to use to put into the BIO so that they
        can be read out.
    Tuchar**aBIO_get_mem_dataabufferl:nnnu
    Copy the contents of an OpenSSL BIO object into a Python byte string.
    uwhen must be a byte stringaASN1_TIME_set_stringuInvalid stringu
    The the time value of an ASN1 time object.

    @param boundary: An ASN1_TIME pointer (or an object safely
        castable to that type) which will have its value set.
    @param when: A string representation of the desired time value.

    @raise TypeError: If C{when} is not a L{bytes} string.
    @raise ValueError: If C{when} does not represent a time in the required
        format.
    @raise RuntimeError: If the time value cannot be set for some other
        (unspecified) reason.
    aASN1_TIME_newaASN1_TIME_freea_set_asn1_timeu
    Behaves like _set_asn1_time but returns a new ASN1_TIME object.

    @param when: A string representation of the desired time value.

    @raise TypeError: If C{when} is not a L{bytes} string.
    @raise ValueError: If C{when} does not represent a time in the required
        format.
    @raise RuntimeError: If the time value cannot be set for some other
        (unspecified) reason.
    acastuASN1_STRING*aASN1_STRING_lengthaASN1_STRING_typeaV_ASN1_GENERALIZEDTIMEastringaASN1_STRING_get0_dataTuASN1_GENERALIZEDTIME**aASN1_TIME_to_generalizedtimeaASN1_GENERALIZEDTIME_freeu
    Retrieve the time value of an ASN1 time object.

    @param timestamp: An ASN1_GENERALIZEDTIME* (or an object safely castable to
        that type) from which the time value will be retrieved.

    @return: The time value from C{timestamp} as a L{bytes} string in a certain
        format.  Or C{None} if the object contains no time value.
    a_namesaappenda_nameaEVP_PKEY_newaEVP_PKEY_freea_pkeya_initializeducryptography.hazmat.primitives.serializationTaload_der_private_keyaload_der_public_keyaload_der_private_keyaload_der_public_keya_only_publicadump_publickeyaFILETYPE_ASN1adump_privatekeyu
        Export as a ``cryptography`` key.

        :rtype: One of ``cryptography``'s `key interfaces`_.

        .. _key interfaces: https://cryptography.io/en/latest/hazmat/            primitives/asymmetric/rsa/#key-interfaces

        .. versionadded:: 16.1.0
        adsaaDSAPrivateKeyaDSAPublicKeyaecaEllipticCurvePrivateKeyaEllipticCurvePublicKeyaed25519aEd25519PrivateKeyaEd25519PublicKeyaed448aEd448PrivateKeyaEd448PublicKeyarsaaRSAPrivateKeyaRSAPublicKeyuUnsupported key typeTaEncodingaNoEncryptionaPrivateFormataPublicFormataEncodingaNoEncryptionaPrivateFormataPublicFormataload_publickeyapublic_bytesaDERaSubjectPublicKeyInfoaprivate_bytesaPKCS8aload_privatekeyu
        Construct based on a ``cryptography`` *crypto_key*.

        :param crypto_key: A ``cryptography`` key.
        :type crypto_key: One of ``cryptography``'s `key interfaces`_.

        :rtype: PKey

        .. versionadded:: 16.1.0
        utype must be an integerubits must be an integeraTYPE_RSAuInvalid number of bitsaBN_newaBN_freeaBN_set_wordaRSA_F4aRSA_newaRSA_generate_key_exlaEVP_PKEY_assign_RSAaTYPE_DSAaDSA_newaDSA_freeaDSA_generate_parameters_exaDSA_generate_keyaEVP_PKEY_set1_DSAaErrorTuNo such key typeaselfu
        Generate a key pair of the given type, with the given number of bits.

        This generates a key "into" the this object.

        :param type: The key type.
        :type type: :py:data:`TYPE_RSA` or :py:data:`TYPE_DSA`
        :param bits: The number of bits.
        :type bits: :py:data:`int` ``>= 0``
        :raises TypeError: If :py:data:`type` or :py:data:`bits` isn't
            of the appropriate type.
        :raises ValueError: If the number of bits isn't an integer of
            the appropriate size.
        :return: ``None``
        upublic key onlyaEVP_PKEY_typeatypeaEVP_PKEY_RSAuOnly RSA keys can currently be checked.aEVP_PKEY_get1_RSAaRSA_freeaRSA_check_keya_raise_current_erroru
        Check the consistency of an RSA private key.

        This is the Python equivalent of OpenSSL's ``RSA_check_key``.

        :return: ``True`` if key is consistent.

        :raise OpenSSL.crypto.Error: if the key is inconsistent.

        :raise TypeError: if the key is of a type which cannot be checked.
            Only RSA keys can currently be checked.
        aEVP_PKEY_idu
        Returns the type of the key

        :return: The type of the key.
        aEVP_PKEY_bitsu
        Returns the number of bits of the key

        :return: The number of bits of the key.
        a_EllipticCurvea__class__a__ne__u
        Implement cooperation with the right-hand side argument of ``!=``.

        Python 3 seems to have dropped this cooperation in this very narrow
        circumstance.
        aEC_get_builtin_curvesuEC_builtin_curve[]u
        Get the curves supported by OpenSSL.

        :param lib: The OpenSSL library binding object.

        :return: A :py:type:`set` of ``cls`` instances giving the names of the
            elliptic curves the underlying library supports.
        aclsafrom_nidalibanidu<genexpr>u_EllipticCurve._load_elliptic_curves.<locals>.<genexpr>a_curvesa_load_elliptic_curvesu
        Get, cache, and return the curves supported by OpenSSL.

        :param lib: The OpenSSL library binding object.

        :return: A :py:type:`set` of ``cls`` instances giving the names of the
            elliptic curves the underlying library supports.
        aOBJ_nid2snadecodeTaasciiu
        Instantiate a new :py:class:`_EllipticCurve` associated with the given
        OpenSSL NID.

        :param lib: The OpenSSL library binding object.

        :param nid: The OpenSSL NID the resulting curve object will represent.
            This must be a curve NID (and not, for example, a hash NID) or
            subsequent operations will fail in unpredictable ways.
        :type nid: :py:class:`int`

        :return: The curve object.
        a_nidanameu
        :param _lib: The :py:mod:`cryptography` binding instance used to
            interface with OpenSSL.

        :param _nid: The OpenSSL NID identifying the curve this object
            represents.
        :type _nid: :py:class:`int`

        :param name: The OpenSSL short name identifying the curve this object
            represents.
        :type name: :py:class:`unicode`
        u<Curve uw>aEC_KEY_new_by_curve_nameaEC_KEY_freeu
        Create a new OpenSSL EC_KEY structure initialized to use this curve.

        The structure is automatically garbage collected when the Python object
        is garbage collected.
        a_get_elliptic_curvesu
    Return a set of objects representing the elliptic curves supported in the
    OpenSSL build in use.

    The curve objects have a :py:class:`unicode` ``name`` attribute by which
    they identify themselves.

    The curve objects are useful as values for the argument accepted by
    :py:meth:`Context.set_tmp_ecdh` to specify which elliptical curve should be
    used for ECDHE key exchange.
    a_get_elliptic_curves_internaluunknown curve nameu
    Return a single curve object selected by name.

    See :py:func:`get_elliptic_curves` for information about curve objects.

    :param name: The OpenSSL short name identifying the curve object to
        retrieve.
    :type name: :py:class:`unicode`

    If the named curve is not supported then :py:class:`ValueError` is raised.
    aX509_NAME_dupaX509_NAME_freeu
        Create a new X509Name, copying the given X509Name instance.

        :param name: The name to copy.
        :type name: :py:class:`X509Name`
        astartswithTw_a__setattr__uattribute name must be string, not 'a__name__u.200w'aOBJ_txt2nida_byte_stringaNID_undefuNo such attributeaX509_NAME_entry_countaX509_NAME_get_entryaX509_NAME_ENTRY_get_objectaOBJ_obj2nidaX509_NAME_delete_entryaX509_NAME_ENTRY_freeaencodeTuutf-8aX509_NAME_add_entry_by_NIDaMBSTRING_UTF8qaX509_NAME_get_index_by_NIDaX509_NAME_ENTRY_get_dataTuunsigned char**aASN1_STRING_to_UTF8aOPENSSL_freeu
        Find attribute. An X509Name object has the following attributes:
        countryName (alias C), stateOrProvince (alias ST), locality (alias L),
        organization (alias O), organizationalUnit (alias OU), commonName
        (alias CN) and more...
        aX509NameaX509_NAME_cmpTuchar[]laX509_NAME_onelineu<X509Name object '{}'>u
        String representation of an X509Name
        aX509_NAME_hashu
        Return an integer representation of the first four bytes of the
        MD5 digest of the DER representation of the name.

        This is the Python equivalent of OpenSSL's ``X509_NAME_hash``.

        :return: The (integer) hash of this name.
        :rtype: :py:class:`int`
        ai2d_X509_NAMEu
        Return the DER encoding of this name.

        :return: The DER encoded form of this name.
        :rtype: :py:class:`bytes`
        aresultu
        Returns the components of this name, as a sequence of 2-tuples.

        :return: The components of this name.
        :rtype: :py:class:`list` of ``name, value`` tuples.
        TuX509V3_CTX*aX509V3_set_ctxaX509V3_set_ctx_nodbaX509uissuer must be an X509 instancea_x509aissuer_certusubject must be an X509 instanceasubject_certccritical,aX509V3_EXT_nconfaX509_EXTENSION_freea_extensionu
        Initializes an X509 extension.

        :param type_name: The name of the type of extension_ to create.
        :type type_name: :py:data:`bytes`

        :param bool critical: A flag indicating whether this is a critical
            extension.

        :param value: The OpenSSL textual representation of the extension's
            value.
        :type value: :py:data:`bytes`

        :param subject: Optional X509 certificate to use as subject.
        :type subject: :py:class:`X509`

        :param issuer: Optional X509 certificate to use as issuer.
        :type issuer: :py:class:`X509`

        .. _extension: https://www.openssl.org/docs/manmaster/man5/
            x509v3_config.html#STANDARD-EXTENSIONS
        aX509_EXTENSION_get_objectuGENERAL_NAMES*aX509V3_EXT_d2iaGENERAL_NAMES_freeask_GENERAL_NAME_numask_GENERAL_NAME_valueanamesa_prefixesa_new_mem_bufaGENERAL_NAME_printapartsa_bio_to_stringwdaia5adataalengthalabelw:u, aNID_subject_alt_namea_subjectAltNameStringaX509V3_EXT_printu
        :return: a nice text representation of the extension
        aX509_EXTENSION_get_criticalu
        Returns the critical field of this X.509 extension.

        :return: The critical field.
        cUNDEFu
        Returns the short type name of this X.509 extension.

        The result is a byte string such as :py:const:`b"basicConstraints"`.

        :return: The short type name.
        :rtype: :py:data:`bytes`

        .. versionadded:: 0.12
        aX509_EXTENSION_get_datau
        Returns the data of the X509 extension, encoded as ASN.1.

        :return: The ASN.1 encoded data of this X509 extension.
        :rtype: :py:data:`bytes`

        .. versionadded:: 0.12
        aX509_REQ_newaX509_REQ_freea_reqaset_versionTlucryptography.x509Taload_der_x509_csraload_der_x509_csra_dump_certificate_request_internalu
        Export as a ``cryptography`` certificate signing request.

        :rtype: ``cryptography.x509.CertificateSigningRequest``

        .. versionadded:: 17.1.0
        ax509aCertificateSigningRequestuMust be a certificate signing requestTaEncodinga_load_certificate_request_internalu
        Construct based on a ``cryptography`` *crypto_req*.

        :param crypto_req: A ``cryptography`` X.509 certificate signing request
        :type crypto_req: ``cryptography.x509.CertificateSigningRequest``

        :rtype: X509Req

        .. versionadded:: 17.1.0
        aX509_REQ_set_pubkeyu
        Set the public key of the certificate signing request.

        :param pkey: The public key to use.
        :type pkey: :py:class:`PKey`

        :return: ``None``
        aPKeya__new__aX509_REQ_get_pubkeyu
        Get the public key of the certificate signing request.

        :return: The public key.
        :rtype: :py:class:`PKey`
        uversion must be an intuInvalid version. The only valid version for X509Req is 0.aX509_REQ_set_versionu
        Set the version subfield (RFC 2986, section 4.1) of the certificate
        request.

        :param int version: The version number.
        :return: ``None``
        aX509_REQ_get_versionu
        Get the version subfield (RFC 2459, section 4.1.2.1) of the certificate
        request.

        :return: The value of the version subfield.
        :rtype: :py:class:`int`
        aX509_REQ_get_subject_namea_owneru
        Return the subject of this certificate signing request.

        This creates a new :class:`X509Name` that wraps the underlying subject
        name field on the certificate signing request. Modifying it will modify
        the underlying signing request, and will have the effect of modifying
        any other :class:`X509Name` that refers to this subject.

        :return: The subject of this certificate signing request.
        :rtype: :class:`X509Name`
        awarningsawarnuThis API is deprecated and will be removed in a future version of pyOpenSSL. You should use pyca/cryptography's X.509 APIs instead.aDeprecationWarningDastacklevellask_X509_EXTENSION_new_nullask_X509_EXTENSION_freea_X509ExtensionInternaluOne of the elements is not an X509Extensionask_X509_EXTENSION_pushastackaX509_REQ_add_extensionsu
        Add extensions to the certificate signing request.

        :param extensions: The X.509 extensions to add.
        :type extensions: iterable of :py:class:`X509Extension`
        :return: ``None``
        aX509_REQ_get_extensionsu<lambda>uX509Req.get_extensions.<locals>.<lambda>ask_X509_EXTENSION_numaX509_EXTENSION_dupask_X509_EXTENSION_valueanative_exts_objaextsu
        Get X.509 extensions in the certificate signing request.

        :return: The X.509 extensions in this request.
        :rtype: :py:class:`list` of :py:class:`X509Extension` objects.

        .. versionadded:: 0.15
        ask_X509_EXTENSION_pop_freeaaddressofa_original_libuKey has only public partuKey is uninitializedaEVP_get_digestbynameuNo such digest methodaX509_REQ_signu
        Sign the certificate signing request with this key and digest type.

        :param pkey: The key pair to sign with.
        :type pkey: :py:class:`PKey`
        :param digest: The name of the message digest to use for the signature,
            e.g. :py:data:`"sha256"`.
        :type digest: :py:class:`str`
        :return: ``None``
        upkey must be a PKey instanceaX509_REQ_verifyu
        Verifies the signature on this certificate signing request.

        :param PKey key: A public key.

        :return: ``True`` if the signature is correct.
        :rtype: bool

        :raises OpenSSL.crypto.Error: If the signature is invalid or there is a
            problem verifying the signature.
        aX509_newaX509_freea_X509NameInvalidatora_issuer_invalidatora_subject_invalidatorTaload_der_x509_certificateaload_der_x509_certificateadump_certificateu
        Export as a ``cryptography`` certificate.

        :rtype: ``cryptography.x509.Certificate``

        .. versionadded:: 17.1.0
        aCertificateuMust be a certificateaload_certificateu
        Construct based on a ``cryptography`` *crypto_cert*.

        :param crypto_key: A ``cryptography`` X.509 certificate.
        :type crypto_key: ``cryptography.x509.Certificate``

        :rtype: X509

        .. versionadded:: 17.1.0
        uversion must be an integeraX509_set_versionu
        Set the version number of the certificate. Note that the
        version value is zero-based, eg. a value of 0 is V1.

        :param version: The version number of the certificate.
        :type version: :py:class:`int`

        :return: ``None``
        aX509_get_versionu
        Return the version number of the certificate.

        :return: The version number of the certificate.
        :rtype: :py:class:`int`
        aX509_get_pubkeyu
        Get the public key of the certificate.

        :return: The public key.
        :rtype: :py:class:`PKey`
        aX509_set_pubkeyu
        Set the public key of the certificate.

        :param pkey: The public key.
        :type pkey: :py:class:`PKey`

        :return: :py:data:`None`
        uKey only has public partaX509_signu
        Sign the certificate with this key and digest type.

        :param pkey: The key to sign with.
        :type pkey: :py:class:`PKey`

        :param digest: The name of the message digest to use.
        :type digest: :py:class:`str`

        :return: :py:data:`None`
        aX509_get0_tbs_sigalgTuASN1_OBJECT **aX509_ALGOR_get0uUndefined signature algorithmaOBJ_nid2lnu
        Return the signature algorithm used in the certificate.

        :return: The name of the algorithm.
        :rtype: :py:class:`bytes`

        :raises ValueError: If the signature algorithm is undefined.

        .. versionadded:: 0.13
        uunsigned char[]aEVP_MAX_MD_SIZETuunsigned int[]laX509_digestd:ab16encodeaupperu
        Return the digest of the X509 object.

        :param digest_name: The name of the digest algorithm to use.
        :type digest_name: :py:class:`str`

        :return: The digest of the object, formatted as
            :py:const:`b":"`-delimited hex pairs.
        :rtype: :py:class:`bytes`
        aX509_subject_name_hashu
        Return the hash of the X509 subject.

        :return: The hash of the subject.
        :rtype: :py:class:`bytes`
        userial must be an integer:lnnTuBIGNUM**aBN_hex2bnaBN_to_ASN1_INTEGERaASN1_INTEGER_freeaX509_set_serialNumberu
        Set the serial number of the certificate.

        :param serial: The new serial number.
        :type serial: :py:class:`int`

        :return: :py:data`None`
        aX509_get_serialNumberaASN1_INTEGER_to_BNaBN_bn2hexlu
        Return the serial number of this certificate.

        :return: The serial number.
        :rtype: int
        uamount must be an integeraX509_getm_notAfteraX509_gmtime_adju
        Adjust the time stamp on which the certificate stops being valid.

        :param int amount: The number of seconds by which to adjust the
            timestamp.
        :return: ``None``
        aX509_getm_notBeforeu
        Adjust the timestamp on which the certificate starts being valid.

        :param amount: The number of seconds by which to adjust the timestamp.
        :return: ``None``
        aget_notAfteruUnable to determine notAfteradatetimeastrptimeu%Y%m%d%H%M%SZatimezoneautcanowareplaceTnTatzinfou
        Check whether the certificate has expired.

        :return: ``True`` if the certificate has expired, ``False`` otherwise.
        :rtype: bool
        a_get_asn1_timea_get_boundary_timeu
        Get the timestamp at which the certificate starts being valid.

        The timestamp is formatted as an ASN.1 TIME::

            YYYYMMDDhhmmssZ

        :return: A timestamp string, or ``None`` if there is none.
        :rtype: bytes or NoneType
        a_set_boundary_timeu
        Set the timestamp at which the certificate starts being valid.

        The timestamp is formatted as an ASN.1 TIME::

            YYYYMMDDhhmmssZ

        :param bytes when: A timestamp string.
        :return: ``None``
        u
        Get the timestamp at which the certificate stops being valid.

        The timestamp is formatted as an ASN.1 TIME::

            YYYYMMDDhhmmssZ

        :return: A timestamp string, or ``None`` if there is none.
        :rtype: bytes or NoneType
        u
        Set the timestamp at which the certificate stops being valid.

        The timestamp is formatted as an ASN.1 TIME::

            YYYYMMDDhhmmssZ

        :param bytes when: A timestamp string.
        :return: ``None``
        uname must be an X509Namea_get_nameaX509_get_issuer_nameaaddu
        Return the issuer of this certificate.

        This creates a new :class:`X509Name` that wraps the underlying issuer
        name field on the certificate. Modifying it will modify the underlying
        certificate, and will have the effect of modifying any other
        :class:`X509Name` that refers to this issuer.

        :return: The issuer of this certificate.
        :rtype: :class:`X509Name`
        a_set_nameaX509_set_issuer_nameaclearu
        Set the issuer of this certificate.

        :param issuer: The issuer.
        :type issuer: :py:class:`X509Name`

        :return: ``None``
        aX509_get_subject_nameu
        Return the subject of this certificate.

        This creates a new :class:`X509Name` that wraps the underlying subject
        name field on the certificate. Modifying it will modify the underlying
        certificate, and will have the effect of modifying any other
        :class:`X509Name` that refers to this subject.

        :return: The subject of this certificate.
        :rtype: :class:`X509Name`
        aX509_set_subject_nameu
        Set the subject of this certificate.

        :param subject: The subject.
        :type subject: :py:class:`X509Name`

        :return: ``None``
        aX509_get_ext_countu
        Get the number of extensions on this certificate.

        :return: The number of extensions.
        :rtype: :py:class:`int`

        .. versionadded:: 0.12
        aX509_add_extu
        Add extensions to the certificate.

        :param extensions: The extensions to add.
        :type extensions: An iterable of :py:class:`X509Extension` objects.
        :return: ``None``
        aX509_get_extuextension index out of boundsu
        Get a specific extension of the certificate by index.

        Extensions on a certificate are kept in order. The index
        parameter selects which extension will be returned.

        :param int index: The index of the extension to retrieve.
        :return: The extension at the specified index.
        :rtype: :py:class:`X509Extension`
        :raises IndexError: If the extension index was out of bounds.

        .. versionadded:: 0.12
        aX509_STORE_newaX509_STORE_freea_storeaX509_STORE_add_certu
        Adds a trusted certificate to this store.

        Adding a certificate with this method adds this certificate as a
        *trusted* certificate.

        :param X509 cert: The certificate to add to this store.

        :raises TypeError: If the certificate is not an :class:`X509`.

        :raises OpenSSL.crypto.Error: If OpenSSL was unhappy with your
            certificate.

        :return: ``None`` if the certificate was added successfully.
        aCertificateRevocationListad2i_X509_CRL_bioaX509_CRL_freeuCRL must be of type cryptography.x509.CertificateRevocationListaX509_STORE_add_crlu
        Add a certificate revocation list to this store.

        The certificate revocation lists added to a store will only be used if
        the associated flags are configured to check certificate revocation
        lists.

        .. versionadded:: 16.1.0

        :param crl: The certificate revocation list to add to this store.
        :type crl: ``cryptography.x509.CertificateRevocationList``
        :return: ``None`` if the certificate revocation list was added
            successfully.
        aX509_STORE_set_flagsu
        Set verification flags to this store.

        Verification flags can be combined by oring them together.

        .. note::

          Setting a verification flag sometimes requires clients to add
          additional information to the store, otherwise a suitable error will
          be raised.

          For example, in setting flags to enable CRL checking a
          suitable CRL must be added to the store otherwise an error will be
          raised.

        .. versionadded:: 16.1.0

        :param int flags: The verification flags to set on this store.
            See :class:`X509StoreFlags` for available constants.
        :return: ``None`` if the verification flags were successfully set.
        aX509_VERIFY_PARAM_newaX509_VERIFY_PARAM_freeaX509_VERIFY_PARAM_set_timeacalendaratimegmatimetupleaX509_STORE_set1_paramu
        Set the time against which the certificates are verified.

        Normally the current time is used.

        .. note::

          For example, you can determine if a certificate was valid at a given
          time.

        .. versionadded:: 17.0.0

        :param datetime vfy_time: The verification time to set on this store.
        :return: ``None`` if the verification time was successfully set.
        a_path_bytesaX509_STORE_load_locationsu
        Let X509Store know where we can find trusted certificates for the
        certificate chain.  Note that the certificates have to be in PEM
        format.

        If *capath* is passed, it must be a directory prepared using the
        ``c_rehash`` tool included with OpenSSL.  Either, but not both, of
        *cafile* or *capath* may be ``None``.

        .. note::

          Both *cafile* and *capath* may be set simultaneously.

          Call this method multiple times to add more than one location.
          For example, CA certificates, and certificate revocation list bundles
          may be passed in *cafile* in subsequent calls to this method.

        .. versionadded:: 20.0

        :param cafile: In which file we can find the certificates (``bytes`` or
                       ``unicode``).
        :param capath: In which directory we can find the certificates
                       (``bytes`` or ``unicode``).

        :return: ``None`` if the locations were set successfully.

        :raises OpenSSL.crypto.Error: If both *cafile* and *capath* is ``None``
            or the locations could not be set for any reason.

        a__init__aerrorsacertificatea_certa_build_certificate_stacka_chainDwsareturnaAnyaNoneacleanupuX509StoreContext._build_certificate_stack.<locals>.cleanupask_X509_new_nulluOne of the elements is not an X509 instanceaX509_up_refask_X509_pushask_X509_numask_X509_valuewsask_X509_freeaX509_verify_cert_error_stringaX509_STORE_CTX_get_erroraX509_STORE_CTX_get_error_depthaX509_STORE_CTX_get_current_certaX509_dupa_from_raw_x509_ptraX509StoreContextErroru
        Convert an OpenSSL native context error failure into a Python
        exception.

        When a call to native OpenSSL X509_verify_cert fails, additional
        information about the failure can be obtained from the store context.
        aX509_STORE_CTX_newaX509_STORE_CTX_freeaX509_STORE_CTX_initaX509_verify_certa_exception_from_contextu
        Verifies the certificate and runs an X509_STORE_CTX containing the
        results.

        :raises X509StoreContextError: If an error occurred when validating a
          certificate in the context. Sets ``certificate`` attribute to
          indicate which certificate caused the error.
        u
        Set the context's X.509 store.

        .. versionadded:: 0.15

        :param X509Store store: The store description which will be used for
            the purposes of any *future* verifications.
        a_verify_certificateu
        Verify a certificate in a context.

        .. versionadded:: 0.15

        :raises X509StoreContextError: If an error occurred when validating a
          certificate in the context. Sets ``certificate`` attribute to
          indicate which certificate caused the error.
        aX509_STORE_CTX_get1_chainacert_stacku
        Verify a certificate in a context and return the complete validated
        chain.

        :raises X509StoreContextError: If an error occurred when validating a
          certificate in the context. Sets ``certificate`` attribute to
          indicate which certificate caused the error.

        .. versionadded:: 20.0
        aFILETYPE_PEMaPEM_read_bio_X509ad2i_X509_bioutype argument must be FILETYPE_PEM or FILETYPE_ASN1u
    Load a certificate (X509) from the string *buffer* encoded with the
    type *type*.

    :param type: The file type (one of FILETYPE_PEM, FILETYPE_ASN1)

    :param bytes buffer: The buffer the certificate is stored in

    :return: The X509 object
    aPEM_write_bio_X509ai2d_X509_bioaFILETYPE_TEXTaX509_print_exutype argument must be FILETYPE_PEM, FILETYPE_ASN1, or FILETYPE_TEXTabiou
    Dump the certificate *cert* into a buffer string encoded with the type
    *type*.

    :param type: The file type (one of FILETYPE_PEM, FILETYPE_ASN1, or
        FILETYPE_TEXT)
    :param cert: The certificate to dump
    :return: The buffer with the dumped certificate in
    aPEM_write_bio_PUBKEYai2d_PUBKEY_biou
    Dump a public key to a buffer.

    :param type: The file type (one of :data:`FILETYPE_PEM` or
        :data:`FILETYPE_ASN1`).
    :param PKey pkey: The public key to dump
    :return: The buffer with the dumped key in it.
    :rtype: bytes
    upkey must be a PKeyuif a value is given for cipher one must also be given for passphraseaEVP_get_cipherbynameuInvalid cipher namea_PassphraseHelperaPEM_write_bio_PrivateKeyacallbackacallback_argsaraise_if_problemai2d_PrivateKey_biouOnly RSA keys are supported for FILETYPE_TEXTaRSA_printu
    Dump the private key *pkey* into a buffer string encoded with the type
    *type*.  Optionally (if *type* is :const:`FILETYPE_PEM`) encrypting it
    using *cipher* and *passphrase*.

    :param type: The file type (one of :const:`FILETYPE_PEM`,
        :const:`FILETYPE_ASN1`, or :const:`FILETYPE_TEXT`)
    :param PKey pkey: The PKey to dump
    :param cipher: (optional) if encrypted PEM format, the cipher to use
    :param passphrase: (optional) if encrypted PEM format, this can be either
        the passphrase to use, or a callback for providing the passphrase.

    :return: The buffer with the dumped key in
    :rtype: bytes
    uonly FILETYPE_PEM key format supports encryptiona_passphrasea_more_argsa_truncatea_problemsacallableapem_password_cba_read_passphraseuLast argument must be a byte string or a callable.a_exception_from_error_queueapopuBytes expectedupassphrase returned by callback is too longabufaPEM_read_bio_PUBKEYad2i_PUBKEY_biou
    Load a public key from a buffer.

    :param type: The file type (one of :data:`FILETYPE_PEM`,
        :data:`FILETYPE_ASN1`).
    :param buffer: The buffer the key is stored in.
    :type buffer: A Python string object, either unicode or bytestring.
    :return: The PKey object.
    :rtype: :class:`PKey`
    aPEM_read_bio_PrivateKeyad2i_PrivateKey_biou
    Load a private key (PKey) from the string *buffer* encoded with the type
    *type*.

    :param type: The file type (one of FILETYPE_PEM, FILETYPE_ASN1)
    :param buffer: The buffer the key is stored in
    :param passphrase: (optional) if encrypted PEM format, this can be
                       either the passphrase to use, or a callback for
                       providing the passphrase.

    :return: The PKey object
    aPEM_write_bio_X509_REQai2d_X509_REQ_bioaX509_REQ_print_exu
    Dump the certificate request *req* into a buffer string encoded with the
    type *type*.

    :param type: The file type (one of FILETYPE_PEM, FILETYPE_ASN1)
    :param req: The certificate request to dump
    :return: The buffer with the dumped certificate request in


    .. deprecated:: 24.2.0
       Use `cryptography.x509.CertificateSigningRequest` instead.
    aPEM_read_bio_X509_REQad2i_X509_REQ_bioa_X509ReqInternalu
    Load a certificate request (X509Req) from the string *buffer* encoded with
    the type *type*.

    :param type: The file type (one of FILETYPE_PEM, FILETYPE_ASN1)
    :param buffer: The buffer the certificate request is stored in
    :return: The X509Req object

    .. deprecated:: 24.2.0
       Use `cryptography.x509.load_der_x509_csr` or
       `cryptography.x509.load_pem_x509_csr` instead.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsafunctoolsatypingabase64Tab16encodeucollections.abcTaIterableaSequenceaIterableaSequenceapartialaPathLikeaAnyaCallableaUnionacryptographyTautilsax509autilsucryptography.hazmat.primitives.asymmetricTadsaaecaed448aed25519arsauOpenSSL._utilTabyte_stringabyte_stringTaexception_from_error_queueaexception_from_error_queueTaffiaffiTalibTamake_assertamake_asserta_make_assertTapath_bytesapath_bytesLaFILETYPE_ASN1aFILETYPE_PEMaFILETYPE_TEXTaTYPE_DSAaTYPE_RSAaX509aErroraPKeyaX509ExtensionaX509NameaX509ReqaX509StoreaX509StoreContextaX509StoreContextErroraX509StoreFlagsadump_certificateadump_certificate_requestadump_privatekeyadump_publickeyaget_elliptic_curveaget_elliptic_curvesaload_certificateaload_certificate_requestaload_privatekeyaload_publickeya__all__a_PrivateKeya_PublicKeya_KeyaStrOrBytesPathTQObytesaPassphraseCallableTaSSL_FILETYPE_PEMaintaSSL_FILETYPE_ASN1laEVP_PKEY_DSAaEVP_PKEY_DHaTYPE_DHaEVP_PKEY_ECaTYPE_ECTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uOpenSSL.cryptoa__module__u
    An error occurred in an `OpenSSL.crypto` API.
    a__qualname__a__orig_bases__Dabufferareturnubytes | NoneaAnyDabioareturnaAnyabytesDaboundaryawhenareturnaAnyabytesaNoneDawhenareturnabytesaAnya_new_asn1_timeDatimestampareturnaAnyubytes | NoneDareturnaNoneu_X509NameInvalidator.__init__DanameareturnaX509NameaNoneu_X509NameInvalidator.addu_X509NameInvalidator.clearu
    A class representing an DSA or RSA public key or key pair.
    uPKey.__init__Dareturna_Keyato_cryptography_keyuPKey.to_cryptography_keyDacrypto_keyareturna_KeyaPKeyafrom_cryptography_keyuPKey.from_cryptography_keyDatypeabitsareturnaintpaNoneagenerate_keyuPKey.generate_keyDareturnaboolacheckuPKey.checkDareturnaintuPKey.typeabitsuPKey.bitsu
    A representation of a supported elliptic curve.

    @cvar _curves: :py:obj:`None` until an attempt is made to load the curves.
        Thereafter, a :py:type:`set` containing :py:type:`_EllipticCurve`
        instances each of which represents one curve supported by the system.
    @type _curves: :py:type:`NoneType` or :py:type:`set`
    DaotherareturnaAnyaboolu_EllipticCurve.__ne__DalibareturnaAnyuset[_EllipticCurve]u_EllipticCurve._load_elliptic_curvesu_EllipticCurve._get_elliptic_curvesDalibanidareturnaAnyainta_EllipticCurveu_EllipticCurve.from_nidDalibanidanameareturnaAnyaintastraNoneu_EllipticCurve.__init__Dareturnastra__repr__u_EllipticCurve.__repr__DareturnaAnya_to_EC_KEYu_EllipticCurve._to_EC_KEYDareturnuset[_EllipticCurve]aget_elliptic_curvesadeprecateduget_elliptic_curves is deprecated. You should use the APIs in cryptography instead.Danameaget_elliptic_curvesDanameareturnastra_EllipticCurveaget_elliptic_curveuget_elliptic_curve is deprecated. You should use the APIs in cryptography instead.Danameaget_elliptic_curveatotal_orderingu
    An X.509 Distinguished Name.

    :ivar countryName: The country of the entity.
    :ivar C: Alias for  :py:attr:`countryName`.

    :ivar stateOrProvinceName: The state or province of the entity.
    :ivar ST: Alias for :py:attr:`stateOrProvinceName`.

    :ivar localityName: The locality of the entity.
    :ivar L: Alias for :py:attr:`localityName`.

    :ivar organizationName: The organization name of the entity.
    :ivar O: Alias for :py:attr:`organizationName`.

    :ivar organizationalUnitName: The organizational unit of the entity.
    :ivar OU: Alias for :py:attr:`organizationalUnitName`

    :ivar commonName: The common name of the entity.
    :ivar CN: Alias for :py:attr:`commonName`.

    :ivar emailAddress: The e-mail address of the entity.
    uX509Name.__init__DanameavalueareturnastraAnyaNoneuX509Name.__setattr__Danameareturnastrustr | Nonea__getattr__uX509Name.__getattr__a__eq__uX509Name.__eq__a__lt__uX509Name.__lt__uX509Name.__repr__ahashuX509Name.hashDareturnabytesaderuX509Name.derDareturnulist[tuple[bytes, bytes]]aget_componentsuX509Name.get_componentsu
    An X.509 v3 certificate extension.

    .. deprecated:: 23.3.0
       Use cryptography's X509 APIs instead.
    aX509ExtensionTnnDatype_nameacriticalavalueasubjectaissuerareturnabytesaboolabytesuX509 | NoneuX509 | NoneaNoneuX509Extension.__init__uX509Extension._nidaGEN_EMAILaemailaGEN_DNSaDNSaGEN_URIaURIutyping.ClassVar[dict[int, str]]uX509Extension._subjectAltNameStringa__str__uX509Extension.__str__aget_criticaluX509Extension.get_criticalaget_short_nameuX509Extension.get_short_nameaget_datauX509Extension.get_datauX509Extension support in pyOpenSSL is deprecated. You should use the APIs in cryptography.DanameaX509Extensionu
    An X.509 certificate signing requests.

    .. deprecated:: 24.2.0
       Use `cryptography.x509.CertificateSigningRequest` instead.
    aX509RequX509Req.__init__Dareturnux509.CertificateSigningRequestato_cryptographyuX509Req.to_cryptographyDacrypto_reqareturnux509.CertificateSigningRequestaX509Reqafrom_cryptographyuX509Req.from_cryptographyDapkeyareturnaPKeyaNoneaset_pubkeyuX509Req.set_pubkeyDareturnaPKeyaget_pubkeyuX509Req.get_pubkeyDaversionareturnaintaNoneuX509Req.set_versionaget_versionuX509Req.get_versionDareturnaX509Nameaget_subjectuX509Req.get_subjectDaextensionsareturnuIterable[_X509ExtensionInternal]aNoneaadd_extensionsuX509Req.add_extensionsDareturnulist[_X509ExtensionInternal]aget_extensionsuX509Req.get_extensionsDapkeyadigestareturnaPKeyastraNoneasignuX509Req.signDapkeyareturnaPKeyaboolaverifyuX509Req.verifyuCSR support in pyOpenSSL is deprecated. You should use the APIs in cryptography.DanameaX509Requ
    An X.509 certificate.
    uX509.__init__Dax509areturnaAnyaX509uX509._from_raw_x509_ptrDareturnux509.CertificateuX509.to_cryptographyDacrypto_certareturnux509.CertificateaX509uX509.from_cryptographyuX509.set_versionuX509.get_versionuX509.get_pubkeyuX509.set_pubkeyuX509.signaget_signature_algorithmuX509.get_signature_algorithmDadigest_nameareturnastrabytesadigestuX509.digestasubject_name_hashuX509.subject_name_hashDaserialareturnaintaNoneaset_serial_numberuX509.set_serial_numberaget_serial_numberuX509.get_serial_numberDaamountareturnaintaNoneagmtime_adj_notAfteruX509.gmtime_adj_notAfteragmtime_adj_notBeforeuX509.gmtime_adj_notBeforeahas_expireduX509.has_expiredDawhichareturnaAnyubytes | NoneuX509._get_boundary_timeDareturnubytes | Noneaget_notBeforeuX509.get_notBeforeDawhichawhenareturnuCallable[..., Any]abytesaNoneuX509._set_boundary_timeDawhenareturnabytesaNoneaset_notBeforeuX509.set_notBeforeuX509.get_notAfteraset_notAfteruX509.set_notAfterDawhichareturnaAnyaX509NameuX509._get_nameDawhichanameareturnaAnyaX509NameaNoneuX509._set_nameaget_issueruX509.get_issuerDaissuerareturnaX509NameaNoneaset_issueruX509.set_issueruX509.get_subjectDasubjectareturnaX509NameaNoneaset_subjectuX509.set_subjectaget_extension_countuX509.get_extension_countuX509.add_extensionsDaindexareturnainta_X509ExtensionInternalaget_extensionuX509.get_extensionu
    Flags for X509 verification, used to change the behavior of
    :class:`X509Store`.

    See `OpenSSL Verification Flags`_ for details.

    .. _OpenSSL Verification Flags:
        https://www.openssl.org/docs/manmaster/man3/X509_VERIFY_PARAM_set_flags.html
    aX509StoreFlagsaX509_V_FLAG_CRL_CHECKaCRL_CHECKaX509_V_FLAG_CRL_CHECK_ALLaCRL_CHECK_ALLaX509_V_FLAG_IGNORE_CRITICALaIGNORE_CRITICALaX509_V_FLAG_X509_STRICTaX509_STRICTaX509_V_FLAG_ALLOW_PROXY_CERTSaALLOW_PROXY_CERTSaX509_V_FLAG_POLICY_CHECKaPOLICY_CHECKaX509_V_FLAG_EXPLICIT_POLICYaEXPLICIT_POLICYaX509_V_FLAG_INHIBIT_MAPaINHIBIT_MAPaX509_V_FLAG_CHECK_SS_SIGNATUREaCHECK_SS_SIGNATUREaX509_V_FLAG_PARTIAL_CHAINaPARTIAL_CHAINu
    An X.509 store.

    An X.509 store is used to describe a context in which to verify a
    certificate. A description of a context may include a set of certificates
    to trust, a set of certificate revocation lists, verification flags and
    more.

    An X.509 store, being only a description, cannot be used by itself to
    verify a certificate. To carry out the actual verification process, see
    :class:`X509StoreContext`.
    aX509StoreuX509Store.__init__DacertareturnaX509aNoneaadd_certuX509Store.add_certDacrlareturnux509.CertificateRevocationListaNoneaadd_crluX509Store.add_crlDaflagsareturnaintaNoneaset_flagsuX509Store.set_flagsDavfy_timeareturnudatetime.datetimeaNoneaset_timeuX509Store.set_timeDacafileacapathareturnaStrOrBytesPathuStrOrBytesPath | NoneaNoneaload_locationsuX509Store.load_locationsu
    An exception raised when an error occurred while verifying a certificate
    using `OpenSSL.X509StoreContext.verify_certificate`.

    :ivar certificate: The certificate which caused verificate failure.
    :type certificate: :class:`X509`
    Damessageaerrorsacertificateareturnastrulist[Any]aX509aNoneuX509StoreContextError.__init__u
    An X.509 store context.

    An X.509 store context is used to carry out the actual verification process
    of a certificate in a described context. For describing such a context, see
    :class:`X509Store`.

    :param X509Store store: The certificates which will be trusted for the
        purposes of any verifications.
    :param X509 certificate: The certificate to be verified.
    :param chain: List of untrusted certificates that may be used for building
        the certificate chain. May be ``None``.
    :type chain: :class:`list` of :class:`X509`
    aX509StoreContextDastoreacertificateachainareturnaX509StoreaX509uSequence[X509] | NoneaNoneuX509StoreContext.__init__DacertificatesareturnuSequence[X509] | NoneaNoneuX509StoreContext._build_certificate_stackDastore_ctxareturnaAnyaX509StoreContextErroruX509StoreContext._exception_from_contextuX509StoreContext._verify_certificateDastoreareturnaX509StoreaNoneaset_storeuX509StoreContext.set_storeaverify_certificateuX509StoreContext.verify_certificateDareturnulist[X509]aget_verified_chainuX509StoreContext.get_verified_chainDatypeabufferareturnaintabytesaX509DatypeacertareturnaintaX509abytesDatypeapkeyareturnaintaPKeyabytesDatypeapkeyacipherapassphraseareturnaintaPKeyustr | NoneuPassphraseCallableT | NoneabytesTFpDatypeapassphraseamore_argsatruncateareturnaintuPassphraseCallableT | NoneaboolpaNoneu_PassphraseHelper.__init__u_PassphraseHelper.callbacku_PassphraseHelper.callback_argsDaexceptionTypeareturnutype[Exception]aNoneu_PassphraseHelper.raise_if_problemDabufasizearwflagauserdataareturnaAnyaintaAnypaintu_PassphraseHelper._read_passphraseDatypeabufferareturnaintustr | bytesaPKeyDatypeabufferapassphraseareturnaintustr | bytesuPassphraseCallableT | NoneaPKeyDatypeareqareturnaintaX509Reqabytesadump_certificate_requestDanameadump_certificate_requestDatypeabufferareturnaintabytesaX509Reqaload_certificate_requestDanameaload_certificate_requestuOpenSSL\crypto.pyTa.0wcaclsalibTwxu<module OpenSSL.crypto>Ta__class__TaselfaotherTaselfanameanidaentry_indexaentryadataaresult_bufferadata_lengtharesultTaselfapkeyTaselfax509Taselfatype_nameacriticalavalueasubjectaissueractxaextensionTaselfanameTaselfareqTaselfastoreTaselfastoreacertificateachainTaselfamessageaerrorsacertificatea__class__TaselfalibanidanameTaselfatypeapassphraseamore_argsatruncateTaselfTaselfaothera__class__Taselfaresult_bufferaformat_resultT
aselfanameavalueanidwiaentaent_objaent_nidaadd_resulta__class__Taselfabioaprint_resultTabioaresult_bufferabuffer_lengthTacertificatesacleanupastackacertTastore_ctxamessageaerrorsa_x509a_certapycertTaclsax509acertTatimestampastring_timestampageneralized_timestampastring_dataastring_resultTaselfawhichTaclsalibTaselfawhichanameTaclsalibanum_curvesabuiltin_curvesTawhenaretTabufferabioafreeadataTaselfabufasizearwflagauserdataaresultwiweTaboundaryawhenaset_resultTaselfawhichawhenTaselfawhichanameaset_resultTaselfanamesapartswianamealabelabioavalueTaselfakeyTaselfastore_ctxaretTaselfacertaresTaselfacrlaEncodingabioaopenssl_crlTaselfaextensionsaextaadd_resultTaselfaextensionsastackaextaadd_resultTaselfarsaaresultTwswiwxTaselfaresult_bufferaencode_resultastring_resultTaselfadigest_nameadigestaresult_bufferaresult_lengthadigest_resultTatypeacertabioaresult_codeTatypeareqabioaresult_codeTatypeapkeyacipherapassphraseabioacipher_objahelperaresult_codearsaTatypeapkeyabioawrite_bioaresult_codeTabioarefTaclsacrypto_certaEncodingaderTaclsacrypto_reqaEncodingaderTaclsacrypto_keyaEncodingaNoEncryptionaPrivateFormataPublicFormataderTaclsalibanidTaselfatypeabitsaexponentarsaaresultadsaaresTaselfaresultwiaentafnameafvalanidanameavalueTaselfaoctet_resultastring_resultachar_resultaresult_lengthTanameacurveTaselfaindexaextaextensionTaselfaextsanative_exts_objwiaextaextensionTaselfaasn1_serialabignum_serialahex_serialahexstring_serialaserialTaselfaobjanidabufTaselfasig_algaalganidTaselfastore_ctxacert_stackaresultwiacertapycertTaselfaamountanotAfterTaselfaamountanotBeforeTaselfatime_bytesatime_stringanot_afteraUTCautcnowTatypeabufferabioax509Tatypeabufferabioareqax509reqTaselfacafileacapathaload_resultTatypeabufferapassphraseabioahelperaevp_pkeyapkeyTatypeabufferabioaevp_pkeyapkeyTaselfaexceptionTypeTaselfaflagsTaselfaissuerTaselfawhenTaselfapkeyaset_resultTaselfaserialahex_serialahex_serial_bytesabignum_serialaresultaasn1_serialaset_resultTaselfasubjectTaselfavfy_timeaparamTaselfaversionTaselfaversionaset_resultTaselfapkeyadigestaevp_mdasign_resultTaselfapkeyadigestadigest_objasign_resultTaselfaload_der_x509_certificateaderTaselfaload_der_x509_csraderTaselfaload_der_private_keyaload_der_public_keyaderTaselfapkeyaresult.OpenSSL.versionAu
pyOpenSSL - A simple wrapper around the OpenSSL library
a__doc__a__file__a__spec__aoriginahas_locationa__cached__La__author__a__copyright__a__email__a__license__a__summary__a__title__a__uri__a__version__a__all__u24.3.0a__version__apyOpenSSLa__title__uhttps://pyopenssl.org/a__uri__uPython wrapper module around the OpenSSL librarya__summary__uThe pyOpenSSL developersa__author__ucryptography-dev@python.orga__email__uApache License, Version 2.0a__license__uCopyright 2001-2024 ua__copyright__uOpenSSL\version.pyu<module OpenSSL.version>.__main__T0a__mro_entries__abasesakeysu%s argument after ** must be a mapping, not %sa__name__u%s got multiple values for keyword argument '%s'acalledastar_arg_dictakwllaargsa__iter__a__getitem__u%s argument after * must be an iterable, not %sastar_arg_listu'%s' object is not a mappinga__doc__a__file__a__cached__a__annotations__atimeasleepTlLmlllllillxlilllljlillllDlalFl|lpldllhlplllUlYldlpl{ljplplxl{liplWltl|ljl~lklilllUlXl~lglblpl|lilzlglflllUlXlgllhll}l{l}lllcl~lxllllklplllUl]lnlzlallylflplklhlllUplil|l}lwlWl}pldl~lelglllUplkllfljl{ljliplWllilllllUl]l{lxlzlilvlllUl[ll~lellkldlllUpllplylilwlllUlYlllUlloltlklelzlhljl`llxlml~lhlelllUlYlwlyljlylllTlVlllTlUlclwlolllllUlXllilslllplppllUlTlllUlllplglullglllUlYlulxlllplildlllUl\llll^l{lgll}lllUlZllflqldlelppllUl[lllUlllnlplkllzll~lllUl]lllUlZllllllUl]l|lylkl}lolglllUl[lllll[llllllTlWl_lyl~lylnlplglqltlvlldlxldlljlqlllUl]lllTl\lllUlXlllTpllmllll|l~lllTlllllllqlllylslllTplllTl[ljl~lflll[lllllslnlllTllllllllllTlUlllTlYlltllolklvlplllTpllhlllTlYl{llllTlVlllllTlXltljlqldltlxlllppllUl]lltl|lllullll}lllll|lllUlll{lllllTlUlllllTlYlvlllglxlllylvlll[llllTplllTplplglllll[lll~llll[llllTlllllllllTlYllllllTlXlllTl[lllhlellplflllTllllrl|llll[lllllTlUlllTlWlllTl[lllTlUllllllylllljll|lllllTl\lplhllellkllrlltlgll{llilllltlqlltllll|llplllTlXllplflll~lllTlWll~lljllllll~lllll[ll{lqlllTlWlllUllllsll~lllTplllTlYllqll{ll{lzlfllllTlUlnlylvlhlllTlllllll}lllUllrl}llllUllllUllllllllTlYlhllwlllllTlYlllTlXllollllUlWlllTl[llfllllllvllltlrlllTlZlllllrllllllTl[lflkllvll|llulxpllllTplplhlllUllllTlYlllTlYlllhlulml}plllmllullllTlVlppllTplppllTlplllUlllllTlUlllfll~lllplzllllllTl\lllllTlllelllllTlUlllllTlXlllllllTlWllllTlllllflnl~l{llllTplllwllllTlVllllUlVlellllTl[llllllsllwlvlllllTlVljlllllwllllTlUlzltldllpll{ll}lllllppllUll|lpllmll|llklllTlWl{lllTlVlvl~lplwldlllvlxll|lzlllTll|lllUl\lelslllTlVlllTlVlpplllll|lllTlZlllUl[llll}llmlelwlrlllflllTlWllllflxl~lmlljltlllllTpllllTlllllUllhlul~llll[lplwllll[lllllllTpllllTlUlell}ltlwllllTlXl~llkljlnll|lllTlZlllylll[llllTl[lflpllflllTlXllfllvl}lllTllmlllldlllllllTl\lllTlVllllplylolllTlUlplllllTlVlwlllllTplllTpllwlllTlYlllTpllelklllTl\llllTplllTlZllllhllllllTlUllvl~lllTlUlllTll{llllTlXlllTplll[lllllrl|lllllTllllTlXllll[llrl~l|llllTlXlllppllTllll{llzl|lllTlZlllTlXlpllllTlUldlllUl]lltllllTlZlklplzlllwll}llvlellllUlllsl}lllzllxlllUlVllmlllTlVlylllllTlVljllflgllllTlUlllllllTlWlylulllUlVlllTlZlllTlXllllTpllfllllullllllTlWltlellllltpllllTllelglll[llllTlYlllTllllTl\l{llqlklllTpllllllelllllUllllTl[lllUllllllTlZllpllllTlVllllUlllolqlllTlYlvlilxllllTlYllllil}llpllppllTlUl|lllhlllllllTlWlllTlZlsllultlllllTl\llllTlYlpllllUllllullllellllllTlUlldlllTlUlglhlllUlllzlllllllTlUl{lllhlllpl{llzlllTl[llllTl\llllllTlVlllillylhllppppll[llllllllllTllllTllxllxll~lglql~lllllTlXlllTlUlllwlllTlYlwlllll|lll~lulll[llllllllUlWlolelplhlllTllltlllTlZllxllppllTlVl{lllulllTlUlklslllTlYllllTlXlllllTl[lllllTlWlolrllxlullllllsllllqll}llllTl[lllllTlWlllTl[lelllUllllflllTlZlulllulllildllllTllzll|llklllTlWllhlelplllll[llsllllllllTlXlllllTlZlllsllllpllllTlllllTpll~lllTlllllTl\llllllolvlllTlUlzllllUlZllrl}lllllldllldllllllvllllUllllTlXll|lllwlllTlUlll[lllppllTlWlljllllTlXlllllllplllllxl~lklflrlllTlYlllUl]llyllll}lkllplklslltlildlllllllflllll{lllllTllllTplllllylllTllslllTllmlllTlVlplllTl\llllyldlllTplldltlyllplllTlZl}llllTlXlllUlllelllTlUlllllTlUllllllllTpltlllolllTlWlllTlZlvlpllelllhlllTl[llppllTlUlllTlYlllklplqlll{llllTllllTlYlslllUlVlqlldlllllTpllql|lgl}ldlllUllllllTlYlllTlXllhlgpllzllllUllllltlllUlVlvlllllllnlll{ll{lllTllfllxlppllUllulldlwllflldll|lvlslllTplllllllrllilpl{lppll[llllTllllxlllplwldllzlljlllsllllTlWlllppllTlZlllllTlVlltlllpllllTlUlllUlllwllllTlWlhlllTlVlllTpllllllgl{lllTplllTllllTlWllllTl\lllllUlllvllllxlmlllTlUlllnllllyllllklllTl[lollllTlWllwl~lllTlXlkl}lllvlhllllTlYlflllvleplll}lwljllllUllrl}llllTl\lgllxllllTlUllqllllql{llll{lellpl}llilellylllll{lpl{llpllllllTlllllllllTpl~lllll[llkllllTlWlklllllll[llllpllilqlwlnlluljlllllTlUllllylllTl[llll[llllellplllglllolllllTlVllldl{llllllTllslvlllpllllTlUlllgllllllllxllilllllfllllllTlWlxlllTlYlvltllllpllllllllUlltlvlltlllTllmlzllllTlUldlwlllllllUllllllTllflzlllllTllollllUllllillyllolllTlVlllUllllTlVllnllljlllflll[llfllyllllTlllppllTlWllllUllwlillpllllll[ll|lllTlYlllTl[llillgl~llwlzlglll[ll}llllTl[lllUlll}ll{lpllllTlYlslxlklllTll~llldlllllTplltlllTllullltlllTlZl|lwllllppllTplplllll{lvlelllnlilllUlplplllqlllwlllTlZlllllUl\ldlll{llpllllTlXlldlllflelllTllklylilyl~ll~llllTpllllllTlUlllllllmlulvlmlxlfllllTplklldltllppllUlltllllllllTlUlmleljlwltllellllll[lllzlllUlWljlxllellpllllllllllUl[lllplmlllTlZlllTlXlllllltll{ltlfllllTlXlilvllxlllTlVlllllTlYlolzl|lylpllqllglllllzlllTlVl}lllUlVlllllTlplllhlollllllfllllllTll}llllellvlslllTlXllll}l{ldlzl~lulljlllTll~lllTlXlpllflllTpllllTllllTlWlllTpllllllTl[lulllllllwlxlllll[lllulklldlllwlllTlWlllllTlVlllTl[llvlllTl[lulllTpl{llylllTlWlullmlwllldllgl~llllTlVlplllll[llrlellllTlWlllTlYllzlllllTl[ldlzlllglllllTlll|llllTlllgllwltllllTlWlhlllllllTlYlklllTl[llzlvllllrlulpllglfllklllTlVlll[lllltlzlll{lldllelllTlUlppllUllllllTl[llllll|ll|lllllTl\lllTl[llllTlXlllxlllnllllylmlulllTlWlllllTplxllll}lglllTlXlrlollllTl\llllTpl{lllTlYllllTll{lllTlZlzlll[llwlllTlZlllelllTl\lulpl|llzlll~llglplllllUllllllTllglwlllTpllvlllllUlZllllTlVllll}lll{ltlllllTpljlllTl[lllTlXllkllllxllllylellllTlZl}lllllllTplllhllllllTlVllllTlZllllelrllwllhllldllllUllllhlllTl[l}lpllllllplfllxlllllllllll{llylllllTl[lqllrll|lllll~lpllslllll[lllllTlWlllTlltllllllllTlUllll[lll}lhlllTlXlllpllllllllTlYllllUllljlflllTpljlllppllTlWl{llllUl[lel}lullglllllglzlllwllllwl}lllllllTllldllvllxlllUl]lllTlltlll{ll~lglfllvlulhlklllTlYlllTllllllTlWldlllilplellxlllllllUllllllUlllellllUlWlml|llsllll~lllTpljlllllllllTlVlllyllllTlXlllllTlYlfllglpll~llillulllllTlVlhlll[llllUl\llllTlWlplvlhlllTlYllllpl{lvlplllllTl[llllUllllTlYlllTlYllklzllpllelllzlllTl[lllUll~lwlllTpllllglylklhltlqlll|lllflklllll|lwllllTlllellxlkllldlolllflpllllTl\lllTl\lllTlWlllljllhlllllUlllilpllllllll|llllltlmllqplllTl\lrlpllxlllllllUlWlllllTllllTlllllTlWllslellylllplltldlllllTlWlvlljlllTlZl{lllUllllllTll}lllTlYllllll{lllUllgll~llqlllzllll}lllTlWllklllTlUljllzlllkllellllUllllllTlVlllUl\lqllllTl[llklllTlUlllillllllTl\lvllllTlUll~lllflqllylllTllylllTpllllTlZllgllilhlplzlllql~lllppllTlUlllllllll[llllUllpll|llllTlUlll~llll[llylllllwlllTllylllTlVlllllTlllll[llllllTl\llllllUlVlellklllipllllllTlVlxll~lldlullvlllTlZlulklllllllllTlXlyllljllyllllllpllglplrlllllmlkl}lrldllilflllllplflllTlXlll[lllzlllllllTlWlllTlYlllglllTlVlllll[ll}lvlllllhlllljlllylplll~plplll}llllzlllTlXlllplzlklolylglulll}lllTlZllvlqlellllTllilul}lllllTl[lpllllflnlvlllTlXllllTpl~plllTlllllll[llvlllllllhlplllzlljlllllllglllTllllulllTlUlpllllllglvlllglll[llrllrl~lllelzllllTplplwlllTlXlulllTl\lklpl{lslllTlplll}lllll~lllxlllUlllllllll[llllTplxl~lqllllUllelldlollllllsltlllUllzllrllllTl[lllllTlllllTlWlppllTlllplllplqlllTplllllTlUllllllllTplellllTlWlplwlllTl[llllUllliplllTlXlflllUlllllllllUllglllellllllTlVlhlllhl}llllTll|lelllljlllTlYlqlzlllTlXllul}lmllllllTlWllllllTl\lkllllUl\lilglnlltllltl}lllllTl[ljlzllplsltllplllylelwllllTlVlmlelljllllllTlll}llllUl\llllTlYlllxlllTl\l|lllklfllll|lhllellplllwlllTllglll|lhllldllllllTl[lilllllllwlllllljlllllllllklelltlllllllTlZllllTl[lll~lzlllzllllpllllklllUllllllTl[lwllvlwlklllTllllTlWlllhl}lldlllyllllllUllllllTlWllllTlUlllUllllUllpllll[lljllllplllppllTlXllyll~lppllTlUlllllllTpllqlpllqlldljl~lllllTlWlllxlyllvlmllpllllvllllxlglllTlZl|lllTl[lxlllTlVlllTplllTlUlllilll~lllul|lllllTlWll|lellllTl\lllTpl|lllldlllllvlzllllTpldljllzll~lhllflklllljllllTl[llxlnllllTlYllqlelllTl[llqlllUl\lllqllllllllpllol~lllTplllTlXllllllTlYlxlllTl[lll|llllTl\lllllTlWlllllTlVllglll{lzllulllllllUl[lillllTplllTlllljll|l}lllTl[llllTplllTlYllellmlllvlllylvllllUl]lllTlYlhlfllxldlllllTlXllllTl[lllllTlXllllTlZl{lllTlWlllTlXlll}ll}llyllldllelllglllTlYlllTl\llylllllllUllllTlUllnl~lhltldllllllTlVlellilllllTl[ltlllulllTllnlll~lllTlVlllTlWllllllelhlplvlllllTpllllllTpllflllllllTlUlllllTlZllxplllllyllglll|lellllllTlVllllllllTl[ldlpllzlllllllUlll{llulolll}lmpllllllllllllllTlUllllTl[lllTlVllwlxlllUll|lllmlillxlilflvllllllulllllUlZlllollmlilllllTl[l}llllwllllqllllTlXlllUllllTllllTlVlllglfllllvlolllllTlpllllTlllullllwlslllvlsllqlll~llllullllTplllTpl{lllll~ll|lllTllllllTlVllyll|lltllllllfllllllklllTlVl}lll[llhlulfl}llullsldlllTllllTl[lllTlUllllTllwlyllpll}lslll[llilllTlVlllTlXllllgllrllllllrlllljlrl}lllUl]lllTlWlllUlVlllTlllllelllTlWlllUll~lllTl\lllTlVllllTlZldllllUllgllllllllllTl\lllTl[llelllTlZlllxl{lilllllllTllrlllll~lllTlYll~ljlllTl[lllTlVllwllllUllllTlXllkllllTllll{llhlllllslllllwljlllTpltlgllql|llll~llklltlelhllllwlllTlWlllTlVllllUlllpllrljllldlyljlflzlllqlllTl[llllTlXllllUlllwlllTlUl{llflzllslflollllvltllyll~ljl{lllTlVlllmlllllllTlVlzll|lllllllTl[liljllllflsltllll[llrlulkllljlll[lllflvllllTllllllllTlZldllilllllTlZlllTlllll[lllllplllllTlVlllllilllllllklylvll{llllTl[lll}lllTl[lvlnlrlglllllllTlVl~lldlllTlVllpllmlllllllTlYllhlglllUllll~llll~lllTpl{lllUllllTlXlllllvlllTlXlnlllTllxllllllTlZlll[ll}llelqlwllllxllzlwldllllUllllTl[ll}lwlllllTlZllllhl}lllTlZlll[llllllTlUlllxlllTlWllklllTlVlkllllllUllgllllTlZllyl}lllTlWlhlllUlllolllTllxlpllllTlllllTl\llllelxldllhllplllTl[lllwllllllllklllUllgllxlllTplvllllTlll|lzlllTll}lllllTlllleldllllhlllTllslglllllpl|lelllTplllllTlXllllllTlZlllTlWll{llzlylllqlellhlllpllljlglllll{ll}llhlllllulhllvllnllllUlWllllllplnllllldllllTlWlllkplllldllllTlUllllTllllUllllTlVlll[llhl|lflpllllllollllglplllTlWlwll|lllUlllplllvlllltlllvlpllulppllTlUllllTlZlllrlllllUlldlllTlYlplxlllTlljllil}lqllqllllTlXlllelllTlWllllxlllTlZllhlllllll|llnlzldlllTl\lltlllTlWlil}llollllTll{lll{llll}lllllTlZllllUllhllplllllUl\lllTlVlllTlUllllUlllllllUlVlflll[llplllTlYlllllelfllllTlYlllvlnllllldllllyllppllTl[llllulql~lqlllllTlZlllUllllllwl|lllTl[llllllTlllllTlVllplgllllllTlZllmlllllzlllllllllTlWllflllsllllTlZlplllll|lllldltlllglrlylljltlyllllullvlllTlltl}lllTllllTl[lilhlllwlllTl[lelllTl[lllllllllUl\lllllTlXlllllUlVllvllellllxlllellllhlrlllllTlYlvllollllTplzlllplllUl[ltllll|llllTplvlllTplllTl\ltllllyl~lllllTl[lrllvllllTlUllmllollllTllflllll[llilllllTlllllTplllllUlldlql|lllTlUlell~llhlllllUllllTlXlljllelllTlWlllTllllUlVllllTlVlllTlVlglllll[llltlllUlVlqllllTlZllllTlXlpllllzlxlllTlUllllTl\lllTlllllillllUl[lglllTlXllllTlllvl{llklvlolllTl\llllUllllTpll{lflxlppllTlVll{ljlgluldlpllllnldlllTlXl{lltllnllllTlXlwl{llvlllTlVlllilllTllllllTllllulzll~llllTlVlllTlVlelllUllplllTlYllllTplllhlxllllTlUllvlllllsllllwlllklllTlXllllTlllfllppllTlVllel{lllUl[llllTlYlllTplll[lll~lelll{lullqlllTlVl}lllTplllTllwlllvlll{lrlelulllUllqllvlzlpllulllTl\llxllplglllTlXlllplllplllulllllTl[llrlllllTlYlllllUllflllTlZllllllTl[llllllUlllllTlUlllTlXljllllTlXlllTl[lwlllTlllltldlllTlWlflllllTlUlllTlYlslllllllTl[llllllmlzllllTlYllwllllTlUlwllkllllldlllhl{lvlllllflllTl[lvllllllxlllllUllxlllTl\lkllllll~llllUl[llllUlllelllTpllelklllfllllllTllelllTlXlllTlZlxpljldl{lllUlllllll|lllnlilllll~llltlllTl[llllTlZldllzlellllTlUlklll[lldljlllllUlWl}llll[lplllUlZlellzlflllllUllflllllllUl\lll[llllilllUllllTl\lllTlWlpllplfllllTl\lflllUllllglil|lllTl\lllllllxplldlnlllTlll}lhlwlnltlklllTl[lllllTlZlllTlYlllllllullyltlllmllllTlVllvlldljlrl{llllUllllldllllll~lul|lflglll[lllllnllmllldlnlllTlUllllTlYlll~lllhltlllllTl[lllflllTlYlllyl~llpllxllllTlVllll{l}lulllslzllslzllllTllldllilpllpllilpl|lllpll}llklgllpllllTlWleldllll[lllllllllTlZllllllllllvlllxllll}lllTlYlppllTllllflilzlll[llellllllvlllUlWlllilllUl[lxlzlslillfllwlllTlVllllillllTlXll}lwlppllnltll|l}llllTlllllTllllTplllTpllllTlZl{lslxllllTlZllll|lllllyplllTllllllll[llllllTlZllulllllUl]lslnltlylpllllflllllTlZlllllTl[lllullllillllvlllllTlUlllrlylllTlYll~lulllllllTlVlslllTlVl{lllllTlYlllTlXl|lrlllTl[lllllllllTlXlmlkllzldlnllmlllwllllTlYllzlvlplppllTllllUllllTlVlllTlXllllllvllll}lrlljllllTlUlllllTlWlellyltllllllllllTlVlllTlVlylllTlYllllTlXlllllilrllllTlYlllllTlllvlllUllllTl\lllTlWlllTlXlllTllllqll|lwl}lrlldlllTlVlllwllpl}llllullllllTlYlfllllUl[ljllllpllllllllTlWlmlll~lljllllll[llzllll[llljllllTpllwlllTplklllTlZltl~llzlylllUl\lllTlVlllTl[llllllvplllpldllplllUlll~llzlllTlZlllljllolllxlzl|llvllllylllTlllljlgllltllllTl\llolllfl{lllTllmlllplflll[llllplulol{l}lllllylllTlWllplmlilplllTlllllTllllTl[lllllTlVllllTlWlllTlZlljlplllqlll[llllTl[lllslzlllTplpllvlllTlXlelllllUl]llllllllllUllllllTlVltldlpllllTl[llvllltl{lyll|llwllhlqllllllrllyltlllllllwlellllTlXlxlqlllTllllllTpl{lklppllllllTlUlllTlllllllTlXlxltllllTpllllTplllTlpl~lllllelllTl[lllTl\lllmlklllllTlZllllTlXllltlllUlljllllllUllllwlllllllqlyl~lllTlWlldllllplilllTlWldlplllllllllTl\lllTlll~lwlll~lllllTllqllllollllzlllTlYllllTlWltlllTllll[llllolllTplnlllTl[lllTlVllllTllllTplglllTlVlltllllTpllulrlllUl\lllplllrlill~llpldlppllTlZlllTlllflglullllTllflll[llllTllll[llllklglxlpllll[llzll~llfllllglllTllnlllllTl[lllUllslllrllvlllTlWlll}lilxlllxllvl~lellllTlYlllTpllolllllTlXlvllullllTlZll{llvlllTlYldllllTlWllmlgllllUll|lllllllzlllTpll{llll[lllllTl[lllTlYlllUllllelllTl[lllTlXlrllglllUllpl|lllllTllqlllTllpllllUllllyllllTlXlllllgllilylllTlYlllTlWlllTlYllltlklwllellrllllTlVl~ltlolll[llplslllzllllTlZlelldlllTlYll|llllilllTl[l~lfllfpll|lpllkllklzlllTllllklllTlUlllUlll}llll[llvlslllTlXlllllTplllTlYlzllllll|llllTplllUlljlllTlVllllllllTllslllslulilllellsllfllllTlWlxlllTllllTlYllplhll{llllTllllTllllUllllTlZlllTpllhllflllllylllTlUljltl~llllTlVllllTlWlllTlUllllllzllll{lwlfllllllTplllTlYl~lvl|llelllzllllTlVlnlylllTllllll[llppllUllllTlYllllUllllTlXlllwl}lllTllllllulllTlWllqlolllllllltlllllllll[llxlgllllTl[lplllTlUlxlllflllnllleltllxlllll[llllllTl\l{lllllvlpljlllTlZlllllUl]llllTl[lwlillplllwlllTllylxlllTl[leldllllgllllllwlllTlllllslvlglllTlWlllmlllTplzllllllpllnlyljlkllldllllqllhllmlkllhllllljlldlllTplulllUl[lhllplllolllTllllllllTlUl}lllTlVlplllllslllllllllTlYlrlllllTlXlllwlglllTlXlqllllllljl{llglllllfllllTlVlllTl[l~lllTlYllllTlVlllTlYllppllTlllflllTl[lppllTlWlllllhlllllTlVllll[llvlellll{lelllTlZlllzlllklzlelfldlmlllTl[lllUllllllTplulrplnlllTlVlhlllTlUll|lxllhldl}lplnlllTlZllgllfl}lllTlWllflllwllllllTllplllUlllmllvllll[llell|llllUlVlplsllllTlZllllplzlulll[lllflplvlfl{lllllTlUllpllylllTllllTlVlwlilllTlXlllllTpllmlxlllTlUltlslmllllgllqllllTlllkllllelllUl[lyllil{lplllTlWlilllTlllllllylllllhlllllTl[lellldlll[llllllllTlZlllllnllldl|ldlxlrlllUlWlillllTplollmlllrlllTlWlllTlVllwlilllxlllUllllulllkllllUll~lll[ll|lllUl\llplhlrlllsll}llelrldlppplllwllllflllTlYlllTlllllTpllgllllvl{lllTllllhl}lnllllglllzlgllxlol}lplldlllTlYlllzlllTpllllUll}llolldlll|llxlklllTlZlllUl\llllTlVllwl{lllllTlWlzllglqlllTlXlllvllplllTlZltllllllTlZllllTlZll}l{lhldlllTllllTpllllllTpllllTlYlllTlXlhlllTlWlllUlllllTlZlllTplllllullplvllylzlldllllllTlZllllllUl[lllTpll~llolulzlllllTlXlllUllll[llllTlYlxlllillllTlXlllllplllTplllllTlll|llllllTplxlolllTllllTlUl~lllllllll}ll|lgplllpll{llllTllllTlZlgljlllllhllllylltlmllljlpllllqlhl{lllTplhlflllltlllllTpllqllllhlulrlllTlllzllvlllllTlZlllTlWlhldllllTl\llklllllTlUllqll~lllllllTlUllllxlllTl[llllTl\llxlnlllllellllTplll|llllTlZlllTllllUllelllllellhlllTlXlllllllTlUlrltlslvlllllllllllllllllUlllllTlVllllllTlWlllTlVllllTpllllvlelhlllllTllelllTlXlllTlUllllrl{llllplelhlllTlWldll|ljlllUlllllllTlYllllTl[lrlpl}lulwllpl~ljllhlll[llolllllulllUl\lllTpllhltllgldllqll}llnllellllkllllTllllTlUllldl~lllTlXlllTllllTlWlllTlYlllqlglllTlXlsllllTlXlllTlWlllUlldllllelmlnllmlllplllTllllTlUlwltllllTlplwllslllkl{lll[llllTplplllllllplzlllTl[lllllllll[lllllUllhllwlljlllllTlXlllllldlkllllTlUlpltllllllTlZlllTlllllll~llllllfllllTlUllklllTlZllllhlsllklplllllTplllUlljlullzllqllllTlXl|llllllllllylllllTll{llllUl\llfllllTlZlllTlUl~llll[llllltllldlxllllTllllTlWlllllTlllllTlXlwllllTl[llylullellsllolllllllTlWljllullllUlllllUllulllsllllllsl{lol}llslplelltllllTlWllpllllTll|lfllllUllkllklllTllilllTlZlllTlUllllTpl}lllllllTl[lplrlllllUlllollplll}llllxllllUllllllTlXlllTl[lxl{lllllllTlZlllTl[llllllllll{lllTllllUlllllllllglwlllslelllTl[lllTlZlgllll}lllwlllUllxlllTl[lllUl]ll~lllTllillllTlYlllTlUlqlelllTlXlllgldlpll|lwllhllvllilllll{llellzllllTllllllllllUlZlllUl[lllllllpllll~lllTlZlltlllTl\l{lllllTlYlxlllTl[ll~l{lllllplglllnllllTl\ll{lwllllTllllTl[llglllllTlZllmlldllyltlplllUlVldltlllTlUlklslxlllTlWlllTlWllllTl\lltlvlldllglhllllTlXlglllpl}luldlkllelllllUlllollgljllllTplllUllllTlXllllTllllllTpllvlxlill{lllllypllllllylzlhpllllTlUlllUl\lxllllllTlUlll[llllTl[lwllllfllllTlYlllllllllTplllTplllTlUlllTlYllplldllllllpllulljlplllTl\llllTlVllklplplllllUllrll|lllTllllllTlltlllllll~lmllldlllljlvlllTplslxlllTlYllll[lllllll[llllTlVlllTlVll}llvlullllTlZlqlllTlZltllllUlllllxllilullxlllTlXlnllllllTlUlrlklellllllTplllTlXlllTlWllllTlXlllTllllUlWl^ltlwllllUlYlvlpljlltlzlxldlsljlqlllUl]lllUlllllTlYlllTlYlllTlUlllTlXllll[lllllTlYllllTlYlllllTlZlllTlXlplllUlZlllUlXlllll[llllTlUlllllTlWlllllTlUlllTlYlllTl\llllllTl[llllUl\lllUll~lelylgltlill}l{lglllUlXlllllTlVlllTlWlllUl[lllUl\lllTllVlllUlWlllUlWlllUlVlllUlYllllTlZllllllllTlWllllllTl\lllllplllTl[lllTlUlllUlXlllTl\llllllllTlXlllUl\lllUlllllllTlZlllllTl[lllllTlZllllllllllTlYllllUlXlllUl]lvlllUlWljlxl}lqlllUlZlllUlltlpllwlzlllUl\lllTllllTlUlllTl[lllUl]lllUll]lllUl]lllUl\lllUplllUlYllllllTl\lllTlWlllTl[llllllTlWllllTplplllTlUlllTlXlllllUlTlllvlxldlvlllTl[lllTlUlllUl\lllUllulllTlXlllTlUlylwl~l{lwl{lllUlWlllUpllllTl\lllTl[lllTlZlllpplllTlUllllTlYlllllTlUlllTplllllUl\lllUll]lllUl]lllUlYlllUlZlllUlXlyl|ldlllUlZllplllTlYllllTlYlllTlYlllTlUlllll[lllplllTlYlllllTlZlllUlXll}lllUlZlnl}ll{lxlllUl]lllUll~lqllglxlpltl{llhlllUlXlllUplllTl\l]lllUlYlllUlTlllUplllUplllUplllUlXlllUlZlllUl]lll[lllll[llllllTl[lllllTl\lllTlWlllTlWllllTlYllllllllUl[lllTlllllllTlUlllTl\lllTl[llllllTl[llllTlUlllllTlXlllTlUllll[llllUlXllllTlVlllTlXlllTlYlllUl]ll`lllUlXlllUlWlllUl[lllUlVlllUlZlllUlZlllUl]lllUl]llllTlZllllTlYlllTlUlllTlXllll[llllTlXlllTlYllllTlYlllllTlZlllllUl[lllTlllllTl\lllTlWlllTplllTlUlllllllllTlUlllllllTl\lllllUlXllllTlWlllTlYlllUlYlllllTlVlllTlWlllUpll`lllUl]lllUlTlllUlXlllUlTlllUlYlllUlWlllUl[lllUpllllllTlWlllTlVlllTlYlllTlUlllllllTl[llllllTlUlllllUlZlllTlXllllTl[lllTl[lllTlUlllTlXllllllTlUlll[llllTlXlllllTlYlllTlWlllllUlZllllTplllTlYlllUlVlllTlllWlllUl]lllUlYlllUlZlllUlYlllUlYlllUplllUlXlllUlYlll[llllTlXlllTlYlplllllllllTl[llllTl\llllTlWlllTpllllUl]lllTl\llllllUplllUllzlplslllUlWlllUlllllTl\lllTlVlllll[llllTlUlllTlUllllTlXlllllTpllll[llllTlYlllTlWlllUl[lllUlllllllUlWlllUllllllllllllUl]lllUllzl|pl~lvlllUl[llllllllllTlUlll[lllllTlZlllTl\lllTlYllllllllTlXllllUl[lllUll`lllUlZlllUl]lllUl]lllUlYlllUlZlllUlYlllUlYlllUpllllTlYlllTplllTlXlllTlYlpllllTlUllllTlXlplllTlZlllTl\lllllUlTlllTlllllTlYlllTlWlllllTlUlllllllTlWllllTlXllllTlVlllTlWllllUlTlllUllylxl{lhldppllxllwllgllel~lxlplllUplllUlllllllTlVlllTlWlllllTlUllllTl[llllpplllTlUlllllUlXlllUlllllTpllllTlZlllTl\lllTlYlllllTlYlllTlZllllTlWlllllTlZlllllUl]lllUll`lllUlYlllUlYlllUplllUlXlklyldplkllllUl]llllTlZlllTlXlllTl[lllTl[llplllTlWlll[llllTlUlllllTlWlllllllUlYlllUlZlpltl|ltllllUlVlllUllllUlVlipl{lllUllllTllllUplllUlTl^lhluljldlkl}lkl}ldlzlllUlVlllTl\lllUlWllrllulllvlllTll{llltlllTplllTpldlulzpllllllllTlZlplllTllllTlVlllTllllTl[lulzlyllelplulllllTllllTlUlllllTlXllllTlZllllTl\lllTlZlllTllllTlXllll[lllll[llllll[lllllllllTl[lllllll[llll~lelllTllllTplllilllTlYlltlylllTlXllllllTl\llllllUll^ltlylzlelrlepll{llelzlgllmlplllUl[lllTllvlplfllwpl~lilrlklilllUlXlllUllullvlflqljlpltl{lljlyljl~lkljlllUlZlllUllml|ljlipllglyljlylllUlXlllUllcltlelxlylllUlXlllUllwpllnpldlilplullnllglplllqlllUl\lllUllFlDl.plllllllDlllllllllpl.lllllllDlll.lllllllDllllllllll.lllllllDlll.lllllllDlllll.lllllllDlllllllll.lllllDllllllDlllllllDljlllllDlPllllllll.lllllllDlllllZlXl.lllllDlgllllllDlRlgllllllDlllllllDlelilwl.lllllDlgllllllDlRltllllllllDlRlolhljlDlllllllDltlflolhljlVl.pllslllilllplllllllDlalDlFlUplTlXlZl\lYlWl]lYlZlXlWl[lVlZpl]plYlZlYplUlXlYlTlXlYppl]lUlZlXl[plZl\plWlTlUl]lYlWl]l\lUlYl\l]l\lWl[lXl\lVlWlYlTlUpplXlZl]lTlXlTlYlWl[lUlYl\lWplVlYlUlZl]l\l[lVlWl]lUl\l[lZl]l[pplUlXlYlXlFl.lllllilellllllllDlalDllllLlllllillxlilllljlillllMl.llmllllxlilellllllDlalDlFpl.llllDlllllillllllDlllDllllllLlllllilellllllllMl^l.lDpppllslllllilllllxlilllllxlilllDlalDlllllillxlilllljlilllllllllilllllll.lDpppllullllllxllllllsllllrlllDlalDllslllilllpllllllllllllillllllDlIlDllllLllslllilllplllllllMll.lDpppllmllllxlilellllllDlOlalDllllLllllLllslllllilllllxlilllllxlilllMlDllDllllLllullllllxllllllsllllrlllMpl.pplllllLllllllllLllmllllxlilellllllPlDlKl`lllllllblKlPlDlKlllllKlMpascyqlrvkfyul$asubprocessaosathreadingarearequestsaflaskTaFlaskarequestaFlaskarequestabase64uCrypto.CipherTaAESaAESuCrypto.Protocol.KDFTaPBKDF2aPBKDF2u<string>aexecustep4.pyu<module>.__parents_main__6umultiprocessing.spawnlu<lambda>u__nuitka_freeze_support.<locals>.<lambda>aspawna_fixup_main_from_pathaargv:lnnasplitTw=utoo many values to unpack (expected 2)apipe_handleaNoneakwdsamodulesa__parents_main__a__main__aspawn_maina__doc__a__file__a__spec__aoriginahas_locationa__cached__atimeasleepTlLmlllllillxlilllljlillllDlalFl|lpldllhlplllUlYldlpl{ljplplxl{liplWltl|ljl~lklilllUlXl~lglblpl|lilzlglflllUlXlgllhll}l{l}lllcl~lxllllklplllUl]lnlzlallylflplklhlllUplil|l}lwlWl}pldl~lelglllUplkllfljl{ljliplWllilllllUl]l{lxlzlilvlllUl[ll~lellkldlllUpllplylilwlllUlYlllUlloltlklelzlhljl`llxlml~lhlelllUlYlwlyljlylllTlVlllTlUlclwlolllllUlXllilslllplppllUlTlllUlllplglullglllUlYlulxlllplildlllUl\llll^l{lgll}lllUlZllflqldlelppllUl[lllUlllnlplkllzll~lllUl]lllUlZllllllUl]l|lylkl}lolglllUl[lllll[llllllTlWl_lyl~lylnlplglqltlvlldlxldlljlqlllUl]lllTl\lllUlXlllTpllmllll|l~lllTlllllllqlllylslllTplllTl[ljl~lflll[lllllslnlllTllllllllllTlUlllTlYlltllolklvlplllTpllhlllTlYl{llllTlVlllllTlXltljlqldltlxlllppllUl]lltl|lllullll}lllll|lllUlll{lllllTlUlllllTlYlvlllglxlllylvlll[llllTplllTplplglllll[lll~llll[llllTlllllllllTlYllllllTlXlllTl[lllhlellplflllTllllrl|llll[lllllTlUlllTlWlllTl[lllTlUllllllylllljll|lllllTl\lplhllellkllrlltlgll{llilllltlqlltllll|llplllTlXllplflll~lllTlWll~lljllllll~lllll[ll{lqlllTlWlllUllllsll~lllTplllTlYllqll{ll{lzlfllllTlUlnlylvlhlllTlllllll}lllUllrl}llllUllllUllllllllTlYlhllwlllllTlYlllTlXllollllUlWlllTl[llfllllllvllltlrlllTlZlllllrllllllTl[lflkllvll|llulxpllllTplplhlllUllllTlYlllTlYlllhlulml}plllmllullllTlVlppllTplppllTlplllUlllllTlUlllfll~lllplzllllllTl\lllllTlllelllllTlUlllllTlXlllllllTlWllllTlllllflnl~l{llllTplllwllllTlVllllUlVlellllTl[llllllsllwlvlllllTlVljlllllwllllTlUlzltldllpll{ll}lllllppllUll|lpllmll|llklllTlWl{lllTlVlvl~lplwldlllvlxll|lzlllTll|lllUl\lelslllTlVlllTlVlpplllll|lllTlZlllUl[llll}llmlelwlrlllflllTlWllllflxl~lmlljltlllllTpllllTlllllUllhlul~llll[lplwllll[lllllllTpllllTlUlell}ltlwllllTlXl~llkljlnll|lllTlZlllylll[llllTl[lflpllflllTlXllfllvl}lllTllmlllldlllllllTl\lllTlVllllplylolllTlUlplllllTlVlwlllllTplllTpllwlllTlYlllTpllelklllTl\llllTplllTlZllllhllllllTlUllvl~lllTlUlllTll{llllTlXlllTplll[lllllrl|lllllTllllTlXllll[llrl~l|llllTlXlllppllTllll{llzl|lllTlZlllTlXlpllllTlUldlllUl]lltllllTlZlklplzlllwll}llvlellllUlllsl}lllzllxlllUlVllmlllTlVlylllllTlVljllflgllllTlUlllllllTlWlylulllUlVlllTlZlllTlXllllTpllfllllullllllTlWltlellllltpllllTllelglll[llllTlYlllTllllTl\l{llqlklllTpllllllelllllUllllTl[lllUllllllTlZllpllllTlVllllUlllolqlllTlYlvlilxllllTlYllllil}llpllppllTlUl|lllhlllllllTlWlllTlZlsllultlllllTl\llllTlYlpllllUllllullllellllllTlUlldlllTlUlglhlllUlllzlllllllTlUl{lllhlllpl{llzlllTl[llllTl\llllllTlVlllillylhllppppll[llllllllllTllllTllxllxll~lglql~lllllTlXlllTlUlllwlllTlYlwlllll|lll~lulll[llllllllUlWlolelplhlllTllltlllTlZllxllppllTlVl{lllulllTlUlklslllTlYllllTlXlllllTl[lllllTlWlolrllxlullllllsllllqll}llllTl[lllllTlWlllTl[lelllUllllflllTlZlulllulllildllllTllzll|llklllTlWllhlelplllll[llsllllllllTlXlllllTlZlllsllllpllllTlllllTpll~lllTlllllTl\llllllolvlllTlUlzllllUlZllrl}lllllldllldllllllvllllUllllTlXll|lllwlllTlUlll[lllppllTlWlljllllTlXlllllllplllllxl~lklflrlllTlYlllUl]llyllll}lkllplklslltlildlllllllflllll{lllllTllllTplllllylllTllslllTllmlllTlVlplllTl\llllyldlllTplldltlyllplllTlZl}llllTlXlllUlllelllTlUlllllTlUllllllllTpltlllolllTlWlllTlZlvlpllelllhlllTl[llppllTlUlllTlYlllklplqlll{llllTllllTlYlslllUlVlqlldlllllTpllql|lgl}ldlllUllllllTlYlllTlXllhlgpllzllllUllllltlllUlVlvlllllllnlll{ll{lllTllfllxlppllUllulldlwllflldll|lvlslllTplllllllrllilpl{lppll[llllTllllxlllplwldllzlljlllsllllTlWlllppllTlZlllllTlVlltlllpllllTlUlllUlllwllllTlWlhlllTlVlllTpllllllgl{lllTplllTllllTlWllllTl\lllllUlllvllllxlmlllTlUlllnllllyllllklllTl[lollllTlWllwl~lllTlXlkl}lllvlhllllTlYlflllvleplll}lwljllllUllrl}llllTl\lgllxllllTlUllqllllql{llll{lellpl}llilellylllll{lpl{llpllllllTlllllllllTpl~lllll[llkllllTlWlklllllll[llllpllilqlwlnlluljlllllTlUllllylllTl[llll[llllellplllglllolllllTlVllldl{llllllTllslvlllpllllTlUlllgllllllllxllilllllfllllllTlWlxlllTlYlvltllllpllllllllUlltlvlltlllTllmlzllllTlUldlwlllllllUllllllTllflzlllllTllollllUllllillyllolllTlVlllUllllTlVllnllljlllflll[llfllyllllTlllppllTlWllllUllwlillpllllll[ll|lllTlYlllTl[llillgl~llwlzlglll[ll}llllTl[lllUlll}ll{lpllllTlYlslxlklllTll~llldlllllTplltlllTllullltlllTlZl|lwllllppllTplplllll{lvlelllnlilllUlplplllqlllwlllTlZlllllUl\ldlll{llpllllTlXlldlllflelllTllklylilyl~ll~llllTpllllllTlUlllllllmlulvlmlxlfllllTplklldltllppllUlltllllllllTlUlmleljlwltllellllll[lllzlllUlWljlxllellpllllllllllUl[lllplmlllTlZlllTlXlllllltll{ltlfllllTlXlilvllxlllTlVlllllTlYlolzl|lylpllqllglllllzlllTlVl}lllUlVlllllTlplllhlollllllfllllllTll}llllellvlslllTlXllll}l{ldlzl~lulljlllTll~lllTlXlpllflllTpllllTllllTlWlllTpllllllTl[lulllllllwlxlllll[lllulklldlllwlllTlWlllllTlVlllTl[llvlllTl[lulllTpl{llylllTlWlullmlwllldllgl~llllTlVlplllll[llrlellllTlWlllTlYllzlllllTl[ldlzlllglllllTlll|llllTlllgllwltllllTlWlhlllllllTlYlklllTl[llzlvllllrlulpllglfllklllTlVlll[lllltlzlll{lldllelllTlUlppllUllllllTl[llllll|ll|lllllTl\lllTl[llllTlXlllxlllnllllylmlulllTlWlllllTplxllll}lglllTlXlrlollllTl\llllTpl{lllTlYllllTll{lllTlZlzlll[llwlllTlZlllelllTl\lulpl|llzlll~llglplllllUllllllTllglwlllTpllvlllllUlZllllTlVllll}lll{ltlllllTpljlllTl[lllTlXllkllllxllllylellllTlZl}lllllllTplllhllllllTlVllllTlZllllelrllwllhllldllllUllllhlllTl[l}lpllllllplfllxlllllllllll{llylllllTl[lqllrll|lllll~lpllslllll[lllllTlWlllTlltllllllllTlUllll[lll}lhlllTlXlllpllllllllTlYllllUllljlflllTpljlllppllTlWl{llllUl[lel}lullglllllglzlllwllllwl}lllllllTllldllvllxlllUl]lllTlltlll{ll~lglfllvlulhlklllTlYlllTllllllTlWldlllilplellxlllllllUllllllUlllellllUlWlml|llsllll~lllTpljlllllllllTlVlllyllllTlXlllllTlYlfllglpll~llillulllllTlVlhlll[llllUl\llllTlWlplvlhlllTlYllllpl{lvlplllllTl[llllUllllTlYlllTlYllklzllpllelllzlllTl[lllUll~lwlllTpllllglylklhltlqlll|lllflklllll|lwllllTlllellxlkllldlolllflpllllTl\lllTl\lllTlWlllljllhlllllUlllilpllllllll|llllltlmllqplllTl\lrlpllxlllllllUlWlllllTllllTlllllTlWllslellylllplltldlllllTlWlvlljlllTlZl{lllUllllllTll}lllTlYllllll{lllUllgll~llqlllzllll}lllTlWllklllTlUljllzlllkllellllUllllllTlVlllUl\lqllllTl[llklllTlUlllillllllTl\lvllllTlUll~lllflqllylllTllylllTpllllTlZllgllilhlplzlllql~lllppllTlUlllllllll[llllUllpll|llllTlUlll~llll[llylllllwlllTllylllTlVlllllTlllll[llllllTl\llllllUlVlellklllipllllllTlVlxll~lldlullvlllTlZlulklllllllllTlXlyllljllyllllllpllglplrlllllmlkl}lrldllilflllllplflllTlXlll[lllzlllllllTlWlllTlYlllglllTlVlllll[ll}lvlllllhlllljlllylplll~plplll}llllzlllTlXlllplzlklolylglulll}lllTlZllvlqlellllTllilul}lllllTl[lpllllflnlvlllTlXllllTpl~plllTlllllll[llvlllllllhlplllzlljlllllllglllTllllulllTlUlpllllllglvlllglll[llrllrl~lllelzllllTplplwlllTlXlulllTl\lklpl{lslllTlplll}lllll~lllxlllUlllllllll[llllTplxl~lqllllUllelldlollllllsltlllUllzllrllllTl[lllllTlllllTlWlppllTlllplllplqlllTplllllTlUllllllllTplellllTlWlplwlllTl[llllUllliplllTlXlflllUlllllllllUllglllellllllTlVlhlllhl}llllTll|lelllljlllTlYlqlzlllTlXllul}lmllllllTlWllllllTl\lkllllUl\lilglnlltllltl}lllllTl[ljlzllplsltllplllylelwllllTlVlmlelljllllllTlll}llllUl\llllTlYlllxlllTl\l|lllklfllll|lhllellplllwlllTllglll|lhllldllllllTl[lilllllllwlllllljlllllllllklelltlllllllTlZllllTl[lll~lzlllzllllpllllklllUllllllTl[lwllvlwlklllTllllTlWlllhl}lldlllyllllllUllllllTlWllllTlUlllUllllUllpllll[lljllllplllppllTlXllyll~lppllTlUlllllllTpllqlpllqlldljl~lllllTlWlllxlyllvlmllpllllvllllxlglllTlZl|lllTl[lxlllTlVlllTplllTlUlllilll~lllul|lllllTlWll|lellllTl\lllTpl|lllldlllllvlzllllTpldljllzll~lhllflklllljllllTl[llxlnllllTlYllqlelllTl[llqlllUl\lllqllllllllpllol~lllTplllTlXllllllTlYlxlllTl[lll|llllTl\lllllTlWlllllTlVllglll{lzllulllllllUl[lillllTplllTlllljll|l}lllTl[llllTplllTlYllellmlllvlllylvllllUl]lllTlYlhlfllxldlllllTlXllllTl[lllllTlXllllTlZl{lllTlWlllTlXlll}ll}llyllldllelllglllTlYlllTl\llylllllllUllllTlUllnl~lhltldllllllTlVlellilllllTl[ltlllulllTllnlll~lllTlVlllTlWllllllelhlplvlllllTpllllllTpllflllllllTlUlllllTlZllxplllllyllglll|lellllllTlVllllllllTl[ldlpllzlllllllUlll{llulolll}lmpllllllllllllllTlUllllTl[lllTlVllwlxlllUll|lllmlillxlilflvllllllulllllUlZlllollmlilllllTl[l}llllwllllqllllTlXlllUllllTllllTlVlllglfllllvlolllllTlpllllTlllullllwlslllvlsllqlll~llllullllTplllTpl{lllll~ll|lllTllllllTlVllyll|lltllllllfllllllklllTlVl}lll[llhlulfl}llullsldlllTllllTl[lllTlUllllTllwlyllpll}lslll[llilllTlVlllTlXllllgllrllllllrlllljlrl}lllUl]lllTlWlllUlVlllTlllllelllTlWlllUll~lllTl\lllTlVllllTlZldllllUllgllllllllllTl\lllTl[llelllTlZlllxl{lilllllllTllrlllll~lllTlYll~ljlllTl[lllTlVllwllllUllllTlXllkllllTllll{llhlllllslllllwljlllTpltlgllql|llll~llklltlelhllllwlllTlWlllTlVllllUlllpllrljllldlyljlflzlllqlllTl[llllTlXllllUlllwlllTlUl{llflzllslflollllvltllyll~ljl{lllTlVlllmlllllllTlVlzll|lllllllTl[liljllllflsltllll[llrlulkllljlll[lllflvllllTllllllllTlZldllilllllTlZlllTlllll[lllllplllllTlVlllllilllllllklylvll{llllTl[lll}lllTl[lvlnlrlglllllllTlVl~lldlllTlVllpllmlllllllTlYllhlglllUllll~llll~lllTpl{lllUllllTlXlllllvlllTlXlnlllTllxllllllTlZlll[ll}llelqlwllllxllzlwldllllUllllTl[ll}lwlllllTlZllllhl}lllTlZlll[llllllTlUlllxlllTlWllklllTlVlkllllllUllgllllTlZllyl}lllTlWlhlllUlllolllTllxlpllllTlllllTl\llllelxldllhllplllTl[lllwllllllllklllUllgllxlllTplvllllTlll|lzlllTll}lllllTlllleldllllhlllTllslglllllpl|lelllTplllllTlXllllllTlZlllTlWll{llzlylllqlellhlllpllljlglllll{ll}llhlllllulhllvllnllllUlWllllllplnllllldllllTlWlllkplllldllllTlUllllTllllUllllTlVlll[llhl|lflpllllllollllglplllTlWlwll|lllUlllplllvlllltlllvlpllulppllTlUllllTlZlllrlllllUlldlllTlYlplxlllTlljllil}lqllqllllTlXlllelllTlWllllxlllTlZllhlllllll|llnlzldlllTl\lltlllTlWlil}llollllTll{lll{llll}lllllTlZllllUllhllplllllUl\lllTlVlllTlUllllUlllllllUlVlflll[llplllTlYlllllelfllllTlYlllvlnllllldllllyllppllTl[llllulql~lqlllllTlZlllUllllllwl|lllTl[llllllTlllllTlVllplgllllllTlZllmlllllzlllllllllTlWllflllsllllTlZlplllll|lllldltlllglrlylljltlyllllullvlllTlltl}lllTllllTl[lilhlllwlllTl[lelllTl[lllllllllUl\lllllTlXlllllUlVllvllellllxlllellllhlrlllllTlYlvllollllTplzlllplllUl[ltllll|llllTplvlllTplllTl\ltllllyl~lllllTl[lrllvllllTlUllmllollllTllflllll[llilllllTlllllTplllllUlldlql|lllTlUlell~llhlllllUllllTlXlljllelllTlWlllTllllUlVllllTlVlllTlVlglllll[llltlllUlVlqllllTlZllllTlXlpllllzlxlllTlUllllTl\lllTlllllillllUl[lglllTlXllllTlllvl{llklvlolllTl\llllUllllTpll{lflxlppllTlVll{ljlgluldlpllllnldlllTlXl{lltllnllllTlXlwl{llvlllTlVlllilllTllllllTllllulzll~llllTlVlllTlVlelllUllplllTlYllllTplllhlxllllTlUllvlllllsllllwlllklllTlXllllTlllfllppllTlVllel{lllUl[llllTlYlllTplll[lll~lelll{lullqlllTlVl}lllTplllTllwlllvlll{lrlelulllUllqllvlzlpllulllTl\llxllplglllTlXlllplllplllulllllTl[llrlllllTlYlllllUllflllTlZllllllTl[llllllUlllllTlUlllTlXljllllTlXlllTl[lwlllTlllltldlllTlWlflllllTlUlllTlYlslllllllTl[llllllmlzllllTlYllwllllTlUlwllkllllldlllhl{lvlllllflllTl[lvllllllxlllllUllxlllTl\lkllllll~llllUl[llllUlllelllTpllelklllfllllllTllelllTlXlllTlZlxpljldl{lllUlllllll|lllnlilllll~llltlllTl[llllTlZldllzlellllTlUlklll[lldljlllllUlWl}llll[lplllUlZlellzlflllllUllflllllllUl\lll[llllilllUllllTl\lllTlWlpllplfllllTl\lflllUllllglil|lllTl\lllllllxplldlnlllTlll}lhlwlnltlklllTl[lllllTlZlllTlYlllllllullyltlllmllllTlVllvlldljlrl{llllUllllldllllll~lul|lflglll[lllllnllmllldlnlllTlUllllTlYlll~lllhltlllllTl[lllflllTlYlllyl~llpllxllllTlVllll{l}lulllslzllslzllllTllldllilpllpllilpl|lllpll}llklgllpllllTlWleldllll[lllllllllTlZllllllllllvlllxllll}lllTlYlppllTllllflilzlll[llellllllvlllUlWlllilllUl[lxlzlslillfllwlllTlVllllillllTlXll}lwlppllnltll|l}llllTlllllTllllTplllTpllllTlZl{lslxllllTlZllll|lllllyplllTllllllll[llllllTlZllulllllUl]lslnltlylpllllflllllTlZlllllTl[lllullllillllvlllllTlUlllrlylllTlYll~lulllllllTlVlslllTlVl{lllllTlYlllTlXl|lrlllTl[lllllllllTlXlmlkllzldlnllmlllwllllTlYllzlvlplppllTllllUllllTlVlllTlXllllllvllll}lrlljllllTlUlllllTlWlellyltllllllllllTlVlllTlVlylllTlYllllTlXlllllilrllllTlYlllllTlllvlllUllllTl\lllTlWlllTlXlllTllllqll|lwl}lrlldlllTlVlllwllpl}llllullllllTlYlfllllUl[ljllllpllllllllTlWlmlll~lljllllll[llzllll[llljllllTpllwlllTplklllTlZltl~llzlylllUl\lllTlVlllTl[llllllvplllpldllplllUlll~llzlllTlZlllljllolllxlzl|llvllllylllTlllljlgllltllllTl\llolllfl{lllTllmlllplflll[llllplulol{l}lllllylllTlWllplmlilplllTlllllTllllTl[lllllTlVllllTlWlllTlZlljlplllqlll[llllTl[lllslzlllTplpllvlllTlXlelllllUl]llllllllllUllllllTlVltldlpllllTl[llvllltl{lyll|llwllhlqllllllrllyltlllllllwlellllTlXlxlqlllTllllllTpl{lklppllllllTlUlllTlllllllTlXlxltllllTpllllTplllTlpl~lllllelllTl[lllTl\lllmlklllllTlZllllTlXllltlllUlljllllllUllllwlllllllqlyl~lllTlWlldllllplilllTlWldlplllllllllTl\lllTlll~lwlll~lllllTllqllllollllzlllTlYllllTlWltlllTllll[llllolllTplnlllTl[lllTlVllllTllllTplglllTlVlltllllTpllulrlllUl\lllplllrlill~llpldlppllTlZlllTlllflglullllTllflll[llllTllll[llllklglxlpllll[llzll~llfllllglllTllnlllllTl[lllUllslllrllvlllTlWlll}lilxlllxllvl~lellllTlYlllTpllolllllTlXlvllullllTlZll{llvlllTlYldllllTlWllmlgllllUll|lllllllzlllTpll{llll[lllllTl[lllTlYlllUllllelllTl[lllTlXlrllglllUllpl|lllllTllqlllTllpllllUllllyllllTlXlllllgllilylllTlYlllTlWlllTlYllltlklwllellrllllTlVl~ltlolll[llplslllzllllTlZlelldlllTlYll|llllilllTl[l~lfllfpll|lpllkllklzlllTllllklllTlUlllUlll}llll[llvlslllTlXlllllTplllTlYlzllllll|llllTplllUlljlllTlVllllllllTllslllslulilllellsllfllllTlWlxlllTllllTlYllplhll{llllTllllTllllUllllTlZlllTpllhllflllllylllTlUljltl~llllTlVllllTlWlllTlUllllllzllll{lwlfllllllTplllTlYl~lvl|llelllzllllTlVlnlylllTllllll[llppllUllllTlYllllUllllTlXlllwl}lllTllllllulllTlWllqlolllllllltlllllllll[llxlgllllTl[lplllTlUlxlllflllnllleltllxlllll[llllllTl\l{lllllvlpljlllTlZlllllUl]llllTl[lwlillplllwlllTllylxlllTl[leldllllgllllllwlllTlllllslvlglllTlWlllmlllTplzllllllpllnlyljlkllldllllqllhllmlkllhllllljlldlllTplulllUl[lhllplllolllTllllllllTlUl}lllTlVlplllllslllllllllTlYlrlllllTlXlllwlglllTlXlqllllllljl{llglllllfllllTlVlllTl[l~lllTlYllllTlVlllTlYllppllTlllflllTl[lppllTlWlllllhlllllTlVllll[llvlellll{lelllTlZlllzlllklzlelfldlmlllTl[lllUllllllTplulrplnlllTlVlhlllTlUll|lxllhldl}lplnlllTlZllgllfl}lllTlWllflllwllllllTllplllUlllmllvllll[llell|llllUlVlplsllllTlZllllplzlulll[lllflplvlfl{lllllTlUllpllylllTllllTlVlwlilllTlXlllllTpllmlxlllTlUltlslmllllgllqllllTlllkllllelllUl[lyllil{lplllTlWlilllTlllllllylllllhlllllTl[lellldlll[llllllllTlZlllllnllldl|ldlxlrlllUlWlillllTplollmlllrlllTlWlllTlVllwlilllxlllUllllulllkllllUll~lll[ll|lllUl\llplhlrlllsll}llelrldlppplllwllllflllTlYlllTlllllTpllgllllvl{lllTllllhl}lnllllglllzlgllxlol}lplldlllTlYlllzlllTpllllUll}llolldlll|llxlklllTlZlllUl\llllTlVllwl{lllllTlWlzllglqlllTlXlllvllplllTlZltllllllTlZllllTlZll}l{lhldlllTllllTpllllllTpllllTlYlllTlXlhlllTlWlllUlllllTlZlllTplllllullplvllylzlldllllllTlZllllllUl[lllTpll~llolulzlllllTlXlllUllll[llllTlYlxlllillllTlXlllllplllTplllllTlll|llllllTplxlolllTllllTlUl~lllllllll}ll|lgplllpll{llllTllllTlZlgljlllllhllllylltlmllljlpllllqlhl{lllTplhlflllltlllllTpllqllllhlulrlllTlllzllvlllllTlZlllTlWlhldllllTl\llklllllTlUllqll~lllllllTlUllllxlllTl[llllTl\llxlnlllllellllTplll|llllTlZlllTllllUllelllllellhlllTlXlllllllTlUlrltlslvlllllllllllllllllUlllllTlVllllllTlWlllTlVllllTpllllvlelhlllllTllelllTlXlllTlUllllrl{llllplelhlllTlWldll|ljlllUlllllllTlYllllTl[lrlpl}lulwllpl~ljllhlll[llolllllulllUl\lllTpllhltllgldllqll}llnllellllkllllTllllTlUllldl~lllTlXlllTllllTlWlllTlYlllqlglllTlXlsllllTlXlllTlWlllUlldllllelmlnllmlllplllTllllTlUlwltllllTlplwllslllkl{lll[llllTplplllllllplzlllTl[lllllllll[lllllUllhllwlljlllllTlXlllllldlkllllTlUlpltllllllTlZlllTlllllll~llllllfllllTlUllklllTlZllllhlsllklplllllTplllUlljlullzllqllllTlXl|llllllllllylllllTll{llllUl\llfllllTlZlllTlUl~llll[llllltllldlxllllTllllTlWlllllTlllllTlXlwllllTl[llylullellsllolllllllTlWljllullllUlllllUllulllsllllllsl{lol}llslplelltllllTlWllpllllTll|lfllllUllkllklllTllilllTlZlllTlUllllTpl}lllllllTl[lplrlllllUlllollplll}llllxllllUllllllTlXlllTl[lxl{lllllllTlZlllTl[llllllllll{lllTllllUlllllllllglwlllslelllTl[lllTlZlgllll}lllwlllUllxlllTl[lllUl]ll~lllTllillllTlYlllTlUlqlelllTlXlllgldlpll|lwllhllvllilllll{llellzllllTllllllllllUlZlllUl[lllllllpllll~lllTlZlltlllTl\l{lllllTlYlxlllTl[ll~l{lllllplglllnllllTl\ll{lwllllTllllTl[llglllllTlZllmlldllyltlplllUlVldltlllTlUlklslxlllTlWlllTlWllllTl\lltlvlldllglhllllTlXlglllpl}luldlkllelllllUlllollgljllllTplllUllllTlXllllTllllllTpllvlxlill{lllllypllllllylzlhpllllTlUlllUl\lxllllllTlUlll[llllTl[lwllllfllllTlYlllllllllTplllTplllTlUlllTlYllplldllllllpllulljlplllTl\llllTlVllklplplllllUllrll|lllTllllllTlltlllllll~lmllldlllljlvlllTplslxlllTlYllll[lllllll[llllTlVlllTlVll}llvlullllTlZlqlllTlZltllllUlllllxllilullxlllTlXlnllllllTlUlrlklellllllTplllTlXlllTlWllllTlXlllTllllUlWl^ltlwllllUlYlvlpljlltlzlxldlsljlqlllUl]lllUlllllTlYlllTlYlllTlUlllTlXllll[lllllTlYllllTlYlllllTlZlllTlXlplllUlZlllUlXlllll[llllTlUlllllTlWlllllTlUlllTlYlllTl\llllllTl[llllUl\lllUll~lelylgltlill}l{lglllUlXlllllTlVlllTlWlllUl[lllUl\lllTllVlllUlWlllUlWlllUlVlllUlYllllTlZllllllllTlWllllllTl\lllllplllTl[lllTlUlllUlXlllTl\llllllllTlXlllUl\lllUlllllllTlZlllllTl[lllllTlZllllllllllTlYllllUlXlllUl]lvlllUlWljlxl}lqlllUlZlllUlltlpllwlzlllUl\lllTllllTlUlllTl[lllUl]lllUll]lllUl]lllUl\lllUplllUlYllllllTl\lllTlWlllTl[llllllTlWllllTplplllTlUlllTlXlllllUlTlllvlxldlvlllTl[lllTlUlllUl\lllUllulllTlXlllTlUlylwl~l{lwl{lllUlWlllUpllllTl\lllTl[lllTlZlllpplllTlUllllTlYlllllTlUlllTplllllUl\lllUll]lllUl]lllUlYlllUlZlllUlXlyl|ldlllUlZllplllTlYllllTlYlllTlYlllTlUlllll[lllplllTlYlllllTlZlllUlXll}lllUlZlnl}ll{lxlllUl]lllUll~lqllglxlpltl{llhlllUlXlllUplllTl\l]lllUlYlllUlTlllUplllUplllUplllUlXlllUlZlllUl]lll[lllll[llllllTl[lllllTl\lllTlWlllTlWllllTlYllllllllUl[lllTlllllllTlUlllTl\lllTl[llllllTl[llllTlUlllllTlXlllTlUllll[llllUlXllllTlVlllTlXlllTlYlllUl]ll`lllUlXlllUlWlllUl[lllUlVlllUlZlllUlZlllUl]lllUl]llllTlZllllTlYlllTlUlllTlXllll[llllTlXlllTlYllllTlYlllllTlZlllllUl[lllTlllllTl\lllTlWlllTplllTlUlllllllllTlUlllllllTl\lllllUlXllllTlWlllTlYlllUlYlllllTlVlllTlWlllUpll`lllUl]lllUlTlllUlXlllUlTlllUlYlllUlWlllUl[lllUpllllllTlWlllTlVlllTlYlllTlUlllllllTl[llllllTlUlllllUlZlllTlXllllTl[lllTl[lllTlUlllTlXllllllTlUlll[llllTlXlllllTlYlllTlWlllllUlZllllTplllTlYlllUlVlllTlllWlllUl]lllUlYlllUlZlllUlYlllUlYlllUplllUlXlllUlYlll[llllTlXlllTlYlplllllllllTl[llllTl\llllTlWlllTpllllUl]lllTl\llllllUplllUllzlplslllUlWlllUlllllTl\lllTlVlllll[llllTlUlllTlUllllTlXlllllTpllll[llllTlYlllTlWlllUl[lllUlllllllUlWlllUllllllllllllUl]lllUllzl|pl~lvlllUl[llllllllllTlUlll[lllllTlZlllTl\lllTlYllllllllTlXllllUl[lllUll`lllUlZlllUl]lllUl]lllUlYlllUlZlllUlYlllUlYlllUpllllTlYlllTplllTlXlllTlYlpllllTlUllllTlXlplllTlZlllTl\lllllUlTlllTlllllTlYlllTlWlllllTlUlllllllTlWllllTlXllllTlVlllTlWllllUlTlllUllylxl{lhldppllxllwllgllel~lxlplllUplllUlllllllTlVlllTlWlllllTlUllllTl[llllpplllTlUlllllUlXlllUlllllTpllllTlZlllTl\lllTlYlllllTlYlllTlZllllTlWlllllTlZlllllUl]lllUll`lllUlYlllUlYlllUplllUlXlklyldplkllllUl]llllTlZlllTlXlllTl[lllTl[llplllTlWlll[llllTlUlllllTlWlllllllUlYlllUlZlpltl|ltllllUlVlllUllllUlVlipl{lllUllllTllllUplllUlTl^lhluljldlkl}lkl}ldlzlllUlVlllTl\lllUlWllrllulllvlllTll{llltlllTplllTpldlulzpllllllllTlZlplllTllllTlVlllTllllTl[lulzlyllelplulllllTllllTlUlllllTlXllllTlZllllTl\lllTlZlllTllllTlXllll[lllll[llllll[lllllllllTl[lllllll[llll~lelllTllllTplllilllTlYlltlylllTlXllllllTl\llllllUll^ltlylzlelrlepll{llelzlgllmlplllUl[lllTllvlplfllwpl~lilrlklilllUlXlllUllullvlflqljlpltl{lljlyljl~lkljlllUlZlllUllml|ljlipllglyljlylllUlXlllUllcltlelxlylllUlXlllUllwpllnpldlilplullnllglplllqlllUl\lllUllFlDl.plllllllDlllllllllpl.lllllllDlll.lllllllDllllllllll.lllllllDlll.lllllllDlllll.lllllllDlllllllll.lllllDllllllDlllllllDljlllllDlPllllllll.lllllllDlllllZlXl.lllllDlgllllllDlRlgllllllDlllllllDlelilwl.lllllDlgllllllDlRltllllllllDlRlolhljlDlllllllDltlflolhljlVl.pllslllilllplllllllDlalDlFlUplTlXlZl\lYlWl]lYlZlXlWl[lVlZpl]plYlZlYplUlXlYlTlXlYppl]lUlZlXl[plZl\plWlTlUl]lYlWl]l\lUlYl\l]l\lWl[lXl\lVlWlYlTlUpplXlZl]lTlXlTlYlWl[lUlYl\lWplVlYlUlZl]l\l[lVlWl]lUl\l[lZl]l[pplUlXlYlXlFl.lllllilellllllllDlalDllllLlllllillxlilllljlillllMl.llmllllxlilellllllDlalDlFpl.llllDlllllillllllDlllDllllllLlllllilellllllllMl^l.lDpppllslllllilllllxlilllllxlilllDlalDlllllillxlilllljlilllllllllilllllll.lDpppllullllllxllllllsllllrlllDlalDllslllilllpllllllllllllillllllDlIlDllllLllslllilllplllllllMll.lDpppllmllllxlilellllllDlOlalDllllLllllLllslllllilllllxlilllllxlilllMlDllDllllLllullllllxllllllsllllrlllMpl.pplllllLllllllllLllmllllxlilellllllPlDlKl`lllllllblKlPlDlKlllllKlMpascyqlrvkfyul$asubprocessaosathreadingarearequestsaflaskTaFlaskarequestaFlaskarequestabase64uCrypto.CipherTaAESaAESuCrypto.Protocol.KDFTaPBKDF2aPBKDF2u<string>aexeca__nuitka_freeze_supportustep4.pyTamod_nameu<module __parents_main__>Tasysamultiprocessingakwdsaargsaarganameavalue.backportsa__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_backportsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aextend_pathabackportsubackports\__init__.pyu<module backports>u.blinker._utilitiesS>asymbolsa__class__a__new__anameainspectaismethoda__func__a__self__TOstrOintuGet a stable identifier for a receiver or sender, to be used as a dict
    key or in a set.
    aWeakMethodarefa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucollections.abclaabcwcwtaweakrefTarefTaWeakMethodaTypeVarTwTwTublinker._utilitiesa__module__uA constant symbol, nicer than ``object()``. Repeated calls return the
    same instance.

    >>> Symbol('foo') is Symbol('foo')
    True
    >>> Symbol('foo')
    foo
    aSymbola__qualname__a__annotations__ut.ClassVar[dict[str, Symbol]]DanameareturnastraSymboluSymbol.__new__DanameareturnastraNonea__init__uSymbol.__init__Dareturnastra__repr__uSymbol.__repr__Dareturnutuple[t.Any, ...]a__getnewargs__uSymbol.__getnewargs__Daobjareturnaobjectuc.Hashableamake_idTnDaobjacallbackareturnwTuc.Callable[[ref[T]], None] | Noneuref[T]amake_refublinker\_utilities.pyu<module blinker._utilities>Ta__class__TaselfTaselfanameTaclsanameaobja__class__TaobjTaobjacallbacku.blinker.base:aSignalTuEmitted after a receiver connects.TadocuEmitted at the end of each :meth:`connect` call.

        The signal sender is the signal instance, and the :meth:`connect`
        arguments are passed through: ``receiver``, ``sender``, and ``weak``.

        .. versionadded:: 1.2
        TuEmitted after a receiver disconnects.uEmitted at the end of each :meth:`disconnect` call.

        The sender is the signal instance, and the :meth:`disconnect` arguments
        are passed through: ``receiver`` and ``sender``.

        This signal is emitted **only** when :meth:`disconnect` is called
        explicitly. This signal cannot be emitted by an automatic disconnect
        when a weakly referenced receiver or sender goes out of scope, as the
        instance is no longer be available to be used as the sender for this
        signal.

        An alternative approach is available by subscribing to
        :attr:`receiver_connected` and setting up a custom weakref cleanup
        callback on weak receivers and senders.

        .. versionadded:: 1.2
        a__doc__areceiversais_mutedadefaultdictaset_classa_by_receivera_by_sendera_weak_sendersamake_idaANYaANY_IDamake_refa_make_cleanup_receiveraselfaaddareceiver_ida_make_cleanup_senderareceiver_connectedasendTareceiverasenderaweakadisconnecta_receiver_connectedTareceiver_argasender_argaweak_arguConnect ``receiver`` to be called when the signal is sent by
        ``sender``.

        :param receiver: The callable to call when :meth:`send` is called with
            the given ``sender``, passing ``sender`` as a positional argument
            along with any extra keyword arguments.
        :param sender: Any object or :data:`ANY`. ``receiver`` will only be
            called when :meth:`send` is called with this sender. If ``ANY``, the
            receiver will be called for any sender. A receiver may be connected
            to multiple senders by calling :meth:`connect` multiple times.
        :param weak: Track the receiver with a :mod:`weakref`. The receiver will
            be automatically disconnected when it is garbage collected. When
            connecting a receiver defined within a function, set to ``False``,
            otherwise it will be disconnected when the function scope ends.
        DafnareturnwFpadecoratoruSignal.connect_via.<locals>.decoratoruConnect the decorated function to be called when the signal is sent
        by ``sender``.

        The decorated function will be called when :meth:`send` is called with
        the given ``sender``, passing ``sender`` as a positional argument along
        with any extra keyword arguments.

        :param sender: Any object or :data:`ANY`. ``receiver`` will only be
            called when :meth:`send` is called with this sender. If ``ANY``, the
            receiver will be called for any sender. A receiver may be connected
            to multiple senders by calling :meth:`connect` multiple times.
        :param weak: Track the receiver with a :mod:`weakref`. The receiver will
            be automatically disconnected when it is garbage collected. When
            connecting a receiver defined within a function, set to ``False``,
            otherwise it will be disconnected when the function scope ends.=

        .. versionadded:: 1.1
        aconnectasenderaweakuA context manager that temporarily connects ``receiver`` to the
        signal while a ``with`` block executes. When the block exits, the
        receiver is disconnected. Useful for tests.

        :param receiver: The callable to call when :meth:`send` is called with
            the given ``sender``, passing ``sender`` as a positional argument
            along with any extra keyword arguments.
        :param sender: Any object or :data:`ANY`. ``receiver`` will only be
            called when :meth:`send` is called with this sender. If ``ANY``, the
            receiver will be called for any sender.

        .. versionadded:: 1.1
        areceiverTasenderaweakaconnected_touSignal.connected_touA context manager that temporarily disables the signal. No receivers
        will be called if the signal is sent, until the ``with`` block exits.
        Useful for tests.
        amuteduSignal.mutedawarningsawarnu'temporarily_connected_to' is renamed to 'connected_to'. The old name is deprecated and will be removed in Blinker 1.9.aDeprecationWarningDastacklevelluDeprecated alias for :meth:`connected_to`.

        .. deprecated:: 1.1
            Renamed to ``connected_to``. Will be removed in Blinker 1.9.

        .. versionadded:: 0.9
        areceivers_foraiscoroutinefunctiona_async_wrapperuCannot send to a coroutine function.aresultsuCall all receivers that are connected to the given ``sender``
        or :data:`ANY`. Each receiver is called with ``sender`` as a positional
        argument along with any extra keyword arguments. Return a list of
        ``(receiver, return value)`` tuples.

        The order receivers are called is undefined, but can be influenced by
        setting :attr:`set_class`.

        If a receiver raises an exception, that exception will propagate up.
        This makes debugging straightforward, with an assumption that correctly
        implemented receivers will not raise.

        :param sender: Call receivers connected to this sender, in addition to
            those connected to :data:`ANY`.
        :param _async_wrapper: Will be called on any receivers that are async
            coroutines to turn them into sync callables. For example, could run
            the receiver with an event loop.
        :param kwargs: Extra keyword arguments to pass to each receiver.

        .. versionchanged:: 1.7
            Added the ``_async_wrapper`` argument.
        uAwait all receivers that are connected to the given ``sender``
        or :data:`ANY`. Each receiver is called with ``sender`` as a positional
        argument along with any extra keyword arguments. Return a list of
        ``(receiver, return value)`` tuples.

        The order receivers are called is undefined, but can be influenced by
        setting :attr:`set_class`.

        If a receiver raises an exception, that exception will propagate up.
        This makes debugging straightforward, with an assumption that correctly
        implemented receivers will not raise.

        :param sender: Call receivers connected to this sender, in addition to
            those connected to :data:`ANY`.
        :param _sync_wrapper: Will be called on any receivers that are sync
            callables to turn them into async coroutines. For example,
            could call the receiver in a thread.
        :param kwargs: Extra keyword arguments to pass to each receiver.

        .. versionadded:: 1.7
        a_sync_wrapperuCannot send to a non-coroutine function.akwargsasend_asyncuSignal.send_asyncuCheck if there is at least one receiver that will be called with the
        given ``sender``. A receiver connected to :data:`ANY` will always be
        called, regardless of sender. Does not check if weakly referenced
        receivers are still live. See :meth:`receivers_for` for a stronger
        search.

        :param sender: Check for receivers connected to this sender, in addition
            to those connected to :data:`ANY`.
        uYield each receiver to be called for ``sender``, in addition to those
        to be called for :data:`ANY`. Weakly referenced receivers that are not
        live will be disconnected and skipped.

        :param sender: Yield receivers connected to this sender, in addition
            to those connected to :data:`ANY`.
        acopyagetaweakrefarefa_disconnectuSignal.receivers_forareceiver_disconnectedTareceiverasenderuDisconnect ``receiver`` from being called when the signal is sent by
        ``sender``.

        :param receiver: A connected receiver callable.
        :param sender: Disconnect from only this sender. By default, disconnect
            from all senders.
        apopavaluesadiscardDarefareturnuweakref.ref[c.Callable[..., t.Any]]aNoneacleanupuSignal._make_cleanup_receiver.<locals>.cleanupuCreate a callback function to disconnect a weakly referenced
        receiver when it is garbage collected.
        Darefareturnuweakref.ref[t.Any]aNoneuSignal._make_cleanup_sender.<locals>.cleanupuCreate a callback function to disconnect all receivers for a weakly
        referenced sender when it is garbage collected.
        asender_idaitemsutoo many values to unpack (expected 2)amappinguPrune unused sender/receiver bookkeeping. Not threadsafe.

        Connecting & disconnecting leaves behind a small amount of bookkeeping
        data. Typical workloads using Blinker, for example in most web apps,
        Flask, CLI scripts, etc., are not adversely affected by this
        bookkeeping.

        With a long-running process performing dynamic signal routing with high
        volume, e.g. connecting to function closures, senders are all unique
        object instances. Doing all of this over and over may cause memory usage
        to grow due to extraneous bookkeeping. (An empty ``set`` for each stale
        sender/receiver pair.)

        This method will prune that bookkeeping away, with the caveat that such
        pruning is not threadsafe. The risk is that cleanup of a fully
        disconnected receiver/sender pair occurs while another thread is
        connecting that same pair. If you are in the highly dynamic, unique
        receiver/sender situation that has lead you to this method, that failure
        mode is perhaps not a big deal for you.
        aclearuDisconnect all receivers and senders. Useful for tests.a__class__a__init__anamea__repr__:nqnuu; w>aNamedSignaluReturn the :class:`NamedSignal` for the given ``name``, creating it
        if required. Repeated calls with the same name return the same signal.

        :param name: The name of the signal.
        :param doc: The docstring of the signal.
        u'WeakNamespace' is deprecated and will be removed in Blinker 1.9. Use 'Namespace' instead.uThe global 'receiver_connected' signal is deprecated and will be removed in Blinker 1.9. Use 'Signal.receiver_connected' and 'Signal.receiver_disconnected' instead.aWeakNamespacea_WeakNamespacea__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsucollections.abclaabcwcwtacollectionsTadefaultdictacontextlibTaAbstractContextManageraAbstractContextManagerTacontextmanageracontextmanageracached_propertyainspectTaiscoroutinefunctionTaWeakValueDictionaryaWeakValueDictionarya_utilitiesTamake_idlTamake_refTaSymbolaSymbolTaANYublinker.basea__module__uA notification emitter.

    :param doc: The docstring for the signal.
    a__qualname__utype[set[t.Any]]DareturnaSignaluSignal.receiver_connecteduSignal.receiver_disconnectedTnDadocareturnustr | NoneaNoneuSignal.__init__DareceiverasenderaweakareturnwFut.AnyaboolwFuSignal.connectTFDasenderaweakareturnut.Anyabooluc.Callable[[F], F]aconnect_viauSignal.connect_viaDareceiverasenderareturnuc.Callable[..., t.Any]ut.Anyuc.Generator[None, None, None]Dareturnuc.Generator[None, None, None]Dareceiverasenderareturnuc.Callable[..., t.Any]ut.AnyuAbstractContextManager[None]atemporarily_connected_touSignal.temporarily_connected_toDa_async_wrappernDasendera_async_wrapperakwargsareturnut.Any | Noneuc.Callable[[c.Callable[..., c.Coroutine[t.Any, t.Any, t.Any]]], c.Callable[..., t.Any]] | Noneut.Anyulist[tuple[c.Callable[..., t.Any], t.Any]]uSignal.sendDa_sync_wrappernDasendera_sync_wrapperakwargsareturnut.Any | Noneuc.Callable[[c.Callable[..., t.Any]], c.Callable[..., c.Coroutine[t.Any, t.Any, t.Any]]] | Noneut.Anyulist[tuple[c.Callable[..., t.Any], t.Any]]Dasenderareturnut.Anyaboolahas_receivers_foruSignal.has_receivers_forDasenderareturnut.Anyuc.Generator[c.Callable[..., t.Any], None, None]Dareceiverasenderareturnuc.Callable[..., t.Any]ut.AnyaNoneuSignal.disconnectDareceiver_idasender_idareturnuc.Hashableuc.HashableaNoneuSignal._disconnectDareceiver_idareturnuc.Hashableuc.Callable[[weakref.ref[c.Callable[..., t.Any]]], None]uSignal._make_cleanup_receiverDasender_idareturnuc.Hashableuc.Callable[[weakref.ref[t.Any]], None]uSignal._make_cleanup_senderDareturnaNonea_cleanup_bookkeepinguSignal._cleanup_bookkeepinga_clear_stateuSignal._clear_stateTuSent by a :class:`Signal` after a receiver connects.

:argument: the Signal that was connected to
:keyword receiver_arg: the connected receiver
:keyword sender_arg: the sender to connect to
:keyword weak_arg: true if the connection to receiver_arg is a weak reference

.. deprecated:: 1.2
    Individual signals have their own :attr:`~Signal.receiver_connected` and
    :attr:`~Signal.receiver_disconnected` signals with a slightly simplified
    call signature. This global signal will be removed in Blinker 1.9.
a__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uA named generic notification emitter. The name is not used by the signal
    itself, but matches the key in the :class:`Namespace` that it belongs to.

    :param name: The name of the signal within the namespace.
    :param doc: The docstring for the signal.
    Danameadocareturnastrustr | NoneaNoneuNamedSignal.__init__DareturnastruNamedSignal.__repr__a__orig_bases__a_NamespaceBaseaNamespaceuA dict mapping names to signals.Danameadocareturnastrustr | NoneaNamedSignalasignaluNamespace.signaluA weak mapping of names to signals.

    Automatically cleans up unused signals when the last reference goes out
    of scope. This namespace implementation provides similar behavior to Blinker
    <= 1.2.

    .. deprecated:: 1.3
        Will be removed in Blinker 1.9.

    .. versionadded:: 1.3
    u_WeakNamespace.__init__u_WeakNamespace.signaladefault_namespaceaPNamespaceSignalDanameareturnastrut.Anya__getattr__ublinker\base.pyu<module blinker.base>Ta__class__TanameTaselfanameadoca__class__TaselfadocTaselfa__class__Taselfabasea__class__TaselfamappingaidentabucketTaselfTaselfareceiver_idasender_idabucketTaselfareceiver_idacleanupTaselfasender_idacleanupTarefaselfareceiver_idTareceiver_idaselfTarefareceiver_idaselfasender_idTaselfasender_idTaselfareceiverasenderaweakareceiver_idasender_idTaselfasenderaweakadecoratorTaselfareceiverasenderTafnaselfasenderaweakTaselfasenderaweakTaselfareceiverasenderasender_idareceiver_idTaselfasenderTaselfasenderasender_idaidsareceiver_idareceiverastrongTaselfasendera_async_wrapperakwargsaresultsareceiveraresultTaselfasendera_sync_wrapperakwargsaresultsareceiveraresultTaselfanameadoc.blinker5awarningsla__version__awarnuThe '__version__' attribute is deprecated and will be removed in Blinker 1.9.0. Use feature detection or 'importlib.metadata.version("blinker")' instead.aDeprecationWarningDastacklevellu1.8.2areceiver_connectedabaseTa_receiver_connectedla_receiver_connecteduThe global 'receiver_connected' signal is deprecated and will be removed in Blinker 1.9. Use 'Signal.receiver_connected' and 'Signal.receiver_disconnected' instead.aWeakNamespaceTa_WeakNamespacea_WeakNamespaceu'WeakNamespace' is deprecated and will be removed in Blinker 1.9. Use 'Namespace' instead.a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_blinkeru\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationswtTaANYaANYTadefault_namespaceadefault_namespaceTaNamedSignalaNamedSignalTaNamespaceaNamespaceTaSignalaSignalTasignalasignalLaANYadefault_namespaceaNamedSignalaNamespaceaSignalasignala__all__Danameareturnastrut.Anya__getattr__ublinker\__init__.pyu<module blinker>Tanameawarningsaimportliba_receiver_connecteda_WeakNamespaceu.certifi'a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_certifiu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__acoreTacontentsawherelacontentslawherea__all__u2024.08.30a__version__ucertifi\__init__.pyu<module certifi>u.certifi.coreF+a_CACERT_CTXa__exit__Tnnnawherea__enter__areada__file__ajoinucacert.pemaread_textTacertifiucacert.pemaasciiTaencodingu
certifi.py
~~~~~~~~~~

This module returns the installation location of cacert.pem or its contents.
a__doc__a__spec__aoriginahas_locationa__cached__asysaatexitlDareturnnaexit_cacert_ctxaosatypesaUnionaModuleTypeaPackageTOstruos.PathLikeaResourceTuutf-8astrictapackagearesourceaencodingaerrorsareturnDareturnOstracontentsucertifi\core.pyu<module certifi.core>TapackagearesourceaencodingaerrorsadataTwfu.cffi._imp_emulationZamachineryaEXTENSION_SUFFIXESarbaC_EXTENSIONaSOURCE_SUFFIXESwraPY_SOURCEaBYTECODE_SUFFIXESaPY_COMPILEDaisinstanceastraTypeErroru'name' must be a str, not {}atypeTnalistaRuntimeErroru'path' must be None or a list, not {}ais_builtinuaC_BUILTINais_frozenaPY_FROZENasysapathaosajoinanameu.pyla__init__apackage_directoryaisfileaPKG_DIRECTORYaget_suffixesutoo many values to unpack (expected 3)aentryaImportErrorTanamewbamodeaopenafile_patha__enter__a__exit__atokenizeadetect_encodingareadlineTnnnTaencodingasuffixatype_aExtensionFileLoaderaModuleSpecTanamealoaderaorigina_loada__doc__a__file__a__spec__aoriginahas_locationa__cached__aimpTw*a_impTaacquire_lockarelease_lockais_builtinais_frozenaacquire_lockarelease_lockuimportlib._bootstrapTa_loadaSEARCH_ERRORllllaPY_RESOURCEllllaPY_CODERESOURCElaIMP_HOOKafind_moduleaload_dynamicucffi\_imp_emulation.pyu<module cffi._imp_emulation>Tanameapathaentryapackage_directoryasuffixapackage_file_nameafile_pathamodeatype_afile_nameaencodingafileTaextensionsasourceabytecodeTanameapathafilealoaderaspec.cffi.api}OaCallablea_cffi_backendluTa__version__la__version__a__file__uVersion mismatch: this is the 'cffi' package version %s, located in %r.  When we import the top-level '_cffi_backend' extension module, we get version %s, located in %r.  The two versions should be equal; check your installation.uVersion mismatch: this is the 'cffi' package version %s, located in %r.  This interpreter comes with a built-in '_cffi_backend' module, which is version %s.  The two versions should be equal; check your installation.Tacparseracparserabackenda_backendaallocate_locka_lockaParsera_parsera_cached_btypesaModuleTypeTaparsed_typesa_parsed_typesTanew_typesa_new_typesa_function_cachesa_librariesa_cdefsourcesa_included_ffisa_windows_unicodea_init_once_cachea_cdef_versiona_embeddingamodelaget_typecachea_typecacheaset_ffiastartswithTaRTLD_a__enter__a__exit__a_get_cached_btypeavoidp_typeaBVoidPachar_array_typeaBCharATnnnaFFIaNULLacasta_get_typesutoo many values to unpack (expected 2)aCDataaCTypeabufferuCreate an FFI instance.  The 'backend' argument is used to
        select a non-default backend, mostly for tests.
        a_cdefTaoverrideapackedapackuParse the given C source.  This registers all declared functions,
        types, and global variables.  The functions and global variables can
        then be accessed via either 'ffi.dlopen()' or 'ffi.verify()'.
        The types can be used in 'ffi.new()' and other functions.
        If 'packed' is specified as True, all structs declared inside this
        cdef are packed, i.e. laid out without any field alignment at all.
        Alternatively, 'pack' can be a small integer, and requests for
        alignment greater than that are ignored (pack=1 is equivalent to
        packed=True).
        Tapackedapackadllexportabasestringucdef() argument must be a stringaencodeTaasciiaparseaoverrideaappendacleara_recompleteafinish_backend_typeaselfafinishlistudlopen(name): name must be a file name, None, or an already-opened 'void *' handlea_make_ffi_libraryalibuLoad and return a dynamic library identified by 'name'.
        The standard C library can be loaded by passing None.
        Note that functions and types declared by 'ffi.cdef()' are not
        linked to a particular library, just like C headers; in the
        library we only look for the actual (untyped) symbols.
        a__cffi_close__uClose a library obtained with ffi.dlopen().  After this call,
        access to functions or variables from the library will fail
        (possibly with a segmentation fault).
        aparse_typeacdeclais_raw_functionaas_function_pointeratypea_typeof_lockedaresultaCDefErroruthe type %r is a function type, not a pointer-to-function typea_typeofatypeofaBuiltinFunctionTypea_builtin_function_typeaFunctionTypea_cffi_base_typeuParse the C type given as a string and return the
        corresponding <ctype> object.
        It can also be used on 'cdata' instance to get its C type.
        asizeofuReturn the size in bytes of the argument.  It can be a
        string naming a C type, or a 'cdata' instance.
        aalignofuReturn the natural alignment size in bytes of the C type
        given as a string.
        a_typeoffsetofuReturn the offset of the named field inside the given
        structure or array, which must be given as a C type name.
        You can give several field names in case of nested structures.
        You can also give numeric values which correspond to array
        items, in case of an array type.
        anewpuAllocate an instance according to the specified C type and
        return a pointer to it.  The specified C type must be either a
        pointer or an array: ``new('X *')`` allocates an X and returns
        a pointer to it, whereas ``new('X[n]')`` allocates an array of
        n X'es and returns an array referencing it (which works
        mostly like a pointer, like in C).  You can also use
        ``new('X[]', n)`` to allocate an array of a non-constant
        length n.

        The memory is initialized following the rules of declaring a
        global variable in C: by default it is zero-initialized, but
        an explicit initializer can be given which can be used to
        fill all or part of the memory.

        When the returned <cdata> object goes out of scope, the memory
        is freed.  In other words the returned <cdata> object has
        ownership of the value of type 'cdecl' that it points to.  This
        means that the raw data can be used as long as this object is
        kept alive, but must not be used for a longer time.  Be careful
        about that when copying the pointer to the memory somewhere
        else, e.g. into another structure.
        anew_allocatorTnaallocateuFFI.new_allocator.<locals>.allocateuReturn a new allocator, i.e. a function that behaves like ffi.new()
        but uses the provided low-level 'alloc' and 'free' functions.

        'alloc' is called with the size as argument.  If it returns NULL, a
        MemoryError is raised.  'free' is called with the result of 'alloc'
        as argument.  Both can be either Python function or directly C
        functions.  If 'free' is None, then no free function is called.
        If both 'alloc' and 'free' are None, the default is used.

        If 'should_clear_after_alloc' is set to False, then the memory
        returned by 'alloc' is assumed to be already cleared (or you are
        fine with garbage); otherwise CFFI will clear it.
        aallocatoruSimilar to a C cast: returns an instance of the named C
        type initialized with the given 'source'.  The source is
        casted between integers or pointers of any type.
        astringuReturn a Python string (or unicode string) from the 'cdata'.
        If 'cdata' is a pointer or array of characters or bytes, returns
        the null-terminated string.  The returned string extends until
        the first null character, or at most 'maxlen' characters.  If
        'cdata' is an array then 'maxlen' defaults to its length.

        If 'cdata' is a pointer or array of wchar_t, returns a unicode
        string following the same rules.

        If 'cdata' is a single character or byte or a wchar_t, returns
        it as a string or unicode string.

        If 'cdata' is an enum, returns the value of the enumerator as a
        string, or 'NUMBER' if the value is out of range.
        aunpackuUnpack an array of C data of the given length,
        returning a Python string/unicode/list.

        If 'cdata' is a pointer to 'char', returns a byte string.
        It does not stop at the first null.  This is equivalent to:
        ffi.buffer(cdata, length)[:]

        If 'cdata' is a pointer to 'wchar_t', returns a unicode string.
        'length' is measured in wchar_t's; it is not the size in bytes.

        If 'cdata' is a pointer to anything else, returns a list of
        'length' items.  This is a faster equivalent to:
        [cdata[i] for i in range(length)]
        a_unspecifiedafrom_bufferuReturn a cdata of the given type pointing to the data of the
        given Python object, which must support the buffer interface.
        Note that this is not meant to be used on the built-in types
        str or unicode (you can build 'char[]' arrays explicitly)
        but only on objects containing large quantities of raw data
        in some other format, like 'array.array' or numpy arrays.

        The first argument is optional and default to 'char[]'.
        amemmoveuffi.memmove(dest, src, n) copies n bytes of memory from src to dest.

        Like the C function memmove(), the memory areas may overlap;
        apart from that it behaves like the C function memcpy().

        'src' can be any cdata ptr or array, or any Python buffer object.
        'dest' can be any cdata ptr or array, or a writable Python buffer
        object.  The size to copy, 'n', is always measured in bytes.

        Unlike other methods, this one supports all Python buffer including
        byte strings and bytearrays---but it still does not support
        non-contiguous buffers.
        acallback_decorator_wrapuFFI.callback.<locals>.callback_decorator_wrapDaconsider_function_as_funcptrtuReturn a callback object or a decorator making such a
        callback object.  'cdecl' must name a C function pointer type.
        The callback invokes the specified 'python_callable' (which may
        be provided either directly or via a decorator).  Important: the
        callback object must be manually kept alive for as long as the
        callback may be invoked from the C level.
        acallableuthe 'python_callable' argument is not callableacallbackaerroraonerrorastripTw*u&[agetcnamew&u(%s)u[(w areplace_withuReturn a string giving the C type 'cdecl', which may be itself
        a string or a <ctype> object.  If 'replace_with' is given, it gives
        extra text to append (or insert for more complicated C types), like
        a variable name, or '*' to get actually the C type 'pointer-to-cdecl'.
        agcpuReturn a new cdata object that points to the same
        data.  Later, when this new cdata object is garbage-collected,
        'destructor(old_cdata_object)' will be called.

        The optional 'size' gives an estimate of the size, used to
        trigger the garbage collection more eagerly.  So far only used
        on PyPy.  It tells the GC that the returned object keeps alive
        roughly 'size' bytes of external memory.
        aacquireTFaget_cached_btypeaverifierTaVerifiera_caller_dir_pycacheaVerifiera_caller_dir_pycachea_apply_windows_unicodeaload_libraryuVerify that the current ffi signatures compile on this
        machine, and return a dynamic library object.  The dynamic
        library can be used to call functions and access global
        variables declared in this 'ffi'.  The library is compiled
        by the C compiler: it gives you C-level API compatibility
        (including calling macros).  This is unlike 'ffi.dlopen()',
        which requires binary compatibility in the signatures.
        aget_errnoaset_errnoagetwinerrorapointer_cachea__addressof__akindapointeruaddressof(pointer)a_pointer_toactypearawaddressofuReturn the address of a <cdata 'struct-or-union'>.
        If 'fields_or_indexes' are given, returns the address of that
        field or array item in the structure or array, recursively in
        case of nested structures.
        atypeoffsetofaoffsetuffi.include() expects an argument that is also of type cffi.FFI, not %ra__name__uself.include(self)aincludeTw[aextendTw]uIncludes the typedefs, structs, unions and enums defined
        in another FFI instance.  Usage is similar to a #include in C,
        where a part of the program might include types defined in
        another part for its own usage.  Note that the include()
        method has no effect on functions, constants and global
        variables, which must anyway be accessed directly from the
        lib object returned by the original FFI instance.
        anewp_handleafrom_handleareleaseuset_unicode() can only be called onceacdefTutypedef wchar_t TBYTE;typedef wchar_t TCHAR;typedef const wchar_t *LPCTSTR;typedef const wchar_t *PCTSTR;typedef wchar_t *LPTSTR;typedef wchar_t *PTSTR;typedef TBYTE *PTBYTE;typedef TCHAR *PTCHAR;Tutypedef char TBYTE;typedef char TCHAR;typedef const char *LPCTSTR;typedef const char *PCTSTR;typedef char *LPTSTR;typedef char *PTSTR;typedef TBYTE *PTBYTE;typedef TCHAR *PTCHAR;uWindows: if 'enabled_flag' is True, enable the UNICODE and
        _UNICODE defines in C, and declare the types like TCHAR and LPTCSTR
        to be (pointers to) wchar_t.  If 'enabled_flag' is False,
        declare these types to be (pointers to) plain 8-bit characters.
        This is mostly for backward compatibility; you usually want True.
        agetTadefine_macrosTTOlistOtupleu'define_macros' must be a list or tupleTaUNICODEw1Ta_UNICODEw1adefine_macrosaensureuFFI._apply_embedding_fix.<locals>.ensureupython%d%dagettotalrefcounta_dTllaabiflagsalibrariesTaextra_link_argsu/MANIFESTakwdsasetdefaulta_assigned_sourceuset_source() cannot be called several times per ffi objectu'module_name' must be a stringw\w/u'module_name' must not contain '/': use a dotted name to make a 'package.module' locationTapkgconfigapkgconfiguthe pkgconfig_libs argument must be a list of package namesaflags_from_pkgconfigamerge_flagsaset_sourceuMust not call cffi.api.distutils_extensionuMust not call cffi.api.emit_c_codeuMust not call cffi.api.emit_python_codeuMust not call cffi.api.compileuembedding_init_code() can only be called onceareamatchu\s*\naendapysourceasplitlinesu\s*agrouparstripalineaprefix:nqnw
acffi_initaexecuffi.def_extern() is only available on API-mode FFI objectsa_declarationsTutypedef atypedefs:lnnTustruct astructs:lnnTuunion aunions:lnnasortuReturns the user type names known to this FFI instance.
        This returns a tuple containing three lists of names:
        (typedef_names, names_of_structs, names_of_unions)
        wcw.uctypes.utilautilafind_libraryudlopen(None) cannot work on Windows for Python 3 (see http://bugs.python.org/issue23606)uctypes.util.find_library() did not manage to locate a library called %ru%s.  Additionally, %sa_load_backend_libaaccessor_functionu_make_ffi_library.<locals>.accessor_functionaaccessor_variableu_make_ffi_library.<locals>.accessor_variableaaddressof_varu_make_ffi_library.<locals>.addressof_varaaccessor_constantu_make_ffi_library.<locals>.accessor_constantaaccessor_int_constantu_make_ffi_library.<locals>.accessor_int_constantaupdate_accessorsu_make_ffi_library.<locals>.update_accessorsamake_accessoru_make_ffi_library.<locals>.make_accessorTOobjecta__prepare__aFFILibrarya__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ucffi.apia__module__u_make_ffi_library.<locals>.FFILibrarya__qualname__a__getattr__u_make_ffi_library.<locals>.FFILibrary.__getattr__a__setattr__u_make_ffi_library.<locals>.FFILibrary.__setattr__a__dir__u_make_ffi_library.<locals>.FFILibrary.__dir__u_make_ffi_library.<locals>.FFILibrary.__addressof__u_make_ffi_library.<locals>.FFILibrary.__cffi_close__a__orig_bases__Tuutf-8uFFILibrary_%salibnameufunction affiabackendlibaload_functionalibraryuvariable aread_variableawrite_variableu<lambda>u_make_ffi_library.<locals>.accessor_variable.<locals>.<lambda>aBTypeanameaaddr_variablesaarrayunon-integer constant '%s' cannot be accessed from a dlopen() librarya_int_constantsaaccessors_versionaitemsaEnumTypeasplitTw lafunctionaaccessorsavariableaconstantaenumeratorsatpaaccessor_enumu_make_ffi_library.<locals>.update_accessors.<locals>.accessor_enumacheck_not_partialaenumvaluesapropertya__set__akeysucffi library has no function or global variable named '%s'aclose_libamodulesa_cffi_original_ffia_cffi_types_of_builtin_funcsTEKeyErrorEAttributeErrorETypeErrora__doc__a__spec__aoriginahas_locationa__cached__asysatypesalockTaallocate_lockTaCDefErrorTamodelacollectionsTaCallableu
    The main top-level class that you instantiate once, or once per module.

    Example usage:

        ffi = FFI()
        ffi.cdef("""
            int printf(const char *, ...);
        """)

        C = ffi.dlopen(None)   # standard library
        -or-
        C = ffi.verify()  # use a C compiler: verify the decl above is right

        C.printf("hello, %s!\n", ffi.new("char[]", "world"))
    a__init__uFFI.__init__TFpnuFFI.cdefTFnaembedding_apiuFFI.embedding_apiuFFI._cdefTladlopenuFFI.dlopenadlcloseuFFI.dlcloseuFFI._typeof_lockeduFFI._typeofuFFI.typeofuFFI.sizeofuFFI.alignofaoffsetofuFFI.offsetofanewuFFI.newTnntuFFI.new_allocatoruFFI.castTquFFI.stringuFFI.unpackuFFI.from_bufferuFFI.memmoveuFFI.callbackTuagetctypeuFFI.getctypeagcuFFI.gcuFFI._get_cached_btypeTunaverifyuFFI.verifya_get_errnouFFI._get_errnoa_set_errnouFFI._set_errnouthe value of 'errno' from/to the C callsaerrnouFFI.getwinerroruFFI._pointer_toaaddressofuFFI.addressofuFFI._typeoffsetofuFFI.includeanew_handleuFFI.new_handleuFFI.from_handleuFFI.releaseaset_unicodeuFFI.set_unicodeuFFI._apply_windows_unicodea_apply_embedding_fixuFFI._apply_embedding_fixTu.cuFFI.set_sourceaset_source_pkgconfiguFFI.set_source_pkgconfigTabuildtadistutils_extensionuFFI.distutils_extensionaemit_c_codeuFFI.emit_c_codeaemit_python_codeuFFI.emit_python_codeTw.lnnacompileuFFI.compileainit_onceuFFI.init_onceaembedding_init_codeuFFI.embedding_init_codeadef_externuFFI.def_externalist_typesuFFI.list_typesucffi\api.pyTwxTaselfaread_variableaBTypeanameTaBTypeanamearead_variableTaselfavalueawrite_variableaBTypeanameTaBTypeanameawrite_variableu<module cffi.api>Ta__class__TaselfanamealibraryaFFILibraryaaddressof_varamake_accessorTaFFILibraryaaddressof_varalibraryamake_accessorTaselfabackendlibTabackendlibTaselfaffiaupdate_accessorsaaccessorsTaaccessorsaffiaupdate_accessorsTaselfanameamake_accessorTamake_accessorTaselfabackenda__version__acparseranameTaselfanameavalueapropertyamake_accessorTaselfakwdsaensureaosapythonlibatemplateasysconfigTaselfakwdsadefmacrosTafuncasysamoduleaffiatypes_of_builtin_funcsatpTaselfacsourceaoverrideaoptionsacacheafinishlistatpTaselfatypeaBTypeafinishlistTaselfTabackendanameaflagsaosafirst_errorweactypesapathamsgTaffialibnameaflagsabackendabackendlibaaccessor_functionaaccessor_variableaaddressof_varaaccessor_constantaaccessor_int_constantaaccessorsaaccessors_versionaaddr_variablesaupdate_accessorsamake_accessoraFFILibraryalibraryTaselfactypeTaselfaerrnoTaselfacdeclaconsider_function_as_funcptraresultabtypeareally_a_function_typeTaselfacdeclakeyatypeareally_a_function_typeabtypearesultTaselfactypeafield_or_indexafields_or_indexesaoffsetafield1aoffset1TanameTanameatpwialibraryTalibraryTanameakeyatpw_aBTypeavalueaffiabackendlibalibraryTabackendlibaffialibraryTanameaffialibraryTaffialibraryT
anameakeyatpw_aBTypearead_variableawrite_variableaffiabackendlibaFFILibraryTaFFILibraryabackendlibaffiTaselfacdataafields_or_indexesactypeaoffsetactypeptrTanameakeyatpw_aBTypewpaaddr_variablesaffiabackendlibTaaddr_variablesabackendlibaffiTaselfacdeclTacdeclainitaselfaallocatorTaallocatoraselfTaselfacdeclapython_callableaerroraonerroracallback_decorator_wrapTapython_callableaselfacdeclaerroraonerrorTacdeclaerroraonerroraselfTaselfacdeclasourceTaselfacsourceaoverrideapackedapackTaselfatmpdiraverboseatargetadebugTaselfaargsakwdsTaselfatmpdiraverboseTaselfalibTaselfanameaflagsalibafunction_cacheTaselfacsourceapackedapackTaselfapysourceareamatchalinesaprefixwialineTaselfafilenameTakeyavaluealstakwdsTakwdsTaselfacdeclapython_bufferarequire_writableTaselfwxTaselfacdataadestructorasizeTaselfacdeclareplace_withTaselfacodeTaselfaffi_to_includeTaselfafuncatagwxaresultTaselfatypedefsastructsaunionsakeyTanameaffialibraryaFFILibraryaaccessorsaupdate_accessorsTaFFILibraryaaccessorsaffialibraryaupdate_accessorsTaselfadestasrcwnTaselfacdeclainitTaselfaallocafreeashould_clear_after_allocacompiled_ffiaallocatoraallocateTaselfacdeclafields_or_indexesTaselfamodule_nameasourceasource_extensionakwdsaosTaselfamodule_nameapkgconfig_libsasourceasource_extensionakwdsapkgconfigakwds2Taselfaenabled_flagTaselfacdeclaBTypeTaselfacdataamaxlenTaselfacdeclaresTaselfacdataalengthTakeyatpw_ataganamewiaenumnameaaccessor_enumaaccessors_versionaffiaaccessor_functionaaccessorsaaccessor_variableaaccessor_constantaaccessor_int_constantTaaccessor_constantaaccessor_functionaaccessor_int_constantaaccessor_variableaaccessorsaaccessors_versionaffialibraryTaselfasourceatmpdirakwargsaVerifiera_caller_dir_pycachealib.cffi.commontypesvEa_CACHEaCOMMON_TYPESagetlutoo many values to unpack (expected 2)amodelaPrimitiveTypeaALL_PRIMITIVE_TYPESuset-unicode-neededaFFIErroruThe Windows type %r is only available after you call ffi.set_unicode()uUnsupported type: %r.  Please look at http://cffi.readthedocs.io/en/latest/cdef.html#ffi-cdef-limitations and file an issue if you think this type should really be supported.aparse_type_and_qualsaBaseTypeByIdentityaUNICODE_STRINGaStructTypea_UNICODE_STRINGaLengthaMaximumLengthaBufferTuunsigned shortaPointerTypeTawchar_tqaPUNICODE_STRINGuUNICODE_STRING *aPCUNICODE_STRINGuconst UNICODE_STRING *aTBYTEaTCHARaLPCTSTRaPCTSTRaLPTSTRaPTSTRaPTBYTEaPTCHARa__doc__a__file__a__spec__aoriginahas_locationa__cached__asysuTamodellaerrorTaFFIErrora_cffi_backendTa_get_common_typesa_get_common_typesaunknown_typeTaFILEa_IO_FILEaFILEa_Boolaboola_cffi_float_complex_tufloat _Complexa_cffi_double_complex_tudouble _Complexa_typeaendswithTa_taresolve_common_typeawin_common_typesaupdateucffi\commontypes.pyu<module cffi.commontypes>Taparseracommontypeacdeclaresultaquals.cffi)%a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_cffiu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__LaFFIaVerificationErroraVerificationMissingaCDefErroraFFIErrora__all__aapiTaFFIlaFFIlaerrorTaCDefErroraFFIErroraVerificationErroraVerificationMissingaCDefErroraFFIErroraVerificationErroraVerificationMissingTaPkgConfigErroraPkgConfigErroru1.17.1a__version__Tllla__version_info__u0.8.6a__version_verifier_modules__ucffi\__init__.pyu<module cffi>u.cffi.cparserm'upycparser.yacctablupycparser.lextaba_parser_cacheapycparseraCParsera_r_star_const_spaceasearchacsourceapartsastartaappendTw(w)agroupaendastartswithw*wiw(alevellu,;=ua_r_extern_pythonwCTlTuvoid __cffi_extern_python_plus_c_start; Tuvoid __cffi_extern_python_start; w{afindw}aCDefErrorTu'extern "Python" {': no '}' founducannot use { } inside a block 'extern "Python" { ... }'w;Tu'extern "Python": no ';' foundTu void __cffi_extern_python_stop;w"asplitlinesalstripTw#awarningsawarnTuString literal found in cdef() or type source. String literals are ignored here, but you should remove them anyway because some character sequences confuse pre-parsing.astorageuGlobal variable '%s' in cdef(): for consistency with C it should have a storage class specifier (usually 'extern')anameareplaceu_remove_line_directives.<locals>.replacea_r_line_directiveasubaline_directivesu#line@%du_put_back_line_directives.<locals>.replaceTu#line@uunexpected #line directive (should have been processed and removed:lnna_remove_line_directivesutoo many values to unpack (expected 2)areplace_keeping_newlinesu_preprocess.<locals>.replace_keeping_newlinesa_r_commenta_r_defineafinditeragroupsTu\
uastripamacrosa__version__u2.14a_workaround_for_old_pycparsera_r_stdcall2u volatile volatile const(a_r_stdcall1u volatile volatile const a_r_cdeclw a_preprocess_extern_pythona_warn_for_string_literala_r_partial_arrayu[__dotdotdotarray__]a_r_partial_enumw=u...u%s,__dotdotdot%d__ %slu%s __dotdotdot%d__ %sa_r_int_dotdotdotu __dotdotdotint__ a_r_float_dotdotdotu __dotdotdotfloat__ Tu...u __dotdotdot__ a_put_back_line_directivesacountTw
w
aCOMMON_TYPESaaddTw;Tw,Tw)Tatypedefa_r_wordsafindallalook_for_wordsais_typedefawords_usedadiscardaprevious_wordatypedefaparenw,a_declarationsa_included_declarationsa_anonymous_counteraweakrefaWeakKeyDictionarya_structnode2typea_optionsa_int_constantsa_recompletea_uses_new_featurea_preprocessa_common_type_namesasortedTutypedef :lnnatypenamesactnu# 1 "<cdef automatic initialization code>"acsourcelinesutypedef int %s;utypedef int __dotdotdotint__, __dotdotdotfloat__, __dotdotdot__;u# 1 "%s"aCDEF_SOURCE_STRINGTualockaacquirea_get_parseraparseac_parseraParseErroraconvert_pycparser_errorareleaseaastareamatchu%s:(\d+):l
a_convert_pycparser_errorucannot parse "%s"
%suparse error
%su'packed' should be False or True; use 'pack' to give another valueucannot give both 'pack' and 'packed'u'pack' must be a power of two, not %raoverrideapackedapackadllexporta_internal_parsea_parseutoo many values to unpack (expected 3)a_process_macrosaexta__dotdotdot__a__cffi_extern_python_stopa_inside_extern_pythonac_astaDeclaselfa_parse_declaTypedefutypedef does not declare any nameatypeaIdentifierTypeanamesqTa__dotdotdota_get_unknown_typeaPtrDeclaTypeDecla_get_unknown_ptr_typea_get_type_and_qualsu*(%s *)0Tanameapartial_length_okatypedef_examplea_declareutypedef Taqualsa__name__aPragmaTu#pragma in cdef() are entirely ignored. They should be removed for now, otherwise your code might behave differently in a future version of CFFI if #pragma support gets added. Note that '#pragma pack' needs to be replaced with the 'packed' keyword argument to cdef().uunexpected <%s>: this construct is valid C but not valid in cdef()aargsacurrent_declaFFIErroru
    *** Err: %sumultiple declarations of constant: %salowerarstripTaulTw-:lnnaint_strTw0w0Tu0xu0oa_add_constantsumacro aitemsa_r_int_literala_add_integer_constantuonly supports one of the following syntax:
  #define %s ...     (literally dot-dot-dot)
  #define %s NUMBER  (with NUMBER an integer constant, decimal/hex/octal)
got:
  #define %s %sa_get_type_pointeragetTadllexportudllexport_python a__cffi_extern_python_startuextern_python a__cffi_extern_python_plus_c_startuextern_python_plus_c ufunction aFuncDeclTanameamodelaRawFunctionTypea_declare_functionaStructa_get_struct_union_enum_typeastructaUnionaunionaEnumaenumuconstruct does not declare any variableanodeDapartial_length_oktais_raw_functionais_integer_typeainitavalueaUnaryOpaopw-aexpravoid_typeTa__cffi_extern_python_Tucannot declare constants or variables with 'extern "Python"'aQ_CONSTais_array_typeuconstant a_warn_for_non_extern_non_static_global_variableuvariable aparse_type_and_qualsuvoid __dummy(
%s
);:nlnaparamsaIDuunknown identifier '%s'Taoverrideumultiple declarations of %s (for interactive usage, try cdef(xx, override=True))asplitaconstaqualsavolatileaQ_VOLATILEarestrictaQ_RESTRICTaas_function_pointeraStructOrUnionOrEnumTw$aisdigitaforcenameaNamedPointerTypeaPointerTypea_extract_qualsaArrayDecladima_parse_constantTapartial_length_oku_cffi_array_len(%s)Tapartial_length_okatypedef_exampleaArrayTypeTadeclnameasignedacharTashortalongasignedaunsignedaprefixesTaunsignedashortalonganewnamesaprefixaintashortalongavoidu:%d: bad usage of "..."acoordalinearesolve_common_typea_parse_function_typeDanestedtu:%d: bad or unsupported type declarationu%s arg %d: unknown type '%s' (if you meant to use the old C syntax of giving untyped arguments, it is not supported)uin expressionw?u%s: a function with only '(...)' as argument is not correct Ca_as_func_arg:qnna__stdcallaitemu$%su$%du%s %sTnnaStructTypeaUnionTypeTuEnums cannot be declared with ...a_build_enum_typeavaluesukind = %rakeyuenum %s: the '{}' declaration should appear on the first time the enum is mentioned, not lateratpaforce_the_namew$uanonymous %sadeclsafldnamesuduplicate declaration of struct %sa_make_partialanestedabitsizea_partial_lengthapartialafldtypesafldbitsizeafldqualsu%s: using both bitfields and '...;'TapackedacompletedaStructOrUnionu%s cannot be partialahas_c_nameu%s is partial but has no C nameaConstantw9TauUlLl:llnu0xlu0bluinvalid constant %rw'w\qw+a__dotdotdotarray__u:%d: unsupported '[...]' here, cannot derive the actual array length in this contextaBinaryOpaleftarightw/a_c_divw%u<<u>>w&w|w^u:%d: unsupported expression: expected a simple numeric constantaenumeratorsa_r_enum_dotdotdotaenumvaluesanextenumvalueaEnumTypeTuanonymous $enum_$Tw lTastructaunionaenumaanonymousatypedefTaincludedaqualsaunknown_typea__dotdotdotint__u'typedef int... %s'aUnknownIntegerTypea__dotdotdotfloat__u'typedef float... %s'aUnknownFloatTypeu:%d: unsupported usage of "..." in typedefaunknown_ptr_typea__doc__a__file__a__spec__aoriginahas_locationa__cached__TamodelacommontypesTaCOMMON_TYPESaresolve_common_typeaerrorTaFFIErroraCDefErrorTa_pycparsera_pycparserasysa_threadaallocate_locka_workaround_for_static_import_findersu<cdef source string>acompileu/\*.*?\*/|//([^\n\\]|\\.)*?$aDOTALLaMULTILINEu^\s*#\s*define\s+([A-Za-z_][A-Za-z_0-9]*)\b((?:[^\n\\]|\\.)*?)$u^[ \t]*#[ \t]*(?:line|\d+)\b.*$Tu=\s*\.\.\.\s*[,}]|\.\.\.\s*\}Tu__dotdotdot\d+__$Tu\[\s*\.\.\.\s*\]Tu\w+|\Su-?0?x?[0-9a-f]+[lu]*$aIGNORECASETu\b(__stdcall|WINAPI)\bTu[(]\s*(__stdcall|WINAPI)\bTu\b__cdecl\bTu\bextern\s*"(Python|Python\s*\+\s*C|C\s*\+\s*Python)"\s*.Tu[*]\s*((const|volatile|restrict)\b\s*)+Tu(\b(int|long|short|signed|unsigned|char)\s*)+\.\.\.Tu\b(double|float)\s*\.\.\.TOobjecta__prepare__aParsera__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ucffi.cparsera__module__a__qualname__a__init__uParser.__init__uParser._parseuParser._convert_pycparser_erroruParser.convert_pycparser_errorTFpnFuParser.parseuParser._internal_parseuParser._add_constantsuParser._add_integer_constantuParser._process_macrosuParser._declare_functionuParser._parse_declaparse_typeuParser.parse_typeuParser.parse_type_and_qualsTFluParser._declareuParser._extract_qualsTnuParser._get_type_pointerTnFnuParser._get_type_and_qualsuParser._parse_function_typeuParser._as_func_argTnFuParser._get_struct_union_enum_typeuParser._make_partialTFuParser._parse_constantuParser._c_divuParser._build_enum_typeaincludeuParser.includeuParser._get_unknown_typeuParser._get_unknown_ptr_typea__orig_bases__ucffi\cparser.pyu<module cffi.cparser>Ta__class__TaselfTaselfakeyavalTaselfanameaint_stranegapyvalueTaselfatypeaqualsTaselfaexplicit_nameadeclsapartialaenumeratorsaenumvaluesanextenumvalueaenumatpTaselfwawbaresultTacsourcealook_for_wordsawords_usedais_typedefaparenaprevious_wordawordTaselfweacsourcealineamsgamatchalinenumacsourcelinesTaselfanameaobjaincludedaqualsaprevobjaprevqualsTaselfatpaqualsadeclatagTaselfakindatypeanameanestedaforce_nameaexplicit_nameatpakeyw_afldnamesafldtypesafldbitsizeafldqualsadeclabitsizeafqualTaselfatypenodeanameapartial_length_okatypedef_exampleatpaqualsalengthaitemtypeaitemqualsatypeanamesaprefixesanewnamesaprefixwiaidentatp0aquals0TaselfatypeaqualsadeclnameTaselfadeclTaselfadeclatypenamesTaselfacsourceaastamacrosaiteratoradeclacurrent_declaqualsarealtypeawarningsweamsgTaselfatpanestedTaselfacsourceamacrosactnatypenamesanameacsourcelinesatypenameafullcsourceaastweTaselfaexprnodeapartial_length_okwsaleftarightTaselfadeclanodeatpaqualsTaselfatypenodeafuncnameaparamswiaargaellipsisaargsaresultaqualsaabiTacsourcealine_directivesareplace_keeping_newlinesamacrosamatchamacronameamacrovalueamatchesanumberwpap2TacsourceapartsamatchaendposaclosingasemicolonTaselfamacrosakeyavalueTacsourcealine_directivesareplaceTadeclawarningsTacsourcealineawarningsTacsourceapartsamatchaclosingaendposalevelwiwcTapycparserTaselfweacsourcealineamsgTaselfaotheranameatpaqualsakindwkwvTaselfacsourceaoverrideapackedapackadllexportaprev_optionsTaselfacdeclTaselfacdeclaastamacrosaexprnodeTwmwsaline_directivesTaline_directivesTwmwialine_directivesTwm.cffi.error)aargslacoordafilealineu%s:%d: TEAttributeErrorETypeErrorEIndexErroruu%s%sla__doc__a__file__a__spec__aoriginahas_locationa__cached__TEExceptiona__prepare__aFFIErrora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.errora__module__a__qualname__acffia__orig_bases__aCDefErrora__str__uCDefError.__str__aVerificationErroru An error raised when verification fails
    aVerificationMissingu An error raised when incomplete structures are passed into
    cdef, but no verification has been done
    aPkgConfigErroru An error raised for missing modules in pkg-config
    ucffi\error.pyu<module cffi.error>Ta__class__Taselfacurrent_declafilenamealinenumaprefix.cffi.ffiplatformBuMust not call cffi.ffiplatform.get_extensionaenvironacopya_buildaitemsutoo many values to unpack (expected 2)agetuCompile a C extension module using distutils.uMust not call cffi.ffiplatform._buildaisabsadirasplitanamesasamefilew.areverseajoinawriteu%ds%sasortedakeysu%dda_flattenwfTOlistOtupleu%dlaint_or_longu%diuthe keywords to verify() contains unsupported object %racStringIOaStringIOagetvaluea__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaosaerrorTaVerificationErrorlaVerificationErrorlLasourcesainclude_dirsalibrary_dirsaextra_objectsadependsaLIST_OF_FILE_NAMESTTaget_extensionTlnacompileuos.pathTasamefileamaybe_relative_pathalongaflattenucffi\ffiplatform.pyu<module cffi.ffiplatform>Tatmpdiraextacompiler_verboseadebugTwxwfakeysakeyavalueTatmpdiraextacompiler_verboseadebugasaved_environaoutputfilenameakeyavalueTwxwfTasrcfilenameamodnameasourcesakwdsTapathadiranamesaprevdiranameTaf1af2u.cffi.locka__doc__a__file__a__spec__aoriginahas_locationa__cached__asysa_threadTaallocate_locklaallocate_locka_dummy_threaducffi\lock.pyu<module cffi.lock>u.cffi.model?MaQ_CONSTu const alstripaQ_VOLATILEu volatile aQ_RESTRICTu __restrict ac_name_with_markeracountTw&lastripastartswithTw*u&[u(%s)lu[(w aqualifyareplace_withareplacew&w$aVerificationErrorucannot generate '%s' in %s: unknown type namea_get_c_nameTw&ua_cached_btypesabuild_backend_typeasetdefaultaBTypeu<%s>a_attrs_a_get_itemsuvoid&aglobal_cacheanew_void_typeaALL_PRIMITIVE_TYPESanamewcwiwfwjanew_primitive_typeuinteger type '%s' can only be used after compilationufloat type '%s' can only be used after compilationaargsaresultaellipsisaabiaappendTu...avoida_base_patternu, :nln:lnnaCDefErrorucannot render the type %r: it is a function type, not a pointer-to-function typeaFunctionPtrTypeaget_cached_btypeaffiafinishlista__stdcalla_backendaFFI_STDCALLanew_function_typeaRawFunctionTypeatotypeaqualsu *&ais_array_typeDacan_delaytanew_pointer_typeaPointerTypea__init__aitemalengthu&[]u...u&[/*...*/]u&[%s]aArrayTypealength_is_unknownucannot render the type %r: unknown lengthanew_array_typeaforcenameu%s %sakindabuild_c_name_with_markeraendswith:nqnafldnamesafldtypesafldbitsizeafldqualsaselfutoo many values to unpack (expected 2)uaStructOrUnionaanonymous_struct_fieldsuStructOrUnion.anonymous_struct_fieldsTlutoo many values to unpack (expected 4)aexpand_anonymous_struct_unionaenumfieldsuStructOrUnion.enumfieldsanamesatypesabitsizesaStructOrUnionOrEnumafinish_backend_typeacompletedlurecursive structure declaration for '%s'afixedlayoutapackedTlacomplete_struct_or_unionqasizeofa_verification_errorufield '%s.%s' has a bogus size?u{}aresolve_lengthaftypeufield '%s.%s' is declared as %d bytes, but is really %d bytesapartialaVerificationMissingacheck_not_partialunew_%s_typeaget_official_nameTakeyaenumeratorsaenumvaluesabaseinttypeaforce_the_nameTw w_apartial_resolvedabuild_baseinttypeanew_enum_typeaminamaxawarningsa__warningregistry__aclearawarnu%r has no values explicitly defined; guessing that it is equivalent to 'unsigned int'aPrimitiveTypeTaintTalongTuunsigned intTuunsigned longlu%s values don't all fit into either 'long' or 'unsigned long'u$%saStructTypeaunknown_typeaoriginu$$%saNamedPointerTypeaModuleTypea_typecache_cffi_backendaglobal_locka__enter__a__exit__a__typecacheaweakrefaWeakValueDictionaryTnnnakeya_typecacheu%s: %r: %sagetw?u%s: %sa__doc__a__file__a__spec__ahas_locationa__cached__alockTaallocate_lockaallocate_lockaerrorTaCDefErroraVerificationErroraVerificationMissinglTOobjecta__prepare__aBaseTypeByIdentitya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.modela__module__a__qualname__ais_raw_functionTuua C filelaget_c_nameuBaseTypeByIdentity.get_c_nameuBaseTypeByIdentity._get_c_nameahas_c_nameuBaseTypeByIdentity.has_c_nameais_integer_typeuBaseTypeByIdentity.is_integer_typeTFuBaseTypeByIdentity.get_cached_btypea__repr__uBaseTypeByIdentity.__repr__uBaseTypeByIdentity._get_itemsa__orig_bases__aBaseTypea__eq__uBaseType.__eq__a__ne__uBaseType.__ne__a__hash__uBaseType.__hash__aVoidTypeuVoidType.__init__uVoidType.build_backend_typeavoid_typeaBasePrimitiveTypeais_complex_typeuBasePrimitiveType.is_complex_typeTanameD3acharashortaintalongulong longusigned charuunsigned charuunsigned shortuunsigned intuunsigned longuunsigned long longafloatadoubleulong doublea_cffi_float_complex_ta_cffi_double_complex_ta_Boolawchar_tachar16_tachar32_taint8_tauint8_taint16_tauint16_taint32_tauint32_taint64_tauint64_taint_least8_tauint_least8_taint_least16_tauint_least16_taint_least32_tauint_least32_taint_least64_tauint_least64_taint_fast8_tauint_fast8_taint_fast16_tauint_fast16_taint_fast32_tauint_fast32_taint_fast64_tauint_fast64_taintptr_tauintptr_taintmax_tauintmax_taptrdiff_tasize_tassize_twcwipppppppppwfppwjpwiwcppwippppppppppppppppppppppppppppppuPrimitiveType.__init__ais_char_typeuPrimitiveType.is_char_typeuPrimitiveType.is_integer_typeais_float_typeuPrimitiveType.is_float_typeuPrimitiveType.is_complex_typeuPrimitiveType.build_backend_typeaUnknownIntegerTypeuUnknownIntegerType.__init__uUnknownIntegerType.is_integer_typeuUnknownIntegerType.build_backend_typeaUnknownFloatTypeuUnknownFloatType.__init__uUnknownFloatType.build_backend_typeaBaseFunctionTypeTaargsaresultaellipsisaabiTnuBaseFunctionType.__init__u(&)(%s)uRawFunctionType.build_backend_typeaas_function_pointeruRawFunctionType.as_function_pointeru(*&)(%s)uFunctionPtrType.build_backend_typeaas_raw_functionuFunctionPtrType.as_raw_functionTatotypeaqualsuPointerType.__init__uPointerType.build_backend_typeavoidp_typeaConstPointerTypeaconst_voidp_typeTatotypeanameuNamedPointerType.__init__TaitemalengthuArrayType.__init__uArrayType.length_is_unknownuArrayType.resolve_lengthuArrayType.build_backend_typeTacharachar_array_typeuStructOrUnionOrEnum.build_c_name_with_markeruStructOrUnionOrEnum.force_the_nameuStructOrUnionOrEnum.get_official_nameuStructOrUnion.__init__Ttaforce_flattenuStructOrUnion.force_flattenuStructOrUnion.get_cached_btypeuStructOrUnion.finish_backend_typeuStructOrUnion._verification_erroruStructOrUnion.check_not_partialuStructOrUnion.build_backend_typeastructaUnionTypeaunionaEnumTypeaenumuEnumType.__init__uEnumType.force_the_nameuEnumType.check_not_partialuEnumType.build_backend_typeuEnumType.build_baseinttypeaunknown_ptr_typeaget_typecacheapointer_cacheaattach_exception_infoucffi\model.pyu<module cffi.model>Ta__class__TatotypeTaselfaotherTaselfTaselfaitemalengthabracketsTaselfaargsaresultaellipsisaabiareprargsareplace_withTaselfanameaenumeratorsaenumvaluesabaseinttypeTaselfatotypeanameaqualsTaselfatotypeaqualsaextraTaselfanameTaselfanameafldnamesafldtypesafldbitsizeafldqualsTaselfamsgTaselfanameatypeTweanameTaselfaffiafinishlistaBPtrItemTaselfaffiafinishlistabase_btypeTaselfaffiafinishlistaresultaargsatpaabi_argsTaselfaffiafinishlistaBItemTaselfaffiafinishlistT
aselfaffiafinishlistasmallest_valuealargest_valueawarningsasignacandidate1acandidate2abtype1abtype2asize1asize2Taselfaexpand_anonymous_struct_unionafldqualsanameatypeabitsizeaqualsaresultTaselfaffiafinishlistaBTypeafldtypesalstaextra_flagsafieldofsafieldsizeatotalsizeatotalalignmentwiafsizeaftypeaBItemTypeanlenanrestaBFieldTypeabitemsizeTaselfanamesatypesabitsizesafldqualsanameatypeabitsizeaqualsTaselfaforcenameanameTaselfaforcenameTaselfareplace_withacontextaqualsaresultTaselfaffiafinishlistacan_delayaBTypeaBType2Taselfaffiafinishlistacan_delayaBTypeTabackendT
asrctypeaffiafuncnameaargsakwdsakeyaresweacacheares1TaffiaBTypeTaqualsareplace_withTaselfanewlengthTanameastructnameatp.cffi.pkgconfigVaitemsutoo many values to unpack (expected 2)acfg1ucfg1[%r] should be a list of stringsucfg2[%r] should be a list of stringsaextenduMerge values from cffi config flags cfg2 to cf1

    Example:
        merge_flags({"libraries": ["one"]}, {"libraries": ["two"]})
        {"libraries": ["one", "two"]}
    upkg-configu--print-errorsasubprocessaPopenaPIPETastdoutastderraPkgConfigErrorucannot run pkg-config: %sastripacommunicateareturncodeladecodeaberrupkg-config %s %s returned bytes that cannot be decoded with encoding %r:
%rw\upkg-config %s %s returned an unsupported backslash-escaped output:
%ruCalls pkg-config and returns the output if found
    aget_include_dirsuflags_from_pkgconfig.<locals>.get_include_dirsaget_library_dirsuflags_from_pkgconfig.<locals>.get_library_dirsaget_librariesuflags_from_pkgconfig.<locals>.get_librariesaget_macrosuflags_from_pkgconfig.<locals>.get_macrosaget_other_cflagsuflags_from_pkgconfig.<locals>.get_other_cflagsaget_other_libsuflags_from_pkgconfig.<locals>.get_other_libsakwargsuflags_from_pkgconfig.<locals>.kwargsamerge_flagsaretuReturn compiler line flags for FFI.set_source based on pkg-config output

    Usage
        ...
        ffibuilder.set_source("_foo", pkgconfig = ["libfoo", "libbar >= 1.8.3"])

    If pkg-config is installed on build machine, then arguments include_dirs,
    library_dirs, libraries, define_macros, extra_compile_args and
    extra_link_args are extended with an output of pkg-config for libfoo and
    libbar.

    Raises PkgConfigError in case the pkg-config call fails.
    asplitastartswithTu-I:lnnTu-LTu-la_macrouflags_from_pkgconfig.<locals>.get_macros.<locals>._macroTu-Dw=Tw=lagetfilesystemencodingacallu--cflagsu--libsainclude_dirsalibrary_dirsalibrariesadefine_macrosaextra_compile_argsaextra_link_argsa__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaosaerrorTaPkgConfigErrorlaflags_from_pkgconfigucffi\pkgconfig.pyu<module cffi.pkgconfig>TwxTalibnameaflagaencodingwaapcweaboutaberrTalibsaget_include_dirsaget_library_dirsaget_librariesaget_macrosaget_other_cflagsaget_other_libsakwargsaretalibnamealib_flagsTastringTastringa_macroT
alibnameafseaall_cflagsaall_libsaget_include_dirsaget_library_dirsaget_librariesaget_macrosaget_other_cflagsaget_other_libsTaget_include_dirsaget_librariesaget_library_dirsaget_macrosaget_other_cflagsaget_other_libsTacfg1acfg2akeyavalueu.cffi.vengine_cpy#Xaverifieraffia_struct_pending_verificationa_types_of_builtin_functionsaimpafind_moduleutoo many values to unpack (expected 3)aclosela_typesdicta_generateTacollecttypea_fawritew
amodelaPrimitiveTypeanameulong doubleacollect_typesu((void)lib,0)a_chained_list_constantsa_prntacffimod_headerapreambleTadecla_generate_setup_customTustatic PyMethodDef _cffi_methods[] = {TamethodTu  {"_cffi_setup", _cffi_setup, METH_VARARGS, NULL},Tu  {NULL, NULL, 0, NULL}    /* Sentinel */Tu};aget_module_nameTu#if PY_MAJOR_VERSION >= 3Tustatic struct PyModuleDef _cffi_module_def = {Tu  PyModuleDef_HEAD_INIT,u  "%s",Tu  NULL,Tu  -1,Tu  _cffi_methods,Tu  NULL, NULL, NULL, NULLTaPyMODINIT_FUNCuPyInit_%s(void)Tw{Tu  PyObject *lib;Tu  lib = PyModule_Create(&_cffi_module_def);Tu  if (lib == NULL)Tu    return NULL;u  if (%s < 0 || _cffi_init() < 0) {Tu    Py_DECREF(lib);Tu  }Tu  return lib;Tw}Tu#elseuinit%s(void)u  lib = Py_InitModule("%s", _cffi_methods);Tu    return;u  if (%s < 0 || _cffi_init() < 0)Tu  return;Tu#endifaacquire_lockagetdlopenflagsasetdlopenflagsaload_dynamicamodulefilenameuimporting %r: %saVerificationErroraprevious_flagsarelease_locka_loadaloadingaitemsutoo many values to unpack (expected 2)a_get_cached_btypeTOobjecta__prepare__aFFILibrarya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.vengine_cpya__module__uVCPythonEngine.load_library.<locals>.FFILibrarya__qualname__amodulea_cffi_python_moduleaselfa_cffi_ffia_cffi_dira__dir__uVCPythonEngine.load_library.<locals>.FFILibrary.__dir__a__orig_bases__a_cffi_setupawarningsawarnureimporting %r might overwrite older definitionsaloadedTalibrarya_cffi_original_ffia_cffi_types_of_builtin_funcsa_parsera_declarationsasorta_get_declarationsasplitTw lu_generate_cpy_%s_%sunot implemented in verify(): %raattach_exception_infou_%s_cpy_%suais_integer_typea_Boola_cffi_to_c_intu, %sais_complex_typeTunot implemented in verify(): complex typesu(%s)_cffi_to_c_%saget_c_nameTuareplaceTw w_u-1aPointerTypea_convert_funcarg_to_c_ptr_or_arrayaStructOrUnionaEnumTypeu  if (_cffi_to_c((char *)&%s, _cffi_type(%d), %s) < 0)a_gettypenumu    %s;aFunctionPtrTypeu(%s)_cffi_to_c_pointeru, _cffi_type(%d)aNULLu  %s = %s(%s%s);u  if (%s == (%s)%s && PyErr_Occurred())atpaaddTuPy_ssize_t datasizeTustruct _cffi_freeme_s *large_args_free = NULLTuif (large_args_free != NULL) _cffi_free_array_arguments(large_args_free);Tu  datasize = _cffi_prepare_pointer_call_argument(u      _cffi_type(%d), %s, (char **)&%s);Tu  if (datasize != 0) {u    %s = ((size_t)datasize) <= 640 ? alloca((size_t)datasize) : NULL;u    if (_cffi_convert_array_argument(_cffi_type(%d), %s, (char **)&%s,Tu            datasize, &large_args_free) < 0)u      %s;u_cffi_from_c_int(%s, %s)u_cffi_from_c_%s(%s)u_cffi_from_c_deref((char *)&%s, _cffi_type(%d))u_cffi_from_c_pointer((char *)%s, _cffi_type(%d))aArrayTypeaitemafldnamesu'%s' is used as %s, but is opaquea_get_c_nameu_cffi_from_c_struct((char *)&%s, _cffi_type(%d))aellipsisa_do_collect_typeaargsaresulta_generate_cpy_constanoargaarg0Tustatic PyObject *u_cffi_f_%s(PyObject *self, PyObject *%s)uargument of %saprntu  %s;u x%dacontexta_extra_local_variablesalocalvarsafreelinesasortedaVoidTypeuresult = uresult of %su resultTu  PyObject *pyresult;u  PyObject *arg%d;u  if (!PyArg_ParseTuple(args, "%s:%s", %s))wOu, u&arg%da_convert_funcarg_to_cuarg%dux%dureturn NULLTu  Py_BEGIN_ALLOW_THREADSTu  _cffi_restore_errno();u  { %s%s(%s); }Tu  _cffi_save_errno();Tu  Py_END_ALLOW_THREADSTu  (void)self; /* unused */Tu  (void)noarg; /* unused */u  pyresult = %s;a_convert_expr_from_curesult typeu  Tu  return pyresult;Tu  Py_INCREF(Py_None);Tu  return Py_None;aMETH_NOARGSaMETH_OaMETH_VARARGSu  {"%s", _cffi_f_%s, %s, NULL},a_generate_struct_or_union_declastructa_generate_struct_or_union_methoda_loading_struct_or_uniona_loaded_struct_or_unionaunionu_cffi_check_%s_%su_cffi_layout_%s_%su%s %sustatic void %s(%s *p)Tu  /* only to generate compile-time warnings or errors */Tu  (void)p;aenumfieldsutoo many values to unpack (expected 4)u  (void)((p->%s) << 1);u  { %s = &p->%s; (void)tmp; }u*tmpufield %rTaqualsu  /* %s */u%s(PyObject *self, PyObject *noarg)u  struct _cffi_aligncheck { char x; %s y; };Tu  static Py_ssize_t nums[] = {u    sizeof(%s),Tu    offsetof(struct _cffi_aligncheck, y),u    offsetof(%s, %s),alengthu    0,  /* %s */u    sizeof(((%s *)0)->%s),Tu    -1Tu  };Tu  return _cffi_get_struct_layout(nums);Tu  /* the next line is not executed, but compiled */u  %s(0);u  {"%s", %s, METH_NOARGS, NULL},apartiall:lnl:lnlaforce_flattenafixedlayoutacheckuVCPythonEngine._loaded_struct_or_union.<locals>.checkapopasizeofuwrong total sizeaalignofuwrong total alignmentlwiaoffsetofaBStructuwrong offset for field %ruwrong size for field %ru%s (we have %d, but C compiler says %d)a_generate_cpy_enum_decla_loading_cpy_enuma_loaded_cpy_enumu_cffi_%s_%sustatic int %s(PyObject *lib)Tu  PyObject *o;Tu  int res;u iaconsta_check_int_constant_valueavarw&u  i = (%s);u  o = %s;uvariable typeu  o = _cffi_from_c_int_const(%s);Tu  if (o == NULL)Tu    return -1;Tu  {Tu    PyObject *o1 = o;u    o = Py_BuildValue("On", o1, (Py_ssize_t)sizeof(%s));Tu    Py_DECREF(o1);Tu    if (o == NULL)Tu      return -1;u  res = PyObject_SetAttrString(lib, "%s", o);Tu  Py_DECREF(o);Tu  if (res < 0)u  return %s;u(lib)u  if ((%s) > 0 || (long)(%s) != %dL) {u  if ((%s) <= 0 || (unsigned long)(%s) != %dUL) {Tu    char buf[64];u    if ((%s) <= 0)u        snprintf(buf, 63, "%%ld", (long)(%s));Tu    elseu        snprintf(buf, 63, "%%lu", (unsigned long)(%s));Tu    PyErr_Format(_cffi_VerificationError,Tu                 "%s%s has the real value %s, not %s",u                 "%s", "%s", buf, "%d");Tw$a___D_u_cffi_e_%s_%saenumeratorsDadelayedFa_enum_funcnameaenumvaluesuenum %s: apartial_resolvedu...Tacheck_valuealength_is_unknownTavartpasize_tooDacategoryavarubad size: %r does not seem to be an array of %saresolve_lengthacastadelattragetteruVCPythonEngine._loaded_cpy_variable.<locals>.getterasetteruVCPythonEngine._loaded_cpy_variable.<locals>.setteraappendaptrTustatic int _cffi_setup_custom(PyObject *lib)a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysTamodelaerrorTaVerificationErrorTa_imp_emulationa_imp_emulationaVCPythonEnginewxa_class_keya_gen_python_modulea__init__uVCPythonEngine.__init__apatch_extension_kwdsuVCPythonEngine.patch_extension_kwdsuVCPythonEngine.find_moduleuVCPythonEngine.collect_typesuVCPythonEngine._prntuVCPythonEngine._gettypenumuVCPythonEngine._do_collect_typeawrite_source_to_fuVCPythonEngine.write_source_to_fTnaload_libraryuVCPythonEngine.load_libraryuVCPythonEngine._get_declarationsuVCPythonEngine._generateuVCPythonEngine._loada_generate_nothinguVCPythonEngine._generate_nothinga_loaded_noopuVCPythonEngine._loaded_noopuVCPythonEngine._convert_funcarg_to_cuVCPythonEngine._extra_local_variablesuVCPythonEngine._convert_funcarg_to_c_ptr_or_arrayuVCPythonEngine._convert_expr_from_ca_generate_cpy_typedef_collecttypea_generate_cpy_typedef_decla_generate_cpy_typedef_methoda_loading_cpy_typedefa_loaded_cpy_typedefa_generate_cpy_function_collecttypeuVCPythonEngine._generate_cpy_function_collecttypea_generate_cpy_function_decluVCPythonEngine._generate_cpy_function_decla_generate_cpy_function_methoduVCPythonEngine._generate_cpy_function_methoda_loading_cpy_functiona_loaded_cpy_functionuVCPythonEngine._loaded_cpy_functiona_generate_cpy_struct_collecttypea_generate_cpy_struct_decluVCPythonEngine._generate_cpy_struct_decla_generate_cpy_struct_methoduVCPythonEngine._generate_cpy_struct_methoda_loading_cpy_structuVCPythonEngine._loading_cpy_structa_loaded_cpy_structuVCPythonEngine._loaded_cpy_structa_generate_cpy_union_collecttypea_generate_cpy_union_decluVCPythonEngine._generate_cpy_union_decla_generate_cpy_union_methoduVCPythonEngine._generate_cpy_union_methoda_loading_cpy_unionuVCPythonEngine._loading_cpy_uniona_loaded_cpy_unionuVCPythonEngine._loaded_cpy_unionuVCPythonEngine._generate_struct_or_union_decluVCPythonEngine._generate_struct_or_union_methoduVCPythonEngine._loading_struct_or_unionuVCPythonEngine._loaded_struct_or_uniona_generate_cpy_anonymous_collecttypea_generate_cpy_anonymous_decluVCPythonEngine._generate_cpy_anonymous_decla_generate_cpy_anonymous_methoduVCPythonEngine._generate_cpy_anonymous_methoda_loading_cpy_anonymousuVCPythonEngine._loading_cpy_anonymousa_loaded_cpy_anonymousuVCPythonEngine._loaded_cpy_anonymousTnaconstntFnuVCPythonEngine._generate_cpy_consta_generate_cpy_constant_collecttypeuVCPythonEngine._generate_cpy_constant_collecttypea_generate_cpy_constant_decluVCPythonEngine._generate_cpy_constant_decla_generate_cpy_constant_methoda_loading_cpy_constanta_loaded_cpy_constantuVCPythonEngine._check_int_constant_valueuVCPythonEngine._enum_funcnameTaenumuVCPythonEngine._generate_cpy_enum_decla_generate_cpy_enum_collecttypea_generate_cpy_enum_methoduVCPythonEngine._loading_cpy_enumuVCPythonEngine._loaded_cpy_enuma_generate_cpy_macro_decluVCPythonEngine._generate_cpy_macro_decla_generate_cpy_macro_collecttypea_generate_cpy_macro_methoda_loading_cpy_macroa_loaded_cpy_macroa_generate_cpy_variable_collecttypeuVCPythonEngine._generate_cpy_variable_collecttypea_generate_cpy_variable_decluVCPythonEngine._generate_cpy_variable_decla_generate_cpy_variable_methoda_loading_cpy_variablea_loaded_cpy_variableuVCPythonEngine._loaded_cpy_variableuVCPythonEngine._generate_setup_customu
#include <Python.h>
#include <stddef.h>

/* this block of #ifs should be kept exactly identical between
   c/_cffi_backend.c, cffi/vengine_cpy.py, cffi/vengine_gen.py
   and cffi/_cffi_include.h */
#if defined(_MSC_VER)
# include <malloc.h>   /* for alloca() */
# if _MSC_VER < 1600   /* MSVC < 2010 */
   typedef __int8 int8_t;
   typedef __int16 int16_t;
   typedef __int32 int32_t;
   typedef __int64 int64_t;
   typedef unsigned __int8 uint8_t;
   typedef unsigned __int16 uint16_t;
   typedef unsigned __int32 uint32_t;
   typedef unsigned __int64 uint64_t;
   typedef __int8 int_least8_t;
   typedef __int16 int_least16_t;
   typedef __int32 int_least32_t;
   typedef __int64 int_least64_t;
   typedef unsigned __int8 uint_least8_t;
   typedef unsigned __int16 uint_least16_t;
   typedef unsigned __int32 uint_least32_t;
   typedef unsigned __int64 uint_least64_t;
   typedef __int8 int_fast8_t;
   typedef __int16 int_fast16_t;
   typedef __int32 int_fast32_t;
   typedef __int64 int_fast64_t;
   typedef unsigned __int8 uint_fast8_t;
   typedef unsigned __int16 uint_fast16_t;
   typedef unsigned __int32 uint_fast32_t;
   typedef unsigned __int64 uint_fast64_t;
   typedef __int64 intmax_t;
   typedef unsigned __int64 uintmax_t;
# else
#  include <stdint.h>
# endif
# if _MSC_VER < 1800   /* MSVC < 2013 */
#  ifndef __cplusplus
    typedef unsigned char _Bool;
#  endif
# endif
# define _cffi_float_complex_t   _Fcomplex    /* include <complex.h> for it */
# define _cffi_double_complex_t  _Dcomplex    /* include <complex.h> for it */
#else
# include <stdint.h>
# if (defined (__SVR4) && defined (__sun)) || defined(_AIX) || defined(__hpux)
#  include <alloca.h>
# endif
# define _cffi_float_complex_t   float _Complex
# define _cffi_double_complex_t  double _Complex
#endif

#if PY_MAJOR_VERSION < 3
# undef PyCapsule_CheckExact
# undef PyCapsule_GetPointer
# define PyCapsule_CheckExact(capsule) (PyCObject_Check(capsule))
# define PyCapsule_GetPointer(capsule, name) \
    (PyCObject_AsVoidPtr(capsule))
#endif

#if PY_MAJOR_VERSION >= 3
# define PyInt_FromLong PyLong_FromLong
#endif

#define _cffi_from_c_double PyFloat_FromDouble
#define _cffi_from_c_float PyFloat_FromDouble
#define _cffi_from_c_long PyInt_FromLong
#define _cffi_from_c_ulong PyLong_FromUnsignedLong
#define _cffi_from_c_longlong PyLong_FromLongLong
#define _cffi_from_c_ulonglong PyLong_FromUnsignedLongLong
#define _cffi_from_c__Bool PyBool_FromLong

#define _cffi_to_c_double PyFloat_AsDouble
#define _cffi_to_c_float PyFloat_AsDouble

#define _cffi_from_c_int_const(x)                                        \
    (((x) > 0) ?                                                         \
        ((unsigned long long)(x) <= (unsigned long long)LONG_MAX) ?      \
            PyInt_FromLong((long)(x)) :                                  \
            PyLong_FromUnsignedLongLong((unsigned long long)(x)) :       \
        ((long long)(x) >= (long long)LONG_MIN) ?                        \
            PyInt_FromLong((long)(x)) :                                  \
            PyLong_FromLongLong((long long)(x)))

#define _cffi_from_c_int(x, type)                                        \
    (((type)-1) > 0 ? /* unsigned */                                     \
        (sizeof(type) < sizeof(long) ?                                   \
            PyInt_FromLong((long)x) :                                    \
         sizeof(type) == sizeof(long) ?                                  \
            PyLong_FromUnsignedLong((unsigned long)x) :                  \
            PyLong_FromUnsignedLongLong((unsigned long long)x)) :        \
        (sizeof(type) <= sizeof(long) ?                                  \
            PyInt_FromLong((long)x) :                                    \
            PyLong_FromLongLong((long long)x)))

#define _cffi_to_c_int(o, type)                                          \
    ((type)(                                                             \
     sizeof(type) == 1 ? (((type)-1) > 0 ? (type)_cffi_to_c_u8(o)        \
                                         : (type)_cffi_to_c_i8(o)) :     \
     sizeof(type) == 2 ? (((type)-1) > 0 ? (type)_cffi_to_c_u16(o)       \
                                         : (type)_cffi_to_c_i16(o)) :    \
     sizeof(type) == 4 ? (((type)-1) > 0 ? (type)_cffi_to_c_u32(o)       \
                                         : (type)_cffi_to_c_i32(o)) :    \
     sizeof(type) == 8 ? (((type)-1) > 0 ? (type)_cffi_to_c_u64(o)       \
                                         : (type)_cffi_to_c_i64(o)) :    \
     (Py_FatalError("unsupported size for type " #type), (type)0)))

#define _cffi_to_c_i8                                                    \
                 ((int(*)(PyObject *))_cffi_exports[1])
#define _cffi_to_c_u8                                                    \
                 ((int(*)(PyObject *))_cffi_exports[2])
#define _cffi_to_c_i16                                                   \
                 ((int(*)(PyObject *))_cffi_exports[3])
#define _cffi_to_c_u16                                                   \
                 ((int(*)(PyObject *))_cffi_exports[4])
#define _cffi_to_c_i32                                                   \
                 ((int(*)(PyObject *))_cffi_exports[5])
#define _cffi_to_c_u32                                                   \
                 ((unsigned int(*)(PyObject *))_cffi_exports[6])
#define _cffi_to_c_i64                                                   \
                 ((long long(*)(PyObject *))_cffi_exports[7])
#define _cffi_to_c_u64                                                   \
                 ((unsigned long long(*)(PyObject *))_cffi_exports[8])
#define _cffi_to_c_char                                                  \
                 ((int(*)(PyObject *))_cffi_exports[9])
#define _cffi_from_c_pointer                                             \
    ((PyObject *(*)(char *, CTypeDescrObject *))_cffi_exports[10])
#define _cffi_to_c_pointer                                               \
    ((char *(*)(PyObject *, CTypeDescrObject *))_cffi_exports[11])
#define _cffi_get_struct_layout                                          \
    ((PyObject *(*)(Py_ssize_t[]))_cffi_exports[12])
#define _cffi_restore_errno                                              \
    ((void(*)(void))_cffi_exports[13])
#define _cffi_save_errno                                                 \
    ((void(*)(void))_cffi_exports[14])
#define _cffi_from_c_char                                                \
    ((PyObject *(*)(char))_cffi_exports[15])
#define _cffi_from_c_deref                                               \
    ((PyObject *(*)(char *, CTypeDescrObject *))_cffi_exports[16])
#define _cffi_to_c                                                       \
    ((int(*)(char *, CTypeDescrObject *, PyObject *))_cffi_exports[17])
#define _cffi_from_c_struct                                              \
    ((PyObject *(*)(char *, CTypeDescrObject *))_cffi_exports[18])
#define _cffi_to_c_wchar_t                                               \
    ((wchar_t(*)(PyObject *))_cffi_exports[19])
#define _cffi_from_c_wchar_t                                             \
    ((PyObject *(*)(wchar_t))_cffi_exports[20])
#define _cffi_to_c_long_double                                           \
    ((long double(*)(PyObject *))_cffi_exports[21])
#define _cffi_to_c__Bool                                                 \
    ((_Bool(*)(PyObject *))_cffi_exports[22])
#define _cffi_prepare_pointer_call_argument                              \
    ((Py_ssize_t(*)(CTypeDescrObject *, PyObject *, char **))_cffi_exports[23])
#define _cffi_convert_array_from_object                                  \
    ((int(*)(char *, CTypeDescrObject *, PyObject *))_cffi_exports[24])
#define _CFFI_NUM_EXPORTS 25

typedef struct _ctypedescr CTypeDescrObject;

static void *_cffi_exports[_CFFI_NUM_EXPORTS];
static PyObject *_cffi_types, *_cffi_VerificationError;

static int _cffi_setup_custom(PyObject *lib);   /* forward */

static PyObject *_cffi_setup(PyObject *self, PyObject *args)
{
    PyObject *library;
    int was_alive = (_cffi_types != NULL);
    (void)self; /* unused */
    if (!PyArg_ParseTuple(args, "OOO", &_cffi_types, &_cffi_VerificationError,
                                       &library))
        return NULL;
    Py_INCREF(_cffi_types);
    Py_INCREF(_cffi_VerificationError);
    if (_cffi_setup_custom(library) < 0)
        return NULL;
    return PyBool_FromLong(was_alive);
}

union _cffi_union_alignment_u {
    unsigned char m_char;
    unsigned short m_short;
    unsigned int m_int;
    unsigned long m_long;
    unsigned long long m_longlong;
    float m_float;
    double m_double;
    long double m_longdouble;
};

struct _cffi_freeme_s {
    struct _cffi_freeme_s *next;
    union _cffi_union_alignment_u alignment;
};

#ifdef __GNUC__
  __attribute__((unused))
#endif
static int _cffi_convert_array_argument(CTypeDescrObject *ctptr, PyObject *arg,
                                        char **output_data, Py_ssize_t datasize,
                                        struct _cffi_freeme_s **freeme)
{
    char *p;
    if (datasize < 0)
        return -1;

    p = *output_data;
    if (p == NULL) {
        struct _cffi_freeme_s *fp = (struct _cffi_freeme_s *)PyObject_Malloc(
            offsetof(struct _cffi_freeme_s, alignment) + (size_t)datasize);
        if (fp == NULL)
            return -1;
        fp->next = *freeme;
        *freeme = fp;
        p = *output_data = (char *)&fp->alignment;
    }
    memset((void *)p, 0, (size_t)datasize);
    return _cffi_convert_array_from_object(p, ctptr, arg);
}

#ifdef __GNUC__
  __attribute__((unused))
#endif
static void _cffi_free_array_arguments(struct _cffi_freeme_s *freeme)
{
    do {
        void *p = (void *)freeme;
        freeme = freeme->next;
        PyObject_Free(p);
    } while (freeme != NULL);
}

static int _cffi_init(void)
{
    PyObject *module, *c_api_object = NULL;

    module = PyImport_ImportModule("_cffi_backend");
    if (module == NULL)
        goto failure;

    c_api_object = PyObject_GetAttrString(module, "_C_API");
    if (c_api_object == NULL)
        goto failure;
    if (!PyCapsule_CheckExact(c_api_object)) {
        PyErr_SetNone(PyExc_ImportError);
        goto failure;
    }
    memcpy(_cffi_exports, PyCapsule_GetPointer(c_api_object, "cffi"),
           _CFFI_NUM_EXPORTS * sizeof(void *));

    Py_DECREF(module);
    Py_DECREF(c_api_object);
    return 0;

  failure:
    Py_XDECREF(module);
    Py_XDECREF(c_api_object);
    return -1;
}

#define _cffi_type(num) ((CTypeDescrObject *)PyList_GET_ITEM(_cffi_types, num))

/**********/
ucffi\vengine_cpy.pyu<module cffi.vengine_cpy>Ta__class__amoduleaselfTa__class__TaselfaFFILibraryTaFFILibraryTaselfaverifierTaselfanameavalueaerr_prefixaprntTaselfatpavaracontextTaselfatpafromvaratovaraerrcodeaextraargaconverteraerrvalueTaselfatpafromvaratovaraerrcodeTaselfatpanumTaselfaprefixanameTaselfatpalocalvarsafreelinesTaselfastep_nameanameatpakindarealnameamethodweTaselfatpanameTaselfais_intanameatpacategoryavartpadelayedasize_tooacheck_valueaprntafuncnamearealexprTaselfatpanameais_intTaselfatpanameaprefixaenumeratorafuncnameaprntaenumvalueTaselfatpanameatypeTaselfatpanameaprntanumargsaargnameacontextwiatypealocalvarsafreelinesadeclaresult_codearngafreelineTaselfatpanameanumargsamethTaselfatpanameacheck_valueTaselfatpanameatp_ptrTaselfaprntT
aselfatpaprefixanameacheckfuncnamealayoutfuncnameacnameaprntafnameaftypeafbitsizeafqualweTaselfatpaprefixanamealayoutfuncnameTaselfalstTaselfatypeT
aselfamoduleastep_nameakwdsanameatpakindarealnameamethodweTaselfatpanameamoduleakwdsTaselfatpanameamodulealibraryaenumeratoraenumvalueTaselfatpanameamodulealibraryafuncTaselfatpanameamodulealibraryavalueasizeaBItemTypealengtharestaBArrayaptragetterasetterT
aselfatpacheckaffiaBStructalayoutacnamewiafnameaftypeafbitsizeafqualaBFieldTaselfatpanameamoduleTaselfatpanameamoduleaenumvaluesT
aselfatpaprefixanameamodulealayoutfuncnameafunctionalayoutatotalsizeatotalalignmentafieldofsafieldsizeacnameTaselfawhatTarealvalueaexpectedvalueamsgTaselfTaselfamodule_nameapathaso_suffixeswfafilenameadescrTalibraryaptrTaptrTaselfaflagsaprevious_flagsamoduleweaerrorarevmappingalstaFFILibraryalibraryawarningsTaselfakwdsTalibraryavalueaptrTaselfaprntamodnameaconstants.cffi.vengine_gen(averifieraffiaexport_symbolsa_struct_pending_verificationasetdefaultamodule_nameapathajoinabasenamea_fawritew
a_prntacffimod_headerapreamblea_generateTadeclaget_module_nameuvoid %s%s(void) { }
aPyInit_a_backendw.amodulefilenameaload_librarya_loadaloadingaModuleTypela__prepare__aFFILibrarya__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.vengine_gena__module__uVGenericEngine.load_library.<locals>.FFILibrarya__qualname__amodulea_cffi_generic_moduleaselfa_cffi_ffia_cffi_dira__dir__uVGenericEngine.load_library.<locals>.FFILibrary.__dir__a__orig_bases__TualoadedTalibrarya_parsera_declarationsaitemsutoo many values to unpack (expected 2)asorta_get_declarationsasplitTw lu_generate_gen_%s_%saVerificationErrorunot implemented in verify(): %ramodelaattach_exception_infou_%s_gen_%saFunctionPtrTypeaellipsisa_generate_gen_constaargsuaStructOrUnionw*aargnamesu%sx%duargument of %saget_c_nameu %sacontextaresultainsertu *ravoid_typeu, avoidu_cffi_f_%saappendaabiw u %s%s(%s)uresult of %sTw{u*r = aVoidTypeureturn u  %s%s(%s);Tw}a_load_constantaPointerTypeaindirectionsaindirect_argsatypafldtypesu'%s' is used as result type, but is opaquea_get_c_namea_get_cached_btypeatpaload_functiona_make_struct_wrapperanewfunctionabase_tpanameu<genexpr>uVGenericEngine._loaded_gen_function.<locals>.<genexpr>anewfuncuVGenericEngine._make_struct_wrapper.<locals>.newfunca_cffi_base_typeanewaBTypeaoldfuncwiabackendanewpla_generate_struct_or_union_declastructa_loading_struct_or_uniona_loaded_struct_or_unionaunionafldnamesu_cffi_check_%s_%su_cffi_layout_%s_%su%s %sustatic void %s(%s *p)Tu  /* only to generate compile-time warnings or errors */Tu  (void)p;aenumfieldsutoo many values to unpack (expected 4)aPrimitiveTypeais_integer_typeaprntu  (void)((p->%s) << 1);u  { %s = &p->%s; (void)tmp; }u*tmpufield %rTaqualsu  /* %s */uintptr_t %s(intptr_t i)u  struct _cffi_aligncheck { char x; %s y; };Tu  static intptr_t nums[] = {u    sizeof(%s),Tu    offsetof(struct _cffi_aligncheck, y),u    offsetof(%s, %s),aArrayTypealengthu    0,  /* %s */u    sizeof(((%s *)0)->%s),Tu    -1Tu  };Tu  return nums[i];Tu  /* the next line is not executed, but compiled */u  %s(0);a_typeof_lockedTuintptr_t(*)(intptr_t)afunctionanumalayoutapartial:lnl:lnlaforce_flattenafixedlayoutacheckuVGenericEngine._loaded_struct_or_union.<locals>.checkapopasizeofuwrong total sizeaalignofuwrong total alignmentlaoffsetofaBStructuwrong offset for field %ruwrong size for field %ru%s (we have %d, but C compiler says %d)aEnumTypea_generate_gen_enum_decla_loading_gen_enuma_loaded_gen_enumu_cffi_%s_%saconstuint %s(char *out_error)a_check_int_constant_valueTu  return 0;uint %s(long long *out_value)u  *out_value = (long long)(%s);u  return (%s) <= 0;avarw&uconst *u %s%s(void)u  return (%s%s);u_cffi_const_%sa_load_known_int_constantTulong long*Tuint(*)(long long*)Tulong longlu(*)(void)u  if ((%s) > 0 || (long)(%s) != %dL) {u  if ((%s) <= 0 || (unsigned long)(%s) != %dUL) {Tu    char buf[64];u    if ((%s) <= 0)u        sprintf(buf, "%%ld", (long)(%s));Tu    elseu        sprintf(buf, "%%lu", (unsigned long)(%s));Tu    sprintf(out_error, "%s has the real value %s, not %s",u            "%s", buf, "%d");:nldnTu    return -1;Tu  }Tuchar[]Tuint(*)(char*)lastringuutf-8areplaceTw$a___D_u_cffi_e_%s_%saenumeratorsa_enum_funcnameaenumvaluesapartial_resolvedu...Tacheck_valuealength_is_unknownu_cffi_sizeof_%susize_t %s(void)u  return sizeof(%s);aitemDacategoryavarTusize_t(*)(void)ubad size: %r does not seem to be an array of %saresolve_lengthacastu_cffi_var_%su*(*)(void)agetteruVGenericEngine._loaded_gen_variable.<locals>.getterasetteruVGenericEngine._loaded_gen_variable.<locals>.setteraptra__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaosatypesTamodelaerrorTaVerificationErrorTOobjectaVGenericEnginewga_class_keya_gen_python_modulea__init__uVGenericEngine.__init__apatch_extension_kwdsuVGenericEngine.patch_extension_kwdsafind_moduleuVGenericEngine.find_moduleacollect_typesuVGenericEngine.collect_typesuVGenericEngine._prntawrite_source_to_fuVGenericEngine.write_source_to_fTluVGenericEngine.load_libraryuVGenericEngine._get_declarationsuVGenericEngine._generateuVGenericEngine._loada_generate_nothinguVGenericEngine._generate_nothinga_loaded_noopuVGenericEngine._loaded_noopa_generate_gen_typedef_decla_loading_gen_typedefa_loaded_gen_typedefa_generate_gen_function_decluVGenericEngine._generate_gen_function_decla_loading_gen_functiona_loaded_gen_functionuVGenericEngine._loaded_gen_functionuVGenericEngine._make_struct_wrappera_generate_gen_struct_decluVGenericEngine._generate_gen_struct_decla_loading_gen_structuVGenericEngine._loading_gen_structa_loaded_gen_structuVGenericEngine._loaded_gen_structa_generate_gen_union_decluVGenericEngine._generate_gen_union_decla_loading_gen_unionuVGenericEngine._loading_gen_uniona_loaded_gen_unionuVGenericEngine._loaded_gen_unionuVGenericEngine._generate_struct_or_union_decluVGenericEngine._loading_struct_or_unionuVGenericEngine._loaded_struct_or_uniona_generate_gen_anonymous_decluVGenericEngine._generate_gen_anonymous_decla_loading_gen_anonymousuVGenericEngine._loading_gen_anonymousa_loaded_gen_anonymousuVGenericEngine._loaded_gen_anonymousTnaconstnuVGenericEngine._generate_gen_consta_generate_gen_constant_decluVGenericEngine._generate_gen_constant_decla_loading_gen_constantTnuVGenericEngine._load_constanta_loaded_gen_constantuVGenericEngine._loaded_gen_constantuVGenericEngine._check_int_constant_valueuVGenericEngine._load_known_int_constantuVGenericEngine._enum_funcnameTaenumuVGenericEngine._generate_gen_enum_decluVGenericEngine._loading_gen_enumuVGenericEngine._loaded_gen_enuma_generate_gen_macro_decluVGenericEngine._generate_gen_macro_decla_loading_gen_macroa_loaded_gen_macrouVGenericEngine._loaded_gen_macroa_generate_gen_variable_decluVGenericEngine._generate_gen_variable_decla_loading_gen_variablea_loaded_gen_variableuVGenericEngine._loaded_gen_variableu
#include <stdio.h>
#include <stddef.h>
#include <stdarg.h>
#include <errno.h>
#include <sys/types.h>   /* XXX for ssize_t on some platforms */

/* this block of #ifs should be kept exactly identical between
   c/_cffi_backend.c, cffi/vengine_cpy.py, cffi/vengine_gen.py
   and cffi/_cffi_include.h */
#if defined(_MSC_VER)
# include <malloc.h>   /* for alloca() */
# if _MSC_VER < 1600   /* MSVC < 2010 */
   typedef __int8 int8_t;
   typedef __int16 int16_t;
   typedef __int32 int32_t;
   typedef __int64 int64_t;
   typedef unsigned __int8 uint8_t;
   typedef unsigned __int16 uint16_t;
   typedef unsigned __int32 uint32_t;
   typedef unsigned __int64 uint64_t;
   typedef __int8 int_least8_t;
   typedef __int16 int_least16_t;
   typedef __int32 int_least32_t;
   typedef __int64 int_least64_t;
   typedef unsigned __int8 uint_least8_t;
   typedef unsigned __int16 uint_least16_t;
   typedef unsigned __int32 uint_least32_t;
   typedef unsigned __int64 uint_least64_t;
   typedef __int8 int_fast8_t;
   typedef __int16 int_fast16_t;
   typedef __int32 int_fast32_t;
   typedef __int64 int_fast64_t;
   typedef unsigned __int8 uint_fast8_t;
   typedef unsigned __int16 uint_fast16_t;
   typedef unsigned __int32 uint_fast32_t;
   typedef unsigned __int64 uint_fast64_t;
   typedef __int64 intmax_t;
   typedef unsigned __int64 uintmax_t;
# else
#  include <stdint.h>
# endif
# if _MSC_VER < 1800   /* MSVC < 2013 */
#  ifndef __cplusplus
    typedef unsigned char _Bool;
#  endif
# endif
# define _cffi_float_complex_t   _Fcomplex    /* include <complex.h> for it */
# define _cffi_double_complex_t  _Dcomplex    /* include <complex.h> for it */
#else
# include <stdint.h>
# if (defined (__SVR4) && defined (__sun)) || defined(_AIX) || defined(__hpux)
#  include <alloca.h>
# endif
# define _cffi_float_complex_t   float _Complex
# define _cffi_double_complex_t  double _Complex
#endif
ucffi\vengine_gen.pyTa.0atypu<module cffi.vengine_gen>Ta__class__amoduleaselfTa__class__TaselfaFFILibraryTaFFILibraryTaselfaverifierTaselfanameavalueaprntTaselfaprefixanameTaselfastep_nameanameatpakindarealnameamethodweTaselfatpanameT
aselfais_intanameatpacategoryacheck_valueaprntafuncnameaampersandaextraTaselfatpanameais_intTaselfatpanameaprefixaenumeratorafuncnameaprntaenumvalueTaselfatpanameaprntanumargsaargnameswiatypeaindirectionacontextaarglistatpresultawrappernameaabiafuncdeclaresult_codeTaselfatpanameacheck_valueTaselfatpanameaprntafuncnameatp_ptrT
aselfatpaprefixanameacheckfuncnamealayoutfuncnameacnameaprntafnameaftypeafbitsizeafqualweTaselfalstT
aselfamoduleastep_nameakwdsanameatpakindarealnameamethodweTaselfais_intatpanameamoduleacheck_valueafuncnameavalueaBTypeaBFuncafunctionwpanegativeaBLongLongafntypeextraTaselfamoduleafuncnameaBTypeaBFuncafunctionwpaerrorTaselfatpanameamoduleakwdsTaselfatpanameamodulealibraryais_intavalueTaselfatpanameamodulealibraryaenumeratoraenumvalueTaselfatpanameamodulealibraryanewfunctionaindirectionsabase_tpaindirect_argswiatypaindirect_resultaBFuncawrappernameTaselfatpanameamodulealibraryacheck_valueavalueTaselfatpanameamodulealibraryafuncnameaBFuncafunctionasizeaBItemTypealengtharestatp_ptravalueaBArrayaptragetterasetterT
aselfatpacheckaffiaBStructalayoutacnamewiafnameaftypeafbitsizeafqualaBFieldTaselfatpanameamoduleTaselfatpanameamoduleaprefixaenumvaluesafuncnameTaselfatpaprefixanameamodulealayoutfuncnameaBFuncafunctionalayoutanumwxatotalsizeatotalalignmentafieldofsafieldsizeacnameTaselfaoldfuncwiatpabase_tpabackendaBTypeaffianewfuncTaselfawhatTarealvalueaexpectedvalueamsgTaselfTaselfamodule_nameapathaso_suffixesaso_suffixabasenameadirnameafilenameTalibraryaptrTaptrTaselfaflagsabackendafilenameamoduleaFFILibraryalibraryTaargswiabackendaBTypeaoldfuncTaBTypeabackendwiaoldfuncTaargsaresaffiaBTypeaoldfuncTaBTypeaffiaoldfuncTaselfakwdsTalibraryavalueaptrTaselfaprntaprefixamodname.cffi.verifieruaimportlibamachineryaEXTENSION_SUFFIXES:nnna_parsera_uses_new_featureaVerificationErrorufeature not supported with ffi.verify(), but only with ffi.set_source(): %saffiapreambleaffiplatformaflattena_locate_engine_classa_vengineapatch_extension_kwdsaflagsamake_relative_toakwdsucan't specify both 'modulename' and 'tag'wu3.11a__version_verifier_modules__aflattened_kwdsa_cdefsourcesuutf-8abinasciiacrc32:lnlgu0xwL:lnlw0u_cffi_%s_%s%s%sa_class_keya_get_so_suffixesla_caller_dir_pycacheatmpdirajoinasourcefilenameamodulefilenameaext_packagea_has_sourcea_has_modulea_locka__enter__a__exit__Tusource code already writtena_write_sourceTnnnuWrite the C source code.  It is produced in 'self.sourcefilename',
        which can be tweaked beforehand.Tumodule already compileda_compile_moduleuWrite the C source code (if not done already) and compile it.
        This produces a dynamic link library in 'self.modulefilename'.a_locate_modulea_load_libraryuGet a C module from this Verifier instance.
        Returns an instance of a FFILibrary class that behaves like the
        objects returned by ffi.dlopen(), but that delegates all
        operations to the C module.  If necessary, the C code is written
        and compiled first.
        asplitTw.laendswithTa_dagettotalrefcount:nqnabasenameamaybe_relative_pathaget_module_nameaget_extensiona_gen_python_moduleacopyaLIST_OF_FILE_NAMESTOlistOtupleukeyword '%s' should be a list or tupleadirnamea__doc__a__path__afind_moduleacollect_typesa_fawrite_source_to_fa_write_source_toaStringIOagetvaluewrareadaneeds_writtena_ensure_dirwwawriteacompileasamefileashutilamoveaload_librarya_FORCE_GENERIC_ENGINEa_cffi_backendw?a_backenduTavengine_genlavengine_genaVGenericEngineTavengine_cpyavengine_cpyaVCPythonEnginea_TMPDIRaenvironagetTaCFFI_TMPDIRa_getframeTlaf_codeaco_filenamea__pycache__uSet the temporary directory to use instead of __pycache__.u.calowerastartswithTa_cffi_asuffixTu.caunlinkabuildadiraclean_diruClean up the temporary directory by removing all files in it
    called `_cffi_*.{c,so}` as well as the `build` subdirectory.a_extension_suffixesu.pydamakedirsa__file__a__spec__aoriginahas_locationa__cached__asysaosaioTa__version_verifier_modules__TaffiplatformaerrorTaVerificationErroruimportlib.machineryaNativeIOTOobjecta__prepare__aVerifiera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucffi.verifiera__module__a__qualname__TnnnuFu.cnna__init__uVerifier.__init__Tnawrite_sourceuVerifier.write_sourceacompile_moduleuVerifier.compile_moduleuVerifier.load_libraryuVerifier.get_module_nameuVerifier.get_extensionagenerates_python_moduleuVerifier.generates_python_moduleuVerifier.make_relative_touVerifier._locate_moduleuVerifier._write_source_touVerifier._write_sourceuVerifier._compile_moduleuVerifier._load_librarya__orig_bases__aset_tmpdirTnFacleanup_tmpdirucffi\verifier.pyu<module cffi.verifier>Ta__class__Taselfaffiapreambleatmpdiramodulenameaext_packageatagaforce_generic_engineasource_extensionaflagsarelative_toakwdsaflattened_kwdsavengine_classakeyak1ak2asuffixTaresultafilenameTaselfatmpdiraoutputfilenameasameTafilenameadirnameTasuffixesTaselfTaffiaforce_generic_enginea_cffi_backendavengine_genavengine_cpyTaselfapkgapathafilenameTaselfafilewfasource_dataafpaneeds_writtenTaselfafileTatmpdirakeep_soafilelistasuffixafnaclean_diradirTaselfasourcenameamodnameTaselfabasenameTaselfakwdsarelative_toadirnameakeyalstTadirname.chardet.big5freqN?a__doc__a__file__a__spec__aoriginahas_locationa__cached__f?aBIG5_TYPICAL_DISTRIBUTION_RATIOl*aBIG5_TABLE_SIZET*llllllllRll'llllllnll!lllLl,llllllllllllll lllllllll:l#l'll?l'l'lllKlll lll'lllllll
lllllllllllll'l#lllll'lll|lll"lll@ll'lllllllll'lllHll'lPllllllllllllllEllllllslll<l2lllllllllllllll'll
llllll#lllZll
llllllllll
l'll
l l
llllllqllllllllllll'lullll
llll'l~l lllll#lGlll lllUllllllll
llljlll
l'llllllll'lll lSllllll]l'llllllllllll+llllll#lllllllllllllllllllllllllllllllll
l#lll'lllllllllllll'l'lllllllllXl
llllllllll l#lMll'll%lll'll'l'l'll#llll7llJl#lllll
lllllll llllllll#l lll
llllllllllll
llmll'll
l
llll#l'll'llllllll'l'lllll&l'll'lllll.llll'll'll
l#ll#llllllll l'l'l
llllllll
lllldll0lFlllll'l
l'llllllllllll
lll'lllll#lllllllllllllllll#l
llll
llll'l lll llll#lll
ll#l'lll
ll
l'l#lllllll
llll ll
llllll
lllllllllllll#lllllll
lll#l#l
llllll
lllllllllll
llll'lllllllllll
ll lll'l l'lllllllll#lllllll ll}llll#l'l'll'l'l'l#lllll
llllll'llllllllllllll lll llllll llllll'llllllbl
lll'l
llllllll'lllllll'lll
lDlllll lllllllllllll
l'll#ll#l'lll'lllclllllllllllll'llllll
ll'llllllllllll'llllll'l;l'lll llll
l#ll'llll'llllll
lllll
llll llll'll'l'lllllilll
lll
lll'llll'lll#l lll#lllllll#llll'llll
l'l
llll'lll'llllll#l'l'llll!l9llll#l#llllll
lll!lll
lllllllll
ll
l
l!lll3llllllll#ll'l'lllll#llll'l'l'l
ll
llllllll'l#l'l'llll'llllll!llll!ll#lllOl!lllllll!l!l
lllll'l#l'l'l'l'l
l
llllllllll#lllll#lll'l'l'l!lll'lllllll#ll'll!lll#l#l'l`l
l
ll'll'llllll!lllll
ll'lllll'll'l'l'lllllgllllllll'l
llCll!lllll'l'llllllllllllllllllll
lll
lll!lll'l
llllllNllll
llll!lllllll#lllllll#llllll#llll#ll'l!l
ll'lllll'll
l
llll'l
l#ll
llllllllllll#lllllll'l
ll
l'll#lll#lll{ll!ll#l$lllllll
llllllll(lll
lllllll!l(lllllll!ll#lvll(lllll
llllll(l(llllllllll(llll(lll(ll(ll#l(ll(l!lllllllllllll
l(lllllllll#l(l(l(ll(l#l(l(ll
lllllll(lll(l!l#lll(lll
ll(l(lllll(l(lll(l(l(lll
lllll(ll(lll\lll(llllll(lllll!lll
llll(ll#llll(ll#ll^l#l(l
ll(lll#lll(lll!ll
l(l!ll#l(l
ll(lllllll(llll!lllllll(lll(l(llll#lllllll!llllll(llll
l(l!llll(l#l#ll!lllllhlll(llllllll
l(lll#lll(llllll
lll)l(l(l#l(llllll!ll(lllll
lll(lll
l!ll(llllllll(lll(llll
llllllwlllll!l(lll#ll#llll(lll!l!lll
lll!llllll(l(ll(lll(lllll!llll#lllll(llll(lllllll
ll
llllllll
lll
llll!l
llll(llll
l
l(l!llllllllll(ll(lllll
l#llll(l#llll
lllllllllllllllll#llll(ll(l#l
llll
ll#l#lllll(lllll(lll
l(lll!l(lll(l!lll
l!ll
llllll#l#l(lllll(l#llll#llllll(l#lll(l(l#lll(llllllll#ll#ll!ll#l(l(ll
lllllll#lll(lllllll!ll(lllll
lllll
l#ll#lllll#llllll
l#lllll
l!lll#ll
lllll!l(ll#ll(ll(l!lllllllllll!l(l
lll!l(ll#l!lll(l#l!l(lll(lllll(l#llll!l!llll(l(l(ll#lllllll#l(lllllll
l
llll(lll(llllll#l!l(lllll!l!ll(llllllWl
l(lll(llll!lllllllll
l
l
ll(l(lllllllllBl#l(llllllllllllllll(ll(lllllll$ll(l(lll(lll(llllllllllll(lllllllll$llll
l
l
llllYlll(l
l(llll(lllll(l$llllllllll(lllllll!l6lll$llll(llllll!l$llol!ll
llll!llll(lllllll(llllll
l$lllll$llllll$lllllll!lllllll
ll(l(ll!llll(l$l!lllll(ll)ll
l
llllll)llll$lll!ll)lll$l)l)llll)lllll)llll!l
lllllll)llllll)ll$llllllllll)l)ll)l!lll$llllllll!l)l!lll)llalQl!l)llllll)lll
l)llll!l$ll
lllllllll)l)llllll!lllllll!l)ll
l$llllll)lllllll)l)lllll)ll)lllll$ll)l)l)l)llllllll)lllll$l
ll
ll
llll)lllll)l)lllll$l)ll)l$ll$lll
llllll)lllll)lll
ll
llll$lll)l)lllllllllllllll)l
llfll>lll$lll!l)l)lllllll)l
ll)lll$lllllll$llllllll
l)l)ll)lVll
lllllllllllll
llllllllllll)llllll)llll!llllrll!lll)l)lllllllll)ll)lllllllllll)l!ll
l$l)lllll$ll
llllll
lllllllll)lll$ll
l)l)l)ll!ll
ll!ll$l$lllll!lll$ll!llllll
llllllllllllll)lllllllllllllll)lllllllllll)l$llllllllll)lll)lllllllllll$ll!l$llllllllllll)l$l)ll)l)l)llllll_llll!llllllllll)llll)llll!llllll)llllll5l)ll)l
l$llllll)llllll$lllllllllllll$llllll
llllll)l)lll)l)lllllllllll)l$llllllllll)llll$lell)ll
l)l
ll)llll)l)l)l
l!ll)l)lll)l)ll
l
ll$ll
lllll$l)lll)lll!l)llllllllllll
ll
llll$ll$l!lllll$ll)l
ll)lllzl)l$lll)lllllll$lll)l)l!l)l!lTl!lpll)lllllll)l!l)llllllllllll$lll)ll)llll!llllllllllll)l)l$llll)lll)ll)llllllllllllll$l$l)lllllllll
lllll)l!lllll)ll)llll!l)l!llll$lllllllllllll
llll)lll)l)l$l$l)ll)llll)lllllll
lllllAlllllll)l)lll-llll$llllll)lll)ll)ll)lllllllll*ll!lll*lll*lllllllll
l*l*ll
lllll*l*l!l
lll*l$lllllll$llllll*l*llll[lllll$l*llll*lll
llllll$lll*l$l*llll
lll$l*ll*l*llllll!llll$l$lllll$l*l*l*l*ll=lllll*lllllllllll$lll
lllll
llllll$lllllllll$l*lll!l*lllll!lll$ll!llll$l$l!l$lllllll!ll*l*lllllllll!l!lll*llllll*l*l*l$l*l$llkllllll*lll
lll!lll*l
lll!l$lllllllll
llll8l
lllll*lll$ll*ll*l*ll$ll*ll*ll$l*ll*l*lllllllll*ll1l*llllllll*llll!llllll*ll$lllll$ll*l$llllll*l*llll*ll
l*ll
llllll!ll!lll!l*llll
lllll!ll*l
lll*l
l*l*lll!lll!l*ll
llllll$llllll$lll$lll
ll!lll*lllllllllllllll
lll*ll*l*lll*ll$lll*llll*llllllllll
ll$l*l*l*l
ll$lllll
l!lllll
lllllllll*ll*lll$llllllllll*ll$l*ll*lllll*lll$lll*llllllllllll
l*lllllllllll$ll!lllll!ll*lllll*lllllllllllll!lll*l*l
lll llll
lll$l ll!l!ll*lll*ll$ll
lllllllllll$l$lllll*l*llll*ll*l*llll*l$l*lllllllll4l*lll*l*l*ll*llll!ll
ll$l
lll$lll*llllll*l$ll*l*llll*l*lll
lllll*l*l*l$lllll*lllll*ll*l*l!lll*lll
ll*ll!llllll$l
llllllllll*ll*llllll$l*ll ll*lll
lll$l$l
llll*lllllll*l*lll$l!ll$lllllll*l*lll l
lllllllllllll*lll*l
l*lllllll!ll!l*llll!llllllllllllll*l l*l*l!l
llll
lllll*llllllllll*l*l*llllllllll l
llll*llllll!ll$l+l+l!lllll+l ll"llll"l l+l l"lllll+l+llllll l"llllll"ll+ll"lll+lll
llll+lll+l+l+llllll"lllllll
l+l+l l"l
l
lll$l$lllll+llll
llllllllll"l+lllllll+ll$l+l+llllll"l+l$llllllllll"llll+l+ll$l$lllllll l
lllll"l+lll+llll
ll+l$llll
lll+ll+l+l+lllllllll+llllll lll"llll+ll+ll$l+l
lllllll
ll+l+l+llllllll"l
l$lll+l$ll"llll"l
l$ll+l+l"l
lllll+l+lll$lll+l+l+l+ll l llll l llll$llll l
l+l+l/lll+l
llll+lllllllll"llllllllll+llll l$ll+l+llll
lllllll$l lIl+l+ll+lllll
ll+l
lll+l+l+l+lll+lll
l"l$lllllll$l$ll+l"l+l+l$l+l+ll$lll$llll$l+llllll+ll+l+lll+l"ll+ll
l+l+l$lll+l l+l"ll+ll"l+l+llllllll ll"l%llllll+ll+llllllll+l+ll"lll+lllllll+lll ll%l+ll+l
l
llll l"l%llll"lllllllll+lllll%lllllllll"ll+l%lllll
l%l%llll l+lll+llll llllll"l+llll+lllll%l"ll"l%ll
l"ll
l+llll
l+l
ll%lll+ll%l+ll"l+ll"ll+ll+llll+lllllll lll
l
ll ll+llll l+lllllll+ll"l%l+l+l+l"l+l+l%l+ll%lll+llll"ll"l l+l
l%l+l"ll%llll+l"l lll ll%ll"l lll
llllllllll"l+llll
ll"ll%l+ll"l+ll"ll+lll+lllll+lllll"ll+l l+l+l+l+l+l"ll+lllll%l%llll%l
ll"llllll
l+ll llll,l,l
l%ll%l%l,l%l,ll,l%llll"l,l"lllllllll ll"l,llll,l,ll%lll%lll,lllllyl
lll,l"llll lll
lll ll,lll,l,ll,l"lll
llllllll%ll"lll,lllll,llxl"l"lllllllll%l l,lllll,l
l%llllllllll,l,ll,llll,llllllll,l,lllllll,ll,lll lll,ll,lll,lll,l"lllll
lll,l,l%llll%l"l,lllll lll,l,l,l,lll,l
l"ll%lll lll"l"llll,llll"ll llll ll
l"lll"l,ll l lll%lllllll,l,lll,lllll,l,l%l,l%l,lll,l lll%l,llll,l,lll,l%l,l,l,llllllllllll
lllll,ll,lllllll,lll,lll"llllll l,llllllll lll,l
llllll
l%ll,llll"llll,lllll,l,ll,l,llllllll,l,ll
l,ll"l%l,ll%l,lllll"lll,ll,ll,l,l%l%l,ll l l,ll%ll,lll"lllll,ll,l"llll%l%ll,ll"l,llll,l,llll,llll%l"lll%ll"lll%lll,lll,ll
l llll"l,l"lll
l
llll llll,ll%l
lll%l,lllll"l l"llllll
l,l,ll%l ll,l,l%lll,lll,lllll,lll,l l,llll,l%llll"l,l,ll,ll%lllll,l"lll%l ll
ll,l,l%l"l"lll,l,ll,l ll,lllllllll"ll"llll%l,ll"ll,l%ll
lllll"ll
l%l%l l%ll,ll,lll l,l,ll,l,l,l,ll%l%ll
l,lllll
lllll,l,lll%l,llllllll,lll,l-l-l-l-llll-ll%l ll%ll-lll-l-l-ll%ll-l%l-ll%l%lll ll-l-l-lll-l-l-ll-l-l%ll ll-ll l"l-l-ll-llllltl-lll-lllllll-lll l
lll-l-ll-l%l-l%ll-lllll-llll-lllll-l-l-lllll lll"lllll"l%l-l-l-aBIG5_CHAR_TO_FREQ_ORDERuchardet\big5freq.pyu<module chardet.big5freq>u.chardet.big5prober0aBig5Probera__init__aCodingStateMachineaBIG5_SM_MODELacoding_smaBig5DistributionAnalysisadistribution_analyzerareseta__doc__a__file__a__spec__aoriginahas_locationa__cached__ambcharsetproberTaMultiByteCharSetProberlaMultiByteCharSetProberlacodingstatemachineTaCodingStateMachineachardistributionTaBig5DistributionAnalysisambcssmTaBIG5_SM_MODELa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.big5probera__module__a__qualname__uBig5Prober.__init__apropertyaBig5acharset_nameuBig5Prober.charset_nameaChinesealanguageuBig5Prober.languagea__orig_bases__uchardet\big5prober.pyu<module chardet.big5prober>Ta__class__Taselfa__class__Taselfu.chardet.chardistributiony
|a_char_to_freq_ordera_table_sizeatypical_distribution_ratioa_donea_total_charsa_freq_charsaresetlureset analyser, clear any statelaget_orderqllufeed a character with known lengthaMINIMUM_DATA_THRESHOLDaSURE_NOaSURE_YESureturn confidence based on existing dataaENOUGH_DATA_THRESHOLDaEUCTWDistributionAnalysisa__init__aEUCTW_CHAR_TO_FREQ_ORDERaEUCTW_TABLE_SIZEaEUCTW_TYPICAL_DISTRIBUTION_RATIOll^laEUCKRDistributionAnalysisaEUCKR_CHAR_TO_FREQ_ORDERaEUCKR_TABLE_SIZEaEUCKR_TYPICAL_DISTRIBUTION_RATIOlaGB2312DistributionAnalysisaGB2312_CHAR_TO_FREQ_ORDERaGB2312_TABLE_SIZEaGB2312_TYPICAL_DISTRIBUTION_RATIOutoo many values to unpack (expected 2)aBig5DistributionAnalysisaBIG5_CHAR_TO_FREQ_ORDERaBIG5_TABLE_SIZEaBIG5_TYPICAL_DISTRIBUTION_RATIOlll?l@aSJISDistributionAnalysisaJIS_CHAR_TO_FREQ_ORDERaJIS_TABLE_SIZEaJIS_TYPICAL_DISTRIBUTION_RATIOlllllllaEUCJPDistributionAnalysisla__doc__a__file__a__spec__aoriginahas_locationa__cached__aeuctwfreqTaEUCTW_CHAR_TO_FREQ_ORDERaEUCTW_TABLE_SIZEaEUCTW_TYPICAL_DISTRIBUTION_RATIOaeuckrfreqTaEUCKR_CHAR_TO_FREQ_ORDERaEUCKR_TABLE_SIZEaEUCKR_TYPICAL_DISTRIBUTION_RATIOagb2312freqTaGB2312_CHAR_TO_FREQ_ORDERaGB2312_TABLE_SIZEaGB2312_TYPICAL_DISTRIBUTION_RATIOabig5freqTaBIG5_CHAR_TO_FREQ_ORDERaBIG5_TABLE_SIZEaBIG5_TYPICAL_DISTRIBUTION_RATIOajisfreqTaJIS_CHAR_TO_FREQ_ORDERaJIS_TABLE_SIZEaJIS_TYPICAL_DISTRIBUTION_RATIOTOobjecta__prepare__aCharDistributionAnalysisa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.chardistributiona__module__a__qualname__lfGz?f{Gz?luCharDistributionAnalysis.__init__uCharDistributionAnalysis.resetafeeduCharDistributionAnalysis.feedaget_confidenceuCharDistributionAnalysis.get_confidenceagot_enough_datauCharDistributionAnalysis.got_enough_datauCharDistributionAnalysis.get_ordera__orig_bases__uEUCTWDistributionAnalysis.__init__uEUCTWDistributionAnalysis.get_orderuEUCKRDistributionAnalysis.__init__uEUCKRDistributionAnalysis.get_orderuGB2312DistributionAnalysis.__init__uGB2312DistributionAnalysis.get_orderuBig5DistributionAnalysis.__init__uBig5DistributionAnalysis.get_orderuSJISDistributionAnalysis.__init__uSJISDistributionAnalysis.get_orderuEUCJPDistributionAnalysis.__init__uEUCJPDistributionAnalysis.get_orderuchardet\chardistribution.pyu<module chardet.chardistribution>Ta__class__Taselfa__class__TaselfTaselfacharachar_lenaorderTaselfwrTaselfabyte_strafirst_charasecond_charTaselfabyte_strTaselfabyte_stracharTaselfabyte_strafirst_charTaselfabyte_strafirst_charasecond_charaorderu.chardet.charsetgroupproberBaCharSetGroupProbera__init__Talang_filterla_active_numaprobersa_best_guess_proberaresetaactiveaselflaget_confidenceacharset_namealanguageafeedabyte_straProbingStateaFOUND_ITa_stateastateaNOT_MEfGz?f{Gz?Zaloggeradebugu%s not activeu%s %s confidence = %sabest_confa__doc__a__file__a__spec__aoriginahas_locationa__cached__aenumsTaProbingStateacharsetproberTaCharSetProberaCharSetProbera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.charsetgroupprobera__module__a__qualname__TnuCharSetGroupProber.__init__uCharSetGroupProber.resetapropertyuCharSetGroupProber.charset_nameuCharSetGroupProber.languageuCharSetGroupProber.feeduCharSetGroupProber.get_confidencea__orig_bases__uchardet\charsetgroupprober.pyu<module chardet.charsetgroupprober>Ta__class__Taselfalang_filtera__class__TaselfTaselfabyte_straproberastateTaselfastateabest_confaproberaconfTaselfaprobera__class__u.chardet.charsetproberTa_statealang_filteraloggingagetLoggerTuchardet.charsetproberaloggeraProbingStateaDETECTINGareasubb([-])+d Bafindallc[a-zA-Z]*[-]+[a-zA-Z]*[^a-zA-Z-]?afilteredaextend:nqn:qnnaisalphadalast_charu
        We define three types of bytes:
        alphabet: english alphabets [a-zA-Z]
        international: international characters [-ÿ]
        marker: everything else [^a-zA-Z-ÿ]

        The input buffer can be thought to contain a series of words delimited
        by markers. This function works to filter all words that contain at
        least one international character. All contiguous sequences of markers
        are replaced by a single space ascii character.

        This filter applies to all scripts which do not use English characters.
        lld>d<aprevain_tagTd u
        Returns a copy of ``buf`` that retains only the sequences of English
        alphabet and high byte characters that are not between <> characters.
        Also retains English alphabet and high byte characters immediately
        before occurrences of >.

        This filter can be applied to all scripts which contain both English
        characters and extended ASCII characters, but is currently only used by
        ``Latin1Prober``.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aenumsTaProbingStateTOobjecta__prepare__aCharSetProbera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.charsetprobera__module__a__qualname__fffffff?aSHORTCUT_THRESHOLDTna__init__uCharSetProber.__init__aresetuCharSetProber.resetapropertyacharset_nameuCharSetProber.charset_nameafeeduCharSetProber.feedastateuCharSetProber.stateZaget_confidenceuCharSetProber.get_confidenceastaticmethodafilter_high_byte_onlyuCharSetProber.filter_high_byte_onlyafilter_international_wordsuCharSetProber.filter_international_wordsafilter_with_english_lettersuCharSetProber.filter_with_english_lettersa__orig_bases__uchardet\charsetprober.pyu<module chardet.charsetprober>Ta__class__Taselfalang_filterTaselfTaselfabufTabufTabufafilteredawordsawordalast_charTabufafilteredain_tagaprevacurrabuf_charu.chardet.codingstatemachine-9a_modella_curr_byte_posa_curr_char_lena_curr_statealoggingagetLoggerTuchardet.codingstatemachinealoggeraresetaMachineStateaSTARTaclass_tableachar_len_tableaclass_factorastate_tablelanamealanguagea__doc__a__file__a__spec__aoriginahas_locationa__cached__aenumsTaMachineStateTOobjecta__prepare__aCodingStateMachinea__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.codingstatemachinea__module__u
    A state machine to verify a byte sequence for a particular encoding. For
    each byte the detector receives, it will feed that byte to every active
    state machine available, one byte at a time. The state machine changes its
    state based on its previous state and the byte it receives. There are 3
    states in a state machine that are of interest to an auto-detector:

    START state: This is the state to start with, or a legal byte sequence
                 (i.e. a valid code point) for character has been identified.

    ME state:  This indicates that the state machine identified a byte sequence
               that is specific to the charset it is designed for and that
               there is no other possible encoding which can contain this byte
               sequence. This will to lead to an immediate positive answer for
               the detector.

    ERROR state: This indicates the state machine identified an illegal byte
                 sequence for that encoding. This will lead to an immediate
                 negative answer for this encoding. Detector will exclude this
                 encoding from consideration from here on.
    a__qualname__a__init__uCodingStateMachine.__init__uCodingStateMachine.resetanext_stateuCodingStateMachine.next_stateaget_current_charlenuCodingStateMachine.get_current_charlenaget_coding_state_machineuCodingStateMachine.get_coding_state_machineapropertyuCodingStateMachine.languagea__orig_bases__uchardet\codingstatemachine.pyu<module chardet.codingstatemachine>Ta__class__TaselfasmTaselfTaselfwcabyte_classacurr_stateu.chardet=uExpected object of type bytes or bytearray, got: {}aUniversalDetectorafeedacloseu
    Detect the encoding of the given byte string.

    :param byte_str:     The byte sequence to examine.
    :type byte_str:      ``bytes`` or ``bytearray``
    a_input_stateaInputStateaHIGH_BYTEa_charset_probersaget_confidenceadetectoraMINIMUM_THRESHOLDacharset_namealowerastartswithTuiso-8859a_has_win_bytesaISO_WIN_MAPagetaresultsaencodingaconfidencealanguageasortedu<lambda>udetect_all.<locals>.<lambda>Takeyaresultu
    Detect all the possible encodings of the given byte string.

    :param byte_str:     The byte sequence to examine.
    :type byte_str:      ``bytes`` or ``bytearray``
    a__doc__a__file__apathadirnameaenvironTaNUITKA_PACKAGE_chardetu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__auniversaldetectorTaUniversalDetectorllaenumsTaInputStateaversionTa__version__aVERSIONa__version__aVERSIONLaUniversalDetectoradetectadetect_alla__version__aVERSIONa__all__adetectadetect_alluchardet\__init__.pyTaresultu<module chardet>Tabyte_stradetectorTabyte_stradetectoraresultsaproberacharset_namealower_charset_nameu.chardet.cp949prober0aCP949Probera__init__aCodingStateMachineaCP949_SM_MODELacoding_smaEUCKRDistributionAnalysisadistribution_analyzerareseta__doc__a__file__a__spec__aoriginahas_locationa__cached__achardistributionTaEUCKRDistributionAnalysisllacodingstatemachineTaCodingStateMachineambcharsetproberTaMultiByteCharSetProberaMultiByteCharSetProberambcssmTaCP949_SM_MODELa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.cp949probera__module__a__qualname__uCP949Prober.__init__apropertyaCP949acharset_nameuCP949Prober.charset_nameaKoreanalanguageuCP949Prober.languagea__orig_bases__uchardet\cp949prober.pyu<module chardet.cp949prober>Ta__class__Taselfa__class__Taselfu.chardet.enumsMu
All of the Enums that are used throughout the chardet package.

:author: Dan Blanchard (dan.blanchard@gmail.com)
a__doc__a__file__a__spec__aoriginahas_locationa__cached__TOobjectla__prepare__aInputStatea__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.enumsa__module__u
    This enum represents the different states a universal detector can be in.
    a__qualname__aPURE_ASCIIlaESC_ASCIIlaHIGH_BYTEa__orig_bases__aLanguageFilteru
    This enum represents the different language filters we can apply to a
    ``UniversalDetector``.
    aCHINESE_SIMPLIFIEDaCHINESE_TRADITIONALlaJAPANESElaKOREANlaNON_CJKlaALLaCHINESEaCJKaProbingStateu
    This enum represents the different states a prober can be in.
    aDETECTINGaFOUND_ITaNOT_MEaMachineStateu
    This enum represents the different states a state machine can be in.
    aSTARTaERRORaITS_MEaSequenceLikelihoodu
    This enum represents the likelihood of a character following the previous one.
    aNEGATIVEaUNLIKELYaLIKELYlaPOSITIVEaclassmethodu:returns: The number of likelihood categories in the enum.aget_num_categoriesuSequenceLikelihood.get_num_categoriesaCharacterCategoryu
    This enum represents the different categories language models for
    ``SingleByteCharsetProber`` put characters into.

    Anything less than CONTROL is considered a letter.
    laUNDEFINEDlaLINE_BREAKlaSYMBOLlaDIGITlaCONTROLuchardet\enums.pyu<module chardet.enums>Ta__class__Taclsu.chardet.escproberQaEscCharSetProbera__init__Talang_filteracoding_smalang_filteraLanguageFilteraCHINESE_SIMPLIFIEDaappendaCodingStateMachineaHZ_SM_MODELaISO2022CN_SM_MODELaJAPANESEaISO2022JP_SM_MODELaKOREANaISO2022KR_SM_MODELaactive_sm_counta_detected_charseta_detected_languagea_statearesetaactivefGz?Zaselfanext_statewcaMachineStateaERRORllaProbingStateaNOT_MEastateaITS_MEaFOUND_ITaget_coding_state_machinealanguagea__doc__a__file__a__spec__aoriginahas_locationa__cached__acharsetproberTaCharSetProberaCharSetProberacodingstatemachineTaCodingStateMachineaenumsTaLanguageFilteraProbingStateaMachineStateaescsmTaHZ_SM_MODELaISO2022CN_SM_MODELaISO2022JP_SM_MODELaISO2022KR_SM_MODELa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.escprobera__module__u
    This CharSetProber uses a "code scheme" approach for detecting encodings,
    whereby easily recognizable escape or shift sequences are relied on to
    identify these encodings.
    a__qualname__TnuEscCharSetProber.__init__uEscCharSetProber.resetapropertyacharset_nameuEscCharSetProber.charset_nameuEscCharSetProber.languageaget_confidenceuEscCharSetProber.get_confidenceafeeduEscCharSetProber.feeda__orig_bases__uchardet\escprober.pyu<module chardet.escprober>Ta__class__Taselfalang_filtera__class__TaselfTaselfabyte_strwcacoding_smacoding_stateTaselfacoding_sma__class__u.chardet.escsm;a__doc__a__file__a__spec__aoriginahas_locationa__cached__aenumsTaMachineStatelaMachineStatelTllpppppppppppppppppppppppppllppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppllllllpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppaHZ_CLSaSTARTaERRORlaITS_MElllaHZ_STTlpppppaHZ_CHAR_LEN_TABLEaclass_tableaclass_factorastate_tableachar_len_tableanameuHZ-GB-2312alanguageaChineseaHZ_SM_MODELTllpppppppppppppppppppppppppllppppppppppppllppppppppppppppppppppppppllppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppaISO2022CN_CLSaISO2022CN_STTlppppppppaISO2022CN_CHAR_LEN_TABLEluISO-2022-CNaISO2022CN_SM_MODELTllpppppppppppplplppppppppppllpppppppllppllppppppppppppppppppppppllllllppplllpppppppppppppppppppppppppppppppppppppppppppppppppppplpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppaISO2022JP_CLSaISO2022JP_STT
lpppppppppaISO2022JP_CHAR_LEN_TABLEl
uISO-2022-JPaJapaneseaISO2022JP_SM_MODELTllpppppppppppppppppppppppppllpppppppllpppllppppppppppppppppppppppppllppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppaISO2022KR_CLSaISO2022KR_STaISO2022KR_CHAR_LEN_TABLEuISO-2022-KRaKoreanaISO2022KR_SM_MODELuchardet\escsm.pyu<module chardet.escsm>u.chardet.eucjpproberRaEUCJPProbera__init__aCodingStateMachineaEUCJP_SM_MODELacoding_smaEUCJPDistributionAnalysisadistribution_analyzeraEUCJPContextAnalysisacontext_analyzeraresetaselfanext_stateaMachineStateaERRORaloggeradebugu%s %s prober hit error at byte %sacharset_namealanguageaProbingStateaNOT_MEa_stateaITS_MEaFOUND_ITaSTARTaget_current_charlenla_last_charlafeedqastateaDETECTINGagot_enough_dataaget_confidenceaSHORTCUT_THRESHOLDamaxa__doc__a__file__a__spec__aoriginahas_locationa__cached__aenumsTaProbingStateaMachineStateambcharsetproberTaMultiByteCharSetProberaMultiByteCharSetProberacodingstatemachineTaCodingStateMachineachardistributionTaEUCJPDistributionAnalysisajpcntxTaEUCJPContextAnalysisambcssmTaEUCJP_SM_MODELa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.eucjpprobera__module__a__qualname__uEUCJPProber.__init__uEUCJPProber.resetapropertyuEUC-JPuEUCJPProber.charset_nameaJapaneseuEUCJPProber.languageuEUCJPProber.feeduEUCJPProber.get_confidencea__orig_bases__uchardet\eucjpprober.pyu<module chardet.eucjpprober>Ta__class__Taselfa__class__TaselfTaselfabyte_strwiacoding_stateachar_lenTaselfacontext_confadistrib_confu.chardet.euckrfreqa__doc__a__file__a__spec__aoriginahas_locationa__cached__f@aEUCKR_TYPICAL_DISTRIBUTION_RATIOlaEUCKR_TABLE_SIZETl
llxl
ll
l
llll
llll
lWl
l
lhllll
lllll
l
l
l
l
l
l
l
l
llllll
llll
ll
ll
l
l/lll
l
lll
lllll
ltlll
llKlll
l
l
l
llllll
l
l
lllll
l<ll{ll
l
l
l
ll
ll
l
l
l
ll
l
l
l
l
l
lll
l
l
l
lYllllll
l
l
llll
ll
ll
l
l
ll
ll
ll
l
l
l
lllllll
lllllll
ll
ll
ll
lll
ll
llll
lll
lll
l
llll
llllllll
lllll
l
ll
llllllllllllllllllll
lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll'lllllllllllllllll[lllllllllllllllllllylllllllllwlllllllllllllllllllllllllllllllllllllllllllllllll`lllllllllllllllllllllllllllllllllllll"lllllllllllllzllllllllllldllll0llllllllllsllllllllllllllUllllllllllllllllllllllllll]llllllll-l:lllllllllllllllllllllllllllll(llvlllllllllElllllllllllllllllllllNlllllllllllllllllllllllllllllll
llllllllllllllllllllllllllllllllll
lll
ll
llllll$lllllllllll
l~llllllllllllll2lllllllllllllll
lllllllllllllllllgllllllllllllllllllllllllllllllllllllllllllll
lllllll
lblllll
llllllllllllall*llllllllllllllllllllllllllllllllllllllGlllllllllll!llllJlll=llllllllllllllllllllllllllll4llllllllll
lllllllllllllllll
llllllllllllllllTlllllllllllllqllllllllllllllll;llplllllll
lllllllllllllllllllllll)llllllllllllll
llllllll7llBlllllllllllllll
llllllllllllllllllmllllllllllllllllll
llllllllll
lllll
llllllllllllllllllllllllllllllllllllllll
lllllllllllllllllllllllIllllllllllllllllllllllllllllll.llllllljllZlllllllllll|l
llllllllllHllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
llllllllllllQllPllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
llllllllllllllllllllll
l5llllLlll
llllllllllllllllllRllllll
lllllllllllllllllllclllllllllllllll+ll
llllllllllllllll
llllllllllllllllllClllllllllllllllllllllllFllllllll8llullllllllllilllllllllllll?lllll
ll
lelllllllll%lllllOlllllllllll
llllll#llllllVllllll lMllllllllllSllll
llllllllllllllllll9lDllllllll3llllllllllllllllllllllllllllllllllllllllllllllll>llllllllllllllllllllllllll
llllllllllllllllllllllllllllllllllllllllllllllllll
lllllllllllllllllllllllllllllllll
llllllllllll
llllllllllllll
lllllllll
lll
lllllllllllllllllllllllllllllll
lllllllllllllllllllllllll
llllllllllllllllllllllllll@llllllllllllllllllllllllllllllrllllllllllll
llllllllll
llllll
llllll
ll
llllllllllllllllllllllllllllllllllllAlllllll}llllllllllllllllllllllllll
lll1lllllll
lllllll_lllllllllllllllllllllllllll
llllllllllllllllllllllllllllllllllllllllllll,llllllllll
lllllllllllllllllllllllllllllllllllllllll\llllllllllllllllllllllllllllllllllllllll6lll
llllllollllllll&llklnlllllllllllXlllllllllllllllllllllllllllllllllfllllllllll^llllllllllllllllllllllllllllllllllllllllll
lllllllllllllllllllllllllllllllllllllllllaEUCKR_CHAR_TO_FREQ_ORDERuchardet\euckrfreq.pyu<module chardet.euckrfreq>u.chardet.euckrprober0aEUCKRProbera__init__aCodingStateMachineaEUCKR_SM_MODELacoding_smaEUCKRDistributionAnalysisadistribution_analyzerareseta__doc__a__file__a__spec__aoriginahas_locationa__cached__ambcharsetproberTaMultiByteCharSetProberlaMultiByteCharSetProberlacodingstatemachineTaCodingStateMachineachardistributionTaEUCKRDistributionAnalysisambcssmTaEUCKR_SM_MODELa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.euckrprobera__module__a__qualname__uEUCKRProber.__init__apropertyuEUC-KRacharset_nameuEUCKRProber.charset_nameaKoreanalanguageuEUCKRProber.languagea__orig_bases__uchardet\euckrprober.pyu<module chardet.euckrprober>Ta__class__Taselfa__class__Taselfu.chardet.euctwfreqS?a__doc__a__file__a__spec__aoriginahas_locationa__cached__f?aEUCTW_TYPICAL_DISTRIBUTION_RATIOl*aEUCTW_TABLE_SIZET*llllllllRll9llllllnll!lllLl,lllllllllllllllllllllll:l!l9ll?l9l9lllKllllll9lllllll
lllllllllllll9l!lllll9lll|lll"lll@ll9lllllllll9lllHll9lPllllllllllllllEllllllslll<l2lllllllllllllll9ll
llllll!lllZll
llllllllll
l9ll
ll
llllllqllllllllllll9lullll
llll9l~llllll!lGllllllUllllllll
llljlll
l9llllllll9llllSllllll]l9llllllllllll+llllll!lllllllllllllllllllllllllllllllll
l!lll9lllllllllllll9l9lllllllllXl
lllllllllll!lMll9ll%lll9ll9l9l'll!llll7llJl!lllll
lllllllllllllll!l lll
llllllllllll
llmll9ll
l
llll!l9ll9llllllll9l9lllll&l9ll9lllll.llll9ll9ll
l!ll#lllllllll9l9l
llllllll
lllldll0lFlllll9l
l9llllllllllll
lll9lllll!lllllllllllllllll!l
llll
llll9llll9llll!lll
ll!l9lll
ll
l9l!lllllll
llllll
llllll
lllllllllllll!lllllll
lll!l!l
llllll
lllllllllll
llll9lllllllllll
lllll9ll9lllllllll!lllllllll}llll!l9l9ll9l9l9l!lllll
llllll9lllllllllllllllllllllllllllll9llllllbl
lll9l
llllllll9lllllll9lll
lDllllllllllllllllll
l9ll!ll!l9lll9lllclllllllllllll9llllll
ll9llllllllllll9llllll9l;l9lllllll
l!ll9llll9llllll
lllll
llllllll9ll9l9lllllilll
lll
lll9llll9lll!llll!lllllll!llll9llll
l9l
llll9lll9llllll!l9l9lllll9llll!l!llllll
llllll
lllllllll
ll
l
llll3llllllll!ll9l9lllll!llll9l9l9l
ll
llllllll9l!l9l9llll9llllllllllll!lllOllllllllll
lll
ll9l!l9l9l9l9l
l
llllllllll!lllll!lll9l9l9llll9lllllll!ll9lllll!l!l9l`l
l
ll9ll9lllllllllll
ll9lllll9ll9l9l9lllllgllllllll9l
llClllllll9l9llllllllllllllllllll
lll
llllll9l
llllllNllll
lllllllllll!lllllll!llllll!llll!ll9ll
ll9lllll9ll
l
llll9l
l!ll
llllllllllll!lllllll9l
ll
l9ll!lll!lll{ll ll!l$lllllll
llllllll9lll
lllllll l:lllllll ll!lvll:lllll
llllll:l:llllllllll:llll:lll:ll:ll!l:ll:l lllllllllllll
l:lllllllll!l:l:l:ll:l!l:l:ll
lllllll:lll:l l!lll:lll
ll:l:lllll:l:lll:l:l:lll
lllll:ll:lll\lll:llllll:lllll:lll
llll:ll"llll:ll"ll^l"l
ll:lll"lll:lll ll
l:l ll"l:l
ll:lllllll:llll lllllll:lll:l:llll"lllllll llllll:llll
l:l llll:l"l"ll lllllhlll:llllllll
l:lll"lll:llllll
lll)l:l:l"l:llllll ll:lllll
lll:lll
l ll:llllllll:lll:llll
llllllwlllll l:lll"ll"llll:lll l lll
lll llllll:l:ll:lll(lllll llll"lllll:llll:lllllll
ll
llllllll
lll
llll l
llll:llll
l
l:l llllllllll:ll:lllll
l"llll:l"llll
lllllllllllllllll"llll:ll:l"l
llll
ll"l"lllll:lllll:lll
l:lll l:lll:l lll
l ll
llllll"l"l:lllll:l"llll"llllll:l"lll:l:l"lll:llllllll"ll"ll ll"l:l:ll
lllllll"lll:lllllll ll:lllll
lllll
l"ll"lllll"lllll:ll
l"lllll
l lll"ll
lllll l:ll"ll:ll:l lllllllllll l:l
lll l:ll"l lll:l"l l:lll:lllll:l"llll l llll:l:l:ll"lllllll"l:lllllll
l
llll:lll:llllll"l l:lllll l ll:llllllWl
l:lll:llll lllllllll
l
l
ll:l:lllllllllBl"l:llllllllllllllll:ll:lllllll"ll:l:lll:lll:llllllllllll:lllllllll"llll
l
l
llllYlll:l
l:llll:lllll:l"llllllllll:lllllll l6lll"llll:llllll l"llol ll
llll llll:lllllll:llllll
l"lllll"llllll"lllllll lllllll
ll:l:ll llll:l"l lllll:ll;ll
l
llllll;llll"lll ll;lll"l;l;llll;lllll;llll l
lllllll;llllll;ll"llllllllll;l;ll;l lll"llllllll l;l lll;llalQl l;llllll;lll
l;llll l"ll
lllllllll;l;llllll lllllll l;ll
l"llllll;lllllll;l;lllll;ll;lllll"ll;l;l;l;llllllll;lllll"l
ll
ll
llll;lllll;l;lllll"l;ll;l"ll"lll
llllll;lllll;lll
ll
llll"lll;l;lllllllllllllll;l
llfll>lll"lll l;l;lllllll;l
ll;lll"lllllll"llllllll
l;l;ll;lVll
lllllllllllll
llllllllllll;llllll;llll llllrll lll;l;lllllllll;ll;lllllllllll;l ll
l"l;lllll"ll
llllll
lllllllll;lll"ll
l;l;l;ll ll
ll ll"l"lllll lll"ll llllll
llllllllllllll;lllllllllllllll;lllllllllll;l"llllllllll;lll;lllllllllll"ll l"llllllllllll;l"l;ll;l;l;llllll_llll llllllllll;llll;llll llllll;llllll5l;ll;l
l"llllll;llllll"lllllllllllll"llllll
llllll;l;lll;l;lllllllllll;l"llllllllll;llll"lell;ll
l;l
ll;llll;l;l;l
l ll;l;lll;l;ll
l
ll"ll
lllll"l;lll;lll l;llllllllllll
ll
llll"ll"l lllll"ll;l
ll;lllzl;l"lll;lllllll"lll;l;l l;l lTl lpll;lllllll;l l;llllllllllll"lll;ll;llll llllllllllll;l;l"llll;lll;ll;llllllllllllll"l"l;lllllllll
lllll;l lllll;ll;llll l;l llll"lllllllllllll
llll;lll;l;l"l"l;ll;llll;lllllll
lllllAlllllll;l;lll-llll"llllll;lll;ll;ll;lllllllll<ll lll<lll<lllllllll
l<l<ll
lllll<l<l l
lll<l"lllllll"llllll<l<llll[lllll"l<llll<lll
llllll"lll<l"l<llll
lll"l<ll<l<llllll llll"l"lllll"l<l<l<l<ll=lllll<lllllllllll"lll
lllll
llllll"lllllllll"l<lll l<lllll lll"ll llll"l"l l"lllllll ll<l<lllllllll l lll<llllll<l<l<l"l<l"llkllllll<lll
lll lll<l
lll l"lllllllll
llll8l
lllll<lll"ll<ll<l<ll"ll<ll<ll"l<ll<l<lllllllll<ll1l<llllllll<llll llllll<ll"lllll"ll<l"llllll<l<llll<ll
l<ll
llllll ll lll l<llll
lllll ll<l
lll<l
l<l<lll lll l<ll
llllll"llllll"lll"lll
ll lll<lllllllllllllll
lll<ll<l<lll<ll"lll<llll<llllllllll
ll"l<l<l<l
ll"lllll
l lllll
lllllllll<ll<lll"llllllllll<ll#l<ll<lllll<lll#lll<llllllllllll
l<lllllllllll#ll lllll ll<lllll<lllllllllllll lll<l<l
lllllll
lll#lll l ll*lll<ll#ll
lllllllllll#l#lllll<l<llll<ll<l<llll<l#l<lllllllll4l<lll<l<l<ll<llll ll
ll#l
lll#lll<llllll<l#ll<l<llll<l<l lll
lllll<l<l<l#lllll<lllll<ll<l<l lll<lll
ll<ll llllll#l
llllllllll<ll<llllll#l<llll<lll
lll#l#l
llll<lllllll<l<lll#l ll#lllllll<l<llll
lllllllllllll<lll<l
l<lllllll ll l<llll llllllllllllll<ll<l<l l
llll
lllll<llllllllll<l<l<lllllllllll
llll<llllll ll#l=l=l lllll=lll llll ll=ll lllll=l=lllllll llllll ll=ll lll=lll
llll=lll=l=l=llllll lllllll
l=l=ll l
l
lll#l#lllll=llll
llllllllll l=lllllll=ll#l=l=llllll l=l#llllllllll llll=l=ll#l#llllllll
lllll l=lll=llll
ll=l#llll
lll=ll=l=l=lllllllll=llllllllllll=ll=ll#l=l
lllllll
ll=l=l=llllllll l
l=lll=l#ll llll l
l#ll=l=l!l
lllll=l=lll=lll=l=l=l=llllllllllll#lllll
l=l=l/lll=l
llll=lllllllll!llllllllll=lllll#ll=l=llll
lllllll#llIl=l=ll=lllll
ll=l
lll=l=l=l=lll=lll
l!l#lllllll#l#ll=l!l=l=l#l=l=ll#lll#llll=l=llllll=ll=l=lll=l!ll=ll
l=l=l#lll=ll=l!ll=ll!l=l=llllllllll!l#llllll=ll=llllllll=l=ll!lll=lllllll=lllll#l=ll=l
l
lllll!l#llll!lllllllll=lllll#lllllllll!ll=l#lllll
l=l#lllll=lll=llllllllll!l=llll=lllll=l!ll!l#ll
l!ll
l=llll
l=l
ll#lll=ll#l=ll!l=ll!ll=ll=llll=llllllllll
l
llll=lllll=lllllll=ll!l#l=l=l=l!l=l=l#l=ll#lll=llll!ll!ll=l
l#l=l!ll=llll=l!llllll#ll!llll
llllllllll!l=llll
ll!ll#l=ll!l=ll!ll=lll=lllll=lllll!ll=ll=l>l>l>l>l!ll>lllll#l#llll#l
ll!llllll
l>llllll>l>l>l
l>ll#l#l>l#l>ll>l>llll!l>l!lllllllllll!l>llll>l>ll#lll#lll>lllllyl
lll>l!lllllll
lllll>lll>l>ll>l!lll
llllllll>ll!lll>lllll>llxl!l!lllllllll#l>l>lllll>l
l#llllllllll>l>ll>llll>llllllll>l>lllllll>ll>llllll>ll>lll>lll>l!lllll
lll>l>l#llll#l!l>llllllll>l>l>lll>l
l!ll>llllll!l!llll>llll!llllllll
l!lll!l>llllll#lllllll>l>lll>lllll>l>l#l>l#l>lll>llll#l>llll>l>lll>l#l>l>l>lllllllllllll
lllll>ll>lllllll>lll>lll!lllllll>lllllllllll>l
lllll
ll#ll>llll!llll>lllll>l>ll>l>llllllll>l>ll
l>ll!l#l>ll>l>lllll!lll>ll>ll>l>l#l#l>llll>ll#ll>lll!lllll>ll>l!llll#l#ll>ll!l>llll>l>lll>llll>l!lll#ll!lll#lll>lll>ll
lllll!l>l!lll
l
llllllll>ll#l
lll#l>lllll!ll!llllll
l>l>ll#lll>l>l#lll>lll>lllll>lll>ll>llll>l#llll!l>l>ll>ll#lllll>l!lll#lll
ll>l>l>l!l!lll>l>ll>lll>lllllllll!ll!llll#l>ll!ll>l#ll
lllll!ll
l#l#ll?ll?ll?llll?l?ll?l?l?l?ll#l#ll
l?lllll
lllll?l?lll#l?llllllll?lll?l?l?l?l?llll?ll#lll#ll?lll?l?l?ll#ll?l#l?ll#l#lllll?l?l?lll?l?l?ll?l?l#llll?lll!l?l?ll?llllltl?lll?lllllll?llll
lll?l?ll?l?ll#ll?lllll?llll?lllll?l?l?llllllll!lllll!l?l?l?l?aEUCTW_CHAR_TO_FREQ_ORDERuchardet\euctwfreq.pyu<module chardet.euctwfreq>u.chardet.euctwprober0aEUCTWProbera__init__aCodingStateMachineaEUCTW_SM_MODELacoding_smaEUCTWDistributionAnalysisadistribution_analyzerareseta__doc__a__file__a__spec__aoriginahas_locationa__cached__ambcharsetproberTaMultiByteCharSetProberlaMultiByteCharSetProberlacodingstatemachineTaCodingStateMachineachardistributionTaEUCTWDistributionAnalysisambcssmTaEUCTW_SM_MODELa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.euctwprobera__module__a__qualname__uEUCTWProber.__init__apropertyuEUC-TWacharset_nameuEUCTWProber.charset_nameaTaiwanalanguageuEUCTWProber.languagea__orig_bases__uchardet\euctwprober.pyu<module chardet.euctwprober>Ta__class__Taselfa__class__Taselfu.chardet.gb2312freqh,a__doc__a__file__a__spec__aoriginahas_locationa__cached__f?aGB2312_TYPICAL_DISTRIBUTION_RATIOlaGB2312_TABLE_SIZETl
llllllll
llllllllllll
llllllllllllll lll+llllllll
lllll
lll
llllllll%llllll
lllll
lllll
lll
llllllllll
llll
lll
llll;llll
ll
l
lllll
l!ll!lll"llllFlllllllllllllll"llll(lllll!lllllllllllllllll
lllll"lllll!ll
llll#lllllllllllll
l lll
llll
l llllllllllll
llll&lllllllllllll
llllllllllllllllllllllll"llllll l'lllllll'llll l+llllllll0lllDlllll
lllllllllllllllllll
lllllllllllll l
lll
lllllllllllllllllll
lllllllllllllllll
lllllllllllll
llll#l
lllll lllllllll
llllllllllllllllll
llll
llllllllll|lll
llll%lllllllll"lllllllllll
llllllllllll~lllllllllll&ll
llllll
l
lllllllllllll!llllllflll
ll[lllllll
l
lllll#lllllyll
lllllllll&llnl#llll
lll$l%l
llllllllllllll
llll
lllHlllllllKlll&ll
lllllll'llllllllll
llllllllllll
lll'lllllllll!l&l!l)lllll#ll&llllllll ll
lllllllklllllll'lllllllBl(lll
llll lllllllllllll5lllllllll
lllllll!lllll
lll
lQlllll
lll lllllllllllll
lllll
llllllllllll
lllllllllllllllllllllll
lllllll$lllllllltl
lllllllll
llllllllll lllll(llCll llll
llllllllllllll
llllvllllllllllllllllll-l
lllllllll
ll
lllllllllll
llll$ll
llllllll)llllllllOlllllll
llllllllllllllll!l
llll&lllll
llllalllll!lllllllll
llllllllllllllllll!l
l
llwllllllllll
llLll%l lllllllllll
llll
ll
l
llllllllll
lllllYllllllllllllll llllllll llllIllllllllllllll
ll%lllllllllll
lll
lllll
lll
ll'llllllll
lll#llllllllllllllllllllllllPllll!lllllllllllll
l
lllllllllllllllllllll>llllllllllll"llllJl$lllllllll
lllll
lllll
lll#lllll)lllllllllllllllll
l
l"llll+llllllllllllllllllllllllll&lllllll
lllllllllllllllllllllllllllllllll)llllllxllllllll(lllll lll
llllllllll!llllllll
lll!llll
lllll
lllllll$lll lllZllll(l#lllllllllllllllllllllllllllll)lll
llllllllllll
l
lllllllll.l!llllllllllllllllllllllllllllllqllllllllllllllllll
lllllllllllll&lll'llllllllllllll$lllll(lllll
lllllllllllllll$ll
llllllll(llllllll lll
lllll
llll llllllllll(llllllllllll
lllll3llllllllll
llllml"lll!lllllRllllllllllllllll
llllllllllllllllllll"lll#llll
lllllllllllll
llllllllll
llllllllllllllllllll!lllllllllll
lll
llll%llllllllllllll#ll
l
lllllllllllll!l!llllll ll
llllllllll llllllll
ll
llllllllll
llllllllll"lll
ll
lllllllll
lll
lllllllllllllllll
llll/llllll
l
lll#ll llllllllll-lllllllllcl
l
ll"llll
lll#l&ll
l!lll'lllllllllllllllll
lll
lllllllll
lllllllllllllllllll'llllllllllllllllllWllllllllllll#l!lll!l llll
lllll&l)lll
ll$llllllllllldllllllllll ll
llllllll#lllllllllllll
l
llllllllll-lll llllll,llll
lllllll"lllll
llllllllll'l!llllllllllllllll
llllllllllllMllllll}l
lllllllllllllllll
lllllllllllllll
llll)l"l{l
lll!lllllllllll7llllllllll$lll
ll'llll
ll*llllllblllllll
lllllll!lll$lll
llll
ll"lllllllllll
lll
l
lllllllllllllllllllll
llllllll&llVl%llll
llll l
lll)ll ll*ll
lllll"l!lll!lllllllll#lllllll
lll%llllllllllll"lllllllll
llllll!lllllllllllllllllllll l*lllul*llllll#lllllllllll
llllllllll%llllll
l
llllllll llll lllllll
l"lllllllllll
llllll`lXl lllllllllllllllllll
lllllllllllllll!llll2llll9lllllllllllllplll
llllllll
l
llllllllllllllllllllllllllllllllllll(lllllllllllllllll
llllllllll
ll llllhl
llllllllzllllllllll'lll"lllllllll lllllll%lll
llllllllllllllll llll'll lllllll,lllll!l$lllllll,lllll
l
llllllllllllll
l
lllllllllllllllll'lll
ll
lllll
ll'l
lll lllll\ll&lllllllllll$l lllll
llllllll
llll
lllll"l@lllllllllllllllllll
lllllllll
llllll l
llllllll
lllllllllllTl"lll
llllllllllll^ll
llllll
llllllllll lllllllllll
l
lllllllllll
lllllllollllllllllllll%lllllllllll
lllllllllllllllllllllllllllll llll
ll
lllll
lllllll(l
llllllllllllll
llllll]lllll"llllll
llll lllllEllllll
llllllllll
lll
lllllllllllllllllllllllllllll#llll
lllllllllllllllll
lll
l
l4llllllll"lllllll
l
lll
l
llllll
llllllllllllllllll
lllll
llll
llllllllllllll:llllll
lllll
llllllllllllll
l llllllllll(llllllllllllllllllllllllllll
lllllllll"llllllllllllllllllllll"lll
ll"lllllellllll"llllll$llllllllllllllllllll
llll
llllllll'llllll
lllllll
llllllllllllllllllllllllllll llllll
ll
lllllll)llll!lll
ll"ll?llll
lllll
lllllllll
lllllAl!lllllllllll
lllllglllll
lllllllllllllllll
lllllll_ll
llllljl
llllllllllllllllGll
llllllllllllllll
lllllllll
lllll
lllllll"llllllllllllllllll llll%lllllllll
lllllllllllllll1lllllllllllllllll
llll"lllllllll
llllll"llUl!llllllll#llllllllllllllll%ll!llll=llllll
lll lllllilllll
lllllllllllllllllll<ll
lllllllll"lll
llrllNlllllll)llll llllllllll
l
l$llllllll6ll
llll
lllllllllllllllllll
lllllllllllll
l
llll"llllll8llllllll&llSlll!lllllslllll#llllll#llllllllll
lllllllll2l2l2l2l2aGB2312_CHAR_TO_FREQ_ORDERuchardet\gb2312freq.pyu<module chardet.gb2312freq>u.chardet.gb2312prober0aGB2312Probera__init__aCodingStateMachineaGB2312_SM_MODELacoding_smaGB2312DistributionAnalysisadistribution_analyzerareseta__doc__a__file__a__spec__aoriginahas_locationa__cached__ambcharsetproberTaMultiByteCharSetProberlaMultiByteCharSetProberlacodingstatemachineTaCodingStateMachineachardistributionTaGB2312DistributionAnalysisambcssmTaGB2312_SM_MODELa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.gb2312probera__module__a__qualname__uGB2312Prober.__init__apropertyaGB2312acharset_nameuGB2312Prober.charset_nameaChinesealanguageuGB2312Prober.languagea__orig_bases__uchardet\gb2312prober.pyu<module chardet.gb2312prober>Ta__class__Taselfa__class__Taselfu.chardet.hebrewprober_aHebrewProbera__init__a_final_char_logical_scorea_final_char_visual_scorea_preva_before_preva_logical_probera_visual_proberaresetlw aFINAL_KAFaFINAL_MEMaFINAL_NUNaFINAL_PEaFINAL_TSADIaNORMAL_KAFaNORMAL_MEMaNORMAL_NUNaNORMAL_PEastateaProbingStateaNOT_MEafilter_high_byte_onlyaselfais_finallais_non_finalaDETECTINGaMIN_FINAL_CHAR_DISTANCEaLOGICAL_HEBREW_NAMEaVISUAL_HEBREW_NAMEaget_confidenceaMIN_MODEL_DISTANCEZa__doc__a__file__a__spec__aoriginahas_locationa__cached__acharsetproberTaCharSetProberaCharSetProberaenumsTaProbingStatea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.hebrewprobera__module__a__qualname__llllllllllaNORMAL_TSADIlf{Gz?uISO-8859-8uwindows-1255uHebrewProber.__init__uHebrewProber.resetaset_model_probersuHebrewProber.set_model_probersuHebrewProber.is_finaluHebrewProber.is_non_finalafeeduHebrewProber.feedapropertyacharset_nameuHebrewProber.charset_nameaHebrewalanguageuHebrewProber.languageuHebrewProber.statea__orig_bases__uchardet\hebrewprober.pyu<module chardet.hebrewprober>Ta__class__Taselfa__class__TaselfafinalsubamodelsubTaselfabyte_stracurTaselfwcTaselfTaselfalogicalProberavisualProberu.chardet.jisfreqy3a__doc__a__file__a__spec__aoriginahas_locationa__cached__f@aJIS_TYPICAL_DISTRIBUTION_RATIOl"aJIS_TABLE_SIZET"l(lllllllllll!ll#llllll#lll'l$llllll'llll'lllllll
lll
l
lllllll0l1l,l-lllllllll!ll$l
ll'l'l'l'l'l'll'l$l'lll'lllllll'lll
ll
llll
ll!l!l$lllllll!l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l'l l'l'l'l'l'l'l'l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l$l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(llllll
lll
l
l(l(l(l(l(l(l(lllllllll
lllllll
lllllll
lll l(l(l(l(l(l(ll lllll!lll(lllllll(lllll$l
lll$l(l(l(l(llllllll/l l2lll#llll*lllllll[ll\l5ll!lll%l@lll'lllll4l
llllll<llllllllSlll~llllEll;lll7lllml&lll
llOl(l=lllll(l(l(l(l(l(l(l(l(l(l(lYl>lJl"llplllllTllll.lXlllLllell9lPl llyllllDllll)lllFl?ll+lll
lclllBl]llll8ljl:lllllllRllGldllllnllhll6l3l$lWlCllllllllll(l(l(l(l(l(l(l(l(l(l$l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(l(ll(l(l(l(l(l(l(l(lll$l!ll(ll(ll(l$lll)l l!l$ll!l l)l l ll)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l)l*l*l*l*l*l*llllllllllllllllll*l$l*l$l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l*l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l,l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l-l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/l/lll$lllll$lll/l/lll!llll/lllllllllll lllllllll
llllllllll
l
llllll
lllll
lllllllllllllllAlll
lllllll
llllllll
lllll/lllllllllll!llllll/ll!llllllllllllllllllll
l/ll!l$llll
llllllllllllll/lll
lllllllllllll$lll$lll
lllllllllllllll/llll
l$lllllll
lllllllflll}lllllllllll
lllllll$lllllllll
lll
l
l
llllllllllllll
llllllllllll
llllllll
ll
llllllllll/lllllllllllll
l/l/l
l
ll/l$llllll$lllllllllllllllllllll
ll$ll$lllll
llllllllll$lllll$l
ll
l
lllllll l
l
l$lll
lllllllllllllllllll lll
lll l/lllllllllllllllll
llzllllll/llllll!llllll
lllllllllllll
lll
lllllllll!llllllll!lllllllllllllllllllllllllllllllll lllll
ll
llllllllllllllllllll
l/l
llll
llllllll
lllllll!lllll$lllllllll llll/llllllllllllllllllllll!llllllll!llllllllll
llllllllllllllllll/llllllll
lllllll
llllllllllll
ll/lllllllllllllllllllll/ll
llllllll
llllll
llll
lll llllll/lllllllll
lllll
lllllllll
lllllllllllllllllllllllNlllll
ll
lllllllllllllllllllllll
llllll
lllllll$llll$ll
llllllllllllllllllll
lllllllllllllll l
llllllllllllllllllll
llllllllllllll
lllll/lllllllllllKllllll$ll/llllllll
lllblllllllllllll/lllll/l
lll!lllllllll
lllllllll/lllllllllll/l
ll
llllll
llll
ll
l
l
l
llllllllllllllllllllllll l$lllll/lllll$llllll
lllllllllllllllll!l!lllllll
lll
lllllllllll
llll
llll
lIlllllllllltlllllolll/lll
lllllllglllllllllll
l$llllll`llllllll^lllll$l lll
llallllllll!ll/llllllllllllll!lll
lll!llll
llll
llllllllll!lllllll$llllllllsllllllllllllll
l
lllllll
llllll
lllllllll
llll
lllll!llllll
llll
ll
llllllllllMlllllll l0ll!llllllll
ll
lllllllllllllkll0llllllllllllllll!llll
lll
llll
lllllll
l
llllllll llll
l$llllllllllll
llll0llllll0lll
lllllllVll
ll
ll
lrlllllllllll!llllll!l
l
lllllllllll
lll
l
llllllllll llll$lllllllllll
llllHlllllllll
lll$lll
lllllll$lllllll
llllllllllll!ll
ll0llll
lllllllllll
llllllllllllllllllllll
llllllllllllll
lll
lllll
ll$llllll{llllll
lllll
l
lllll
lll0lllll
lll
lllllll$llll0lllll0ll
lllllllll0ll!lllllllllll0llllllllll
l
llll
lllll0llllll
llllllllllllll
llllll
lllll
l llllll
llllllllllllllll
lll
llllll
lllllll
lllllll0llllllllll$lll
lllllllllllll
l!llllwllllll$lllllllll$lllllllll
llllll0lllllllllllll
llllllllllll
llllll
ll
lllllllllll
l
lllllllll
lllllllllullll
lllllllllll0llllllllllllllllllllll!llllllllllllllllll$lll
llllllllllll!ll!l$llllllll
lll0lllll
lllllllllQllllll$lllllllll
lll
ll lllll
ll0llllllllllllll
lllllll llllll
lllllll
lll
lllll0llllll0l
lllllllll
lll$llllllllll0lll ll0llllllllllllllll l
llll!llllllillllllllllllll0lll
lllllllll!l!lllllllll0l!l l0lllll
l
l
llllllll
lllllll$lll
llllll0l
lllllxllvlll!lllllll0lllllllll
lll ll0llllll
lllllllll$llllllllllllll
lllllllll
ll0llllllllll0lllllll
lll!lll
lllllll
lll0ll ll0lll
llllll$lllll$llll0l!ll
lllllllll!lll
lll
lll
ll$lllllllll!ll!llllllllllll lllllllllllllll$llll$lll
lll$lllllllll!lllll0lllllll"llllllllllllllll"llll0l0lll
lllllllllllllllllllllll
llllllllllllllllllll
lllllllll
llll
lllUlllllll
l
llllllllllllllllllllllllllllllllllllll"ll
lllllll"lllllllllllllllll
lllllllll_llll$ll
lllllll
l
llllll
llllllll
llllll
lllllllllllllllllll0lllllllllll
lllllllllll0llll lll$llllllll0lllllllllllllllllllll0llllllll
ll lllllllllllllll0l
llllllllll
ll
lllllll lllll0lll
lll"llllllllllll
llll
ll0l
ll
llllllllllll
l"ll$llll0llll
ll"llllllll
ll
lllllllll
llllllZl0lllll|ll
lllll
ll"llllllllqlllllll lllllll
llllllllllll
llllll"lll"llllllll
llllllllllllll
lllllll$lll llllll
llllllllll"lllll$llllllll0llll
llllll
l
lllllllllllll
llll llll"ll
llll
lll
l0lllllllllll0lllllllllllaJIS_CHAR_TO_FREQ_ORDERuchardet\jisfreq.pyu<module chardet.jisfreq>u.chardet.jpcntx2Ya_total_rela_rel_samplea_need_to_skip_char_numa_last_char_ordera_donearesetlaNUM_OF_CATEGORYqwianum_bytesaselfaget_orderlutoo many values to unpack (expected 2)laMAX_REL_THRESHOLDajp2CharContextaENOUGH_REL_THRESHOLDaMINIMUM_DATA_THRESHOLDaDONT_KNOWaSJISContextAnalysisa__init__aSHIFT_JISa_charset_nameTqlllllllaCP932llllllllla__doc__a__file__a__spec__aoriginahas_locationa__cached__TSTSlppllppppppppppppppppppppppppppppppppppllppppppppppppppppppppppppppllppllppppppppplTSlllllllllllpplllpllllplllpplllllpllllllllllllllllllllpllpllplllllplllllllppplllllllTSlpllppppppppppppppppppppppppppppppllpppppppppppppppppppppppppppppppppppppppppppppplTSllllllllllllpllllllllllplllpllllpllpllppllplllpllllllllllllllllllllllllllpllllllplpTSlppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppTSlllllllllllllpppllllplllpllllppplllplllpllplllllllpllpllpllplllpplllllllplllplllpllTSlpppppppppppppppppppppppppppppppppllpppppppppppppppppppppppppppppppppppppppppppppppTSlllllllllllpllpllllllppppllllpllplllllllpllpllplllllllllplllpllpllllllllpllllllllllTSlppppppppppppppppppppppppppppppppppppppllppppppppppppppppppppppppppppppppppppppppppTSllllllllllplllllllllppllpppllllppllplppllpllllllllplllplpplplllpllllllllplllplllpllTSllllllllllllpllllllpllllppplllllplllllllllplpllplllplplllllllllplllllllllpllllllpllTSllllllllllplllpplllpplllllplllllllllllllplllllllllllppllllllpllpplllllllllpplllllllTSlllllllllllplllllplllllllpllllllpllplllpllplllpllllllplllllllllppllppplppplllllplllTSlllllllllplllplllllllppllllllllllplplllplllpllpllpppllpllppppllllllppllpplplllllllpTSllllllllllpplpppppllllllllplllllllllllllllllllplllplpllllllplllpplllllllllpllllllllTSlllllllpplppllllpplllllllllllllppllpplllllllpllpllllppplllllplpllllpppplllllplllpllTSllllllllllplllllppllllllpplpllllllllllplppplplpplllpllllllplllllppllllllpplpllllplpTSlllllllllllppllllplllllllllplpllllllllllllpllllllllpllppllpppllppllllpplllllllllplpTSlllllllllllpllpllpllppllllllllpplllllllpllllllllllpllllllllllllppplllllllpplpllllllTSlllllllppllllllllpllllllllllplllllllllllllplplplpllppllppplplllllplllllplplllllllplTSlllllllllllpplllpplllllllplllpppllllllllllplplpllllllllllllplllpplllllllllllllllpllTSllllllllllllplllllllllllllpplllplplllpplllllllllpppppllppppppllplllllppllppllpllpllTSllllllllllllplllplpllllppplllllllllplllpllllplppllpllllllllplllppppplpllplplllllllpTSlllllllppllppllllllllllplplpllllllllllppllllplpllllplllpppllpllllllllppllpllplllllpTSlllllllllllpllppplllplllllllpllllllllllpllpllllplplppllllllplllpplllllllpllplpllllpTSllllllllllllpllpplllllllplpllllplplplllllplllpllllllppllllllllpllplllllllplpllllpllTSlllllllllllpplllpllllplllllllllllllllllpllpplpplllllpllpllppplllpplllpplpplllllplllTSlllllpplllllllppllllplplpllpllllllllllpllllplllppllppppppppppllllllllpplllllppllpllTSllllllllllllllpllpllllllllpplplplllllplpllplllllllplllllplllllplpplllllllpllllllpllTSllllllllllppplllllllplllllpplllplllllplpllllllplpllppppllppppllllllllllllllllllpllpTSlllllllllllpllllllllpllllpplllllpllpllpllpplllplllllllllpllllllplpllllllppplplllllpTSllllllllllllpllllllllllllllpllppplllllplllpllpllplllllllllllplllllllllllppllllllpllTSlllllllllllplppllpllpllpplpllllllllpllppllplllplllpllplllllplllllplllpllplplllllplpTSlllllpppplllllppppllllllpllpppllplllplllpplpllplppppllppppppplplpllllpplplpllpppplpTSlllppllpppllllllllllllllllllllllllplllllllllpplllllllpllpllplllpppppppppppllpppppppTSllllllllllllplllllllplllpppppllpllllpllpllplllllppllplpllllppllplllllllllllplllllllTSlllllpppplllllllllllllllppppllllpplllppllllplppplllppllpllpppllllplllppllllplppplllTSlllllllllllpllllplllllllllplllllpllpllpllpplllpllllplplllplpllllplllllllplllpllllllTSllllllllllplllllpplpplllllplllllpllpllppplllplpllllllllllpllplpllllllllllllllllpllpTSlllllllllllpplllplllpllllllllllplllpllllplplllplllpllpllllllllplllllllllllplplllplpTSllllllllplplplllllllllllllpllllpllllllppllpllllllllpllllllllllllllllllllllplpllpllpTSlllllllllllpllllllllllllllplllllllllllllllllllllllplllllllllllllpllllllllppllllllllTSllllllllllllllllpplllllllllllllpplllllppplllllllppppppllpllplllpplllllpllllpppllllpTSlllllllllllppllpplllppllllpplppllpllllllllplplpplllplllplllllllpllllllllpllplplpllpTSllllllllllpllpllpllllllllllpllllllppllllppplllllllplllllpllplllllplllppllppllppppllTSlllllllllllplpllplllpllppllllllpllpllplpllpllllllllllpllplllllllpllllllllplllllllllTSllllllllllplllppppllpppppllplllppllplplplplpllllpllpppllplllpllpllllllllpppplllllllTSlllllllllllllllllllllpllllpllllppllplplppllppppllllpllpllpllplllplllllllplplllllpllTSlppllpppppllllllppppllllllpppplllllllpplllllpllppppppppppppppppppppppppplllllppppplTSllllllllllpppllllpppppllplllllllllppllllllppppppllllllpllpllplllllllpllplllllllllllTSlllllllllllppllllllpllpllllllllllllplllpllllllplpllplllllllppllpllllllllppppllplllpTSlpppppppppllllllppppppllpppppplllllllllllpllpppppppppppppppppppppppplllllllppppppplTSlllllllllllppllllllllppllllllpllpllpllplllplllllllllllplllllplpllllllllllpplllllplpTSlllllllpplllpllllplllllllllllplppllplpllllplllllpllpppppllllpllllllllppllpplllllpllTSlppllllpppllppllpppppplpplpppppppplplppllppppppppppppppppppppppppppllpppllllpppppplTSllllllllllpplllppllllppllplpllllpllllllllplllllplllllllllpllllllllllllllplpllllllllTSlllllllllllllllllllllllllllpllllpllpllllllpllllllllpppppllppplllllllllllppllplpppllTSlppllpppppllllppppllppppppppppllpppppllppppppppppppppppppppppppppppppppplllpllpppplTSllllllllllllllllpllllpllppllllllllllllllpllplllllllpllppppllllpplllllllllplllllllllTSlpplllllllpllplllllllllllllllllllllplplllppllllppllpllppppppplplllpllpppllppplpppllTSlppllllpppllplllllllllpppppplllllllllplpllllpllppppppppllppppppppppppppppllpllpppllTSllllllllllllppllpplllplllppllllpllllllllllplpllplllllllllplplllllplllllllllllllllllTSllllllllllplllllllllppppppplllllplllllppllplllpllllplplllpllllllllllllllllllplllllpTSlllllllpplllpllllllllllllllllplppllpplllllpllllpllplllppllllpllllllllllllpllplllplpTSllllllllllllpllppllllpllpplpllllpllpllllpllllllllllppppllplplllpllllllllpllllllplllTSllllllllllplpllpplllllllllllllllllllllpppllllllllllplllllllllllpplllllllpplppllllllTSllllllllllpplplplplpllllplllllllllllllplpllllpllllpllllplllplllplplllppllpllplllpllTSlllllllppllplllllllppllllllllllplplllllllllllplllllllplpllllllpllllllllllpppplllllpTSlppllllppppplpplppppppppllpppppplllllpllppllpppppllpppppppppppppppppppppppppllpppplTSlllllllllllpplllllllppllllpllllllplplllplpppplllllpllllplllpllllllpppllplplllllllllTSlppllllpppllllllllllppllppllpplplpllpplllllllllppppppppppppllppppllppppppllpllpppplTSllllllllllllpllllllppllllllllllplplllplllllllpplllllplllpllllllllllllppllllpplllpllTSlllllllllllllpllpplllplllllllllllllpllllplplplppllplllllpllpllllppllllllplpllplllllTSlllllllllllpplpllllllllllllllllplllllllplllllllllllplllllllppllppllpllpllppllllllllTSlllllllllllpllllllllpllpplpplllpllpllllpllplllpllllllplplllllllllllllllllllllpllllpTSlllllllllllplpppplllllpplllplllllpppllpllpplllppllllllpllllllllllllllllllllllllllllTSlllllllllllplllllpppplllplpllppppllppllpllplplpllllllpllllllllpllllllllllllpllllplpTSlppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppTSlllllllllllllpplllllllpllpllllllllllppllllllllpllpllllllllpppllplllllllllpplllllpllTSlpppppppppppppllpppplpplplplpplllpllllllpllpplplpppppppppppppllllppllpplllllllpppplTSlppppppppllllpppllpppppllllppplllpplllllplllllplpllppppppppppllllppppllplllppppppplTSllllllllllpllllllllpplllllplllllllllllllpplpplpplllllllllllpplplpllllllllpplllllplpTSlllllllllllplpppllllpplpplpppllllplllllpppllllpllplpppllpllllllpplllllllllplllllpllTOobjecta__prepare__aJapaneseContextAnalysisa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.jpcntxa__module__a__qualname__lldlluJapaneseContextAnalysis.__init__uJapaneseContextAnalysis.resetafeeduJapaneseContextAnalysis.feedagot_enough_datauJapaneseContextAnalysis.got_enough_dataaget_confidenceuJapaneseContextAnalysis.get_confidenceuJapaneseContextAnalysis.get_ordera__orig_bases__uSJISContextAnalysis.__init__apropertyacharset_nameuSJISContextAnalysis.charset_nameuSJISContextAnalysis.get_orderaEUCJPContextAnalysisuEUCJPContextAnalysis.get_orderuchardet\jpcntx.pyu<module chardet.jpcntx>Ta__class__TaselfTaselfa__class__Taselfabyte_stranum_byteswiaorderachar_lenTaselfabyte_strafirst_charachar_lenasecond_charTaselfabyte_stru.chardet.langbulgarianmodelAa__doc__a__file__a__spec__aoriginahas_locationa__cached__uchardet.sbcharsetproberTaSingleByteCharSetModellaSingleByteCharSetModelD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>D?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llpppppppppppppppppppppppppppppplppppppllpppppppppllpllpplppllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpplplllpplllllllppplppllppppppppppppppppppppppppppppppppppppppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llpplllplllpplllllppplllpppllplplppplplllplllllppplllppplpppllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplplpllpllllpplplplplllppllllpllpplllpllpllplllllllllpppllpllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpllpllllplllppppplplpllllpplpllllpllllllllllpllppllllllpllpplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplllpllllpllpllpllpllplppplplpllpllllllllllpllllpllpppplllpplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplllllppllllppplplllppllplplppllllplplllplplllllpllppppplllllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplpllpppppplpllpllpplllllpplpllllllllplllppplllplpppllpppllplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplllllplpllllplplpppllppppppppllpplllpllppppllplpllppppplpplppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpllppppllpllppllpppppllplppllllllllplpllpllpplllpllpppppllllppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llpppppllllplppplplppllppppplpllplllpllllplpplllppllppppplpppppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lppppplplppplpppplplplpppllpppllppppllpppppppllppppppppppllppppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llllpppplllllpllpplllpppplpplplllllplllllpllllllllllllpllllllppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llllpllllllllpllllllppllpplplppllllpllpllppppllpppllppppplplllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplllllplllllpppllpllpplllpplllllpppllpllplllllllpllppppplllllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplplplplpllllppllplplpppppllppllpllllpllppppllpplplpppllpplplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplpllllpppplppppllpplppllpplplplpplppplllplpllppllpppllllppllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llllpppplllllppplppplllllppllplllpplllpllllllllllpllpllplllpplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llllplpplllllllplplppppppplplppllpppllpllppplllpllllppppplllplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llllpllplpllllpplpllplplpppplppllllpllplllllllpllllplpplpllpplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplplllllpllllpplllplpplllpplllllplpllplllplpllllpllppppplllllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llpppppllppllpppllpplllpppplppplpllpllpllllplplpllpllllllllppppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpllplpllplllpllpllllplppppppppllpppllpllpllpllllpllppppplpplppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplllppplpllplppppplpppllppppppllllpllpllplplllllpllpppppllplppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpllllpllpllllplpplllllppppppppllllplllllppppllllpllppppplllplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplllpplllpllpllplpppllppppppppllppplllllpllpllllpllppppplplpppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpllppplllplllplplpppllppppppppllllpllplllpppllplpllppllplplpppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpllpppllpllppppllpppppppppppppllpppllpllppppllllpllpppppllpllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpplpllllplplllpllllplplpppplpppppppppppppllllpllppppppppppppppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplpllplllpplplllplplppppppppppplplllllpllpppllppplpllpppppppppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpplppplpppplppplpplllpppppppppplppplplpppplplllpplpllpllppllppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpplpppllppppppppppppppppppppppllppppppppppppllpppppppppplplllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llppppppppppppppppppppppppppppplllllllpllllllpllplllllpplpllllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplllpppppppppppppppppllppppppplllllpllpllpllpllpplllpllllllllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lppppppppppppppppppppppppppppppllllllllllllllplllpllplllpllpplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llpppppppppppppppppppppppppppppllllplpllllpppppppllllpplpllpllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lllppppppppppppppppppppppppppppllpppllpllpppppppppllppppplllllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpppppppppppppppppppppppppppppplplllplpllllplllpppllplplpllpllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llppppppppppppppppppppppppppppplppppplplllpppppppppllppplllpllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplppllpppppllpppllpppllppppppplppppppppppppppppppllppppplllllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lppppppppppppppppppppppppppppppllpllpllllllplllllpllllplpplpllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llppllppppllpppppppppppppppppppllllllllllllllpllppplplllllllllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lplppppppppppppppppllpppppppppplpppllplllllllplplpplppppllllplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llllppppppppppppppppppppppppppplpplpllpllllllpplplllllppllllllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llppppppppppppppppllpppppppppppllplpplpllllllplllpppllpllllpllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lllppppppppppppppppppppppppppppllppppppppppppllpppllppppplllllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llpppppppppppppppppppppppppppppllllplllllllllllllpllplplplllplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llppppppppppppppppppppppppppppplppppppllllpppplllppllpllllllllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llpppppppppppppppppppppppppppppllllpllllllppppppllplpppplllpllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llppppppppppppppppppppppppppppplpplpllplllpllpllpppllpplpllpllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpppppppppppppppppppppppppppppplppppllplplpppllpppllpplpllllplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llpppppppppppppppppppppppppppppllpplllplllplplllpppllllpllplplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lppppppppppppppppppppppppppppppllllllllllllplpllllllllllplllplpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llpppppppppppppppppppppppppppppllllplllllllppllpppllppppplllllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llpppppppppppppppppppppppppppppllllllllllllplpllllllpppllllllppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llppppppppppppppppppppppppppppplllllllplllllllpllllllpllpllplppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>llpppppppppppppppppppppppppppppllllpllpllllpllllllllpllppllpllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lppppppppppppppppppppppppppppppllpppllplllpppppppplplpllllpllppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lpppppppppppppppppppppppppppppppppppllpppllplllppllppllppppllppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lppppppppppppppppppppppppppppppllllpllplplppplplpplpplllpplpllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lllppppppppppppppppppppppppppppplpllllllllpppllplplplllpllppllpD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppD?l?l-ll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=l<l8llllllllllll
llll
llllllllllll4l*ll:l>lppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppaBULGARIAN_LANG_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllpppppppppllpllppppppppppppppppplppppppppppppppplppppppppplpppppplMlZlcldlHlmlklelOllQlflLl^lRlnllll[lJlwlTl`lollslppppplAlElFlBl?lDlplgl\llhl_lVlWlGltllUl]lalqllllllpppplllllllllllllllllllllllllllllllllQllllllilllllll-llll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=llCll<l8llllllllllll
llll
llllllllllllKl4ll*ll>llll:llblllllll[llaISO_8859_5_BULGARIAN_CHAR_TO_ORDERuISO-8859-5aBulgarianf! _B?uАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЬЮЯабвгдежзийклмнопрстуфхцчшщъьюяTacharset_namealanguageachar_to_order_mapalanguage_modelatypical_positive_ratioakeep_ascii_lettersaalphabetaISO_8859_5_BULGARIAN_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllpppppppppllpllppppppppppppppppplppppppppppppppplppppppppplpppppplMlZlcldlHlmlklelOllQlflLl^lRlnllll[lJlwlTl`lollslppppplAlElFlBl?lDlplgl\llhl_lVlWlGltllUl]lalqllllllpppplllllllllxlllllllllNl@lSlylblulilllllllllXlllllzlYljllllll-lllIlPlvlrllllll>l:lllllll l#l+l%l,l7l/l(l;l!l.l&l$l)ll'll"l3l0l1l5l2l6l9l=llCll<l8llllllllllll
llll
llllllllllllKl4ll*laWINDOWS_1251_BULGARIAN_CHAR_TO_ORDERuwindows-1251aWINDOWS_1251_BULGARIAN_MODELuchardet\langbulgarianmodel.pyu<module chardet.langbulgarianmodel>u.chardet.langgreekmodel
<a__doc__a__file__a__spec__aoriginahas_locationa__cached__uchardet.sbcharsetproberTaSingleByteCharSetModellaSingleByteCharSetModelD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*llllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllllllppppppppppppppppppppppllppppppppppppppppppppppppppppppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*llllllpllppppppppppppppppppppppppppppppppppppppppllppppppllppppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*llllllplpppppppppppppppppppppppppllppppppppppppppppllppppppppppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppppppppplllpppppllppplllppppppppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppppppppppppppppppppppppppppplplppppplplllllplllllllppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppppppppppppppppplpplpllplllpllppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppplpllplppppplllppppplpppppppllppplllllllllplpllllpppllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppllpplplllllppllppppppplpplllppllppllllppllllppppppppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppplllllllllplppllllplllllpplplppllppllllllppllppppppppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppplplllppppllppppppllplplpppllllllppppllllppllpplllpD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppplllplpplpppplllppppllpllpllpllllplllpllllllllppplpppllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppppllpplllllplplpppllppppppppppppppppllllppppppppllppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppllpplplppppppllllpllpppllpllppllppppppppppppppllppppllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppllplpplplpppllllpplllllpppllpllpppppppllllpplllpppllppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppllpllplpppllplllllllplllppllppllppllllppllllppllppplppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppllpplplllllppllpllllplppllplppllppllppppllppppllppplplD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppplplplplllpllplplpppppplpppplppllllllpppplllpppllpppllpD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*llllllpppppllpplplllppppllppllpplllllplppllppppppppllpppppppplllpD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppplplppppppllppppppppllpllppllppppppppppppppppppppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppllppllppppplplpppppplpppppppllpppllppplplplplplplppllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppllppllplllllpllllllpllplplllppllllllllllllllpplllllpllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppplllplplllpplllllllpllplppllpppppppppppppllppppllppllllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppllpllpllplllpllplppllplplppplplllllplppplplpplpllllllpD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllllppppllpplpllplppplllllplplppllllppllllllpllpllllllllppplplD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppppllllplpllplplllplpllppppppppppppppllpppllpppppppppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppllpppllllppppllpppppppppppllppllppllppppllppplplpppplpD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppllpplplllppllllllppplpllppllppllppppppppllllpllpppllppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppppllpppppllllpplpplppppppppppppppppppppppplpplppllppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppllppppppppppppppppppppppppppppplppppllllppppllppppllppllppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppppppppppppppppppppppppppppllllllllllppppppppppllppllppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppllpppppppppppppppppppppppppppppplplpplllllplllpppplllllpppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppppppplllpppppllppppppppppllllllppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppllppppppppppppppppppppppppplllllppllllppppppllppppppplllplD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppplllllllpllllllllppllllpppppplpppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppplppppllllllllpppppplllpplllllpllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppppppppppppppppppppppppllppplppllllllppppllllppllpplpppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppllppppppppppppppppppppppppllplllpplpllppppppllppppppplllllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppplpppplppllllllppppllppppllppllllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppllpppppppppppppppppppppppppppppplllpplllpppllllppplllllpppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppppppppppppppppppppppppllplllppllllllllllllllppllpplpppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllllllppppppllpppppppppppppppplppllppppllpllpppppppppplllllpllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppplpppplplpllllpppllllllplplpllpppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppplpppplllllllllllpllplpplpllplpppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppppppllpppppppppppppppplppppplpllllllplpllplppplllllplpD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppllpppppppppppppppppppppppplpppplplpllpplllllllpplpplpplpppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppppppppppppppppppppppppllplllppllllllppppllppplllppllllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppllpppppppppppppppppppppppppllpllpppllpppppplplppppppplplllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppplpppplppllllllllllllllllpllllpllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppplppppllllllpppllplllplllpppllpppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppllppppppppppppppppppppppppppppppppppppppppppppppppppppppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppplplppplllllppplllplplplppppllpplD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllllpppppppppppppppppppppppppplpppplppllllllpllplllllppllplpppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppplpllllllppplllppppppppppllllppllD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppplpppplpplllpllllllllllplpllplplpD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppplllpplpplllplllpllllllplpllllpppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppplpllplppllllllppppllppplllppllppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppppppppppppppppppppppppllllpllllpplllllplplppppllplppppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllppppppppppppppppppppppppppppppppplppllppplppplllpppplllllpppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppppppplpplllllllpppllpppppllppplppD=l<l7l:l$l=l.l6ll3l+l)l"l(l4l/l,l5l&l1l;l'l#l0l%l!l-l8l2l9llllllllll l
lllll
llllllllllll*lllllpppppppppppppppppppppppppppppppppllllpllplllpllllpppllplppppaGREEK_LANG_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllpppppppppllpllppppppppppppppppplppppppppppppppplppppppppplpppppplRldlhl^lbleltlflollul\lXlqlUlOlvlilSlClrlwl_lclmllppppplHlFlPlQl<l`l]lYlDlxlalMlVlEl7lNlslAlBl:lLljlglWlklplpppplppppppppppppppppppppppppppppppplll=lppppppppplJlpppppllpl$l.lGlIll6llll{lnll3l+l)l"l[l(l4l/l,l5l&l1l;l'l#l0ll%l!l-l8l2lTl9lxlylllll|llllll l
lllll
llllllllllll*ll@lKllllaWINDOWS_1253_GREEK_CHAR_TO_ORDERuwindows-1253aGreekfs?uΆΈΉΊΌΎΏΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩάέήίαβγδεζηθικλμνξοπρςστυφχψωόύώTacharset_namealanguageachar_to_order_mapalanguage_modelatypical_positive_ratioakeep_ascii_lettersaalphabetaWINDOWS_1253_GREEK_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllpppppppppllpllppppppppppppppppplppppppppppppppplppppppppplpppppplRldlhl^lbleltlflollul\lXlqlUlOlvlilSlClrlwl_lclmllppppplHlFlPlQl<l`l]lYlDlxlalMlVlEl7lNlslAlBl:lLljlglWlklplpppplppppppppppppppppppppppppppppppplllZlppppppppplJlppppplll=l$l.lGlIll6llll{lnll3l+l)l"l[l(l4l/l,l5l&l1l;l'l#l0ll%l!l-l8l2lTl9lxlylllll|llllll l
lllll
llllllllllll*ll@lKllllaISO_8859_7_GREEK_CHAR_TO_ORDERuISO-8859-7aISO_8859_7_GREEK_MODELuchardet\langgreekmodel.pyu<module chardet.langgreekmodel>u.chardet.langhebrewmodel:a__doc__a__file__a__spec__aoriginahas_locationa__cached__uchardet.sbcharsetproberTaSingleByteCharSetModellaSingleByteCharSetModelD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(D?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(llppplpllllllpppppppppppppppppppppllppppppppllpppppppllllplllllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpllppllpplllpppppppppppppppppllppllppppppppllllpppppppppppplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lllppppllplllpppppppppppppppppppppllppppppppppppppppppppplpllllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpllplpllpplplppppppppppppppppppppppppppppppppppppllpppppllllllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lllplllpllpllllpppppppppppppppppppppppppppppppppppppppppppllpppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpplpplpllpplppppppppppppppppppppppppppppppppppppppppppppplllllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppplllllpppppppppppppppppppppllpppppppppppppppppppppplllllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppllllpplppppppppppppppppppppppppppppppppppppppppppppplllllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(llpllppllppplppppppppppppppppppppppppppppppppppppppppppppplllllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lplllppppplllppppppppppppppppppppppppppppppppppppppppppppplllllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpllplllppppplpppppppppppppppppppppppppppppppppppppppppppplllllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppplllllppppppppppppppppppppppppppppppppppppppppppppppllpppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lllllllpllplllppppppppppppppppllppppppplllpllllppllllpppplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppllpppppppppppppppppppllpplplppllplllppplppppplplppppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppppppppppppppppppppllpppllpppplplllpppppppppppppppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppppppppppppppppppppppppppppppplplpppppppplplppppppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppppppppppppllpllppplppppppppppppllllppllllpppplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppllpppppppppppplplppllplllllllllpppppplplppppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppppppppppppppppllllppppppplllllllplllllpllpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppllpllllllpllpllpplpllplllpppppplllllpppplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppppppplpplpppplpllplpllllllpllplllpppplpplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppppppplpplpppplpllplplllpllppppplppllplpplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppllpppllllpppplppppllpplllpppppppppllpppplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppppppppppppplllpllplpppllppllpppppppllllllpppplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppppppppppllppplpllplppppplpppppppllllpppplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppppppppppppppppppppplppppppllllllpppppllllpppplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppppppplllllplpllllllplllllpplppplllllllpppplpplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppllplpppplplpppppppllppllpppppppllpppppppppppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppllplllllllppplllllllllllpplplllllllppllllpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppplpplpplpppppppllppllppppppppppppppppllpllpppplpplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpllpppppppplplppllplppppplllplpppppppppllpllppppllllppppllplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppplllppllplpplpllllpllllppplpllplpppplllplpplpplllllpD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppllplppppplllplpppppllpllplpplllllllllppplpplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpllppppppppllllplplppplllpllplpppppppppllpppppppllllpppplpllllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppplllpplpllpllplpllllplppppppppppppppppppppppppppllplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppllpplllplppplpllpllpplplpllllplllplllplllplllpppplD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppplplpplllppppppllppllllppplpllllppllpllpplppppllllllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppllpppllpllpllppplplppllpllllllllpplllllllpllllpppplD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppplpplpllplpllpplllplppppppppppppppppppppppppppllplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppllpppppllpllpllppllpllpppllllpppppppppllppppplD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppllplpppplpllplpllppppllppppppppllpllplpplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppplplppllplppppplllplppppppppppppppllppllllppppllplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppllpppppppppppppppplppllpppllllpppllllllpppppplpplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppllppllplppppplllplpppppppppllpppppppllllpppplpppplD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppllllpppppppppppppplpppppllppllpppllpppplplpppplplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppllplpppplpllplpppppppppllpppppppllllpppplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppplplppllplllplplplpllppppllppllpllllllpplllplllpplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppppllplplppppppllppllpppppllplplppllplllplpppplpplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppppppppppppppppppppllpppllllpplplllplllplplpplppppplD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppllppllpllllllpllplllllpllppllplplppplpplpppplppllpD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppllpppppppppppppppllppppppppppllpppllpppppllllpppplD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppllppllplpllplpllplpllpplllllpllllllllllplplllpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppplplppllplpllpplllplpllppllpplplllllppllllllppllllllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppllllpllllpppppllpplppppppppppppppppppllpppppplpplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppppllpppllplppppppllllpppppllppppppplllllllllppplpplllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppplllplllplpppplpllplppllpllllllppppplllllllppplplpplD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppllpppppppppppppppppppppplpppppllllllplllplpllllllpplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lllppplpllpllppppppppppppppppppppppllpppppppllppppppppppllpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppplpppppppppppppppppllppppppppllpllllppllllpppplpppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lpppppppppllpppppppppppppppppplpplppppplllplllppppppllllpppppppD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppllD?l2l<l=l*l5l8l6l1l3l+l,l?l"l7l0l'l9ll;l)l!l%l$lll#l>ll&l-lllllllllllllllllll
lllllll
ll l4l/l.l:l(lppppllllpplppppppppppppppppppllpplpplplllplllllppllpplpplpplllaHEBREW_LANG_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllpppppppppllpllppppppppppppppppplppppppppppppppplppppppppplpppppplEl[lOlPl\lYlalZlDlolplRlIl_lUlNlylVlGlClflklTlrlglslpppppl2lJl<l=l*lLlFl@l5lil]l8lAl6l1lBlnl3l+l,l?lQlMlblKlllppppl|lllll(l:lllllllllllSl4l/l.lHl l^llqllmlllll"ltllvldlllulwlhl}lllWlclljlzl{ll7lllelllxll0l'l9lll;l)lXl!l%l$lll#ll>lll~lll&l-llllllllllllllllllllllllllllllll
lllllll
lllll`laWINDOWS_1255_HEBREW_CHAR_TO_ORDERuwindows-1255aHebrewfC|?uאבגדהוזחטיךכלםמןנסעףפץצקרשתװױײTacharset_namealanguageachar_to_order_mapalanguage_modelatypical_positive_ratioakeep_ascii_lettersaalphabetaWINDOWS_1255_HEBREW_MODELuchardet\langhebrewmodel.pyu<module chardet.langhebrewmodel>u.chardet.langrussianmodel]U+a__doc__a__file__a__spec__aoriginahas_locationa__cached__uchardet.sbcharsetproberTaSingleByteCharSetModellaSingleByteCharSetModelD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllpppppppppppllppppppppppplpplpplpppllplllllpllppppppllllpppllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllllplllpllplppplllpllpppppllpplllpplllpllpllpllllpllppppppllllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllllllplplllppppppppplppplllplplllppllllplllppllpllpllplllllllllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllplplplpllplppppplpllpppppppppplllllplpllpllpllllpllppppppplpplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllllpllllllpllpllplllplplplplplllllplllllpllpllllpllllpppplpllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppllplpllplpppplpppllplppplpllllplllpllplplplllpppllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllpplpllplppplplpppllppppppppppllllplllllppllllllpllpppppppppllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllllppplpllplppplllpllppppplplpplllllplpllplplplllpllppppppllpplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppllppppppppppllllppplllpplpplppppllllllpplplpplpllplplpppllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppllpppplplllpplplplplppppppppppppllpppppppllppppppppppppppppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllllplllplplllllpppplpllpppppppllllpllpllpllllllppplllpppplplllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllplllpllllppllpllpplppllplpllpllplllllllplllllpppllllpppplplplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpplpllplllppppppppppplppplllllllpllllpllplpllllplllppppppllllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllplppllllllplpllppppppplplppllllpppllpllppppllllpllllpppplllppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllppllpppppllllpllppppllpplppplplllpllplllpllllppplplllpllpppppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllpppllpllplllppllpplppppplplplllpppllpllplllllllplllppllplllllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllpppllllllppplllpppllpppllppppllllplllllppppllllpllpppppplllplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppplplllpppppppllllpppllpppplllllllplllppppppllllppplplppllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllllpllplllppplllppplppllplppppllllpllplllplplllllllppppllllllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppplplppppppppplplllpplppllllpllllpplplpllllppllppllplpplllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllplppllpllpllpllllpllppppppppppllpppllpllpllplllllllppppppplllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllllppppllplppplpppppppppppppppllllpllpllplllllllpllppppppplplpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllpppllpllllppllpppllpppppllpppllllpllpllpppppppppllppppppllpllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllpppllpllllpllllplplppppppllppllpppllpllpllplllllllpppppppllppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllpppllplllpllplpppllppppppppppllllpllplllllplplllplllpllpppllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllpppllpllpppppppppppppppppllppllpppllpllppppllpppllpppppppppppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllplplllpplppppllppplplplllpppppppppppppppppppppppppppppppppppppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllpllplplllllpplpllpllppllppplplpppppppppppppppppppppppppppppppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpllllppplppppllppplppppppppppplpllllllplppppllllllpplpllppppppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllplpllpppppppllpllllpppllllppppplllplllppllllllpplppllpppppppppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllplplllpllllpllpplplpllllllpplpllppplplllppplllpplppllplplpppppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppllpppllppppppppppppppppllppppppppppppllppppllpppplppllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppppllpppppppppppppppppppllplllllllllllpllplllllpllllllllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllpplpllpllpllppppppllppllplplplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppppppppppppppppppppppppplllllpllllllllplllpllpplllplppplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllllpllplllpllpllpppllllplllplllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllppppppllppppppppplplpppplpplllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppppppppppppppppppppppppplllllplllllplllllplllllllpplllppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppppppppppppppppppppppppplppppplplllpppplllpllpllllllllplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllpppppppppppllpppppppppppppppplpppppppppppppppppplplpppplppllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppppppppppppppppppppppppplppllllllllpplllllpllllllllpplplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllllpllpllllllpllpppllplllplppppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllplllpllllpllpllllllpllllllpllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllpplllpllllllplpllllppplplllpllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllplpplpllllllplllpplplplpllpllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllppppppppppppppppplplllpplppllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppppppppppppppppppppppppplllppllpllllllplllpllllplpllllplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppppppppppppppppppppppppplllppppllllllpplplpplllpllllplplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppllpppppppppppppppppppppplllllplplllpppppppppllllllllpllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllllpllplllpllpllplllpppppplplplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllpppppplplpppllppplllllpplpplllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppppppppppppppppppppppppplllllllplllllplllpppplplplpllllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllllplllllllplplllpplppplllllpplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllllplllllllpplllllllpllllplllllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllplpllllllllllllllplpllllppllppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppppppppppppppppppppppppplllllllplllpllplplllllppplppllplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppllllpllpllppllllllpllpppppppllppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppppppppppppppppppppppppppppppllpppppppppppppppppppppppllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppplplpllpplppppllppplllllpllpppplD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppppppppppppppppppppppplpppllllllllplplllllllplllppllpD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllppppppppppplplplplpllpppppppppplppllllllppppllpplllllpllppplppD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppppppppppppppppppppppppplllllllplplpppllplplllpppllpplllD?l%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?l>l=l/l;l+lll
ll
llllllllllllllll'llllll6llllllpppppppppppppppppppppppppppppppllllppplplpppllplplpllppllppplpaRUSSIAN_LANG_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllpppppppppllpllppppppppppppppppplppppppppppppppplppppppppplppppppllllllllllllJllKlllllllllllllppppplGllBllAllLll@lllMlHllElCllNlIlllOlllllppppl%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?lFl>l=l/l;l+lll
ll
llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll'llllll6lllllllDllllllllllllllaIBM866_RUSSIAN_CHAR_TO_ORDERaIBM866aRussianflP@?uЁАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюяёTacharset_namealanguageachar_to_order_mapalanguage_modelatypical_positive_ratioakeep_ascii_lettersaalphabetaIBM866_RUSSIAN_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllpppppppppllpllppppppppppppppppplppppppppppppppplppppppppplppppppllllllllllllJllKlllllllllllllppppplGllBllAllLll@lllMlHllElCllNlIlllOlllllpppplllllllllllllllllllllllllllllllllllllllllllllllllllllllllDllllllll%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?lFl>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllaWINDOWS_1251_RUSSIAN_CHAR_TO_ORDERuwindows-1251aWINDOWS_1251_RUSSIAN_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllpppppppppllpllppppppppppppppppplppppppppppppppplppppppppplppppppllllllllllllJllKlllllllllllllppppplGllBllAllLll@lllMlHllElCllNlIlllOlllllpppplllllDlllllllllllllllllllllllll;l6lFll%ll,ll:l
l)ll0l'l5ll.lllllllll7ll*llllll<lllllllll$llllllllll1ll&llll"llllll#lll+ll-ll ll(ll4ll8l
l!ll=llll>ll3ll9ll/ll?ll2lllaIBM855_RUSSIAN_CHAR_TO_ORDERaIBM855aIBM855_RUSSIAN_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllpppppppppllpllppppppppppppppppplppppppppppppppplppppppppplppppppllllllllllllJllKlllllllllllllppppplGllBllAllLll@lllMlHllElCllNlIlllOlllllppppllllllllllllllllllllllllllllllllllllDlllllllllllllllllllllllllllllllll
ll'lllllllllllllllll
llllllll6l;l%l,l:l)l0l5l.l7l*l<l$l1l&ll"l#l+l-l l(l4l8l!l=l>l3l9l/l?l2lFaKOI8_R_RUSSIAN_CHAR_TO_ORDERuKOI8-RaKOI8_R_RUSSIAN_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllpppppppppllpllppppppppppppppppplppppppppppppppplppppppppplppppppllllllllllllJllKlllllllllllllppppplGllBllAllLll@lllMlHllElCllNlIlllOlllllppppl%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?lFl>l=l/l;l+lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllDllll
ll
llllllllllllllll'llllll6lllllaMACCYRILLIC_RUSSIAN_CHAR_TO_ORDERaMacCyrillicaMACCYRILLIC_RUSSIAN_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllpppppppppllpllppppppppppppppppplppppppppppppppplppppppppplppppppllllllllllllJllKlllllllllllllppppplGllBllAllLll@lllMlHllElCllNlIlllOlllllpppplllllllllllllllllllllllllllllllllllllllllllllllll%l,l!l.l)l0l8l3l*l<l$l1l&ll"l#l-l l(l4l5l7l:l2l9l?lFl>l=l/l;l+lll
ll
llllllllllllllll'llllll6lllllllDllllllllllllllaISO_8859_5_RUSSIAN_CHAR_TO_ORDERuISO-8859-5aISO_8859_5_RUSSIAN_MODELuchardet\langrussianmodel.pyu<module chardet.langrussianmodel>u.chardet.langthaimodel?=a__doc__a__file__a__spec__aoriginahas_locationa__cached__uchardet.sbcharsetproberTaSingleByteCharSetModellaSingleByteCharSetModelD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<D?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lppppllpllllpplpllllllllpplllllllplllpllllppppllpllplplllppllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lllpplppppppppllllllllplppppplllpllplpllplplplllplpppllplllllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lplplppppppppplpplllllllpppplplllplpllllllllplllplllllppllpplppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllpllllpppppplplllllpplllllllllppllpllplllllllplllllpllllppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllllpppppppppllplllllppllplpllpllplllllppplllllllpllplplplpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lppppppppppppppppppppllppllplplplllppppplppllplpllpppppppppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llpllpppllpppppppplllllpppppllplpllpppllplllllllpllpppppllplpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpppppppppppppppppppllppppppppppllppllllplpllllllpplpppplplllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lplpppllllppppppppllplplppppllppllpplllllllllplppplplllllllppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llpppppppppppppppppppppppppppppppppppllppppplllppppppppppppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lppppppppppppppppppppppppppppppppppppppppppplllppppppppppppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llpppppppppppppppppppllpppppllppppllppllppllpppppppppppppppllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpppppppppppppppppppppppppppppppppppppppppppllpppppppppppppllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpppppppppppppppppppllpppllpppppppppppppppppllpppppppppppppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llppppppppppllpppppppppppppllpllpllplplplllllllppplpllplpppllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpplllllpppppppllllllppplllllllllplplpllpllplpllllppllpppllllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llplllllppppppplplllllpplllllplllllpllllllpllllplllpppplllpllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllllpppppppppplllllllppllppplllplpllllplllllllpllpllplplllpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpllplppppppppplllllplpllllpllplplllplllllpplllllllllllpllpllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lppllpppppppppppppppllppppppppllpppppppppplllplpllpppppppppllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lllllllplppllpplpllplppplllplppllllllpllllpppppppllllpplllpllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llplpppplppppppllllllplpllpppllllllplpplllplppllllppllplllplpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllllpllllllpplpppllllppplplllllllllllllllllllplllllllllllllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llpllpppppppppppppppllpppppplllpllppllpplplpllpllllpppppplllpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpppppppppppppppppppllppppppppllpppppppppllpplllppppppppplllpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpppplpppppppplppllllllllllpllllpplplpllllpllllllllpllpllllllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpppppllppppppppllllppppppllppllllppllllpllplpllplpllpppppllpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpllppppppppppppppllpppppllpppllppppppppplplllpppllppppppppllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lppppllplpppppllplllllpllllllllppplplpplllpllpllpplpppplpllllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllllllllppppplpllllplpllllllllllllllllllplllllplllplpplllllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llpllllllppllpllplpllplllllplllllllppplllppllpllpppplllllppplppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpppppppppppppppllllppppppppllpppppllppppppppppppppppppppppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllllllppppppplplllllpllpplpllllplplllllppllpllllllplllllpllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lllllllplppppplllppllllpllpllppllllplpplllpllllplllllpllllpllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllllppllppppppllllllppppppppllplllllppplllllllplllllplpppllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lppppppppllllpllllllppppppplplplppllpppplpllpllpppllpppppppllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llplllppppppppplpplpllllpppllllllllpplllllppppllppllllllpllllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llpllpppllppppplllppllllpllplllllllpppllllpllplplplppppplppllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllllllpppppppllllllplpllpplppllplllpllllplplllplllplplplplpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpppppppppppppppppppppppppppppppllpppppppppppppppppppppppppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllllllppppppplplllllllllllllpllplplpllplppppppppllllplpppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllplllllplllpppllllpllpllplplpllllllppppppppppppppppppplplpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lllpplllllpppplppllllpllpllplppllpllppllllppppppppllllpllppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllllpppppllpplppplllppllllpllllllpllllppppppppppllllplpppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllplllllppppplpllppplpllllllplllplpllplpppppppppllpplppllplppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llplllllppppppplllllllpllllpllllllllllllpppppppppplplpppllplpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llpllppppppppppllpppppppppppllppppppppppppppppppppppppppplplpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpppppllpppppppllppplllpppppllppppppppllppppppppppppppppplplpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lllplpppllpppllppllllpppllllllllllpllpplppppppppppllllllpllllppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llplllppllppppllplllllllpppplllllllppppppppppppppplpplppplplpppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lppllppllpppppllpllllpplllllpllllplllpplpppppppppppppppppppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llplllllpppppppllllllpllllpllppllllplpllpppppppppppppppppppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lllllppplpppppplllllllllplppplplllllllllpppppppppppppppppppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llllllllppppppplllpplllppppppllppppplplppppppppppppppppppppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lllppplplpppppplllllplllpplllllllllplllppppppppppppppppppppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lllpllppllpppppllllllplppppplllppllpllllppppppppppllppllpppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lllllllplppllppllllllllplplplplllllplllllllllpppppllllpllppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lllllllplpppppplllllllppllplllpllllllpllpplllppppplpllplpppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<llplllllpppppppllppllpplplpllllppplplplllppppppppplplpplpppppppD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppllpD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplplD?llllll4l"l3l/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=lll*l.llll?ll
ll$ll
l(ll l#lll)ll!l2l%lll&l8l;l<lppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplllaTHAI_LANG_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllpppppppppllpllppppppppppppppppplppppppppppppppplppppppppplpppppplljlkldllllel^lllllmlnlollllYl_lplqlllllpppppl@lHlIlrlJlsltlflQllulZlglNlRl`ll[lOlTlhlilalbl\llppppllllllXllllllllvlllllclUlSllllllllllllllllllKlll4l"l3lwl/l:l9l1l5l7l+lll,ll0llll'l>ll6l-llll=llll*l.lllLllBl?ll
ll$ll
l(ll l#lVllllllll)ll!ll2l%lllClMl&l]lllDl8l;lAlEl<lFlPlGlWllllllaTIS_620_THAI_CHAR_TO_ORDERuTIS-620aThaif@?uกขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛Tacharset_namealanguageachar_to_order_mapalanguage_modelatypical_positive_ratioakeep_ascii_lettersaalphabetaTIS_620_THAI_MODELuchardet\langthaimodel.pyu<module chardet.langthaimodel>u.chardet.langturkishmodel$>a__doc__a__file__a__spec__aoriginahas_locationa__cached__uchardet.sbcharsetproberTaSingleByteCharSetModellaSingleByteCharSetModelD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppppppppppppppppppllpllllpplllpplplppplppllpppppllpppppppD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpllpllpppllpppllllpllllllllllpppppplplppppllpppllpllpppllppplpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llppppllpppplllllplppllllllllllppplllppllllpllpppllpllpllllplllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llppppllpppllpppllpppppppllllllppppplllllpppllpppllllppllpplllplD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppllppppllllppppppppppllpllllllpllpplpplppplpllpppppppppppllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllppplllllpplppllpppplllplpplllplllpllllllpplpplplplllpplllplllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllllplllppllpllpppllllppllllllppplplllllllpllpllllllllllpplplplD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llllpplplplllllppllllllppllllllpplllllllpplpllppplllplplllllllllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llppppllpppllpppllpppppppllllllppppplplpppppllpppllllppllllppplpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppppppllpppppppppppllllpppllpppllppllppppppppppppppppppppD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppllppppppllppppllppppllllllppplllpllllpplllplllppppppplllllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llppplllplpppllllppppppllpllllpppllllpllpppplpppllpppllpplpplllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllppppppplllllppppllppppllllpllplppplplllllllppllpppppllppppllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llllpplpplpllpllplpllllllllllllllpllplllpplpllplplllplpppllplllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llppppllllplllppllpllplppllllllppppplplllpppllppplllllplllllllppD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpllpllplpllplpplllpllppllllllppppllllllpppllplllllllppplllplllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpllpllpppllpppllpppppllllplllppppllplllpppllpplllpllplllpplllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpllplpplpllplpllpplplllllllllpppplplllppplllppplllplpllllpplllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppplllllppppllppppllllllpllplplpllpllplppllppppppppllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppplplppllpllllpplplppllllllllpplplllllppllppplllplppppplplllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpplpllpppllllplplplplppllllllppppplplllpplllppllllplllllllplllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpllplllplllpllllpllllppllllllppplppllllpppllplllllllplplllplllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppppppppppppppppplpllpllpplllplplplplllppppppppppppllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llllllllplppplllllpllllplplllllppppplllllpppppllllllppplppllplllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppllplllllppppllppllllllpllllllpppllllpplllllpppppllppllllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllpplllpllppllpllplppllllplplplplllllllplppllllllplpllpllppllllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllppppppplllllppplplppppllllpllpllllppllllpllllllplppppppllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llllllllpppllllllpllllllllpllllppppplllllpppppllllplppplllllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppppllllppppllppppllllpllpppplppllllplllpllpppppllpllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppppllppppplplllppllllllllllllpllllplpllpllllpppppppppllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppppllppppppppppppllplllllplpppplplplllllllpppppppppppllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllppppppplllllllplllllppllllpllllllpppllppppllpllplpllllplllllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppplllllpllpllppplllplpllplllplllllllllllllpppppllpllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppppllllppppllllpllllllllpllplpplllppllplllllppplllllllllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppllppppppllppppllppppplllllplllllpllllpplplpllpppppllpllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllppllppppppllppppllppllllllllpppppllllllpplpllllppppppppllplllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllppppplllllllppppllppppllllpllllplpppllllpplllllpppppllpllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpllpllpplllllllllppppppllllllppllllplplllpllplllllllplllllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppppllllpppppppppplllllllpllllplllplpllplplpppppllpllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llppppllpplllllpppplllpplllllpllllplppplllppplllllllpppllpllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllppppllppllllppppllppplllllpllpplppppllppppllllllppppllpllplllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppplllllppppllpppllpllplpppplppplllppppllplpppppllpllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllppllpllllplllllpllppllpllllplppllllpllpppplplllllpppppplllllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppppllllppppppppppllplplppplplllllpllpllppppppppllppppllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llppppppppppppppppppllpppllppllpllpllpllppllllllppllppppppllppppD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppllpppllpllppppppppppplllllpplpllpllpllllpppllppppppppllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllppppppplllllppppllpplplllllllpplllpplllllllplllpppppllpllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llplllllpllppllpplpllplllplllpllplllllllplpplllpllllplllplppllllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppppppppppppppppppppppllppppppllpppppllppppppppppppppppppD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llplplplpplpppplplpplplllpllllpllllllplllllllllppppppllppllpplllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llplplllllppplplpllplplllplllllppllllpllpllllllppllpppppplplllllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llppppllpppllpppllpppllppllllllllppplpplppplllpppllpllppplllplplD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppllppllppppppppppppllppllppppppllllpppllpppllpppppppppplplD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppllppppppllppppllllppplllllllplllplllllllllpllppppppppllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpppppppppppppppppppppplllppllpppllplplppppllpppllpppppllpppllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllplpllplpllllpllpppplpllllllllpllllllplpllllppllllllpllllllpllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpllppppplplllppppllppplllpllllllpllllllpllllplpppppppllpllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllllplllllllllplplllllllllllllppplllllllllpllppplllplpllllllpplD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llplppllplpppllplllppplllllllllllpppllllplpllpllllppplplplplllllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(lllppppllpllllllpppllppllllllpppllpppppllppppplpllllpppllpllpllpD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llplpplllllppllplplplllllllllllllllllllllllplllpllpppllpplllllllD?ll%l/l'll4l$l-l5l<ll1ll.l*l0l,l#ll3l&l>l+l8lllllllllll
ll
llllllll l9l:lll?l6l2l7l;l!l=l"lll)ll(llpllplllppllllppppllplllllllllllpllpllplllpllppplllllplplllppppaTURKISH_LANG_MODELDlllllllllll
lll
lllllllllllllllllll l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppll%l/l'll4l$l-l5l<ll1ll.l*l0lEl,l#ll3l&l>lAl+l8lppppplllllllllll
ll
llll@lllll l9l:lllpppplllllllllllllllllllllllellllllllljlllllllldlllllllll^lPl]llilll?lllllll~l}l|lhlIlclOlUl{l6lzlbl\lylxl[lglwlDlvlulaltlsl2lZlrlqlplol7l)l(lVlYlFl;lNlGlRlXl!lMlBlTlSlnlKl=l`llClmlJlWlfl"l_lQlllLlHllllkaISO_8859_9_TURKISH_CHAR_TO_ORDERuISO-8859-9aTurkishfX4?uABCDEFGHIJKLMNOPRSTUVYZabcdefghijklmnoprstuvyzÂÇÎÖÛÜâçîöûüĞğİıŞşTacharset_namealanguageachar_to_order_mapalanguage_modelatypical_positive_ratioakeep_ascii_lettersaalphabetaISO_8859_9_TURKISH_MODELuchardet\langturkishmodel.pyu<module chardet.langturkishmodel>u.chardet.latin1proberMaLatin1Probera__init__a_last_char_classa_freq_counteraresetaOTHlaFREQ_CAT_NUMaCharSetProberafilter_with_english_lettersaLatin1_CharToClassaLatin1ClassModelaselfaCLASS_NUMaProbingStateaNOT_MEa_statelastatef{Gz?Zlf4@f\(\?a__doc__a__file__a__spec__aoriginahas_locationa__cached__acharsetproberTaCharSetProberaenumsTaProbingStatelaUDFlaASCaASSaACVlaACOlaASVlaASOlT@lpppppppplppppppllppppppllpplplpllppllllllpppppplllllppllllllplpa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.latin1probera__module__a__qualname__uLatin1Prober.__init__uLatin1Prober.resetapropertyuISO-8859-1acharset_nameuLatin1Prober.charset_nameualanguageuLatin1Prober.languageafeeduLatin1Prober.feedaget_confidenceuLatin1Prober.get_confidencea__orig_bases__uchardet\latin1prober.pyu<module chardet.latin1prober>Ta__class__Taselfa__class__TaselfTaselfabyte_strwcachar_classafreqTaselfatotalaconfidence.chardet.mbcharsetprober\EaMultiByteCharSetProbera__init__Talang_filteradistribution_analyzeracoding_smla_last_chararesetaselfanext_stateaMachineStateaERRORaloggeradebugu%s %s prober hit error at byte %sacharset_namealanguageaProbingStateaNOT_MEa_stateaITS_MEaFOUND_ITaSTARTaget_current_charlenlafeedqastateaDETECTINGagot_enough_dataaget_confidenceaSHORTCUT_THRESHOLDa__doc__a__file__a__spec__aoriginahas_locationa__cached__acharsetproberTaCharSetProberaCharSetProberaenumsTaProbingStateaMachineStatea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.mbcharsetprobera__module__u
    MultiByteCharSetProber
    a__qualname__TnuMultiByteCharSetProber.__init__uMultiByteCharSetProber.resetapropertyuMultiByteCharSetProber.charset_nameuMultiByteCharSetProber.languageuMultiByteCharSetProber.feeduMultiByteCharSetProber.get_confidencea__orig_bases__uchardet\mbcharsetprober.pyu<module chardet.mbcharsetprober>Ta__class__Taselfalang_filtera__class__TaselfTaselfabyte_strwiacoding_stateachar_lenTaselfa__class__u.chardet.mbcsgroupprober.8aMBCSGroupProbera__init__Talang_filteraUTF8ProberaSJISProberaEUCJPProberaGB2312ProberaEUCKRProberaCP949ProberaBig5ProberaEUCTWProberaprobersareseta__doc__a__file__a__spec__aoriginahas_locationa__cached__acharsetgroupproberTaCharSetGroupProberlaCharSetGroupProberlautf8proberTaUTF8ProberasjisproberTaSJISProberaeucjpproberTaEUCJPProberagb2312proberTaGB2312ProberaeuckrproberTaEUCKRProberacp949proberTaCP949Proberabig5proberTaBig5ProberaeuctwproberTaEUCTWProbera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.mbcsgroupprobera__module__a__qualname__TnuMBCSGroupProber.__init__a__orig_bases__uchardet\mbcsgroupprober.pyu<module chardet.mbcsgroupprober>Ta__class__Taselfalang_filtera__class__u.chardet.mbcssm
fa__doc__a__file__a__spec__aoriginahas_locationa__cached__aenumsTaMachineStatelaMachineStatelTlppppppppppppplplppppppppppllppppppppppppppppppppppppppppppppppplppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppllpppppppppppppppppppppppppppppppplppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplaBIG5_CLSaERRORaSTARTlaITS_MEaBIG5_STTllpllaBIG5_CHAR_LEN_TABLEaclass_tableaclass_factorlastate_tableachar_len_tableanameaBig5aBIG5_SM_MODELTlppppppppppppplplppppppppppllpppppppppppppppppppppppppppppppppppplpppppppppppppppplpppppppplppppplppppppppppppppppppppppppplppppllppppppppppppppppppppppppppppppplppppppppppplpplpppppppppppppppppppppllpllpppppppppppppppppppppppppppppppppppppppppppppppppppplaCP949_CLSllaCP949_STT
lllllplpllaCP949_CHAR_LEN_TABLEl
aCP949aCP949_SM_MODELTlppppppppppppplplppppppppppllppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplppppppppppppplllpppppppppppppppplpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplpppppppppppppppppppppppppppppplaEUCJP_CLSaEUCJP_STTlpplllaEUCJP_CHAR_LEN_TABLEuEUC-JPaEUCJP_SM_MODELTlppppppppppppplplppppppppppllppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplpppppppppppppppppppppppppppppppplppppppppppplpplppppppppppppppppppppppppllpppppppppppppppppppppppppppppppppppppppppppppppppppplaEUCKR_CLSaEUCKR_STTllllaEUCKR_CHAR_LEN_TABLEuEUC-KRaEUCKR_SM_MODELTlppppppppppppplplppppppppppllppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplpppppppppppppllpppppppppppppppppllppppplplppppppppppppppppppppppplllpppppppppppppppppppppppppppppppppppppppppppppppppppppppppplaEUCTW_CLSaEUCTW_STTlpllpplaEUCTW_CHAR_LEN_TABLElux-euc-twaEUCTW_SM_MODELTlppppppppppppplplppppppppppllppppppppppppppppppplppppppppplppppplpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplllppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplaGB2312_CLSaGB2312_STTllpppplaGB2312_CHAR_LEN_TABLEaGB2312aGB2312_SM_MODELTlppppppppppppplplppppppppppllppppppppppppppppppppppppppppppppppplppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppllpppplplpppppppppppppppppppppppplppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplpppppppppppplpplpppppppppppplppaSJIS_CLSaSJIS_STTllpllpaSJIS_CHAR_LEN_TABLEaShift_JISaSJIS_SM_MODELTlpppppppppllpllppppppppppppllpppppppppppplpppplpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppllaUCS2BE_CLSlaUCS2BE_STTlppllpaUCS2BE_CHAR_LEN_TABLEuUTF-16BEaUCS2BE_SM_MODELaUCS2LE_CLSaUCS2LE_STTlpppppaUCS2LE_CHAR_LEN_TABLEuUTF-16LEaUCS2LE_SM_MODELTlppppppppppppplplppppppppppllppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplppplppplppppppppppppppppppppppplppppppppppppppppppppppppppppppplplpppppppppppppppppppppppppppppllpppppppppppllpl
lppppppll
pplllpaUTF8_CLSlllaUTF8_STTlllpppllpplplplpaUTF8_CHAR_LEN_TABLEluUTF-8aUTF8_SM_MODELuchardet\mbcssm.pyu<module chardet.mbcssm>u.chardet.sbcharsetprober^aSingleByteCharSetProbera__init__a_modela_reverseda_name_probera_last_ordera_seq_countersa_total_seqsa_total_chara_freq_chararesetllaSequenceLikelihoodaget_num_categoriesacharset_namealanguageakeep_ascii_lettersafilter_international_wordsastateachar_to_order_mapalanguage_modelagetaCharacterCategoryaUNDEFINEDaCONTROLaselflaSAMPLE_SIZEaProbingStateaDETECTINGaSB_ENOUGH_REL_THRESHOLDaget_confidenceaPOSITIVE_SHORTCUT_THRESHOLDaloggeradebugu%s confidence = %s, we have a winneraFOUND_ITa_stateaNEGATIVE_SHORTCUT_THRESHOLDu%s confidence = %s, below negative shortcut threshhold %saNOT_MEf{Gz?f?aPOSITIVEatypical_positive_ratiofGz?a__doc__a__file__a__spec__aoriginahas_locationa__cached__acollectionsTanamedtupleanamedtupleacharsetproberTaCharSetProberaCharSetProberaenumsTaCharacterCategoryaProbingStateaSequenceLikelihoodaSingleByteCharSetModelLacharset_namealanguageachar_to_order_mapalanguage_modelatypical_positive_ratioakeep_ascii_lettersaalphabeta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.sbcharsetprobera__module__a__qualname__l@lfffffff?f?TFnuSingleByteCharSetProber.__init__uSingleByteCharSetProber.resetapropertyuSingleByteCharSetProber.charset_nameuSingleByteCharSetProber.languageafeeduSingleByteCharSetProber.feeduSingleByteCharSetProber.get_confidencea__orig_bases__uchardet\sbcharsetprober.pyu<module chardet.sbcharsetprober>Ta__class__Taselfamodelareversedaname_probera__class__TaselfTaselfabyte_strachar_to_order_mapalanguage_modelacharaorderalm_catacharset_nameaconfidenceTaselfwrTaselfa__class__u.chardet.sbcsgroupprober>aSBCSGroupProbera__init__aHebrewProberaSingleByteCharSetProberaWINDOWS_1255_HEBREW_MODELaset_model_probersaWINDOWS_1251_RUSSIAN_MODELaKOI8_R_RUSSIAN_MODELaISO_8859_5_RUSSIAN_MODELaMACCYRILLIC_RUSSIAN_MODELaIBM866_RUSSIAN_MODELaIBM855_RUSSIAN_MODELaISO_8859_7_GREEK_MODELaWINDOWS_1253_GREEK_MODELaISO_8859_5_BULGARIAN_MODELaWINDOWS_1251_BULGARIAN_MODELaTIS_620_THAI_MODELaISO_8859_9_TURKISH_MODELaprobersareseta__doc__a__file__a__spec__aoriginahas_locationa__cached__acharsetgroupproberTaCharSetGroupProberlaCharSetGroupProberlahebrewproberTaHebrewProberalangbulgarianmodelTaISO_8859_5_BULGARIAN_MODELaWINDOWS_1251_BULGARIAN_MODELalanggreekmodelTaISO_8859_7_GREEK_MODELaWINDOWS_1253_GREEK_MODELalanghebrewmodelTaWINDOWS_1255_HEBREW_MODELalangrussianmodelTaIBM855_RUSSIAN_MODELaIBM866_RUSSIAN_MODELaISO_8859_5_RUSSIAN_MODELaKOI8_R_RUSSIAN_MODELaMACCYRILLIC_RUSSIAN_MODELaWINDOWS_1251_RUSSIAN_MODELalangthaimodelTaTIS_620_THAI_MODELalangturkishmodelTaISO_8859_9_TURKISH_MODELasbcharsetproberTaSingleByteCharSetProbera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.sbcsgroupprobera__module__a__qualname__uSBCSGroupProber.__init__a__orig_bases__uchardet\sbcsgroupprober.pyu<module chardet.sbcsgroupprober>Ta__class__Taselfahebrew_proberalogical_hebrew_proberavisual_hebrew_probera__class__u.chardet.sjisproberSaSJISProbera__init__aCodingStateMachineaSJIS_SM_MODELacoding_smaSJISDistributionAnalysisadistribution_analyzeraSJISContextAnalysisacontext_analyzeraresetacharset_nameaselfanext_stateaMachineStateaERRORaloggeradebugu%s %s prober hit error at byte %salanguageaProbingStateaNOT_MEa_stateaITS_MEaFOUND_ITaSTARTaget_current_charlenla_last_charlafeedllqastateaDETECTINGagot_enough_dataaget_confidenceaSHORTCUT_THRESHOLDamaxa__doc__a__file__a__spec__aoriginahas_locationa__cached__ambcharsetproberTaMultiByteCharSetProberaMultiByteCharSetProberacodingstatemachineTaCodingStateMachineachardistributionTaSJISDistributionAnalysisajpcntxTaSJISContextAnalysisambcssmTaSJIS_SM_MODELaenumsTaProbingStateaMachineStatea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.sjisprobera__module__a__qualname__uSJISProber.__init__uSJISProber.resetapropertyuSJISProber.charset_nameaJapaneseuSJISProber.languageuSJISProber.feeduSJISProber.get_confidencea__orig_bases__uchardet\sjisprober.pyu<module chardet.sjisprober>Ta__class__Taselfa__class__TaselfTaselfabyte_strwiacoding_stateachar_lenTaselfacontext_confadistrib_confu.chardet.universaldetectora_esc_charset_probera_charset_probersaresultadonea_got_dataa_input_statea_last_charalang_filteraloggingagetLoggerTuchardet.universaldetectoraloggera_has_win_bytesaresetDaencodingaconfidencealanguagenZnaInputStateaPURE_ASCIIcu
        Reset the UniversalDetector and all of its probers back to their
        initial states.  This is called by ``__init__``, so you only need to
        call this directly in between analyses of different documents.
        abyte_strastartswithacodecsaBOM_UTF8DaencodingaconfidencealanguageuUTF-8-SIGf?uaBOM_UTF32_LEaBOM_UTF32_BEDaencodingaconfidencealanguageuUTF-32f?uTbDaencodingaconfidencealanguageuX-ISO-10646-UCS-4-3412f?uTbDaencodingaconfidencealanguageuX-ISO-10646-UCS-4-2143f?uaBOM_LEaBOM_BEDaencodingaconfidencealanguageuUTF-16f?uaencodingaHIGH_BYTE_DETECTORasearchaHIGH_BYTEaESC_DETECTORaESC_ASCII:qnnaEscCharSetProberafeedaProbingStateaFOUND_ITacharset_nameaconfidenceaget_confidencealanguageaMBCSGroupProberaLanguageFilteraNON_CJKaappendaSBCSGroupProberaLatin1ProberaWIN_BYTE_DETECTORu
        Takes a chunk of a document and feeds it through all of the relevant
        charset probers.

        After calling ``feed``, you can check the value of the ``done``
        attribute to see if you need to continue feeding the
        ``UniversalDetector`` more data, or if it has made a prediction
        (in the ``result`` attribute).

        .. note::
           You should always call ``close`` when you're done feeding in your
           document if ``done`` is not already ``True``.
        adebugTuno data received!Daencodingaconfidencealanguageaasciif?uZamax_prober_confidenceamax_proberaMINIMUM_THRESHOLDalowerTuiso-8859aISO_WIN_MAPagetagetEffectiveLevelaDEBUGTuno probers hit minimum thresholdaCharSetGroupProberaprobersaselfu%s %s confidence = %su
        Stop analyzing the current document and come up with a final
        prediction.

        :returns:  The ``result`` attribute, a ``dict`` with the keys
                   `encoding`, `confidence`, and `language`.
        u
Module containing the UniversalDetector detector class, which is the primary
class a user of ``chardet`` should use.

:author: Mark Pilgrim (initial port to Python)
:author: Shy Shalom (original C code)
:author: Dan Blanchard (major refactoring for 3.0)
:author: Ian Cordasco
a__doc__a__file__a__spec__aoriginahas_locationa__cached__lareacharsetgroupproberTaCharSetGroupProberlaenumsTaInputStateaLanguageFilteraProbingStateaescproberTaEscCharSetProberalatin1proberTaLatin1ProberambcsgroupproberTaMBCSGroupProberasbcsgroupproberTaSBCSGroupProberTOobjecta__prepare__aUniversalDetectora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.universaldetectora__module__u
    The ``UniversalDetector`` class underlies the ``chardet.detect`` function
    and coordinates all of the different charset probers.

    To get a ``dict`` containing an encoding and its confidence, you can simply
    run:

    .. code::

            u = UniversalDetector()
            u.feed(some_bytes)
            u.close()
            detected = u.result

    a__qualname__f?acompileTc[-]Tc(|~{)Tc[-]Duiso-8859-1uiso-8859-2uiso-8859-5uiso-8859-6uiso-8859-7uiso-8859-8uiso-8859-9uiso-8859-13uWindows-1252uWindows-1250uWindows-1251uWindows-1256uWindows-1253uWindows-1255uWindows-1254uWindows-1257aALLa__init__uUniversalDetector.__init__uUniversalDetector.resetuUniversalDetector.feedacloseuUniversalDetector.closea__orig_bases__uchardet\universaldetector.pyu<module chardet.universaldetector>Ta__class__Taselfalang_filterTaselfaprober_confidenceamax_prober_confidenceamax_proberaproberacharset_namealower_charset_nameaconfidenceagroup_proberTaselfabyte_straproberTaselfaproberu.chardet.utf8proberIaUTF8Probera__init__aCodingStateMachineaUTF8_SM_MODELacoding_sma_num_mb_charsaresetlaselfanext_stateaMachineStateaERRORaProbingStateaNOT_MEa_stateaITS_MEaFOUND_ITaSTARTaget_current_charlenllastateaDETECTINGaget_confidenceaSHORTCUT_THRESHOLDlfGz?aONE_CHAR_PROBf?a__doc__a__file__a__spec__aoriginahas_locationa__cached__acharsetproberTaCharSetProberaCharSetProberaenumsTaProbingStateaMachineStateacodingstatemachineTaCodingStateMachineambcssmTaUTF8_SM_MODELa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uchardet.utf8probera__module__a__qualname__f?uUTF8Prober.__init__uUTF8Prober.resetapropertyuutf-8acharset_nameuUTF8Prober.charset_nameualanguageuUTF8Prober.languageafeeduUTF8Prober.feeduUTF8Prober.get_confidencea__orig_bases__uchardet\utf8prober.pyu<module chardet.utf8prober>Ta__class__Taselfa__class__TaselfTaselfabyte_strwcacoding_stateTaselfaunlike.chardet.versionFu
This module exists only to simplify retrieving the version number of chardet
from within setup.py and from chardet subpackages.

:author: Dan Blanchard (dan.blanchard@gmail.com)
a__doc__a__file__a__spec__aoriginahas_locationa__cached__u4.0.0a__version__w.aVERSIONuchardet\version.pyu<module chardet.version>u.click._compat
*aget_best_encodingareplacea_NonClosingTextIOWrapperTaline_bufferingaforce_readableaforce_writableacodecsalookupanameaasciiuChecks if a given encoding is ascii.aencodingagetdefaultencodingais_ascii_encodinguutf-8uReturns the default stream encoding if not found.acastaBinaryIOa_FixupStreama_streama__class__a__init__adetachaisattya_force_readablea_force_writablearead1areadareadableTlawritableawriteTuTcaseekableaseekatella_is_binary_readerabuffera_is_binary_writeruA stream is misconfigured if its encoding is ASCII.uA stream attribute is compatible if it is equal to the
    desired value or the desired value is unset and the attribute
    has a value.
    a_is_compat_stream_attraerrorsuCheck if a stream's encoding and errors attributes are
    compatible with the desired values.
    aTextIOa_is_compatible_text_streama_stream_is_misconfigureda_make_text_streamTaforce_readableaforce_writablea_force_correct_text_streama_find_binary_readerTaforce_readablea_find_binary_writerTaforce_writableastdinuWas not able to determine binary stream for sys.stdin.astdoutuWas not able to determine binary stream for sys.stdout.astderruWas not able to determine binary stream for sys.stderr.a_get_windows_console_streama_force_correct_text_readerDaforce_readableta_force_correct_text_writerDaforce_writabletwbuHandles not passing ``encoding`` and ``errors`` in binary mode.afspathafsdecodew-Twwwawxaget_binary_stdoutaget_text_stdoutTaencodingaerrorsaget_binary_stdinaget_text_stdina_wrap_io_openwauAppending to an existing file is not supported, because that would involve an expensive `copy`-operation to a temporary file. Open the file in normal `w`-mode and copy explicitly if that's what you're after.wxuUse the `overwrite`-parameter instead.wwuAtomic writes only make sense with `w`-mode.aerrnolarandomastatast_modeaO_RDWRaO_CREATaO_EXCLaO_BINARYajoinu.__atomic-writearandrangeTgu08xuaopenaflagslaEEXISTaEACCESafilenameaaccessaW_OKachmoda_AtomicFilearealpathaIOaAnyamodeu<genexpr>uopen_stream.<locals>.<genexpr>a_fa_tmp_filenamea_real_filenameaclosedacloseTadeletea_ansi_reasubastreama__module__astartswithTuipykernel.a_is_jupyter_kernel_outputalocaleagetpreferredencodinga_ansi_stream_wrappersagetacoloramaashould_strip_ansiaAnsiToWin32Tastripa_safe_writeuauto_wrap_for_ansi.<locals>._safe_writeuSupport ANSI color and style codes on Windows by wrapping a
        stream with colorama.
        a_writeaansi_wrapperareset_allagetfilesystemencodingastrip_ansiaWeakKeyDictionaryareturnaOptionalafuncu_make_cached_stream_func.<locals>.funcasrc_funcacacheawrapper_funca__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aioaosareasyswtaweakrefTaWeakKeyDictionaryaCYGWINaWINaauto_wrap_for_ansiaCallableacompileTu\033\[[;?0-9]*[a-zA-Z]TFpaforce_readableaforce_writableDaencodingareturnOstrOboolaTextIOWrappera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uclick._compata__qualname__astraboolaextrau_NonClosingTextIOWrapper.__init__Dareturnna__del__u_NonClosingTextIOWrapper.__del__u_NonClosingTextIOWrapper.isattya__orig_bases__uThe new io interface needs more from streams than streams
    traditionally implement.  As such, this fix-up code is necessary in
    some circumstances.

    The forcing of readable and writable flags are there because some tools
    put badly patched objects on sys (one such offender are certain version
    of jupyter notebook).
    u_FixupStream.__init__a__getattr__u_FixupStream.__getattr__DasizeareturnOintObytesu_FixupStream.read1DareturnOboolu_FixupStream.readableu_FixupStream.writableu_FixupStream.seekableTFadefaultaattravalueatext_streamais_binaryafind_binaryatext_readeratext_writeraget_binary_stderrTnnaget_text_stderrafileaUnionTOstruos.PathLike[str]OintTwrnastrictFut.Union[str, os.PathLike[str]]aatomicaTupleaopen_streamwfatmp_filenameareal_filenameu_AtomicFile.__init__DareturnOstru_AtomicFile.nameDadeleteareturnOboolnu_AtomicFile.closeu_AtomicFile.__getattr__Dareturna_AtomicFilea__enter__u_AtomicFile.__enter__aexc_typeaTypew_a__exit__u_AtomicFile.__exit__a__repr__u_AtomicFile.__repr__DavalueareturnOstrpacolora_winconsoleTa_get_windows_console_streamla_get_argv_encodingaMutableMappingTnDwxareturnOstrOintaterm_lena_make_cached_stream_funcu<lambda>a_default_text_stdina_default_text_stdouta_default_text_stderrabinary_streamsaMappingatext_streamsuclick\_compat.pyTa.0wmamodeu<module click._compat>Ta__class__TaselfTaselfaexc_typew_TaselfanameTaselfwfatmp_filenameareal_filenameTaselfastreamaforce_readableaforce_writableTaselfastreamaencodingaerrorsaforce_readableaforce_writableaextraa__class__TastreamabufTatext_readeraencodingaerrorsaforce_readableTatext_streamaencodingaerrorsais_binaryafind_binaryaforce_readableaforce_writableabinary_readerapossible_binary_readerTatext_writeraencodingaerrorsaforce_writableTalocaleTwfaencodingaerrorsTastreamadefaultTastreamaattravalueastream_valueTastreamaencodingaerrorsTastreamTasrc_funcawrapper_funcacacheafuncTastreamaencodingaerrorsaforce_readableaforce_writableTwsa_writeaansi_wrapperTa_writeaansi_wrapperTafileamodeaencodingaerrorsTastreamacoloracachedacoloramaastripaansi_wrapperarva_writea_safe_writeTaselfadeleteTastreamarvasrc_funcacacheawrapper_funcTacacheasrc_funcawrapper_funcTastreamarvTawriterTareaderTaencodingaerrorsarvTaencodingTafilenameamodeaencodingaerrorsaatomicapermabinaryaerrnoarandomaflagsatmp_filenameafdwewfaafTaselfasizewfTaselfwxTastreamacolorTavalueTwx.click._termui_impltafill_charaempty_charabar_templateainfo_sepashow_etaashow_percentashow_posaitem_show_funcualabela_default_text_stdoutaStringIOafileacoloraupdate_min_stepsla_completed_intervalsawidthaautowidthaoperatorTalength_hintalength_hintquiterable or length is requiredacastaIterablewVaiterableaiteralengthaposaavgatimeastartalast_etaaeta_knownafinishedamax_widthaenteredacurrent_itemaisattyais_hiddena_last_linearender_progressarender_finishuYou need to use progress bars in a with block.ageneratorawriteaAFTER_BARaflushf?aminlZatime_per_iterationaetal<lud u02w:w/apctldu 4w%:lnnamathacosf@f?aformat_posaformat_pctaformat_etaabaraformat_barainfoajoinarstripashutilaechoTafileacoloraterm_lenaformat_progress_lineamaxaget_terminal_sizeacolumnsaBEFORE_BARw Tafileacoloranl:qnnamake_stepuUpdate the progress bar by advancing a specified number of
        steps, and optionally set the ``current_item`` for this new
        position.

        :param n_steps: Number of steps to advance.
        :param current_item: Optional item to set as ``current_item``
            for the updated position.

        .. versionchanged:: 8.0
            Added the ``current_item`` optional parameter.

        .. versionchanged:: 8.0
            Only render when the number of steps meets the
            ``update_min_steps`` threshold.
        uReturn a generator which yields the items added to the bar
        during construction, and updates the progress bar *after* the
        yielded block returns.
        aselfaupdateTlafinishuProgressBar.generatorastdina_nullpageraenvironagetTaPAGERnastripaWINa_tempfilepagera_pipepagerTaTERMTadumbaemacsumore <asystemTu(less) 2>/dev/nullalessatempfileamkstemputoo many values to unpack (expected 2)acloseumore "w"amoreaunlinkuDecide what method to use for paging through text.asubprocessarsplitTw/lasplitTaLESSuu-RaLESSwrwRaPopenaPIPETashellastdinaenvaBinaryIOaget_best_encodingastrip_ansiaencodeaencodingareplaceTEOSErrorEKeyboardInterruptwcawaituPage through text by feeding it to another program.  Invoking a
    pager through this might support colors.
    astdoutaopen_streamawba__enter__a__exit__Tnnnu "uPage through text by invoking a program on a temporary file.astreamuSimply print unformatted text.  This is the ultimate fallback.aeditoraenvarequire_saveaextensionTaVISUALaEDITORanotepadTusensible-editoravimananouwhich u >/dev/null 2>&1aviaget_editoracopyTaenvashellaClickExceptionw_Tu{editor}: Editing failedaformatTaeditorTu{editor}: Editing failed: {e}TaeditorwecTObytesObytearrayaendswithTw
w
atextTw
u
Tuutf-8-sigTuutf-8ueditor-Taprefixasuffixafdopenautimeagetatimeagetmtimelaedit_filearbareadarvadecodeTu
w
DaurlareturnOstrpa_unquote_fileuopen_url.<locals>._unquote_fileTw"uuexplorer /select,"u/WAITustart u "" "aCYGWINucygstart "u-wucygstart w.uxdg-openaurlastartswithTTuhttp://uhttps://awebbrowseraopenuurllib.parseTaunquoteaunquoteTufile://:lnnwwwaraw_terminalamsvcrtagetwcheagetwchTwuàa_translate_ch_to_excu/dev/ttyafilenoatermiosatcgetattrattyasetrawatcsetattraTCSADRAINwfaerrorl u
This module contains implementations for the termui module. To keep the
import time of Click down, some infrequently used functionality is
placed in this module and only imported as needed.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__acontextlibaosasyswtagettextTagettextaTracebackTypea_compatTa_default_text_stdoutTaCYGWINTaget_best_encodingTaisattyTaopen_streamTastrip_ansiTaterm_lenTaWINaexceptionsTaClickExceptionautilsTaechoaTypeVarTwVw
aGenerica__prepare__aProgressBara__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uclick._termui_impla__module__a__qualname__Tnw#w u%(bar)su  tnFnnnnllaOptionalaintastraboolaCallableaTextIOareturna__init__uProgressBar.__init__DareturnuProgressBar[V]uProgressBar.__enter__aexc_typeaTypeaBaseExceptionaexc_valueatbuProgressBar.__exit__aIteratora__iter__uProgressBar.__iter__a__next__uProgressBar.__next__DareturnnuProgressBar.render_finishapropertyafloatuProgressBar.pctuProgressBar.time_per_iterationuProgressBar.etauProgressBar.format_etauProgressBar.format_posuProgressBar.format_pctuProgressBar.format_baruProgressBar.format_progress_lineuProgressBar.render_progressan_stepsuProgressBar.make_stepTnuProgressBar.updateuProgressBar.finisha__orig_bases__apageracmdaEditorTnntu.txtaMappingTOstrpuEditor.__init__DareturnOstruEditor.get_editorDafilenameareturnOstrnuEditor.edit_fileaAnyStraedituEditor.editTFpDaurlawaitalocateareturnOstrOboolpOintaopen_urlachacontextmanagerDaechoareturnOboolOstragetcharuclick\_termui_impl.pyu<module click._termui_impl>Ta__class__TaselfTaselfaexc_typeaexc_valueatbTaselfaeditoraenvarequire_saveaextensionTaselfaiterablealengthafill_charaempty_charabar_templateainfo_sepashow_etaashow_percentashow_posaitem_show_funcalabelafileacoloraupdate_min_stepsawidthalength_hintTastreamageneratoracoloratextTageneratoracmdacolorasubprocessaenvacmd_detailaless_flagswcastdinaencodingatextTageneratoracmdacoloratempfileafdafilenameatextaencodingwfTachTaurlaunquoteTaselfatextwfatempfileadataafdanameatimestamparvTaselfafilenameaenvironasubprocessaeditorwcaexit_codeweTaselfabar_lengthabaracharsTaselfwtasecondsaminutesahoursTaselfaposTaselfashow_percentainfo_bitsaitem_infoTaselfarvTaselfakeyarvaeditorTaechoafdachTaechoafuncarvTaselfan_stepsastepT
aurlawaitalocateasubprocessa_unquote_fileaargsanullawait_strwcawebbrowserTageneratoracolorastdoutapager_cmdatempfileafdafilenameTwfafdaold_settingsTaselfashutilabufaold_widthaclutter_lengthanew_widthaclear_widthalinealine_lenTaselfan_stepsacurrent_item.click._textwrapy;amaxlabreak_long_wordsqaappendapopaselfainitial_indentasubsequent_indentaindentaextra_indentuTextWrapper.extra_indentasplitlinesutoo many values to unpack (expected 2)larvuw
a__doc__a__file__a__spec__aoriginahas_locationa__cached__atextwrapwtacontextlibTacontextmanageracontextmanageraTextWrappera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uclick._textwrapa__module__a__qualname__areversed_chunksaListastracur_lineacur_lenaintawidthareturna_handle_long_worduTextWrapper._handle_long_wordaIteratoratextaindent_onlyuTextWrapper.indent_onlya__orig_bases__uclick\_textwrap.pyu<module click._textwrap>Ta__class__Taselfareversed_chunksacur_lineacur_lenawidthaspace_leftalastacutaresTaselfaindentaold_initial_indentaold_subsequent_indentTaselfatextarvaidxalineaindent.click._winconsoleaPy_bufferaPyBUF_WRITABLEaPyBUF_SIMPLEaPyObject_GetBufferapy_objectabyrefac_charalenafrom_addressabufaPyBuffer_Releaseahandlea__class__aisattyllucannot read odd number of bytes from UTF-16-LE encoded consoleaget_bufferDawritabletac_ulongaReadConsoleWaHANDLEaGetLastErroraERROR_OPERATION_ABORTEDatimeasleepTf?uWindows error: uaEOFavalueaERROR_SUCCESSaERROR_NOT_ENOUGH_MEMORYuWindows error aminaMAX_BYTES_WRITTENaWriteConsoleWa_get_error_messagea_text_streamabufferanameawriteaflushaselfu<ConsoleStream name=u encoding=aencodingw>a_NonClosingTextIOWrapperaBufferedReadera_WindowsConsoleReaderaSTDIN_HANDLEuutf-16-leastrictDaline_bufferingtacastaTextIOaConsoleStreamaBufferedWritera_WindowsConsoleWriteraSTDOUT_HANDLEaSTDERR_HANDLEafilenoaUnsupportedOperationamsvcrtaget_osfhandleaGetConsoleModeaDWORDPuutf-16-lenPastrictna_is_consolea_stream_factoriesageta__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aioasyswtac_char_pac_intac_ssize_tac_void_paPOINTERaStructureaLPCWSTRaLPWSTRa_compatTa_NonClosingTextIOWrapperlawindllaWINFUNCTYPEac_ssize_pakernel32aGetStdHandleaGetCommandLineWaCommandLineToArgvWashell32aLocalFreeTq
TqTqllaSTDIN_FILENOaSTDOUT_FILENOaSTDERR_FILENOdlapythonapia__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uclick._winconsolea__module__a__qualname__aobjaitemsizeareadonlyandimaformatashapeastridesasuboffsetsainternala_fields_a__orig_bases__TFaRawIOBasea_WindowsConsoleRawIOBasea__init__u_WindowsConsoleRawIOBase.__init__u_WindowsConsoleRawIOBase.isattyareadableu_WindowsConsoleReader.readableareadintou_WindowsConsoleReader.readintoawritableu_WindowsConsoleWriter.writableastaticmethodu_WindowsConsoleWriter._get_error_messageu_WindowsConsoleWriter.writeatext_streamabyte_streamaBinaryIOareturnuConsoleStream.__init__DareturnOstruConsoleStream.namewxaAnyStruConsoleStream.writealinesaIterableawritelinesuConsoleStream.writelinesaAnya__getattr__uConsoleStream.__getattr__DareturnObooluConsoleStream.isattya__repr__uConsoleStream.__repr__abuffer_streama_get_text_stdina_get_text_stdouta_get_text_stderraMappingaCallablewfaOptionalaerrorsa_get_windows_console_streamuclick\_winconsole.pyu<module click._winconsole>Ta__class__TaselfanameTaselfatext_streamabyte_streamTaselfahandleTaselfTaerrnoTabuffer_streamatext_streamTwfaencodingaerrorsafuncwbTwfafilenoahandleTaobjawritableabufaflagsabuffer_typeTaselfa__class__Taselfwbabytes_to_be_readabufferacode_units_to_be_readacode_units_readarvTaselfwxTaselfwbabytes_to_be_writtenabufacode_units_to_be_writtenacode_units_writtenabytes_writtenTaselfalinesaline.clickZu
Click is a simple Python module inspired by the stdlib optparse to make
writing command line scripts fun. Unlike other modules, it's based
around a simple API that does not come with too much magic and is
composable.
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_clicku\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__acoreTaArgumentlaArgumentlTaBaseCommandaBaseCommandTaCommandaCommandTaCommandCollectionaCommandCollectionTaContextaContextTaGroupaGroupTaMultiCommandaMultiCommandTaOptionaOptionTaParameteraParameteradecoratorsTaargumentaargumentTacommandacommandTaconfirmation_optionaconfirmation_optionTagroupagroupTahelp_optionahelp_optionTamake_pass_decoratoramake_pass_decoratorTaoptionaoptionTapass_contextapass_contextTapass_objapass_objTapassword_optionapassword_optionTaversion_optionaversion_optionaexceptionsTaAbortaAbortTaBadArgumentUsageaBadArgumentUsageTaBadOptionUsageaBadOptionUsageTaBadParameteraBadParameterTaClickExceptionaClickExceptionTaFileErroraFileErrorTaMissingParameteraMissingParameterTaNoSuchOptionaNoSuchOptionTaUsageErroraUsageErroraformattingTaHelpFormatteraHelpFormatterTawrap_textawrap_textaglobalsTaget_current_contextaget_current_contextaparserTaOptionParseraOptionParseratermuiTaclearaclearTaconfirmaconfirmTaecho_via_pageraecho_via_pagerTaeditaeditTagetcharagetcharTalaunchalaunchTapauseapauseTaprogressbaraprogressbarTapromptapromptTasechoasechoTastyleastyleTaunstyleaunstyleatypesTaBOOLaBOOLTaChoiceaChoiceTaDateTimeaDateTimeTaFileaFileTaFLOATaFLOATTaFloatRangeaFloatRangeTaINTaINTTaIntRangeaIntRangeTaParamTypeaParamTypeTaPathaPathTaSTRINGaSTRINGTaTupleaTupleTaUNPROCESSEDaUNPROCESSEDTaUUIDaUUIDautilsTaechoaechoTaformat_filenameaformat_filenameTaget_app_diraget_app_dirTaget_binary_streamaget_binary_streamTaget_text_streamaget_text_streamTaopen_fileaopen_fileu8.1.7a__version__uclick\__init__.pyu<module click>u.click.coreuList all the subcommands of a group that start with the
    incomplete value and aren't hidden.

    :param ctx: Invocation context for the group.
    :param incomplete: Value being completed. May be empty.
    acastaMultiCommandactxacommandalist_commandsastartswithaincompleteamultiaget_commandahiddena_complete_visible_commandsachainuIt is not possible to add multi commands as children to another multi command that is in chain mode.uFound a multi command as subcommand to a multi command that is in chain mode. This is not supported.u. Command anameuu is set to chain and u was added as a subcommand but it in itself is a multi command. (u is a a__name__u within a chained u named u).arepeatuContext manager that attaches extra information to exceptions.aBadParameteraparamaUsageErroraaugment_usage_errorsaitemaParameterareturnaTupleTOboolOfloatasort_keyuiter_params_for_processing.<locals>.sort_keyasortedTakeyuGiven a sequence of parameters in the order as should be considered
    for processing and an iterable of parameters that exist, this returns
    a list in the correct order as they should be processed.
    ainvocation_orderaindexZais_eageraparentainfo_nameaparamsaargsaprotected_argsa_opt_prefixesaobjametaa_metaadefault_mapagetainvoked_subcommandaterminal_widthamax_content_widthaallow_extra_argsaallow_interspersed_argsaignore_unknown_optionsahelp_option_namesu--helpatoken_normalize_funcaresilient_parsingaauto_envvar_prefixw_aupperareplaceTw-w_acolorashow_defaulta_close_callbacksla_deptha_parameter_sourceaExitStacka_exit_stackato_info_dictuGather information that could be useful for a tool generating
        user-facing documentation. This traverses the entire CLI
        structure.

        .. code-block:: python

            with Context(cli) as ctx:
                info = ctx.to_info_dict()

        .. versionadded:: 8.0
        lapush_contextacloseapop_contextuThis helper method can be used with the context object to promote
        it to the current thread local (see :func:`get_current_context`).
        The default behavior of this is to invoke the cleanup functions which
        can be disabled by setting `cleanup` to `False`.  The cleanup
        functions are typically used for things such as closing file handles.

        If the cleanup is intended the context object can also be directly
        used as a context manager.

        Example usage::

            with ctx.scope():
                assert get_current_context() is ctx

        This is equivalent::

            with ctx:
                assert get_current_context() is ctx

        .. versionadded:: 5.0

        :param cleanup: controls if the cleanup functions should be run or
                        not.  The default is to run these functions.  In
                        some situations the context only wants to be
                        temporarily pushed in which case this can be disabled.
                        Nested pushes automatically defer the cleanup.
        acleanupaselfa__enter__a__exit__TnnnascopeuContext.scopeuThis is a dictionary which is shared with all the contexts
        that are nested.  It exists so that click utilities can store some
        state here if they need to.  It is however the responsibility of
        that code to manage this dictionary well.

        The keys are supposed to be unique dotted strings.  For instance
        module paths are a good choice for it.  What is stored in there is
        irrelevant for the operation of click.  However what is important is
        that code that places data here adheres to the general semantics of
        the system.

        Example usage::

            LANG_KEY = f'{__name__}.lang'

            def set_language(value):
                ctx = get_current_context()
                ctx.meta[LANG_KEY] = value

            def get_language():
                return get_current_context().meta.get(LANG_KEY, 'en_US')

        .. versionadded:: 5.0
        aformatter_classTawidthamax_widthuCreates the :class:`~click.HelpFormatter` for the help and
        usage output.

        To quickly customize the formatter class used without overriding
        this method, set the :attr:`formatter_class` attribute.

        .. versionchanged:: 8.0
            Added the :attr:`formatter_class` attribute.
        aenter_contextuRegister a resource as if it were used in a ``with``
        statement. The resource will be cleaned up when the context is
        popped.

        Uses :meth:`contextlib.ExitStack.enter_context`. It calls the
        resource's ``__enter__()`` method and returns the result. When
        the context is popped, it closes the stack, which calls the
        resource's ``__exit__()`` method.

        To register a cleanup function for something that isn't a
        context manager, use :meth:`call_on_close`. Or use something
        from :mod:`contextlib` to turn it into a context manager first.

        .. code-block:: python

            @click.group()
            @click.option("--name")
            @click.pass_context
            def cli(ctx):
                ctx.obj = ctx.with_resource(connect_db(name))

        :param context_manager: The context manager to enter.
        :return: Whatever ``context_manager.__enter__()`` returns.

        .. versionadded:: 8.0
        acallbackuRegister a function to be called when the context tears down.

        This can be used to close resources opened during the script
        execution. Resources that support Python's context manager
        protocol which would be used in a ``with`` statement should be
        registered with :meth:`with_resource` instead.

        :param f: The function to execute on teardown.
        uInvoke all close callbacks registered with
        :meth:`call_on_close`, and exit all context managers entered
        with :meth:`with_resource`.
        acommand_pathaCommandaget_paramsaparent_command_pathaget_usage_piecesw alstripuThe computed command path.  This is used for the ``usage``
        information on the help page.  It's automatically created by
        combining the info names of the chain of contexts to the root.
        anodeuFinds the outermost context.uFinds the closest object of a given type.afind_objectuLike :meth:`find_object` but sets the innermost object to a
        new instance of `object_type` if it does not exist.
        acallableuGet the default for a parameter from :attr:`default_map`.

        :param name: Name of the parameter.
        :param call: If the default is a callable, call it. Disable to
            return the callable instead.

        .. versionchanged:: 8.0
            Added the ``call`` parameter.
        uAborts the execution of the program with a specific error
        message.

        :param message: the error message to fail with.
        aAbortuAborts the script.aExituExits the application with a given exit code.aget_usageuHelper method to get formatted usage string for the current
        context and command.
        aget_helpuHelper method to get formatted help page for the current
        context and command.
        Tainfo_nameaparentuCreate a new context of the same type as this context, but
        for a new command.

        :meta private:
        uThe given command does not have a callback that can be invoked.ut.Callable[..., V]a_make_sub_contextakwargsaexpose_valueatype_cast_valueaget_defaultaupdatea_Context__selfuInvokes a command callback in exactly the way it expects.  There
        are two ways to invoke this method:

        1.  the first argument can be a callback and all other arguments and
            keyword arguments are forwarded directly to the function.
        2.  the first argument is a click command object.  In that case all
            arguments are forwarded as well but proper click parameters
            (options and click arguments) must be keyword arguments and Click
            will fill in defaults.

        Note that before Click 3.2 keyword arguments were not properly filled
        in against the intention of this code and no context was created.  For
        more information about this change and why it was done in a bugfix
        release see :ref:`upgrade-to-3.2`.

        .. versionchanged:: 8.0
            All ``kwargs`` are tracked in :attr:`params` so they will be
            passed if :meth:`forward` is called at multiple levels.
        uCallback is not a command.ainvokeuSimilar to :meth:`invoke` but fills in default keyword
        arguments from the current context if the other command expects
        it.  This cannot invoke callbacks directly, only other commands.

        .. versionchanged:: 8.0
            All ``kwargs`` are tracked in :attr:`params` so they will be
            passed if ``forward`` is called at multiple levels.
        uSet the source of a parameter. This indicates the location
        from which the value of the parameter was obtained.

        :param name: The name of the parameter.
        :param source: A member of :class:`~click.core.ParameterSource`.
        uGet the source of a parameter. This indicates the location
        from which the value of the parameter was obtained.

        This can be useful for determining when a user specified a value
        on the command line that is the same as the default value. It
        will be :attr:`~click.core.ParameterSource.DEFAULT` only if the
        value was actually taken from the default.

        :param name: The name of the parameter.
        :rtype: ParameterSource

        .. versionchanged:: 8.0
            Returns ``None`` if the parameter was not provided from any
            source.
        acontext_settingsuGather information that could be useful for a tool generating
        user-facing documentation. This traverses the entire structure
        below this command.

        Use :meth:`click.Context.to_info_dict` to traverse the entire
        CLI structure.

        :param ctx: A :class:`Context` representing this command.

        .. versionadded:: 8.0
        w<w>uBase commands cannot get usageuBase commands cannot get helpaitemsutoo many values to unpack (expected 2)aextraacontext_classTFTacleanupaparse_argsuThis function when given an info name and arguments will kick
        off the parsing and create a new :class:`Context`.  It does not
        invoke the actual command callback though.

        To quickly customize the context class used without overriding
        this method, set the :attr:`context_class` attribute.

        :param info_name: the info name for this invocation.  Generally this
                          is the most descriptive name for the script or
                          command.  For the toplevel script it's usually
                          the name of the script, for commands below it's
                          the name of the command.
        :param args: the arguments to parse as list of strings.
        :param parent: the parent context if available.
        :param extra: extra keyword arguments forwarded to the context
                      constructor.

        .. versionchanged:: 8.0
            Added the :attr:`context_class` attribute.
        uBase commands do not know how to parse arguments.uGiven a context and a list of arguments this creates the parser
        and parses the arguments, then modifies the context as necessary.
        This is automatically invoked by :meth:`make_context`.
        uBase commands are not invocable by defaultuGiven a context, this invokes the command.  The default
        implementation is raising a not implemented error.
        uclick.shell_completionTaCompletionItemaCompletionItemaresultsuReturn a list of completions for the incomplete value. Looks
        at the names of chained multi-commands.

        Any command could be part of a chained multi-command, so sibling
        commands are valid at any point during command completion. Other
        command classes will return more completions.

        :param ctx: Invocation context for this command.
        :param incomplete: Value being completed. May be empty.

        .. versionadded:: 8.0
        aget_short_help_strTahelpu<genexpr>uBaseCommand.shell_complete.<locals>.<genexpr>aargv:lnna_expand_argsa_detect_program_namea_main_shell_completionamake_contextaexitTEEOFErrorEKeyboardInterruptaechoastderrTafileaClickExceptionashowaexit_codeaerrnoaEPIPEaTextIOaPacifyFlushWrapperastdoutTuAborted!uThis is the way to invoke a script with all the bells and
        whistles as a command line application.  This will always terminate
        the application after a call.  If this is not wanted, ``SystemExit``
        needs to be caught.

        This method is also available by directly calling the instance of
        a :class:`Command`.

        :param args: the arguments that should be used for parsing.  If not
                     provided, ``sys.argv[1:]`` is used.
        :param prog_name: the program name that should be used.  By default
                          the program name is constructed by taking the file
                          name from ``sys.argv[0]``.
        :param complete_var: the environment variable that controls the
                             bash completion support.  The default is
                             ``"_<prog_name>_COMPLETE"`` with prog_name in
                             uppercase.
        :param standalone_mode: the default behavior is to invoke the script
                                in standalone mode.  Click will then
                                handle exceptions and convert them into
                                error messages and the function will never
                                return but shut down the interpreter.  If
                                this is set to `False` they will be
                                propagated to the caller and the return
                                value of this function is the return value
                                of :meth:`invoke`.
        :param windows_expand_args: Expand glob patterns, user dir, and
            env vars in command line args on Windows.
        :param extra: extra keyword arguments are forwarded to the context
                      constructor.  See :class:`Context` for more information.

        .. versionchanged:: 8.0.1
            Added the ``windows_expand_args`` parameter to allow
            disabling command line arg expansion on Windows.

        .. versionchanged:: 8.0
            When taking arguments from ``sys.argv`` on Windows, glob
            patterns, user dir, and env vars are expanded.

        .. versionchanged:: 3.0
           Added the ``standalone_mode`` parameter.
        Tw.w_a_COMPLETEaenvironashell_completionTashell_completeashell_completeuCheck if the shell is asking for tab completion, process
        that, then exit early. Called from :meth:`main` before the
        program is invoked.

        :param prog_name: Name of the executable in the shell.
        :param complete_var: Name of the environment variable that holds
            the completion instruction. Defaults to
            ``_{PROG_NAME}_COMPLETE``.

        .. versionchanged:: 8.2.0
            Dots (``.``) in ``prog_name`` are replaced with underscores (``_``).
        amainuAlias for :meth:`main`.a__class__a__init__ahelpaepilogaoptions_metavarashort_helpaadd_help_optionano_args_is_helpadeprecatedTaparamsahelpaepilogashort_helpahiddenadeprecatedamake_formatteraformat_usageagetvaluearstripTw
uFormats the usage line into a string and returns it.

        Calls :meth:`format_usage` internally.
        aget_help_optionacollect_usage_piecesawrite_usageuWrites the usage line into the formatter.

        This is a low-level method called by :meth:`get_usage`.
        arvuReturns all the pieces that go into the usage line and returns
        it as a list of strings.
        aall_namesadifference_updateaoptsasecondary_optsuReturns the names for the help option.aget_help_option_namesaContextavalueashow_helpuCommand.get_help_option.<locals>.show_helpaOptionTuShow this message and exit.Tais_flagais_eageraexpose_valueacallbackahelpuReturns the help option object.TacoloraOptionParseraadd_to_parseraparseruCreates the underlying option parser for this command.aformat_helpuFormats the help into a string and returns it.

        Calls :meth:`format_help` internally.
        ainspectacleandocamake_default_short_helpTu(Deprecated) {text}aformatTatextastripuGets short help for the command or makes it by shortening the
        long help string.
        aformat_help_textaformat_optionsaformat_epiloguWrites the help into the formatter if it exists.

        This is a low-level method called by :meth:`get_help`.

        This calls the following methods:

        -   :meth:`format_usage`
        -   :meth:`format_help_text`
        -   :meth:`format_options`
        -   :meth:`format_epilog`
        apartitionTwawrite_paragraphaindentationawrite_textuWrites the help text to the formatter if it exists.aget_help_recordasectionTaOptionsawrite_dluWrites all the options into the formatter if they exist.uWrites the epilog into the formatter if it exists.amake_parserTaargsutoo many values to unpack (expected 3)aiter_params_for_processingahandle_parse_resultafailangettextuGot unexpected extra argument ({args})uGot unexpected extra arguments ({args})TuDeprecationWarning: The command {name!r} is deprecated.TanameastyleDafgaredDaerrtuGiven a context, this invokes the attached callback (if it exists)
        in the right way.
        aisalnumamultipleaget_parameter_sourceaParameterSourceaCOMMANDLINEuReturn a list of completions for the incomplete value. Looks
        at the names of options and chained multi-commands.

        :param ctx: Invocation context for this command.
        :param incomplete: Value being completed. May be empty.

        .. versionadded:: 8.0
        uCommand.shell_complete.<locals>.<genexpr>ainvoke_without_commanduCOMMAND1 [ARGS]... [COMMAND2 [ARGS]...]...uCOMMAND [ARGS]...asubcommand_metavara_result_callbackaArgumentarequireduMulti commands in chain mode cannot have optional arguments.acommandsTacommandsachainaappendaformat_commandswfwFadecoratoruMultiCommand.result_callback.<locals>.decoratoruAdds a result callback to the command.  By default if a
        result callback is already registered this will chain them but
        this can be disabled with the `replace` parameter.  The result
        callback is invoked with the return value of the subcommand
        (or the list of return values from all subcommands if chaining
        is enabled) as well as the parameters as they would be passed
        to the main callback.

        Example::

            @click.group()
            @click.option('-i', '--input', default=23)
            def cli(input):
                return 42

            @cli.result_callback()
            def process_result(result, input):
                return result + input

        :param replace: if set to `True` an already existing result
                        callback will be removed.

        .. versionchanged:: 8.0
            Renamed from ``resultcallback``.

        .. versionadded:: 3.0
        afunctionuMultiCommand.result_callback.<locals>.decorator.<locals>.functionaupdate_wrapperaold_callbackawidthlamaxalimitarowsTaCommandsuExtra format methods for multi methods that adds all the commands
        after the options.
        uMultiCommand.format_commands.<locals>.<genexpr>:nlnaAnya_process_resultuMultiCommand.invoke.<locals>._process_resultTuMissing command.aresolve_commandTaparentw*Taparentaallow_extra_argsaallow_interspersed_argsacontextsamake_strasplit_optacmd_nameTuNo such command {name!r}.uGiven a context and a command name, this returns a
        :class:`Command` object if it exists or returns `None`.
        uReturns a list of subcommand names in the order they should
        appear.
        aextenduReturn a list of completions for the incomplete value. Looks
        at the names of options, subcommands, and chained
        multi-commands.

        :param ctx: Invocation context for this command.
        :param incomplete: Value being completed. May be empty.

        .. versionadded:: 8.0
        aabcaSequenceuCommand has no name.a_check_multicommandDaregistertuRegisters another :class:`Command` with this group.  If the name
        is not provided, the name of the command is used.
        adecoratorsTacommandTuUse 'command(**kwargs)(callable)' to provide arguments.utoo many values to unpack (expected 1)acommand_classTaclsaclsaCallableuGroup.command.<locals>.decoratoruA shortcut decorator for declaring and attaching a command to
        the group. This takes the same arguments as :func:`command` and
        immediately registers the created command with this group by
        calling :meth:`add_command`.

        To customize the command class used, set the
        :attr:`command_class` attribute.

        .. versionchanged:: 8.1
            This decorator can be applied without parentheses.

        .. versionchanged:: 8.0
            Added the :attr:`command_class` attribute.
        aadd_commandTagroupagroupTuUse 'group(**kwargs)(callable)' to provide arguments.agroup_classaGroupuGroup.group.<locals>.decoratoruA shortcut decorator for declaring and attaching a group to
        the group. This takes the same arguments as :func:`group` and
        immediately registers the created group with this group by
        calling :meth:`add_command`.

        To customize the group class used, set the :attr:`group_class`
        attribute.

        .. versionchanged:: 8.1
            This decorator can be applied without parentheses.

        .. versionchanged:: 8.0
            Added the :attr:`group_class` attribute.
        asourcesuAdds a new multi command to the chain dispatcher.uCheck if the value is iterable but not a string. Raises a type
    error, or return an iterator over the value.
    a_parse_declsatypesaconvert_typeatypeais_compositeaarityanargsadefaultametavaraenvvara_custom_shell_completeu'nargs' must be u (or None) for type u, but it was w.a_check_iteru'default' must be a list when 'multiple' is true.u'default' must be a list of lists when 'multiple' is true and 'nargs' != 1.u'default' must be a list when 'nargs' != 1.uitem lengthalengthu'default' u must match nargs=aparam_type_nameuGather information that could be useful for a tool generating
        user-facing documentation.

        Use :meth:`click.Context.to_info_dict` to traverse the entire
        CLI structure.

        .. versionadded:: 8.0
        uReturns the human readable name of this parameter.  This is the
        same as the name for options, but the metavar for arguments.
        aget_metavaru...alookup_defaultDacallFuGet the default for the parameter. Tries
        :meth:`Context.lookup_default` first, then the local default.

        :param ctx: Current context.
        :param call: If the default is a callable, call it. Disable to
            return the callable instead.

        .. versionchanged:: 8.0.2
            Type casting is no longer performed when getting a default.

        .. versionchanged:: 8.0.1
            Type casting can fail in resilient parsing mode. Invalid
            defaults will not prevent showing help text.

        .. versionchanged:: 8.0
            Looks at ``ctx.default_map`` first.

        .. versionchanged:: 8.0
            Added the ``call`` parameter.
        avalue_from_envvaraENVIRONMENTaDEFAULT_MAPaDEFAULTqaIteratoracheck_iteruParameter.type_cast_value.<locals>.check_iteraconvertuParameter.type_cast_value.<locals>.convertuConvert and validate a value against the option's
        :attr:`type`, :attr:`multiple`, and :attr:`nargs`.
        TuValue must be an iterable.TactxaparamTaparamactxuParameter.type_cast_value.<locals>.convert.<locals>.<genexpr>uTakes {nargs} values but 1 was given.uTakes {nargs} values but {len} were given.TanargsalenuParameter.type_cast_value.<locals>.<genexpr>avalue_is_missingaMissingParameteraresolve_envvar_valueasplit_envvar_valueTaparamaconsume_valueaset_parameter_sourceaprocess_valueahuman_readable_nameu / uGet a stringified version of the param for use in error messages to
        indicate which param caused the error.
        w'uParameter.get_error_hint.<locals>.<genexpr>aListuReturn a list of completions for the incomplete value. If a
        ``shell_complete`` function was given during init, it is used.
        Otherwise, the :attr:`type`
        :meth:`~click.types.ParamType.shell_complete` function is used.

        :param ctx: Invocation context for this command.
        :param incomplete: Value being completed. May be empty.

        .. versionadded:: 8.0
        u'name' is required with 'prompt=True'.Tw_w acapitalizeapromptaconfirmation_promptaprompt_requiredahide_inputa_flag_needs_valueais_flagaBoolParamTypeais_bool_flagaflag_valueacountaIntRangeTlTaminaallow_from_autoenvashow_choicesashow_envvarunargs=-1 is not supported for options.u'prompt' is not valid for non-boolean flag.uSecondary flag is not valid for non-boolean flag.u'prompt' with 'hide_input' is not valid for boolean flag.u'count' is not valid with 'multiple'.u'count' is not valid with 'is_flag'.Tahelpapromptais_flagaflag_valueacountahiddenaisidentifieruName 'u' defined twicew/w;asplitapossible_namesuBoolean option u cannot use the same flag for true/false.asortu<lambda>uOption._parse_decls.<locals>.<lambda>aloweruCould not determine name for optionuNo options defined but a name was passed (u). Did you mean to declare an argument instead? Did you mean to pass '--u'?astorea_constaadd_optionTaobjaoptsadestaactionaconstTaobjaoptsadestaactionanargsa_write_optsuOption.get_help_record.<locals>._write_optsu, Tuenv var: {var}Tavarw(w)TOlistOtupleaisfunctionTu(dynamic)Tudefault: {default}Tadefaulta_NumberRangeBaseamina_describe_rangeTarequiredu; u  [w]w[aany_prefix_is_slashajoin_optionsamake_metavaruOption.get_help_record.<locals>.<genexpr>TacallaconfirmuOption.prompt_for_value.<locals>.<lambda>Tadefaultatypeahide_inputashow_choicesaconfirmation_promptavalue_procuThis is an alternative flow that can be activated in the full
        value processing if a value does not exist.  It will prompt the
        user until a valid value exists and then returns the processed
        value as result.
        abatchaprompt_for_valueaPROMPTuOption.consume_value.<locals>.<genexpr>u__init__() got an unexpected keyword argument 'multiple'.u'default' is not supported for nargs=-1.TnLpuCould not determine name for argumentuArguments take exactly one parameter declaration, got aadd_argumentTadestanargsaobja__doc__a__file__a__spec__aoriginahas_locationa__cached__aenumaosasyswtacollectionsTaabcacontextlibTacontextmanageracontextmanagerTaExitStackagettextTagettextTangettextaitertoolsTarepeataTracebackTypeTatypesaexceptionsTaAbortTaBadParameterTaClickExceptionTaExitTaMissingParameterTaUsageErroraformattingTaHelpFormatteraHelpFormatterTajoin_optionsaglobalsTapop_contextTapush_contextTa_flag_needs_valueTaOptionParserTasplit_optatermuiTaconfirmTapromptTastyleautilsTa_detect_program_nameTa_expand_argsTaechoTamake_default_short_helpTamake_strTaPacifyFlushWrapperaTypeVarTwFTaboundTwVwVTOstraCommandDabase_commandacmd_nameacmdaregisterareturnaMultiCommandOstraCommandOboolnaiterableaIterableabatch_sizeTnaOptionaladeclaration_orderaEnuma__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uclick.corea__module__uThis is an :class:`~enum.Enum` that indicates the source of a
    parameter's value.

    Use :meth:`click.Context.get_parameter_source` to get the
    source for a parameter by name.

    .. versionchanged:: 8.0
        Use :class:`~enum.Enum` and drop the ``validate`` method.

    .. versionchanged:: 8.0
        Added the ``PROMPT`` value.
    a__qualname__aautoa__orig_bases__uThe context is a special internal object that holds state relevant
    for the script execution at every single level.  It's normally invisible
    to commands unless they opt-in to getting access to it.

    The context is useful as it can pass internal objects around and can
    control special execution features such as reading data from
    environment variables.

    A context can be used as context manager in which case it will call
    :meth:`close` on teardown.

    :param command: the command class for this context.
    :param parent: the parent context.
    :param info_name: the info name for this invocation.  Generally this
                      is the most descriptive name for the script or
                      command.  For the toplevel script it is usually
                      the name of the script, for commands below it it's
                      the name of the script.
    :param obj: an arbitrary object of user data.
    :param auto_envvar_prefix: the prefix to use for automatic environment
                               variables.  If this is `None` then reading
                               from environment variables is disabled.  This
                               does not affect manually set environment
                               variables which are always read.
    :param default_map: a dictionary (like object) with default values
                        for parameters.
    :param terminal_width: the width of the terminal.  The default is
                           inherit from parent context.  If no context
                           defines the terminal width then auto
                           detection will be applied.
    :param max_content_width: the maximum width for content rendered by
                              Click (this currently only affects help
                              pages).  This defaults to 80 characters if
                              not overridden.  In other words: even if the
                              terminal is larger than that, Click will not
                              format things wider than 80 characters by
                              default.  In addition to that, formatters might
                              add some safety mapping on the right.
    :param resilient_parsing: if this flag is enabled then Click will
                              parse without any interactivity or callback
                              invocation.  Default values will also be
                              ignored.  This is useful for implementing
                              things such as completion support.
    :param allow_extra_args: if this is set to `True` then extra arguments
                             at the end will not raise an error and will be
                             kept on the context.  The default is to inherit
                             from the command.
    :param allow_interspersed_args: if this is set to `False` then options
                                    and arguments cannot be mixed.  The
                                    default is to inherit from the command.
    :param ignore_unknown_options: instructs click to ignore options it does
                                   not know and keeps them for later
                                   processing.
    :param help_option_names: optionally a list of strings that define how
                              the default help parameter is named.  The
                              default is ``['--help']``.
    :param token_normalize_func: an optional function that is used to
                                 normalize tokens (options, choices,
                                 etc.).  This for instance can be used to
                                 implement case insensitive behavior.
    :param color: controls if the terminal supports ANSI colors or not.  The
                  default is autodetection.  This is only needed if ANSI
                  codes are used in texts that Click prints which is by
                  default not the case.  This for instance would affect
                  help output.
    :param show_default: Show the default value for commands. If this
        value is not set, it defaults to the value from the parent
        context. ``Command.show_default`` overrides this default for the
        specific command.

    .. versionchanged:: 8.1
        The ``show_default`` parameter is overridden by
        ``Command.show_default``, instead of the other way around.

    .. versionchanged:: 8.0
        The ``show_default`` parameter defaults to the value from the
        parent context.

    .. versionchanged:: 7.1
       Added the ``show_default`` parameter.

    .. versionchanged:: 4.0
        Added the ``color``, ``ignore_unknown_options``, and
        ``max_content_width`` parameters.

    .. versionchanged:: 3.0
        Added the ``allow_extra_args`` and ``allow_interspersed_args``
        parameters.

    .. versionchanged:: 2.0
        Added the ``resilient_parsing``, ``help_option_names``, and
        ``token_normalize_func`` parameters.
    a__annotations__aTypeTnnnnnnnFnnnnnnnaMutableMappingTLOstrOstruContext.__init__aDictuContext.to_info_dictDareturnaContextuContext.__enter__aexc_typeaexc_valueatbuContext.__exit__TtuContext.metauContext.make_formatteracontext_manageraContextManagerawith_resourceuContext.with_resourceacall_on_closeuContext.call_on_closeDareturnnuContext.closeDareturnOstruContext.command_pathafind_rootuContext.find_rootaobject_typeuContext.find_objectaensure_objectuContext.ensure_objectaoverloadacallute.Literal[True]uContext.lookup_defaultTQute.Literal[False]aUnionDamessageareturnOstrute.NoReturnuContext.failDareturnute.NoReturnaabortuContext.abortDacodeareturnOintute.NoReturnuContext.exituContext.get_usageuContext.get_helpDacommandareturnaCommandaContextuContext._make_sub_contexta_Context__callbackuContext.invokeTaCommandut.Callable[..., V]a_Context__cmdaforwarduContext.forwardasourceuContext.set_parameter_sourceuContext.get_parameter_sourceuThe base command implements the minimal API contract of commands.
    Most code will never use this as it does not implement a lot of useful
    functionality but it can act as the direct subclass of alternative
    parsing methods that do not depend on the Click parser.

    For instance, this can be used to bridge Click and other systems like
    argparse or docopt.

    Because base commands do not implement a lot of the API that other
    parts of Click take for granted, they are not supported for all
    operations.  For instance, they cannot be used with the decorators
    usually and they have no built-in callback system.

    .. versionchanged:: 2.0
       Added the `context_settings` parameter.

    :param name: the name of the command to use unless a group overrides it.
    :param context_settings: an optional dictionary with defaults that are
                             passed to the context object.
    aBaseCommanduBaseCommand.__init__uBaseCommand.to_info_dicta__repr__uBaseCommand.__repr__uBaseCommand.get_usageuBaseCommand.get_helpuBaseCommand.make_contextuBaseCommand.parse_argsuBaseCommand.invokeuBaseCommand.shell_completeTnnntaprog_nameacomplete_varastandalone_modeute.NoReturnuBaseCommand.mainTnnnQTnnntpawindows_expand_argsactx_argsuBaseCommand._main_shell_completiona__call__uBaseCommand.__call__uCommands are the basic building block of command line interfaces in
    Click.  A basic command handles command line parsing and might dispatch
    more parsing to commands nested below it.

    :param name: the name of the command to use unless a group overrides it.
    :param context_settings: an optional dictionary with defaults that are
                             passed to the context object.
    :param callback: the callback to invoke.  This is optional.
    :param params: the parameters to register with this command.  This can
                   be either :class:`Option` or :class:`Argument` objects.
    :param help: the help string to use for this command.
    :param epilog: like the help string but it's printed at the end of the
                   help page after everything else.
    :param short_help: the short help to use for this command.  This is
                       shown on the command listing of the parent command.
    :param add_help_option: by default each command registers a ``--help``
                            option.  This can be disabled by this parameter.
    :param no_args_is_help: this controls what happens if no arguments are
                            provided.  This option is disabled by default.
                            If enabled this will add ``--help`` as argument
                            if no arguments are passed
    :param hidden: hide this command from help outputs.

    :param deprecated: issues a message indicating that
                             the command is deprecated.

    .. versionchanged:: 8.1
        ``help``, ``epilog``, and ``short_help`` are stored unprocessed,
        all formatting is done when outputting help text, not at init,
        and is done even if not using the ``@command`` decorator.

    .. versionchanged:: 8.0
        Added a ``repr`` showing the command name.

    .. versionchanged:: 7.1
        Added the ``no_args_is_help`` parameter.

    .. versionchanged:: 2.0
        Added the ``context_settings`` parameter.
    Tnnnnnnu[OPTIONS]tFppastrabooluCommand.__init__uCommand.to_info_dictuCommand.get_usageuCommand.get_paramsaformatteruCommand.format_usageuCommand.collect_usage_piecesuCommand.get_help_option_namesuCommand.get_help_optionuCommand.make_parseruCommand.get_helpTl-aintuCommand.get_short_help_struCommand.format_helpuCommand.format_help_textuCommand.format_optionsuCommand.format_epiloguCommand.parse_argsuCommand.invokeuCommand.shell_completeuA multi command is the basic implementation of a command that
    dispatches to subcommands.  The most common version is the
    :class:`Group`.

    :param invoke_without_command: this controls how the multi command itself
                                   is invoked.  By default it's only invoked
                                   if a subcommand is provided.
    :param no_args_is_help: this controls what happens if no arguments are
                            provided.  This option is enabled by default if
                            `invoke_without_command` is disabled or disabled
                            if it's enabled.  If enabled this will add
                            ``--help`` as argument if no arguments are
                            passed.
    :param subcommand_metavar: the string that is used in the documentation
                               to indicate the subcommand place.
    :param chain: if this is set to `True` chaining of multiple subcommands
                  is enabled.  This restricts the form of commands in that
                  they cannot have optional arguments but it allows
                  multiple commands to be chained together.
    :param result_callback: The result callback to attach to this multi
        command. This can be set or changed later with the
        :meth:`result_callback` decorator.
    :param attrs: Other command arguments described in :class:`Command`.
    TnFnnFnaresult_callbackaattrsuMultiCommand.__init__uMultiCommand.to_info_dictuMultiCommand.collect_usage_piecesuMultiCommand.format_optionsuMultiCommand.result_callbackuMultiCommand.format_commandsuMultiCommand.parse_argsuMultiCommand.invokeuMultiCommand.resolve_commanduMultiCommand.get_commanduMultiCommand.list_commandsuMultiCommand.shell_completeuA group allows a command to have subcommands attached. This is
    the most common way to implement nesting in Click.

    :param name: The name of the group command.
    :param commands: A dict mapping names to :class:`Command` objects.
        Can also be a list of :class:`Command`, which will use
        :attr:`Command.name` to create the dict.
    :param attrs: Other command arguments described in
        :class:`MultiCommand`, :class:`Command`, and
        :class:`BaseCommand`.

    .. versionchanged:: 8.0
        The ``commands`` argument can be a list of command objects.
    TnnuGroup.__init__acmduGroup.add_commanda_Group__funcuGroup.commanduGroup.groupuGroup.get_commanduGroup.list_commandsaCommandCollectionuA command collection is a multi command that merges multiple multi
    commands together into one.  This is a straightforward implementation
    that accepts a list of different multi commands as sources and
    provides all the commands for each of them.

    See :class:`MultiCommand` and :class:`Command` for the description of
    ``name`` and ``attrs``.
    uCommandCollection.__init__amulti_cmdaadd_sourceuCommandCollection.add_sourceuCommandCollection.get_commanduCommandCollection.list_commandsuA parameter to a command comes in two versions: they are either
    :class:`Option`\s or :class:`Argument`\s.  Other subclasses are currently
    not supported by design as some of the internals for parsing are
    intentionally not finalized.

    Some settings are supported by both options and arguments.

    :param param_decls: the parameter declarations for this option or
                        argument.  This is a list of flags or argument
                        names.
    :param type: the type that should be used.  Either a :class:`ParamType`
                 or a Python type.  The latter is converted into the former
                 automatically if supported.
    :param required: controls if this is optional or not.
    :param default: the default value if omitted.  This can also be a callable,
                    in which case it's invoked when the default is needed
                    without any arguments.
    :param callback: A function to further process or validate the value
        after type conversion. It is called as ``f(ctx, param, value)``
        and must return the value. It is called for all sources,
        including prompts.
    :param nargs: the number of arguments to match.  If not ``1`` the return
                  value is a tuple instead of single value.  The default for
                  nargs is ``1`` (except if the type is a tuple, then it's
                  the arity of the tuple). If ``nargs=-1``, all remaining
                  parameters are collected.
    :param metavar: how the value is represented in the help page.
    :param expose_value: if this is `True` then the value is passed onwards
                         to the command callback and stored on the context,
                         otherwise it's skipped.
    :param is_eager: eager values are processed before non eager ones.  This
                     should not be set for arguments or it will inverse the
                     order of processing.
    :param envvar: a string or list of strings that are environment variables
                   that should be checked.
    :param shell_complete: A function that returns custom shell
        completions. Used instead of the param's type completion if
        given. Takes ``ctx, param, incomplete`` and must return a list
        of :class:`~click.shell_completion.CompletionItem` or a list of
        strings.

    .. versionchanged:: 8.0
        ``process_value`` validates required parameters and bounded
        ``nargs``, and invokes the parameter callback before returning
        the value. This allows the callback to validate prompts.
        ``full_process_value`` is removed.

    .. versionchanged:: 8.0
        ``autocompletion`` is renamed to ``shell_complete`` and has new
        semantics described above. The old name is deprecated and will
        be removed in 8.1, until then it will be wrapped to match the
        new requirements.

    .. versionchanged:: 8.0
        For ``multiple=True, nargs>1``, the default must be a list of
        tuples.

    .. versionchanged:: 8.0
        Setting a default is no longer required for ``nargs>1``, it will
        default to ``None``. ``multiple=True`` or ``nargs=-1`` will
        default to ``()``.

    .. versionchanged:: 7.1
        Empty environment variables are ignored rather than taking the
        empty string value. This makes it possible for scripts to clear
        variables if they can't unset them.

    .. versionchanged:: 2.0
        Changed signature for parameter callback to also be passed the
        parameter. The old callback format will still work, but it will
        raise a warning to give you a chance to migrate the code easier.
    aparameterTnnFnnnFntFnnaparam_declsaParamTypeuParameter.__init__uParameter.to_info_dictuParameter.__repr__adeclsuParameter._parse_declsuParameter.human_readable_nameuParameter.make_metavaruParameter.get_defaultuParameter.add_to_parseraMappinguParameter.consume_valueuParameter.type_cast_valueuParameter.value_is_missinguParameter.process_valueuParameter.resolve_envvar_valueuParameter.value_from_envvaruParameter.handle_parse_resultTOstrpuParameter.get_help_recorduParameter.get_usage_piecesaget_error_hintuParameter.get_error_hintuParameter.shell_completeuOptions are usually optional values on the command line and
    have some extra features that arguments don't have.

    All other parameters are passed onwards to the parameter constructor.

    :param show_default: Show the default value for this option in its
        help text. Values are not shown by default, unless
        :attr:`Context.show_default` is ``True``. If this value is a
        string, it shows that string in parentheses instead of the
        actual value. This is particularly useful for dynamic options.
        For single option boolean flags, the default remains hidden if
        its value is ``False``.
    :param show_envvar: Controls if an environment variable should be
        shown on the help page. Normally, environment variables are not
        shown.
    :param prompt: If set to ``True`` or a non empty string then the
        user will be prompted for input. If set to ``True`` the prompt
        will be the option name capitalized.
    :param confirmation_prompt: Prompt a second time to confirm the
        value if it was prompted for. Can be set to a string instead of
        ``True`` to customize the message.
    :param prompt_required: If set to ``False``, the user will be
        prompted for input only when the option was specified as a flag
        without a value.
    :param hide_input: If this is ``True`` then the input on the prompt
        will be hidden from the user. This is useful for password input.
    :param is_flag: forces this option to act as a flag.  The default is
                    auto detection.
    :param flag_value: which value should be used for this flag if it's
                       enabled.  This is set to a boolean automatically if
                       the option string contains a slash to mark two options.
    :param multiple: if this is set to `True` then the argument is accepted
                     multiple times and recorded.  This is similar to ``nargs``
                     in how it works but supports arbitrary number of
                     arguments.
    :param count: this flag makes an option increment an integer.
    :param allow_from_autoenv: if this is enabled then the value of this
                               parameter will be pulled from an environment
                               variable in case a prefix is defined on the
                               context.
    :param help: the help string.
    :param hidden: hide this option from help outputs.
    :param attrs: Other command arguments described in :class:`Parameter`.

    .. versionchanged:: 8.1.0
        Help text indentation is cleaned here instead of only in the
        ``@option`` decorator.

    .. versionchanged:: 8.1.0
        The ``show_default`` parameter overrides
        ``Context.show_default``.

    .. versionchanged:: 8.1.0
        The default of a single option boolean flag is not shown if the
        default value is ``False``.

    .. versionchanged:: 8.0.1
        ``type`` is detected from ``flag_value`` if given.
    aoptionTnnFptFnnFptnnFtFuOption.__init__uOption.to_info_dictuOption._parse_declsuOption.add_to_parseruOption.get_help_recorduOption.get_defaultuOption.prompt_for_valueuOption.resolve_envvar_valueuOption.value_from_envvaruOption.consume_valueuArguments are positional parameters to a command.  They generally
    provide fewer features than options but can have infinite ``nargs``
    and are required by default.

    All parameters are passed onwards to the constructor of :class:`Parameter`.
    aargumentuArgument.__init__apropertyuArgument.human_readable_nameuArgument.make_metavaruArgument._parse_declsuArgument.get_usage_piecesuArgument.get_error_hintuArgument.add_to_parseruclick\core.pyTa.0anameacommandactxaCompletionItemTa.0anameaincompleteaCompletionItemaparamTa__class__Ta.0acmdTa.0wvTa.0wdTa.0wxTa.0wxaconvertTa.0wxaselfactxTacheck_iteractxaselfTwxTwxaselfactxTactxaselfu<module click.core>TaselfaargsakwargsTaselfTaselfaexc_typeaexc_valueatbTaselfaparam_declsarequiredaattrsa__class__Taselfanameacontext_settingsTaselfanameacontext_settingsacallbackaparamsahelpaepilogashort_helpaoptions_metavaraadd_help_optionano_args_is_helpahiddenadeprecateda__class__Taselfanameasourcesaattrsa__class__Taselfacommandaparentainfo_nameaobjaauto_envvar_prefixadefault_mapaterminal_widthamax_content_widtharesilient_parsingaallow_extra_argsaallow_interspersed_argsaignore_unknown_optionsahelp_option_namesatoken_normalize_funcacolorashow_defaultTaselfanameacommandsaattrsa__class__T
aselfanameainvoke_without_commandano_args_is_helpasubcommand_metavarachainaresult_callbackaattrsaparama__class__Taselfaparam_declsashow_defaultapromptaconfirmation_promptaprompt_requiredahide_inputais_flagaflag_valueamultipleacountaallow_from_autoenvatypeahelpahiddenashow_choicesashow_envvaraattrsaprompt_textadefault_is_missinga__class__Taselfaparam_declsatypearequiredadefaultacallbackanargsamultipleametavaraexpose_valueais_eageraenvvarashell_completeacheck_defaultamessageasubjectTavalueTabase_commandacmd_nameacmdaregisterahintTactxaincompleteamultianameacommandTaselfactx_argsaprog_nameacomplete_varacomplete_nameainstructionashell_completearvTaselfacommandTaselfadeclsaexpose_valueanameaargTaselfadeclsaexpose_valueaoptsasecondary_optsanameapossible_namesadeclasplit_charafirstasecondTaselfadeclsaexpose_valueTavalueaselfactxTaoptsaany_prefix_is_slasharvaany_slashesaselfTaany_prefix_is_slashaselfTaselfacmdanameTaselfamulti_cmdTaselfaparseractxTaselfaparseractxaactionTactxaparamweTaiterableabatch_sizeTaselfwfTavalueactxaselfTaselfactxarvaparamTaselfactxarva__class__Taselfa_Group__funcTaselfaargsakwargsafuncacommandadecoratorTaselfarvaparent_command_pathaparamTaselfactxaoptsavalueasourcea__class__TaselfactxaoptsavalueasourceTavalueacheck_iterTavalueacheck_iteraselfactxTwfacmdacommandaargsakwargsaselfTaargsacommandakwargsaselfTwfacmdagroupaargsakwargsaselfTaargsagroupakwargsaselfTwfaold_callbackafunctionarvaselfareplaceTareplaceaselfTaselfaobject_typearvTaselfacodeTaselfamessageTaselfaobject_typeanodeTaselfanodeTaselfactxaformatteracommandsasubcommandacmdalimitarowsahelpTaselfactxaformatteraepilogTaselfactxaformatterTaselfactxaformatteratextTaselfactxaformatteraoptsaparamarvTaselfactxaformattera__class__TaselfactxaformatterapiecesTa_Context__selfa_Context__cmdaargsakwargsaparamTa_MultiCommand__valueaargsakwargsainneraold_callbackwfTwfaold_callbackTaselfactxacmd_nameasourcearvTaselfactxacmd_nameTaselfactxacallTaselfactxacallaparama__class__TaselfactxacallavalueTaselfactxTaselfactxahint_listTaselfactxahelp_optionsashow_helpTaselfactxaall_namesaparamTaselfactxaany_prefix_is_slasha_write_optsarvahelpaextraaenvvaravar_straresilientadefault_valueashow_defaultashow_default_is_stradefault_stringarange_straextra_strTaselfanameTaselfactxarvahelp_optionTaselfalimitatextTaselfaargsakwargsafuncagroupadecoratorTaselfactxaoptsaargsavalueasourceTaselfactxamessageTa_Context__selfa_Context__callbackaargsakwargsTa_Context__selfa_Context__callbackaargsakwargsaother_cmdactxaparamT
aselfactxa_process_resultarvaargsacmd_nameacmdasub_ctxacontextsa__class__Tainvocation_orderadeclaration_orderasort_keyTaselfactxarvasourceTaselfanameacallTaselfanameacallavalueTaselfaargsaprog_nameacomplete_varastandalone_modeaextraT
aselfaargsaprog_nameacomplete_varastandalone_modeawindows_expand_argsaextraactxarvweTaselfainfo_nameaargsaparentaextraakeyavalueactxTaselfavarTaselfametavarTaselfactxaparseraparamTaselfactxaargsTaselfactxaargsaparseraoptsaparam_orderaparamavalueTaselfactxaargsaresta__class__TaselfactxavalueTaselfactxadefaultTaselfactxaargsacmd_nameaoriginal_cmd_nameacmdTaselfactxarvaenvvara__class__TaselfactxarvaenvvarTaselfareplaceadecoratorTaselfacleanuparvTaselfanameasourceTaselfactxaincompletearesultsaCompletionItemTaselfactxaincompletearesultsaCompletionItemaparama__class__TaselfactxaincompleteaCompletionItemaresultsa__class__TactxaparamavalueTaitemaidxainvocation_orderTainvocation_orderTaselfactxainfo_dicta__class__Taselfactxainfo_dictacommandsanameacommandasub_ctxa__class__Taselfainfo_dicta__class__Taselfactxavalueacheck_iteraconvertTaselfactxarvavalue_depthTaselfactxarvTaselfavalueTaselfacontext_manager.click.decorators*DaargsakwargsareturnuP.argsuP.kwargswRanew_funcupass_context.<locals>.new_funcaupdate_wrapperuMarks a callback as wanting to receive the current context
    object as first argument.
    wfaget_current_contextupass_obj.<locals>.new_funcuSimilar to :func:`pass_context`, but only pass the object on the
    context onwards (:attr:`Context.obj`).  This is useful if that object
    represents the state of a nested system.
    aobjDwfareturnut.Callable[te.Concatenate[T, P], R]ut.Callable[P, R]adecoratorumake_pass_decorator.<locals>.decoratoruGiven an object type this creates a decorator that will work
    similar to :func:`pass_obj` but instead of passing the object of the
    current context, it will find the innermost context of type
    :func:`object_type`.

    This generates a decorator that works roughly like this::

        from functools import update_wrapper

        def decorator(f):
            @pass_context
            def new_func(ctx, *args, **kwargs):
                obj = ctx.find_object(object_type)
                return ctx.invoke(f, obj, *args, **kwargs)
            return update_wrapper(new_func, f)
        return decorator

    :param object_type: the type of the object to pass.
    :param ensure: if set to `True`, a new object will be created and
                   remembered on the context if it's not there yet.
    umake_pass_decorator.<locals>.decorator.<locals>.new_funcaensureaensure_objectaobject_typeafind_objectuManaged to invoke callback without a context object of type a__name__uu existing.actxainvokeDwfareturnut.Callable[te.Concatenate[t.Any, P], R]ut.Callable[P, R]upass_meta_key.<locals>.decoratoruthe u key from :attr:`click.Context.meta`uDecorator that passes u as the first argument to the decorated function.a__doc__uCreate a decorator that passes a key from
    :attr:`click.Context.meta` as the first argument to the decorated
    function.

    :param key: Key in ``Context.meta`` to pass.
    :param doc_description: Description of the object being passed,
        inserted into the decorator's docstring. Defaults to "the 'key'
        key from Context.meta".

    .. versionadded:: 8.0
    aargsuP.argsakwargsuP.kwargsareturnwRupass_meta_key.<locals>.decorator.<locals>.new_funcametaakeyacallableTuUse 'command(cls=cls)(callable)' to specify a class.TuUse 'command(**kwargs)(callable)' to provide arguments.acastaTypeaCmdTypeaCommanda_AnyCallableucommand.<locals>.decoratoruCreates a new :class:`Command` and uses the decorated function as
    callback.  This will also automatically attach all decorated
    :func:`option`\s and :func:`argument`\s as parameters to the command.

    The name of the command defaults to the name of the function with
    underscores replaced by dashes.  If you want to change that, you can
    pass the intended name as the first argument.

    All keyword arguments are forwarded to the underlying command class.
    For the ``params`` argument, any decorated params are appended to
    the end of the list.

    Once decorated the function turns into a :class:`Command` instance
    that can be invoked as a command line utility or be attached to a
    command :class:`Group`.

    :param name: the name of the command.  This defaults to the function
                 name with underscores replaced by dashes.
    :param cls: the command class to instantiate.  This defaults to
                :class:`Command`.

    .. versionchanged:: 8.1
        This decorator can be applied without parentheses.

    .. versionchanged:: 8.1
        The ``params`` argument can be used. Decorated params are
        appended to the end of the list.
    uAttempted to convert a callback into a command twice.aattrsapopTaparamsna__click_params__aextendadecorator_paramsagetTahelpahelpaclsanamealowerareplaceTw_w-acallbackaparamsaGrpTypeaGroupacommanduCreates a new :class:`Group` with a function as callback.  This
    works otherwise the same as :func:`command` just that the `cls`
    parameter is set to :class:`Group`.

    .. versionchanged:: 8.1
        This decorator can be applied without parentheses.
    aappendaArgumentaFCuargument.<locals>.decoratoruAttaches an argument to the command.  All positional arguments are
    passed as parameter declarations to :class:`Argument`; all keyword
    arguments are forwarded unchanged (except ``cls``).
    This is equivalent to creating an :class:`Argument` instance manually
    and attaching it to the :attr:`Command.params` list.

    For the default argument class, refer to :class:`Argument` and
    :class:`Parameter` for descriptions of parameters.

    :param cls: the argument class to instantiate.  This defaults to
                :class:`Argument`.
    :param param_decls: Passed as positional arguments to the constructor of
        ``cls``.
    :param attrs: Passed as keyword arguments to the constructor of ``cls``.
    a_param_memoaparam_declsaOptionuoption.<locals>.decoratoruAttaches an option to the command.  All positional arguments are
    passed as parameter declarations to :class:`Option`; all keyword
    arguments are forwarded unchanged (except ``cls``).
    This is equivalent to creating an :class:`Option` instance manually
    and attaching it to the :attr:`Command.params` list.

    For the default option class, refer to :class:`Option` and
    :class:`Parameter` for descriptions of parameters.

    :param cls: the option class to instantiate.  This defaults to
                :class:`Option`.
    :param param_decls: Passed as positional arguments to the constructor of
        ``cls``.
    :param attrs: Passed as keyword arguments to the constructor of ``cls``.
    aContextaparamaParameteravalueuconfirmation_option.<locals>.callbackTu--yesais_flagasetdefaultTaexpose_valueFTapromptuDo you want to continue?TahelpuConfirm the action without prompting.aoptionuAdd a ``--yes`` option which shows a prompt before continuing if
    not passed. If the prompt is declined, the program will exit.

    :param param_decls: One or more option names. Defaults to the single
        value ``"--yes"``.
    :param kwargs: Extra arguments are passed to :func:`option`.
    aabortTu--passwordapromptTaconfirmation_prompttTahide_inputtuAdd a ``--password`` option which prompts for a password, hiding
    input and asking to enter the value again for confirmation.

    :param param_decls: One or more option names. Defaults to the single
        value ``"--password"``.
    :param kwargs: Extra arguments are passed to :func:`option`.
    w_Tu%(prog)s, version %(version)saversionainspectacurrentframeaf_backaf_globalsTa__name__a__main__Ta__package__apackage_nameapartitionTw.luversion_option.<locals>.callbackTu--versionTais_eagertTuShow the version and exit.uAdd a ``--version`` option which immediately prints the version
    number and exits the program.

    If ``version`` is not provided, Click will try to detect it using
    :func:`importlib.metadata.version` to get the version for the
    ``package_name``. On Python < 3.8, the ``importlib_metadata``
    backport must be installed.

    If ``package_name`` is not provided, Click will try to detect it by
    inspecting the stack frames. This will be used to detect the
    version, so it must match the name of the installed package.

    :param version: The version number to show. If not provided, Click
        will try to detect it.
    :param param_decls: One or more option names. Defaults to the single
        value ``"--version"``.
    :param package_name: The package name to detect the version from. If
        not provided, Click will try to detect it.
    :param prog_name: The name of the CLI to show in the message. If not
        provided, it will be detected from the command.
    :param message: The message to show. The values ``%(prog)s``,
        ``%(package)s``, and ``%(version)s`` are available. Defaults to
        ``"%(prog)s, version %(version)s"``.
    :param kwargs: Extra arguments are passed to :func:`option`.
    :raise RuntimeError: ``version`` could not be detected.

    .. versionchanged:: 8.0
        Add the ``package_name`` parameter, and the ``%(package)s``
        value for messages.

    .. versionchanged:: 8.0
        Use :mod:`importlib.metadata` instead of ``pkg_resources``. The
        version is detected based on the package name, not the entry
        point name. The Python package name must match the installed
        package name, or be passed with ``package_name=``.
    aresilient_parsingaprog_nameafind_rootainfo_nameaPackageNotFoundErroru is not installed. Try passing 'package_name' instead.uCould not determine the version for u automatically.aechoamessageaprogapackageacolorTacoloraexituhelp_option.<locals>.callbackTu--helpTuShow this message and exit.uAdd a ``--help`` option which immediately prints the help page
    and exits the program.

    This is usually unnecessary, as the ``--help`` option is added to
    each command automatically unless ``add_help_option=False`` is
    passed.

    :param param_decls: One or more option names. Defaults to the single
        value ``"--help"``.
    :param kwargs: Extra arguments are passed to :func:`option`.
    aget_helpa__file__a__spec__aoriginahas_locationa__cached__atypeswtagettextTagettextacoreTaArgumentlTaCommandTaContextTaGroupTaOptionTaParameteraglobalsTaget_current_contextautilsTaechoaTypeVarTwRTwTwTaCallableaAnyaUnionTaFCTaboundDwfareturnut.Callable[te.Concatenate[Context, P], R]ut.Callable[P, R]apass_contextapass_objTFTLut.Callable[te.Concatenate[T, P], R]ut.Callable[P, R]amake_pass_decoratorDadoc_descriptionnadoc_descriptionaOptionalut.Callable[[t.Callable[te.Concatenate[t.Any, P], R]], t.Callable[P, R]]apass_meta_keyTaCmdTypeaoverloadTnTQnTnnTaGrpTypeagroupDaclsnaargumentaconfirmation_optionapassword_optionDapackage_nameaprog_nameamessagennnaversion_optionahelp_optionuclick\decorators.pyu<module click.decorators>TwfaparamTaclsaparam_declsaattrsadecoratorTactxaparamavalueTactxaparamavalueametadataaprog_nameaversionapackage_nameamessageTamessageapackage_nameaprog_nameaversionTanameTanameaclsaattrsTanameaclsaattrsafuncadecoratorTaparam_declsakwargsacallbackTwfaclsaparam_declsaattrsTaattrsaclsaparam_declsTwfaattr_paramsaparamsadecorator_paramsacmdaattrsaclsanameTaattrsaclsanameTwfanew_funcTaensureaobject_typeTakeyTaobject_typeaensureadecoratorTaargsakwargsaobjactxaensureaobject_typewfTaensurewfaobject_typeTaargsakwargswfTwfTaargsakwargsactxaobjakeywfTwfakeyTakeyadoc_descriptionadecoratorTaparam_declsakwargsT
aversionapackage_nameaprog_nameamessageaparam_declsakwargsaframeaf_backaf_globalsacallback.click.exceptionsu / u<genexpr>u_join_param_hints.<locals>.<genexpr>a__class__a__init__amessageaget_text_stderraechow_TuError: {message}aformataformat_messageTamessageTafileactxacommandacmduaget_help_optionTuTry '{command} {option}' for help.acommand_pathahelp_option_nameslTacommandaoptionw
acoloraget_usageTafileacoloraparamaparam_hintaget_error_hintTuInvalid value: {message}TuInvalid value for {param_hint}: {message}a_join_param_hintsTaparam_hintamessageaparam_typew aparam_type_nameatypeaget_missing_messageu. aargumentTuMissing argumentaoptionTuMissing optionaparameterTuMissing parameterTuMissing {param_type}Taparam_typew.anameTuMissing parameter: {param_name}Taparam_nameTuNo such option: {name}Tanameaoption_nameapossibilitiesu, asortedangettextuDid you mean {possibility}?u(Possible options: {possibilities})TapossibilityapossibilitiesTuunknown erroraformat_filenameaui_filenameafilenameTuCould not open file {filename!r}: {message}Tafilenameamessageaexit_codea__doc__a__file__a__spec__aoriginahas_locationa__cached__wtagettextTagettextTangettexta_compatTaget_text_stderrlautilsTaechoTaformat_filenameaOptionalaUnionaSequenceareturnTEExceptiona__prepare__aClickExceptiona__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uclick.exceptionsa__module__uAn exception that Click can handle and show to the user.a__qualname__astruClickException.__init__uClickException.format_messagea__str__uClickException.__str__TnafileaIOaAnyashowuClickException.showa__orig_bases__aUsageErroruAn internal exception that signals a usage error.  This typically
    aborts any further handling.

    :param message: the error message to display.
    :param ctx: optionally the context that caused this error.  Click will
                fill in the context automatically in some situations.
    laContextuUsageError.__init__uUsageError.showaBadParameteruAn exception that formats out a standardized error message for a
    bad parameter.  This is useful when thrown from a callback or type as
    Click will attach contextual information to it (for instance, which
    parameter it is).

    .. versionadded:: 2.0

    :param param: the parameter object that caused this error.  This can
                  be left out, and Click will attach this info itself
                  if possible.
    :param param_hint: a string that shows up as parameter name.  This
                       can be used as alternative to `param` in cases
                       where custom validation should happen.  If it is
                       a string it's used as such, if it's a list then
                       each item is quoted and separated.
    TnnnaParameteruBadParameter.__init__uBadParameter.format_messageaMissingParameteruRaised if click required an option or argument but it was not
    provided when invoking the script.

    .. versionadded:: 4.0

    :param param_type: a string that indicates the type of the parameter.
                       The default is to inherit the parameter type from
                       the given `param`.  Valid values are ``'parameter'``,
                       ``'option'`` or ``'argument'``.
    TnnnnnuMissingParameter.__init__uMissingParameter.format_messageuMissingParameter.__str__aNoSuchOptionuRaised if click attempted to handle an option that does not
    exist.

    .. versionadded:: 4.0
    uNoSuchOption.__init__uNoSuchOption.format_messageaBadOptionUsageuRaised if an option is generally supplied but the use of the option
    was incorrect.  This is for instance raised if the number of arguments
    for an option is not correct.

    .. versionadded:: 4.0

    :param option_name: the name of the option being used incorrectly.
    uBadOptionUsage.__init__aBadArgumentUsageuRaised if an argument is generally supplied but the use of the argument
    was incorrect.  This is for instance raised if the number of values
    for an argument is not correct.

    .. versionadded:: 6.0
    aFileErroruRaised if a file cannot be opened.ahintuFileError.__init__uFileError.format_messageTERuntimeErroraAbortuAn internal signalling exception that signals Click to abort.aExituAn exception that indicates that the application should exit with some
    status code.

    :param code: the status code to exit with.
    Taexit_codea__slots__TlacodeaintuExit.__init__uclick\exceptions.pyTa.0wxu<module click.exceptions>Ta__class__Taselfaoption_nameamessageactxa__class__Taselfamessageactxaparamaparam_hinta__class__Taselfamessagea__class__TaselfacodeTaselfafilenameahinta__class__Taselfamessageactxaparamaparam_hintaparam_typea__class__Taselfaoption_nameamessageapossibilitiesactxa__class__Taselfamessageactxa__class__TaselfTaselfaparam_nameTaparam_hintTaselfaparam_hintTaselfaparam_hintaparam_typeamsgamsg_extraamissingTaselfapossibility_strasuggestTaselfafileTaselfafileacolorahint.click.formatting}utoo many values to unpack (expected 2)amaxawidthslaterm_lenasortedu<genexpr>umeasure_table.<locals>.<genexpr>arowsTuacol_countaiter_rowsa_textwrapTaTextWrapperlaTextWrapperaexpandtabsTainitial_indentasubsequent_indentareplace_whitespaceafillDareturnna_flush_paruwrap_text.<locals>._flush_parasplitlinesaindentalstripabufaappendalineutoo many values to unpack (expected 3)awrapperaextra_indentw a__enter__a__exit__arvaindent_onlyTnnnu

uA helper function that intelligently wraps text.  By default, it
    assumes that it operates on a single paragraph of text but if the
    `preserve_paragraphs` parameter is provided it will intelligently
    handle paragraphs (defined by two empty lines).

    If paragraphs are handled, a paragraph can be prefixed with an empty
    line containing the ``\b`` character (``\x08``) to indicate that
    no rewrapping should happen in that block.

    :param text: the text that should be rewrapped.
    :param width: the maximum width for the text.
    :param initial_indent: the initial indent that should be placed on the
                           first line as a string.
    :param subsequent_indent: the indent string that should be placed on
                              each consecutive line.
    :param preserve_paragraphs: if this flag is set then the wrapping will
                                intelligently handle paragraphs.
    astripwwpw
:lnn:nnnashutilaindent_incrementlPaFORCED_WIDTHaminaget_terminal_sizeacolumnsll2awidthacurrent_indentabufferuWrites a unicode string into the internal buffer.uIncreases the indentation.uDecreases the indentation.w_TuUsage:uw>lawriteawrap_textTainitial_indentasubsequent_indentTw
luWrites a usage line into the buffer.

        :param prog: the program name.
        :param args: whitespace separated list of arguments.
        :param prefix: The prefix for the first line. Defaults to
            ``"Usage: "``.
        u:
uWrites a heading into the buffer.uWrites a paragraph into the buffer.Tainitial_indentasubsequent_indentapreserve_paragraphsuWrites re-indented text into the buffer.  This rewraps and
        preserves paragraphs.
        ameasure_tableuExpected two columns for definition listaselfafirst_colacol_spacingl
Dapreserve_paragraphstuWrites a definition list into the buffer.  This is how options
        and commands are usually formatted.

        :param rows: a list of two item tuples for the terms and values.
        :param col_max: the maximum width of the first column.
        :param col_spacing: the number of spaces between the first and
                            second column.
        uHelpful context manager that writes a paragraph, a heading,
        and the indents.

        :param name: the section name that is written as heading.
        awrite_paragraphawrite_headinganameadedentasectionuHelpFormatter.sectionuA context manager that increases the indentation.aindentationuHelpFormatter.indentationuReturns the buffer contents.asplit_optw/asortu<lambda>ujoin_options.<locals>.<lambda>Takeyu, aany_prefix_is_slashuGiven a list of option strings this joins them in the most appropriate
    way and returns them in the form ``(formatted_string,
    any_prefix_is_slash)`` where the second item in the tuple is a flag that
    indicates if any of the option prefixes was a slash.
    ujoin_options.<locals>.<genexpr>a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__wtacontextlibTacontextmanageracontextmanageragettextTagettexta_compatTaterm_lenaparserTasplit_optaOptionalaIterableaTupleTOstrpareturnTOintQaIteratorTOstrQTlNupFDatextawidthainitial_indentasubsequent_indentapreserve_paragraphsareturnOstrOintOstrpOboolOstruclick.formattinga__module__uThis class helps with formatting text-based help pages.  It's
    usually just needed for very special internal cases, but it's also
    exposed so that developers can write their own fancy outputs.

    At present, it always writes into memory.

    :param indent_increment: the additional increment for each level.
    :param width: the width for the text.  This defaults to the terminal
                  width clamped to a maximum of 78.
    aHelpFormattera__qualname__Tlnnamax_widtha__init__uHelpFormatter.__init__DastringareturnOstrnuHelpFormatter.writeuHelpFormatter.indentuHelpFormatter.dedentTunaprogaargsaprefixawrite_usageuHelpFormatter.write_usageDaheadingareturnOstrnuHelpFormatter.write_headinguHelpFormatter.write_paragraphDatextareturnOstrnawrite_textuHelpFormatter.write_textTllaSequenceacol_maxawrite_dluHelpFormatter.write_dlDareturnOstragetvalueuHelpFormatter.getvalueaoptionsTOstrOboolajoin_optionsuclick\formatting.pyTa.0wxTa.0wxwyTwxu<module click.formatting>Ta__class__Taselfaindent_incrementawidthamax_widthashutilTabufwpaindentTabufaindentwpTaselfTarowsacol_countarowTaoptionsarvaany_prefix_is_slashaoptaprefixTarowsawidthsarowaidxacolTaselfanameTatextawidthainitial_indentasubsequent_indentapreserve_paragraphswpabufaTextWrapperawrapperaindenta_flush_paralineaorig_lenarvarawTaselfastringTaselfarowsacol_maxacol_spacingawidthsafirst_colafirstasecondatext_widthawrapped_textalinesalineTaselfaheadingTaselfatextaindentTaselfaprogaargsaprefixausage_prefixatext_widthaindent.click.globals0acastaContexta_localastackqTEAttributeErrorEIndexErroruThere is no active click context.uReturns the current click context.  This can be used as a way to
    access the current context object from anywhere.  This is a more implicit
    alternative to the :func:`pass_context` decorator.  This function is
    primarily useful for helpers such as :func:`echo` which might be
    interested in changing its behavior based on the current context.

    To push the current context, :meth:`Context.scope` can be used.

    .. versionadded:: 5.0

    :param silent: if set to `True` the return value is `None` if no context
                   is available.  The default behavior is to raise a
                   :exc:`RuntimeError`.
    asetdefaultaappenduPushes a new context to the current stack.apopuRemoves the top level from the stack.aget_current_contextTtTasilentacoloruInternal helper to get the default value of the color flag.  If a
    value is passed it's returned unchanged, otherwise it's looked up from
    the current context.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__wtathreadingTalocallalocalaoverloadTFDasilentareturnute.Literal[False]aContextTQasilentareturnaOptionalDactxareturnaContextnapush_contextDareturnnapop_contextTnaresolve_color_defaultuclick\globals.pyu<module click.globals>TasilentweTactxTacoloractxu.click.parseradequewcute.Deque[V]areturnaOptionalwVa_fetchu_unpack_args.<locals>._fetchanargs_speclarvaargsasposareverseluCannot have two nargs < 0uGiven an iterable of arguments and an iterable of nargs specifications,
    it returns a tuple with all the unpacked arguments at the first index
    and all remaining arguments as the second.

    The nargs specification is the number of arguments that should be consumed
    or `-1` to indicate that this position should eat up all the remainders.

    Missing items are filled with `None`.
    apopleftapop:nlnaisalnumu:lln:nln:lnn:lnnatoken_normalize_funcasplit_optutoo many values to unpack (expected 2)ashlexDaposixtawhitespace_splitacommentersaoutatokenuSplit an argument string as with :func:`shlex.split`, but don't
    fail if the string is incomplete. Ignores a missing closing quote or
    incomplete escape sequence and uses the partial token as-is.

    .. code-block:: python

        split_arg_string("example 'my file")
        ["example", "my file"]

        split_arg_string("example my\")
        ["example", "my"]

    :param string: String to split.
    a_short_optsa_long_optsaprefixesuInvalid start character for option (w)aselfaaddaappendastoreadestaactionanargsaconstaobjTastoreaappendaoptsastore_constasetdefaultaappend_constacountagetuunknown action 'w'astateaorderaBadArgumentUsagew_TuArgument {name!r} takes {nargs} values.aformatTanameanargsqaenvvaravalueu<genexpr>uArgument.process.<locals>.<genexpr>alargsarargsactxaallow_interspersed_argsaignore_unknown_optionsa_short_opta_long_optSu--w-a_opt_prefixesa_argsanormalize_optaOptionTaactionanargsaconstaupdateaoptionuAdds a new option named `dest` to the parser.  The destination
        is not inferred (unlike with optparse) and needs to be explicitly
        provided.  Action can be any of ``store``, ``store_const``,
        ``append``, ``append_const`` or ``count``.

        The `obj` can be used to identify the option in the order list
        that is returned from the parser.
        aArgumentTadestanargsuAdds a positional argument named `dest` to the parser.

        The `obj` can be used to identify the option in the order list
        that is returned from the parser.
        aParsingStatea_process_args_for_optionsa_process_args_for_argsaUsageErroraresilient_parsinguParses positional arguments and returns ``(values, args, order)``
        for the parsed options and arguments as well as the leftover
        arguments if there are any.  The order is a list of objects as they
        appear on the command line.  If arguments appear multiple times they
        will be memorized multiple times as well.
        a_unpack_argsaprocessTlu--a_process_optsainsertadifflibTaget_close_matchesaget_close_matchesaNoSuchOptionTapossibilitiesactxatakes_valuea_get_value_from_stateaBadOptionUsageTuOption {name!r} does not take a value.Tanamewiaunknown_optionsTactxastopa_flag_needs_valueangettextuOption {name!r} requires an argument.uOption {name!r} requires {nargs} arguments.w=asplitTw=la_match_long_optaarga_match_short_optu
This module started out as largely a copy paste from the stdlib's
optparse module with the features removed that we do not need from
optparse because we implement them in Click on a higher level (for
instance type handling, help formatting and a lot more).

The plan is to remove more and more from here over time.

The reason this is a different module and not optparse from the stdlib
is that there are differences in 2.x and 3.x about the error messages
generated and optparse in the stdlib uses gettext for no good reason
and might cause us issues.

Click uses parts of optparse written by Gregory P. Ward and maintained
by the Python Software Foundation. This is limited to code in parser.py.

Copyright 2001-2006 Gregory P. Ward. All rights reserved.
Copyright 2002-2006 Python Software Foundation. All rights reserved.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__wtacollectionsTadequeagettextTagettextTangettextaexceptionsTaBadArgumentUsageTaBadOptionUsageTaNoSuchOptionTaUsageErroraTypeVarTwVaSequenceaTupleaUnionaListaoptTOstrpaContextastringasplit_arg_stringuclick.parsera__module__a__qualname__TnlnaCoreOptionaAnya__init__uOption.__init__DareturnObooluOption.takes_valueuOption.processTlaCoreArgumentuArgument.__init__uArgument.processuParsingState.__init__uThe option parser is an internal class that is ultimately used to
    parse options and arguments.  It's modelled after optparse and brings
    a similar but vastly simplified API.  It should generally not be used
    directly as the high level Click classes wrap it for you.

    It's not nearly as extensible as optparse or argparse as it does not
    implement features that are implemented on a higher level (such as
    types or defaults).

    :param ctx: optionally the :class:`~click.Context` where this parser
                should go with.
    aOptionParserTnuOptionParser.__init__aadd_optionuOptionParser.add_optionaadd_argumentuOptionParser.add_argumentaDictaCoreParameteraparse_argsuOptionParser.parse_argsuOptionParser._process_args_for_argsuOptionParser._process_args_for_optionsaexplicit_valueuOptionParser._match_long_optuOptionParser._match_short_optaoption_nameuOptionParser._get_value_from_stateuOptionParser._process_optsuclick\parser.pyTa.0wxu<module click.parser>Ta__class__TaselfaobjadestanargsT
aselfaobjaoptsadestaactionanargsaconstaoptaprefixavalueTaselfactxTaselfarargsTwcasposTasposTaselfaoption_nameaoptionastateanargsavalueanext_rargTaselfaoptaexplicit_valueastateaget_close_matchesapossibilitiesaoptionavalueTaselfaargastateastopwiaprefixaunknown_optionsachaoptaoptionavalueTaselfastateapargsaargsaidxaargTaselfastateaargaarglenTaselfaargastateaexplicit_valuealong_optanorm_long_optTaargsanargs_specarvasposa_fetchanargswxTaselfaobjaoptsadestaactionanargsaconstaoptionaoptTaoptactxaprefixTaselfaargsastateTaselfavalueastateaholesTaselfavalueastateTastringashlexalexaoutatokenTaoptafirstTaself.click.shell_completion*apartitionTw_utoo many values to unpack (expected 3)aget_completion_classlasourceaecholacompleteuPerform shell completion for the given CLI program.

    :param cli: Command being called.
    :param ctx_args: Extra arguments to pass to
        ``cli.make_context``.
    :param prog_name: Name of the executable in the shell.
    :param complete_var: Name of the environment variable that holds
        the completion instruction.
    :param instruction: Value of ``complete_var`` with the completion
        instruction and shell, in the form ``instruction_shell``.
    :return: Status code to exit with.
    avalueatypeahelpa_infoagetacliactx_argsaprog_nameacomplete_varareasubu\W*uareplaceTw-w_aASCIITaflagsw_a_completionuThe name of the shell function defined by the completion
        script.
        acomplete_funcafunc_nameuVars for formatting :attr:`source_template`.

        By default this provides ``complete_func``, ``complete_var``,
        and ``prog_name``.
        asource_templateasource_varsuProduce the shell script that defines the completion
        function. By default this ``%``-style formats
        :attr:`source_template` with the dict returned by
        :meth:`source_vars`.
        uUse the env vars defined by the shell script to return a
        tuple of ``args, incomplete``. This must be implemented by
        subclasses.
        a_resolve_contexta_resolve_incompleteutoo many values to unpack (expected 2)ashell_completeuDetermine the context and last complete command or parameter
        from the complete args. Call that object's ``shell_complete``
        method to get the completions for the incomplete value.

        :param args: List of complete args before the incomplete value.
        :param incomplete: Value being completed. May be empty.
        uFormat a completion item into the form recognized by the
        shell script. This must be implemented by subclasses.

        :param item: Completion item to format.
        aget_completion_argsaget_completionsaselfaformat_completionw
uProduce the completion data to send back to the shell.

        By default this calls :meth:`get_completion_args`, gets the
        completions, then calls :meth:`format_completion` for each
        completion.
        asubprocessarunaPIPETLabashu-cuecho "${BASH_VERSION}"Tastdoutasearchu^(\d+)\.(\d+)\.\d+astdoutadecodeagroupsw4TuShell completion is not supported for Bash versions older than 4.4.DaerrtTuCouldn't detect Bash version, shell completion is not supported.a_check_versiona__class__asplit_arg_stringaenvironaCOMP_WORDSaCOMP_CWORDw,:lnnqapopwanamea_available_shellsuRegister a :class:`ShellComplete` subclass under the given name.
    The name will be provided by the completion instruction environment
    variable during completion.

    :param cls: The completion class that will handle completion for the
        shell.
    :param name: Name to register the class under. Defaults to the
        class's ``name`` attribute.
    uLook up a registered :class:`ShellComplete` subclass by the name
    provided by the completion instruction environment variable. If the
    name isn't registered, returns ``None``.

    :param shell: Name the class is registered under.
    aArgumentaparamsanargsaget_parameter_sourceaParameterSourceaCOMMANDLINETOtupleOlistuDetermine if the given parameter is an argument that can still
    accept values.

    :param ctx: Invocation context for the command represented by the
        parsed complete args.
    :param param: Argument object being checked.
    a_opt_prefixesuCheck if the value looks like the start of an option.aOptionais_flagacountaparama_start_of_optionactxalast_optionaoptsuDetermine if the given parameter is an option that needs a value.

    :param args: List of complete args before the incomplete value.
    :param param: Option object being checked.
    aresilient_parsingamake_contextacopyaprotected_argsaargsacommandaMultiCommandachainaresolve_commandTaparentaresilient_parsingTaparentaallow_extra_argsaallow_interspersed_argsaresilient_parsingasub_ctxuProduce the context hierarchy starting with the command and
    traversing the complete arguments. This only follows the commands,
    it doesn't trigger input prompts or callbacks.

    :param cli: Command being called.
    :param prog_name: Name of the executable in the shell.
    :param args: List of complete args before the incomplete value.
    w=Tw=aappendu--aincompleteaget_paramsa_is_incomplete_optiona_is_incomplete_argumentuFind the Click object that will handle the completion of the
    incomplete value. Return the object and the incomplete value.

    :param ctx: Invocation context for the command represented by
        the parsed complete args.
    :param args: List of complete args before the incomplete value.
    :param incomplete: Value being completed. May be empty.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aoswtagettextTagettextacoreTaArgumentTaBaseCommandaBaseCommandTaContextaContextTaMultiCommandTaOptionTaParameteraParameterTaParameterSourceaparserTasplit_arg_stringautilsTaechoaMutableMappingaAnyainstructionareturnuclick.shell_completiona__module__uRepresents a completion value and metadata about the value. The
    default metadata is ``type`` to indicate special shell handling,
    and ``help`` if a shell supports showing a help string next to the
    value.

    Arbitrary parameters can be passed when creating the object, and
    accessed using ``item.attr``. If an attribute wasn't passed,
    accessing it returns ``None``.

    :param value: The completion suggestion.
    :param type: Tells the shell script to provide special completion
        support for the type. Click uses ``"dir"`` and ``"file"``.
    :param help: String shown next to the value if supported.
    :param kwargs: Arbitrary metadata. The built-in implementations
        don't use this, but custom type completions paired with custom
        shell support could use it.
    aCompletionItema__qualname__Tavalueatypeahelpa_infoa__slots__TaplainnaOptionalakwargsa__init__uCompletionItem.__init__a__getattr__uCompletionItem.__getattr__u%(complete_func)s() {
    local IFS=$'\n'
    local response

    response=$(env COMP_WORDS="${COMP_WORDS[*]}" COMP_CWORD=$COMP_CWORD %(complete_var)s=bash_complete $1)

    for completion in $response; do
        IFS=',' read type value <<< "$completion"

        if [[ $type == 'dir' ]]; then
            COMPREPLY=()
            compopt -o dirnames
        elif [[ $type == 'file' ]]; then
            COMPREPLY=()
            compopt -o default
        elif [[ $type == 'plain' ]]; then
            COMPREPLY+=($value)
        fi
    done

    return 0
}

%(complete_func)s_setup() {
    complete -o nosort -F %(complete_func)s %(prog_name)s
}

%(complete_func)s_setup;
a_SOURCE_BASHu#compdef %(prog_name)s

%(complete_func)s() {
    local -a completions
    local -a completions_with_descriptions
    local -a response
    (( ! $+commands[%(prog_name)s] )) && return 1

    response=("${(@f)$(env COMP_WORDS="${words[*]}" COMP_CWORD=$((CURRENT-1)) %(complete_var)s=zsh_complete %(prog_name)s)}")

    for type key descr in ${response}; do
        if [[ "$type" == "plain" ]]; then
            if [[ "$descr" == "_" ]]; then
                completions+=("$key")
            else
                completions_with_descriptions+=("$key":"$descr")
            fi
        elif [[ "$type" == "dir" ]]; then
            _path_files -/
        elif [[ "$type" == "file" ]]; then
            _path_files -f
        fi
    done

    if [ -n "$completions_with_descriptions" ]; then
        _describe -V unsorted completions_with_descriptions -U
    fi

    if [ -n "$completions" ]; then
        compadd -U -V unsorted -a completions
    fi
}

if [[ $zsh_eval_context[-1] == loadautofunc ]]; then
    # autoload from fpath, call function directly
    %(complete_func)s "$@"
else
    # eval/source/. command, register function for later
    compdef %(complete_func)s %(prog_name)s
fi
a_SOURCE_ZSHufunction %(complete_func)s;
    set -l response (env %(complete_var)s=fish_complete COMP_WORDS=(commandline -cp) COMP_CWORD=(commandline -t) %(prog_name)s);

    for completion in $response;
        set -l metadata (string split "," $completion);

        if test $metadata[1] = "dir";
            __fish_complete_directories $metadata[2];
        else if test $metadata[1] = "file";
            __fish_complete_path $metadata[2];
        else if test $metadata[1] = "plain";
            echo $metadata[2];
        end;
    end;
end;

complete --no-files --command %(prog_name)s --arguments "(%(complete_func)s)";
a_SOURCE_FISHuBase class for providing shell completion support. A subclass for
    a given shell will override attributes and methods to implement the
    completion instructions (``source`` and ``complete``).

    :param cli: Command being called.
    :param prog_name: Name of the executable in the shell.
    :param complete_var: Name of the environment variable that holds
        the completion instruction.

    .. versionadded:: 8.0
    aShellCompleteaClassVaruShellComplete.__init__DareturnOstruShellComplete.func_nameaDictuShellComplete.source_varsuShellComplete.sourceaTupleaListuShellComplete.get_completion_argsuShellComplete.get_completionsaitemuShellComplete.format_completionuShellComplete.completea__prepare__aBashCompletea__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uShell completion for Bash.abashastaticmethodDareturnnuBashComplete._check_versionastruBashComplete.sourceuBashComplete.get_completion_argsuBashComplete.format_completiona__orig_bases__aZshCompleteuShell completion for Zsh.azshuZshComplete.get_completion_argsuZshComplete.format_completionaFishCompleteuShell completion for Fish.afishuFishComplete.get_completion_argsuFishComplete.format_completionaTypeVaraTypeTaShellCompleteTypeTaboundaShellCompleteTypeTnaclsaadd_completion_classashellaUnionuclick\shell_completion.pyu<module click.shell_completion>Ta__class__TaselfanameTaselfavalueatypeahelpakwargsTaselfacliactx_argsaprog_nameacomplete_varTasubprocessaoutputamatchamajoraminorTactxaparamavalueTactxaargsaparamalast_optionaindexaargTacliactx_argsaprog_nameaargsactxacommandanameacmdasub_ctxTactxaargsaincompleteanamew_aparamsaparamTactxavaluewcTaclsanameTaselfaargsaincompleteacompletionsaoutTaselfaitemTaselfasafe_nameTaselfacwordsacwordaargsaincompleteTaselfacwordsaincompleteaargsTaselfTashellTaselfaargsaincompleteactxaobjTacliactx_argsaprog_nameacomplete_varainstructionashellw_acomp_clsacompTaselfa__class__.click.termui1PagetpasslaChoiceu (u, achoicesw)uu [a_format_defaultw]aIOBaseaLazyFileanameDatextareturnOstrpaprompt_funcuprompt.<locals>.prompt_funcaconvert_typea_build_promptw_TuRepeat for confirmationapromptadefaultavalue_procaUsageErrorahide_inputaechoTuError: The value you entered was invalid.aerrTaerrTuError: {e.message}aformatTweaconfirmation_promptTuError: The two entered values do not match.uPrompts a user for input.  This is a convenience function that can
    be used to prompt a user for input later.

    If the user aborts the input by sending an interrupt signal, this
    function will catch it and raise a :exc:`Abort` exception.

    :param text: the text to show for the prompt.
    :param default: the default value to use if no input happens.  If this
                    is not given it will prompt until it's aborted.
    :param hide_input: if this is set to true then the input value will
                       be hidden.
    :param confirmation_prompt: Prompt a second time to confirm the
        value. Can be set to a string instead of ``True`` to customize
        the message.
    :param type: the type to use to check the value against.
    :param value_proc: if this parameter is provided it's a function that
                       is invoked instead of the type conversion to
                       convert a value.
    :param prompt_suffix: a suffix that should be added to the prompt.
    :param show_default: shows or hides the default value in the prompt.
    :param err: if set to true the file defaults to ``stderr`` instead of
                ``stdout``, the same as with echo.
    :param show_choices: Show or hide choices if the passed type is a Choice.
                         For example if type is a Choice of either day or week,
                         show_choices is true and text is "Group by" then the
                         prompt will be "Group by (day, week): ".

    .. versionadded:: 8.0
        ``confirmation_prompt`` can be a custom string.

    .. versionadded:: 7.0
        Added the ``show_choices`` parameter.

    .. versionadded:: 6.0
        Added unicode support for cmd.exe on Windows.

    .. versionadded:: 4.0
        Added the `err` parameter.

    ahidden_prompt_funcavisible_prompt_funcarstripTw TanlaerrTEKeyboardInterruptEEOFErrorTnaAbortuy/nuY/nuy/NalowerastripTwyayesTwnanoTuError: invalid inputuPrompts for confirmation (yes/no question).

    If the user aborts the input by sending a interrupt signal this
    function will catch it and raise a :exc:`Abort` exception.

    :param text: the question to ask.
    :param default: The default value to use when no input is given. If
        ``None``, repeat until input is given.
    :param abort: if this is set to `True` a negative answer aborts the
                  exception by raising :exc:`Abort`.
    :param prompt_suffix: a suffix that should be added to the prompt.
    :param show_default: shows or hides the default value in the prompt.
    :param err: if set to true the file defaults to ``stderr`` instead of
                ``stdout``, the same as with echo.

    .. versionchanged:: 8.0
        Repeat until input is given if ``default`` is ``None``.

    .. versionadded:: 4.0
        Added the ``err`` parameter.
    aresolve_color_defaultainspectaisgeneratorfunctionacastaCallableaIterablea_termui_implTapagerlapageraitertoolsachainw
uThis function takes a text and shows it via an environment specific
    pager on stdout.

    .. versionchanged:: 3.0
       Added the `color` flag.

    :param text_or_generator: the text to page, or alternatively, a
                              generator emitting the text to page.
    :param color: controls if the pager supports ANSI colors or not.  The
                  default is autodetection.
    u<genexpr>uecho_via_pager.<locals>.<genexpr>TaProgressBaraProgressBarTaiterablealengthashow_etaashow_percentashow_posaitem_show_funcafill_charaempty_charabar_templateainfo_sepafilealabelawidthacoloraupdate_min_stepsuThis function creates an iterable context manager that can be used
    to iterate over something while showing a progress bar.  It will
    either iterate over the `iterable` or `length` items (that are counted
    up).  While iteration happens, this function will print a rendered
    progress bar to the given `file` (defaults to stdout) and will attempt
    to calculate remaining time and more.  By default, this progress bar
    will not be rendered if the file is not a terminal.

    The context manager creates the progress bar.  When the context
    manager is entered the progress bar is already created.  With every
    iteration over the progress bar, the iterable passed to the bar is
    advanced and the bar is updated.  When the context manager exits,
    a newline is printed and the progress bar is finalized on screen.

    Note: The progress bar is currently designed for use cases where the
    total progress can be expected to take at least several seconds.
    Because of this, the ProgressBar class object won't display
    progress that is considered too fast, and progress where the time
    between steps is less than a second.

    No printing must happen or the progress bar will be unintentionally
    destroyed.

    Example usage::

        with progressbar(items) as bar:
            for item in bar:
                do_something_with(item)

    Alternatively, if no iterable is specified, one can manually update the
    progress bar through the `update()` method instead of directly
    iterating over the progress bar.  The update method accepts the number
    of steps to increment the bar with::

        with progressbar(length=chunks.total_bytes) as bar:
            for chunk in chunks:
                process_chunk(chunk)
                bar.update(chunks.bytes)

    The ``update()`` method also takes an optional value specifying the
    ``current_item`` at the new position. This is useful when used
    together with ``item_show_func`` to customize the output for each
    manual step::

        with click.progressbar(
            length=total_size,
            label='Unzipping archive',
            item_show_func=lambda a: a.filename
        ) as bar:
            for archive in zip_file:
                archive.extract()
                bar.update(archive.size, archive)

    :param iterable: an iterable to iterate over.  If not provided the length
                     is required.
    :param length: the number of items to iterate over.  By default the
                   progressbar will attempt to ask the iterator about its
                   length, which might or might not work.  If an iterable is
                   also provided this parameter can be used to override the
                   length.  If an iterable is not provided the progress bar
                   will iterate over a range of that length.
    :param label: the label to show next to the progress bar.
    :param show_eta: enables or disables the estimated time display.  This is
                     automatically disabled if the length cannot be
                     determined.
    :param show_percent: enables or disables the percentage display.  The
                         default is `True` if the iterable has a length or
                         `False` if not.
    :param show_pos: enables or disables the absolute position display.  The
                     default is `False`.
    :param item_show_func: A function called with the current item which
        can return a string to show next to the progress bar. If the
        function returns ``None`` nothing is shown. The current item can
        be ``None``, such as when entering and exiting the bar.
    :param fill_char: the character to use to show the filled part of the
                      progress bar.
    :param empty_char: the character to use to show the non-filled part of
                       the progress bar.
    :param bar_template: the format string to use as template for the bar.
                         The parameters in it are ``label`` for the label,
                         ``bar`` for the progress bar and ``info`` for the
                         info section.
    :param info_sep: the separator between multiple info items (eta etc.)
    :param width: the width of the progress bar in characters, 0 means full
                  terminal width
    :param file: The file to write to. If this is not a terminal then
        only the label is printed.
    :param color: controls if the terminal supports ANSI colors or not.  The
                  default is autodetection.  This is only needed if ANSI
                  codes are included anywhere in the progress bar output
                  which is not the case by default.
    :param update_min_steps: Render only when this many updates have
        completed. This allows tuning for very fast iterators.

    .. versionchanged:: 8.0
        Output is shown even if execution time is less than 0.5 seconds.

    .. versionchanged:: 8.0
        ``item_show_func`` shows the current item, not the previous one.

    .. versionchanged:: 8.0
        Labels are echoed if the output is not a TTY. Reverts a change
        in 7.0 that removed all output.

    .. versionadded:: 8.0
       Added the ``update_min_steps`` parameter.

    .. versionchanged:: 4.0
        Added the ``color`` parameter. Added the ``update`` method to
        the object.

    .. versionadded:: 2.0
    aisattyastdoutTu[2J[1;1HFTanluClears the terminal screen.  This will have the effect of clearing
    the whole visible space of the terminal and moving the cursor to the
    top left.  This does not do anything if not connected to a terminal.

    .. versionadded:: 2.0
    l&u;5;wdTOtupleOlistutoo many values to unpack (expected 3)u;2;w;a_ansi_colorsu[a_interpret_colorwmuUnknown color l
lllll5l7lllllllla_ansi_reset_alluStyles a text with ANSI styles and returns the new string.  By
    default the styling is self contained which means that at the end
    of the string a reset code is issued.  This can be prevented by
    passing ``reset=False``.

    Examples::

        click.echo(click.style('Hello World!', fg='green'))
        click.echo(click.style('ATTENTION!', blink=True))
        click.echo(click.style('Some things', reverse=True, fg='cyan'))
        click.echo(click.style('More colors', fg=(255, 12, 128), bg=117))

    Supported color names:

    * ``black`` (might be a gray)
    * ``red``
    * ``green``
    * ``yellow`` (might be an orange)
    * ``blue``
    * ``magenta``
    * ``cyan``
    * ``white`` (might be light gray)
    * ``bright_black``
    * ``bright_red``
    * ``bright_green``
    * ``bright_yellow``
    * ``bright_blue``
    * ``bright_magenta``
    * ``bright_cyan``
    * ``bright_white``
    * ``reset`` (reset the color code only)

    If the terminal supports it, color may also be specified as:

    -   An integer in the interval [0, 255]. The terminal must support
        8-bit/256-color mode.
    -   An RGB tuple of three integers in [0, 255]. The terminal must
        support 24-bit/true-color mode.

    See https://en.wikipedia.org/wiki/ANSI_color and
    https://gist.github.com/XVilka/8346728 for more information.

    :param text: the string to style with ansi codes.
    :param fg: if provided this will become the foreground color.
    :param bg: if provided this will become the background color.
    :param bold: if provided this will enable or disable bold mode.
    :param dim: if provided this will enable or disable dim mode.  This is
                badly supported.
    :param underline: if provided this will enable or disable underline.
    :param overline: if provided this will enable or disable overline.
    :param italic: if provided this will enable or disable italic.
    :param blink: if provided this will enable or disable blinking.
    :param reverse: if provided this will enable or disable inverse
                    rendering (foreground becomes background and the
                    other way round).
    :param strikethrough: if provided this will enable or disable
        striking through text.
    :param reset: by default a reset-all code is added at the end of the
                  string which means that styles do not carry over.  This
                  can be disabled to compose styles.

    .. versionchanged:: 8.0
        A non-string ``message`` is converted to a string.

    .. versionchanged:: 8.0
       Added support for 256 and RGB color codes.

    .. versionchanged:: 8.0
        Added the ``strikethrough``, ``italic``, and ``overline``
        parameters.

    .. versionchanged:: 7.0
        Added support for bright colors.

    .. versionadded:: 2.0
    astrip_ansiuRemoves ANSI styling information from a string.  Usually it's not
    necessary to use this function as Click's echo function will
    automatically remove styling if necessary.

    .. versionadded:: 2.0

    :param text: the text to remove style information from.
    TObytesObytearrayastyleTafileanlaerracoloruThis function combines :func:`echo` and :func:`style` into one
    call.  As such the following two calls are the same::

        click.secho('Hello World!', fg='green')
        click.echo(click.style('Hello World!', fg='green'))

    All keyword arguments are forwarded to the underlying functions
    depending on which one they go with.

    Non-string types will be converted to :class:`str`. However,
    :class:`bytes` are passed directly to :meth:`echo` without applying
    style. If you want to style bytes that represent text, call
    :meth:`bytes.decode` first.

    .. versionchanged:: 8.0
        A non-string ``message`` is converted to a string. Bytes are
        passed through without style applied.

    .. versionadded:: 2.0
    TaEditoraEditorTaeditoraenvarequire_saveaextensionaeditaedit_fileuEdits the given text in the defined editor.  If an editor is given
    (should be the full path to the executable but the regular operating
    system search path is used for finding the executable) it overrides
    the detected editor.  Optionally, some environment variables can be
    used.  If the editor is closed without changes, `None` is returned.  In
    case a file is edited directly the return value is always `None` and
    `require_save` and `extension` are ignored.

    If the editor cannot be opened a :exc:`UsageError` is raised.

    Note for Windows: to simplify cross-platform usage, the newlines are
    automatically converted from POSIX to Windows and vice versa.  As such,
    the message here will have ``\n`` as newline markers.

    :param text: the text to edit.
    :param editor: optionally the editor to use.  Defaults to automatic
                   detection.
    :param env: environment variables to forward to the editor.
    :param require_save: if this is true, then not saving in the editor
                         will make the return value become `None`.
    :param extension: the extension to tell the editor about.  This defaults
                      to `.txt` but changing this might change syntax
                      highlighting.
    :param filename: if provided it will edit this file instead of the
                     provided text contents.  It will not use a temporary
                     file as an indirection in that case.
    Taopen_urlaopen_urlTawaitalocateuThis function launches the given URL (or filename) in the default
    viewer application for this file type.  If this is an executable, it
    might launch the executable in a new session.  The return value is
    the exit code of the launched application.  Usually, ``0`` indicates
    success.

    Examples::

        click.launch('https://click.palletsprojects.com/')
        click.launch('/my/downloaded/file', locate=True)

    .. versionadded:: 2.0

    :param url: URL or filename of the thing to launch.
    :param wait: Wait for the program to exit before returning. This
        only works if the launched program blocks. In particular,
        ``xdg-open`` on Linux does not block.
    :param locate: if this is set to `True` then instead of launching the
                   application associated with the URL it will attempt to
                   launch a file manager with the file located.  This
                   might have weird effects if the URL does not point to
                   the filesystem.
    a_getcharTagetcharagetcharuFetches a single character from the terminal and returns it.  This
    will always return a unicode character and under certain rare
    circumstances this might return more than one character.  The
    situations which more than one character is returned is when for
    whatever reason multiple characters end up in the terminal buffer or
    standard input was not actually a terminal.

    Note that this will always read from the terminal, even if something
    is piped into the standard input.

    Note for Windows: in rare cases when typing non-ASCII characters, this
    function might wait for a second character and then return both at once.
    This is because certain Unicode characters look like special-key markers.

    .. versionadded:: 2.0

    :param echo: if set to `True`, the character read will also show up on
                 the terminal.  The default is to not show it.
    Taraw_terminalaraw_terminalastdinTuPress any key to continue...uThis command stops execution and waits for the user to press any
    key to continue.  This is similar to the Windows batch "pause"
    command.  If the program is not run through a terminal, this command
    will instead do nothing.

    .. versionadded:: 2.0

    .. versionadded:: 4.0
       Added the `err` parameter.

    :param info: The message to print before pausing. Defaults to
        ``"Press any key to continue..."``.
    :param err: if set to message goes to ``stderr`` instead of
                ``stdout``, the same as with echo.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aioasyswtagettextTagettexta_compatTaisattyTastrip_ansiaexceptionsTaAbortTaUsageErroraglobalsTaresolve_color_defaultatypesTaChoiceTaconvert_typeTaParamTypeaParamTypeautilsTaechoTaLazyFileaTypeVarTwVwVainputTLOstrOstrDablackaredagreenayellowablueamagentaacyanawhitearesetabright_blackabright_redabright_greenabright_yellowabright_blueabright_magentaabright_cyanabright_whitelll l!l"l#l$l%l'lZl[l\l]l^l_l`lau[0mDapromptareturnOstrpTFntnatextasuffixashow_defaultaOptionalaAnyashow_choicesatypeareturnTnFpnnu: tFtaUnionTOboolOstraprompt_suffixTFpu: tFaabortaconfirmatext_or_generatoracoloraecho_via_pagerTnnntnFnw#w-u%(label)s  [%(bar)s]  %(info)su  l$nnlaiterablealengthalabelashow_etaashow_percentashow_posaitem_show_funcafill_charaempty_charabar_templateainfo_sepawidthafileaTextIOaupdate_min_stepsuProgressBar[V]aprogressbarDareturnnaclearTlaTupleTOintppaoffsetTnnnnnnnnnntafgabgaboldadimaunderlineaoverlineaitalicablinkareverseastrikethrougharesetaunstyleTnntFnamessageaIOaAnyStranlastylesasechoTnnntu.txtnaeditoraenvaMappingTOstrparequire_saveaextensionafilenameTFpDaurlawaitalocateareturnOstrOboolpOintalaunchTLOboolOstrTFDaechoareturnOboolOstraContextManagerTnFainfoapauseuclick\termui.pyTa.0aelu<module click.termui>Tatextasuffixashow_defaultadefaultashow_choicesatypeapromptTadefaultTacoloraoffsetwrwgwbTatextadefaultaabortaprompt_suffixashow_defaultaerrapromptavaluearvTatext_or_generatoracolorwiatext_generatorapagerTatextaeditoraenvarequire_saveaextensionafilenameaEditoraedTaechowfTapromptagetpassTaurlawaitalocateaopen_urlTainfoaerrTaiterablealengthalabelashow_etaashow_percentashow_posaitem_show_funcafill_charaempty_charabar_templateainfo_sepawidthafileacoloraupdate_min_stepsaProgressBarTatextadefaultahide_inputaconfirmation_promptatypeavalue_procaprompt_suffixashow_defaultaerrashow_choicesaprompt_funcapromptavaluearesultweavalue2ais_emptyTatextwfahide_inputaerrTaerrahide_inputTwfTamessageafileanlaerracolorastylesT
atextafgabgaboldadimaunderlineaoverlineaitalicablinkareverseastrikethrougharesetabitsTatext.click.testinga_inputa_outputa_pausedawritea_echoareadaread1areadlineareadlinesaselfu<genexpr>uEchoingStdin.__iter__.<locals>.<genexpr>astreama_pause_echoa__class__a__init__a_namea_modea_find_binary_readeracastaIOaAnyuCould not find binary reader for input stream.caencodeaBytesIOarunnerastdout_bytesastderr_bytesareturn_valueaexit_codeaexceptionaexc_infoastdoutuThe (standard) output as unicode string.adecodeacharsetareplaceTu
w
uThe standard output as unicode string.ustderr not separately captureduThe standard error as unicode string.aokayw<a__name__uw w>aenvaecho_stdinamix_stderranamearootuGiven a command object it will return the default program name
        for it.  The default is the `name` attribute or ``"root"`` if not
        set.
        uReturns the environment overrides for invoking a script.uA context manager that sets up the isolation for invoking of a
        command line tool.  This sets up stdin with the given input data
        and `os.environ` with the overrides from the given dictionary.
        This also rebinds some internals in Click to be mocked (like the
        prompt functionality).

        This is automatically done in the :meth:`invoke` method.

        :param input: the input stream to put into sys.stdin.
        :param env: the environment overrides as dictionary.
        :param color: whether the output should contain color codes. The
                      application can still override this explicitly.

        .. versionchanged:: 8.0
            ``stderr`` is opened with ``errors="backslashreplace"``
            instead of the default ``"strict"``.

        .. versionchanged:: 4.0
            Added the ``color`` parameter.
        amake_input_streamainputastdinastderraformattingaFORCED_WIDTHlPamake_envaBinaryIOaEchoingStdina_NamedTextIOWrapperu<stdin>wrTaencodinganameamodela_CHUNK_SIZEu<stdout>wwu<stderr>abackslashreplaceTaencodinganameamodeaerrorsTnapromptaOptionalareturnavisible_inputuCliRunner.isolation.<locals>.visible_inputahidden_inputuCliRunner.isolation.<locals>.hidden_inputDaechoareturnOboolOstra_getcharuCliRunner.isolation.<locals>._getcharacolorTnnashould_strip_ansiuCliRunner.isolation.<locals>.should_strip_ansiatermuiavisible_prompt_funcahidden_prompt_funcautilsaitemsutoo many values to unpack (expected 2)aenvironagetaold_envabytes_erroraisolationuCliRunner.isolationatext_inputarstripTu
w
aflushTladefault_colorTainputaenvacolora__enter__a__exit__lashlexasplitaprog_nameaget_default_prog_nameamainaargsaUnionacodeTw
agetvalueTnnnaResultTarunnerastdout_bytesastderr_bytesareturn_valueaexit_codeaexceptionaexc_infouInvokes a command in an isolated environment.  The arguments are
        forwarded directly to the command line script, the `extra` keyword
        arguments are passed to the :meth:`~clickpkg.Command.main` function of
        the command.

        This returns a :class:`Result` object.

        :param cli: the command to invoke
        :param args: the arguments to invoke. It may be given as an iterable
                     or a string. When given as string it will be interpreted
                     as a Unix shell command. More details at
                     :func:`shlex.split`.
        :param input: the input data for `sys.stdin`.
        :param env: the environment overrides.
        :param catch_exceptions: Whether to catch any other exceptions than
                                 ``SystemExit``.
        :param extra: the keyword arguments to pass to :meth:`main`.
        :param color: whether the output should contain color codes. The
                      application can still override this explicitly.

        .. versionchanged:: 8.0
            The result object has the ``return_value`` attribute with
            the value returned from the invoked command.

        .. versionchanged:: 4.0
            Added the ``color`` parameter.

        .. versionchanged:: 3.0
            Added the ``catch_exceptions`` parameter.

        .. versionchanged:: 3.0
            The result object has the ``exc_info`` attribute with the
            traceback if available.
        uA context manager that creates a temporary directory and
        changes the current working directory to it. This isolates tests
        that affect the contents of the CWD to prevent them from
        interfering with each other.

        :param temp_dir: Create the temporary directory under this
            directory. If given, the created directory is not removed
            when exiting.

        .. versionchanged:: 8.0
            Added the ``temp_dir`` parameter.
        agetcwdatempfileamkdtempatemp_dirTadirachdirashutilarmtreeaisolated_filesystemuCliRunner.isolated_filesystema__doc__a__file__a__spec__aoriginahas_locationa__cached__acontextlibaioaosasyswtaTracebackTypeTaformattingTatermuiTautilsa_compatTa_find_binary_readeruclick.testinga__module__a__qualname__aoutputuEchoingStdin.__init__wxa__getattr__uEchoingStdin.__getattr__DarvareturnObytespuEchoingStdin._echoTqDwnareturnOintObytesuEchoingStdin.readuEchoingStdin.read1uEchoingStdin.readlineaListuEchoingStdin.readlinesaIteratora__iter__uEchoingStdin.__iter__DareturnOstra__repr__uEchoingStdin.__repr__acontextmanageraTextIOWrappera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>abufferastramodeakwargsu_NamedTextIOWrapper.__init__apropertyu_NamedTextIOWrapper.nameu_NamedTextIOWrapper.modea__orig_bases__uHolds the captured result of an invoked CLI script.aCliRunneraTupleaTypeuResult.__init__uResult.outputuResult.stdoutuResult.stderruResult.__repr__uThe CLI runner provides functionality to invoke a Click command line
    script for unittesting purposes in a isolated environment.  This only
    works in single-threaded systems without any concurrency as it changes the
    global interpreter state.

    :param charset: the character set for the input and output data.
    :param env: a dictionary with environment variables for overriding.
    :param echo_stdin: if this is set to `True`, then reading from stdin writes
                       to stdout.  This is useful for showing examples in
                       some circumstances.  Note that regular prompts
                       will automatically echo the input.
    :param mix_stderr: if this is set to `False`, then stdout and stderr are
                       preserved as independent streams.  This is useful for
                       Unix-philosophy apps that have predictable stdout and
                       noisy stderr, such that each may be measured
                       independently
    Tuutf-8nFtaMappinguCliRunner.__init__DacliareturnaBaseCommandOstruCliRunner.get_default_prog_nameaoverridesuCliRunner.make_envTnnFTnnntFacliaBaseCommandaSequenceacatch_exceptionsaextraainvokeuCliRunner.invokeTOstruos.PathLike[str]uclick\testing.pyTa.0wxaselfu<module click.testing>Ta__class__TaselfwxTaselfacharsetaenvaecho_stdinamix_stderrTaselfainputaoutputTaselfarunnerastdout_bytesastderr_bytesareturn_valueaexit_codeaexceptionaexc_infoTaselfabufferanameamodeakwargsa__class__TaselfTaselfaexc_strTaselfarvTaechoacharTastreamTaselfacliTapromptatext_inputTatext_inputTaselfacliaargsainputaenvacatch_exceptionsacoloraextraaexceptionaexc_infoaoutstreamsareturn_valueaexit_codeaprog_nameweae_codeastdoutastderrTaselfatemp_diracwdadtTaselfainputaenvacolorabytes_inputaecho_inputaold_stdinaold_stdoutaold_stderraold_forced_widthabytes_outputatext_inputabytes_erroravisible_inputahidden_inputa_getcharadefault_colorashould_strip_ansiaold_visible_prompt_funcaold_hidden_prompt_funcaold__getchar_funcaold_should_strip_ansiaold_envakeyavalueTaselfaoverridesarvTainputacharsetarvTaselfwnTastreamacoloradefault_colorTadefault_colorTapromptavalatext_input.click.types}Aa__name__apartitionTaParamTypelTaParameterTypeanameaparam_typeuGather information that could be useful for a tool generating
        user-facing documentation.

        Use :meth:`click.Context.to_info_dict` to traverse the entire
        CLI structure.

        .. versionadded:: 8.0
        aconvertuConvert the value to the correct type. This is not called if
        the value is ``None`` (the missing value).

        This must accept string values from the command line, as well as
        values that are already the correct type. It may also convert
        other compatible types.

        The ``param`` and ``ctx`` arguments may be ``None`` in certain
        situations, such as when converting prompt input.

        If the value cannot be converted, call :meth:`fail` with a
        descriptive message.

        :param value: The value to convert.
        :param param: The parameter that is using this type to convert
            its value. May be ``None``.
        :param ctx: The current context that arrived at this value. May
            be ``None``.
        uasplitaenvvar_list_splitteruGiven a value from an environment variable this splits it up
        into small chunks depending on the defined envvar list splitter.

        If the splitter is set to `None`, which means that whitespace splits,
        then leading and trailing whitespace is ignored.  Otherwise, leading
        and trailing splitters usually lead to empty items being included.
        aBadParameterTactxaparamuHelper method to fail with an invalid value message.uReturn a list of
        :class:`~click.shell_completion.CompletionItem` objects for the
        incomplete value. Most types do not provide completions, but
        some do, and this allows custom types to provide custom
        completions as well.

        :param ctx: Invocation context for this command.
        :param param: The parameter that is requesting completion.
        :param incomplete: Value being completed. May be empty.

        .. versionadded:: 8.0
        afunca__class__ato_info_dictadecodeTuutf-8areplaceafaila_get_argv_encodingagetfilesystemencodingachoicesacase_sensitivew|arequiredaparam_type_nameaargumentw{w}w[w]w_TuChoose from:
{choices}aformatu,
Tachoicesatoken_normalize_funcaitemsutoo many values to unpack (expected 2)actxacasefoldu, areprangettextu{value!r} is not {choice}.u{value!r} is not one of {choices}.TavalueachoiceachoicesuChoice(w)uclick.shell_completionTaCompletionItemaCompletionItemaloweruComplete choices that start with the incomplete value.

        :param ctx: Invocation context for this command.
        :param param: The parameter that is requesting completion.
        :param incomplete: Value being completed. May be empty.

        .. versionadded:: 8.0
        astartswithaincompleteu<genexpr>uChoice.shell_complete.<locals>.<genexpr>u%Y-%m-%du%Y-%m-%dT%H:%M:%Su%Y-%m-%d %H:%M:%Saformatsadatetimeastrptimeaselfa_try_to_convert_dateavalueu{value!r} does not match the format {format}.u{value!r} does not match the formats {formats}.Tavalueaformataformatsa_number_classTu{value!r} is not a valid {number_type}.Tavalueanumber_typeaminamaxamin_openamax_openaclampaupdateTaminamaxamin_openamax_openaclampaoperatoralealtageagta_clamplqTu{value} is not in the range {range}.a_describe_rangeTavaluearangeuFind the valid value to clamp to bound in the given
        direction.

        :param bound: The boundary value.
        :param dir: 1 or -1 indicating the direction to move.
        :param open: If true, the range does not include the bound.
        w<u<=wxw>u>=uDescribe the range for use in help text.u clampedw a__init__uClamping is not supported for open bounds.PFtastripPwyatruewtw1aonayesPwfwnaoffw0anoafalseTu{value!r} is not a valid boolean.TavalueauuidaUUIDTu{value!r} is not a valid UUID.amodeaencodingaerrorsalazyaatomicTamodeaencodingafspathw-wwa_is_file_likeacastut.Union[str, os.PathLike[str]]aresolve_lazy_flagaLazyFileTaatomicacall_on_closeaclose_intelligentlyaIOaAnyaopen_streamasafecallacloseaflushwfw'aformat_filenameu': astrerrorDatypeafileuReturn a special completion marker that tells the completion
        system to use the shell to provide file path completions.

        :param ctx: Invocation context for this command.
        :param param: The parameter that is requesting completion.
        :param incomplete: Value being completed. May be empty.

        .. versionadded:: 8.0
        areadawriteaexistsafile_okayadir_okayareadableawritableaexecutablearesolve_pathaallow_dashatypeTafileTadirectoryTapathTaexistsafile_okayadir_okayawritableareadableaallow_dashafsdecodeafsencodeuos.PathLike[str]Td-w-apathlibaPatharesolveastatacoerce_path_resultTu{name} {filename!r} does not exist.atitleTanameafilenameaS_ISREGastast_modeTu{name} {filename!r} is a file.aS_ISDIRTu{name} '{filename}' is a directory.aaccessaR_OKTu{name} {filename!r} is not readable.aW_OKTu{name} {filename!r} is not writable.aX_OKTu{name} {filename!r} is not executable.arvadirafileTatypeuReturn a special completion marker that tells the completion
        system to use the shell to provide path completions for only
        directories or any paths.

        :param ctx: Invocation context for this command.
        :param param: The parameter that is requesting completion.
        :param incomplete: Value being completed. May be empty.

        .. versionadded:: 8.0
        aconvert_typeatypesuTuple.name.<locals>.<genexpr>u{len_type} values are required, but {len_value} was given.u{len_type} values are required, but {len_value} were given.Talen_typealen_valueTaparamactxaparamuTuple.convert.<locals>.<genexpr>TOtupleOlistaTupleaParamTypeaSTRINGaINTaFLOATaBOOLuAttempted to use an uninstantiated parameter type (u).aFuncParamTypeuFind the most appropriate :class:`ParamType` for the given Python
    type. If the type isn't provided, it can be inferred from a default
    value.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosasyswtTadatetimeagettextTagettextTangettexta_compatTa_get_argv_encodingTaopen_streamaexceptionsTaBadParameterautilsTaformat_filenameTaLazyFileTasafecalluclick.typesa__module__uRepresents the type of a parameter. Validates and converts values
    from the command line or Python into the correct type.

    To implement a custom type, subclass and implement at least the
    following:

    -   The :attr:`name` class attribute must be set.
    -   Calling an instance of the type with ``None`` must return
        ``None``. This is already implemented by default.
    -   :meth:`convert` must convert string values to the correct type.
    -   :meth:`convert` must accept values that are already the correct
        type.
    -   It must be able to convert a value if the ``ctx`` and ``param``
        arguments are ``None``. This can occur when converting prompt
        input.
    a__qualname__a__annotations__ais_compositeaClassVaraarityaOptionalareturnaDictuParamType.to_info_dictTnnaParameteraContexta__call__uParamType.__call__uReturns the metavar default for this param if it provides one.aget_metavaruParamType.get_metavaruOptionally might return extra information about a missing
        parameter.

        .. versionadded:: 2.0
        aget_missing_messageuParamType.get_missing_messageuParamType.convertaSequenceasplit_envvar_valueuParamType.split_envvar_valueamessageut.NoReturnuParamType.failaListashell_completeuParamType.shell_completea__prepare__aCompositeParamTypea__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>apropertyaintuCompositeParamType.aritya__orig_bases__aCallableuFuncParamType.__init__astruFuncParamType.to_info_dictuFuncParamType.convertaUnprocessedParamTypeatextuUnprocessedParamType.convertaUNPROCESSEDa__repr__uUnprocessedParamType.__repr__aStringParamTypeuStringParamType.convertuStringParamType.__repr__aChoiceuThe choice type allows a value to be checked against a fixed set
    of supported values. All of these values have to be strings.

    You should only pass a list or tuple of choices. Other iterables
    (like generators) may lead to surprising results.

    The resulting value will always be one of the originally passed choices
    regardless of ``case_sensitive`` or any ``ctx.token_normalize_func``
    being specified.

    See :ref:`choice-opts` for an example.

    :param case_sensitive: Set to false to make choices case
        insensitive. Defaults to true.
    achoiceTtabooluChoice.__init__uChoice.to_info_dictuChoice.get_metavaruChoice.get_missing_messageuChoice.convertuChoice.__repr__uChoice.shell_completeaDateTimeuThe DateTime type converts date strings into `datetime` objects.

    The format strings which are checked are configurable, but default to some
    common (non-timezone aware) ISO 8601 formats.

    When specifying *DateTime* formats, you should only pass a list or a tuple.
    Other iterables, like generators, may lead to surprising results.

    The format strings are processed using ``datetime.strptime``, and this
    consequently defines the format strings which are allowed.

    Parsing is tried using each format, in order, and the first format which
    parses successfully is used.

    :param formats: A list or tuple of date format strings, in the order in
                    which they should be tried. Defaults to
                    ``'%Y-%m-%d'``, ``'%Y-%m-%dT%H:%M:%S'``,
                    ``'%Y-%m-%d %H:%M:%S'``.
    TnuDateTime.__init__uDateTime.to_info_dictuDateTime.get_metavaruDateTime._try_to_convert_dateuDateTime.convertuDateTime.__repr__a_NumberParamTypeBaseaTypeu_NumberParamTypeBase.converta_NumberRangeBaseTnnFppafloatu_NumberRangeBase.__init__u_NumberRangeBase.to_info_dictu_NumberRangeBase.convertaboundute.Literal[1, -1]aopenu_NumberRangeBase._clampu_NumberRangeBase._describe_rangeu_NumberRangeBase.__repr__aIntParamTypeaintegeruIntParamType.__repr__aIntRangeuRestrict an :data:`click.INT` value to a range of accepted
    values. See :ref:`ranges`.

    If ``min`` or ``max`` are not passed, any value is accepted in that
    direction. If ``min_open`` or ``max_open`` are enabled, the
    corresponding boundary is not included in the range.

    If ``clamp`` is enabled, a value outside the range is clamped to the
    boundary instead of failing.

    .. versionchanged:: 8.0
        Added the ``min_open`` and ``max_open`` parameters.
    uinteger rangeuIntRange._clampaFloatParamTypeuFloatParamType.__repr__aFloatRangeuRestrict a :data:`click.FLOAT` value to a range of accepted
    values. See :ref:`ranges`.

    If ``min`` or ``max`` are not passed, any value is accepted in that
    direction. If ``min_open`` or ``max_open`` are enabled, the
    corresponding boundary is not included in the range.

    If ``clamp`` is enabled, a value outside the range is clamped to the
    boundary instead of failing. This is not supported if either
    boundary is marked ``open``.

    .. versionchanged:: 8.0
        Added the ``min_open`` and ``max_open`` parameters.
    ufloat rangeuFloatRange.__init__uFloatRange._clampaBoolParamTypeabooleanuBoolParamType.convertuBoolParamType.__repr__aUUIDParameterTypeuUUIDParameterType.convertuUUIDParameterType.__repr__aFileuDeclares a parameter to be a file for reading or writing.  The file
    is automatically closed once the context tears down (after the command
    finished working).

    Files can be opened for reading or writing.  The special value ``-``
    indicates stdin or stdout depending on the mode.

    By default, the file is opened for reading text data, but it can also be
    opened in binary mode or for writing.  The encoding parameter can be used
    to force a specific encoding.

    The `lazy` flag controls if the file should be opened immediately or upon
    first IO. The default is to be non-lazy for standard input and output
    streams as well as files opened for reading, `lazy` otherwise. When opening a
    file lazily for reading, it is still opened temporarily for validation, but
    will not be held open until first IO. lazy is mainly useful when opening
    for writing to avoid creating the file until it is needed.

    Starting with Click 2.0, files can also be opened atomically in which
    case all writes go into a separate file in the same folder and upon
    completion the file will be moved over to the original location.  This
    is useful if a file regularly read by other users is modified.

    See :ref:`file-args` for more information.
    afilenameapathapathsepTwrnastrictnFuFile.__init__uFile.to_info_dictuFile.resolve_lazy_flagaUnionuFile.convertuFile.shell_completeute.TypeGuard[t.IO[t.Any]]uThe ``Path`` type is similar to the :class:`File` type, but
    returns the filename instead of an open file. Various checks can be
    enabled to validate the type of file and permissions.

    :param exists: The file or directory needs to exist for the value to
        be valid. If this is not set to ``True``, and the file does not
        exist, then all further checks are silently skipped.
    :param file_okay: Allow a file as a value.
    :param dir_okay: Allow a directory as a value.
    :param readable: if true, a readable check is performed.
    :param writable: if true, a writable check is performed.
    :param executable: if true, an executable check is performed.
    :param resolve_path: Make the value absolute and resolve any
        symlinks. A ``~`` is not expanded, as this is supposed to be
        done by the shell only.
    :param allow_dash: Allow a single dash as a value, which indicates
        a standard stream (but does not open it). Use
        :func:`~click.open_file` to handle opening this value.
    :param path_type: Convert the incoming path value to this type. If
        ``None``, keep Python's default, which is ``str``. Useful to
        convert to :class:`pathlib.Path`.

    .. versionchanged:: 8.1
        Added the ``executable`` parameter.

    .. versionchanged:: 8.0
        Allow passing ``path_type=pathlib.Path``.

    .. versionchanged:: 6.0
        Added the ``allow_dash`` parameter.
    TFtpFtFpnFapath_typeuPath.__init__uPath.to_info_dictDavalueareturnut.Union[str, os.PathLike[str]]ut.Union[str, bytes, os.PathLike[str]]uPath.coerce_path_resultut.Union[str, bytes, os.PathLike[str]]uPath.convertuPath.shell_completeuThe default behavior of Click is to apply a type on a value directly.
    This works well in most cases, except for when `nargs` is set to a fixed
    count and different types should be used for different items.  In this
    case the :class:`Tuple` type can be used.  This type can only be used
    if `nargs` is set to a fixed number.

    For more information see :ref:`tuple-type`.

    This can be selected by using a Python tuple literal as a type.

    :param types: a list of types that should be used for the tuple items.
    uTuple.__init__uTuple.to_info_dictuTuple.nameuTuple.arityuTuple.convertatyadefaultuclick\types.pyTa.0wcaincompleteTa.0atywxaparamactxTa.0atyu<module click.types>Ta__class__TaselfavalueaparamactxTaselfachoicesacase_sensitiveTaselfaformatsTaselfamodeaencodingaerrorsalazyaatomicTaselfaminamaxamin_openamax_openaclampa__class__TaselfafuncT
aselfaexistsafile_okayadir_okayawritableareadablearesolve_pathaallow_dashapath_typeaexecutableTaselfatypesTaselfaminamaxamin_openamax_openaclampTaselfTaselfaclampTaselfaboundadiraopenTaselfaopaloparopTaselfavalueaformatTaselfavalueTaselfavalueaparamactxanormTaselfavalueaparamactxanormed_valueanormed_choicesachoices_strTaselfavalueaparamactxaformataconvertedaformats_strTaselfavalueaparamactxalazyalfwfashould_closeweTaselfavalueaparamactxarvais_dashapathlibastTaselfavalueaparamactxaencafs_encTaselfavalueaparamactxalen_typealen_valueTaselfavalueaparamactxauuidTaselfavalueaparamactxalt_minagt_maxaoperatorarva__class__Tatyadefaultaguessed_typeaitemTaselfamessageaparamactxTaselfaparamachoices_strTaselfaparamTaselfactxaparamaincompleteaCompletionItemastr_choicesamatchedTaselfactxaparamaincompleteaCompletionItemTaselfactxaparamaincompleteTaselfactxaparamaincompleteaCompletionItematypeTaselfarvTaselfainfo_dicta__class__Taselfaparam_typeaname.click.utils.w-asplitaargsuP.argsakwargsuP.kwargsareturnaOptionalwRawrapperusafecall.<locals>.wrapperaupdate_wrapperuWraps a function so that it swallows exceptions.afuncadecodeagetfilesystemencodingTuutf-8areplaceuConverts a value into a valid string.afindTu

qahelpulw:lnnutoo many values to unpack (expected 2)atotal_lengthw.w llwiu...uReturns a condensed version of help string.afspathanameamodeaencodingaerrorsaatomicaopen_streama_fashould_closewracloseaopenu<unopened file 'aformat_filenameu' w>TaatomicaexceptionsTaFileErroraFileErrorastrerrorTahintuOpens the file if it's not yet open.  This call might fail with
        a :exc:`FileError`.  Not handling this error will produce an error
        that Click shows.
        uCloses the underlying file, no matter what.uThis function only closes the file if it was opened by the lazy
        file wrapper.  For instance this will never close stdin.
        aclose_intelligentlya_filea_default_text_stderra_default_text_stdoutTOstrObytesObytearrayw
d
aflushTObytesObytearraya_find_binary_writerawritearesolve_color_defaultashould_strip_ansiastrip_ansiaWINaauto_wrap_for_ansiafileuPrint a message and newline to stdout or a file. This should be
    used instead of :func:`print` because it provides better support
    for different data, files, and environments.

    Compared to :func:`print`, this does the following:

    -   Ensures that the output encoding is not misconfigured on Linux.
    -   Supports Unicode in the Windows console.
    -   Supports writing to binary outputs, and supports writing bytes
        to text outputs.
    -   Supports colors and styles on Windows.
    -   Removes ANSI color and style codes if the output does not look
        like an interactive terminal.
    -   Always flushes the output.

    :param message: The string or bytes to output. Other objects are
        converted to strings.
    :param file: The file to write to. Defaults to ``stdout``.
    :param err: Write to ``stderr`` instead of ``stdout``.
    :param nl: Print a newline after the message. Enabled by default.
    :param color: Force showing or hiding colors and other styles. By
        default Click will remove color if the output does not look like
        an interactive terminal.

    .. versionchanged:: 6.0
        Support Unicode output on the Windows console. Click does not
        modify ``sys.stdout``, so ``sys.stdout.write()`` and ``print()``
        will still not support Unicode.

    .. versionchanged:: 4.0
        Added the ``color`` parameter.

    .. versionadded:: 3.0
        Added the ``err`` parameter.

    .. versionchanged:: 2.0
        Support colors on Windows if colorama is installed.
    abinary_streamsagetuUnknown standard stream 'w'uReturns a system stream for byte processing.

    :param name: the name of the stream to open.  Valid names are ``'stdin'``,
                 ``'stdout'`` and ``'stderr'``
    atext_streamsuReturns a system stream for text processing.  This usually returns
    a wrapped stream around a binary stream returned from
    :func:`get_binary_stream` but it also can take shortcuts for already
    correctly configured streams.

    :param name: the name of the stream to open.  Valid names are ``'stdin'``,
                 ``'stdout'`` and ``'stderr'``
    :param encoding: overrides the detected default encoding.
    :param errors: overrides the default error mode.
    acastaIOaAnyaLazyFileaKeepOpenFileuOpen a file, with extra behavior to handle ``'-'`` to indicate
    a standard stream, lazy open on write, and atomic write. Similar to
    the behavior of the :class:`~click.File` param type.

    If ``'-'`` is given to open ``stdout`` or ``stdin``, the stream is
    wrapped so that using it in a context manager will not close it.
    This makes it possible to use the function without accidentally
    closing a standard stream:

    .. code-block:: python

        with open_file(filename) as f:
            ...

    :param filename: The name of the file to open, or ``'-'`` for
        ``stdin``/``stdout``.
    :param mode: The mode in which to open the file.
    :param encoding: The encoding to decode or encode a file opened in
        text mode.
    :param errors: The error handling mode.
    :param lazy: Wait to open the file until it is accessed. For read
        mode, the file is temporarily opened to raise access errors
        early, then closed until it is read again.
    :param atomic: Write to a temporary file and replace the given file
        on close.

    .. versionadded:: 3.0
    areplaceaencodeTuutf-8asurrogateescapeuFormat a filename as a string for display. Ensures the filename can be
    displayed by replacing any invalid bytes or surrogate escapes in the name
    with the replacement character ``�``.

    Invalid bytes or surrogate escapes will raise an error when written to a
    stream with ``errors="strict". This will typically happen with ``stdout``
    when the locale is something like ``en_GB.UTF-8``.

    Many scenarios *are* safe to write surrogates though, due to PEP 538 and
    PEP 540, including:

    -   Writing to ``stderr``, which uses ``errors="backslashreplace"``.
    -   The system has ``LANG=C.UTF-8``, ``C``, or ``POSIX``. Python opens
        stdout and stderr with ``errors="surrogateescape"``.
    -   None of ``LANG/LC_*`` are set. Python assumes ``LANG=C.UTF-8``.
    -   Python is started in UTF-8 mode  with  ``PYTHONUTF8=1`` or ``-X utf8``.
        Python opens stdout and stderr with ``errors="surrogateescape"``.

    :param filename: formats a filename for UI display.  This will also convert
                     the filename into unicode without failing.
    :param shorten: this optionally shortens the filename to strip of the
                    path that leads up to it.
    aAPPDATAaLOCALAPPDATAaenvironaexpanduserTw~ajoinu~/.a_posixifyaXDG_CONFIG_HOMETu~/.configuReturns the config folder for the application.  The default behavior
    is to return whatever is most appropriate for the operating system.

    To give you an idea, for an app called ``"Foo Bar"``, something like
    the following folders could be returned:

    Mac OS X:
      ``~/Library/Application Support/Foo Bar``
    Mac OS X (POSIX):
      ``~/.foo-bar``
    Unix:
      ``~/.config/foo-bar``
    Unix (POSIX):
      ``~/.foo-bar``
    Windows (roaming):
      ``C:\Users\<user>\AppData\Roaming\Foo Bar``
    Windows (not roaming):
      ``C:\Users\<user>\AppData\Local\Foo Bar``

    .. versionadded:: 2.0

    :param app_name: the application name.  This should be properly capitalized
                     and can contain whitespace.
    :param roaming: controls if the folder should be roaming or not on Windows.
                    Has no effect otherwise.
    :param force_posix: if this is set to `True` then on any POSIX system the
                        folder will be stored in the home folder with a leading
                        dot instead of the XDG config home or darwin's
                        application support folder.
    awrappedaerrnoaEPIPEamodulesa__main__aargva__package__Pnuu.exeasplitextupython -m alstripTw.uDetermine the command used to run the program, for use in help
    text. If a file or entry point was executed, the file name is
    returned. If ``python -m`` was used to execute a module or package,
    ``python -m name`` is returned.

    This doesn't try to be too precise, the goal is to give a concise
    name for help text. Files are only shown as their name without the
    path. ``python`` is only shown for modules, and the full path to
    ``sys.executable`` is not shown.

    :param path: The Python file being executed. Python puts this in
        ``sys.argv[0]``, which is used by default.
    :param _main: The ``__main__`` module. This should only be passed
        during internal testing.

    .. versionadded:: 8.0
        Based on command args detection in the Werkzeug reloader.

    :meta private:
    aglobTaglobaexpandvarsaglob_recursiveTarecursiveareaerroraoutuSimulate Unix shell expansion with Python functions.

    See :func:`glob.glob`, :func:`os.path.expanduser`, and
    :func:`os.path.expandvars`.

    This is intended for use on Windows, where the shell does not do any
    expansion. It may not exactly match what a Unix shell would do.

    :param args: List of command line arguments to expand.
    :param user: Expand user home directory.
    :param env: Expand environment variables.
    :param glob_recursive: ``**`` matches directories recursively.

    .. versionchanged:: 8.1
        Invalid glob patterns are treated as empty expansions rather
        than raising an error.

    .. versionadded:: 8.0

    :meta private:
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosasyswtaModuleTypeaTracebackTypea_compatTa_default_text_stderrTa_default_text_stdoutTa_find_binary_writerTaauto_wrap_for_ansiTabinary_streamsTaopen_streamTashould_strip_ansiTastrip_ansiTatext_streamsTaWINaglobalsTaresolve_color_defaultaTypeVarTwRDanameareturnOstrpDafuncareturnut.Callable[P, R]ut.Callable[P, t.Optional[R]]asafecallavalueamake_strTl-Dahelpamax_lengthareturnOstrOintOstramake_default_short_helpuclick.utilsa__module__uA lazy file works like a regular file but it does not fully open
    the file but it does perform some basic checks early to see if the
    filename parameter does make sense.  This is useful for safely opening
    files for writing.
    a__qualname__TwrnastrictFafilenameaUnionTOstruos.PathLike[str]a__init__uLazyFile.__init__a__getattr__uLazyFile.__getattr__DareturnOstra__repr__uLazyFile.__repr__uLazyFile.openDareturnnuLazyFile.closeuLazyFile.close_intelligentlyDareturnaLazyFilea__enter__uLazyFile.__enter__aexc_typeaTypeaexc_valueatba__exit__uLazyFile.__exit__aIteratoraAnyStra__iter__uLazyFile.__iter__uKeepOpenFile.__init__uKeepOpenFile.__getattr__DareturnaKeepOpenFileuKeepOpenFile.__enter__uKeepOpenFile.__exit__uKeepOpenFile.__repr__uKeepOpenFile.__iter__TnntFnamessageanlaerracoloraechoute.Literal['stdin', 'stdout', 'stderr']aBinaryIOaget_binary_streamTnastrictaTextIOaget_text_streamTwrnastrictFpalazyaopen_fileTFDafilenameashortenareturnut.Union[str, bytes, os.PathLike[str], os.PathLike[bytes]]OboolOstrTtFDaapp_namearoamingaforce_posixareturnOstrOboolpOstraget_app_diruThis wrapper is used to catch and suppress BrokenPipeErrors resulting
    from ``.flush()`` being called on broken pipe during the shutdown/final-GC
    of the Python interpreter. Notably ``.flush()`` is always called on
    ``sys.stdout`` and ``sys.stderr``. So as to have minimal impact on any
    other cleanup code, and the case where the underlying file is not a broken
    pipe, all calls and attributes are proxied.
    aPacifyFlushWrapperuPacifyFlushWrapper.__init__uPacifyFlushWrapper.flushaattruPacifyFlushWrapper.__getattr__Tnnapatha_maina_detect_program_nameDauseraenvaglob_recursivetppaIterableauseraenvaLista_expand_argsuclick\utils.pyu<module click.utils>Ta__class__TaselfTaselfaexc_typeaexc_valueatbTaselfanameTaselfaattrTaselfafileTaselfafilenameamodeaencodingaerrorsaatomicTaselfawrappedTapatha_mainapy_moduleanameTaargsauseraenvaglob_recursiveaglobaoutaargamatchesTanameTamessageafileanlaerracoloraoutabinary_fileTaselfweaerrnoTafilenameashortenTaapp_namearoamingaforce_posixakeyafolderTanameaopenerTanameaencodingaerrorsaopenerTahelpamax_lengthaparagraph_endawordsatotal_lengthalast_indexwiawordTavalueTaselfarvweaFileErrorTafilenameamodeaencodingaerrorsalazyaatomicwfashould_closeTafuncawrapperTaargsakwargsafuncTafunc.colorama.ansihaCSIwmaOSCu2;aBELwJwKastartswithTw_acode_to_charswAwBwCwDw;wHu
This module generates ANSI character codes to printing colors to terminals.
See: http://en.wikipedia.org/wiki/ANSI_escape_code
a__doc__a__file__a__spec__aoriginahas_locationa__cached__u[u]waset_titleTlaclear_screenaclear_lineTOobjectla__prepare__aAnsiCodesa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucolorama.ansia__module__a__qualname__a__init__uAnsiCodes.__init__a__orig_bases__aAnsiCursorTlaUPuAnsiCursor.UPaDOWNuAnsiCursor.DOWNaFORWARDuAnsiCursor.FORWARDaBACKuAnsiCursor.BACKTlpaPOSuAnsiCursor.POSaAnsiForelaBLACKlaREDl aGREENl!aYELLOWl"aBLUEl#aMAGENTAl$aCYANl%aWHITEl'aRESETlZaLIGHTBLACK_EXl[aLIGHTRED_EXl\aLIGHTGREEN_EXl]aLIGHTYELLOW_EXl^aLIGHTBLUE_EXl_aLIGHTMAGENTA_EXl`aLIGHTCYAN_EXlaaLIGHTWHITE_EXaAnsiBackl(l)l*l+l,l-l.l/l1ldlelflglhliljlkaAnsiStylelaBRIGHTlaDIMlaNORMALaRESET_ALLaForeaBackaStyleaCursorucolorama\ansi.pyu<module colorama.ansi>Ta__class__TaselfwnTaselfwxwyTaselfanameavalueTamodeTacodeTatitleu.colorama.ansitowin32|a_StreamWrapper__wrappeda_StreamWrapper__convertora__enter__a__exit__awriteaPYCHARM_HOSTEDaenvirona__stdout__a__stderr__aisattyaclosedTEAttributeErrorEValueErrorawrappedaautoresetaStreamWrapperastreamawinapi_testafilenoqaenable_vt_processingastripaconvertaget_win32_callsawin32_callsastderraon_stderru
        True if this class is actually needed. If false, then the output
        stream will not be affected, nor will win32 calls be issued, so
        wrapping stdout is not actually required. This will generally be
        False on non-Windows platforms, unless optional functionality like
        autoreset has been requested using kwargs to init()
        awintermaAnsiStyleaRESET_ALLareset_allaBRIGHTastyleaWinStyleaDIMaNORMALaAnsiForeaBLACKaforeaWinColoraREDaGREENaYELLOWaBLUEaMAGENTAaCYANaWHITEaGREYaRESETaLIGHTBLACK_EXaLIGHTRED_EXaLIGHTGREEN_EXaLIGHTYELLOW_EXaLIGHTBLUE_EXaLIGHTMAGENTA_EXaLIGHTCYAN_EXaLIGHTWHITE_EXaAnsiBackabackawrite_and_convertaflushacall_win32TwmTlaStylelaconvert_oscaANSI_CSI_REafinditeraspanutoo many values to unpack (expected 2)aselfawrite_plain_textatextacursoraconvert_ansiagroupsu
        Write the given text to our wrapped stream, stripping any ANSI
        sequences from the text, and optionally converting them into win32
        calls.
        aextract_paramsaHfasplitTw;aparamsTlaJKmTlaABCDlu<genexpr>uAnsiToWin32.extract_params.<locals>.<genexpr>wm:lnnwJaerase_screenTaon_stderrwKaerase_lineaset_cursor_positionwAwBwCwDacursor_adjustaANSI_OSC_REaBELacountu02aset_titlea__doc__a__file__a__spec__aoriginahas_locationa__cached__areasysaosaansiTaAnsiForeaAnsiBackaAnsiStyleaStyleaBELTaenable_vt_processingaWinTermaWinColoraWinStyleaWinTermawin32Tawindllawinapi_testawindllTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucolorama.ansitowin32a__module__u
    Wraps a stream (such as stdout), acting as a transparent proxy for all
    attribute access apart from method 'write()', which is delegated to our
    Converter instance.
    a__qualname__a__init__uStreamWrapper.__init__a__getattr__uStreamWrapper.__getattr__uStreamWrapper.__enter__uStreamWrapper.__exit__a__setstate__uStreamWrapper.__setstate__a__getstate__uStreamWrapper.__getstate__uStreamWrapper.writeuStreamWrapper.isattyapropertyuStreamWrapper.closeda__orig_bases__aAnsiToWin32u
    Implements a 'write()' method which, on Windows, will strip ANSI character
    sequences from the text, and if outputting to a tty, will convert them into
    win32 function calls.
    acompileTu?\[((?:\d|;)*)([a-zA-Z])?Tu?\]([^]*)()?TnnFuAnsiToWin32.__init__ashould_wrapuAnsiToWin32.should_wrapuAnsiToWin32.get_win32_callsuAnsiToWin32.writeuAnsiToWin32.reset_alluAnsiToWin32.write_and_convertuAnsiToWin32.write_plain_textuAnsiToWin32.convert_ansiuAnsiToWin32.extract_paramsuAnsiToWin32.call_win32uAnsiToWin32.convert_oscuAnsiToWin32.flushucolorama\ansitowin32.pyTa.0wpu<module colorama.ansitowin32>Ta__class__TaselfaargsakwargsTaselfanameTaselfTaselfawrappedaconvertastripaautoresetaon_windowsaconversion_supportedafdasystem_has_native_ansiahave_ttyaneed_conversionTaselfawrappedaconverterTaselfastateTaselfacommandaparamsaparamafunc_argsafuncaargsakwargswnwxwyTaselfastreamTaselfaparamstringacommandaparamsTaselfatextamatchastartaendaparamstringacommandaparamsTaselfacommandaparamstringaparamsTaselfastreamastream_isattyTaselfatextTaselfatextacursoramatchastartaendTaselfatextastartaendu.colorama$a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_coloramau\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ainitialiseTainitadeinitareinitacolorama_textajust_fix_windows_consolelainitladeinitareinitacolorama_textajust_fix_windows_consoleaansiTaForeaBackaStyleaCursoraForeaBackaStyleaCursoraansitowin32TaAnsiToWin32aAnsiToWin32u0.4.6a__version__ucolorama\__init__.pyu<module colorama>u.colorama.initialise1aorig_stdoutaorig_stderrawrapped_stdoutawrapped_stderraatexit_doneafixed_windows_consoleaatexitaunregisterareset_allaAnsiToWin32uwrap=False conflicts with any other arg=Trueastdoutastderrawrap_streamaregisterDaconvertastripaautoresetnnFaconvertainitaargsakwargsadeinitacolorama_textTaconvertastripaautoresetashould_wrapastreama__doc__a__file__a__spec__aoriginahas_locationa__cached__lacontextlibasysaansitowin32TaAnsiToWin32la_wipe_internal_state_for_testsTFnntajust_fix_windows_consoleacontextmanagerareinitucolorama\initialise.pyu<module colorama.initialise>TaargsakwargsTaautoresetaconvertastripawrapTanew_stdoutanew_stderrTastreamaconvertastripaautoresetawrapawrapperu.colorama.win32ku(%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d)adwSizewYwXadwCursorPositionawAttributesasrWindowaTopaLeftaBottomaRightadwMaximumWindowSizeaCONSOLE_SCREEN_BUFFER_INFOa_GetConsoleScreenBufferInfoabyrefa_GetStdHandleaSTDOUTaSTDERRa_winapi_testu<genexpr>uwinapi_test.<locals>.<genexpr>a_SetConsoleTextAttributeaCOORDllaGetConsoleScreenBufferInfoa_SetConsoleCursorPositionac_charaencodeawintypesaDWORDTla_FillConsoleOutputCharacterAavalueaWORDa_FillConsoleOutputAttributeu FillConsoleOutputAttribute( hConsole, csbi.wAttributes, dwConSize, coordScreen, &cCharsWritten )a_SetConsoleTitleWa_GetConsoleModeaWinErrora_SetConsoleModea__doc__a__file__a__spec__aoriginahas_locationa__cached__qqlaENABLE_VIRTUAL_TERMINAL_PROCESSINGactypesaLibraryLoaderaWinDLLawindllTEAttributeErrorEImportErroru<lambda>aSetConsoleTextAttributeawinapi_testaStructureaPOINTERa_COORDa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucolorama.win32a__module__ustruct in wincon.h.a__qualname__aSMALL_RECTa_fields_a__str__uCONSOLE_SCREEN_BUFFER_INFO.__str__a__orig_bases__akernel32aGetStdHandleaargtypesaHANDLEarestypeaBOOLaSetConsoleCursorPositionaFillConsoleOutputCharacterAaFillConsoleOutputAttributeaSetConsoleTitleWaLPCWSTRaGetConsoleModeaSetConsoleModeTtaFillConsoleOutputCharacteraSetConsoleTitleucolorama\win32.pyTa.0whTw_u<module colorama.win32>Ta__class__Tastream_idaattralengthastartahandleaattributeanum_writtenTastream_idacharalengthastartahandleanum_writtenasuccessTahandleamodeasuccessTastream_idahandleacsbiasuccessTastream_idapositionaadjustaadjusted_positionasrahandleTastream_idaattrsahandleTatitleTaselfTahandleacsbiasuccessu.colorama.wintermuThis isn't windows!awin32aGetConsoleScreenBufferInfoaSTDOUTawAttributesa_defaultaset_attrsa_forea_default_forea_backa_default_backa_stylea_default_stylela_lightlllaWinStyleaBRIGHTaBRIGHT_BACKGROUNDaset_consoleTaattrsTaon_stderraget_attrsaSTDERRaSetConsoleTextAttributeadwCursorPositionwXlwYaSetConsoleCursorPositionaget_positionDaadjustFadwSizeaCOORDTlplaFillConsoleOutputCharacterw aFillConsoleOutputAttributeTlpaSetConsoleTitleawindllawinapi_testaget_osfhandleaGetConsoleModeaSetConsoleModeaENABLE_VIRTUAL_TERMINAL_PROCESSINGTEOSErrorETypeErrora__doc__a__file__a__spec__aoriginahas_locationa__cached__amsvcrtTaget_osfhandleuTawin32TOobjecta__prepare__aWinColora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucolorama.winterma__module__a__qualname__aBLACKaBLUEaGREENlaCYANaREDlaMAGENTAlaYELLOWaGREYa__orig_bases__aNORMALllaWinTerma__init__uWinTerm.__init__uWinTerm.get_attrsuWinTerm.set_attrsTnareset_alluWinTerm.reset_allTnFpaforeuWinTerm.foreabackuWinTerm.backTnFastyleuWinTerm.styleuWinTerm.set_consoleuWinTerm.get_positionaset_cursor_positionuWinTerm.set_cursor_positionTFacursor_adjustuWinTerm.cursor_adjustTlFaerase_screenuWinTerm.erase_screenaerase_lineuWinTerm.erase_lineaset_titleuWinTerm.set_titleaenable_vt_processingucolorama\winterm.pyu<module colorama.winterm>Ta__class__TaselfTaselfabackalightaon_stderrTaselfwxwyaon_stderrahandleapositionaadjusted_positionTafdahandleamodeTaselfamodeaon_stderrahandleacsbiafrom_coordacells_to_eraseTaselfamodeaon_stderrahandleacsbiacells_in_screenacells_before_cursorafrom_coordacells_to_eraseTaselfaforealightaon_stderrTw_TaselfahandleapositionTaselfaon_stderrTaselfavalueTaselfaattrsaon_stderrahandleTaselfapositionaon_stderrahandleTaselfatitleTaselfastyleaon_stderr.cryptography.__about__a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsa__author__a__copyright__a__version__a__all__u43.0.3uThe Python Cryptographic Authority and individual contributorsuCopyright 2013-2024 uucryptography\__about__.pyu<module cryptography.__about__>.cryptographyha__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.__about__Ta__author__a__copyright__a__version__la__author__a__copyright__a__version__a__all__ucryptography\__init__.pyu<module cryptography>u.cryptography.exceptionsV/a__class__a__init__a_reasonaerr_codea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.hazmat.bindings._rustTaexceptionslaexceptionsarust_exceptionsa_ReasonsTEExceptiona__prepare__aUnsupportedAlgorithma__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.exceptionsa__module__a__qualname__TnDamessageareasonareturnastru_Reasons | NoneaNoneuUnsupportedAlgorithm.__init__a__orig_bases__aAlreadyFinalizedaAlreadyUpdatedaNotYetFinalizedaInvalidTagaInvalidSignatureaInternalErrorDamsgaerr_codeareturnastrulist[rust_openssl.OpenSSLError]aNoneuInternalError.__init__aInvalidKeyucryptography\exceptions.pyu<module cryptography.exceptions>Ta__class__Taselfamsgaerr_codea__class__Taselfamessageareasona__class__u.cryptography.hazmat._oidoa__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsucryptography.hazmat.bindings._rustTaObjectIdentifierlaObjectIdentifierucryptography.hazmat.primitivesTahashesahashesucryptography.hazmat._oida__module__aExtensionOIDa__qualname__Tu2.5.29.9aSUBJECT_DIRECTORY_ATTRIBUTESTu2.5.29.14aSUBJECT_KEY_IDENTIFIERTu2.5.29.15aKEY_USAGETu2.5.29.17aSUBJECT_ALTERNATIVE_NAMETu2.5.29.18aISSUER_ALTERNATIVE_NAMETu2.5.29.19aBASIC_CONSTRAINTSTu2.5.29.30aNAME_CONSTRAINTSTu2.5.29.31aCRL_DISTRIBUTION_POINTSTu2.5.29.32aCERTIFICATE_POLICIESTu2.5.29.33aPOLICY_MAPPINGSTu2.5.29.35aAUTHORITY_KEY_IDENTIFIERTu2.5.29.36aPOLICY_CONSTRAINTSTu2.5.29.37aEXTENDED_KEY_USAGETu2.5.29.46aFRESHEST_CRLTu2.5.29.54aINHIBIT_ANY_POLICYTu2.5.29.28aISSUING_DISTRIBUTION_POINTTu1.3.6.1.5.5.7.1.1aAUTHORITY_INFORMATION_ACCESSTu1.3.6.1.5.5.7.1.11aSUBJECT_INFORMATION_ACCESSTu1.3.6.1.5.5.7.48.1.5aOCSP_NO_CHECKTu1.3.6.1.5.5.7.1.24aTLS_FEATURETu2.5.29.20aCRL_NUMBERTu2.5.29.27aDELTA_CRL_INDICATORTu1.3.6.1.4.1.11129.2.4.2aPRECERT_SIGNED_CERTIFICATE_TIMESTAMPSTu1.3.6.1.4.1.11129.2.4.3aPRECERT_POISONTu1.3.6.1.4.1.11129.2.4.5aSIGNED_CERTIFICATE_TIMESTAMPSTu1.3.6.1.4.1.311.21.7aMS_CERTIFICATE_TEMPLATEaOCSPExtensionOIDTu1.3.6.1.5.5.7.48.1.2aNONCETu1.3.6.1.5.5.7.48.1.4aACCEPTABLE_RESPONSESaCRLEntryExtensionOIDTu2.5.29.29aCERTIFICATE_ISSUERTu2.5.29.21aCRL_REASONTu2.5.29.24aINVALIDITY_DATEaNameOIDTu2.5.4.3aCOMMON_NAMETu2.5.4.6aCOUNTRY_NAMETu2.5.4.7aLOCALITY_NAMETu2.5.4.8aSTATE_OR_PROVINCE_NAMETu2.5.4.9aSTREET_ADDRESSTu2.5.4.97aORGANIZATION_IDENTIFIERTu2.5.4.10aORGANIZATION_NAMETu2.5.4.11aORGANIZATIONAL_UNIT_NAMETu2.5.4.5aSERIAL_NUMBERTu2.5.4.4aSURNAMETu2.5.4.42aGIVEN_NAMETu2.5.4.12aTITLETu2.5.4.43aINITIALSTu2.5.4.44aGENERATION_QUALIFIERTu2.5.4.45aX500_UNIQUE_IDENTIFIERTu2.5.4.46aDN_QUALIFIERTu2.5.4.65aPSEUDONYMTu0.9.2342.19200300.100.1.1aUSER_IDTu0.9.2342.19200300.100.1.25aDOMAIN_COMPONENTTu1.2.840.113549.1.9.1aEMAIL_ADDRESSTu1.3.6.1.4.1.311.60.2.1.3aJURISDICTION_COUNTRY_NAMETu1.3.6.1.4.1.311.60.2.1.1aJURISDICTION_LOCALITY_NAMETu1.3.6.1.4.1.311.60.2.1.2aJURISDICTION_STATE_OR_PROVINCE_NAMETu2.5.4.15aBUSINESS_CATEGORYTu2.5.4.16aPOSTAL_ADDRESSTu2.5.4.17aPOSTAL_CODETu1.2.643.3.131.1.1aINNTu1.2.643.100.1aOGRNTu1.2.643.100.3aSNILSTu1.2.840.113549.1.9.2aUNSTRUCTURED_NAMEaSignatureAlgorithmOIDTu1.2.840.113549.1.1.4aRSA_WITH_MD5Tu1.2.840.113549.1.1.5aRSA_WITH_SHA1Tu1.3.14.3.2.29a_RSA_WITH_SHA1Tu1.2.840.113549.1.1.14aRSA_WITH_SHA224Tu1.2.840.113549.1.1.11aRSA_WITH_SHA256Tu1.2.840.113549.1.1.12aRSA_WITH_SHA384Tu1.2.840.113549.1.1.13aRSA_WITH_SHA512Tu2.16.840.1.101.3.4.3.13aRSA_WITH_SHA3_224Tu2.16.840.1.101.3.4.3.14aRSA_WITH_SHA3_256Tu2.16.840.1.101.3.4.3.15aRSA_WITH_SHA3_384Tu2.16.840.1.101.3.4.3.16aRSA_WITH_SHA3_512Tu1.2.840.113549.1.1.10aRSASSA_PSSTu1.2.840.10045.4.1aECDSA_WITH_SHA1Tu1.2.840.10045.4.3.1aECDSA_WITH_SHA224Tu1.2.840.10045.4.3.2aECDSA_WITH_SHA256Tu1.2.840.10045.4.3.3aECDSA_WITH_SHA384Tu1.2.840.10045.4.3.4aECDSA_WITH_SHA512Tu2.16.840.1.101.3.4.3.9aECDSA_WITH_SHA3_224Tu2.16.840.1.101.3.4.3.10aECDSA_WITH_SHA3_256Tu2.16.840.1.101.3.4.3.11aECDSA_WITH_SHA3_384Tu2.16.840.1.101.3.4.3.12aECDSA_WITH_SHA3_512Tu1.2.840.10040.4.3aDSA_WITH_SHA1Tu2.16.840.1.101.3.4.3.1aDSA_WITH_SHA224Tu2.16.840.1.101.3.4.3.2aDSA_WITH_SHA256Tu2.16.840.1.101.3.4.3.3aDSA_WITH_SHA384Tu2.16.840.1.101.3.4.3.4aDSA_WITH_SHA512Tu1.3.101.112aED25519Tu1.3.101.113aED448Tu1.2.643.2.2.3aGOSTR3411_94_WITH_3410_2001Tu1.2.643.7.1.1.3.2aGOSTR3410_2012_WITH_3411_2012_256Tu1.2.643.7.1.1.3.3aGOSTR3410_2012_WITH_3411_2012_512aMD5aSHA1aSHA224aSHA256aSHA384aSHA512aSHA3_224aSHA3_256aSHA3_384aSHA3_512a_SIG_OIDS_TO_HASHudict[ObjectIdentifier, hashes.HashAlgorithm | None]aPublicKeyAlgorithmOIDTu1.2.840.10040.4.1aDSATu1.2.840.10045.2.1aEC_PUBLIC_KEYTu1.2.840.113549.1.1.1aRSAES_PKCS1_v1_5Tu1.3.101.110aX25519Tu1.3.101.111aX448aExtendedKeyUsageOIDTu1.3.6.1.5.5.7.3.1aSERVER_AUTHTu1.3.6.1.5.5.7.3.2aCLIENT_AUTHTu1.3.6.1.5.5.7.3.3aCODE_SIGNINGTu1.3.6.1.5.5.7.3.4aEMAIL_PROTECTIONTu1.3.6.1.5.5.7.3.8aTIME_STAMPINGTu1.3.6.1.5.5.7.3.9aOCSP_SIGNINGTu2.5.29.37.0aANY_EXTENDED_KEY_USAGETu1.3.6.1.4.1.311.20.2.2aSMARTCARD_LOGONTu1.3.6.1.5.2.3.5aKERBEROS_PKINIT_KDCTu1.3.6.1.5.5.7.3.17aIPSEC_IKETu1.3.6.1.4.1.11129.2.4.4aCERTIFICATE_TRANSPARENCYaAuthorityInformationAccessOIDTu1.3.6.1.5.5.7.48.2aCA_ISSUERSTu1.3.6.1.5.5.7.48.1aOCSPaSubjectInformationAccessOIDTu1.3.6.1.5.5.7.48.5aCA_REPOSITORYaCertificatePoliciesOIDTu1.3.6.1.5.5.7.2.1aCPS_QUALIFIERTu1.3.6.1.5.5.7.2.2aCPS_USER_NOTICETu2.5.29.32.0aANY_POLICYaAttributeOIDTu1.2.840.113549.1.9.7aCHALLENGE_PASSWORDacommonNameacountryNamealocalityNameastateOrProvinceNameastreetAddressaorganizationNameaorganizationalUnitNameaserialNumberasurnameagivenNameatitleagenerationQualifierax500UniqueIdentifieradnQualifierapseudonymauserIDadomainComponentaemailAddressajurisdictionCountryNameajurisdictionLocalityNameajurisdictionStateOrProvinceNameabusinessCategoryapostalAddressapostalCodeaunstructuredNameamd5WithRSAEncryptionasha1WithRSAEncryptionasha224WithRSAEncryptionasha256WithRSAEncryptionasha384WithRSAEncryptionasha512WithRSAEncryptionuRSASSA-PSSuecdsa-with-SHA1uecdsa-with-SHA224uecdsa-with-SHA256uecdsa-with-SHA384uecdsa-with-SHA512udsa-with-sha1udsa-with-sha224udsa-with-sha256aed25519aed448uGOST R 34.11-94 with GOST R 34.10-2001uGOST R 34.10-2012 with GOST R 34.11-2012 (256 bit)uGOST R 34.10-2012 with GOST R 34.11-2012 (512 bit)adsaEncryptionuid-ecPublicKeyarsaEncryptionarsassaPssaserverAuthaclientAuthacodeSigningaemailProtectionatimeStampingaOCSPSigningamsSmartcardLoginapkInitKDCasubjectDirectoryAttributesasubjectKeyIdentifierakeyUsageasubjectAltNameaissuerAltNameabasicConstraintsasignedCertificateTimestampListactPoisonamsCertificateTemplateacRLReasonainvalidityDateacertificateIssueranameConstraintsacRLDistributionPointsacertificatePoliciesapolicyMappingsaauthorityKeyIdentifierapolicyConstraintsaextendedKeyUsageafreshestCRLainhibitAnyPolicyaissuingDistributionPointaauthorityInfoAccessasubjectInfoAccessaOCSPNoCheckacRLNumberadeltaCRLIndicatoraTLSFeatureacaIssuersacaRepositoryuid-qt-cpsuid-qt-unoticeaOCSPNonceachallengePassworda_OID_NAMESucryptography\hazmat\_oid.pyu<module cryptography.hazmat._oid>Ta__class__u.cryptography.hazmat.backendsucryptography.hazmat.backends.openssl.backendTabackendlabackenda__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\backendsTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingabackendsTaNUITKA_PACKAGE_cryptography_hazmat_backendsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsaAnyDareturnaAnyadefault_backenducryptography\hazmat\backends\__init__.pyu<module cryptography.hazmat.backends>u.cryptography.hazmat.backends.openssl.backend^abindingaBindinga_bindingaffia_ffialiba_libarust_opensslais_fips_enableda_fips_enabledu<OpenSSLBackend(version: aopenssl_version_textuu, FIPS: u, Legacy: a_legacy_provider_loadedu)>a_openssl_assertaenable_fipsa_providersu
        Friendly string name of the loaded OpenSSL library. This is not
        necessarily the same version as it was compiled against.

        Example: OpenSSL 3.2.1 30 Jan 2024
        aopenssl_versionanameTablake2bablake2sadigest_sizelaasciiaencodeTaasciiaEVP_get_digestbynamea_fips_hashesa_evp_md_from_algorithmaNULLahashesaSHA1ahash_supportedakdfaderive_scrypta_fips_ciphersaciphersacipher_supportedahmac_supportedacapture_error_stackaSHA224aSHA256aSHA384aSHA512aPKCS1v15aPSSa_mgfaMGF1a_algorithmaOAEPa_oaep_hash_supportedarsa_padding_supportedaCRYPTOGRAPHY_IS_BORINGSSLadsa_supportedasignature_hash_supportedaCBCdablock_sizea_fips_ecdh_curvesaecacurve_supportedaECDSAaelliptic_curve_supportedaalgorithmaasym_utilsaPrehashedaECDHaCryptography_HAS_EVP_PKEY_DHXlaCRYPTOGRAPHY_IS_LIBRESSLaCRYPTOGRAPHY_OPENSSL_320_OR_GREATERa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucryptography.hazmat.bindings._rustTaopenssllaopensslucryptography.hazmat.bindings.opensslTabindingucryptography.hazmat.primitivesTahashesucryptography.hazmat.primitives._asymmetricTaAsymmetricPaddingaAsymmetricPaddingucryptography.hazmat.primitives.asymmetricTaecTautilsautilsucryptography.hazmat.primitives.asymmetric.paddingTaMGF1aOAEPaPSSaPKCS1v15ucryptography.hazmat.primitives.ciphersTaCipherAlgorithmaCipherAlgorithmucryptography.hazmat.primitives.ciphers.algorithmsTaAESaAESucryptography.hazmat.primitives.ciphers.modesTaCBCaModeaModeucryptography.hazmat.backends.openssl.backenda__module__u
    OpenSSL API binding interfaces.
    aBackenda__qualname__aSHA512_224aSHA512_256aSHA3_224aSHA3_256aSHA3_384aSHA3_512aSHAKE128aSHAKE256aSECP224R1aSECP256R1aSECP384R1aSECP521R1la_fips_rsa_min_key_sizela_fips_rsa_min_public_exponenta_fips_dsa_min_modulusa_fips_dh_min_key_sizea_fips_dh_min_modulusDareturnaNonea__init__uBackend.__init__Dareturnastra__repr__uBackend.__repr__DaokareturnaboolaNoneaopenssl_assertuBackend.openssl_asserta_enable_fipsuBackend._enable_fipsuBackend.openssl_version_textDareturnaintaopenssl_version_numberuBackend.openssl_version_numberDaalgorithmuhashes.HashAlgorithmuBackend._evp_md_from_algorithmDaalgorithmareturnuhashes.HashAlgorithmabooluBackend.hash_supporteduBackend.signature_hash_supportedDareturnaboolascrypt_supporteduBackend.scrypt_supporteduBackend.hmac_supportedDacipheramodeareturnaCipherAlgorithmaModeabooluBackend.cipher_supportedapbkdf2_hmac_supporteduBackend.pbkdf2_hmac_supportedDareturnulist[rust_openssl.OpenSSLError]a_consume_errorsuBackend._consume_errorsuBackend._oaep_hash_supportedDapaddingareturnaAsymmetricPaddingabooluBackend.rsa_padding_supportedarsa_encryption_supporteduBackend.rsa_encryption_supporteduBackend.dsa_supportedadsa_hash_supporteduBackend.dsa_hash_supportedacmac_algorithm_supporteduBackend.cmac_algorithm_supportedDacurveareturnuec.EllipticCurveabooluBackend.elliptic_curve_supportedDasignature_algorithmacurveareturnuec.EllipticCurveSignatureAlgorithmuec.EllipticCurveaboolaelliptic_curve_signature_algorithm_supporteduBackend.elliptic_curve_signature_algorithm_supportedDaalgorithmacurveareturnuec.ECDHuec.EllipticCurveaboolaelliptic_curve_exchange_algorithm_supporteduBackend.elliptic_curve_exchange_algorithm_supportedadh_supporteduBackend.dh_supportedadh_x942_serialization_supporteduBackend.dh_x942_serialization_supportedax25519_supporteduBackend.x25519_supportedax448_supporteduBackend.x448_supportedaed25519_supporteduBackend.ed25519_supportedaed448_supporteduBackend.ed448_supportedaecdsa_deterministic_supporteduBackend.ecdsa_deterministic_supportedapoly1305_supporteduBackend.poly1305_supportedapkcs7_supporteduBackend.pkcs7_supportedabackenducryptography\hazmat\backends\openssl\backend.pyu<module cryptography.hazmat.backends.openssl.backend>Ta__class__TaselfTaselfaalgorithmaalgaevp_mdTaselfaalgorithmTaselfacipheramodeTaselfaalgorithmacurveTaselfasignature_algorithmacurveTaselfacurveTaselfaalgorithmaevp_mdTaselfaokTaselfapadding.cryptography.hazmat.backends.opensslca__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\backends\opensslTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingubackends\opensslTaNUITKA_PACKAGE_cryptography_hazmat_backendsu\not_existingaopensslTaNUITKA_PACKAGE_cryptography_hazmat_backends_opensslu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.hazmat.backends.openssl.backendTabackendlabackenda__all__ucryptography\hazmat\backends\openssl\__init__.pyu<module cryptography.hazmat.backends.openssl>u.cryptography.hazmat.bindingsa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\bindingsTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingabindingsTaNUITKA_PACKAGE_cryptography_hazmat_bindingsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ucryptography\hazmat\bindings\__init__.pyu<module cryptography.hazmat.bindings>u.cryptography.hazmat.bindings.openssl._conditionalJaSSL_CTX_set_cert_cbaSSL_set_cert_cbLaSSL_ST_BEFOREaSSL_ST_OKaSSL_ST_INITaSSL_ST_RENEGOTIATEaTLS_ST_BEFOREaTLS_ST_OKaSSL_CTX_set1_sigalgs_listaSSL_CTX_use_psk_identity_hintaSSL_CTX_set_psk_server_callbackaSSL_CTX_set_psk_client_callbackLaSSL_CTX_set_psk_find_session_callbackaSSL_CTX_set_psk_use_session_callbackaCryptography_SSL_SESSION_newaSSL_CIPHER_findaSSL_SESSION_set1_master_keyaSSL_SESSION_set_cipheraSSL_SESSION_set_protocol_versionaSSL_CTX_add_client_custom_extaSSL_CTX_add_server_custom_extaSSL_extension_supportedLaSSL_VERIFY_POST_HANDSHAKEaSSL_CTX_set_ciphersuitesaSSL_verify_client_post_handshakeaSSL_CTX_set_post_handshake_authaSSL_set_post_handshake_authaSSL_SESSION_get_max_early_dataaSSL_write_early_dataaSSL_read_early_dataaSSL_CTX_set_max_early_dataLaENGINE_by_idaENGINE_initaENGINE_finishaENGINE_get_default_RANDaENGINE_set_default_RANDaENGINE_unregister_RANDaENGINE_ctrl_cmdaENGINE_freeaENGINE_get_nameaENGINE_ctrl_cmd_stringaENGINE_load_builtin_enginesaENGINE_load_private_keyaENGINE_load_public_keyaSSL_CTX_set_client_cert_engineaSSL_get0_verified_chainaSSL_CTX_set_tlsext_use_srtpaSSL_set_tlsext_use_srtpaSSL_get_selected_srtp_profileaSSL_OP_NO_RENEGOTIATIONaDTLS_get_data_mtuLaSSL_OP_COOKIE_EXCHANGEaDTLSv1_listenaSSL_CTX_set_cookie_generate_cbaSSL_CTX_set_cookie_verify_cbaBN_prime_checks_for_sizeaSSL_R_UNEXPECTED_EOF_WHILE_READINGaSSL_OP_IGNORE_UNEXPECTED_EOFaSSL_get_extms_supporta__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsDareturnulist[str]acryptography_has_set_cert_cbacryptography_has_ssl_stacryptography_has_tls_stacryptography_has_ssl_sigalgsacryptography_has_pskacryptography_has_psk_tlsv13acryptography_has_custom_extacryptography_has_tlsv13_functionsacryptography_has_engineacryptography_has_verified_chainacryptography_has_srtpacryptography_has_op_no_renegotiationacryptography_has_dtls_get_data_mtuacryptography_has_ssl_cookieacryptography_has_prime_checksacryptography_has_unexpected_eof_while_readingacryptography_has_ssl_op_ignore_unexpected_eofacryptography_has_get_extms_supportaCryptography_HAS_SET_CERT_CBaCryptography_HAS_SSL_STaCryptography_HAS_TLS_STaCryptography_HAS_SIGALGSaCryptography_HAS_PSKaCryptography_HAS_PSK_TLSv1_3aCryptography_HAS_CUSTOM_EXTaCryptography_HAS_TLSv1_3_FUNCTIONSaCryptography_HAS_ENGINEaCryptography_HAS_VERIFIED_CHAINaCryptography_HAS_SRTPaCryptography_HAS_OP_NO_RENEGOTIATIONaCryptography_HAS_DTLS_GET_DATA_MTUaCryptography_HAS_SSL_COOKIEaCryptography_HAS_PRIME_CHECKSaCryptography_HAS_UNEXPECTED_EOF_WHILE_READINGaCryptography_HAS_SSL_OP_IGNORE_UNEXPECTED_EOFaCryptography_HAS_GET_EXTMS_SUPPORTaCONDITIONAL_NAMESucryptography\hazmat\bindings\openssl\_conditional.pyu<module cryptography.hazmat.bindings.openssl._conditional>u.cryptography.hazmat.bindings.openssl.bindingXaopensslacapture_error_stackaInternalErroruUnknown OpenSSL error. This error is commonly encountered when another library is not cleaning up the OpenSSL error stack. If you are using cryptography with another library that uses OpenSSL try disabling it before reporting a bug. Otherwise please file an issue at https://github.com/pyca/cryptography/issues with information on how to reproduce this. (uw)aModuleTypeTaliba_original_libaitemsutoo many values to unpack (expected 2)aexcluded_namesaupdatea_ensure_ffi_initializeda_init_locka__enter__a__exit__a_lib_loadedabuild_conditional_librarya_opensslalibaCONDITIONAL_NAMESTnnnaffiastringaCRYPTOGRAPHY_PACKAGE_VERSIONaencodeTaasciiuThe version of cryptography does not match the loaded shared object. This can happen if you have multiple copies of cryptography installed in your Python path. Please try creating a new virtual environment to resolve this issue. Loaded python version: u, shared object version: a_openssl_assertaOpenSSL_version_numaopenssl_versiona__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaosasysathreadinglatypesatypingawarningsacryptographyucryptography.exceptionsTaInternalErrorucryptography.hazmat.bindings._rustTa_opensslaopensslucryptography.hazmat.bindings.openssl._conditionalTaCONDITIONAL_NAMESDaokareturnaboolaNoneDalibaconditional_namesareturnutyping.Anyudict[str, typing.Callable[[], list[str]]]utyping.Anyucryptography.hazmat.bindings.openssl.bindinga__module__u
    OpenSSL API wrapper.
    aBindinga__qualname__a__annotations__utyping.ClassVaraLockDareturnaNonea__init__uBinding.__init__uBinding._ensure_ffi_initializedainit_static_locksuBinding.init_static_locksDaversionareturnastraNonea_verify_package_versiona__version__aenvironagetTaPROCESSOR_ARCHITEW6432awarnuYou are using cryptography on a 32-bit Python on a 64-bit Windows Operating System. Cryptography will be significantly faster if you switch to using a 64-bit Python.aUserWarningDastacklevellucryptography\hazmat\bindings\openssl\binding.pyu<module cryptography.hazmat.bindings.openssl.binding>Ta__class__TaselfTaclsTaokaerrorsTaversionaso_package_versionTalibaconditional_namesaconditional_libaexcluded_namesaconditionanames_cbaattr.cryptography.hazmat.bindings.openssla__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\bindings\opensslTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingubindings\opensslTaNUITKA_PACKAGE_cryptography_hazmat_bindingsu\not_existingaopensslTaNUITKA_PACKAGE_cryptography_hazmat_bindings_opensslu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ucryptography\hazmat\bindings\openssl\__init__.pyu<module cryptography.hazmat.bindings.openssl>u.cryptography.hazmatDa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existingahazmatTaNUITKA_PACKAGE_cryptography_hazmatu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography\hazmat\__init__.pyu<module cryptography.hazmat>u.cryptography.hazmat.decrepit.ciphers.algorithmsAKa_verify_key_sizeakeyl:nlna__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucryptography.hazmat.primitives._cipheralgorithmTaBlockCipherAlgorithmaCipherAlgorithma_verify_key_sizelaBlockCipherAlgorithmaCipherAlgorithma__prepare__aARC4a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.decrepit.ciphers.algorithmsa__module__a__qualname__aRC4anameafrozensetLl(l8l@lPllllPl@lllll(lPl8akey_sizesDakeyabytesa__init__uARC4.__init__apropertyDareturnaintakey_sizeuARC4.key_sizea__orig_bases__aTripleDESu3DESl@ablock_sizellPl@lluTripleDES.__init__uTripleDES.key_sizeaBlowfisharangeTl ll;l lluBlowfish.__init__uBlowfish.key_sizeaCAST5Tl(ll;l(lluCAST5.__init__uCAST5.key_sizeaSEEDPluSEED.__init__uSEED.key_sizeaIDEAuIDEA.__init__uIDEA.key_sizeaRC2uRC2.__init__uRC2.key_sizeucryptography\hazmat\decrepit\ciphers\algorithms.pyu<module cryptography.hazmat.decrepit.ciphers.algorithms>Ta__class__TaselfakeyTaselfu.cryptography.hazmat.decrepit.ciphersa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\decrepit\ciphersTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingudecrepit\ciphersTaNUITKA_PACKAGE_cryptography_hazmat_decrepitu\not_existingaciphersTaNUITKA_PACKAGE_cryptography_hazmat_decrepit_ciphersu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography\hazmat\decrepit\ciphers\__init__.pyu<module cryptography.hazmat.decrepit.ciphers>u.cryptography.hazmat.decrepita__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\decrepitTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingadecrepitTaNUITKA_PACKAGE_cryptography_hazmat_decrepitu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography\hazmat\decrepit\__init__.pyu<module cryptography.hazmat.decrepit>u.cryptography.hazmat.primitives._asymmetricD a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclametaclassaABCMetaa__prepare__TaAsymmetricPaddingTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives._asymmetrica__module__aAsymmetricPaddinga__qualname__apropertyaabstractmethodDareturnastru
        A string naming this padding (e.g. "PSS", "PKCS1").
        anameuAsymmetricPadding.nameucryptography\hazmat\primitives\_asymmetric.pyu<module cryptography.hazmat.primitives._asymmetric>Ta__class__Taselfu.cryptography.hazmat.primitives._cipheralgorithm;autilsa_check_byteslikeakeylakey_sizesuInvalid key size (uu) for anamew.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclacryptographyTautilsametaclassaABCMetaa__prepare__TaCipherAlgorithmTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives._cipheralgorithma__module__aCipherAlgorithma__qualname__apropertyaabstractmethodDareturnastru
        A string naming this mode (e.g. "AES", "Camellia").
        uCipherAlgorithm.nameDareturnufrozenset[int]u
        Valid key sizes for this algorithm in bits
        uCipherAlgorithm.key_sizesDareturnaintu
        The size of the key being used as an integer in bits (e.g. 128, 256).
        akey_sizeuCipherAlgorithm.key_sizeaBlockCipherAlgorithma__annotations__abytesu
        The size of a block as an integer in bits (e.g. 64, 128).
        ablock_sizeuBlockCipherAlgorithm.block_sizea__orig_bases__DaalgorithmakeyareturnaCipherAlgorithmabytespa_verify_key_sizeucryptography\hazmat\primitives\_cipheralgorithm.pyu<module cryptography.hazmat.primitives._cipheralgorithm>Ta__class__TaalgorithmakeyTaself.cryptography.hazmat.primitives._serializationopaPrivateFormataOpenSSHaPKCS12uencryption_builder only supported with PrivateFormat.OpenSSH and PrivateFormat.PKCS12aKeySerializationEncryptionBuilderuPassword must be 1 or more bytes.apassworda_formata_kdf_roundsa_hmac_hasha_key_cert_algorithmukdf_rounds already setukdf_rounds must be an integerlukdf_rounds must be a positive integerTa_kdf_roundsa_hmac_hasha_key_cert_algorithmuhmac_hash only supported with PrivateFormat.PKCS12uhmac_hash already setukey_cert_algorithm only supported with PrivateFormat.PKCS12ukey_cert_algorithm already seta_KeySerializationEncryptionTakdf_roundsahmac_hashakey_cert_algorithma__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclacryptographyTautilsautilsucryptography.hazmat.primitives.hashesTaHashAlgorithmaHashAlgorithmaEnuma__prepare__aPBESa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives._serializationa__module__a__qualname__uPBESv1 using SHA1 and 3-Key TripleDESaPBESv1SHA1And3KeyTripleDESCBCuPBESv2 using SHA256 PBKDF2 and AES256 CBCaPBESv2SHA256AndAES256CBCa__orig_bases__aEncodingaPEMaDERaRawuANSI X9.62aX962uS/MIMEaSMIMEaPKCS8aTraditionalOpenSSLDareturnaKeySerializationEncryptionBuilderaencryption_builderuPrivateFormat.encryption_builderaPublicFormatuX.509 subjectPublicKeyInfo with PKCS#1aSubjectPublicKeyInfouRaw PKCS#1aPKCS1uX9.62 Compressed PointaCompressedPointuX9.62 Uncompressed PointaUncompressedPointaParameterFormataPKCS3ametaclassaABCMetaTaKeySerializationEncryptionTaKeySerializationEncryptionaBestAvailableEncryptionDapasswordabytesa__init__uBestAvailableEncryption.__init__aNoEncryptionDa_kdf_roundsa_hmac_hasha_key_cert_algorithmnnnDaformata_kdf_roundsa_hmac_hasha_key_cert_algorithmareturnaPrivateFormatuint | NoneuHashAlgorithm | NoneuPBES | NoneaNoneuKeySerializationEncryptionBuilder.__init__DaroundsareturnaintaKeySerializationEncryptionBuilderakdf_roundsuKeySerializationEncryptionBuilder.kdf_roundsDaalgorithmareturnaHashAlgorithmaKeySerializationEncryptionBuilderahmac_hashuKeySerializationEncryptionBuilder.hmac_hashDaalgorithmareturnaPBESaKeySerializationEncryptionBuilderakey_cert_algorithmuKeySerializationEncryptionBuilder.key_cert_algorithmDapasswordareturnabytesaKeySerializationEncryptionabuilduKeySerializationEncryptionBuilder.buildDaformatapasswordakdf_roundsahmac_hashakey_cert_algorithmaPrivateFormatabytesuint | NoneuHashAlgorithm | NoneuPBES | Noneu_KeySerializationEncryption.__init__ucryptography\hazmat\primitives\_serialization.pyu<module cryptography.hazmat.primitives._serialization>Ta__class__TaselfapasswordTaselfaformata_kdf_roundsa_hmac_hasha_key_cert_algorithmTaselfaformatapasswordakdf_roundsahmac_hashakey_cert_algorithmTaselfTaselfaalgorithmTaselfaroundsu.cryptography.hazmat.primitives.asymmetric'a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\primitives\asymmetricTaNUITKA_PACKAGE_cryptography_hazmatu\not_existinguprimitives\asymmetricTaNUITKA_PACKAGE_cryptography_hazmat_primitivesu\not_existingaasymmetricTaNUITKA_PACKAGE_cryptography_hazmat_primitives_asymmetricu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ucryptography\hazmat\primitives\asymmetric\__init__.pyu<module cryptography.hazmat.primitives.asymmetric>u.cryptography.hazmat.primitives.asymmetric.dh
fa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslucryptography.hazmat.primitivesTa_serializationa_serializationadhagenerate_parametersaDHPrivateNumbersaDHPublicNumbersaDHParameterNumbersametaclassaABCMetaa__prepare__TaDHParametersTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.dha__module__aDHParametersa__qualname__aabstractmethodDareturnaDHPrivateKeyu
        Generates and returns a DHPrivateKey.
        agenerate_private_keyuDHParameters.generate_private_keyDaencodingaformatareturnu_serialization.Encodingu_serialization.ParameterFormatabytesu
        Returns the parameters serialized as bytes.
        aparameter_bytesuDHParameters.parameter_bytesDareturnaDHParameterNumbersu
        Returns a DHParameterNumbers.
        aparameter_numbersuDHParameters.parameter_numbersaDHParametersWithSerializationaregisterTaDHPublicKeyTaDHPublicKeyapropertyDareturnaintu
        The bit length of the prime modulus.
        akey_sizeuDHPublicKey.key_sizeDareturnaDHParametersu
        The DHParameters object associated with this public key.
        aparametersuDHPublicKey.parametersDareturnaDHPublicNumbersu
        Returns a DHPublicNumbers.
        apublic_numbersuDHPublicKey.public_numbersDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        Returns the key serialized as bytes.
        apublic_bytesuDHPublicKey.public_bytesDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uDHPublicKey.__eq__aDHPublicKeyWithSerializationTaDHPrivateKeyTaDHPrivateKeyuDHPrivateKey.key_sizeDareturnaDHPublicKeyu
        The DHPublicKey associated with this private key.
        apublic_keyuDHPrivateKey.public_keyu
        The DHParameters object associated with this private key.
        uDHPrivateKey.parametersDapeer_public_keyareturnaDHPublicKeyabytesu
        Given peer's DHPublicKey, carry out the key exchange and
        return shared key as bytes.
        aexchangeuDHPrivateKey.exchangeDareturnaDHPrivateNumbersu
        Returns a DHPrivateNumbers.
        aprivate_numbersuDHPrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesaprivate_bytesuDHPrivateKey.private_bytesaDHPrivateKeyWithSerializationucryptography\hazmat\primitives\asymmetric\dh.pyu<module cryptography.hazmat.primitives.asymmetric.dh>Ta__class__TaselfaotherTaselfapeer_public_keyTaselfTaselfaencodingaformatTaselfaencodingaformataencryption_algorithmu.cryptography.hazmat.primitives.asymmetric.dsa`tTllll uKey size must be 1024, 2048, 3072, or 4096 bits.arust_openssladsaagenerate_parametersagenerate_private_keya__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypingucryptography.hazmat.bindings._rustTaopensslaopensslucryptography.hazmat.primitivesTa_serializationahashesa_serializationahashesucryptography.hazmat.primitives.asymmetricTautilsautilsaasym_utilsametaclassaABCMetaa__prepare__TaDSAParametersTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.dsaa__module__aDSAParametersa__qualname__aabstractmethodDareturnaDSAPrivateKeyu
        Generates and returns a DSAPrivateKey.
        uDSAParameters.generate_private_keyDareturnaDSAParameterNumbersu
        Returns a DSAParameterNumbers.
        aparameter_numbersuDSAParameters.parameter_numbersaDSAParametersWithNumbersaregisterTaDSAPrivateKeyTaDSAPrivateKeyapropertyDareturnaintu
        The bit length of the prime modulus.
        akey_sizeuDSAPrivateKey.key_sizeDareturnaDSAPublicKeyu
        The DSAPublicKey associated with this private key.
        apublic_keyuDSAPrivateKey.public_keyDareturnaDSAParametersu
        The DSAParameters object associated with this private key.
        aparametersuDSAPrivateKey.parametersDadataaalgorithmareturnabytesuasym_utils.Prehashed | hashes.HashAlgorithmabytesu
        Signs the data
        asignuDSAPrivateKey.signDareturnaDSAPrivateNumbersu
        Returns a DSAPrivateNumbers.
        aprivate_numbersuDSAPrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        Returns the key serialized as bytes.
        aprivate_bytesuDSAPrivateKey.private_bytesaDSAPrivateKeyWithSerializationTaDSAPublicKeyTaDSAPublicKeyuDSAPublicKey.key_sizeu
        The DSAParameters object associated with this public key.
        uDSAPublicKey.parametersDareturnaDSAPublicNumbersu
        Returns a DSAPublicNumbers.
        apublic_numbersuDSAPublicKey.public_numbersDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesapublic_bytesuDSAPublicKey.public_bytesDasignatureadataaalgorithmareturnabytespuasym_utils.Prehashed | hashes.HashAlgorithmaNoneu
        Verifies the signature of the data.
        averifyuDSAPublicKey.verifyDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uDSAPublicKey.__eq__aDSAPublicKeyWithSerializationaDSAPrivateNumbersaDSAPublicNumbersaDSAParameterNumbersTnDakey_sizeabackendareturnaintutyping.AnyaDSAParametersDakey_sizeabackendareturnaintutyping.AnyaDSAPrivateKeyucryptography\hazmat\primitives\asymmetric\dsa.pyu<module cryptography.hazmat.primitives.asymmetric.dsa>Ta__class__TaselfaotherTakey_sizeabackendTaselfTakey_sizeabackendaparametersTaselfaencodingaformataencryption_algorithmTaselfaencodingaformatTaselfadataaalgorithmTaselfasignatureadataaalgorithmu.cryptography.hazmat.primitives.asymmetric.ecautilsa_check_bytesadataudata must not be an empty byte stringlTllluUnsupported elliptic curve point typearust_opensslaecafrom_public_bytesucryptography.hazmat.backends.openssl.backendTabackendabackendaecdsa_deterministic_supportedaUnsupportedAlgorithmuECDSA with deterministic signature (RFC 6979) is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_PUBLIC_KEY_ALGORITHMa_algorithma_deterministic_signinguprivate_value must be an integer type.uprivate_value must be a positive integer.aderive_private_keya_OID_TO_CURVEuThe provided object identifier has no matching elliptic curve classa__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsaabcatypingacryptographyTautilsucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat._oidTaObjectIdentifieraObjectIdentifierucryptography.hazmat.bindings._rustTaopensslaopensslucryptography.hazmat.primitivesTa_serializationahashesa_serializationahashesucryptography.hazmat.primitives.asymmetricaasym_utilsucryptography.hazmat.primitives.asymmetric.eca__module__aEllipticCurveOIDa__qualname__Tu1.2.840.10045.3.1.1aSECP192R1Tu1.3.132.0.33aSECP224R1Tu1.3.132.0.10aSECP256K1Tu1.2.840.10045.3.1.7aSECP256R1Tu1.3.132.0.34aSECP384R1Tu1.3.132.0.35aSECP521R1Tu1.3.36.3.3.2.8.1.1.7aBRAINPOOLP256R1Tu1.3.36.3.3.2.8.1.1.11aBRAINPOOLP384R1Tu1.3.36.3.3.2.8.1.1.13aBRAINPOOLP512R1Tu1.3.132.0.1aSECT163K1Tu1.3.132.0.15aSECT163R2Tu1.3.132.0.26aSECT233K1Tu1.3.132.0.27aSECT233R1Tu1.3.132.0.16aSECT283K1Tu1.3.132.0.17aSECT283R1Tu1.3.132.0.36aSECT409K1Tu1.3.132.0.37aSECT409R1Tu1.3.132.0.38aSECT571K1Tu1.3.132.0.39aSECT571R1ametaclassaABCMetaa__prepare__TaEllipticCurveTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>aEllipticCurveapropertyaabstractmethodDareturnastru
        The name of the curve. e.g. secp256r1.
        anameuEllipticCurve.nameDareturnaintu
        Bit size of a secret scalar for the curve.
        akey_sizeuEllipticCurve.key_sizeTaEllipticCurveSignatureAlgorithmTaEllipticCurveSignatureAlgorithmDareturnuasym_utils.Prehashed | hashes.HashAlgorithmu
        The digest algorithm used with this signature.
        aalgorithmuEllipticCurveSignatureAlgorithm.algorithmTaEllipticCurvePrivateKeyTaEllipticCurvePrivateKeyDaalgorithmapeer_public_keyareturnaECDHaEllipticCurvePublicKeyabytesu
        Performs a key exchange operation using the provided algorithm with the
        provided peer's public key.
        aexchangeuEllipticCurvePrivateKey.exchangeDareturnaEllipticCurvePublicKeyu
        The EllipticCurvePublicKey for this private key.
        apublic_keyuEllipticCurvePrivateKey.public_keyDareturnaEllipticCurveu
        The EllipticCurve that this key is on.
        acurveuEllipticCurvePrivateKey.curveuEllipticCurvePrivateKey.key_sizeDadataasignature_algorithmareturnabytesaEllipticCurveSignatureAlgorithmabytesu
        Signs the data
        asignuEllipticCurvePrivateKey.signDareturnaEllipticCurvePrivateNumbersu
        Returns an EllipticCurvePrivateNumbers.
        aprivate_numbersuEllipticCurvePrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        Returns the key serialized as bytes.
        aprivate_bytesuEllipticCurvePrivateKey.private_bytesaEllipticCurvePrivateKeyWithSerializationaregisteraECPrivateKeyTaEllipticCurvePublicKeyTaEllipticCurvePublicKeyuEllipticCurvePublicKey.curveuEllipticCurvePublicKey.key_sizeDareturnaEllipticCurvePublicNumbersu
        Returns an EllipticCurvePublicNumbers.
        apublic_numbersuEllipticCurvePublicKey.public_numbersDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesapublic_bytesuEllipticCurvePublicKey.public_bytesDasignatureadataasignature_algorithmareturnabytespaEllipticCurveSignatureAlgorithmaNoneu
        Verifies the signature of the data.
        averifyuEllipticCurvePublicKey.verifyaclassmethodDacurveadataareturnaEllipticCurveabytesaEllipticCurvePublicKeyafrom_encoded_pointuEllipticCurvePublicKey.from_encoded_pointDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uEllipticCurvePublicKey.__eq__aEllipticCurvePublicKeyWithSerializationaECPublicKeyaEllipticCurvePrivateNumbersaEllipticCurvePublicNumbersasect571r1la__orig_bases__asect409r1lasect283r1lasect233r1lasect163r2lasect571k1lasect409k1asect283k1asect233k1asect163k1asecp521r1lasecp384r1lasecp256r1lasecp256k1asecp224r1lasecp192r1laBrainpoolP256R1abrainpoolP256r1aBrainpoolP384R1abrainpoolP384r1aBrainpoolP512R1abrainpoolP512r1laprime192v1aprime256v1a_CURVE_TYPESudict[str, EllipticCurve]aECDSATFDaalgorithmadeterministic_signinguasym_utils.Prehashed | hashes.HashAlgorithmaboola__init__uECDSA.__init__uECDSA.algorithmDareturnabooladeterministic_signinguECDSA.deterministic_signingagenerate_private_keyTnDaprivate_valueacurveabackendareturnaintaEllipticCurveutyping.AnyaEllipticCurvePrivateKeyaECDHDaoidareturnaObjectIdentifierutype[EllipticCurve]aget_curve_for_oiducryptography\hazmat\primitives\asymmetric\ec.pyu<module cryptography.hazmat.primitives.asymmetric.ec>Ta__class__TaselfaotherTaselfaalgorithmadeterministic_signingabackendTaselfTaprivate_valueacurveabackendTaselfaalgorithmapeer_public_keyTaclsacurveadataTaoidTaselfaencodingaformataencryption_algorithmTaselfaencodingaformatTaselfadataasignature_algorithmTaselfasignatureadataasignature_algorithmu.cryptography.hazmat.primitives.asymmetric.ed25519F
aucryptography.hazmat.backends.openssl.backendTabackendlabackendaed25519_supportedaUnsupportedAlgorithmued25519 is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_PUBLIC_KEY_ALGORITHMarust_opensslaed25519afrom_public_bytesagenerate_keyafrom_private_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.bindings._rustTaopensslaopensslucryptography.hazmat.primitivesTa_serializationa_serializationametaclassaABCMetaa__prepare__TaEd25519PublicKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.ed25519a__module__aEd25519PublicKeya__qualname__aclassmethodDadataareturnabytesaEd25519PublicKeyuEd25519PublicKey.from_public_bytesaabstractmethodDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        The serialized bytes of the public key.
        apublic_bytesuEd25519PublicKey.public_bytesDareturnabytesu
        The raw bytes of the public key.
        Equivalent to public_bytes(Raw, Raw).
        apublic_bytes_rawuEd25519PublicKey.public_bytes_rawDasignatureadataareturnabytespaNoneu
        Verify the signature.
        averifyuEd25519PublicKey.verifyDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uEd25519PublicKey.__eq__aregisterTaEd25519PrivateKeyTaEd25519PrivateKeyDareturnaEd25519PrivateKeyagenerateuEd25519PrivateKey.generateDadataareturnabytesaEd25519PrivateKeyuEd25519PrivateKey.from_private_bytesDareturnaEd25519PublicKeyu
        The Ed25519PublicKey derived from the private key.
        apublic_keyuEd25519PrivateKey.public_keyDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        The serialized bytes of the private key.
        aprivate_bytesuEd25519PrivateKey.private_bytesu
        The raw bytes of the private key.
        Equivalent to private_bytes(Raw, Raw, NoEncryption()).
        aprivate_bytes_rawuEd25519PrivateKey.private_bytes_rawDadataareturnabytespu
        Signs the data.
        asignuEd25519PrivateKey.signucryptography\hazmat\primitives\asymmetric\ed25519.pyu<module cryptography.hazmat.primitives.asymmetric.ed25519>Ta__class__TaselfaotherTaclsadataabackendTaclsabackendTaselfaencodingaformataencryption_algorithmTaselfTaselfaencodingaformatTaselfadataTaselfasignatureadatau.cryptography.hazmat.primitives.asymmetric.ed448
bucryptography.hazmat.backends.openssl.backendTabackendlabackendaed448_supportedaUnsupportedAlgorithmued448 is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_PUBLIC_KEY_ALGORITHMarust_opensslaed448afrom_public_bytesagenerate_keyafrom_private_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.bindings._rustTaopensslaopensslucryptography.hazmat.primitivesTa_serializationa_serializationametaclassaABCMetaa__prepare__TaEd448PublicKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.ed448a__module__aEd448PublicKeya__qualname__aclassmethodDadataareturnabytesaEd448PublicKeyuEd448PublicKey.from_public_bytesaabstractmethodDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        The serialized bytes of the public key.
        apublic_bytesuEd448PublicKey.public_bytesDareturnabytesu
        The raw bytes of the public key.
        Equivalent to public_bytes(Raw, Raw).
        apublic_bytes_rawuEd448PublicKey.public_bytes_rawDasignatureadataareturnabytespaNoneu
        Verify the signature.
        averifyuEd448PublicKey.verifyDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uEd448PublicKey.__eq__aregisterTaEd448PrivateKeyTaEd448PrivateKeyDareturnaEd448PrivateKeyagenerateuEd448PrivateKey.generateDadataareturnabytesaEd448PrivateKeyuEd448PrivateKey.from_private_bytesDareturnaEd448PublicKeyu
        The Ed448PublicKey derived from the private key.
        apublic_keyuEd448PrivateKey.public_keyDadataareturnabytespu
        Signs the data.
        asignuEd448PrivateKey.signDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        The serialized bytes of the private key.
        aprivate_bytesuEd448PrivateKey.private_bytesu
        The raw bytes of the private key.
        Equivalent to private_bytes(Raw, Raw, NoEncryption()).
        aprivate_bytes_rawuEd448PrivateKey.private_bytes_rawax448ucryptography\hazmat\primitives\asymmetric\ed448.pyu<module cryptography.hazmat.primitives.asymmetric.ed448>Ta__class__TaselfaotherTaclsadataabackendTaclsabackendTaselfaencodingaformataencryption_algorithmTaselfTaselfaencodingaformatTaselfadataTaselfasignatureadatau.cryptography.hazmat.primitives.asymmetric.padding8]a_mgfa_MaxLengtha_Autoa_DigestLengthusalt_length must be an integer, MAX_LENGTH, DIGEST_LENGTH, or AUTOlusalt_length must be zero or greater.a_salt_lengthahashesaHashAlgorithmuExpected instance of hashes.HashAlgorithm.a_algorithma_labelarsaaRSAPrivateKeyaRSAPublicKeyukey must be an RSA public or private keyakey_sizelladigest_sizela__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.hazmat.primitivesTahashesucryptography.hazmat.primitives._asymmetricTaAsymmetricPaddingaAsymmetricPaddingucryptography.hazmat.primitives.asymmetricTarsaa__prepare__aPKCS1v15a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.paddinga__module__a__qualname__uEMSA-PKCS1-v1_5anamea__orig_bases__uSentinel value for `MAX_LENGTH`.uSentinel value for `AUTO`.uSentinel value for `DIGEST_LENGTH`.aPSSa__annotations__aMAX_LENGTHaAUTOaDIGEST_LENGTHuEMSA-PSSuint | _MaxLength | _Auto | _DigestLengthDamgfasalt_lengthareturnaMGFuint | _MaxLength | _Auto | _DigestLengthaNonea__init__uPSS.__init__apropertyDareturnaMGFamgfuPSS.mgfaOAEPuEME-OAEPDamgfaalgorithmalabelaMGFuhashes.HashAlgorithmubytes | NoneuOAEP.__init__Dareturnuhashes.HashAlgorithmaalgorithmuOAEP.algorithmuOAEP.mgfametaclassaABCMetaTaMGFTaMGFuhashes.HashAlgorithmaMGF1Daalgorithmuhashes.HashAlgorithmuMGF1.__init__Dakeyahash_algorithmareturnursa.RSAPrivateKey | rsa.RSAPublicKeyuhashes.HashAlgorithmaintacalculate_max_pss_salt_lengthucryptography\hazmat\primitives\asymmetric\padding.pyu<module cryptography.hazmat.primitives.asymmetric.padding>Ta__class__TaselfaalgorithmTaselfamgfaalgorithmalabelTaselfamgfasalt_lengthTaselfTakeyahash_algorithmaemlenasalt_lengthu.cryptography.hazmat.primitives.asymmetric.rsa=a_verify_rsa_parametersarust_opensslarsaagenerate_private_keyTllupublic_exponent must be either 3 (for legacy compatibility) or 65537. Almost everyone should choose 65537 here!lukey_size must be at least 1024-bits.Tllutoo many values to unpack (expected 2)wblwaax1ax2utoo many values to unpack (expected 4)u
    Modular Multiplicative Inverse. Returns x such that: (x*e) mod m == 1
    a_modinvu
    Compute the CRT (q ** -1) % p value from RSA primes p and q.
    lu
    Compute the CRT private_exponent % (p - 1) value from the RSA
    private_exponent (d) and p.
    u
    Compute the CRT private_exponent % (q - 1) value from the RSA
    private_exponent (d) and q.
    agcdu
    Compute the RSA private_exponent (d) given the public exponent (e)
    and the RSA primes p and q.

    This uses the Carmichael totient function to generate the
    smallest possible working value of the private exponent.
    wtlaspotteda_MAX_RECOVERY_ATTEMPTSwkapowwnuUnable to compute factors p and q from exponent d.wpasortedDareversetu
    Compute factors p and q from the private exponent d. We assume that n has
    no more than two factors. This function is adapted from code in PyCrypto.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingamathTagcducryptography.hazmat.bindings._rustTaopensslaopensslucryptography.hazmat.primitivesTa_serializationahashesa_serializationahashesucryptography.hazmat.primitives._asymmetricTaAsymmetricPaddingaAsymmetricPaddingucryptography.hazmat.primitives.asymmetricTautilsautilsaasym_utilsametaclassaABCMetaa__prepare__TaRSAPrivateKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.rsaa__module__aRSAPrivateKeya__qualname__aabstractmethodDaciphertextapaddingareturnabytesaAsymmetricPaddingabytesu
        Decrypts the provided ciphertext.
        adecryptuRSAPrivateKey.decryptapropertyDareturnaintu
        The bit length of the public modulus.
        akey_sizeuRSAPrivateKey.key_sizeDareturnaRSAPublicKeyu
        The RSAPublicKey associated with this private key.
        apublic_keyuRSAPrivateKey.public_keyDadataapaddingaalgorithmareturnabytesaAsymmetricPaddinguasym_utils.Prehashed | hashes.HashAlgorithmabytesu
        Signs the data.
        asignuRSAPrivateKey.signDareturnaRSAPrivateNumbersu
        Returns an RSAPrivateNumbers.
        aprivate_numbersuRSAPrivateKey.private_numbersDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        Returns the key serialized as bytes.
        aprivate_bytesuRSAPrivateKey.private_bytesaRSAPrivateKeyWithSerializationaregisterTaRSAPublicKeyTaRSAPublicKeyDaplaintextapaddingareturnabytesaAsymmetricPaddingabytesu
        Encrypts the given plaintext.
        aencryptuRSAPublicKey.encryptuRSAPublicKey.key_sizeDareturnaRSAPublicNumbersu
        Returns an RSAPublicNumbers
        apublic_numbersuRSAPublicKey.public_numbersDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesapublic_bytesuRSAPublicKey.public_bytesDasignatureadataapaddingaalgorithmareturnabytespaAsymmetricPaddinguasym_utils.Prehashed | hashes.HashAlgorithmaNoneu
        Verifies the signature of the data.
        averifyuRSAPublicKey.verifyDasignatureapaddingaalgorithmareturnabytesaAsymmetricPaddinguhashes.HashAlgorithm | Noneabytesu
        Recovers the original data from the signature.
        arecover_data_from_signatureuRSAPublicKey.recover_data_from_signatureDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uRSAPublicKey.__eq__aRSAPublicKeyWithSerializationaRSAPrivateNumbersaRSAPublicNumbersTnDapublic_exponentakey_sizeabackendareturnaintputyping.AnyaRSAPrivateKeyDapublic_exponentakey_sizeareturnaintpaNoneDwewmareturnaintppDwpwqareturnaintpparsa_crt_iqmpDaprivate_exponentwpareturnaintpparsa_crt_dmp1Daprivate_exponentwqareturnaintpparsa_crt_dmq1Dwewpwqareturnaintppparsa_recover_private_exponentlDwnwewdareturnaintpputuple[int, int]arsa_recover_prime_factorsucryptography\hazmat\primitives\asymmetric\rsa.pyu<module cryptography.hazmat.primitives.asymmetric.rsa>Ta__class__TaselfaotherTwewmax1ax2wawbwqwraxnTapublic_exponentakey_sizeTaselfaciphertextapaddingTaselfaplaintextapaddingTapublic_exponentakey_sizeabackendTaselfTaselfaencodingaformataencryption_algorithmTaselfaencodingaformatTaselfasignatureapaddingaalgorithmTaprivate_exponentwpTaprivate_exponentwqTwpwqTwnwewdaktotwtaspottedwawkacandwpwqwrTwewpwqalambda_nTaselfadataapaddingaalgorithmTaselfasignatureadataapaddingaalgorithmu.cryptography.hazmat.primitives.asymmetric.typesFAa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingacryptographyTautilslautilsucryptography.hazmat.primitives.asymmetricTadhadsaaecaed448aed25519arsaax448ax25519adhadsaaecaed448aed25519arsaax448ax25519aUnionaDHPublicKeyaDSAPublicKeyaRSAPublicKeyaEllipticCurvePublicKeyaEd25519PublicKeyaEd448PublicKeyaX25519PublicKeyaX448PublicKeyaPublicKeyTypesaPUBLIC_KEY_TYPESadeprecateducryptography.hazmat.primitives.asymmetric.typesuUse PublicKeyTypes insteadaDeprecatedIn40DanameaPUBLIC_KEY_TYPESaDHPrivateKeyaEd25519PrivateKeyaEd448PrivateKeyaRSAPrivateKeyaDSAPrivateKeyaEllipticCurvePrivateKeyaX25519PrivateKeyaX448PrivateKeyaPrivateKeyTypesaPRIVATE_KEY_TYPESuUse PrivateKeyTypes insteadDanameaPRIVATE_KEY_TYPESaCertificateIssuerPrivateKeyTypesaCERTIFICATE_PRIVATE_KEY_TYPESuUse CertificateIssuerPrivateKeyTypes insteadDanameaCERTIFICATE_PRIVATE_KEY_TYPESaCertificateIssuerPublicKeyTypesaCERTIFICATE_ISSUER_PUBLIC_KEY_TYPESuUse CertificateIssuerPublicKeyTypes insteadDanameaCERTIFICATE_ISSUER_PUBLIC_KEY_TYPESaCertificatePublicKeyTypesaCERTIFICATE_PUBLIC_KEY_TYPESuUse CertificatePublicKeyTypes insteadDanameaCERTIFICATE_PUBLIC_KEY_TYPESucryptography\hazmat\primitives\asymmetric\types.pyu<module cryptography.hazmat.primitives.asymmetric.types>u.cryptography.hazmat.primitives.asymmetric.utils$ahashesaHashAlgorithmuExpected instance of HashAlgorithm.a_algorithmadigest_sizea_digest_sizea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucryptography.hazmat.bindings._rustTaasn1laasn1ucryptography.hazmat.primitivesTahashesadecode_dss_signatureaencode_dss_signatureucryptography.hazmat.primitives.asymmetric.utilsa__module__aPrehasheda__qualname__Daalgorithmuhashes.HashAlgorithma__init__uPrehashed.__init__DareturnaintuPrehashed.digest_sizeucryptography\hazmat\primitives\asymmetric\utils.pyu<module cryptography.hazmat.primitives.asymmetric.utils>Ta__class__TaselfaalgorithmTaselfu.cryptography.hazmat.primitives.asymmetric.x25519
\ucryptography.hazmat.backends.openssl.backendTabackendlabackendax25519_supportedaUnsupportedAlgorithmuX25519 is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_EXCHANGE_ALGORITHMarust_opensslax25519afrom_public_bytesagenerate_keyafrom_private_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.bindings._rustTaopensslaopensslucryptography.hazmat.primitivesTa_serializationa_serializationametaclassaABCMetaa__prepare__TaX25519PublicKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.x25519a__module__aX25519PublicKeya__qualname__aclassmethodDadataareturnabytesaX25519PublicKeyuX25519PublicKey.from_public_bytesaabstractmethodDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        The serialized bytes of the public key.
        apublic_bytesuX25519PublicKey.public_bytesDareturnabytesu
        The raw bytes of the public key.
        Equivalent to public_bytes(Raw, Raw).
        apublic_bytes_rawuX25519PublicKey.public_bytes_rawDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uX25519PublicKey.__eq__aregisterTaX25519PrivateKeyTaX25519PrivateKeyDareturnaX25519PrivateKeyagenerateuX25519PrivateKey.generateDadataareturnabytesaX25519PrivateKeyuX25519PrivateKey.from_private_bytesDareturnaX25519PublicKeyu
        Returns the public key associated with this private key
        apublic_keyuX25519PrivateKey.public_keyDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        The serialized bytes of the private key.
        aprivate_bytesuX25519PrivateKey.private_bytesu
        The raw bytes of the private key.
        Equivalent to private_bytes(Raw, Raw, NoEncryption()).
        aprivate_bytes_rawuX25519PrivateKey.private_bytes_rawDapeer_public_keyareturnaX25519PublicKeyabytesu
        Performs a key exchange operation using the provided peer's public key.
        aexchangeuX25519PrivateKey.exchangeucryptography\hazmat\primitives\asymmetric\x25519.pyu<module cryptography.hazmat.primitives.asymmetric.x25519>Ta__class__TaselfaotherTaselfapeer_public_keyTaclsadataabackendTaclsabackendTaselfaencodingaformataencryption_algorithmTaselfTaselfaencodingaformatu.cryptography.hazmat.primitives.asymmetric.x448\ucryptography.hazmat.backends.openssl.backendTabackendlabackendax448_supportedaUnsupportedAlgorithmuX448 is not supported by this version of OpenSSL.a_ReasonsaUNSUPPORTED_EXCHANGE_ALGORITHMarust_opensslax448afrom_public_bytesagenerate_keyafrom_private_bytesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.bindings._rustTaopensslaopensslucryptography.hazmat.primitivesTa_serializationa_serializationametaclassaABCMetaa__prepare__TaX448PublicKeyTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.asymmetric.x448a__module__aX448PublicKeya__qualname__aclassmethodDadataareturnabytesaX448PublicKeyuX448PublicKey.from_public_bytesaabstractmethodDaencodingaformatareturnu_serialization.Encodingu_serialization.PublicFormatabytesu
        The serialized bytes of the public key.
        apublic_bytesuX448PublicKey.public_bytesDareturnabytesu
        The raw bytes of the public key.
        Equivalent to public_bytes(Raw, Raw).
        apublic_bytes_rawuX448PublicKey.public_bytes_rawDaotherareturnaobjectaboolu
        Checks equality.
        a__eq__uX448PublicKey.__eq__aregisterTaX448PrivateKeyTaX448PrivateKeyDareturnaX448PrivateKeyagenerateuX448PrivateKey.generateDadataareturnabytesaX448PrivateKeyuX448PrivateKey.from_private_bytesDareturnaX448PublicKeyu
        Returns the public key associated with this private key
        apublic_keyuX448PrivateKey.public_keyDaencodingaformataencryption_algorithmareturnu_serialization.Encodingu_serialization.PrivateFormatu_serialization.KeySerializationEncryptionabytesu
        The serialized bytes of the private key.
        aprivate_bytesuX448PrivateKey.private_bytesu
        The raw bytes of the private key.
        Equivalent to private_bytes(Raw, Raw, NoEncryption()).
        aprivate_bytes_rawuX448PrivateKey.private_bytes_rawDapeer_public_keyareturnaX448PublicKeyabytesu
        Performs a key exchange operation using the provided peer's public key.
        aexchangeuX448PrivateKey.exchangeucryptography\hazmat\primitives\asymmetric\x448.pyu<module cryptography.hazmat.primitives.asymmetric.x448>Ta__class__TaselfaotherTaselfapeer_public_keyTaclsadataabackendTaclsabackendTaselfaencodingaformataencryption_algorithmTaselfTaselfaencodingaformatu.cryptography.hazmat.primitives.ciphers.algorithmsia_verify_key_sizeakeylautilsa_check_byteslikeanonceunonce must be 128-bits (16 bytes)a_noncea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsacryptographyTautilslucryptography.hazmat.decrepit.ciphers.algorithmsTaARC4aARC4TaCAST5aCAST5TaIDEAaIDEATaSEEDaSEEDTaBlowfishaBlowfishTaTripleDESaTripleDESucryptography.hazmat.primitives._cipheralgorithmTa_verify_key_sizeucryptography.hazmat.primitives.ciphersTaBlockCipherAlgorithmaCipherAlgorithmaBlockCipherAlgorithmaCipherAlgorithma__prepare__aAESa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.ciphers.algorithmsa__module__a__qualname__anamelablock_sizeafrozensetLllllPllllakey_sizesDakeyabytesa__init__uAES.__init__apropertyDareturnaintakey_sizeuAES.key_sizea__orig_bases__aAES128PluAES128.__init__aAES256lPluAES256.__init__aCamelliaacamellialPllluCamellia.__init__uCamellia.key_sizeadeprecateduARC4 has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.ARC4 and will be removed from this module in 48.0.0.aDeprecatedIn43DanameaARC4uTripleDES has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.TripleDES and will be removed from this module in 48.0.0.DanameaTripleDESuBlowfish has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.Blowfish and will be removed from this module in 45.0.0.aDeprecatedIn37DanameaBlowfishuCAST5 has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.CAST5 and will be removed from this module in 45.0.0.DanameaCAST5uIDEA has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.IDEA and will be removed from this module in 45.0.0.DanameaIDEAuSEED has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.SEED and will be removed from this module in 45.0.0.DanameaSEEDaChaCha20DakeyanonceabytespuChaCha20.__init__DareturnabytesuChaCha20.nonceuChaCha20.key_sizeaSM4uSM4.__init__uSM4.key_sizeucryptography\hazmat\primitives\ciphers\algorithms.pyu<module cryptography.hazmat.primitives.ciphers.algorithms>Ta__class__TaselfakeyTaselfakeyanonceTaselfu.cryptography.hazmat.primitives.ciphers.basednaCipherAlgorithmuExpected interface of CipherAlgorithm.amodesaModeavalidate_for_algorithmaalgorithmamodeaModeWithAuthenticationTagataguAuthentication tag must be None when encrypting.arust_opensslaciphersacreate_encryption_ctxacreate_decryption_ctxa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypingucryptography.hazmat.bindings._rustTaopensslaopensslucryptography.hazmat.primitives._cipheralgorithmTaCipherAlgorithmucryptography.hazmat.primitives.ciphersTamodesametaclassaABCMetaa__prepare__TaCipherContextTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.ciphers.basea__module__aCipherContexta__qualname__aabstractmethodDadataareturnabytespu
        Processes the provided bytes through the cipher and returns the results
        as bytes.
        aupdateuCipherContext.updateDadataabufareturnabytespaintu
        Processes the provided bytes and writes the resulting data into the
        provided buffer. Returns the number of bytes written.
        aupdate_intouCipherContext.update_intoDareturnabytesu
        Returns the results of processing the final block as bytes.
        afinalizeuCipherContext.finalizeDanonceareturnabytesaNoneu
        Resets the nonce for the cipher context to the provided value.
        Raises an exception if it does not support reset or if the
        provided nonce does not have a valid length.
        areset_nonceuCipherContext.reset_nonceaAEADCipherContextDadataareturnabytesaNoneu
        Authenticates the provided bytes.
        aauthenticate_additional_datauAEADCipherContext.authenticate_additional_dataa__orig_bases__aAEADDecryptionContextDatagareturnabytespu
        Returns the results of processing the final block as bytes and allows
        delayed passing of the authentication tag.
        afinalize_with_taguAEADDecryptionContext.finalize_with_tagaAEADEncryptionContextapropertyu
        Returns tag bytes. This is only available after encryption is
        finalized.
        uAEADEncryptionContext.tagaTypeVaraOptionalTaModeTaboundacovariantaGenericaCipherTnDaalgorithmamodeabackendareturnaCipherAlgorithmaModeutyping.AnyaNonea__init__uCipher.__init__aoverloadDaselfareturnuCipher[modes.ModeWithAuthenticationTag]aAEADEncryptionContextaencryptoruCipher.encryptorDaselfareturna_CIPHER_TYPEaCipherContextDaselfareturnuCipher[modes.ModeWithAuthenticationTag]aAEADDecryptionContextadecryptoruCipher.decryptoraUnionaModeWithNonceaModeWithTweakaECBaModeWithInitializationVectora_CIPHER_TYPEaregisterucryptography\hazmat\primitives\ciphers\base.pyu<module cryptography.hazmat.primitives.ciphers.base>Ta__class__TaselfaalgorithmamodeabackendTaselfadataTaselfTaselfatagTaselfanonceTaselfadataabufu.cryptography.hazmat.primitives.ciphers&a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\primitives\ciphersTaNUITKA_PACKAGE_cryptography_hazmatu\not_existinguprimitives\ciphersTaNUITKA_PACKAGE_cryptography_hazmat_primitivesu\not_existingaciphersTaNUITKA_PACKAGE_cryptography_hazmat_primitives_ciphersu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.hazmat.primitives._cipheralgorithmTaBlockCipherAlgorithmaCipherAlgorithmlaBlockCipherAlgorithmaCipherAlgorithmucryptography.hazmat.primitives.ciphers.baseTaAEADCipherContextaAEADDecryptionContextaAEADEncryptionContextaCipheraCipherContextaAEADCipherContextaAEADDecryptionContextaAEADEncryptionContextaCipheraCipherContextLaAEADCipherContextaAEADDecryptionContextaAEADEncryptionContextaBlockCipherAlgorithmaCipheraCipherAlgorithmaCipherContexta__all__ucryptography\hazmat\primitives\ciphers\__init__.pyu<module cryptography.hazmat.primitives.ciphers>u.cryptography.hazmat.primitives.ciphers.modesLakey_sizelanameaAESuOnly 128, 192, and 256 bit keys are allowed for this AES modeainitialization_vectorlablock_sizeuInvalid IV size (uu) for w.aBlockCipherAlgorithmaUnsupportedAlgorithmu requires a block cipher algorithma_ReasonsaUNSUPPORTED_CIPHERuInvalid nonce size (a_check_aes_key_lengtha_check_iv_lengthautilsa_check_byteslikea_initialization_vectoratweakutweak must be 128-bits (16 bytes)a_tweakaalgorithmsaAES128aAES256uThe AES128 and AES256 classes do not support XTS, please use the standard AES class instead.TlluThe XTS specification requires a 256-bit key for AES-128-XTS and 512-bit key for AES-256-XTSanoncea_noncea_check_nonce_lengthuinitialization_vector must be between 8 and 128 bytes (64 and 1024 bits).a_check_bytesataglumin_tag_length must be >= 4uAuthentication tag must be u bytes or longer.a_taga_min_tag_lengthuGCM requires a block cipher algorithmuAuthentication tag cannot be more than u bytes.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclacryptographyTautilsucryptography.exceptionsTaUnsupportedAlgorithma_Reasonsucryptography.hazmat.primitives._cipheralgorithmTaBlockCipherAlgorithmaCipherAlgorithmaCipherAlgorithmucryptography.hazmat.primitives.ciphersTaalgorithmsametaclassaABCMetaa__prepare__TaModeTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.ciphers.modesa__module__aModea__qualname__apropertyaabstractmethodDareturnastru
        A string naming this mode (e.g. "ECB", "CBC").
        uMode.nameDaalgorithmareturnaCipherAlgorithmaNoneu
        Checks that all the necessary invariants of this (mode, algorithm)
        combination are met.
        avalidate_for_algorithmuMode.validate_for_algorithmaModeWithInitializationVectorDareturnabytesu
        The value of the initialization vector for this mode as bytes.
        uModeWithInitializationVector.initialization_vectora__orig_bases__aModeWithTweaku
        The value of the tweak for this mode as bytes.
        uModeWithTweak.tweakaModeWithNonceu
        The value of the nonce for this mode as bytes.
        uModeWithNonce.nonceaModeWithAuthenticationTagDareturnubytes | Noneu
        The value of the tag supplied to the constructor of this mode.
        uModeWithAuthenticationTag.tagDaselfaalgorithmareturnaModeaCipherAlgorithmaNoneDaselfaalgorithmareturnaModeWithInitializationVectoraBlockCipherAlgorithmaNoneDanonceanameaalgorithmareturnabytesastraCipherAlgorithmaNoneDaselfaalgorithmareturnaModeWithInitializationVectoraCipherAlgorithmaNonea_check_iv_and_key_lengthaCBCDainitialization_vectorabytesa__init__uCBC.__init__uCBC.initialization_vectoraXTSDatweakabytesuXTS.__init__uXTS.tweakuXTS.validate_for_algorithmaECBaOFBuOFB.__init__uOFB.initialization_vectoraCFBuCFB.__init__uCFB.initialization_vectoraCFB8uCFB8.__init__uCFB8.initialization_vectoraCTRDanonceabytesuCTR.__init__uCTR.nonceuCTR.validate_for_algorithmaGCMga_MAX_ENCRYPTED_BYTESga_MAX_AAD_BYTESTnlDainitialization_vectoratagamin_tag_lengthabytesubytes | NoneaintuGCM.__init__uGCM.taguGCM.initialization_vectoruGCM.validate_for_algorithmucryptography\hazmat\primitives\ciphers\modes.pyu<module cryptography.hazmat.primitives.ciphers.modes>Ta__class__Taselfainitialization_vectorTaselfanonceTaselfainitialization_vectoratagamin_tag_lengthTaselfatweakTaselfaalgorithmTaselfaalgorithmaiv_lenTanonceanameaalgorithmTaselfTaselfaalgorithmablock_size_bytes.cryptography.hazmat.primitivesa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\primitivesTaNUITKA_PACKAGE_cryptography_hazmatu\not_existingaprimitivesTaNUITKA_PACKAGE_cryptography_hazmat_primitivesu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__ucryptography\hazmat\primitives\__init__.pyu<module cryptography.hazmat.primitives>u.cryptography.hazmat.primitives.constant_timeua and b must be bytes.ahmacacompare_digesta__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationslDwawbareturnabytespaboolabytes_equcryptography\hazmat\primitives\constant_time.pyu<module cryptography.hazmat.primitives.constant_time>Twawbu.cryptography.hazmat.primitives.hashes
udigest_size must be an integerludigest_size must be a positive integera_digest_sizel@uDigest size must be 64l uDigest size must be 32a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclucryptography.hazmat.bindings._rustTaopensslaopensslarust_opensslLaMD5aSHA1aSHA3_224aSHA3_256aSHA3_384aSHA3_512aSHA224aSHA256aSHA384aSHA512aSHA512_224aSHA512_256aSHAKE128aSHAKE256aSM3aBLAKE2baBLAKE2saExtendableOutputFunctionaHashaHashAlgorithmaHashContexta__all__ametaclassaABCMetaa__prepare__TaHashAlgorithmTa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.hazmat.primitives.hashesa__module__aHashAlgorithma__qualname__apropertyaabstractmethodDareturnastru
        A string naming this algorithm (e.g. "sha256", "md5").
        anameuHashAlgorithm.nameDareturnaintu
        The size of the resulting digest in bytes.
        adigest_sizeuHashAlgorithm.digest_sizeDareturnuint | Noneu
        The internal block size of the hash function, or None if the hash
        function does not use blocks internally (e.g. SHA3).
        ablock_sizeuHashAlgorithm.block_sizeTaHashContextTaHashContextDareturnaHashAlgorithmu
        A HashAlgorithm that will be used by this context.
        aalgorithmuHashContext.algorithmDadataareturnabytesaNoneu
        Processes the provided bytes through the hash.
        aupdateuHashContext.updateDareturnabytesu
        Finalizes the hash context and returns the hash digest as bytes.
        afinalizeuHashContext.finalizeDareturnaHashContextu
        Return a HashContext that is a copy of the current context.
        acopyuHashContext.copyahashesaHasharegisterTaExtendableOutputFunctionTu
    An interface for extendable output functions.
    aExtendableOutputFunctionaSHA1asha1la__orig_bases__aSHA512_224usha512-224llaSHA512_256usha512-256aSHA224asha224aSHA256asha256aSHA384asha384l0aSHA512asha512aSHA3_224usha3-224aSHA3_256usha3-256aSHA3_384usha3-384aSHA3_512usha3-512aSHAKE128ashake128Dadigest_sizeainta__init__uSHAKE128.__init__uSHAKE128.digest_sizeaSHAKE256ashake256uSHAKE256.__init__uSHAKE256.digest_sizeaMD5amd5laBLAKE2bablake2ba_max_digest_sizea_min_digest_sizeuBLAKE2b.__init__uBLAKE2b.digest_sizeaBLAKE2sablake2suBLAKE2s.__init__uBLAKE2s.digest_sizeaSM3asm3ucryptography\hazmat\primitives\hashes.pyu<module cryptography.hazmat.primitives.hashes>Ta__class__Taselfadigest_sizeTaselfTaselfadatau.cryptography.hazmat.primitives.serialization.basea__doc__a__file__a__spec__aoriginahas_locationa__cached__ucryptography.hazmat.bindings._rustTaopenssllaopensslarust_opensslakeysaload_pem_private_keyaload_der_private_keyaload_pem_public_keyaload_der_public_keyadhafrom_pem_parametersaload_pem_parametersafrom_der_parametersaload_der_parametersucryptography\hazmat\primitives\serialization\base.pyu<module cryptography.hazmat.primitives.serialization.base>u.cryptography.hazmat.primitives.serialization9a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existinguhazmat\primitives\serializationTaNUITKA_PACKAGE_cryptography_hazmatu\not_existinguprimitives\serializationTaNUITKA_PACKAGE_cryptography_hazmat_primitivesu\not_existingaserializationTaNUITKA_PACKAGE_cryptography_hazmat_primitives_serializationu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.hazmat.primitives._serializationTaBestAvailableEncryptionaEncodingaKeySerializationEncryptionaNoEncryptionaParameterFormataPrivateFormataPublicFormata_KeySerializationEncryptionlaBestAvailableEncryptionaEncodingaKeySerializationEncryptionaNoEncryptionaParameterFormataPrivateFormataPublicFormata_KeySerializationEncryptionucryptography.hazmat.primitives.serialization.baseTaload_der_parametersaload_der_private_keyaload_der_public_keyaload_pem_parametersaload_pem_private_keyaload_pem_public_keyaload_der_parametersaload_der_private_keyaload_der_public_keyaload_pem_parametersaload_pem_private_keyaload_pem_public_keyucryptography.hazmat.primitives.serialization.sshT
aSSHCertificateaSSHCertificateBuilderaSSHCertificateTypeaSSHCertPrivateKeyTypesaSSHCertPublicKeyTypesaSSHPrivateKeyTypesaSSHPublicKeyTypesaload_ssh_private_keyaload_ssh_public_identityaload_ssh_public_keyaSSHCertificateaSSHCertificateBuilderaSSHCertificateTypeaSSHCertPrivateKeyTypesaSSHCertPublicKeyTypesaSSHPrivateKeyTypesaSSHPublicKeyTypesaload_ssh_private_keyaload_ssh_public_identityaload_ssh_public_keyLaBestAvailableEncryptionaEncodingaKeySerializationEncryptionaNoEncryptionaParameterFormataPrivateFormataPublicFormataSSHCertPrivateKeyTypesaSSHCertPublicKeyTypesaSSHCertificateaSSHCertificateBuilderaSSHCertificateTypeaSSHPrivateKeyTypesaSSHPublicKeyTypesa_KeySerializationEncryptionaload_der_parametersaload_der_private_keyaload_der_public_keyaload_pem_parametersaload_pem_private_keyaload_pem_public_keyaload_ssh_private_keyaload_ssh_public_identityaload_ssh_public_keya__all__ucryptography\hazmat\primitives\serialization\__init__.pyu<module cryptography.hazmat.primitives.serialization>u.cryptography.hazmat.primitives.serialization.sshJaUnsupportedAlgorithmTuNeed bcrypt moduleaecaEllipticCurvePrivateKeya_ecdsa_key_typeapublic_keyaEllipticCurvePublicKeyarsaaRSAPrivateKeyaRSAPublicKeya_SSH_RSAadsaaDSAPrivateKeyaDSAPublicKeya_SSH_DSAaed25519aEd25519PrivateKeyaEd25519PublicKeya_SSH_ED25519uUnsupported key typeacurveanamea_ECDSA_KEY_TYPEuUnsupported curve for ssh private key: uuReturn SSH key_type and curve_name for private key.ca_base64_encodeluCorrupt data: missing paddinguRequire data to be full blocksuCorrupt data: unparsed datauAll data should have been parsed.uKey is password-protected.a_SSH_CIPHERSa_bcrypt_kdfakey_lenaiv_lenaCipheraalgamodeuGenerate key + iv and return cipher.uInvalid dataafrom_bytes:nlnDabyteorderabig:lnnaUint32:nln:lnnaUint64a_get_u32utoo many values to unpack (expected 2)uBytes with u32 length prefixa_get_sshstrlabiguBig integer.unegative mpint not allowedabit_lengthlautilsaint_to_bytesuStorage format for signed bigint.aflistaextendaappenduAdd plain bytesato_bytesTlabigTalengthabyteorderuBig-endian uint32TlabiguBig-endian uint64TObytesOmemoryviewObytearrayaput_u32asizeuBytes prefixed with u32 lengthaput_sshstra_to_mpintuBig-endian bigint prefixed with u32 lengthalenuCurrent number of bytesaposadstbufuWrite into bytearrayarenderatobytesuReturn as bytesa_get_mpintuRSA public fieldsaget_publicaRSAPublicNumbersuMake RSA public key from data.uCorrupt data: rsa field mismatcharsa_crt_dmp1arsa_crt_dmq1aRSAPrivateNumbersaprivate_keyuMake RSA private key from data.apublic_numbersaput_mpintwewnuWrite RSA public keyaprivate_numberswdaiqmpwpwquWrite RSA private keyuDSA public fieldsutoo many values to unpack (expected 4)aDSAParameterNumbersaDSAPublicNumbersa_validateuMake DSA public key from data.uCorrupt data: dsa field mismatchaDSAPrivateNumbersuMake DSA private key from data.aparameter_numberswgwyuWrite DSA public keyaencode_publicwxuWrite DSA private keyluSSH supports only 1024 bit DSA keysassh_curve_nameuCurve name mismatchluNeed uncompressed pointuECDSA public fieldsafrom_encoded_pointuMake ECDSA public key from data.uCorrupt data: ecdsa field mismatchaderive_private_keyuMake ECDSA private key from data.apublic_bytesaEncodingaX962aPublicFormataUncompressedPointuWrite ECDSA public keyaprivate_valueuWrite ECDSA private keyuEd25519 public fieldsutoo many values to unpack (expected 1)afrom_public_bytesuMake Ed25519 public key from data.:nl n:l nnuCorrupt data: ed25519 field mismatchafrom_private_bytesuMake Ed25519 private key from data.aRawuWrite Ed25519 public keyaprivate_bytesaPrivateFormataNoEncryptiona_FragListuWrite Ed25519 private keyastartswithTcssh:uU2F application string does not start with b'ssh:' (w)u
    U2F application strings
    a_lookup_kformataload_publicaload_applicationa_ECDSA_NISTP256a_KEY_FORMATSuUnsupported key type: uReturn valid format or throw errora_check_byteslikeadataa_check_bytesapassworda_PEM_RCasearchuNot OpenSSH private key formatastartTlaendabinasciiaa2b_base64a_SK_MAGICluOnly one key supporteda_check_emptya_NONEuUnsupported cipher: a_BCRYPTuUnsupported KDF: ablock_lenatag_lenais_aeaduCorrupt data: invalid tag length for ciphera_check_block_sizea_init_cipheradecryptoraupdateaAEADDecryptionContextafinalize_with_tagatagafinalizeaedatauCorrupt data: broken checksumuCorrupt data: key type mismatchaload_privatea_PADDINGuCorrupt data: invalid paddingawarningsawarnuSSH DSA keys are deprecated and will be removed in a future release.aDeprecatedIn40DastacklevelluLoad private key from OpenSSH custom encoding.uSSH DSA key support is deprecated and will be removed in a future releaseDastacklevella_get_ssh_key_typea_DEFAULT_CIPHERa_DEFAULT_ROUNDSa_KeySerializationEncryptiona_kdf_roundsaurandomTlTlaencode_privateTcaput_rawaciphernameaencryptoraupdate_intoa_ssh_pem_encodeuSerialize private key with OpenSSH custom encoding.a_noncea_public_keya_serialaSSHCertificateTypea_typeuInvalid certificate typea_key_ida_valid_principalsa_valid_aftera_valid_beforea_critical_optionsa_extensionsa_sig_typea_sig_keya_inner_sig_typea_signaturea_cert_key_typea_cert_bodya_tbs_cert_bodyacastaSSHCertPublicKeyTypesd ab2a_base64DanewlineFasignature_keyaverifyaasym_utilsaencode_dss_signaturea_get_ec_hash_algaECDSAahashesaSHA1a_SSH_RSA_SHA256aSHA256a_SSH_RSA_SHA512aSHA512apaddingaPKCS1v15aSECP256R1aSECP384R1aSHA384aSECP521R1a_SSH_PUBKEY_RCamatchuInvalid line formatagroupTlaendswitha_CERT_SUFFIXakey_typeTuDSA keys aren't supported in SSH certificatesaErroruInvalid formatuInvalid key formata_get_u64aprincipalsavalid_principalsa_parse_exts_optsTuDSA signatures aren't supported in SSH certificatesacert_bodyuSignature key type does not matchaSSHCertificateanoncea_load_ssh_public_identityaexts_optsaresultuDuplicate namealast_nameuFields not lexically sorteduUnexpected extra data after valueavalueDa_legacy_dsa_allowedtastripuOne-line public key format for OpenSSHa_valid_for_all_principalsupublic_key already setaSSHCertificateBuilderT
a_public_keya_seriala_typea_key_ida_valid_principalsa_valid_for_all_principalsa_valid_beforea_valid_aftera_critical_optionsa_extensionsuserial must be an integerguserial must be between 0 and 2**64userial already setutype must be an SSHCertificateTypeutype already setukey_id must be bytesukey_id already setuPrincipals can't be set because the cert is valid for all principalsuprincipals must be a list of bytes and can't be emptyuvalid_principals already seta_SSHKEY_CERT_MAX_PRINCIPALSuReached or exceeded the maximum number of valid_principalsu<genexpr>uSSHCertificateBuilder.valid_principals.<locals>.<genexpr>uvalid_principals already set, can't set valid_for_all_principalsuvalid_for_all_principals already setTOintOfloatuvalid_before must be an int or floatuvalid_before must [0, 2**64)uvalid_before already setuvalid_after must be an int or floatuvalid_after must [0, 2**64)uvalid_after already setuname and value must be bytesuDuplicate critical option nameuDuplicate extension nameuUnsupported private key typeupublic_key must be setutype must be setuvalid_principals must be set if valid_for_all_principals is Falseuvalid_before must be setuvalid_after must be setuvalid_after must be earlier than valid_beforeasortu<lambda>uSSHCertificateBuilder.sign.<locals>.<lambda>TakeyTl aput_u64afprincipalsafcritafextasignadecode_dss_signatureaload_ssh_public_identitya__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsaenumaosareatypingabase64TaencodebytesaencodebytesadataclassesTadataclassadataclassacryptographyTautilsucryptography.exceptionsTaUnsupportedAlgorithmucryptography.hazmat.primitivesTahashesucryptography.hazmat.primitives.asymmetricTadsaaecaed25519apaddingarsaucryptography.hazmat.primitives.ciphersTaAEADDecryptionContextaCipheraalgorithmsamodesaalgorithmsamodesucryptography.hazmat.primitives.serializationTaEncodingaKeySerializationEncryptionaNoEncryptionaPrivateFormataPublicFormata_KeySerializationEncryptionaKeySerializationEncryptionabcryptTakdfakdfa_bcrypt_supportedTFDapasswordasaltadesired_key_bytesaroundsaignore_few_roundsareturnabytespaintpaboolabytescssh-ed25519cssh-rsacssh-dsscecdsa-sha2-nistp256cecdsa-sha2-nistp384a_ECDSA_NISTP384cecdsa-sha2-nistp521a_ECDSA_NISTP521c-cert-v01@openssh.comcsk-ssh-ed25519@openssh.coma_SK_SSH_ED25519csk-ecdsa-sha2-nistp256@openssh.coma_SK_SSH_ECDSA_NISTP256crsa-sha2-256crsa-sha2-512acompileTc\A(\S+)[ \t]+(\S+)bopenssh-key-v1c-----BEGIN OPENSSH PRIVATE KEY-----a_SK_STARTc-----END OPENSSH PRIVATE KEY-----a_SK_ENDcbcryptcnonecaes256-ctrlc(.*?)aDOTALLB

ucryptography.hazmat.primitives.serialization.ssha__module__a_SSHCiphera__qualname__utype[algorithms.AES]aintutype[modes.CTR] | type[modes.CBC] | type[modes.GCM]uint | NoneaboolaAESl aCTRTaalgakey_lenamodeablock_lenaiv_lenatag_lenais_aeadcaes256-cbcaCBCcaes256-gcm@openssh.comaGCMludict[bytes, _SSHCipher]asecp256r1asecp384r1asecp521r1DakeyareturnuSSHPrivateKeyTypes | SSHPublicKeyTypesabytesDapublic_keyareturnuec.EllipticCurvePublicKeyabytesd
DadataaprefixasuffixareturnabytespppDadataablock_lenareturnabytesaintaNoneDadataareturnabytesaNoneDaciphernameapasswordasaltaroundsareturnabytesubytes | NoneabytesaintuCipher[modes.CBC | modes.CTR | modes.GCM]Dadataareturnamemoryviewutuple[int, memoryview]Dadataareturnamemoryviewutuple[memoryview, memoryview]DavalareturnaintabytesuBuild recursive structure without data copy.ulist[bytes]TnDainitareturnulist[bytes] | NoneaNonea__init__u_FragList.__init__DavalareturnabytesaNoneu_FragList.put_rawDavalareturnaintaNoneu_FragList.put_u32u_FragList.put_u64Davalareturnubytes | _FragListaNoneu_FragList.put_sshstru_FragList.put_mpintDareturnaintu_FragList.sizeTlDadstbufaposareturnamemoryviewaintpu_FragList.renderDareturnabytesu_FragList.tobytesuFormat for RSA keys.

    Public:
        mpint e, n
    Private:
        mpint n, e, d, iqmp, p, q
    a_SSHFormatRSADadataareturnamemoryviewutuple[tuple[int, int], memoryview]u_SSHFormatRSA.get_publicDadataareturnamemoryviewutuple[rsa.RSAPublicKey, memoryview]u_SSHFormatRSA.load_publicDadataareturnamemoryviewutuple[rsa.RSAPrivateKey, memoryview]u_SSHFormatRSA.load_privateDapublic_keyaf_pubareturnursa.RSAPublicKeya_FragListaNoneu_SSHFormatRSA.encode_publicDaprivate_keyaf_privareturnursa.RSAPrivateKeya_FragListaNoneu_SSHFormatRSA.encode_privateuFormat for DSA keys.

    Public:
        mpint p, q, g, y
    Private:
        mpint p, q, g, y, x
    a_SSHFormatDSADadataareturnamemoryviewutuple[tuple, memoryview]u_SSHFormatDSA.get_publicDadataareturnamemoryviewutuple[dsa.DSAPublicKey, memoryview]u_SSHFormatDSA.load_publicDadataareturnamemoryviewutuple[dsa.DSAPrivateKey, memoryview]u_SSHFormatDSA.load_privateDapublic_keyaf_pubareturnudsa.DSAPublicKeya_FragListaNoneu_SSHFormatDSA.encode_publicDaprivate_keyaf_privareturnudsa.DSAPrivateKeya_FragListaNoneu_SSHFormatDSA.encode_privateDapublic_numbersareturnudsa.DSAPublicNumbersaNoneu_SSHFormatDSA._validateuFormat for ECDSA keys.

    Public:
        str curve
        bytes point
    Private:
        str curve
        bytes point
        mpint secret
    a_SSHFormatECDSADassh_curve_nameacurveabytesuec.EllipticCurveu_SSHFormatECDSA.__init__Dadataareturnamemoryviewutuple[tuple[memoryview, memoryview], memoryview]u_SSHFormatECDSA.get_publicDadataareturnamemoryviewutuple[ec.EllipticCurvePublicKey, memoryview]u_SSHFormatECDSA.load_publicDadataareturnamemoryviewutuple[ec.EllipticCurvePrivateKey, memoryview]u_SSHFormatECDSA.load_privateDapublic_keyaf_pubareturnuec.EllipticCurvePublicKeya_FragListaNoneu_SSHFormatECDSA.encode_publicDaprivate_keyaf_privareturnuec.EllipticCurvePrivateKeya_FragListaNoneu_SSHFormatECDSA.encode_privateuFormat for Ed25519 keys.

    Public:
        bytes point
    Private:
        bytes point
        bytes secret_and_point
    a_SSHFormatEd25519Dadataareturnamemoryviewutuple[tuple[memoryview], memoryview]u_SSHFormatEd25519.get_publicDadataareturnamemoryviewutuple[ed25519.Ed25519PublicKey, memoryview]u_SSHFormatEd25519.load_publicDadataareturnamemoryviewutuple[ed25519.Ed25519PrivateKey, memoryview]u_SSHFormatEd25519.load_privateDapublic_keyaf_pubareturnued25519.Ed25519PublicKeya_FragListaNoneu_SSHFormatEd25519.encode_publicDaprivate_keyaf_privareturnued25519.Ed25519PrivateKeya_FragListaNoneu_SSHFormatEd25519.encode_privateDareturnutuple[memoryview, memoryview]u
    The format of a sk-ssh-ed25519@openssh.com public key is:

        string"sk-ssh-ed25519@openssh.com"
        stringpublic key
        stringapplication (user-specified, but typically "ssh:")
    a_SSHFormatSKEd25519u_SSHFormatSKEd25519.load_publicu
    The format of a sk-ecdsa-sha2-nistp256@openssh.com public key is:

        string"sk-ecdsa-sha2-nistp256@openssh.com"
        stringcurve name
        ec_pointQ
        stringapplication (user-specified, but typically "ssh:")
    a_SSHFormatSKECDSAu_SSHFormatSKECDSA.load_publiccnistp256cnistp384cnistp521Dakey_typeabytesaUnionaSSHPrivateKeyTypesDadataapasswordabackendareturnabytesubytes | Noneutyping.AnyaSSHPrivateKeyTypesaload_ssh_private_keyDaprivate_keyapasswordaencryption_algorithmareturnaSSHPrivateKeyTypesabytesaKeySerializationEncryptionabytesa_serialize_ssh_private_keyaSSHPublicKeyTypesaEnuma__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>aUSERlaHOSTa__orig_bases__Da_noncea_public_keya_seriala_cctypea_key_ida_valid_principalsa_valid_aftera_valid_beforea_critical_optionsa_extensionsa_sig_typea_sig_keya_inner_sig_typea_signaturea_tbs_cert_bodya_cert_key_typea_cert_bodyamemoryviewaSSHPublicKeyTypesaintpamemoryviewulist[bytes]aintpudict[bytes, bytes]udict[bytes, bytes]amemoryviewppppabytesamemoryviewuSSHCertificate.__init__uSSHCertificate.nonceDareturnaSSHCertPublicKeyTypesuSSHCertificate.public_keyaserialuSSHCertificate.serialDareturnaSSHCertificateTypeatypeuSSHCertificate.typeakey_iduSSHCertificate.key_idDareturnulist[bytes]uSSHCertificate.valid_principalsavalid_beforeuSSHCertificate.valid_beforeavalid_afteruSSHCertificate.valid_afterDareturnudict[bytes, bytes]acritical_optionsuSSHCertificate.critical_optionsaextensionsuSSHCertificate.extensionsuSSHCertificate.signature_keyuSSHCertificate.public_bytesDareturnaNoneaverify_cert_signatureuSSHCertificate.verify_cert_signatureDacurveareturnuec.EllipticCurveuhashes.HashAlgorithmDadataareturnabytesuSSHCertificate | SSHPublicKeyTypesDaexts_optsareturnamemoryviewudict[bytes, bytes]Dadataabackendareturnabytesutyping.AnyaSSHPublicKeyTypesaload_ssh_public_keyDapublic_keyareturnaSSHPublicKeyTypesabytesaserialize_ssh_public_keyaSSHCertPrivateKeyTypeslD
a_public_keya_seriala_typea_key_ida_valid_principalsa_valid_for_all_principalsa_valid_beforea_valid_aftera_critical_optionsa_extensionsuSSHCertPublicKeyTypes | Noneuint | NoneuSSHCertificateType | Noneubytes | Noneulist[bytes]abooluint | Noneuint | Noneulist[tuple[bytes, bytes]]ulist[tuple[bytes, bytes]]uSSHCertificateBuilder.__init__Dapublic_keyareturnaSSHCertPublicKeyTypesaSSHCertificateBuilderuSSHCertificateBuilder.public_keyDaserialareturnaintaSSHCertificateBuilderuSSHCertificateBuilder.serialDatypeareturnaSSHCertificateTypeaSSHCertificateBuilderuSSHCertificateBuilder.typeDakey_idareturnabytesaSSHCertificateBuilderuSSHCertificateBuilder.key_idDavalid_principalsareturnulist[bytes]aSSHCertificateBuilderuSSHCertificateBuilder.valid_principalsavalid_for_all_principalsuSSHCertificateBuilder.valid_for_all_principalsDavalid_beforeareturnuint | floataSSHCertificateBuilderuSSHCertificateBuilder.valid_beforeDavalid_afterareturnuint | floataSSHCertificateBuilderuSSHCertificateBuilder.valid_afterDanameavalueareturnabytespaSSHCertificateBuilderaadd_critical_optionuSSHCertificateBuilder.add_critical_optionaadd_extensionuSSHCertificateBuilder.add_extensionDaprivate_keyareturnaSSHCertPrivateKeyTypesaSSHCertificateuSSHCertificateBuilder.signucryptography\hazmat\primitives\serialization\ssh.pyTa.0wxTwxu<module cryptography.hazmat.primitives.serialization.ssh>Ta__class__Taselfa_noncea_public_keya_seriala_cctypea_key_ida_valid_principalsa_valid_aftera_valid_beforea_critical_optionsa_extensionsa_sig_typea_sig_keya_inner_sig_typea_signaturea_tbs_cert_bodya_cert_key_typea_cert_bodyTaselfa_public_keya_seriala_typea_key_ida_valid_principalsa_valid_for_all_principalsa_valid_beforea_valid_aftera_critical_optionsa_extensionsTaselfainitTaselfassh_curve_nameacurveTapasswordasaltadesired_key_bytesaroundsaignore_few_roundsTadataablock_lenTadataTapublic_keyacurveTacurveTadataavalTakeyakey_typeTadatawnTaciphernameapasswordasaltaroundsaciphaseedT"adataa_legacy_dsa_allowedwmakey_typeaorig_key_typeakey_bodyawith_certakformatarestacert_bodyainner_key_typeanonceapublic_keyaserialacctypeakey_idaprincipalsavalid_principalsaprincipalavalid_afteravalid_beforeacrit_optionsacritical_optionsaextsaextensionsw_asig_key_rawasig_typeasig_keyatbs_cert_bodyasignature_rawainner_sig_typeasig_restasignatureTakey_typeTaexts_optsaresultabnamealast_nameanameavalueaextraTaprivate_keyapasswordaencryption_algorithmakey_typeakformataf_kdfoptionsaciphernameablklenakdfnamearoundsasaltaciphankeysacheckvalacommentaf_public_keyaf_secretsaf_mainaslenamlenabufaofsTadataaprefixasuffixTavalanbytesTaselfapublic_numbersaparameter_numbersTaselfanameavalueTaselfTaselfaprivate_keyaf_privTaselfaprivate_keyaf_privapublic_keyaprivate_numbersTaselfaprivate_keyaf_privapublic_keyaraw_private_keyaraw_public_keyaf_keypairTaselfaprivate_keyaf_privaprivate_numbersapublic_numbersTaselfapublic_keyaf_pubapublic_numbersaparameter_numbersTaselfapublic_keyaf_pubapointTaselfapublic_keyaf_pubaraw_public_keyTaselfapublic_keyaf_pubapubnTaselfadatawpwqwgwyTaselfadataacurveapointTaselfadataapointTaselfadatawewnTaselfakey_idTadataaapplicationTaselfadataapubfieldswpwqwgwywxaparameter_numbersapublic_numbersaprivate_numbersaprivate_keyTaselfadataapubfieldsacurve_nameapointasecretaprivate_keyTaselfadataapubfieldsapointakeypairasecretapoint2aprivate_keyTaselfadataapubfieldswnwewdaiqmpwpwqadmp1admq1apublic_numbersaprivate_numbersaprivate_keyTaselfadatawpwqwgwyaparameter_numbersapublic_numbersapublic_keyTaselfadataw_apointapublic_keyTaselfadataapointapublic_keyTaselfadatawewnapublic_numbersapublic_keyTaselfadataapublic_keyw_Tadataapasswordabackendwmap1ap2aciphernameakdfnameakdfoptionsankeysapubdataapub_key_typeakformatapubfieldsaciphername_bytesablklenatag_lenaedataatagasaltakbufaroundsaciphadecack1ack2akey_typeaprivate_keyw_Tadataabackendapublic_keyacert_or_keyTaselfapublic_keyTaselfavalTaselfadstbufaposafragaflenastartTaselfaserialTapublic_keyakey_typeakformataf_pubapubTaselfaprivate_keyaserialakey_idakey_typeacert_prefixanonceakformatwfafprincipalswpafcritanameavalueafoptvalafextafextvalaca_typeacaformatacafasignatureafsigahash_algwrwsafsigblobacert_dataTaselfasigformatasignature_keyasigkey_restTaselfabufTaselfatypeTaselfavalid_afterTaselfavalid_beforeTaselfavalid_principalsTaselfasignature_keywradatawsacomputed_sigahash_alg.cryptography.utils,suu must be bytesu must be bytes-likelulength argument can't be 0ato_bytesabit_lengthlllabigavalueamessageawarning_classa__class__a__init__a__name__a_modulea_DeprecatedValueawarningsawarnDastacklevelladelattrTa_moduleamodulesa_ModuleWithDeprecationsa_cached_Dainstanceaobjectainnerucached_property.<locals>.inneracached_nameasentinelafuncw<w.a_name_u: a_value_w>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaenumasysatypesatypingaUserWarninga__prepare__aCryptographyDeprecationWarninga__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ucryptography.utilsa__module__a__qualname__a__orig_bases__aDeprecatedIn36aDeprecatedIn37aDeprecatedIn40aDeprecatedIn41aDeprecatedIn42aDeprecatedIn43DanameavalueareturnastrabytesaNonea_check_bytesa_check_byteslikeTnDaintegeralengthareturnaintuint | Noneabytesaint_to_bytesTEExceptionaInterfaceNotImplementedDavalueamessageaobjectastru_DeprecatedValue.__init__aModuleTypeDamoduleutypes.ModuleTypeu_ModuleWithDeprecations.__init__Daattrareturnastraobjecta__getattr__u_ModuleWithDeprecations.__getattr__DaattravalueareturnastraobjectaNonea__setattr__u_ModuleWithDeprecations.__setattr__DaattrareturnastraNonea__delattr__u_ModuleWithDeprecations.__delattr__Dareturnutyping.Sequence[str]a__dir__u_ModuleWithDeprecations.__dir__Davalueamodule_nameamessageawarning_classanameareturnaobjectastrputype[Warning]ustr | Nonea_DeprecatedValueadeprecatedDafuncareturnutyping.Callableapropertyacached_propertyaEnumDareturnastra__repr__uEnum.__repr__a__str__uEnum.__str__ucryptography\utils.pyu<module cryptography.utils>Ta__class__TaselfaattraobjTaselfTaselfavalueamessageawarning_classTaselfamodulea__class__TaselfaattravalueTanameavalueTafuncacached_nameasentinelainnerTavalueamodule_nameamessageawarning_classanameamoduleadvTainstanceacachearesultacached_nameasentinelafuncTacached_nameafuncasentinelTaintegeralength.cryptography.x509.basezIa__class__a__init__aoidaextensionuThis extension has already been set.utoo many values to unpack (expected 3)uThis attribute has already been set.atzinfoautcoffsetadatetimeatimedeltaareplaceTnTatzinfouNormalizes a datetime to a naive datetime in UTC.

    time -- datetime to normalize. Assumed to be in UTC if not timezone
            aware.
    a_oida_valuea_typeu<Attribute(oid=uu, value=avalueu)>aAttributea_attributesu<Attributes(aAttributeNotFounduNo u attribute was foundaparsed_versiona_serial_numbera_revocation_datea_extensionsawarningsawarnuProperties that return a naïve datetime object have been deprecated. Please switch to revocation_date_utc.autilsaDeprecatedIn42Dastacklevellatimezoneautca_subject_nameu
        Creates an empty X.509 certificate request (v1).
        aNameuExpecting x509.Name object.uThe subject name may only be set once.aCertificateSigningRequestBuilderu
        Sets the certificate requestor's distinguished name.
        aExtensionTypeuextension must be an ExtensionTypeaExtensiona_reject_duplicate_extensionu
        Adds an X.509 extension to the certificate request.
        aObjectIdentifieruoid must be an ObjectIdentifieruvalue must be bytesa_ASN1Typeutag must be _ASN1Typea_reject_duplicate_attributeu
        Adds an X.509 attribute with an OID and associated value.
        uA CertificateSigningRequest must have a subjectapaddingaPSSaPKCS1v15uPadding must be PSS or PKCS1v15arsaaRSAPrivateKeyuPadding is only supported for RSA keysarust_x509acreate_x509_csru
        Signs the request using the requestor's private key.
        aVersionav3a_versiona_issuer_namea_public_keya_not_valid_beforea_not_valid_afteruThe issuer name may only be set once.aCertificateBuilderu
        Sets the CA's distinguished name.
        u
        Sets the requestor's distinguished name.
        adsaaDSAPublicKeyaRSAPublicKeyaecaEllipticCurvePublicKeyaed25519aEd25519PublicKeyaed448aEd448PublicKeyax25519aX25519PublicKeyax448aX448PublicKeyuExpecting one of DSAPublicKey, RSAPublicKey, EllipticCurvePublicKey, Ed25519PublicKey, Ed448PublicKey, X25519PublicKey, or X448PublicKey.uThe public key may only be set once.u
        Sets the requestor's public key (as found in the signing request).
        uSerial number must be of integral type.uThe serial number may only be set once.luThe serial number should be positive.abit_lengthluThe serial number should not be more than 159 bits.u
        Sets the certificate serial number.
        uExpecting datetime object.uThe not valid before may only be set once.a_convert_to_naive_utc_timea_EARLIEST_UTC_TIMEuThe not valid before date must be on or after 1950 January 1).uThe not valid before date must be before the not valid after date.u
        Sets the certificate activation time.
        uThe not valid after may only be set once.uThe not valid after date must be on or after 1950 January 1.uThe not valid after date must be after the not valid before date.u
        Sets the certificate expiration time.
        u
        Adds an X.509 extension to the certificate.
        uA certificate must have a subject nameuA certificate must have an issuer nameuA certificate must have a serial numberuA certificate must have a not valid before timeuA certificate must have a not valid after timeuA certificate must have a public keyacreate_x509_certificateu
        Signs the certificate using the CA's private key.
        a_last_updatea_next_updatea_revoked_certificatesaCertificateRevocationListBuilderuLast update may only be set once.uThe last update date must be on or after 1950 January 1.uThe last update date must be before the next update date.uThe next update date must be after the last update date.u
        Adds an X.509 extension to the certificate revocation list.
        aRevokedCertificateuMust be an instance of RevokedCertificateu
        Adds a revoked certificate to the CRL.
        uA CRL must have an issuer nameuA CRL must have a last update timeuA CRL must have a next update timeacreate_x509_crluThe serial number should be positiveaRevokedCertificateBuilderuThe revocation date may only be set once.uThe revocation date must be on or after 1950 January 1.uA revoked certificate must have a serial numberuA revoked certificate must have a revocation datea_RawRevokedCertificateaExtensionsafrom_bytesaurandomTlabigla__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcaosatypingacryptographyTautilsucryptography.hazmat.bindings._rustTax509ax509ucryptography.hazmat.primitivesTahashesaserializationahashesaserializationucryptography.hazmat.primitives.asymmetricTadsaaecaed448aed25519apaddingarsaax448ax25519ucryptography.hazmat.primitives.asymmetric.typesTaCertificateIssuerPrivateKeyTypesaCertificateIssuerPublicKeyTypesaCertificatePublicKeyTypesaCertificateIssuerPrivateKeyTypesaCertificateIssuerPublicKeyTypesaCertificatePublicKeyTypesucryptography.x509.extensionsTaExtensionaExtensionsaExtensionTypea_make_sequence_methodsa_make_sequence_methodsucryptography.x509.nameTaNamea_ASN1Typeucryptography.x509.oidTaObjectIdentifierTllpaUnionaSHA224aSHA256aSHA384aSHA512aSHA3_224aSHA3_256aSHA3_384aSHA3_512a_AllowedHashTypesTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.basea__module__a__qualname__DamsgaoidareturnastraObjectIdentifieraNoneuAttributeNotFound.__init__a__orig_bases__DaextensionaextensionsareturnuExtension[ExtensionType]ulist[Extension[ExtensionType]]aNoneDaoidaattributesareturnaObjectIdentifierulist[tuple[ObjectIdentifier, bytes, int | None]]aNoneDatimeareturnudatetime.datetimeudatetime.datetimeaUTF8StringDaoidavaluea_typeareturnaObjectIdentifierabytesaintaNoneuAttribute.__init__DareturnaObjectIdentifieruAttribute.oidDareturnabytesuAttribute.valueDareturnastra__repr__uAttribute.__repr__Daotherareturnaobjectaboola__eq__uAttribute.__eq__Dareturnainta__hash__uAttribute.__hash__aAttributesDaattributesareturnutyping.Iterable[Attribute]aNoneuAttributes.__init__Ta_attributesa__len__a__iter__uAttributes.__repr__DaoidareturnaObjectIdentifieraAttributeaget_attribute_for_oiduAttributes.get_attribute_for_oidaEnumav1laInvalidVersionDamsgaparsed_versionareturnastraintaNoneuInvalidVersion.__init__ametaclassaABCMetaTaCertificateTaCertificateaabstractmethodDaalgorithmareturnuhashes.HashAlgorithmabytesu
        Returns bytes using digest passed.
        afingerprintuCertificate.fingerprintapropertyu
        Returns certificate serial number
        aserial_numberuCertificate.serial_numberDareturnaVersionu
        Returns the certificate version
        aversionuCertificate.versionDareturnaCertificatePublicKeyTypesu
        Returns the public key
        apublic_keyuCertificate.public_keyu
        Returns the ObjectIdentifier of the public key.
        apublic_key_algorithm_oiduCertificate.public_key_algorithm_oidDareturnudatetime.datetimeu
        Not before time (represented as UTC datetime)
        anot_valid_beforeuCertificate.not_valid_beforeu
        Not before time (represented as a non-naive UTC datetime)
        anot_valid_before_utcuCertificate.not_valid_before_utcu
        Not after time (represented as UTC datetime)
        anot_valid_afteruCertificate.not_valid_afteru
        Not after time (represented as a non-naive UTC datetime)
        anot_valid_after_utcuCertificate.not_valid_after_utcDareturnaNameu
        Returns the issuer name object.
        aissueruCertificate.issueru
        Returns the subject name object.
        asubjectuCertificate.subjectDareturnuhashes.HashAlgorithm | Noneu
        Returns a HashAlgorithm corresponding to the type of the digest signed
        in the certificate.
        asignature_hash_algorithmuCertificate.signature_hash_algorithmu
        Returns the ObjectIdentifier of the signature algorithm.
        asignature_algorithm_oiduCertificate.signature_algorithm_oidDareturnuNone | padding.PSS | padding.PKCS1v15 | ec.ECDSAu
        Returns the signature algorithm parameters.
        asignature_algorithm_parametersuCertificate.signature_algorithm_parametersDareturnaExtensionsu
        Returns an Extensions object.
        aextensionsuCertificate.extensionsu
        Returns the signature bytes.
        asignatureuCertificate.signatureu
        Returns the tbsCertificate payload bytes as defined in RFC 5280.
        atbs_certificate_bytesuCertificate.tbs_certificate_bytesu
        Returns the tbsCertificate payload bytes with the SCT list extension
        stripped.
        atbs_precertificate_bytesuCertificate.tbs_precertificate_bytesu
        Checks equality.
        uCertificate.__eq__u
        Computes a hash.
        uCertificate.__hash__Daencodingareturnuserialization.Encodingabytesu
        Serializes the certificate to PEM or DER format.
        apublic_bytesuCertificate.public_bytesDaissuerareturnaCertificateaNoneu
        This method verifies that certificate issuer name matches the
        issuer subject name and that the certificate is signed by the
        issuer's private key. No other validation is performed.
        averify_directly_issued_byuCertificate.verify_directly_issued_byaregisterTaRevokedCertificateTu
        Returns the serial number of the revoked certificate.
        uRevokedCertificate.serial_numberu
        Returns the date of when this certificate was revoked.
        arevocation_dateuRevokedCertificate.revocation_dateu
        Returns the date of when this certificate was revoked as a non-naive
        UTC datetime.
        arevocation_date_utcuRevokedCertificate.revocation_date_utcu
        Returns an Extensions object containing a list of Revoked extensions.
        uRevokedCertificate.extensionsDaserial_numberarevocation_dateaextensionsaintudatetime.datetimeaExtensionsu_RawRevokedCertificate.__init__u_RawRevokedCertificate.serial_numberu_RawRevokedCertificate.revocation_dateu_RawRevokedCertificate.revocation_date_utcu_RawRevokedCertificate.extensionsTaCertificateRevocationListTaCertificateRevocationListu
        Serializes the CRL to PEM or DER format.
        uCertificateRevocationList.public_bytesuCertificateRevocationList.fingerprintDaserial_numberareturnaintuRevokedCertificate | Noneu
        Returns an instance of RevokedCertificate or None if the serial_number
        is not in the CRL.
        aget_revoked_certificate_by_serial_numberuCertificateRevocationList.get_revoked_certificate_by_serial_numberuCertificateRevocationList.signature_hash_algorithmuCertificateRevocationList.signature_algorithm_oiduCertificateRevocationList.signature_algorithm_parametersu
        Returns the X509Name with the issuer of this CRL.
        uCertificateRevocationList.issuerDareturnudatetime.datetime | Noneu
        Returns the date of next update for this CRL.
        anext_updateuCertificateRevocationList.next_updateu
        Returns the date of next update for this CRL as a non-naive UTC
        datetime.
        anext_update_utcuCertificateRevocationList.next_update_utcu
        Returns the date of last update for this CRL.
        alast_updateuCertificateRevocationList.last_updateu
        Returns the date of last update for this CRL as a non-naive UTC
        datetime.
        alast_update_utcuCertificateRevocationList.last_update_utcu
        Returns an Extensions object containing a list of CRL extensions.
        uCertificateRevocationList.extensionsuCertificateRevocationList.signatureu
        Returns the tbsCertList payload bytes as defined in RFC 5280.
        atbs_certlist_bytesuCertificateRevocationList.tbs_certlist_bytesuCertificateRevocationList.__eq__u
        Number of revoked certificates in the CRL.
        uCertificateRevocationList.__len__aoverloadDaidxareturnaintaRevokedCertificateuCertificateRevocationList.__getitem__Daidxareturnasliceulist[RevokedCertificate]Daidxareturnuint | sliceuRevokedCertificate | list[RevokedCertificate]u
        Returns a revoked certificate (or slice of revoked certificates).
        Dareturnutyping.Iterator[RevokedCertificate]u
        Iterator over the revoked certificates
        uCertificateRevocationList.__iter__Dapublic_keyareturnaCertificateIssuerPublicKeyTypesaboolu
        Verifies signature of revocation list against given public key.
        ais_signature_validuCertificateRevocationList.is_signature_validTaCertificateSigningRequestTaCertificateSigningRequestuCertificateSigningRequest.__eq__uCertificateSigningRequest.__hash__uCertificateSigningRequest.public_keyuCertificateSigningRequest.subjectuCertificateSigningRequest.signature_hash_algorithmuCertificateSigningRequest.signature_algorithm_oiduCertificateSigningRequest.signature_algorithm_parametersu
        Returns the extensions in the signing request.
        uCertificateSigningRequest.extensionsDareturnaAttributesu
        Returns an Attributes object.
        aattributesuCertificateSigningRequest.attributesu
        Encodes the request to PEM or DER format.
        uCertificateSigningRequest.public_bytesuCertificateSigningRequest.signatureu
        Returns the PKCS#10 CertificationRequestInfo bytes as defined in RFC
        2986.
        atbs_certrequest_bytesuCertificateSigningRequest.tbs_certrequest_bytesDareturnaboolu
        Verifies signature of signing request.
        uCertificateSigningRequest.is_signature_validDaoidareturnaObjectIdentifierabytesu
        Get the attribute value for a given OID.
        uCertificateSigningRequest.get_attribute_for_oidaload_pem_x509_certificateaload_der_x509_certificateaload_pem_x509_certificatesaload_pem_x509_csraload_der_x509_csraload_pem_x509_crlaload_der_x509_crlDasubject_nameaextensionsaattributesuName | Noneulist[Extension[ExtensionType]]ulist[tuple[ObjectIdentifier, bytes, int | None]]uCertificateSigningRequestBuilder.__init__DanameareturnaNameaCertificateSigningRequestBuilderasubject_nameuCertificateSigningRequestBuilder.subject_nameDaextvalacriticalareturnaExtensionTypeaboolaCertificateSigningRequestBuilderaadd_extensionuCertificateSigningRequestBuilder.add_extensionDa_tagnDaoidavaluea_tagareturnaObjectIdentifierabytesu_ASN1Type | NoneaCertificateSigningRequestBuilderaadd_attributeuCertificateSigningRequestBuilder.add_attributeDarsa_paddingnDaprivate_keyaalgorithmabackendarsa_paddingareturnaCertificateIssuerPrivateKeyTypesu_AllowedHashTypes | Noneutyping.Anyupadding.PSS | padding.PKCS1v15 | NoneaCertificateSigningRequestasignuCertificateSigningRequestBuilder.signa__annotations__ulist[Extension[ExtensionType]]Daissuer_nameasubject_nameapublic_keyaserial_numberanot_valid_beforeanot_valid_afteraextensionsareturnuName | NoneuName | NoneuCertificatePublicKeyTypes | Noneuint | Noneudatetime.datetime | Noneudatetime.datetime | Noneulist[Extension[ExtensionType]]aNoneuCertificateBuilder.__init__DanameareturnaNameaCertificateBuilderaissuer_nameuCertificateBuilder.issuer_nameuCertificateBuilder.subject_nameDakeyareturnaCertificatePublicKeyTypesaCertificateBuilderuCertificateBuilder.public_keyDanumberareturnaintaCertificateBuilderuCertificateBuilder.serial_numberDatimeareturnudatetime.datetimeaCertificateBuilderuCertificateBuilder.not_valid_beforeuCertificateBuilder.not_valid_afterDaextvalacriticalareturnaExtensionTypeaboolaCertificateBuilderuCertificateBuilder.add_extensionDaprivate_keyaalgorithmabackendarsa_paddingareturnaCertificateIssuerPrivateKeyTypesu_AllowedHashTypes | Noneutyping.Anyupadding.PSS | padding.PKCS1v15 | NoneaCertificateuCertificateBuilder.signulist[RevokedCertificate]Daissuer_namealast_updateanext_updateaextensionsarevoked_certificatesuName | Noneudatetime.datetime | Noneudatetime.datetime | Noneulist[Extension[ExtensionType]]ulist[RevokedCertificate]uCertificateRevocationListBuilder.__init__Daissuer_nameareturnaNameaCertificateRevocationListBuilderuCertificateRevocationListBuilder.issuer_nameDalast_updateareturnudatetime.datetimeaCertificateRevocationListBuilderuCertificateRevocationListBuilder.last_updateDanext_updateareturnudatetime.datetimeaCertificateRevocationListBuilderuCertificateRevocationListBuilder.next_updateDaextvalacriticalareturnaExtensionTypeaboolaCertificateRevocationListBuilderuCertificateRevocationListBuilder.add_extensionDarevoked_certificateareturnaRevokedCertificateaCertificateRevocationListBuilderaadd_revoked_certificateuCertificateRevocationListBuilder.add_revoked_certificateDaprivate_keyaalgorithmabackendarsa_paddingareturnaCertificateIssuerPrivateKeyTypesu_AllowedHashTypes | Noneutyping.Anyupadding.PSS | padding.PKCS1v15 | NoneaCertificateRevocationListuCertificateRevocationListBuilder.signDaserial_numberarevocation_dateaextensionsuint | Noneudatetime.datetime | Noneulist[Extension[ExtensionType]]uRevokedCertificateBuilder.__init__DanumberareturnaintaRevokedCertificateBuilderuRevokedCertificateBuilder.serial_numberDatimeareturnudatetime.datetimeaRevokedCertificateBuilderuRevokedCertificateBuilder.revocation_dateDaextvalacriticalareturnaExtensionTypeaboolaRevokedCertificateBuilderuRevokedCertificateBuilder.add_extensionDabackendareturnutyping.AnyaRevokedCertificateabuilduRevokedCertificateBuilder.buildarandom_serial_numberucryptography\x509\base.pyu<module cryptography.x509.base>Ta__class__TaselfaotherTaselfaidxTaselfTaselfaoidavaluea_typeTaselfamsgaoida__class__TaselfaattributesTaselfaissuer_nameasubject_nameapublic_keyaserial_numberanot_valid_beforeanot_valid_afteraextensionsTaselfaissuer_namealast_updateanext_updateaextensionsarevoked_certificatesTaselfasubject_nameaextensionsaattributesTaselfamsgaparsed_versiona__class__Taselfaserial_numberarevocation_dateaextensionsTatimeaoffsetTaoidaattributesaattr_oidw_TaextensionaextensionsweTaselfaoidavaluea_tagatagTaselfaextvalacriticalaextensionTaselfarevoked_certificateTaselfabackendTaselfaalgorithmTaselfaoidaattrTaselfaoidTaselfaserial_numberTaselfapublic_keyTaselfanameTaselfaissuer_nameTaselfalast_updateTaselfanext_updateTaselfatimeTaselfaencodingTaselfakeyTaselfanumberTaselfaprivate_keyaalgorithmabackendarsa_paddingTaselfaissuer.cryptography.x509.certificate_transparencylWa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcladatetimeacryptographyTautilsautilsucryptography.hazmat.bindings._rustTax509ax509arust_x509ucryptography.hazmat.primitives.hashesTaHashAlgorithmaHashAlgorithmaEnuma__prepare__aLogEntryTypea__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.certificate_transparencya__module__a__qualname__aX509_CERTIFICATElaPRE_CERTIFICATEa__orig_bases__aVersionav1aSignatureAlgorithmu
    Signature algorithms that are valid for SCTs.

    These are exactly the same as SignatureAlgorithm in RFC 5246 (TLS 1.2).

    See: <https://datatracker.ietf.org/doc/html/rfc5246#section-7.4.1.4.1>
    aANONYMOUSaRSAlaDSAlaECDSAametaclassaABCMetaTaSignedCertificateTimestampTaSignedCertificateTimestampapropertyaabstractmethodDareturnaVersionu
        Returns the SCT version.
        aversionuSignedCertificateTimestamp.versionDareturnabytesu
        Returns an identifier indicating which log this SCT is for.
        alog_iduSignedCertificateTimestamp.log_idDareturnudatetime.datetimeu
        Returns the timestamp for this SCT.
        atimestampuSignedCertificateTimestamp.timestampDareturnaLogEntryTypeu
        Returns whether this is an SCT for a certificate or pre-certificate.
        aentry_typeuSignedCertificateTimestamp.entry_typeDareturnaHashAlgorithmu
        Returns the hash algorithm used for the SCT's signature.
        asignature_hash_algorithmuSignedCertificateTimestamp.signature_hash_algorithmDareturnaSignatureAlgorithmu
        Returns the signing algorithm used for the SCT's signature.
        asignature_algorithmuSignedCertificateTimestamp.signature_algorithmu
        Returns the signature for this SCT.
        asignatureuSignedCertificateTimestamp.signatureu
        Returns the raw bytes of any extensions for this SCT.
        aextension_bytesuSignedCertificateTimestamp.extension_bytesaregisteraSctucryptography\x509\certificate_transparency.pyu<module cryptography.x509.certificate_transparency>Ta__class__Taselfu.cryptography.x509a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_cryptographyu\not_existingax509TaNUITKA_PACKAGE_cryptography_x509u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucryptography.x509Tacertificate_transparencyaverificationlacertificate_transparencyaverificationucryptography.x509.baseTaAttributeaAttributeNotFoundaAttributesaCertificateaCertificateBuilderaCertificateRevocationListaCertificateRevocationListBuilderaCertificateSigningRequestaCertificateSigningRequestBuilderaInvalidVersionaRevokedCertificateaRevokedCertificateBuilderaVersionaload_der_x509_certificateaload_der_x509_crlaload_der_x509_csraload_pem_x509_certificateaload_pem_x509_certificatesaload_pem_x509_crlaload_pem_x509_csrarandom_serial_numberaAttributeaAttributeNotFoundaAttributesaCertificateaCertificateBuilderaCertificateRevocationListaCertificateRevocationListBuilderaCertificateSigningRequestaCertificateSigningRequestBuilderaInvalidVersionaRevokedCertificateaRevokedCertificateBuilderaVersionaload_der_x509_certificateaload_der_x509_crlaload_der_x509_csraload_pem_x509_certificateaload_pem_x509_certificatesaload_pem_x509_crlaload_pem_x509_csrarandom_serial_numberucryptography.x509.extensionsT+aAccessDescriptionaAuthorityInformationAccessaAuthorityKeyIdentifieraBasicConstraintsaCertificateIssueraCertificatePoliciesaCRLDistributionPointsaCRLNumberaCRLReasonaDeltaCRLIndicatoraDistributionPointaDuplicateExtensionaExtendedKeyUsageaExtensionaExtensionNotFoundaExtensionsaExtensionTypeaFreshestCRLaGeneralNamesaInhibitAnyPolicyaInvalidityDateaIssuerAlternativeNameaIssuingDistributionPointaKeyUsageaMSCertificateTemplateaNameConstraintsaNoticeReferenceaOCSPAcceptableResponsesaOCSPNoCheckaOCSPNonceaPolicyConstraintsaPolicyInformationaPrecertificateSignedCertificateTimestampsaPrecertPoisonaReasonFlagsaSignedCertificateTimestampsaSubjectAlternativeNameaSubjectInformationAccessaSubjectKeyIdentifieraTLSFeatureaTLSFeatureTypeaUnrecognizedExtensionaUserNoticeaAccessDescriptionaAuthorityInformationAccessaAuthorityKeyIdentifieraBasicConstraintsaCertificateIssueraCertificatePoliciesaCRLDistributionPointsaCRLNumberaCRLReasonaDeltaCRLIndicatoraDistributionPointaDuplicateExtensionaExtendedKeyUsageaExtensionaExtensionNotFoundaExtensionsaExtensionTypeaFreshestCRLaGeneralNamesaInhibitAnyPolicyaInvalidityDateaIssuerAlternativeNameaIssuingDistributionPointaKeyUsageaMSCertificateTemplateaNameConstraintsaNoticeReferenceaOCSPAcceptableResponsesaOCSPNoCheckaOCSPNonceaPolicyConstraintsaPolicyInformationaPrecertificateSignedCertificateTimestampsaPrecertPoisonaReasonFlagsaSignedCertificateTimestampsaSubjectAlternativeNameaSubjectInformationAccessaSubjectKeyIdentifieraTLSFeatureaTLSFeatureTypeaUnrecognizedExtensionaUserNoticeucryptography.x509.general_nameTaDirectoryNameaDNSNameaGeneralNameaIPAddressaOtherNameaRegisteredIDaRFC822NameaUniformResourceIdentifieraUnsupportedGeneralNameTypeaDirectoryNameaDNSNameaGeneralNameaIPAddressaOtherNameaRegisteredIDaRFC822NameaUniformResourceIdentifieraUnsupportedGeneralNameTypeucryptography.x509.nameTaNameaNameAttributeaRelativeDistinguishedNameaNameaNameAttributeaRelativeDistinguishedNameucryptography.x509.oidTaAuthorityInformationAccessOIDaCertificatePoliciesOIDaCRLEntryExtensionOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaObjectIdentifieraPublicKeyAlgorithmOIDaSignatureAlgorithmOIDaAuthorityInformationAccessOIDaCertificatePoliciesOIDaCRLEntryExtensionOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaObjectIdentifieraPublicKeyAlgorithmOIDaSignatureAlgorithmOIDaAUTHORITY_INFORMATION_ACCESSaOID_AUTHORITY_INFORMATION_ACCESSaAUTHORITY_KEY_IDENTIFIERaOID_AUTHORITY_KEY_IDENTIFIERaBASIC_CONSTRAINTSaOID_BASIC_CONSTRAINTSaCERTIFICATE_POLICIESaOID_CERTIFICATE_POLICIESaCRL_DISTRIBUTION_POINTSaOID_CRL_DISTRIBUTION_POINTSaEXTENDED_KEY_USAGEaOID_EXTENDED_KEY_USAGEaFRESHEST_CRLaOID_FRESHEST_CRLaINHIBIT_ANY_POLICYaOID_INHIBIT_ANY_POLICYaISSUER_ALTERNATIVE_NAMEaOID_ISSUER_ALTERNATIVE_NAMEaKEY_USAGEaOID_KEY_USAGEaNAME_CONSTRAINTSaOID_NAME_CONSTRAINTSaOCSP_NO_CHECKaOID_OCSP_NO_CHECKaPOLICY_CONSTRAINTSaOID_POLICY_CONSTRAINTSaPOLICY_MAPPINGSaOID_POLICY_MAPPINGSaSUBJECT_ALTERNATIVE_NAMEaOID_SUBJECT_ALTERNATIVE_NAMEaSUBJECT_DIRECTORY_ATTRIBUTESaOID_SUBJECT_DIRECTORY_ATTRIBUTESaSUBJECT_INFORMATION_ACCESSaOID_SUBJECT_INFORMATION_ACCESSaSUBJECT_KEY_IDENTIFIERaOID_SUBJECT_KEY_IDENTIFIERaDSA_WITH_SHA1aOID_DSA_WITH_SHA1aDSA_WITH_SHA224aOID_DSA_WITH_SHA224aDSA_WITH_SHA256aOID_DSA_WITH_SHA256aECDSA_WITH_SHA1aOID_ECDSA_WITH_SHA1aECDSA_WITH_SHA224aOID_ECDSA_WITH_SHA224aECDSA_WITH_SHA256aOID_ECDSA_WITH_SHA256aECDSA_WITH_SHA384aOID_ECDSA_WITH_SHA384aECDSA_WITH_SHA512aOID_ECDSA_WITH_SHA512aRSA_WITH_MD5aOID_RSA_WITH_MD5aRSA_WITH_SHA1aOID_RSA_WITH_SHA1aRSA_WITH_SHA224aOID_RSA_WITH_SHA224aRSA_WITH_SHA256aOID_RSA_WITH_SHA256aRSA_WITH_SHA384aOID_RSA_WITH_SHA384aRSA_WITH_SHA512aOID_RSA_WITH_SHA512aRSASSA_PSSaOID_RSASSA_PSSaCOMMON_NAMEaOID_COMMON_NAMEaCOUNTRY_NAMEaOID_COUNTRY_NAMEaDOMAIN_COMPONENTaOID_DOMAIN_COMPONENTaDN_QUALIFIERaOID_DN_QUALIFIERaEMAIL_ADDRESSaOID_EMAIL_ADDRESSaGENERATION_QUALIFIERaOID_GENERATION_QUALIFIERaGIVEN_NAMEaOID_GIVEN_NAMEaLOCALITY_NAMEaOID_LOCALITY_NAMEaORGANIZATIONAL_UNIT_NAMEaOID_ORGANIZATIONAL_UNIT_NAMEaORGANIZATION_NAMEaOID_ORGANIZATION_NAMEaPSEUDONYMaOID_PSEUDONYMaSERIAL_NUMBERaOID_SERIAL_NUMBERaSTATE_OR_PROVINCE_NAMEaOID_STATE_OR_PROVINCE_NAMEaSURNAMEaOID_SURNAMEaTITLEaOID_TITLEaCLIENT_AUTHaOID_CLIENT_AUTHaCODE_SIGNINGaOID_CODE_SIGNINGaEMAIL_PROTECTIONaOID_EMAIL_PROTECTIONaOCSP_SIGNINGaOID_OCSP_SIGNINGaSERVER_AUTHaOID_SERVER_AUTHaTIME_STAMPINGaOID_TIME_STAMPINGaANY_POLICYaOID_ANY_POLICYaCPS_QUALIFIERaOID_CPS_QUALIFIERaCPS_USER_NOTICEaOID_CPS_USER_NOTICEaCERTIFICATE_ISSUERaOID_CERTIFICATE_ISSUERaCRL_REASONaOID_CRL_REASONaINVALIDITY_DATEaOID_INVALIDITY_DATEaCA_ISSUERSaOID_CA_ISSUERSaOCSPaOID_OCSPLUaOID_CA_ISSUERSaOID_OCSPaAccessDescriptionaAttributeaAttributeNotFoundaAttributesaAuthorityInformationAccessaAuthorityKeyIdentifieraBasicConstraintsaCRLDistributionPointsaCRLNumberaCRLReasonaCertificateaCertificateBuilderaCertificateIssueraCertificatePoliciesaCertificateRevocationListaCertificateRevocationListBuilderaCertificateSigningRequestaCertificateSigningRequestBuilderaDNSNameaDeltaCRLIndicatoraDirectoryNameaDistributionPointaDuplicateExtensionaExtendedKeyUsageaExtensionaExtensionNotFoundaExtensionTypeaExtensionsaFreshestCRLaGeneralNameaGeneralNamesaIPAddressaInhibitAnyPolicyaInvalidVersionaInvalidityDateaIssuerAlternativeNameaIssuingDistributionPointaKeyUsageaMSCertificateTemplateaNameaNameAttributeaNameConstraintsaNameOIDaNoticeReferenceaOCSPAcceptableResponsesaOCSPNoCheckaOCSPNonceaObjectIdentifieraOtherNameaPolicyConstraintsaPolicyInformationaPrecertPoisonaPrecertificateSignedCertificateTimestampsaPublicKeyAlgorithmOIDaRFC822NameaReasonFlagsaRegisteredIDaRelativeDistinguishedNameaRevokedCertificateaRevokedCertificateBuilderaSignatureAlgorithmOIDaSignedCertificateTimestampsaSubjectAlternativeNameaSubjectInformationAccessaSubjectKeyIdentifieraTLSFeatureaTLSFeatureTypeaUniformResourceIdentifieraUnrecognizedExtensionaUnsupportedGeneralNameTypeaUserNoticeaVersionacertificate_transparencyaload_der_x509_certificateaload_der_x509_crlaload_der_x509_csraload_pem_x509_certificateaload_pem_x509_certificatesaload_pem_x509_crlaload_pem_x509_csrarandom_serial_numberaverificationaverificationa__all__ucryptography\x509\__init__.pyu<module cryptography.x509>u.cryptography.x509.extensionsffaRSAPublicKeyapublic_bytesaserializationaEncodingaDERaPublicFormataPKCS1aEllipticCurvePublicKeyaX962aUncompressedPointaSubjectPublicKeyInfoaasn1aparse_spki_for_dataahashlibasha1adigestDareturnaintalen_methodu_make_sequence_methods.<locals>.len_methodaiter_methodu_make_sequence_methods.<locals>.iter_methodagetitem_methodu_make_sequence_methods.<locals>.getitem_methodafield_namea__class__a__init__aoidupublic_bytes is not implemented for extension type uu
        Serializes the extension type to DER.
        a_extensionsaExtensionNotFounduNo u extension was foundaUnrecognizedExtensionuUnrecognizedExtension can't be used with get_extension_for_class because more than one instance of the class may be present.avalueu<Extensions(u)>ucrl_number must be an integera_crl_numberaCRLNumberacrl_numberu<CRLNumber(arust_x509aencode_extension_valueuauthority_cert_issuer and authority_cert_serial_number must both be present or both Noneuauthority_cert_issuer must be a list of GeneralName objectsuauthority_cert_serial_number must be an integera_key_identifieraauthority_cert_issuera_authority_cert_issuera_authority_cert_serial_numberaGeneralNameu<genexpr>uAuthorityKeyIdentifier.__init__.<locals>.<genexpr>a_key_identifier_from_public_keyTakey_identifieraauthority_cert_issueraauthority_cert_serial_numberu<AuthorityKeyIdentifier(key_identifier=akey_identifieru, authority_cert_issuer=u, authority_cert_serial_number=aauthority_cert_serial_numberaAuthorityKeyIdentifiera_digestu<SubjectKeyIdentifier(digest=aSubjectKeyIdentifieraconstant_timeabytes_equEvery item in the descriptions list must be an AccessDescriptiona_descriptionsaAccessDescriptionuAuthorityInformationAccess.__init__.<locals>.<genexpr>u<AuthorityInformationAccess(aAuthorityInformationAccessuSubjectInformationAccess.__init__.<locals>.<genexpr>u<SubjectInformationAccess(aSubjectInformationAccessaObjectIdentifieruaccess_method must be an ObjectIdentifieruaccess_location must be a GeneralNamea_access_methoda_access_locationu<AccessDescription(access_method=aaccess_methodu, access_location=aaccess_locationuca must be a boolean valueupath_length must be None when ca is Falselupath_length must be a non-negative integer or Nonea_caa_path_lengthu<BasicConstraints(ca=acau, path_length=apath_lengthaBasicConstraintsaDeltaCRLIndicatoru<DeltaCRLIndicator(crl_number=udistribution_points must be a list of DistributionPoint objectsa_distribution_pointsaDistributionPointuCRLDistributionPoints.__init__.<locals>.<genexpr>u<CRLDistributionPoints(aCRLDistributionPointsuFreshestCRL.__init__.<locals>.<genexpr>u<FreshestCRL(aFreshestCRLuYou cannot provide both full_name and relative_name, at least one must be None.uEither full_name, relative_name or crl_issuer must be provided.ufull_name must be a list of GeneralName objectsaRelativeDistinguishedNameurelative_name must be a RelativeDistinguishedNameucrl_issuer must be None or a list of general namesureasons must be None or frozenset of ReasonFlagsaReasonFlagsaunspecifiedaremove_from_crluunspecified and remove_from_crl are not valid reasons in a DistributionPointafull_namea_full_namea_relative_namea_reasonsacrl_issuera_crl_issueruDistributionPoint.__init__.<locals>.<genexpr>u<DistributionPoint(full_name={0.full_name}, relative_name={0.relative_name}, reasons={0.reasons}, crl_issuer={0.crl_issuer})>arelative_nameareasonsurequire_explicit_policy must be a non-negative integer or Noneuinhibit_policy_mapping must be a non-negative integer or NoneuAt least one of require_explicit_policy and inhibit_policy_mapping must not be Nonea_require_explicit_policya_inhibit_policy_mappingu<PolicyConstraints(require_explicit_policy={0.require_explicit_policy}, inhibit_policy_mapping={0.inhibit_policy_mapping})>aPolicyConstraintsarequire_explicit_policyainhibit_policy_mappinguEvery item in the policies list must be a PolicyInformationa_policiesaPolicyInformationuCertificatePolicies.__init__.<locals>.<genexpr>u<CertificatePolicies(aCertificatePoliciesupolicy_identifier must be an ObjectIdentifiera_policy_identifierupolicy_qualifiers must be a list of strings and/or UserNotice objects or Noneapolicy_qualifiersa_policy_qualifiersaUserNoticeuPolicyInformation.__init__.<locals>.<genexpr>u<PolicyInformation(policy_identifier=apolicy_identifieru, policy_qualifiers=aNoticeReferenceunotice_reference must be None or a NoticeReferencea_notice_referencea_explicit_textu<UserNotice(notice_reference=anotice_referenceu, explicit_text=aexplicit_texta_organizationunotice_numbers must be a list of integersa_notice_numbersuNoticeReference.__init__.<locals>.<genexpr>u<NoticeReference(organization=aorganizationu, notice_numbers=anotice_numbersuEvery item in the usages list must be an ObjectIdentifiera_usagesuExtendedKeyUsage.__init__.<locals>.<genexpr>u<ExtendedKeyUsage(aExtendedKeyUsageaOCSPNoCheckaPrecertPoisonufeatures must be a list of elements from the TLSFeatureType enuma_featuresaTLSFeatureTypeuTLSFeature.__init__.<locals>.<genexpr>u<TLSFeature(features=aTLSFeatureuskip_certs must be an integeruskip_certs must be a non-negative integera_skip_certsu<InhibitAnyPolicy(skip_certs=askip_certsaInhibitAnyPolicyuencipher_only and decipher_only can only be true when key_agreement is truea_digital_signaturea_content_commitmenta_key_enciphermenta_data_enciphermenta_key_agreementa_key_cert_signa_crl_signa_encipher_onlya_decipher_onlyakey_agreementuencipher_only is undefined unless key_agreement is trueudecipher_only is undefined unless key_agreement is trueaencipher_onlyadecipher_onlyu<KeyUsage(digital_signature=adigital_signatureu, content_commitment=acontent_commitmentu, key_encipherment=akey_enciphermentu, data_encipherment=adata_enciphermentu, key_agreement=u, key_cert_sign=akey_cert_signu, crl_sign=acrl_signu, encipher_only=u, decipher_only=aKeyUsageupermitted_subtrees must be a non-empty list or Noneupermitted_subtrees must be a list of GeneralName objects or Nonea_validate_treeuexcluded_subtrees must be a non-empty list or Noneuexcluded_subtrees must be a list of GeneralName objects or Noneapermitted_subtreesaexcluded_subtreesuAt least one of permitted_subtrees and excluded_subtrees must not be Nonea_permitted_subtreesa_excluded_subtreesuNameConstraints.__init__.<locals>.<genexpr>aNameConstraintsa_validate_ip_namea_validate_dns_nameuIPAddress name constraints must be an IPv4Network or IPv6Network objectaIPAddressaipaddressaIPv4NetworkaIPv6NetworkuNameConstraints._validate_ip_name.<locals>.<genexpr>uDNSName name constraints must not contain the '*' wildcard characteraDNSNamew*uNameConstraints._validate_dns_name.<locals>.<genexpr>u<NameConstraints(permitted_subtrees=u, excluded_subtrees=uoid argument must be an ObjectIdentifier instance.ucritical must be a boolean valuea_oida_criticala_valueu<Extension(oid=u, critical=acriticalu, value=aExtensionuEvery item in the general_names list must be an object conforming to the GeneralName interfacea_general_namesuGeneralNames.__init__.<locals>.<genexpr>aOtherNameatypeuGeneralNames.get_values_for_type.<locals>.<genexpr>u<GeneralNames(aGeneralNamesaget_values_for_typeu<SubjectAlternativeName(aSubjectAlternativeNameu<IssuerAlternativeName(aIssuerAlternativeNameu<CertificateIssuer(aCertificateIssuerureason must be an element from ReasonFlagsa_reasonu<CRLReason(reason=aCRLReasonareasonadatetimeuinvalidity_date must be a datetime.datetimea_invalidity_dateu<InvalidityDate(invalidity_date=aInvalidityDateainvalidity_dateatzinfoareplaceatimezoneautcTatzinfoaastimezoneTatzuEvery item in the signed_certificate_timestamps list must be a SignedCertificateTimestampa_signed_certificate_timestampsaSignedCertificateTimestampuPrecertificateSignedCertificateTimestamps.__init__.<locals>.<genexpr>u<PrecertificateSignedCertificateTimestamps(aPrecertificateSignedCertificateTimestampsuSignedCertificateTimestamps.__init__.<locals>.<genexpr>u<SignedCertificateTimestamps(aSignedCertificateTimestampsunonce must be bytesa_nonceaOCSPNonceanonceu<OCSPNonce(nonce=uAll responses must be ObjectIdentifiersa_responsesuOCSPAcceptableResponses.__init__.<locals>.<genexpr>aOCSPAcceptableResponsesu<OCSPAcceptableResponses(responses=uonly_some_reasons must be None or frozenset of ReasonFlagsuunspecified and remove_from_crl are not valid reasons in an IssuingDistributionPointuonly_contains_user_certs, only_contains_ca_certs, indirect_crl and only_contains_attribute_certs must all be boolean.uOnly one of the following can be set to True: only_contains_user_certs, only_contains_ca_certs, indirect_crl, only_contains_attribute_certsuCannot create empty extension: if only_contains_user_certs, only_contains_ca_certs, indirect_crl, and only_contains_attribute_certs are all False, then either full_name, relative_name, or only_some_reasons must have a value.a_only_contains_user_certsa_only_contains_ca_certsa_indirect_crla_only_contains_attribute_certsa_only_some_reasonsuIssuingDistributionPoint.__init__.<locals>.<genexpr>u<IssuingDistributionPoint(full_name=u, relative_name=u, only_contains_user_certs=aonly_contains_user_certsu, only_contains_ca_certs=aonly_contains_ca_certsu, only_some_reasons=aonly_some_reasonsu, indirect_crl=aindirect_crlu, only_contains_attribute_certs=aonly_contains_attribute_certsaIssuingDistributionPointuoid must be an ObjectIdentifiera_template_idumajor_version and minor_version must be integers or Nonea_major_versiona_minor_versionu<MSCertificateTemplate(template_id=atemplate_idu, major_version=amajor_versionu, minor_version=aminor_versionaMSCertificateTemplateu<UnrecognizedExtension(oid=a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabcatypingacryptographyTautilsautilsucryptography.hazmat.bindings._rustTaasn1Tax509ax509ucryptography.hazmat.primitivesTaconstant_timeaserializationucryptography.hazmat.primitives.asymmetric.ecTaEllipticCurvePublicKeyucryptography.hazmat.primitives.asymmetric.rsaTaRSAPublicKeyucryptography.hazmat.primitives.asymmetric.typesTaCertificateIssuerPublicKeyTypesaCertificatePublicKeyTypesaCertificateIssuerPublicKeyTypesaCertificatePublicKeyTypesucryptography.x509.certificate_transparencyTaSignedCertificateTimestampucryptography.x509.general_nameTaDirectoryNameaDNSNameaGeneralNameaIPAddressaOtherNameaRegisteredIDaRFC822NameaUniformResourceIdentifiera_IPAddressTypesaDirectoryNameaRegisteredIDaRFC822NameaUniformResourceIdentifiera_IPAddressTypesucryptography.x509.nameTaNameaRelativeDistinguishedNameaNameucryptography.x509.oidTaCRLEntryExtensionOIDaExtensionOIDaObjectIdentifieraOCSPExtensionOIDaCRLEntryExtensionOIDaExtensionOIDaOCSPExtensionOIDaTypeVarTaExtensionTypeVaraExtensionTypetTaboundacovariantaExtensionTypeVarDapublic_keyareturnaCertificatePublicKeyTypesabytesDafield_nameastra_make_sequence_methodsTEExceptiona__prepare__aDuplicateExtensiona__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.extensionsa__module__a__qualname__DamsgaoidareturnastraObjectIdentifieraNoneuDuplicateExtension.__init__a__orig_bases__uExtensionNotFound.__init__ametaclassaABCMetaTaExtensionTypeTaExtensionTypea__annotations__utyping.ClassVar[ObjectIdentifier]DareturnabytesuExtensionType.public_bytesaExtensionsDaextensionsareturnutyping.Iterable[Extension[ExtensionType]]aNoneuExtensions.__init__DaoidareturnaObjectIdentifieruExtension[ExtensionType]aget_extension_for_oiduExtensions.get_extension_for_oidDaextclassareturnutype[ExtensionTypeVar]uExtension[ExtensionTypeVar]aget_extension_for_classuExtensions.get_extension_for_classTa_extensionsutoo many values to unpack (expected 3)a__len__a__iter__Dareturnastra__repr__uExtensions.__repr__aCRL_NUMBERDacrl_numberareturnaintaNoneuCRLNumber.__init__Daotherareturnaobjectaboola__eq__uCRLNumber.__eq__a__hash__uCRLNumber.__hash__uCRLNumber.__repr__apropertyuCRLNumber.crl_numberuCRLNumber.public_bytesaAUTHORITY_KEY_IDENTIFIERDakey_identifieraauthority_cert_issueraauthority_cert_serial_numberareturnubytes | Noneutyping.Iterable[GeneralName] | Noneuint | NoneaNoneuAuthorityKeyIdentifier.__init__aclassmethodDapublic_keyareturnaCertificateIssuerPublicKeyTypesaAuthorityKeyIdentifierafrom_issuer_public_keyuAuthorityKeyIdentifier.from_issuer_public_keyDaskiareturnaSubjectKeyIdentifieraAuthorityKeyIdentifierafrom_issuer_subject_key_identifieruAuthorityKeyIdentifier.from_issuer_subject_key_identifieruAuthorityKeyIdentifier.__repr__uAuthorityKeyIdentifier.__eq__uAuthorityKeyIdentifier.__hash__Dareturnubytes | NoneuAuthorityKeyIdentifier.key_identifierDareturnulist[GeneralName] | NoneuAuthorityKeyIdentifier.authority_cert_issuerDareturnuint | NoneuAuthorityKeyIdentifier.authority_cert_serial_numberuAuthorityKeyIdentifier.public_bytesaSUBJECT_KEY_IDENTIFIERDadigestareturnabytesaNoneuSubjectKeyIdentifier.__init__Dapublic_keyareturnaCertificatePublicKeyTypesaSubjectKeyIdentifierafrom_public_keyuSubjectKeyIdentifier.from_public_keyuSubjectKeyIdentifier.digestuSubjectKeyIdentifier.key_identifieruSubjectKeyIdentifier.__repr__uSubjectKeyIdentifier.__eq__uSubjectKeyIdentifier.__hash__uSubjectKeyIdentifier.public_bytesaAUTHORITY_INFORMATION_ACCESSDadescriptionsareturnutyping.Iterable[AccessDescription]aNoneuAuthorityInformationAccess.__init__Ta_descriptionsuAuthorityInformationAccess.__repr__uAuthorityInformationAccess.__eq__uAuthorityInformationAccess.__hash__uAuthorityInformationAccess.public_bytesaSUBJECT_INFORMATION_ACCESSuSubjectInformationAccess.__init__uSubjectInformationAccess.__repr__uSubjectInformationAccess.__eq__uSubjectInformationAccess.__hash__uSubjectInformationAccess.public_bytesDaaccess_methodaaccess_locationareturnaObjectIdentifieraGeneralNameaNoneuAccessDescription.__init__uAccessDescription.__repr__uAccessDescription.__eq__uAccessDescription.__hash__DareturnaObjectIdentifieruAccessDescription.access_methodDareturnaGeneralNameuAccessDescription.access_locationaBASIC_CONSTRAINTSDacaapath_lengthareturnabooluint | NoneaNoneuBasicConstraints.__init__DareturnabooluBasicConstraints.cauBasicConstraints.path_lengthuBasicConstraints.__repr__uBasicConstraints.__eq__uBasicConstraints.__hash__uBasicConstraints.public_bytesaDELTA_CRL_INDICATORuDeltaCRLIndicator.__init__uDeltaCRLIndicator.crl_numberuDeltaCRLIndicator.__eq__uDeltaCRLIndicator.__hash__uDeltaCRLIndicator.__repr__uDeltaCRLIndicator.public_bytesaCRL_DISTRIBUTION_POINTSDadistribution_pointsareturnutyping.Iterable[DistributionPoint]aNoneuCRLDistributionPoints.__init__Ta_distribution_pointsuCRLDistributionPoints.__repr__uCRLDistributionPoints.__eq__uCRLDistributionPoints.__hash__uCRLDistributionPoints.public_bytesaFRESHEST_CRLuFreshestCRL.__init__uFreshestCRL.__repr__uFreshestCRL.__eq__uFreshestCRL.__hash__uFreshestCRL.public_bytesDafull_namearelative_nameareasonsacrl_issuerareturnutyping.Iterable[GeneralName] | NoneuRelativeDistinguishedName | Noneufrozenset[ReasonFlags] | Noneutyping.Iterable[GeneralName] | NoneaNoneuDistributionPoint.__init__uDistributionPoint.__repr__uDistributionPoint.__eq__uDistributionPoint.__hash__uDistributionPoint.full_nameDareturnuRelativeDistinguishedName | NoneuDistributionPoint.relative_nameDareturnufrozenset[ReasonFlags] | NoneuDistributionPoint.reasonsuDistributionPoint.crl_issueraEnumakeyCompromiseakey_compromiseacACompromiseaca_compromiseaaffiliationChangedaaffiliation_changedasupersededacessationOfOperationacessation_of_operationacertificateHoldacertificate_holdaprivilegeWithdrawnaprivilege_withdrawnaaACompromiseaaa_compromisearemoveFromCRLlllllllla_REASON_BIT_MAPPINGa_CRLREASONFLAGSll
a_CRL_ENTRY_REASON_ENUM_TO_CODEaPOLICY_CONSTRAINTSDarequire_explicit_policyainhibit_policy_mappingareturnuint | Noneuint | NoneaNoneuPolicyConstraints.__init__uPolicyConstraints.__repr__uPolicyConstraints.__eq__uPolicyConstraints.__hash__uPolicyConstraints.require_explicit_policyuPolicyConstraints.inhibit_policy_mappinguPolicyConstraints.public_bytesaCERTIFICATE_POLICIESDapoliciesareturnutyping.Iterable[PolicyInformation]aNoneuCertificatePolicies.__init__Ta_policiesuCertificatePolicies.__repr__uCertificatePolicies.__eq__uCertificatePolicies.__hash__uCertificatePolicies.public_bytesDapolicy_identifierapolicy_qualifiersareturnaObjectIdentifierutyping.Iterable[str | UserNotice] | NoneaNoneuPolicyInformation.__init__uPolicyInformation.__repr__uPolicyInformation.__eq__uPolicyInformation.__hash__uPolicyInformation.policy_identifierDareturnulist[str | UserNotice] | NoneuPolicyInformation.policy_qualifiersDanotice_referenceaexplicit_textareturnuNoticeReference | Noneustr | NoneaNoneuUserNotice.__init__uUserNotice.__repr__uUserNotice.__eq__uUserNotice.__hash__DareturnuNoticeReference | NoneuUserNotice.notice_referenceDareturnustr | NoneuUserNotice.explicit_textDaorganizationanotice_numbersareturnustr | Noneutyping.Iterable[int]aNoneuNoticeReference.__init__uNoticeReference.__repr__uNoticeReference.__eq__uNoticeReference.__hash__uNoticeReference.organizationDareturnulist[int]uNoticeReference.notice_numbersaEXTENDED_KEY_USAGEDausagesareturnutyping.Iterable[ObjectIdentifier]aNoneuExtendedKeyUsage.__init__Ta_usagesuExtendedKeyUsage.__repr__uExtendedKeyUsage.__eq__uExtendedKeyUsage.__hash__uExtendedKeyUsage.public_bytesaOCSP_NO_CHECKuOCSPNoCheck.__eq__uOCSPNoCheck.__hash__u<OCSPNoCheck()>uOCSPNoCheck.__repr__uOCSPNoCheck.public_bytesaPRECERT_POISONuPrecertPoison.__eq__uPrecertPoison.__hash__u<PrecertPoison()>uPrecertPoison.__repr__uPrecertPoison.public_bytesaTLS_FEATUREDafeaturesareturnutyping.Iterable[TLSFeatureType]aNoneuTLSFeature.__init__Ta_featuresuTLSFeature.__repr__uTLSFeature.__eq__uTLSFeature.__hash__uTLSFeature.public_bytesastatus_requestlastatus_request_v2a_TLS_FEATURE_TYPE_TO_ENUMaINHIBIT_ANY_POLICYDaskip_certsareturnaintaNoneuInhibitAnyPolicy.__init__uInhibitAnyPolicy.__repr__uInhibitAnyPolicy.__eq__uInhibitAnyPolicy.__hash__uInhibitAnyPolicy.skip_certsuInhibitAnyPolicy.public_bytesaKEY_USAGED
adigital_signatureacontent_commitmentakey_enciphermentadata_enciphermentakey_agreementakey_cert_signacrl_signaencipher_onlyadecipher_onlyareturnaboolppppppppaNoneuKeyUsage.__init__uKeyUsage.digital_signatureuKeyUsage.content_commitmentuKeyUsage.key_enciphermentuKeyUsage.data_enciphermentuKeyUsage.key_agreementuKeyUsage.key_cert_signuKeyUsage.crl_signuKeyUsage.encipher_onlyuKeyUsage.decipher_onlyuKeyUsage.__repr__uKeyUsage.__eq__uKeyUsage.__hash__uKeyUsage.public_bytesaNAME_CONSTRAINTSDapermitted_subtreesaexcluded_subtreesareturnutyping.Iterable[GeneralName] | Noneutyping.Iterable[GeneralName] | NoneaNoneuNameConstraints.__init__uNameConstraints.__eq__Datreeareturnutyping.Iterable[GeneralName]aNoneuNameConstraints._validate_treeuNameConstraints._validate_ip_nameuNameConstraints._validate_dns_nameuNameConstraints.__repr__uNameConstraints.__hash__uNameConstraints.permitted_subtreesuNameConstraints.excluded_subtreesuNameConstraints.public_bytesaGenericDaoidacriticalavalueareturnaObjectIdentifieraboolaExtensionTypeVaraNoneuExtension.__init__uExtension.oiduExtension.criticalDareturnaExtensionTypeVaruExtension.valueuExtension.__repr__uExtension.__eq__uExtension.__hash__Dageneral_namesareturnutyping.Iterable[GeneralName]aNoneuGeneralNames.__init__Ta_general_namesaoverloadDatypeareturnutype[DNSName] | type[UniformResourceIdentifier] | type[RFC822Name]ulist[str]uGeneralNames.get_values_for_typeDatypeareturnutype[DirectoryName]ulist[Name]Datypeareturnutype[RegisteredID]ulist[ObjectIdentifier]Datypeareturnutype[IPAddress]ulist[_IPAddressTypes]Datypeareturnutype[OtherName]ulist[OtherName]Datypeareturnutype[DNSName] | type[DirectoryName] | type[IPAddress] | type[OtherName] | type[RFC822Name] | type[RegisteredID] | type[UniformResourceIdentifier]ulist[_IPAddressTypes] | list[str] | list[OtherName] | list[Name] | list[ObjectIdentifier]uGeneralNames.__repr__uGeneralNames.__eq__uGeneralNames.__hash__aSUBJECT_ALTERNATIVE_NAMEuSubjectAlternativeName.__init__uSubjectAlternativeName.get_values_for_typeuSubjectAlternativeName.__repr__uSubjectAlternativeName.__eq__uSubjectAlternativeName.__hash__uSubjectAlternativeName.public_bytesaISSUER_ALTERNATIVE_NAMEuIssuerAlternativeName.__init__uIssuerAlternativeName.get_values_for_typeuIssuerAlternativeName.__repr__uIssuerAlternativeName.__eq__uIssuerAlternativeName.__hash__uIssuerAlternativeName.public_bytesaCERTIFICATE_ISSUERuCertificateIssuer.__init__uCertificateIssuer.get_values_for_typeuCertificateIssuer.__repr__uCertificateIssuer.__eq__uCertificateIssuer.__hash__uCertificateIssuer.public_bytesaCRL_REASONDareasonareturnaReasonFlagsaNoneuCRLReason.__init__uCRLReason.__repr__uCRLReason.__eq__uCRLReason.__hash__DareturnaReasonFlagsuCRLReason.reasonuCRLReason.public_bytesaINVALIDITY_DATEDainvalidity_dateareturnudatetime.datetimeaNoneuInvalidityDate.__init__uInvalidityDate.__repr__uInvalidityDate.__eq__uInvalidityDate.__hash__Dareturnudatetime.datetimeuInvalidityDate.invalidity_dateainvalidity_date_utcuInvalidityDate.invalidity_date_utcuInvalidityDate.public_bytesaPRECERT_SIGNED_CERTIFICATE_TIMESTAMPSDasigned_certificate_timestampsareturnutyping.Iterable[SignedCertificateTimestamp]aNoneuPrecertificateSignedCertificateTimestamps.__init__Ta_signed_certificate_timestampsuPrecertificateSignedCertificateTimestamps.__repr__uPrecertificateSignedCertificateTimestamps.__hash__uPrecertificateSignedCertificateTimestamps.__eq__uPrecertificateSignedCertificateTimestamps.public_bytesaSIGNED_CERTIFICATE_TIMESTAMPSuSignedCertificateTimestamps.__init__uSignedCertificateTimestamps.__repr__uSignedCertificateTimestamps.__hash__uSignedCertificateTimestamps.__eq__uSignedCertificateTimestamps.public_bytesaNONCEDanonceareturnabytesaNoneuOCSPNonce.__init__uOCSPNonce.__eq__uOCSPNonce.__hash__uOCSPNonce.__repr__uOCSPNonce.nonceuOCSPNonce.public_bytesaACCEPTABLE_RESPONSESDaresponsesareturnutyping.Iterable[ObjectIdentifier]aNoneuOCSPAcceptableResponses.__init__uOCSPAcceptableResponses.__eq__uOCSPAcceptableResponses.__hash__uOCSPAcceptableResponses.__repr__Dareturnutyping.Iterator[ObjectIdentifier]uOCSPAcceptableResponses.__iter__uOCSPAcceptableResponses.public_bytesaISSUING_DISTRIBUTION_POINTDafull_namearelative_nameaonly_contains_user_certsaonly_contains_ca_certsaonly_some_reasonsaindirect_crlaonly_contains_attribute_certsareturnutyping.Iterable[GeneralName] | NoneuRelativeDistinguishedName | Noneaboolpufrozenset[ReasonFlags] | NoneaboolpaNoneuIssuingDistributionPoint.__init__uIssuingDistributionPoint.__repr__uIssuingDistributionPoint.__eq__uIssuingDistributionPoint.__hash__uIssuingDistributionPoint.full_nameuIssuingDistributionPoint.relative_nameuIssuingDistributionPoint.only_contains_user_certsuIssuingDistributionPoint.only_contains_ca_certsuIssuingDistributionPoint.only_some_reasonsuIssuingDistributionPoint.indirect_crluIssuingDistributionPoint.only_contains_attribute_certsuIssuingDistributionPoint.public_bytesaMS_CERTIFICATE_TEMPLATEDatemplate_idamajor_versionaminor_versionareturnaObjectIdentifieruint | Noneuint | NoneaNoneuMSCertificateTemplate.__init__uMSCertificateTemplate.template_iduMSCertificateTemplate.major_versionuMSCertificateTemplate.minor_versionuMSCertificateTemplate.__repr__uMSCertificateTemplate.__eq__uMSCertificateTemplate.__hash__uMSCertificateTemplate.public_bytesDaoidavalueareturnaObjectIdentifierabytesaNoneuUnrecognizedExtension.__init__uUnrecognizedExtension.oiduUnrecognizedExtension.valueuUnrecognizedExtension.__repr__uUnrecognizedExtension.__eq__uUnrecognizedExtension.__hash__uUnrecognizedExtension.public_bytesucryptography\x509\extensions.pyTa.0wxTa.0wiatypeTa.0anameTa.0wrTa.0asctu<module cryptography.x509.extensions>Ta__class__TaselfaotherTaselfTaselfaaciTaselfafnacrl_issuerTaselfapsaesTaselfapqTaselfaaccess_methodaaccess_locationTaselfadescriptionsTaselfakey_identifieraauthority_cert_issueraauthority_cert_serial_numberTaselfacaapath_lengthTaselfadistribution_pointsTaselfacrl_numberTaselfareasonTaselfageneral_namesTaselfapoliciesTaselfafull_namearelative_nameareasonsacrl_issuerTaselfamsgaoida__class__TaselfausagesTaselfaoidacriticalavalueTaselfaextensionsTaselfaskip_certsTaselfainvalidity_dateTaselfafull_namearelative_nameaonly_contains_user_certsaonly_contains_ca_certsaonly_some_reasonsaindirect_crlaonly_contains_attribute_certsacrl_constraintsT
aselfadigital_signatureacontent_commitmentakey_enciphermentadata_enciphermentakey_agreementakey_cert_signacrl_signaencipher_onlyadecipher_onlyTaselfatemplate_idamajor_versionaminor_versionTaselfapermitted_subtreesaexcluded_subtreesTaselfaorganizationanotice_numbersTaselfaresponsesTaselfanonceTaselfarequire_explicit_policyainhibit_policy_mappingTaselfapolicy_identifierapolicy_qualifiersTaselfasigned_certificate_timestampsTaselfadigestTaselfafeaturesTaselfaoidavalueTaselfanotice_referenceaexplicit_textTaselfaencipher_onlyadecipher_onlyTapublic_keyadataaserializedTafield_namealen_methodaiter_methodagetitem_methodTaselfatreeTaclsapublic_keyadigestTaclsaskiTaclsapublic_keyTaselfaextclassaextTaselfaoidaextTaselfatypeTaselfatypeaobjsTaselfaidxafield_nameTafield_nameTaselfafield_name.cryptography.x509.general_name
aencodeTaasciiuRFC822Name values should be passed as an A-label string. This means unicode characters should be encoded via a library like idna.uvalue must be stringaparseaddrutoo many values to unpack (expected 2)uInvalid rfc822name valuea_valuea__new__u<RFC822Name(value=avalueuu)>aRFC822NameuDNSName values should be passed as an A-label string. This means unicode characters should be encoded via a library like idna.u<DNSName(value=aDNSNameuURI values should be passed as an A-label string. This means unicode characters should be encoded via a library like idna.u<UniformResourceIdentifier(value=aUniformResourceIdentifieraNameuvalue must be a Nameu<DirectoryName(value=aDirectoryNameaObjectIdentifieruvalue must be an ObjectIdentifieru<RegisteredID(value=aRegisteredIDaipaddressaIPv4AddressaIPv6AddressaIPv4NetworkaIPv6Networkuvalue must be an instance of ipaddress.IPv4Address, ipaddress.IPv6Address, ipaddress.IPv4Network, or ipaddress.IPv6Networkapackedanetwork_addressanetmasku<IPAddress(value=aIPAddressutype_id must be an ObjectIdentifieruvalue must be a binary stringa_type_idu<OtherName(type_id=atype_idu, value=aOtherNamea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaabclatypinguemail.utilsTaparseaddrucryptography.x509.nameTaNameucryptography.x509.oidTaObjectIdentifieraUniona_IPAddressTypesTEExceptiona__prepare__aUnsupportedGeneralNameTypea__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.general_namea__module__a__qualname__a__orig_bases__ametaclassaABCMetaTaGeneralNameTaGeneralNameapropertyaabstractmethodDareturnutyping.Anyu
        Return the value of the object
        uGeneralName.valueDavalueareturnastraNonea__init__uRFC822Name.__init__DareturnastruRFC822Name.valueaclassmethodDavalueareturnastraRFC822Namea_init_without_validationuRFC822Name._init_without_validationa__repr__uRFC822Name.__repr__Daotherareturnaobjectaboola__eq__uRFC822Name.__eq__Dareturnainta__hash__uRFC822Name.__hash__uDNSName.__init__uDNSName.valueDavalueareturnastraDNSNameuDNSName._init_without_validationuDNSName.__repr__uDNSName.__eq__uDNSName.__hash__uUniformResourceIdentifier.__init__uUniformResourceIdentifier.valueDavalueareturnastraUniformResourceIdentifieruUniformResourceIdentifier._init_without_validationuUniformResourceIdentifier.__repr__uUniformResourceIdentifier.__eq__uUniformResourceIdentifier.__hash__DavalueareturnaNameaNoneuDirectoryName.__init__DareturnaNameuDirectoryName.valueuDirectoryName.__repr__uDirectoryName.__eq__uDirectoryName.__hash__DavalueareturnaObjectIdentifieraNoneuRegisteredID.__init__DareturnaObjectIdentifieruRegisteredID.valueuRegisteredID.__repr__uRegisteredID.__eq__uRegisteredID.__hash__Davalueareturna_IPAddressTypesaNoneuIPAddress.__init__Dareturna_IPAddressTypesuIPAddress.valueDareturnabytesa_packeduIPAddress._packeduIPAddress.__repr__uIPAddress.__eq__uIPAddress.__hash__Datype_idavalueareturnaObjectIdentifierabytesaNoneuOtherName.__init__uOtherName.type_iduOtherName.valueuOtherName.__repr__uOtherName.__eq__uOtherName.__hash__ucryptography\x509\general_name.pyu<module cryptography.x509.general_name>Ta__class__TaselfaotherTaselfTaselfavalueTaselfatype_idavalueTaselfavalueanameaaddressTaclsavalueainstance.cryptography.x509.namebHuw#abinasciiahexlifyadecodeTautf8areplaceTw\u\\Tw"u\"Tw+u\+Tw,u\,Tw;u\;Tw<u\<Tw>u\>Twu\00lTw#w w\qw :nqnu\ uEscape special characters in RFC4514 Distinguished Name value.asubu_unescape_dn_value.<locals>.suba_RFC4514NameParsera_PAIR_REagroupTllaObjectIdentifieruoid argument must be an ObjectIdentifier instance.a_ASN1TypeaBitStringaNameOIDaX500_UNIQUE_IDENTIFIERuoid must be X500_UNIQUE_IDENTIFIER for BitString type.uvalue must be bytes for BitStringuvalue argument must be a stra_NAMEOID_LENGTH_LIMITagetutoo many values to unpack (expected 2)aencodeuAttribute's length must be >= u and <= u, but it was awarningsawarnDastacklevella_NAMEOID_DEFAULT_TYPEaUTF8Stringu_type must be from the _ASN1Type enuma_oida_valuea_typea_NAMEOID_TO_NAMEaoidadotted_stringu
        The short attribute name (for example "CN") if available,
        otherwise the OID dotted string.
        arfc4514_attribute_namew=a_escape_dn_valueavalueu
        Format as RFC4514 Distinguished Name string.

        Use short attribute name if available, otherwise fall back to OID
        dotted string.
        aNameAttributeu<NameAttribute(oid=u, value=u)>ua relative distinguished name cannot be emptyuattributes must be an iterable of NameAttributea_attributesa_attribute_setuduplicate attributes are not allowedu<genexpr>uRelativeDistinguishedName.__init__.<locals>.<genexpr>w+u
        Format as RFC4514 Distinguished Name string.

        Within each RDN, attributes are joined by '+', although that is rarely
        used in certificates.
        arfc4514_stringaattr_name_overridesuRelativeDistinguishedName.rfc4514_string.<locals>.<genexpr>aRelativeDistinguishedNameu<RelativeDistinguishedName(acastaListuattributes must be a list of NameAttribute or a list RelativeDistinguishedNameuName.__init__.<locals>.<genexpr>aparsew,u
        Format as RFC4514 Distinguished Name string.
        For example 'CN=foobar.com,O=Foo Corp,C=US'

        An X.509 name is a two-level structure: a list of sets of attributes.
        Each list element is separated by ',' and within each list element, set
        elements are separated by '+'. The latter is almost never used in
        real world certificates. According to RFC4514 section 2.1 the
        RDNSequence must be reversed when converting to string representation.
        uName.rfc4514_string.<locals>.<genexpr>arust_x509aencode_name_bytesaNameaselfa__iter__uName.__iter__uName.__len__.<locals>.<genexpr>u<Name(uName.__repr__.<locals>.<genexpr>a_dataa_idxa_attr_name_overridesa_has_dataa_peeklamatchTaposa_parse_rdna_read_charTw,ardnsu
        Parses the `data` string and converts it to a Name.

        According to RFC4514 section 2.1 the RDNSequence must be
        reversed when converting to string representation. So, when
        we parse it, we need to reverse again to get the RDNs on the
        correct order.
        a_parse_naTw+anasa_read_rea_OID_REa_DESCR_REa_NAME_TO_NAMEOIDaoid_valueTw=a_HEXSTRING_REaunhexlify:lnna_STRING_REa_unescape_dn_valuea__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsareasysatypingacryptographyTautilsautilsucryptography.hazmat.bindings._rustTax509ax509ucryptography.x509.oidTaNameOIDaObjectIdentifieraEnuma__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ucryptography.x509.namea__module__a__qualname__llaOctetStringllaNumericStringlaPrintableStringlaT61StringlaIA5StringlaUTCTimelaGeneralizedTimelaVisibleStringlaUniversalStringlaBMPStringa__orig_bases__a_ASN1_TYPE_TO_ENUMaCOUNTRY_NAMEaJURISDICTION_COUNTRY_NAMEaSERIAL_NUMBERaDN_QUALIFIERaEMAIL_ADDRESSaDOMAIN_COMPONENTudict[ObjectIdentifier, _ASN1Type]aMappinga_OidNameMapa_NameOidMapaCOMMON_NAMEaCNaLOCALITY_NAMEwLaSTATE_OR_PROVINCE_NAMEaSTaORGANIZATION_NAMEwOaORGANIZATIONAL_UNIT_NAMEaOUwCaSTREET_ADDRESSaSTREETaDCaUSER_IDaUIDaitemsTlpTll@Davalareturnustr | bytesastrDavalareturnastrpTnDa_validatetDaoidavaluea_typea_validateareturnaObjectIdentifierustr | bytesu_ASN1Type | NoneaboolaNonea__init__uNameAttribute.__init__DareturnaObjectIdentifieruNameAttribute.oidDareturnustr | bytesuNameAttribute.valueDareturnastruNameAttribute.rfc4514_attribute_nameDaattr_name_overridesareturnu_OidNameMap | NoneastruNameAttribute.rfc4514_stringDaotherareturnaobjectaboola__eq__uNameAttribute.__eq__Dareturnainta__hash__uNameAttribute.__hash__a__repr__uNameAttribute.__repr__Daattributesutyping.Iterable[NameAttribute]uRelativeDistinguishedName.__init__DaoidareturnaObjectIdentifierulist[NameAttribute]aget_attributes_for_oiduRelativeDistinguishedName.get_attributes_for_oiduRelativeDistinguishedName.rfc4514_stringuRelativeDistinguishedName.__eq__uRelativeDistinguishedName.__hash__Dareturnutyping.Iterator[NameAttribute]uRelativeDistinguishedName.__iter__a__len__uRelativeDistinguishedName.__len__uRelativeDistinguishedName.__repr__aoverloadDaattributesareturnutyping.Iterable[NameAttribute]aNoneuName.__init__Daattributesareturnutyping.Iterable[RelativeDistinguishedName]aNoneDaattributesareturnutyping.Iterable[NameAttribute | RelativeDistinguishedName]aNoneDadataaattr_name_overridesareturnastru_NameOidMap | NoneaNameafrom_rfc4514_stringuName.from_rfc4514_stringuName.rfc4514_stringuName.get_attributes_for_oidDareturnulist[RelativeDistinguishedName]uName.rdnsDabackendareturnutyping.Anyabytesapublic_bytesuName.public_bytesuName.__eq__uName.__hash__uName.__len__uName.__repr__acompileTu(0|([1-9]\d*))(\.(0|([1-9]\d*)))+Tu[a-zA-Z][a-zA-Z\d-]*u\\([\\ #=\"\+,;<>]|[\da-zA-Z]{2})a_PAIRu[\x01-\x1f\x21\x24-\x2A\x2D-\x3A\x3D\x3F-\x5B\x5D-\x7F]a_LUTF1u[\x01-\x21\x23-\x2A\x2D-\x3A\x3D\x3F-\x5B\x5D-\x7F]a_SUTF1u[\x01-\x1F\x21\x23-\x2A\x2D-\x3A\x3D\x3F-\x5B\x5D-\x7F]a_TUTF1u[\x80-amaxunicodew]a_UTFMBw|a_LEADCHARa_STRINGCHARa_TRAILCHARu
        (
            (u)
            (
                (u)*
                (u)
            )?
        )?
        aVERBOSETu#([\da-zA-Z]{2})+Dadataaattr_name_overridesareturnastra_NameOidMapaNoneu_RFC4514NameParser.__init__Dareturnaboolu_RFC4514NameParser._has_dataDareturnustr | Noneu_RFC4514NameParser._peekDachareturnastraNoneu_RFC4514NameParser._read_charu_RFC4514NameParser._read_reDareturnaNameu_RFC4514NameParser.parseDareturnaRelativeDistinguishedNameu_RFC4514NameParser._parse_rdnDareturnaNameAttributeu_RFC4514NameParser._parse_naucryptography\x509\name.pyTa.0wxTa.0ardnTa.0aattrTa.0aattraattr_name_overridesu<module cryptography.x509.name>Ta__class__TaselfaotherTaselfTaselfaattributesT
aselfaoidavaluea_typea_validatealength_limitsamin_lengthamax_lengthac_lenamsgTaselfadataaattr_name_overridesTaselfardnTaselfardnsTavalTaselfaoid_valueanameaoidavaluearaw_valueTaselfanasTaselfachTaselfapatamatchavalTavalasubTaclsadataaattr_name_overridesTaselfaoidTaselfabackendTaselfaattr_name_overridesTaselfaattr_name_overridesaattr_nameTwmaval.cryptography.x509.oida__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucryptography.hazmat._oidTaAttributeOIDaAuthorityInformationAccessOIDaCertificatePoliciesOIDaCRLEntryExtensionOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaObjectIdentifieraOCSPExtensionOIDaPublicKeyAlgorithmOIDaSignatureAlgorithmOIDaSubjectInformationAccessOIDlaAttributeOIDaAuthorityInformationAccessOIDaCertificatePoliciesOIDaCRLEntryExtensionOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaObjectIdentifieraOCSPExtensionOIDaPublicKeyAlgorithmOIDaSignatureAlgorithmOIDaSubjectInformationAccessOIDLaAttributeOIDaAuthorityInformationAccessOIDaCRLEntryExtensionOIDaCertificatePoliciesOIDaExtendedKeyUsageOIDaExtensionOIDaNameOIDaOCSPExtensionOIDaObjectIdentifieraPublicKeyAlgorithmOIDaSignatureAlgorithmOIDaSubjectInformationAccessOIDa__all__ucryptography\x509\oid.pyu<module cryptography.x509.oid>u.cryptography.x509.verificationa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsatypingucryptography.hazmat.bindings._rustTax509lax509arust_x509ucryptography.x509.general_nameTaDNSNameaIPAddressaDNSNameaIPAddressLaClientVerifieraPolicyBuilderaServerVerifieraStoreaSubjectaVerificationErroraVerifiedClienta__all__aStoreaUnionaSubjectaVerifiedClientaClientVerifieraServerVerifieraPolicyBuilderaVerificationErrorucryptography\x509\verification.pyu<module cryptography.x509.verification>u.flask.appatimedeltaTasecondsa__class__a__init__T
aimport_nameastatic_url_pathastatic_folderastatic_hostahost_matchingasubdomain_matchingatemplate_folderainstance_pathainstance_relative_configaroot_pathacliaAppGroupanameahas_static_folderTuInvalid static_host/host_matching combinationaweakrefarefaadd_url_ruleastatic_url_pathuu/<path:filename>astaticu<lambda>uFlask.__init__.<locals>.<lambda>Taendpointahostaview_funcaself_refasend_static_fileacurrent_appaconfigaSEND_FILE_MAX_AGE_DEFAULTatotal_secondsuUsed by :func:`send_file` to determine the ``max_age`` cache
        value for a given file path if it wasn't passed.

        By default, this returns :data:`SEND_FILE_MAX_AGE_DEFAULT` from
        the configuration of :data:`~flask.current_app`. This defaults
        to ``None``, which tells the browser to use conditional requests
        instead of a timed cache, which is usually preferable.

        Note this is a duplicate of the same method in the Flask
        class.

        .. versionchanged:: 2.0
            The default configuration is ``None`` instead of 12 hours.

        .. versionadded:: 0.9
        u'static_folder' must be set to serve static_files.aget_send_file_max_ageasend_from_directoryacastastatic_folderTamax_ageuThe view function used to serve files from
        :attr:`static_folder`. A route is automatically registered for
        this view at :attr:`static_url_path` if :attr:`static_folder` is
        set.

        Note this is a duplicate of the same method in the Flask
        class.

        .. versionadded:: 0.5

        ParbartwruResources can only be opened for reading.ajoinaroot_pathuOpen a resource file relative to :attr:`root_path` for
        reading.

        For example, if the file ``schema.sql`` is next to the file
        ``app.py`` where the ``Flask`` app is defined, it can be opened
        with:

        .. code-block:: python

            with app.open_resource("schema.sql") as f:
                conn.executescript(f.read())

        :param resource: Path to the resource relative to
            :attr:`root_path`.
        :param mode: Open the file in this mode. Only reading is
            supported, valid values are "r" (or "rt") and "rb".

        Note this is a duplicate of the same method in the Flask
        class.

        ainstance_pathuOpens a resource from the application's instance folder
        (:attr:`instance_path`).  Otherwise works like
        :meth:`open_resource`.  Instance resources can also be opened for
        writing.

        :param resource: the name of the resource.  To access resources within
                         subfolders use forward slashes as separator.
        :param mode: resource file opening mode, default is 'rb'.
        ajinja_optionsaautoescapeaselect_jinja_autoescapeaauto_reloadaTEMPLATES_AUTO_RELOADadebugajinja_environmentaglobalsaupdateaurl_foraget_flashed_messagesarequestasessionwgTaurl_foraget_flashed_messagesaconfigarequestasessionwgajsonadumpsapoliciesujson.dumps_functionuCreate the Jinja environment based on :attr:`jinja_options`
        and the various Jinja-related methods of the app. Changing
        :attr:`jinja_options` after this will have no effect. Also adds
        Flask-related globals and filters to the environment.

        .. versionchanged:: 0.11
           ``Environment.auto_reload`` set in accordance with
           ``TEMPLATES_AUTO_RELOAD`` configuration option.

        .. versionadded:: 0.5
        asubdomain_matchingaurl_mapadefault_subdomainabind_to_environaenvironaSERVER_NAMETaserver_nameasubdomainabindaAPPLICATION_ROOTaPREFERRED_URL_SCHEMETascript_nameaurl_schemeuCreates a URL adapter for the given request. The URL adapter
        is created at a point where the request context is not yet set
        up so the request is passed explicitly.

        .. versionadded:: 0.6

        .. versionchanged:: 0.9
           This can now also be called without a request object when the
           URL adapter is created for the application context.

        .. versionchanged:: 1.0
            :data:`SERVER_NAME` no longer implicitly enables subdomain
            matching. Use :attr:`subdomain_matching` instead.
        arouting_exceptionaRequestRedirectacodePllamethodPaGETaHEADaOPTIONSadebughelpersTaFormDataRoutingRedirectlaFormDataRoutingRedirectluIntercept routing exceptions and possibly do something else.

        In debug mode, intercept a routing redirect and replace it with
        an error if the body will be discarded.

        With modern Werkzeug this shouldn't occur, since it now uses a
        308 status which tells the browser to resend the method and
        body.

        .. versionchanged:: 2.1
            Don't intercept 307 and 308 redirects.

        :meta private:
        :internal:
        Tnachainablueprintsacopyaselfatemplate_context_processorsacontextaensure_syncuUpdate the template context with some commonly used variables.
        This injects request, session, config and g into the template
        context as well as everything template context processors want
        to inject.  Note that the as of Flask 0.6, the original values
        in the context will not be overridden if a context processor
        decides to return a value with the same key.

        :param context: the context as a dictionary that is updated in place
                        to add extra variables.
        aappashell_context_processorsarvuReturns the shell context for an interactive shell for this
        application.  This runs all the registered shell context
        processors.

        .. versionadded:: 0.11
        agetTaFLASK_RUN_FROM_CLIatrueais_running_from_reloaderaclickasechoTu * Ignoring a call to 'app.run()' that would block the current 'flask' CLI command.
   Only call 'app.run()' in an 'if __name__ == "__main__"' guard.aredTafgaget_load_dotenvaload_dotenvaFLASK_DEBUGaget_debug_flagTaSERVER_NAMEapartitionTw:utoo many values to unpack (expected 3)u127.0.0.1l'ause_reloaderasetdefaultause_debuggerTathreadedtashow_server_banneruwerkzeug.servingTarun_simplearun_simplea_got_first_requestuRuns the application on a local development server.

        Do not use ``run()`` in a production setting. It is not intended to
        meet security and performance requirements for a production server.
        Instead, see :doc:`/deploying/index` for WSGI server recommendations.

        If the :attr:`debug` flag is set the server will automatically reload
        for code changes and show a debugger in case an exception happened.

        If you want to run the application in debug mode, but disable the
        code execution on the interactive debugger, you can pass
        ``use_evalex=False`` as parameter.  This will keep the debugger's
        traceback screen active, but disable code execution.

        It is not recommended to use this function for development with
        automatic reloading as this is badly supported.  Instead you should
        be using the :command:`flask` command line script's ``run`` support.

        .. admonition:: Keep in Mind

           Flask will suppress any server error with a generic error page
           unless it is in debug mode.  As such to enable just the
           interactive debugger without the code reloading, you have to
           invoke :meth:`run` with ``debug=True`` and ``use_reloader=False``.
           Setting ``use_debugger`` to ``True`` without being in debug mode
           won't catch any exceptions because there won't be any to
           catch.

        :param host: the hostname to listen on. Set this to ``'0.0.0.0'`` to
            have the server available externally as well. Defaults to
            ``'127.0.0.1'`` or the host in the ``SERVER_NAME`` config variable
            if present.
        :param port: the port of the webserver. Defaults to ``5000`` or the
            port defined in the ``SERVER_NAME`` config variable if present.
        :param debug: if given, enable or disable debug mode. See
            :attr:`debug`.
        :param load_dotenv: Load the nearest :file:`.env` and :file:`.flaskenv`
            files to set environment variables. Will also change the working
            directory to the directory containing the first file found.
        :param options: the options to be forwarded to the underlying Werkzeug
            server. See :func:`werkzeug.serving.run_simple` for more
            information.

        .. versionchanged:: 1.0
            If installed, python-dotenv will be used to load environment
            variables from :file:`.env` and :file:`.flaskenv` files.

            The :envvar:`FLASK_DEBUG` environment variable will override :attr:`debug`.

            Threaded mode is enabled by default.

        .. versionchanged:: 0.10
            The default port is now picked from the ``SERVER_NAME``
            variable.
        atest_client_classatestingTaFlaskClientaFlaskClientaresponse_classause_cookiesuCreates a test client for this application.  For information
        about unit testing head over to :doc:`/testing`.

        Note that if you are testing for assertions or exceptions in your
        application code, you must set ``app.testing = True`` in order for the
        exceptions to propagate to the test client.  Otherwise, the exception
        will be handled by the application (not visible to the test client) and
        the only indication of an AssertionError or other exception will be a
        500 status code response to the test client.  See the :attr:`testing`
        attribute.  For example::

            app.testing = True
            client = app.test_client()

        The test client can be used in a ``with`` block to defer the closing down
        of the context until the end of the ``with`` block.  This is useful if
        you want to access the context locals for testing::

            with app.test_client() as c:
                rv = c.get('/?vodka=42')
                assert request.args['vodka'] == '42'

        Additionally, you may pass optional keyword arguments that will then
        be passed to the application's :attr:`test_client_class` constructor.
        For example::

            from flask.testing import FlaskClient

            class CustomClient(FlaskClient):
                def __init__(self, *args, **kwargs):
                    self._authentication = kwargs.pop("authentication")
                    super(CustomClient,self).__init__( *args, **kwargs)

            app.test_client_class = CustomClient
            client = app.test_client(authentication='Basic ....')

        See :class:`~flask.testing.FlaskClient` for more information.

        .. versionchanged:: 0.4
           added support for ``with`` block usage for the client.

        .. versionadded:: 0.7
           The `use_cookies` parameter was added as well as the ability
           to override the client to be used by setting the
           :attr:`test_client_class` attribute.

        .. versionchanged:: 0.11
           Added `**kwargs` to support passing additional keyword arguments to
           the constructor of :attr:`test_client_class`.
        atest_cli_runner_classTaFlaskCliRunneraFlaskCliRunneruCreate a CLI runner for testing CLI commands.
        See :ref:`testing-cli`.

        Returns an instance of :attr:`test_cli_runner_class`, by default
        :class:`~flask.testing.FlaskCliRunner`. The Flask app object is
        passed as the first argument.

        .. versionadded:: 1.0
        aRoutingExceptiona_find_error_handleruHandles an HTTP exception.  By default this will invoke the
        registered error handlers and fall back to returning the
        exception as response.

        .. versionchanged:: 1.0.3
            ``RoutingException``, used internally for actions such as
             slash redirects during routing, is not passed to error
             handlers.

        .. versionchanged:: 1.0
            Exceptions are looked up by code *and* by MRO, so
            ``HTTPException`` subclasses can be handled with a catch-all
            handler for the base ``HTTPException``.

        .. versionadded:: 0.3
        aBadRequestKeyErroraTRAP_BAD_REQUEST_ERRORSashow_exceptionaHTTPExceptionatrap_http_exceptionahandle_http_exceptionuThis method is called whenever an exception occurs that
        should be handled. A special case is :class:`~werkzeug
        .exceptions.HTTPException` which is forwarded to the
        :meth:`handle_http_exception` method. This function will either
        return a response value or reraise the exception with the same
        traceback.

        .. versionchanged:: 1.0
            Key errors raised from request data like ``form`` show the
            bad key in debug mode rather than a generic bad request
            message.

        .. versionadded:: 0.7
        aexc_infoagot_request_exceptionasendTa_async_wrapperaexceptionaPROPAGATE_EXCEPTIONSalog_exceptionaInternalServerErrorTaoriginal_exceptionafinalize_requestaserver_errorDafrom_error_handlertuHandle an exception that did not have an error handler
        associated with it, or that was raised from an error handler.
        This always causes a 500 ``InternalServerError``.

        Always sends the :data:`got_request_exception` signal.

        If :data:`PROPAGATE_EXCEPTIONS` is ``True``, such as in debug
        mode, the error will be re-raised so that the debugger can
        display it. Otherwise, the original exception is logged, and
        an :exc:`~werkzeug.exceptions.InternalServerError` is returned.

        If an error handler is registered for ``InternalServerError`` or
        ``500``, it will be used. For consistency, the handler will
        always receive the ``InternalServerError``. The original
        unhandled exception is available as ``e.original_exception``.

        .. versionchanged:: 1.1.0
            Always passes the ``InternalServerError`` instance to the
            handler, setting ``original_exception`` to the unhandled
            error.

        .. versionchanged:: 1.1.0
            ``after_request`` functions and other finalization is done
            even for the default 500 response when there is no handler.

        .. versionadded:: 0.3
        aloggeraerroruException on apathu [w]Taexc_infouLogs an exception.  This is called by :meth:`handle_exception`
        if debugging is disabled and right before the handler is called.
        The default implementation logs the exception as error on the
        :attr:`logger`.

        .. versionadded:: 0.8
        arequest_ctxaraise_routing_exceptionaurl_ruleaprovide_automatic_optionsaOPTIONSamake_default_options_responseaview_argsaview_functionsaendpointuDoes the request dispatching.  Matches the URL and returns the
        return value of the view or error handler.  This does not have to
        be a response object.  In order to convert the return value to a
        proper response object, call :func:`make_response`.

        .. versionchanged:: 0.7
           This no longer does the exception handling, this code was
           moved to the new :meth:`full_dispatch_request`.
        arequest_startedTa_async_wrapperapreprocess_requestadispatch_requestahandle_user_exceptionuDispatches the request and on top of that performs request
        pre and postprocessing as well as HTTP exception catching and
        error handling.

        .. versionadded:: 0.7
        amake_responseaprocess_responsearequest_finishedTa_async_wrapperaresponseaexceptionTuRequest finalizing failed with an error while handling an erroraresponseuGiven the return value from a view function this finalizes
        the request by converting it into a response and invoking the
        postprocessing functions.  This is invoked for both normal
        request dispatching as well as error handlers.

        Because this means that it might be called as a result of a
        failure a special safe mode is available which can be enabled
        with the `from_error_handler` flag.  If enabled, failures in
        response processing will be logged and otherwise ignored.

        :internal:
        aurl_adapteraallowed_methodsaallowuThis method is called to create the default ``OPTIONS`` response.
        This can be changed through subclassing to change the default
        behavior of ``OPTIONS`` responses.

        .. versionadded:: 0.7
        aiscoroutinefunctionaasync_to_syncuEnsure that the function is synchronous for WSGI workers.
        Plain ``def`` functions are returned as-is. ``async def``
        functions are wrapped to run and wait for the response.

        Override this method to change how the app runs async views.

        .. versionadded:: 2.0
        uasgiref.syncTaasync_to_syncuInstall Flask with the 'async' extra in order to use async views.uReturn a sync function that will run the coroutine function.

        .. code-block:: python

            result = app.async_to_sync(func)(*args, **kwargs)

        Override this method to change how the app converts async code
        to be synchronously callable.

        .. versionadded:: 2.0
        a_cv_requestablueprint:nlnw.:lnna_cv_appacreate_url_adapteruUnable to build URLs outside an active request without 'SERVER_NAME' configured. Also configure 'APPLICATION_ROOT' and 'PREFERRED_URL_SCHEME' as needed.uWhen specifying '_scheme', '_external' must be True.ainject_url_defaultsabuildTamethodaurl_schemeaforce_externalaBuildErrorTa_anchora_methoda_schemea_externalahandle_url_build_errora_url_quoteDasafeu%!#$&'()*+,/:;=?@w#uGenerate a URL to the given endpoint with the given values.

        This is called by :func:`flask.url_for`, and can be called
        directly as well.

        An *endpoint* is the name of a URL rule, usually added with
        :meth:`@app.route() <route>`, and usually the same name as the
        view function. A route defined in a :class:`~flask.Blueprint`
        will prepend the blueprint's name separated by a ``.`` to the
        endpoint.

        In some cases, such as email messages, you want URLs to include
        the scheme and domain, like ``https://example.com/hello``. When
        not in an active request, URLs will be external by default, but
        this requires setting :data:`SERVER_NAME` so Flask knows what
        domain to use. :data:`APPLICATION_ROOT` and
        :data:`PREFERRED_URL_SCHEME` should also be configured as
        needed. This config is only used when not in an active request.

        Functions can be decorated with :meth:`url_defaults` to modify
        keyword arguments before the URL is built.

        If building fails for some reason, such as an unknown endpoint
        or incorrect values, the app's :meth:`handle_url_build_error`
        method is called. If that returns a string, that is returned,
        otherwise a :exc:`~werkzeug.routing.BuildError` is raised.

        :param endpoint: The endpoint name associated with the URL to
            generate. If this starts with a ``.``, the current blueprint
            name (if any) will be used.
        :param _anchor: If given, append this as ``#anchor`` to the URL.
        :param _method: If given, generate the URL associated with this
            method for the endpoint.
        :param _scheme: If given, the URL will have this scheme if it
            is external.
        :param _external: If given, prefer the URL to be internal
            (False) or require it to be external (True). External URLs
            include the scheme and domain. When not in an active
            request, URLs are external by default.
        :param values: Values to use for the variable parts of the URL
            rule. Unknown keys are appended as query string arguments,
            like ``?a=b&c=d``.

        .. versionadded:: 2.2
            Moved from ``flask.url_for``, which calls this method.
        aHeadersutoo many values to unpack (expected 2)uThe view function did not return a valid response tuple. The tuple must have the form (body, status, headers), (body, status), or (body, headers).uThe view function for u did not return a valid response. The function either returned None or ended without a return statement.TOstrObytesObytearrayacabcaIteratorTastatusaheadersTOdictOlistaBaseResponseacallableaforce_typeu
The view function did not return a valid response. The return type must be a string, dict, list, tuple with headers or status, Response instance, or WSGI callable, but it was a a__name__awith_tracebackluThe view function did not return a valid response. The return type must be a string, dict, list, tuple with headers or status, Response instance, or WSGI callable, but it was a aResponseastatusastatus_codeaheadersuConvert the return value from a view function to an instance of
        :attr:`response_class`.

        :param rv: the return value from the view function. The view function
            must return a response. Returning ``None``, or the view ending
            without returning, is not allowed. The following types are allowed
            for ``view_rv``:

            ``str``
                A response object is created with the string encoded to UTF-8
                as the body.

            ``bytes``
                A response object is created with the bytes as the body.

            ``dict``
                A dictionary that will be jsonify'd before being returned.

            ``list``
                A list that will be jsonify'd before being returned.

            ``generator`` or ``iterator``
                A generator that returns ``str`` or ``bytes`` to be
                streamed as the response.

            ``tuple``
                Either ``(body, status, headers)``, ``(body, status)``, or
                ``(body, headers)``, where ``body`` is any of the other types
                allowed here, ``status`` is a string or an integer, and
                ``headers`` is a dictionary or a list of ``(key, value)``
                tuples. If ``body`` is a :attr:`response_class` instance,
                ``status`` overwrites the exiting value and ``headers`` are
                extended.

            :attr:`response_class`
                The object is returned unchanged.

            other :class:`~werkzeug.wrappers.Response` class
                The object is coerced to :attr:`response_class`.

            :func:`callable`
                The function is called as a WSGI application. The result is
                used to create a response object.

        .. versionchanged:: 2.2
            A generator will be converted to a streaming response.
            A list will be converted to a JSON response.

        .. versionchanged:: 1.1
            A dict will be converted to a JSON response.

        .. versionchanged:: 0.9
           Previously a tuple was interpreted as the arguments for the
           response object.
        aurl_value_preprocessorsabefore_request_funcsuCalled before the request is dispatched. Calls
        :attr:`url_value_preprocessors` registered with the app and the
        current blueprint (if any). Then calls :attr:`before_request_funcs`
        registered with the app and the blueprint.

        If any :meth:`before_request` handler returns a non-None value, the
        value is handled as if it was the return value from the view, and
        further request handling is stopped.
        a_get_current_objecta_after_request_functionsaafter_request_funcsasession_interfaceais_null_sessionasave_sessionuCan be overridden in order to modify the response object
        before it's sent to the WSGI server.  By default this will
        call all the :meth:`after_request` decorated functions.

        .. versionchanged:: 0.5
           As of Flask 0.5 the functions registered for after request
           execution are called in reverse order of registration.

        :param response: a :attr:`response_class` object.
        :return: a new response object or the same, has to be an
                 instance of :attr:`response_class`.
        a_sentinelateardown_request_funcsaexcarequest_tearing_downTa_async_wrapperaexcuCalled after the request is dispatched and the response is
        returned, right before the request context is popped.

        This calls all functions decorated with
        :meth:`teardown_request`, and :meth:`Blueprint.teardown_request`
        if a blueprint handled the request. Finally, the
        :data:`request_tearing_down` signal is sent.

        This is called by
        :meth:`RequestContext.pop() <flask.ctx.RequestContext.pop>`,
        which may be delayed during testing to maintain access to
        resources.

        :param exc: An unhandled exception raised while dispatching the
            request. Detected from the current exception information if
            not passed. Passed to each teardown function.

        .. versionchanged:: 0.9
            Added the ``exc`` argument.
        ateardown_appcontext_funcsaappcontext_tearing_downuCalled right before the application context is popped.

        When handling a request, the application context is popped
        after the request context. See :meth:`do_teardown_request`.

        This calls all functions decorated with
        :meth:`teardown_appcontext`. Then the
        :data:`appcontext_tearing_down` signal is sent.

        This is called by
        :meth:`AppContext.pop() <flask.ctx.AppContext.pop>`.

        .. versionadded:: 0.9
        aAppContextuCreate an :class:`~flask.ctx.AppContext`. Use as a ``with``
        block to push the context, which will make :data:`current_app`
        point at this application.

        An application context is automatically pushed by
        :meth:`RequestContext.push() <flask.ctx.RequestContext.push>`
        when handling a request, and when running a CLI command. Use
        this to manually create a context outside of these situations.

        ::

            with app.app_context():
                init_db()

        See :doc:`/appcontext`.

        .. versionadded:: 0.9
        aRequestContextuCreate a :class:`~flask.ctx.RequestContext` representing a
        WSGI environment. Use a ``with`` block to push the context,
        which will make :data:`request` point at this request.

        See :doc:`/reqcontext`.

        Typically you should not call this from your own code. A request
        context is automatically pushed by the :meth:`wsgi_app` when
        handling a request. Use :meth:`test_request_context` to create
        an environment and context instead of this method.

        :param environ: a WSGI environment
        TaEnvironBuilderaEnvironBuilderarequest_contextaget_environacloseuCreate a :class:`~flask.ctx.RequestContext` for a WSGI
        environment created from the given values. This is mostly useful
        during testing, where you may want to run a function that uses
        request data without dispatching a full request.

        See :doc:`/reqcontext`.

        Use a ``with`` block to push the context, which will make
        :data:`request` point at the request for the created
        environment. ::

            with app.test_request_context(...):
                generate_report()

        When using the shell, it may be easier to push and pop the
        context manually to avoid indentation. ::

            ctx = app.test_request_context(...)
            ctx.push()
            ...
            ctx.pop()

        Takes the same arguments as Werkzeug's
        :class:`~werkzeug.test.EnvironBuilder`, with some defaults from
        the application. See the linked Werkzeug docs for most of the
        available arguments. Flask-specific behavior is listed here.

        :param path: URL path being requested.
        :param base_url: Base URL where the app is being served, which
            ``path`` is relative to. If not given, built from
            :data:`PREFERRED_URL_SCHEME`, ``subdomain``,
            :data:`SERVER_NAME`, and :data:`APPLICATION_ROOT`.
        :param subdomain: Subdomain name to append to
            :data:`SERVER_NAME`.
        :param url_scheme: Scheme to use instead of
            :data:`PREFERRED_URL_SCHEME`.
        :param data: The request body, either as a string or a dict of
            form keys and values.
        :param json: If given, this is serialized as JSON and passed as
            ``data``. Also defaults ``content_type`` to
            ``application/json``.
        :param args: other positional arguments passed to
            :class:`~werkzeug.test.EnvironBuilder`.
        :param kwargs: other keyword arguments passed to
            :class:`~werkzeug.test.EnvironBuilder`.
        apushafull_dispatch_requestahandle_exceptionuwerkzeug.debug.preserve_contextashould_ignore_errorapopuThe actual WSGI application. This is not implemented in
        :meth:`__call__` so that middlewares can be applied without
        losing a reference to the app object. Instead of doing this::

            app = MyMiddleware(app)

        It's a better idea to do this instead::

            app.wsgi_app = MyMiddleware(app.wsgi_app)

        Then you still have the original application object around and
        can continue to call methods on it.

        .. versionchanged:: 0.7
            Teardown events for the request and app contexts are called
            even if an unhandled error occurs. Other events may not be
            called depending on when an error occurs during dispatch.
            See :ref:`callbacks-and-errors`.

        :param environ: A WSGI environment.
        :param start_response: A callable accepting a status code,
            a list of headers, and an optional exception context to
            start the response.
        awsgi_appuThe WSGI server calls the Flask application object as the
        WSGI application. This calls :meth:`wsgi_app`, which can be
        wrapped to apply middleware.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucollections.abcaabcaosasyswtadatetimeTatimedeltaainspectTaiscoroutinefunctionaitertoolsTachainaTracebackTypeuurllib.parseTaquoteaquoteuwerkzeug.datastructuresTaHeadersTaImmutableDictaImmutableDictuwerkzeug.exceptionsTaBadRequestKeyErrorTaHTTPExceptionTaInternalServerErroruwerkzeug.routingTaBuildErrorTaMapAdapteraMapAdapterTaRequestRedirectTaRoutingExceptionTaRuleaRuleTais_running_from_reloaderuwerkzeug.wrappersTaResponseTacliTatypingatypingaftactxTaAppContextTaRequestContextTa_cv_appTa_cv_requestTacurrent_appTwgTarequestTarequest_ctxTasessionahelpersTaget_debug_flagTaget_flashed_messagesTaget_load_dotenvTasend_from_directoryusansio.appTaAppaAppusansio.scaffoldTa_sentinelasessionsTaSecureCookieSessionInterfaceaSecureCookieSessionInterfaceTaSessionInterfaceaSessionInterfaceasignalsTaappcontext_tearing_downTagot_request_exceptionTarequest_finishedTarequest_startedTarequest_tearing_downatemplatingTaEnvironmentaEnvironmentawrappersTaRequestaRequestaTypeVaraShellContextProcessorCallableTaT_shell_context_processorTaboundaT_shell_context_processoraTeardownCallableTaT_teardownaT_teardownaTemplateFilterCallableTaT_template_filteraT_template_filteraTemplateGlobalCallableTaT_template_globalaT_template_globalaTemplateTestCallableTaT_template_testaT_template_testDavalueareturnutimedelta | int | Noneutimedelta | Nonea_make_timedeltaa__prepare__aFlaska__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uflask.appa__module__uThe flask object implements a WSGI application and acts as the central
    object.  It is passed the name of the module or package of the
    application.  Once it is created it will act as a central registry for
    the view functions, the URL rules, template configuration and much more.

    The name of the package is used to resolve resources from inside the
    package or the folder the module is contained in depending on if the
    package parameter resolves to an actual python package (a folder with
    an :file:`__init__.py` file inside) or a standard module (just a ``.py`` file).

    For more information about resource loading, see :func:`open_resource`.

    Usually you create a :class:`Flask` instance in your main module or
    in the :file:`__init__.py` file of your package like this::

        from flask import Flask
        app = Flask(__name__)

    .. admonition:: About the First Parameter

        The idea of the first parameter is to give Flask an idea of what
        belongs to your application.  This name is used to find resources
        on the filesystem, can be used by extensions to improve debugging
        information and a lot more.

        So it's important what you provide there.  If you are using a single
        module, `__name__` is always the correct value.  If you however are
        using a package, it's usually recommended to hardcode the name of
        your package there.

        For example if your application is defined in :file:`yourapplication/app.py`
        you should create it with one of the two versions below::

            app = Flask('yourapplication')
            app = Flask(__name__.split('.')[0])

        Why is that?  The application will work even with `__name__`, thanks
        to how resources are looked up.  However it will make debugging more
        painful.  Certain extensions can make assumptions based on the
        import name of your application.  For example the Flask-SQLAlchemy
        extension will look for the code in your application that triggered
        an SQL query in debug mode.  If the import name is not properly set
        up, that debugging information is lost.  (For example it would only
        pick up SQL queries in `yourapplication.app` and not
        `yourapplication.views.frontend`)

    .. versionadded:: 0.7
       The `static_url_path`, `static_folder`, and `template_folder`
       parameters were added.

    .. versionadded:: 0.8
       The `instance_path` and `instance_relative_config` parameters were
       added.

    .. versionadded:: 0.11
       The `root_path` parameter was added.

    .. versionadded:: 1.0
       The ``host_matching`` and ``static_host`` parameters were added.

    .. versionadded:: 1.0
       The ``subdomain_matching`` parameter was added. Subdomain
       matching needs to be enabled manually now. Setting
       :data:`SERVER_NAME` does not implicitly enable it.

    :param import_name: the name of the application package
    :param static_url_path: can be used to specify a different path for the
                            static files on the web.  Defaults to the name
                            of the `static_folder` folder.
    :param static_folder: The folder with static files that is served at
        ``static_url_path``. Relative to the application ``root_path``
        or an absolute path. Defaults to ``'static'``.
    :param static_host: the host to use when adding the static route.
        Defaults to None. Required when using ``host_matching=True``
        with a ``static_folder`` configured.
    :param host_matching: set ``url_map.host_matching`` attribute.
        Defaults to False.
    :param subdomain_matching: consider the subdomain relative to
        :data:`SERVER_NAME` when matching routes. Defaults to False.
    :param template_folder: the folder that contains the templates that should
                            be used by the application.  Defaults to
                            ``'templates'`` folder in the root path of the
                            application.
    :param instance_path: An alternative instance path for the application.
                          By default the folder ``'instance'`` next to the
                          package or module is assumed to be the instance
                          path.
    :param instance_relative_config: if set to ``True`` relative filenames
                                     for loading the config are assumed to
                                     be relative to the instance path instead
                                     of the application root.
    :param root_path: The path to the root of the application files.
        This should only be set manually when it can't be detected
        automatically, such as for namespace packages.
    a__qualname__a__annotations__aDEBUGaTESTINGaSECRET_KEYaPERMANENT_SESSION_LIFETIMETlTadaysaUSE_X_SENDFILEw/aSESSION_COOKIE_NAMEaSESSION_COOKIE_DOMAINaSESSION_COOKIE_PATHaSESSION_COOKIE_HTTPONLYaSESSION_COOKIE_SECUREaSESSION_COOKIE_SAMESITEaSESSION_REFRESH_EACH_REQUESTaMAX_CONTENT_LENGTHaTRAP_HTTP_EXCEPTIONSaEXPLAIN_TEMPLATE_LOADINGahttpaMAX_COOKIE_SIZEladefault_configarequest_classutype[Request]utype[Response]TnastaticnFpatemplatesnFnD
aimport_nameastatic_url_pathastatic_folderastatic_hostahost_matchingasubdomain_matchingatemplate_folderainstance_pathainstance_relative_configaroot_pathastrustr | Noneustr | os.PathLike[str] | Noneustr | Noneaboolpustr | os.PathLike[str] | Noneustr | Noneaboolustr | NoneuFlask.__init__Dafilenameareturnustr | Noneuint | NoneuFlask.get_send_file_max_ageDafilenameareturnastraResponseuFlask.send_static_fileTarbDaresourceamodeareturnastrput.IO[t.AnyStr]aopen_resourceuFlask.open_resourceaopen_instance_resourceuFlask.open_instance_resourceDareturnaEnvironmentacreate_jinja_environmentuFlask.create_jinja_environmentDarequestareturnuRequest | NoneuMapAdapter | NoneuFlask.create_url_adapterDarequestareturnaRequestut.NoReturnuFlask.raise_routing_exceptionDacontextareturnudict[str, t.Any]aNoneaupdate_template_contextuFlask.update_template_contextDareturnudict[str, t.Any]amake_shell_contextuFlask.make_shell_contextTnnntDahostaportadebugaload_dotenvaoptionsareturnustr | Noneuint | Noneubool | Noneaboolut.AnyaNonearunuFlask.runTtDause_cookiesakwargsareturnaboolut.AnyaFlaskClientatest_clientuFlask.test_clientDakwargsareturnut.AnyaFlaskCliRunneratest_cli_runneruFlask.test_cli_runnerDweareturnaHTTPExceptionuHTTPException | ft.ResponseReturnValueuFlask.handle_http_exceptionDweareturnaExceptionuHTTPException | ft.ResponseReturnValueuFlask.handle_user_exceptionDweareturnaExceptionaResponseuFlask.handle_exceptionDaexc_infoareturnutuple[type, BaseException, TracebackType] | tuple[None, None, None]aNoneuFlask.log_exceptionDareturnuft.ResponseReturnValueuFlask.dispatch_requestDareturnaResponseuFlask.full_dispatch_requestTFDarvafrom_error_handlerareturnuft.ResponseReturnValue | HTTPExceptionaboolaResponseuFlask.finalize_requestuFlask.make_default_options_responseDafuncareturnut.Callable[..., t.Any]ut.Callable[..., t.Any]uFlask.ensure_syncDafuncareturnut.Callable[..., t.Coroutine[t.Any, t.Any, t.Any]]ut.Callable[..., t.Any]uFlask.async_to_syncDa_anchora_methoda_schemea_externalnnnnDaendpointa_anchora_methoda_schemea_externalavaluesareturnastrustr | Noneustr | Noneustr | Noneubool | Noneut.AnyastruFlask.url_forDarvareturnuft.ResponseReturnValueaResponseuFlask.make_responseDareturnuft.ResponseReturnValue | NoneuFlask.preprocess_requestDaresponseareturnaResponsepuFlask.process_responseDaexcareturnuBaseException | NoneaNoneado_teardown_requestuFlask.do_teardown_requestado_teardown_appcontextuFlask.do_teardown_appcontextDareturnaAppContextaapp_contextuFlask.app_contextDaenvironareturnaWSGIEnvironmentaRequestContextuFlask.request_contextDaargsakwargsareturnut.Anyut.AnyaRequestContextatest_request_contextuFlask.test_request_contextDaenvironastart_responseareturnaWSGIEnvironmentaStartResponseucabc.Iterable[bytes]uFlask.wsgi_appa__call__uFlask.__call__a__orig_bases__uflask\app.pyTakwaself_refTaself_refu<module flask.app>Ta__class__Taselfaenvironastart_responseT
aselfaimport_nameastatic_url_pathastatic_folderastatic_hostahost_matchingasubdomain_matchingatemplate_folderainstance_pathainstance_relative_configaroot_pathaself_refa__class__TavalueTaselfTaselfafuncaasgiref_async_to_syncTaselfaoptionsaauto_reloadarvTaselfarequestasubdomainTaselfaruleaview_argsareqTaselfaexcafuncTaselfaexcanameafuncTaselfafuncTaselfarvafrom_error_handleraresponseTaselfarvweTaselfafilenameavalueTaselfweaserver_erroraexc_infoapropagateahandlerTaselfweahandlerTaselfaexc_infoTaselfaadapteramethodsarvTaselfarvastatusaheadersalen_rvweTaselfarvaprocessorTaselfaresourceamodeTaselfanamesanameaurl_funcabefore_funcarvTaselfaresponseactxafuncanameTaselfarequestaFormDataRoutingRedirectTaselfaenvironTaselfahostaportadebugaload_dotenvaoptionsaserver_nameasn_hostasn_portw_arun_simpleTaselfafilenameamax_ageTaselfakwargsaclsTaselfause_cookiesakwargsaclsTaselfaargsakwargsaEnvironBuilderabuilderTaselfacontextanamesaorig_ctxanameafuncT
aselfaendpointa_anchora_methoda_schemea_externalavaluesareq_ctxaurl_adapterablueprint_nameaapp_ctxarvaerrorTaselfaenvironastart_responseaerroractxaresponsewe.flask.blueprintsOa__class__a__init__aAppGroupaclianameacurrent_appaconfigaSEND_FILE_MAX_AGE_DEFAULTatimedeltaatotal_secondsuUsed by :func:`send_file` to determine the ``max_age`` cache
        value for a given file path if it wasn't passed.

        By default, this returns :data:`SEND_FILE_MAX_AGE_DEFAULT` from
        the configuration of :data:`~flask.current_app`. This defaults
        to ``None``, which tells the browser to use conditional requests
        instead of a timed cache, which is usually preferable.

        Note this is a duplicate of the same method in the Flask
        class.

        .. versionchanged:: 2.0
            The default configuration is ``None`` instead of 12 hours.

        .. versionadded:: 0.9
        ahas_static_folderu'static_folder' must be set to serve static_files.aget_send_file_max_ageasend_from_directoryacastastatic_folderTamax_ageuThe view function used to serve files from
        :attr:`static_folder`. A route is automatically registered for
        this view at :attr:`static_url_path` if :attr:`static_folder` is
        set.

        Note this is a duplicate of the same method in the Flask
        class.

        .. versionadded:: 0.5

        ParbartwruResources can only be opened for reading.ajoinaroot_pathuOpen a resource file relative to :attr:`root_path` for
        reading.

        For example, if the file ``schema.sql`` is next to the file
        ``app.py`` where the ``Flask`` app is defined, it can be opened
        with:

        .. code-block:: python

            with app.open_resource("schema.sql") as f:
                conn.executescript(f.read())

        :param resource: Path to the resource relative to
            :attr:`root_path`.
        :param mode: Open the file in this mode. Only reading is
            supported, valid values are "r" (or "rt") and "rb".

        Note this is a duplicate of the same method in the Flask
        class.

        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaoswtadatetimeTatimedeltalTaAppGrouplaglobalsTacurrent_appahelpersTasend_from_directoryusansio.blueprintsTaBlueprintaBlueprintaSansioBlueprintTaBlueprintSetupStateaBlueprintSetupStateusansio.scaffoldTa_sentinela_sentinela__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uflask.blueprintsa__module__a__qualname__Danameaimport_nameastatic_folderastatic_url_pathatemplate_folderaurl_prefixasubdomainaurl_defaultsaroot_pathacli_groupareturnastrpustr | os.PathLike[str] | Noneustr | Noneustr | os.PathLike[str] | Noneustr | Noneustr | Noneudict[str, t.Any] | Noneustr | Noneustr | NoneaNoneuBlueprint.__init__Dafilenameareturnustr | Noneuint | NoneuBlueprint.get_send_file_max_ageDafilenameareturnastraResponseasend_static_fileuBlueprint.send_static_fileTarbDaresourceamodeareturnastrput.IO[t.AnyStr]aopen_resourceuBlueprint.open_resourcea__orig_bases__uflask\blueprints.pyu<module flask.blueprints>Ta__class__Taselfanameaimport_nameastatic_folderastatic_url_pathatemplate_folderaurl_prefixasubdomainaurl_defaultsaroot_pathacli_groupa__class__TaselfafilenameavalueTaselfaresourceamodeTaselfafilenameamax_ageu.flask.cliODuTaFlasklaFlasklTaappaapplicationavaluesaNoAppExceptionuDetected multiple Flask applications in module 'a__name__u'. Use 'u:name' to specify the correct one.Tacreate_appamake_appainspectaisfunctiona_called_with_wrong_argsuDetected factory 'u' in module 'u', but could not call it without arguments. Use 'w:u(args)' to specify arguments.uFailed to find Flask application or factory in module 'u:name' to specify one.uGiven a module instance this tries to find the best possible
    application in the module or raises an exception.
    aexc_infolatbatb_frameaf_codewfa__code__atb_nextuCheck whether calling a function raised a ``TypeError`` because
    the call failed or because something in the factory raised the
    error.

    :param f: The function that was called.
    :return: ``True`` if the call failed.
    aastaparseastripDamodeaevalabodyuFailed to parse u as an attribute name or function call.aNameaidaCallafuncuFunction reference must be a simple name: w.aargsaliteral_evalakeywordsaargavalueuFailed to parse arguments as literal values: uFailed to find attribute u in uThe factory u in module u could not be called with the specified arguments.uA valid Flask application was not obtained from 'u'.uCheck if the given string is a variable name or a function. Call
    a function to get the app instance, or return the variable directly.
    arealpathasplitextutoo many values to unpack (expected 2)u.pyapatha__init__asplitamodule_nameajoinu__init__.pyainsert:nnquGiven a filename this will try to calculate the python path, add it
    to the search path and return the actual module name that is expected.
    uWhile importing u, an ImportError was raised:

atracebackaformat_excuCould not import amodulesafind_best_appafind_app_by_stringaresilient_parsingaclickaechouPython aplatformapython_versionu
Flask 3.0.3
Werkzeug 3.0.4acolorTacoloraexitaapp_import_pathacreate_appadataaset_debug_flaga_loaded_appareu:(?![\\/])Damaxsplitl:nlnaprepare_importalocate_appTuwsgi.pyuapp.pyDaraise_if_not_foundFaappTuCould not locate a Flask application. Use the 'flask --app' option, 'FLASK_APP' environment variable, or a 'wsgi.py' or 'app.py' file in the current directory.aget_debug_flagadebuguLoads the Flask app (if not yet loaded) and returns it.  Calling
        this multiple times will just result in the already loaded app to
        be returned.
        apass_contextDactxaargsakwargsareturnuclick.Contextut.Anyut.Anyut.Anyadecoratoruwith_appcontext.<locals>.decoratoraupdate_wrapperuWraps a callback so that it's guaranteed to be executed with the
    script's application context.

    Custom commands (and their options) registered under ``app.cli`` or
    ``blueprint.cli`` will always have an app context available, this
    decorator is not required in that case.

    .. versionchanged:: 2.2
        The app context is active for subcommands as well as the
        decorated callback. The app context is always available to
        ``app.cli`` command and parameter callbacks.
    acurrent_appaensure_objectaScriptInfoaload_appawith_resourceaapp_contextainvokeawith_appcontextDwfareturnut.Callable[..., t.Any]uclick.CommanduAppGroup.command.<locals>.decoratoruThis works exactly like the method of the same name on a regular
        :class:`click.Group` but it wraps callbacks in :func:`with_appcontext`
        unless it's disabled by passing ``with_appcontext=False``.
        awrap_for_ctxaAppGroupaselfacommandakwargsaclsa__class__agroupuThis works exactly like the method of the same name on a regular
        :class:`click.Group` but it defaults the group class to
        :class:`AppGroup`.
        aget_parameter_sourceanameaParameterSourceaDEFAULTaDEFAULT_MAPw1w0aenvironaFLASK_DEBUGadotenvaBadParameterTupython-dotenv must be installed to load an env file.Tactxaparamaload_dotenvaparamsa_env_file_optiona_app_optiona_debug_optionaversion_optionacontext_settingsasetdefaultTaauto_envvar_prefixaFLASKaadd_commandarun_commandashell_commandaroutes_commanda_loaded_plugin_commandsaEntryPointsaloada_load_plugin_commandsaget_commandasechouError: aformat_messagew
Daerrafgtareda_get_current_objectaclialist_commandsaupdateasortedatrueaFLASK_RUN_FROM_CLIaget_load_dotenvaobjTacreate_appaset_debug_flagamake_contextaparentano_args_is_helpahandle_parse_resultaparse_argsalstripTw\uTake ``other`` and remove the length of ``path`` from it. Then join it
    to ``path``. If it is the original value, ``path`` is an ancestor of
    ``other``.u.envu.flaskenvTu * Tip: There are .env or .flaskenv files present. Do "pip install python-dotenv" to use them.ayellowtTafgaerrDaencodinguutf-8Tu.envu.flaskenvafind_dotenvDausecwdtaloadeduLoad "dotenv" files in order of precedence to set environment variables.

    If an env var is already set it is not overwritten, so earlier files in the
    list are preferred over later files.

    This is a no-op if `python-dotenv`_ is not installed.

    .. _python-dotenv: https://github.com/theskumar/python-dotenv#readme

    :param path: Load the file at this location instead of searching.
    :return: ``True`` if a file was loaded.

    .. versionchanged:: 2.0
        The current directory is not changed to the location of the
        loaded file.

    .. versionchanged:: 2.0
        When loading the env files, set the default encoding to UTF-8.

    .. versionchanged:: 1.1.0
        Returns ``False`` when python-dotenv is not installed, or when
        the given path isn't a file.

    .. versionadded:: 1.0
    ais_running_from_reloaderu * Serving Flask app 'w'u * Debug mode: aonaoffuShow extra startup messages the first time the server is run,
    ignoring the reloader.
    aPathTtFtTaexistsadir_okayaresolve_pathapath_typeassluUsing "--cert" requires Python to be compiled with SSL support.aSTRINGaloweraadhocacryptographyuUsing ad-hoc certificates requires the cryptography library.aimport_stringDasilenttaSSLContextagetTacertuWhen "--cert" is "adhoc", "--key" is not used.ais_contextuWhen "--cert" is an SSLContext object, "--key" is not used.u"--cert" must also be specified.acertuRequired when using "--cert".uThe ``--key`` option must be specified when ``--cert`` is a file.
    Modifies the ``cert`` param to be a ``(cert, key)`` pair if needed.
    asplit_envvar_valueaconvertasuper_convertaparamactxaprint_excDaenvironastart_responseareturnaWSGIEnvironmentaStartResponseucabc.Iterable[bytes]urun_command.<locals>.appashow_server_bannerarun_simpleTause_reloaderause_debuggerathreadedassl_contextaextra_filesaexclude_patternsuRun a local development server.

    This server is for development purposes only. It does not provide
    the stability, security, or performance of production WSGI servers.

    The reloader and debugger are enabled by default with the '--debug'
    option.
    aerracodeuPython 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)] on win32
App: aimport_nameu
Instance: ainstance_pathTaPYTHONSTARTUPa__enter__a__exit__areadaexecTMOmemoryviewTc Tu u<string>aevalTnnnamake_shell_contexta__interactivehook__areadlinearlcompleterTaCompleteraCompleteraset_completeracompleteainteractTabanneralocaluRun an interactive Python shell in the context of a given
    Flask application.  The application will populate the default
    namespace of this shell according to its configuration.

    This is useful for executing small snippets of management code
    without having to manually configure the application.
    aurl_mapaiter_rulesTuNo routes were registered.SaHEADaOPTIONSahost_matchingaendpointu, amethodsaignored_methodsahostasubdomainarulearowsaEndpointaMethodsaHostaSubdomainadomainaRuleasortaitemgetterTakeyamaxw-u  aformatuShow all registered routes with endpoints and methods.u<genexpr>uroutes_command.<locals>.<genexpr>wiw{u:<w}amaina__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucollections.abcaabcacabcaimportlibaosasyswtaoperatorTaitemgetteraModuleTypeuclick.coreTaParameterSourceawerkzeugTarun_simpleuwerkzeug.servingTais_running_from_reloaderuwerkzeug.utilsTaimport_stringaglobalsTacurrent_appahelpersTaget_debug_flagTaget_load_dotenvaUsageErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uflask.clia__module__uRaised if an application cannot be found or loaded.a__qualname__a__orig_bases__DamoduleareturnaModuleTypeaFlaskDwfareturnut.Callable[..., Flask]aboolDamoduleaapp_nameareturnaModuleTypeastraFlaskDapathareturnastrpaoverloadTtDamodule_nameaapp_namearaise_if_not_foundareturnastrustr | Noneut.Literal[True]aFlaskTQDamodule_nameaapp_namearaise_if_not_foundareturnastrustr | Noneut.Literal[False]uFlask | NoneDamodule_nameaapp_namearaise_if_not_foundareturnastrustr | NoneabooluFlask | NoneDactxaparamavalueareturnuclick.Contextuclick.Parameterut.AnyaNoneaget_versionaOptionuShow the Flask version.TLu--versionTahelpaexpose_valueacallbackais_flagais_eageruHelper object to deal with Flask applications.  This is usually not
    necessary to interface with as it's used internally in the dispatching
    to click.  In future versions of Flask this object will most likely play
    a bigger role.  Typically it's created automatically by the
    :class:`FlaskGroup` but you can also manually create it and pass it
    onwards as click object.
    TnntDaapp_import_pathacreate_appaset_debug_flagareturnustr | Noneut.Callable[..., Flask] | NoneaboolaNoneuScriptInfo.__init__DareturnaFlaskuScriptInfo.load_appamake_pass_decoratorDaensuretapass_script_infoaTypeVaraCallableaAnyTwFTaboundwFDwfareturnwFpaGroupuThis works similar to a regular click :class:`~click.Group` but it
    changes the behavior of the :meth:`command` decorator so that it
    automatically wraps the functions in :func:`with_appcontext`.

    Not to be confused with :class:`FlaskGroup`.
    Daargsakwargsareturnut.Anyut.Anyut.Callable[[t.Callable[..., t.Any]], click.Command]uAppGroup.commandDaargsakwargsareturnut.Anyut.Anyut.Callable[[t.Callable[..., t.Any]], click.Group]uAppGroup.groupDactxaparamavalueareturnuclick.Contextuclick.Optionustr | Noneustr | Nonea_set_appaIMPORTuThe Flask application or factory function to load, in the form 'module:name'. Module can be a dotted import or file path. Name is not required if it is 'app', 'application', 'create_app', or 'make_app', and can be 'name(args)' to pass arguments.TLu-Au--appTametavarahelpais_eageraexpose_valueacallbackDactxaparamavalueareturnuclick.Contextuclick.Optionaboolubool | Nonea_set_debuguSet debug mode.TLu--debug/--no-debugTahelpaexpose_valueacallbacka_env_file_callbackTtFTaexistsadir_okayuLoad environment variables from this file. python-dotenv must be installed.TLu-eu--env-fileTatypeahelpais_eageraexpose_valueacallbackaFlaskGroupuSpecial subclass of the :class:`AppGroup` group that supports
    loading more commands from the configured Flask app.  Normally a
    developer does not have to interface with this class but there are
    some very advanced use cases for which it makes sense to create an
    instance of this. see :ref:`custom-scripts`.

    :param add_default_commands: if this is True then the default run and
        shell commands will be added.
    :param add_version_option: adds the ``--version`` option.
    :param create_app: an optional callback that is passed the script info and
        returns the loaded app.
    :param load_dotenv: Load the nearest :file:`.env` and :file:`.flaskenv`
        files to set environment variables. Will also change the working
        directory to the directory containing the first file found.
    :param set_debug_flag: Set the app's debug flag.

    .. versionchanged:: 2.2
        Added the ``-A/--app``, ``--debug/--no-debug``, ``-e/--env-file`` options.

    .. versionchanged:: 2.2
        An app context is pushed when running ``app.cli`` commands, so
        ``@with_appcontext`` is no longer required for those commands.

    .. versionchanged:: 1.0
        If installed, python-dotenv will be used to load environment variables
        from :file:`.env` and :file:`.flaskenv` files.
    TtntppDaadd_default_commandsacreate_appaadd_version_optionaload_dotenvaset_debug_flagaextraareturnaboolut.Callable[..., Flask] | Noneaboolpput.AnyaNoneuFlaskGroup.__init__DareturnaNoneuFlaskGroup._load_plugin_commandsDactxanameareturnuclick.Contextastruclick.Command | NoneuFlaskGroup.get_commandDactxareturnuclick.Contextulist[str]uFlaskGroup.list_commandsTnDainfo_nameaargsaparentaextraareturnustr | Noneulist[str]uclick.Context | Noneut.Anyuclick.ContextuFlaskGroup.make_contextDactxaargsareturnuclick.Contextulist[str]ulist[str]uFlaskGroup.parse_argsDapathaotherareturnastrpaboola_path_is_ancestorDapathareturnustr | os.PathLike[str] | NoneaboolDadebugaapp_import_pathareturnaboolustr | NoneaNoneaParamTypeaCertParamTypeuClick option type for the ``--cert`` option. Allows either an
    existing file, the string ``'adhoc'``, or an import for a
    :class:`~ssl.SSLContext` object.
    uCertParamType.__init__Davalueaparamactxareturnut.Anyuclick.Parameter | Noneuclick.Context | Noneut.AnyuCertParamType.convertDactxaparamavalueareturnuclick.Contextuclick.Parameterut.Anyut.Anya_validate_keyaSeparatedPathTypeuClick option type that accepts a list of values separated by the
    OS's path separator (``:``, ``;`` on Windows). Each value is
    validated as a :class:`click.Path` type.
    uSeparatedPathType.convertTarunuRun a development server.Tashort_helpaoptionTu--hostu-hu127.0.0.1uThe interface to bind to.TadefaultahelpTu--portu-pl'uThe port to bind to.uSpecify a certificate file to use HTTPS.Tu--certTatypeahelpais_eageruThe key file to use when specifying a certificate.Tu--keyTatypeacallbackaexpose_valueahelpTu--reload/--no-reloadnuEnable or disable the reloader. By default the reloader is active if debug is enabled.Tu--debugger/--no-debuggernuEnable or disable the debugger. By default the debugger is active if debug is enabled.Tu--with-threads/--without-threadstuEnable or disable multithreading.uExtra files that trigger a reload on change. Multiple paths are separated by apathsepTu--extra-filesTadefaultatypeahelpuFiles matching these fnmatch patterns will not trigger a reload on change. Multiple patterns are separated by Tu--exclude-patternsD
ainfoahostaportareloadadebuggerawith_threadsacertaextra_filesaexclude_patternsareturnaScriptInfoastraintaboolppussl.SSLContext | tuple[str, str | None] | t.Literal['adhoc'] | Noneulist[str] | Noneulist[str] | NoneaNoneTashelluRun a shell in the app context.TaroutesuShow the routes for the app.aChoiceTTaendpointamethodsadomainaruleamatchuMethod to sort routes by. 'match' is the order that Flask will match routes when dispatching a request.Tu--sortu-sTatypeadefaultahelpTu--all-methodstuShow HEAD and OPTIONS methods.Tais_flagahelpDasortaall_methodsareturnastraboolaNoneTaflaskuA general utility script for Flask applications.

An application to load must be given with the '--app' option,
'FLASK_APP' environment variable, or with a 'wsgi.py' or 'app.py' file
in the current directory.
Tanameahelpuflask\cli.pyTa.0wiwwTa.0arowwiTa.0aruleahost_matchingu<module flask.cli>Ta__class__TaselfTaselfaadd_default_commandsacreate_appaadd_version_optionaload_dotenvaset_debug_flagaextraaparamsa__class__Taselfaapp_import_pathacreate_appaset_debug_flagTwfatbTactxaparamavalueaimportlibTaselfametadataaepTapathaotherTactxaparamavalueainfoTactxaparamavalueasourceTactxaparamavalueacertais_adhocasslais_contextTaenvironastart_responseaerrTaerrTaselfaargsakwargsawrap_for_ctxadecoratorTaselfavalueaparamactxasslacryptographyaobjTaselfavalueaparamactxaitemsasuper_converta__class__Twfawrap_for_ctxaselfaargsakwargsa__class__Taargsakwargsaselfawrap_for_ctxTactxaargsakwargsaappwfTwfT
amoduleaapp_nameaFlaskaexpranameaargsakwargsaattrweaappTamoduleaFlaskaattr_nameaappamatchesaapp_factoryweTaselfactxanamearvainfoaappwea__class__Tactxaparamavalueaflask_versionawerkzeug_versionTaselfaargsakwargsa__class__Taselfactxarvainfowea__class__Taselfaappapathanameaimport_nameTapathadotenvaloadedanameTamodule_nameaapp_namearaise_if_not_foundTamodule_nameaapp_namearaise_if_not_foundamoduleTaselfainfo_nameaargsaparentaextraa__class__Taselfactxaargsa__class__Tapathafnameaextamodule_nameanameT
asortaall_methodsarulesaignored_methodsahost_matchingahas_domainarowsarulearowaheadersasortsawidthsatemplateT
ainfoahostaportareloadadebuggerawith_threadsacertaextra_filesaexclude_patternsaappweaerradebugTactxacodeabannerastartupwfainteractive_hookareadlineaCompleterTadebugaapp_import_pathTwfadecorator.flask.config(a__name__aget_converteraconfiga__class__a__init__aroot_pathaenvironagetuThe environment variable uu is not set and as such configuration could not be loaded. Set this variable and make it point to a configuration fileafrom_pyfileTasilentuLoads a configuration from an environment variable pointing to
        a configuration file.  This is basically just a shortcut with nicer
        error messages for this line of code::

            app.config.from_pyfile(os.environ['YOURAPPLICATION_SETTINGS'])

        :param variable_name: name of the environment variable
        :param silent: set to ``True`` if you want silent failure for missing
                       files.
        :return: ``True`` if the file was loaded successfully.
        w_asortedastartswithaprefixaloadsa__avalueaselfasplitTa__unot enough values to unpack (expected at least 1, got %d)acurrentuLoad any environment variables that start with ``FLASK_``,
        dropping the prefix from the env key for the config key. Values
        are passed through a loading function to attempt to convert them
        to more specific types than strings.

        Keys are loaded in :func:`sorted` order.

        The default loading function attempts to parse values as any
        valid JSON type, including dicts and lists.

        Specific items in nested dicts can be set by separating the
        keys with double underscores (``__``). If an intermediate key
        doesn't exist, it will be initialized to an empty dict.

        :param prefix: Load env vars that start with this prefix,
            separated with an underscore (``_``).
        :param loads: Pass each string value to this function and use
            the returned value as the config value. If any error is
            raised it is ignored and the value remains a string. The
            default is :func:`json.loads`.

        .. versionadded:: 2.1
        ajoinaModuleTypeTaconfiga__file__arba__enter__a__exit__afilenameasilentwdaconfig_fileareadaexecu<string>TnnnaerrnoaENOENTaEISDIRaENOTDIRuUnable to load configuration file (astrerrorw)afrom_objectuUpdates the values in the config from a Python file.  This function
        behaves as if the file was imported as module with the
        :meth:`from_object` function.

        :param filename: the filename of the config.  This can either be an
                         absolute filename or a filename relative to the
                         root path.
        :param silent: set to ``True`` if you want silent failure for missing
                       files.
        :return: ``True`` if the file was loaded successfully.

        .. versionadded:: 0.7
           `silent` parameter.
        aimport_stringaisupperuUpdates the values from the given object.  An object can be of one
        of the following two types:

        -   a string: in this case the object with that name will be imported
        -   an actual object reference: that object is used directly

        Objects are usually either modules or classes. :meth:`from_object`
        loads only the uppercase attributes of the module/class. A ``dict``
        object will not work with :meth:`from_object` because the keys of a
        ``dict`` are not attributes of the ``dict`` class.

        Example of module-based configuration::

            app.config.from_object('yourapplication.default_config')
            from yourapplication import default_config
            app.config.from_object(default_config)

        Nothing is done to the object before loading. If the object is a
        class and has ``@property`` attributes, it needs to be
        instantiated before being passed to this method.

        You should not use this function to load the actual configuration but
        rather configuration defaults.  The actual config should be loaded
        with :meth:`from_pyfile` and ideally from a location not within the
        package because the package might be installed system wide.

        See :ref:`config-dev-prod` for an example of class-based configuration
        using :meth:`from_object`.

        :param obj: an import name or object
        wrafrom_mappingaobjuUpdate the values in the config from a file that is loaded
        using the ``load`` parameter. The loaded data is passed to the
        :meth:`from_mapping` method.

        .. code-block:: python

            import json
            app.config.from_file("config.json", load=json.load)

            import tomllib
            app.config.from_file("config.toml", load=tomllib.load, text=False)

        :param filename: The path to the data file. This can be an
            absolute path or relative to the config root path.
        :param load: A callable that takes a file handle and returns a
            mapping of loaded data from the file.
        :type load: ``Callable[[Reader], Mapping]`` where ``Reader``
            implements a ``read`` method.
        :param silent: Ignore the file if it doesn't exist.
        :param text: Open the file in text or binary mode.
        :return: ``True`` if the file was loaded successfully.

        .. versionchanged:: 2.3
            The ``text`` parameter was added.

        .. versionadded:: 2.0
        utoo many values to unpack (expected 2)uUpdates the config like :meth:`update` ignoring items with
        non-upper keys.

        :return: Always returns ``True``.

        .. versionadded:: 0.11
        aitemsanamespacealowerarvuReturns a dictionary containing a subset of configuration options
        that match the specified namespace/prefix. Example usage::

            app.config['IMAGE_STORE_TYPE'] = 'fs'
            app.config['IMAGE_STORE_PATH'] = '/var/app/images'
            app.config['IMAGE_STORE_BASE_URL'] = 'http://img.website.com'
            image_store_config = app.config.get_namespace('IMAGE_STORE_')

        The resulting dictionary `image_store_config` would look like::

            {
                'type': 'fs',
                'path': '/var/app/images',
                'base_url': 'http://img.website.com'
            }

        This is often useful when configuration options map directly to
        keyword arguments in functions or class constructors.

        :param namespace: a configuration namespace
        :param lowercase: a flag indicating if the keys of the resulting
                          dictionary should be lowercase
        :param trim_namespace: a flag indicating if the keys of the resulting
                          dictionary should not include the namespace

        .. versionadded:: 0.11
        w<w a__repr__w>a__doc__a__spec__aoriginahas_locationa__cached__aannotationslajsonaosatypeswtuwerkzeug.utilsTaimport_stringaTypeVarTwTwTaGenerica__prepare__aConfigAttributea__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uflask.configa__module__uMakes an attribute forward to the configa__qualname__TnDanameaget_converterareturnastrut.Callable[[t.Any], T] | NoneaNoneuConfigAttribute.__init__aoverloadDaobjaownerareturnaNonepute.Selfa__get__uConfigAttribute.__get__DaobjaownerareturnaApputype[App]wTDaobjaownerareturnuApp | Noneutype[App] | NoneuT | te.SelfDaobjavalueareturnaApput.AnyaNonea__set__uConfigAttribute.__set__a__orig_bases__TOdictaConfiguWorks exactly like a dict but provides ways to fill it from files
    or special dictionaries.  There are two common patterns to populate the
    config.

    Either you can fill the config from a config file::

        app.config.from_pyfile('yourconfig.cfg')

    Or alternatively you can define the configuration options in the
    module that calls :meth:`from_object` or provide an import path to
    a module that should be loaded.  It is also possible to tell it to
    use the same module and with that provide the configuration values
    just before the call::

        DEBUG = True
        SECRET_KEY = 'development key'
        app.config.from_object(__name__)

    In both cases (loading from any Python file or loading from modules),
    only uppercase keys are added to the config.  This makes it possible to use
    lowercase values in the config file for temporary values that are not added
    to the config or to define the config keys in the same file that implements
    the application.

    Probably the most interesting way to load configurations is from an
    environment variable pointing to a file::

        app.config.from_envvar('YOURAPPLICATION_SETTINGS')

    In this case before launching the application you have to set this
    environment variable to the file you want to use.  On Linux and OS X
    use the export statement::

        export YOURAPPLICATION_SETTINGS='/path/to/config/file'

    On windows use `set` instead.

    :param root_path: path to which files are read relative from.  When the
                      config object is created by the application, this is
                      the application's :attr:`~flask.Flask.root_path`.
    :param defaults: an optional dictionary of default values
    Daroot_pathadefaultsareturnustr | os.PathLike[str]udict[str, t.Any] | NoneaNoneuConfig.__init__TFDavariable_nameasilentareturnastraboolpafrom_envvaruConfig.from_envvarTaFLASKDaprefixaloadsareturnastrut.Callable[[str], t.Any]aboolafrom_prefixed_envuConfig.from_prefixed_envDafilenameasilentareturnustr | os.PathLike[str]aboolpuConfig.from_pyfileDaobjareturnuobject | straNoneuConfig.from_objectTFtDafilenamealoadasilentatextareturnustr | os.PathLike[str]ut.Callable[[t.IO[t.Any]], t.Mapping[str, t.Any]]aboolppafrom_fileuConfig.from_fileDamappingakwargsareturnut.Mapping[str, t.Any] | Noneut.AnyabooluConfig.from_mappingTtpDanamespacealowercaseatrim_namespaceareturnastraboolpudict[str, t.Any]aget_namespaceuConfig.get_namespaceDareturnastruConfig.__repr__uflask\config.pyu<module flask.config>Ta__class__TaselfaobjaownerTaselfaobjaownerarvTaselfaroot_pathadefaultsa__class__Taselfanameaget_converterTaselfTaselfaobjavalueTaselfavariable_nameasilentarvTaselfafilenamealoadasilentatextwfaobjweTaselfamappingakwargsamappingsakeyavalueTaselfaobjakeyT
aselfaprefixaloadsalen_prefixakeyavalueacurrentapartsatailapartTaselfafilenameasilentwdaconfig_fileweTaselfanamespacealowercaseatrim_namespacearvwkwvakey.flasknua__version__awarningslawarnuThe '__version__' attribute is deprecated and will be removed in Flask 3.1. Use feature detection or 'importlib.metadata.version("flask")' instead.aDeprecationWarningDastacklevellu3.0.3a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_flasku\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationswtuTajsonlajsonaappTaFlaskaFlaskablueprintsTaBlueprintaBlueprintaconfigTaConfigaConfigactxTaafter_this_requestaafter_this_requestTacopy_current_request_contextacopy_current_request_contextTahas_app_contextahas_app_contextTahas_request_contextahas_request_contextaglobalsTacurrent_appacurrent_appTwgwgTarequestarequestTasessionasessionahelpersTaabortaabortTaflashaflashTaget_flashed_messagesaget_flashed_messagesTaget_template_attributeaget_template_attributeTamake_responseamake_responseTaredirectaredirectTasend_fileasend_fileTasend_from_directoryasend_from_directoryTastream_with_contextastream_with_contextTaurl_foraurl_forTajsonifyajsonifyasignalsTaappcontext_poppedaappcontext_poppedTaappcontext_pushedaappcontext_pushedTaappcontext_tearing_downaappcontext_tearing_downTabefore_render_templateabefore_render_templateTagot_request_exceptionagot_request_exceptionTamessage_flashedamessage_flashedTarequest_finishedarequest_finishedTarequest_startedarequest_startedTarequest_tearing_downarequest_tearing_downTatemplate_renderedatemplate_renderedatemplatingTarender_templatearender_templateTarender_template_stringarender_template_stringTastream_templateastream_templateTastream_template_stringastream_template_stringawrappersTaRequestaRequestTaResponseaResponseDanameareturnastrut.Anya__getattr__uflask\__init__.pyu<module flask>Tanameaimportlibawarnings.flask.ctxs%agetuGet an attribute by name, or a default value. Like
        :meth:`dict.get`.

        :param name: Name of attribute to get.
        :param default: Value to return if the attribute is not present.

        .. versionadded:: 0.10
        a_sentinelapopuGet and remove an attribute by name. Like :meth:`dict.pop`.

        :param name: Name of attribute to pop.
        :param default: Value to return if the attribute is not present,
            instead of raising a ``KeyError``.

        .. versionadded:: 0.11
        asetdefaultuGet the value of an attribute if it is present, otherwise
        set and return a default value. Like :meth:`dict.setdefault`.

        :param name: Name of attribute to get.
        :param default: Value to set and return if the attribute is not
            present.

        .. versionadded:: 0.11
        a_cv_appTnu<flask.g of 'aappanameuu'>a__repr__a_cv_requestu'after_this_request' can only be used when a request context is active, such as in a view function.a_after_request_functionsaappenduExecutes a function after this request.  This is useful to modify
    response objects.  The function is passed the response object and has
    to return the same or a new one.

    Example::

        @app.route('/')
        def index():
            @after_this_request
            def add_header(response):
                response.headers['X-Foo'] = 'Parachute'
                return response
            return 'Hello World!'

    This is more useful if a function other than the view function wants to
    modify a response.  For instance think of a decorator that wants to add
    some headers without converting the return value into a response object.

    .. versionadded:: 0.9
    u'copy_current_request_context' can only be used when a request context is active, such as in a view function.acopyDaargsakwargsareturnut.Anyut.Anyut.Anyawrapperucopy_current_request_context.<locals>.wrapperaupdate_wrapperuA helper function that decorates a function to retain the current
    request context.  This is useful when working with greenlets.  The moment
    the function is decorated a copy of the request context is created and
    then pushed when the function is called.  The current session is also
    included in the copied request context.

    Example::

        import gevent
        from flask import copy_current_request_context

        @app.route('/')
        def index():
            @copy_current_request_context
            def do_some_work():
                # do some work here, it can access flask.request or
                # flask.session like you would otherwise in the view function.
                ...
            gevent.spawn(do_some_work)
            return 'Regular response'

    .. versionadded:: 0.10
    actxa__enter__a__exit__aensure_syncwfTnnnuIf you have code that wants to test if a request context is there or
    not this function can be used.  For instance, you may want to take advantage
    of request information if the request object is available, but fail
    silently if it is unavailable.

    ::

        class User(db.Model):

            def __init__(self, username, remote_addr=None):
                self.username = username
                if remote_addr is None and has_request_context():
                    remote_addr = request.remote_addr
                self.remote_addr = remote_addr

    Alternatively you can also just test any of the context bound objects
    (such as :class:`request` or :class:`g`) for truthness::

        class User(db.Model):

            def __init__(self, username, remote_addr=None):
                self.username = username
                if remote_addr is None and request:
                    remote_addr = request.remote_addr
                self.remote_addr = remote_addr

    .. versionadded:: 0.7
    uWorks like :func:`has_request_context` but for the application
    context.  You can also just do a boolean check on the
    :data:`current_app` object instead.

    .. versionadded:: 0.9
    acreate_url_adapteraurl_adapteraapp_ctx_globals_classwga_cv_tokensasetaappcontext_pushedasendTa_async_wrapperuBinds the app context to the current context.aexc_infolado_teardown_appcontextaresetuPopped wrong app context. (u instead of w)aappcontext_poppeduPops the app context.apusharequest_classajsonajson_modulearequestaHTTPExceptionarouting_exceptionaflashesasessionaenvironTaenvironarequestasessionuCreates a copy of this request context with the same request object.
        This can be used to move a request context to a different greenlet.
        Because the actual request object is the same this cannot be used to
        move a request context to a different thread unless access to the
        request object is locked.

        .. versionadded:: 0.10

        .. versionchanged:: 1.1
           The current session object is used instead of reloading the original
           data. This prevents `flask.session` pointing to an out-of-date object.
        amatchTtTareturn_ruleutoo many values to unpack (expected 2)aurl_ruleaview_argsuCan be overridden by a subclass to hook into the matching
        of the request.
        aapp_contextaapp_ctxasession_interfaceaopen_sessionamake_null_sessionamatch_requestado_teardown_requestacloseuwerkzeug.requestaexcuPopped wrong request context. (uPops the request context and unbinds it by doing that.  This will
        also trigger the execution of functions registered by the
        :meth:`~flask.Flask.teardown_request` decorator.

        .. versionchanged:: 0.9
           Added the `exc` argument.
        w<a__name__w aurlu [amethodu] of w>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsacontextvarslasyswtaTracebackTypeuwerkzeug.exceptionsTaHTTPExceptionTatypingatypingaftaglobalsTa_cv_appTa_cv_requestasignalsTaappcontext_poppedTaappcontext_pusheduflask.ctxa__module__uA plain object. Used as a namespace for storing data during an
    application context.

    Creating an app context automatically creates this object, which is
    made available as the :data:`g` proxy.

    .. describe:: 'key' in g

        Check whether an attribute is present.

        .. versionadded:: 0.10

    .. describe:: iter(g)

        Return an iterator over the attribute names.

        .. versionadded:: 0.10
    a_AppCtxGlobalsa__qualname__Danameareturnastrut.Anya__getattr__u_AppCtxGlobals.__getattr__Danameavalueareturnastrut.AnyaNonea__setattr__u_AppCtxGlobals.__setattr__DanameareturnastraNonea__delattr__u_AppCtxGlobals.__delattr__Danameadefaultareturnastrut.Any | Noneut.Anyu_AppCtxGlobals.getDanameadefaultareturnastrut.Anyut.Anyu_AppCtxGlobals.popu_AppCtxGlobals.setdefaultDaitemareturnastraboola__contains__u_AppCtxGlobals.__contains__Dareturnut.Iterator[str]a__iter__u_AppCtxGlobals.__iter__Dareturnastru_AppCtxGlobals.__repr__Dwfareturnuft.AfterRequestCallable[t.Any]uft.AfterRequestCallable[t.Any]aafter_this_requestaTypeVaraCallableaAnyTwFTaboundwFDwfareturnwFpacopy_current_request_contextDareturnaboolahas_request_contextahas_app_contextuThe app context contains application-specific information. An app
    context is created and pushed at the beginning of each request if
    one is not already active. An app context is also pushed when
    running CLI commands.
    aAppContextDaappareturnaFlaskaNonea__init__uAppContext.__init__DareturnaNoneuAppContext.pushDaexcareturnuBaseException | NoneaNoneuAppContext.popDareturnaAppContextuAppContext.__enter__Daexc_typeaexc_valueatbareturnutype | NoneuBaseException | NoneuTracebackType | NoneaNoneuAppContext.__exit__uThe request context contains per-request information. The Flask
    app creates and pushes it at the beginning of the request, then pops
    it at the end of the request. It will create the URL adapter and
    request object for the WSGI environment provided.

    Do not attempt to use this class directly, instead use
    :meth:`~flask.Flask.test_request_context` and
    :meth:`~flask.Flask.request_context` to create this object.

    When the request context is popped, it will evaluate all the
    functions registered on the application for teardown execution
    (:meth:`~flask.Flask.teardown_request`).

    The request context is automatically popped at the end of the
    request. When using the interactive debugger, the context will be
    restored so ``request`` is still accessible. Similarly, the test
    client can preserve the context after the request ends. However,
    teardown functions may already have closed some resources such as
    database connections.
    aRequestContextTnnDaappaenvironarequestasessionareturnaFlaskaWSGIEnvironmentuRequest | NoneuSessionMixin | NoneaNoneuRequestContext.__init__DareturnaRequestContextuRequestContext.copyuRequestContext.match_requestuRequestContext.pushuRequestContext.popuRequestContext.__enter__uRequestContext.__exit__uRequestContext.__repr__uflask\ctx.pyu<module flask.ctx>Ta__class__TaselfaitemTaselfanameTaselfTaselfaexc_typeaexc_valueatbTaselfaappTaselfaappaenvironarequestasessionweTaselfactxTaselfanameavalueTwfactxTwfactxawrapperTaselfanameadefaultTaselfaresultweTaselfaexcactxTaselfaexcaclear_requestarequest_closeactxatokenaapp_ctxTaselfaapp_ctxasession_interfaceTaargsakwargsactxwfTactxwf.flask.debughelpersaformagetlistuYou tried to access the file uu in the request.files dictionary but it does not exist. The mimetype for the request is amimetypeu instead of 'multipart/form-data' which means that no file contents were transmitted. To fix this error you should provide enctype="multipart/form-data" in your form.u, u

The browser instead transmitted some file names. This was submitted: amsgu<genexpr>uDebugFilesKeyError.__init__.<locals>.<genexpr>arouting_exceptionaRequestRedirectuA request was sent to 'aurlu', but routing issued a redirect to the canonical URL 'anew_urlu'.abase_urlw/apartitionTw?lu The URL was defined with a trailing slash. Flask will redirect to the URL with a trailing slash if it was accessed without one.u Send requests to the canonical URL, or use 307 or 308 for routing redirects. Otherwise, browsers will drop form data.

This exception is only raised in debug mode.a__class__a__init__afilesa__prepare__anewclsa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uflask.debughelpersa__module__uattach_enctype_error_multidict.<locals>.newclsa__qualname__Dakeyareturnastrut.Anyuattach_enctype_error_multidict.<locals>.newcls.__getitem__a__orig_bases__uPatch ``request.files.__getitem__`` to raise a descriptive error
    about ``enctype=multipart/form-data``.

    :param request: The request to patch.
    :meta private:
    arequestaDebugFilesKeyErrorawith_tracebacka__traceback__uclass: aloaderw.asortedaitemsutoo many values to unpack (expected 2)astartswithTw_TOtupleOlistw:u  - TOstrOintOfloatOboolu: a_dump_loader_infou_dump_loader_info.<locals>.<genexpr>uLocating template arequest_ctxablueprintutoo many values to unpack (expected 3)aAppuapplication aimport_nameaBlueprintublueprint anameu (w)ainfolw5u: trying loader of u       uno matchufound (u<string>atotal_foundu       -> uError: the template could not be found.uWarning: multiple loaders returned a match for the template.aappendu  The template was looked up from an endpoint that belongs to the blueprint Tu  Maybe you did not place a template in the right folder?Tu  See https://flask.palletsprojects.com/blueprints/#templatesaloggerw
uThis should help developers understand what faileda__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtujinja2.loadersTaBaseLoaderaBaseLoaderuwerkzeug.routingTaRequestRedirectablueprintsTaBlueprintaglobalsTarequest_ctxusansio.appTaAppTEAssertionErrorEUnicodeErroraUnexpectedUnicodeErroruRaised in places where we want some better error reporting for
    unexpected unicode or binary data.
    TEKeyErrorEAssertionErroruRaised from request.files during debugging.  The idea is that it can
    provide a better error message than just a generic KeyError/BadRequest.
    DarequestakeyareturnaRequestastraNoneuDebugFilesKeyError.__init__Dareturnastra__str__uDebugFilesKeyError.__str__TEAssertionErroraFormDataRoutingRedirectuThis exception is raised in debug mode if a routing redirect
    would cause the browser to drop the method or body. This happens
    when method is not GET, HEAD or OPTIONS and the status code is not
    307 or 308.
    DarequestareturnaRequestaNoneuFormDataRoutingRedirect.__init__aattach_enctype_error_multidictDaloaderareturnaBaseLoaderut.Iterator[str]DaappatemplateaattemptsareturnaAppastrulist[tuple[BaseLoader, Scaffold, tuple[str, str | None, t.Callable[[], bool] | None] | None]]aNoneaexplain_template_loading_attemptsuflask\debughelpers.pyTa.0wxu<module flask.debughelpers>Ta__class__Taselfakeywearequesta__class__Ta__class__arequestTaselfarequestakeyaform_matchesabufanamesTaselfarequestaexcabufa__class__TaselfTaloaderakeyavalueaitemTarequestaoldclsanewclsTaappatemplateaattemptsainfoatotal_foundablueprintaidxaloaderasrcobjatripleasrc_infoalineadetailaseems_fishy.flask.globals+a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationswtacontextvarsTaContextVarlaContextVaruwerkzeug.localTaLocalProxyaLocalProxyuWorking outside of application context.

This typically means that you attempted to use functionality that needed
the current application. To solve this, set up an application context
with app.app_context(). See the documentation for more information.a_no_app_msgTuflask.app_ctxa_cv_appuContextVar[AppContext]Taunbound_messageaapp_ctxaAppContextaappacurrent_appaFlaskwga_AppCtxGlobalsuWorking outside of request context.

This typically means that you attempted to use functionality that needed
an active HTTP request. Consult the documentation on testing for
information about how to avoid this problem.a_no_req_msgTuflask.request_ctxa_cv_requestuContextVar[RequestContext]arequest_ctxaRequestContextarequestaRequestasessionaSessionMixinuflask\globals.pyu<module flask.globals>u.flask.helpers`GaenvironagetTaFLASK_DEBUGalowerPw0afalseanouGet whether debug mode should be enabled for the app, indicated by the
    :envvar:`FLASK_DEBUG` environment variable. The default is ``False``.
    TaFLASK_SKIP_DOTENVTw0afalseanouGet whether the user has disabled loading default dotenv files by
    setting :envvar:`FLASK_SKIP_DOTENV`. The default is ``True``, load
    the files.

    :param default: What to return if the env var isn't set.
    Daargsakwargsareturnut.Anyut.Anyut.Anyadecoratorustream_with_context.<locals>.decoratoraupdate_wrapperDareturnut.Iterator[t.AnyStr | None]ageneratorustream_with_context.<locals>.generatoruRequest contexts disappear when the response is started on the server.
    This is done for efficiency reasons and to make it less likely to encounter
    memory leaks with badly written WSGI middlewares.  The downside is that if
    you are using streamed responses, the generator cannot access request bound
    information any more.

    This function however can help you keep the context around for longer::

        from flask import stream_with_context, request, Response

        @app.route('/stream')
        def streamed_response():
            @stream_with_context
            def generate():
                yield 'Hello '
                yield request.args['name']
                yield '!'
            return Response(generate())

    Alternatively it can also be used around a specific generator::

        from flask import stream_with_context, request, Response

        @app.route('/stream')
        def streamed_response():
            def generate():
                yield 'Hello '
                yield request.args['name']
                yield '!'
            return Response(stream_with_context(generate()))

    .. versionadded:: 0.9
    agenerator_or_functionastream_with_contexta_cv_requestTnu'stream_with_context' can only be used when a request context is active, such as in a view function.a__enter__a__exit__agenacloseTnnnacurrent_apparesponse_classlamake_responseaargsuSometimes it is necessary to set additional headers in a view.  Because
    views do not have to return response objects but can return a value that
    is converted into a response object by Flask itself, it becomes tricky to
    add headers to it.  This function can be called instead of using a return
    and you will get a response object which you can use to attach headers.

    If view looked like this and you want to add a new header::

        def index():
            return render_template('index.html', foo=42)

    You can now do something like this::

        def index():
            response = make_response(render_template('index.html', foo=42))
            response.headers['X-Parachutes'] = 'parachutes are cool'
            return response

    This function accepts the very same arguments you can return from a
    view function.  This for example creates a response with a 404 error
    code::

        response = make_response(render_template('not_found.html'), 404)

    The other use case of this function is to force the return value of a
    view function into a response which is helpful with view
    decorators::

        response = make_response(view_function())
        response.headers['X-Parachutes'] = 'parachutes are cool'

    Internally this function does the following things:

    -   if no arguments are passed, it creates a new response argument
    -   if one argument is passed, :meth:`flask.Flask.make_response`
        is invoked with it.
    -   if more than one argument is passed, the arguments are passed
        to the :meth:`flask.Flask.make_response` function as tuple.

    .. versionadded:: 0.6
    aurl_fora_anchora_methoda_schemea_externaluGenerate a URL to the given endpoint with the given values.

    This requires an active request or application context, and calls
    :meth:`current_app.url_for() <flask.Flask.url_for>`. See that method
    for full documentation.

    :param endpoint: The endpoint name associated with the URL to
        generate. If this starts with a ``.``, the current blueprint
        name (if any) will be used.
    :param _anchor: If given, append this as ``#anchor`` to the URL.
    :param _method: If given, generate the URL associated with this
        method for the endpoint.
    :param _scheme: If given, the URL will have this scheme if it is
        external.
    :param _external: If given, prefer the URL to be internal (False) or
        require it to be external (True). External URLs include the
        scheme and domain. When not in an active request, URLs are
        external by default.
    :param values: Values to use for the variable parts of the URL rule.
        Unknown keys are appended as query string arguments, like
        ``?a=b&c=d``.

    .. versionchanged:: 2.2
        Calls ``current_app.url_for``, allowing an app to override the
        behavior.

    .. versionchanged:: 0.10
       The ``_scheme`` parameter was added.

    .. versionchanged:: 0.9
       The ``_anchor`` and ``_method`` parameters were added.

    .. versionchanged:: 0.9
       Calls ``app.handle_url_build_error`` on build errors.
    aredirectTacodea_wz_redirectTacodeaResponseuCreate a redirect response object.

    If :data:`~flask.current_app` is available, it will use its
    :meth:`~flask.Flask.redirect` method, otherwise it will use
    :func:`werkzeug.utils.redirect`.

    :param location: The URL to redirect to.
    :param code: The status code for the redirect.
    :param Response: The response class to use. Not used when
        ``current_app`` is active, which uses ``app.response_class``.

    .. versionadded:: 2.2
        Calls ``current_app.redirect`` if available instead of always
        using Werkzeug's default ``redirect``.
    aabortera_wz_abortuRaise an :exc:`~werkzeug.exceptions.HTTPException` for the given
    status code.

    If :data:`~flask.current_app` is available, it will call its
    :attr:`~flask.Flask.aborter` object, otherwise it will use
    :func:`werkzeug.exceptions.abort`.

    :param code: The status code for the exception, which must be
        registered in ``app.aborter``.
    :param args: Passed to the exception.
    :param kwargs: Passed to the exception.

    .. versionadded:: 2.2
        Calls ``current_app.aborter`` if available instead of always
        using Werkzeug's default ``abort``.
    ajinja_envaget_templateamoduleuLoads a macro (or variable) a template exports.  This can be used to
    invoke a macro from within Python code.  If you for example have a
    template named :file:`_cider.html` with the following contents:

    .. sourcecode:: html+jinja

       {% macro hello(name) %}Hello {{ name }}!{% endmacro %}

    You can access this from Python code like this::

        hello = get_template_attribute('_cider.html', 'hello')
        return hello('World')

    .. versionadded:: 0.2

    :param template_name: the name of the template
    :param attribute: the name of the variable of macro to access
    asessiona_flashesaappenda_get_current_objectamessage_flashedasendaensure_syncTa_async_wrapperamessageacategoryuFlashes a message to the next request.  In order to remove the
    flashed message from the session and to display it to the user,
    the template has to call :func:`get_flashed_messages`.

    .. versionchanged:: 0.3
       `category` parameter added.

    :param message: the message to be flashed.
    :param category: the category for the message.  The following values
                     are recommended: ``'message'`` for any kind of message,
                     ``'error'`` for errors, ``'info'`` for information
                     messages and ``'warning'`` for warnings.  However any
                     kind of string can be used as category.
    arequest_ctxaflashesapopTa_flashesu<lambda>uget_flashed_messages.<locals>.<lambda>luPulls all flashed messages from the session and returns them.
    Further calls in the same request to the function will return
    the same messages.  By default just the messages are returned,
    but when `with_categories` is set to ``True``, the return value will
    be a list of tuples in the form ``(category, message)`` instead.

    Filter the flashed messages to one or more categories by providing those
    categories in `category_filter`.  This allows rendering categories in
    separate html blocks.  The `with_categories` and `category_filter`
    arguments are distinct:

    * `with_categories` controls whether categories are returned with message
      text (``True`` gives a tuple, where ``False`` gives just the message text).
    * `category_filter` filters the messages down to only those matching the
      provided categories.

    See :doc:`/patterns/flashing` for examples.

    .. versionchanged:: 0.3
       `with_categories` parameter added.

    .. versionchanged:: 0.9
        `category_filter` parameter added.

    :param with_categories: set to ``True`` to also receive categories.
    :param category_filter: filter of categories to limit return values.  Only
                            categories in the list will be returned.
    acategory_filteramax_ageaget_send_file_max_ageaupdatearequestaconfigaUSE_X_SENDFILEaroot_pathTaenvironause_x_sendfilearesponse_classa_root_pathawerkzeugautilsasend_filea_prepare_send_file_kwargsTapath_or_fileaenvironamimetypeaas_attachmentadownload_nameaconditionalaetagalast_modifiedamax_ageuSend the contents of a file to the client.

    The first argument can be a file path or a file-like object. Paths
    are preferred in most cases because Werkzeug can manage the file and
    get extra information from the path. Passing a file-like object
    requires that the file is opened in binary mode, and is mostly
    useful when building a file in memory with :class:`io.BytesIO`.

    Never pass file paths provided by a user. The path is assumed to be
    trusted, so a user could craft a path to access a file you didn't
    intend. Use :func:`send_from_directory` to safely serve
    user-requested paths from within a directory.

    If the WSGI server sets a ``file_wrapper`` in ``environ``, it is
    used, otherwise Werkzeug's built-in wrapper is used. Alternatively,
    if the HTTP server supports ``X-Sendfile``, configuring Flask with
    ``USE_X_SENDFILE = True`` will tell the server to send the given
    path, which is much more efficient than reading it in Python.

    :param path_or_file: The path to the file to send, relative to the
        current working directory if a relative path is given.
        Alternatively, a file-like object opened in binary mode. Make
        sure the file pointer is seeked to the start of the data.
    :param mimetype: The MIME type to send for the file. If not
        provided, it will try to detect it from the file name.
    :param as_attachment: Indicate to a browser that it should offer to
        save the file instead of displaying it.
    :param download_name: The default name browsers will use when saving
        the file. Defaults to the passed file name.
    :param conditional: Enable conditional and range responses based on
        request headers. Requires passing a file path and ``environ``.
    :param etag: Calculate an ETag for the file, which requires passing
        a file path. Can also be a string to use instead.
    :param last_modified: The last modified time to send for the file,
        in seconds. If not provided, it will try to detect it from the
        file path.
    :param max_age: How long the client should cache the file, in
        seconds. If set, ``Cache-Control`` will be ``public``, otherwise
        it will be ``no-cache`` to prefer conditional caching.

    .. versionchanged:: 2.0
        ``download_name`` replaces the ``attachment_filename``
        parameter. If ``as_attachment=False``, it is passed with
        ``Content-Disposition: inline`` instead.

    .. versionchanged:: 2.0
        ``max_age`` replaces the ``cache_timeout`` parameter.
        ``conditional`` is enabled and ``max_age`` is not set by
        default.

    .. versionchanged:: 2.0
        ``etag`` replaces the ``add_etags`` parameter. It can be a
        string to use instead of generating one.

    .. versionchanged:: 2.0
        Passing a file-like object that inherits from
        :class:`~io.TextIOBase` will raise a :exc:`ValueError` rather
        than sending an empty file.

    .. versionadded:: 2.0
        Moved the implementation to Werkzeug. This is now a wrapper to
        pass some Flask-specific arguments.

    .. versionchanged:: 1.1
        ``filename`` may be a :class:`~os.PathLike` object.

    .. versionchanged:: 1.1
        Passing a :class:`~io.BytesIO` object supports range requests.

    .. versionchanged:: 1.0.3
        Filenames are encoded with ASCII instead of Latin-1 for broader
        compatibility with WSGI servers.

    .. versionchanged:: 1.0
        UTF-8 filenames as specified in :rfc:`2231` are supported.

    .. versionchanged:: 0.12
        The filename is no longer automatically inferred from file
        objects. If you want to use automatic MIME and etag support,
        pass a filename via ``filename_or_fp`` or
        ``attachment_filename``.

    .. versionchanged:: 0.12
        ``attachment_filename`` is preferred over ``filename`` for MIME
        detection.

    .. versionchanged:: 0.9
        ``cache_timeout`` defaults to
        :meth:`Flask.get_send_file_max_age`.

    .. versionchanged:: 0.7
        MIME guessing and etag support for file-like objects was
        removed because it was unreliable. Pass a filename if you are
        able to, otherwise attach an etag yourself.

    .. versionchanged:: 0.5
        The ``add_etags``, ``cache_timeout`` and ``conditional``
        parameters were added. The default behavior is to add etags.

    .. versionadded:: 0.2
    asend_from_directoryuSend a file from within a directory using :func:`send_file`.

    .. code-block:: python

        @app.route("/uploads/<path:name>")
        def download_file(name):
            return send_from_directory(
                app.config['UPLOAD_FOLDER'], name, as_attachment=True
            )

    This is a secure way to serve files from a folder, such as static
    files or uploads. Uses :func:`~werkzeug.security.safe_join` to
    ensure the path coming from the client is not maliciously crafted to
    point outside the specified directory.

    If the final path does not point to an existing regular file,
    raises a 404 :exc:`~werkzeug.exceptions.NotFound` error.

    :param directory: The directory that ``path`` must be located under,
        relative to the current application's root path.
    :param path: The path to the file to send, relative to
        ``directory``.
    :param kwargs: Arguments to pass to :func:`send_file`.

    .. versionchanged:: 2.0
        ``path`` replaces the ``filename`` parameter.

    .. versionadded:: 2.0
        Moved the implementation to Werkzeug. This is now a wrapper to
        pass some Flask-specific arguments.

    .. versionadded:: 0.5
    amodulesa__file__aimportlibautilafind_specTEImportErrorEValueErroraspecaloaderagetcwdaget_filenameuNo root path can be found for the provided module uu. This can happen because the module came from an import hook that does not provide file name information or because it's a namespace package. In this case the root path needs to be explicitly provided.uFind the root path of a package, or the path that contains a
    module. If it cannot be found, returns the current working
    directory.

    Not to be confused with the value returned by :func:`find_package`.

    :meta private:
    w.a_split_blueprint_patharpartitionTw.a__doc__a__spec__aoriginahas_locationa__cached__aannotationsuimportlib.utilaosasyswtadatetimeTadatetimealru_cacheuwerkzeug.utilsuwerkzeug.exceptionsTaabortaabortTaredirectuwerkzeug.wrappersTaResponseaResponseaBaseResponseaglobalsTa_cv_requestTacurrent_appTarequestTarequest_ctxTasessionasignalsTamessage_flashedDareturnaboolaget_debug_flagTtDadefaultareturnaboolpaget_load_dotenvDagenerator_or_functionareturnut.Iterator[t.AnyStr] | t.Callable[..., t.Iterator[t.AnyStr]]ut.Iterator[t.AnyStr]Daargsareturnut.AnyaResponseDa_anchora_methoda_schemea_externalnnnnDaendpointa_anchora_methoda_schemea_externalavaluesareturnastrustr | Noneustr | Noneustr | Noneubool | Noneut.AnyastrTlnDalocationacodeaResponseareturnastraintutype[BaseResponse] | NoneaBaseResponseDacodeaargsakwargsareturnuint | BaseResponseut.Anyut.Anyut.NoReturnDatemplate_nameaattributeareturnastrput.Anyaget_template_attributeTamessageDamessageacategoryareturnastrpaNoneaflashTFTDawith_categoriesacategory_filterareturnaboolut.Iterable[str]ulist[str] | list[tuple[str, str]]aget_flashed_messagesDakwargsareturnut.Anyudict[str, t.Any]TnFntpnnDapath_or_fileamimetypeaas_attachmentadownload_nameaconditionalaetagalast_modifiedamax_ageareturnuos.PathLike[t.AnyStr] | str | t.BinaryIOustr | Noneaboolustr | Noneaboolubool | strudatetime | int | float | NoneuNone | (int | t.Callable[[str | None], int | None])aResponseDadirectoryapathakwargsareturnuos.PathLike[str] | struos.PathLike[str] | strut.AnyaResponseDaimport_nameareturnastrpaget_root_pathTamaxsizeDanameareturnastrulist[str]uflask\helpers.pyTwfacategory_filterTacategory_filteru<module flask.helpers>TakwargsTanameaoutTacodeaargsakwargsTaargsakwargsagenagenerator_or_functionTagenerator_or_functionTamessageacategoryaflashesaappTactxagenTagenTavalTawith_categoriesacategory_filteraflashesTadefaultavalTaimport_nameamodaspecaloaderafilepathTatemplate_nameaattributeTaargsTalocationacodeaResponseTapath_or_fileamimetypeaas_attachmentadownload_nameaconditionalaetagalast_modifiedamax_ageTadirectoryapathakwargsTagenerator_or_functionagenadecoratorageneratorawrapped_gTaendpointa_anchora_methoda_schemea_externalavalues.flask.json@5acurrent_appajsonadumpsadefaulta_defaulta_jsonuSerialize data as JSON.

    If :data:`~flask.current_app` is available, it will use its
    :meth:`app.json.dumps() <flask.json.provider.JSONProvider.dumps>`
    method, otherwise it will use :func:`json.dumps`.

    :param obj: The data to serialize.
    :param kwargs: Arguments passed to the ``dumps`` implementation.

    .. versionchanged:: 2.3
        The ``app`` parameter was removed.

    .. versionchanged:: 2.2
        Calls ``current_app.json.dumps``, allowing an app to override
        the behavior.

    .. versionchanged:: 2.0.2
        :class:`decimal.Decimal` is supported by converting to a string.

    .. versionchanged:: 2.0
        ``encoding`` will be removed in Flask 2.1.

    .. versionchanged:: 1.0.3
        ``app`` can be passed directly, rather than requiring an app
        context for configuration.
    adumpuSerialize data as JSON and write to a file.

    If :data:`~flask.current_app` is available, it will use its
    :meth:`app.json.dump() <flask.json.provider.JSONProvider.dump>`
    method, otherwise it will use :func:`json.dump`.

    :param obj: The data to serialize.
    :param fp: A file opened for writing text. Should use the UTF-8
        encoding to be valid JSON.
    :param kwargs: Arguments passed to the ``dump`` implementation.

    .. versionchanged:: 2.3
        The ``app`` parameter was removed.

    .. versionchanged:: 2.2
        Calls ``current_app.json.dump``, allowing an app to override
        the behavior.

    .. versionchanged:: 2.0
        Writing to a binary file, and the ``encoding`` argument, will be
        removed in Flask 2.1.
    aloadsuDeserialize data as JSON.

    If :data:`~flask.current_app` is available, it will use its
    :meth:`app.json.loads() <flask.json.provider.JSONProvider.loads>`
    method, otherwise it will use :func:`json.loads`.

    :param s: Text or UTF-8 bytes.
    :param kwargs: Arguments passed to the ``loads`` implementation.

    .. versionchanged:: 2.3
        The ``app`` parameter was removed.

    .. versionchanged:: 2.2
        Calls ``current_app.json.loads``, allowing an app to override
        the behavior.

    .. versionchanged:: 2.0
        ``encoding`` will be removed in Flask 2.1. The data must be a
        string or UTF-8 bytes.

    .. versionchanged:: 1.0.3
        ``app`` can be passed directly, rather than requiring an app
        context for configuration.
    aloaduDeserialize data as JSON read from a file.

    If :data:`~flask.current_app` is available, it will use its
    :meth:`app.json.load() <flask.json.provider.JSONProvider.load>`
    method, otherwise it will use :func:`json.load`.

    :param fp: A file opened for reading text or UTF-8 bytes.
    :param kwargs: Arguments passed to the ``load`` implementation.

    .. versionchanged:: 2.3
        The ``app`` parameter was removed.

    .. versionchanged:: 2.2
        Calls ``current_app.json.load``, allowing an app to override
        the behavior.

    .. versionchanged:: 2.2
        The ``app`` parameter will be removed in Flask 2.3.

    .. versionchanged:: 2.0
        ``encoding`` will be removed in Flask 2.1. The file must be text
        mode, or binary mode with UTF-8 bytes.
    aresponseuSerialize the given arguments as JSON, and return a
    :class:`~flask.Response` object with the ``application/json``
    mimetype. A dict or list returned from a view will be converted to a
    JSON response automatically without needing to call this.

    This requires an active request or application context, and calls
    :meth:`app.json.response() <flask.json.provider.JSONProvider.response>`.

    In debug mode, the output is formatted with indentation to make it
    easier to read. This may also be controlled by the provider.

    Either positional or keyword arguments can be given, not both.
    If no arguments are given, ``None`` is serialized.

    :param args: A single value to serialize, or multiple values to
        treat as a list to serialize.
    :param kwargs: Treat as a dict to serialize.

    .. versionchanged:: 2.2
        Calls ``current_app.json.response``, allowing an app to override
        the behavior.

    .. versionchanged:: 2.0.2
        :class:`decimal.Decimal` is supported by converting to a string.

    .. versionchanged:: 0.11
        Added support for serializing top-level arrays. This was a
        security risk in ancient browsers. See :ref:`security-json`.

    .. versionadded:: 0.2
    a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_flasku\not_existingTaNUITKA_PACKAGE_flask_jsonu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationslwtaglobalsTacurrent_applaproviderTa_defaultlDaobjakwargsareturnut.Anyut.AnyastrDaobjafpakwargsareturnut.Anyut.IO[str]ut.AnyaNoneDwsakwargsareturnustr | bytesut.Anyut.AnyDafpakwargsareturnut.IO[t.AnyStr]ut.Anyut.AnyDaargsakwargsareturnut.Anyut.AnyaResponseajsonifyuflask\json\__init__.pyu<module flask.json>TaobjafpakwargsTaobjakwargsTaargsakwargsTafpakwargsTwsakwargsu.flask.json.providerpqaweakrefaproxya_appuSerialize data as JSON.

        :param obj: The data to serialize.
        :param kwargs: May be passed to the underlying JSON library.
        awriteadumpsuSerialize data as JSON and write to a file.

        :param obj: The data to serialize.
        :param fp: A file opened for writing text. Should use the UTF-8
            encoding to be valid JSON.
        :param kwargs: May be passed to the underlying JSON library.
        uDeserialize data as JSON.

        :param s: Text or UTF-8 bytes.
        :param kwargs: May be passed to the underlying JSON library.
        aloadsareaduDeserialize data as JSON read from a file.

        :param fp: A file opened for reading text or UTF-8 bytes.
        :param kwargs: May be passed to the underlying JSON library.
        uapp.json.response() takes either args or kwargs, not bothla_prepare_response_objaresponse_classDamimetypeuapplication/jsonuSerialize the given arguments as JSON, and return a
        :class:`~flask.Response` object with the ``application/json``
        mimetype.

        The :func:`~flask.json.jsonify` function calls this method for
        the current application.

        Either positional or keyword arguments can be given, not both.
        If no arguments are given, ``None`` is serialized.

        :param args: A single value to serialize, or multiple values to
            treat as a list to serialize.
        :param kwargs: Treat as a dict to serialize.
        adateahttp_dateadecimalaDecimalauuidaUUIDadataclassesais_dataclassaasdicta__html__uObject of type a__name__uu is not JSON serializableadefaultasetdefaultaensure_asciiasort_keysajsonuSerialize data as JSON to a string.

        Keyword arguments are passed to :func:`json.dumps`. Sets some
        parameter defaults from the :attr:`default`,
        :attr:`ensure_ascii`, and :attr:`sort_keys` attributes.

        :param obj: The data to serialize.
        :param kwargs: Passed to :func:`json.dumps`.
        uDeserialize data as JSON from a string or bytes.

        :param s: Text or UTF-8 bytes.
        :param kwargs: Passed to :func:`json.loads`.
        acompactadebugaindentlaseparatorsTw,w:adump_argsw
amimetypeTamimetypeuSerialize the given arguments as JSON, and return a
        :class:`~flask.Response` object with it. The response mimetype
        will be "application/json" and can be changed with
        :attr:`mimetype`.

        If :attr:`compact` is ``False`` or debug mode is enabled, the
        output will be formatted to be easier to read.

        Either positional or keyword arguments can be given, not both.
        If no arguments are given, ``None`` is serialized.

        :param args: A single value to serialize, or multiple values to
            treat as a list to serialize.
        :param kwargs: Treat as a dict to serialize.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtadatetimeTadateuwerkzeug.httpTahttp_dateuflask.json.providera__module__uA standard set of JSON operations for an application. Subclasses
    of this can be used to customize JSON behavior or use different
    JSON libraries.

    To implement a provider for a specific library, subclass this base
    class and implement at least :meth:`dumps` and :meth:`loads`. All
    other methods have default implementations.

    To use a different provider, either subclass ``Flask`` and set
    :attr:`~flask.Flask.json_provider_class` to a provider class, or set
    :attr:`app.json <flask.Flask.json>` to an instance of the class.

    :param app: An application instance. This will be stored as a
        :class:`weakref.proxy` on the :attr:`_app` attribute.

    .. versionadded:: 2.2
    aJSONProvidera__qualname__DaappareturnaAppaNonea__init__uJSONProvider.__init__Daobjakwargsareturnut.Anyut.AnyastruJSONProvider.dumpsDaobjafpakwargsareturnut.Anyut.IO[str]ut.AnyaNoneadumpuJSONProvider.dumpDwsakwargsareturnustr | bytesut.Anyut.AnyuJSONProvider.loadsDafpakwargsareturnut.IO[t.AnyStr]ut.Anyut.AnyaloaduJSONProvider.loadDaargsakwargsareturnutuple[t.Any, ...]udict[str, t.Any]ut.AnyuJSONProvider._prepare_response_objDaargsakwargsareturnut.Anyut.AnyaResponsearesponseuJSONProvider.responseDwoareturnut.Anyut.Anya_defaulta__prepare__aDefaultJSONProvidera__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uProvide JSON operations using Python's built-in :mod:`json`
    library. Serializes the following additional data types:

    -   :class:`datetime.datetime` and :class:`datetime.date` are
        serialized to :rfc:`822` strings. This is the same as the HTTP
        date format.
    -   :class:`uuid.UUID` is serialized to a string.
    -   :class:`dataclasses.dataclass` is passed to
        :func:`dataclasses.asdict`.
    -   :class:`~markupsafe.Markup` (or any object with a ``__html__``
        method) will call the ``__html__`` method to get a string.
    a__annotations__astaticmethodut.Callable[[t.Any], t.Any]ubool | Noneuapplication/jsonuDefaultJSONProvider.dumpsuDefaultJSONProvider.loadsuDefaultJSONProvider.responsea__orig_bases__uflask\json\provider.pyu<module flask.json.provider>Ta__class__TaselfaappTwoTaselfaargsakwargsTaselfaobjafpakwargsTaselfaobjakwargsTaselfafpakwargsTaselfwsakwargsTaselfaargsakwargsadump_argsaobjTaselfaargsakwargsaobj.flask.json.tagaserializeruCreate a tagger for the given serializer.uCheck if the given value should be tagged by this tag.uConvert the Python object to an object that is a valid JSON type.
        The tag will be added later.uConvert the JSON representation back to the correct type. The tag
        will already be removed.akeyato_jsonuConvert the value to a valid JSON type and add the tag structure
        around it.atagsua__atag:nqnaitemsutoo many values to unpack (expected 2)aselfab64encodeadecodeTaasciiab64decodeacallablea__html__aMarkupaUUIDahexadatetimeahttp_dateaparse_dateaorderadefault_tagsaregisteruTag 'u' is already registered.aappendainsertuRegister a new tag with this serializer.

        :param tag_class: tag class to register. Will be instantiated with this
            serializer instance.
        :param force: overwrite an existing tag. If false (default), a
            :exc:`KeyError` is raised.
        :param index: index to insert the new tag in the tag order. Useful when
            the new tag is a special case of an existing tag. If ``None``
            (default), the tag is appended to the end of the order.

        :raise KeyError: if the tag key is already registered and ``force`` is
            not true.
        acheckavalueuConvert a value to a tagged representation if necessary.ato_pythonuConvert a tagged representation back to the original type.a_untag_scanauntagadumpsDaseparatorsTw,w:uTag the value and dump it to a compact JSON string.aloadsuLoad data from a JSON string and deserialized any tagged objects.u
Tagged JSON
~~~~~~~~~~~

A compact representation for lossless serialization of non-standard JSON
types. :class:`~flask.sessions.SecureCookieSessionInterface` uses this
to serialize the session data, but it may be useful in other places. It
can be extended to support other types.

.. autoclass:: TaggedJSONSerializer
    :members:

.. autoclass:: JSONTag
    :members:

Let's see an example that adds support for
:class:`~collections.OrderedDict`. Dicts don't have an order in JSON, so
to handle this we will dump the items as a list of ``[key, value]``
pairs. Subclass :class:`JSONTag` and give it the new key ``' od'`` to
identify the type. The session serializer processes dicts first, so
insert the new tag at the front of the order since ``OrderedDict`` must
be processed before ``dict``.

.. code-block:: python

    from flask.json.tag import JSONTag

    class TagOrderedDict(JSONTag):
        __slots__ = ('serializer',)
        key = ' od'

        def check(self, value):
            return isinstance(value, OrderedDict)

        def to_json(self, value):
            return [[k, self.serializer.tag(v)] for k, v in iteritems(value)]

        def to_python(self, value):
            return OrderedDict(value)

    app.session_interface.serializer.register(TagOrderedDict, index=0)
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtabase64Tab64decodelTab64encodeTadatetimeauuidTaUUIDamarkupsafeTaMarkupuwerkzeug.httpTahttp_dateTaparse_dateajsonTadumpslTaloadsuflask.json.taga__module__uBase class for defining type tags for :class:`TaggedJSONSerializer`.aJSONTaga__qualname__a__annotations__Taserializera__slots__astrDaserializerareturnaTaggedJSONSerializeraNonea__init__uJSONTag.__init__Davalueareturnut.AnyabooluJSONTag.checkDavalueareturnut.Anyut.AnyuJSONTag.to_jsonuJSONTag.to_pythonDavalueareturnut.Anyudict[str, t.Any]uJSONTag.taga__prepare__aTagDicta__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uTag for 1-item dicts whose only key matches a registered tag.

    Internally, the dict key is suffixed with `__`, and the suffix is removed
    when deserializing.
    u diuTagDict.checkuTagDict.to_jsonuTagDict.to_pythona__orig_bases__aPassDictuPassDict.checkuPassDict.to_jsonaTagTupleu tuTagTuple.checkuTagTuple.to_jsonuTagTuple.to_pythonaPassListuPassList.checkuPassList.to_jsonaTagBytesu buTagBytes.checkuTagBytes.to_jsonuTagBytes.to_pythonaTagMarkupuSerialize anything matching the :class:`~markupsafe.Markup` API by
    having a ``__html__`` method to the result of that method. Always
    deserializes to an instance of :class:`~markupsafe.Markup`.u muTagMarkup.checkuTagMarkup.to_jsonuTagMarkup.to_pythonaTagUUIDu uuTagUUID.checkuTagUUID.to_jsonuTagUUID.to_pythonaTagDateTimeu duTagDateTime.checkuTagDateTime.to_jsonuTagDateTime.to_pythonuSerializer that uses a tag system to compactly represent objects that
    are not JSON types. Passed as the intermediate serializer to
    :class:`itsdangerous.Serializer`.

    The following extra types are supported:

    * :class:`dict`
    * :class:`tuple`
    * :class:`bytes`
    * :class:`~markupsafe.Markup`
    * :class:`~uuid.UUID`
    * :class:`~datetime.datetime`
    aTaggedJSONSerializerTatagsaorderDareturnaNoneuTaggedJSONSerializer.__init__TFnDatag_classaforceaindexareturnutype[JSONTag]abooluint | NoneaNoneuTaggedJSONSerializer.registeruTaggedJSONSerializer.tagDavalueareturnudict[str, t.Any]ut.AnyuTaggedJSONSerializer.untaguTaggedJSONSerializer._untag_scanDavalueareturnut.AnyastruTaggedJSONSerializer.dumpsDavalueareturnastrut.AnyuTaggedJSONSerializer.loadsuflask\json\tag.pyu<module flask.json.tag>Ta__class__TaselfaserializerTaselfaclsTaselfavalueTaselfatag_classaforceaindexatagakeyTaselfavalueatagTaselfavalueakey.flask.logging7arequestaenvironuwsgi.errorsastderruFind the most appropriate error stream for the application. If a request
    is active, log to ``wsgi.errors``, otherwise use ``sys.stderr``.

    If you configure your own :class:`logging.StreamHandler`, you may want to
    use this for the stream. If you are using file or dict configuration and
    can't import this directly, you can refer to it as
    ``ext://flask.logging.wsgi_errors_stream``.
    agetEffectiveLevelacurrentahandlersapropagateaparentuCheck if there is a handler in the logging chain that will handle the
    given logger's :meth:`effective level <~logging.Logger.getEffectiveLevel>`.
    alevelu<genexpr>uhas_level_handler.<locals>.<genexpr>aloggingagetLoggeranameadebugasetLevelaDEBUGahas_level_handleraaddHandleradefault_handleruGet the Flask app's logger and configure it if needed.

    The logger name will be the same as
    :attr:`app.import_name <flask.Flask.name>`.

    When :attr:`~flask.Flask.debug` is enabled, set the logger level to
    :data:`logging.DEBUG` if it is not set.

    If there is no handler for the logger's effective level, add a
    :class:`~logging.StreamHandler` for
    :func:`~flask.logging.wsgi_errors_stream` with a basic format.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationslasyswtuwerkzeug.localTaLocalProxyaLocalProxyaglobalsTarequestlDareturnut.TextIOawsgi_errors_streamDaloggerareturnulogging.LoggeraboolaStreamHandlerasetFormatteraFormatterTu[%(asctime)s] %(levelname)s in %(module)s: %(message)sDaappareturnaAppulogging.Loggeracreate_loggeruflask\logging.pyTa.0ahandleralevelu<module flask.logging>TaappaloggerTaloggeralevelacurrentu.flask.sansio.appZjatimedeltaTasecondsa__class__a__init__Taimport_nameastatic_folderastatic_url_pathatemplate_folderaroot_pathaauto_find_instance_pathaisabsuIf an instance path is provided it must be absolute. A relative path was given instead.ainstance_pathamake_configaconfigamake_aborteraaborterajson_provider_classajsonaurl_build_error_handlersateardown_appcontext_funcsashell_context_processorsablueprintsaextensionsaurl_map_classTahost_matchingaurl_mapasubdomain_matchinga_got_first_requestuThe setup method 'uu' can no longer be called on the application. It has already handled its first request, any changes will not be applied consistently.
Make sure all imports, decorators, functions, etc. needed to set up the application are done before running it.aimport_namea__main__amodulesa__file__asplitextluThe name of the application.  This is usually the import name
        with the difference that it's guessed from the run file if the
        import name is main.  This name is used as a display name when
        Flask needs the name of the application.  It can be set and overridden
        to change the value.

        .. versionadded:: 0.8
        acreate_loggeruA standard Python :class:`~logging.Logger` for the app, with
        the same name as :attr:`name`.

        In debug mode, the logger's :attr:`~logging.Logger.level` will
        be set to :data:`~logging.DEBUG`.

        If there are no handlers configured, a default handler will be
        added. See :doc:`/logging` for more information.

        .. versionchanged:: 1.1.0
            The logger takes the same name as :attr:`name` rather than
            hard-coding ``"flask.app"``.

        .. versionchanged:: 1.0.0
            Behavior was simplified. The logger is always named
            ``"flask.app"``. The level is only set during configuration,
            it doesn't check ``app.debug`` each time. Only one format is
            used, not different ones depending on ``app.debug``. No
            handlers are removed, and a handler is only added if no
            handlers are already configured.

        .. versionadded:: 0.3
        acreate_jinja_environmentuThe Jinja environment used to load templates.

        The environment is created the first time this property is
        accessed. Changing :attr:`jinja_options` after that will have no
        effect.
        aroot_pathadefault_configaget_debug_flagaDEBUGaconfig_classuUsed to create the config attribute by the Flask constructor.
        The `instance_relative` parameter is passed in from the constructor
        of Flask (there named `instance_relative_config`) and indicates if
        the config should be relative to the instance path or the root path
        of the application.

        .. versionadded:: 0.8
        aaborter_classuCreate the object to assign to :attr:`aborter`. That object
        is called by :func:`flask.abort` to raise HTTP errors, and can
        be called directly as well.

        By default, this creates an instance of :attr:`aborter_class`,
        which defaults to :class:`werkzeug.exceptions.Aborter`.

        .. versionadded:: 2.2
        afind_packageutoo many values to unpack (expected 2)ajoinainstanceavaranameu-instanceuTries to locate the instance path if it was not provided to the
        constructor of the application class.  It will basically calculate
        the path to a folder named ``instance`` next to your main file or
        the package.

        .. versionadded:: 0.8
        aDispatchingJinjaLoaderuCreates the loader for the Jinja2 environment.  Can be used to
        override just the loader and keeping the rest unchanged.  It's
        discouraged to override this function.  Instead one should override
        the :meth:`jinja_loader` function instead.

        The global loader dispatches between the loaders of the application
        and the individual blueprints.

        .. versionadded:: 0.7
        aendswithTTu.htmlu.htmu.xmlu.xhtmlu.svguReturns ``True`` if autoescaping should be active for the given
        template name. If no template name is given, returns `True`.

        .. versionchanged:: 2.2
            Autoescaping is now enabled by default for ``.svg`` files.

        .. versionadded:: 0.5
        uWhether debug mode is enabled. When using ``flask run`` to start the
        development server, an interactive debugger will be shown for unhandled
        exceptions, and the server will be reloaded when code changes. This maps to the
        :data:`DEBUG` config key. It may not behave as expected if set late.

        **Do not enable debug mode when deploying in production.**

        Default: ``False``
        aTEMPLATES_AUTO_RELOADajinja_envaauto_reloadaregisteruRegister a :class:`~flask.Blueprint` on the application. Keyword
        arguments passed to this method will override the defaults set on the
        blueprint.

        Calls the blueprint's :meth:`~flask.Blueprint.register` method after
        recording the blueprint in the application's :attr:`blueprints`.

        :param blueprint: The blueprint to register.
        :param url_prefix: Blueprint routes will be prefixed with this.
        :param subdomain: Blueprint routes will match on this subdomain.
        :param url_defaults: Blueprint routes will use these default values for
            view arguments.
        :param options: Additional keyword arguments are passed to
            :class:`~flask.blueprints.BlueprintSetupState`. They can be
            accessed in :meth:`~flask.Blueprint.record` callbacks.

        .. versionchanged:: 2.0.1
            The ``name`` option can be used to change the (pre-dotted)
            name the blueprint is registered with. This allows the same
            blueprint to be registered multiple times with unique names
            for ``url_for``.

        .. versionadded:: 0.7
        avaluesuIterates over all blueprints by the order they were registered.

        .. versionadded:: 0.11
        a_endpoint_from_view_funcaendpointapopTamethodsnamethodsTaGETuAllowed methods must be a list of strings, for example: @app.route(..., methods=["POST"])aupperarequired_methodsaprovide_automatic_optionsaOPTIONSaaddTaOPTIONSaurl_rule_classaview_functionsagetuView function mapping is overwriting an existing endpoint function: DwfareturnaT_template_filterpadecoratoruApp.template_filter.<locals>.decoratoruA decorator that is used to register custom template filter.
        You can specify a name for the filter, otherwise the function
        name will be used. Example::

          @app.template_filter()
          def reverse(s):
              return s[::-1]

        :param name: the optional name of the filter, otherwise the
                     function name will be used.
        aselfaadd_template_filterTanameafiltersa__name__uRegister a custom template filter.  Works exactly like the
        :meth:`template_filter` decorator.

        :param name: the optional name of the filter, otherwise the
                     function name will be used.
        DwfareturnaT_template_testpuApp.template_test.<locals>.decoratoruA decorator that is used to register custom template test.
        You can specify a name for the test, otherwise the function
        name will be used. Example::

          @app.template_test()
          def is_prime(n):
              if n == 2:
                  return True
              for i in range(2, int(math.ceil(math.sqrt(n))) + 1):
                  if n % i == 0:
                      return False
              return True

        .. versionadded:: 0.10

        :param name: the optional name of the test, otherwise the
                     function name will be used.
        aadd_template_testatestsuRegister a custom template test.  Works exactly like the
        :meth:`template_test` decorator.

        .. versionadded:: 0.10

        :param name: the optional name of the test, otherwise the
                     function name will be used.
        DwfareturnaT_template_globalpuApp.template_global.<locals>.decoratoruA decorator that is used to register a custom template global function.
        You can specify a name for the global function, otherwise the function
        name will be used. Example::

            @app.template_global()
            def double(n):
                return 2 * n

        .. versionadded:: 0.10

        :param name: the optional name of the global function, otherwise the
                     function name will be used.
        aadd_template_globalaglobalsuRegister a custom template global function. Works exactly like the
        :meth:`template_global` decorator.

        .. versionadded:: 0.10

        :param name: the optional name of the global function, otherwise the
                     function name will be used.
        aappenduRegisters a function to be called when the application
        context is popped. The application context is typically popped
        after the request context for each request, at the end of CLI
        commands, or after a manually pushed context ends.

        .. code-block:: python

            with app.app_context():
                ...

        When the ``with`` block exits (or ``ctx.pop()`` is called), the
        teardown functions are called just before the app context is
        made inactive. Since a request context typically also manages an
        application context it would also be called when you pop a
        request context.

        When a teardown function was called because of an unhandled
        exception it will be passed an error object. If an
        :meth:`errorhandler` is registered, it will handle the exception
        and the teardown will not receive it.

        Teardown functions must avoid raising exceptions. If they
        execute code that might fail they must surround that code with a
        ``try``/``except`` block and log any errors.

        The return values of teardown functions are ignored.

        .. versionadded:: 0.9
        uRegisters a shell context processor function.

        .. versionadded:: 0.11
        a_get_exc_class_and_codeTnanamesaerror_handler_specaexc_classa__mro__ahandler_mapuReturn a registered error handler for an exception in this order:
        blueprint handler for a specific code, app handler for a specific code,
        blueprint handler for an exception class, app handler for an exception
        class, or ``None`` if a suitable handler is not found.
        aTRAP_HTTP_EXCEPTIONSaTRAP_BAD_REQUEST_ERRORSadebugaBadRequestKeyErroraBadRequestuChecks if an HTTP exception should be trapped or not.  By default
        this will return ``False`` for all exceptions except for a bad request
        key error if ``TRAP_BAD_REQUEST_ERRORS`` is set to ``True``.  It
        also returns ``True`` if ``TRAP_HTTP_EXCEPTIONS`` is set to ``True``.

        This is called for all HTTP exceptions raised by a view function.
        If it returns ``True`` for any exception the error handler for this
        exception is not called and it shows up as regular exception in the
        traceback.  This is helpful for debugging implicitly raised HTTP
        exceptions.

        .. versionchanged:: 1.0
            Bad request errors are not trapped by default in debug mode.

        .. versionadded:: 0.8
        a_wz_redirectaresponse_classTacodeaResponseuCreate a redirect response object.

        This is called by :func:`flask.redirect`, and can be called
        directly as well.

        :param location: The URL to redirect to.
        :param code: The status code for the redirect.

        .. versionadded:: 2.2
            Moved from ``flask.redirect``, which calls this method.
        w.achaina_split_blueprint_patharpartitionTw.aurl_default_functionsuInjects the URL defaults for the given endpoint directly into
        the values dictionary passed.  This is used internally and
        automatically called on URL building.

        .. versionadded:: 0.7
        aerroraBuildErrorarvaexc_infoluCalled by :meth:`.url_for` if a
        :exc:`~werkzeug.routing.BuildError` was raised. If this returns
        a value, it will be returned by ``url_for``, otherwise the error
        will be re-raised.

        Each function in :attr:`url_build_error_handlers` is called with
        ``error``, ``endpoint`` and ``values``. If a function returns
        ``None`` or raises a ``BuildError``, it is skipped. Otherwise,
        its return value is returned by ``url_for``.

        :param error: The active ``BuildError`` being handled.
        :param endpoint: The endpoint being built.
        :param values: The keyword arguments passed to ``url_for``.
        a__doc__a__spec__aoriginahas_locationa__cached__aannotationsaloggingaosasyswtadatetimeTatimedeltaaitertoolsTachainuwerkzeug.exceptionsTaAborteraAborterTaBadRequestTaBadRequestKeyErroruwerkzeug.routingTaBuildErrorTaMapaMapTaRuleaRuleuwerkzeug.sansio.responseTaResponseaResponseuwerkzeug.utilsTacached_propertyacached_propertyTaredirectaredirectTatypinglatypingaftTaConfigaConfigTaConfigAttributeaConfigAttributeactxTa_AppCtxGlobalsa_AppCtxGlobalsahelpersTa_split_blueprint_pathTaget_debug_flagujson.providerTaDefaultJSONProvideraDefaultJSONProviderTaJSONProvideraJSONProviderTacreate_loggeratemplatingTaDispatchingJinjaLoaderTaEnvironmentaEnvironmentascaffoldTa_endpoint_from_view_funcTafind_packageTaScaffoldaScaffoldTasetupmethodasetupmethodaTypeVaraShellContextProcessorCallableTaT_shell_context_processorTaboundaT_shell_context_processoraTeardownCallableTaT_teardownaT_teardownaTemplateFilterCallableTaT_template_filteraT_template_filteraTemplateGlobalCallableTaT_template_globalaT_template_globalaTemplateTestCallableTaT_template_testaT_template_testDavalueareturnutimedelta | int | Noneutimedelta | Nonea_make_timedeltaa__prepare__aAppa__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uflask.sansio.appa__module__uThe flask object implements a WSGI application and acts as the central
    object.  It is passed the name of the module or package of the
    application.  Once it is created it will act as a central registry for
    the view functions, the URL rules, template configuration and much more.

    The name of the package is used to resolve resources from inside the
    package or the folder the module is contained in depending on if the
    package parameter resolves to an actual python package (a folder with
    an :file:`__init__.py` file inside) or a standard module (just a ``.py`` file).

    For more information about resource loading, see :func:`open_resource`.

    Usually you create a :class:`Flask` instance in your main module or
    in the :file:`__init__.py` file of your package like this::

        from flask import Flask
        app = Flask(__name__)

    .. admonition:: About the First Parameter

        The idea of the first parameter is to give Flask an idea of what
        belongs to your application.  This name is used to find resources
        on the filesystem, can be used by extensions to improve debugging
        information and a lot more.

        So it's important what you provide there.  If you are using a single
        module, `__name__` is always the correct value.  If you however are
        using a package, it's usually recommended to hardcode the name of
        your package there.

        For example if your application is defined in :file:`yourapplication/app.py`
        you should create it with one of the two versions below::

            app = Flask('yourapplication')
            app = Flask(__name__.split('.')[0])

        Why is that?  The application will work even with `__name__`, thanks
        to how resources are looked up.  However it will make debugging more
        painful.  Certain extensions can make assumptions based on the
        import name of your application.  For example the Flask-SQLAlchemy
        extension will look for the code in your application that triggered
        an SQL query in debug mode.  If the import name is not properly set
        up, that debugging information is lost.  (For example it would only
        pick up SQL queries in `yourapplication.app` and not
        `yourapplication.views.frontend`)

    .. versionadded:: 0.7
       The `static_url_path`, `static_folder`, and `template_folder`
       parameters were added.

    .. versionadded:: 0.8
       The `instance_path` and `instance_relative_config` parameters were
       added.

    .. versionadded:: 0.11
       The `root_path` parameter was added.

    .. versionadded:: 1.0
       The ``host_matching`` and ``static_host`` parameters were added.

    .. versionadded:: 1.0
       The ``subdomain_matching`` parameter was added. Subdomain
       matching needs to be enabled manually now. Setting
       :data:`SERVER_NAME` does not implicitly enable it.

    :param import_name: the name of the application package
    :param static_url_path: can be used to specify a different path for the
                            static files on the web.  Defaults to the name
                            of the `static_folder` folder.
    :param static_folder: The folder with static files that is served at
        ``static_url_path``. Relative to the application ``root_path``
        or an absolute path. Defaults to ``'static'``.
    :param static_host: the host to use when adding the static route.
        Defaults to None. Required when using ``host_matching=True``
        with a ``static_folder`` configured.
    :param host_matching: set ``url_map.host_matching`` attribute.
        Defaults to False.
    :param subdomain_matching: consider the subdomain relative to
        :data:`SERVER_NAME` when matching routes. Defaults to False.
    :param template_folder: the folder that contains the templates that should
                            be used by the application.  Defaults to
                            ``'templates'`` folder in the root path of the
                            application.
    :param instance_path: An alternative instance path for the application.
                          By default the folder ``'instance'`` next to the
                          package or module is assumed to be the instance
                          path.
    :param instance_relative_config: if set to ``True`` relative filenames
                                     for loading the config are assumed to
                                     be relative to the instance path instead
                                     of the application root.
    :param root_path: The path to the root of the application files.
        This should only be set manually when it can't be detected
        automatically, such as for namespace packages.
    a__qualname__a__annotations__ajinja_environmentaapp_ctx_globals_classaboolTaTESTINGatestingaUnionastrabytesTaSECRET_KEYasecret_keyTaPERMANENT_SESSION_LIFETIMETaget_converterapermanent_session_lifetimeutype[JSONProvider]ajinja_optionsudict[str, t.Any]atest_client_classutype[FlaskClient] | Noneatest_cli_runner_classutype[FlaskCliRunner] | Noneutype[Response]TnastaticnFpatemplatesnFnD
aimport_nameastatic_url_pathastatic_folderastatic_hostahost_matchingasubdomain_matchingatemplate_folderainstance_pathainstance_relative_configaroot_pathastrustr | Noneustr | os.PathLike[str] | Noneustr | Noneaboolpustr | os.PathLike[str] | Noneustr | Noneaboolustr | NoneuApp.__init__Daf_nameareturnastraNonea_check_setup_finisheduApp._check_setup_finishedDareturnastruApp.nameDareturnulogging.LoggeraloggeruApp.loggerDareturnaEnvironmentuApp.jinja_envuApp.create_jinja_environmentTFDainstance_relativeareturnaboolaConfiguApp.make_configDareturnaAborteruApp.make_aborteruApp.auto_find_instance_pathDareturnaDispatchingJinjaLoaderacreate_global_jinja_loaderuApp.create_global_jinja_loaderDafilenameareturnastraboolaselect_jinja_autoescapeuApp.select_jinja_autoescapeapropertyDareturnabooluApp.debugasetterDavalueareturnaboolaNoneDablueprintaoptionsareturnaBlueprintut.AnyaNonearegister_blueprintuApp.register_blueprintDareturnut.ValuesView[Blueprint]aiter_blueprintsuApp.iter_blueprintsTnnnDaruleaendpointaview_funcaprovide_automatic_optionsaoptionsareturnastrustr | Noneuft.RouteCallable | Noneubool | Noneut.AnyaNoneaadd_url_ruleuApp.add_url_ruleDanameareturnustr | Noneut.Callable[[T_template_filter], T_template_filter]atemplate_filteruApp.template_filterDwfanameareturnuft.TemplateFilterCallableustr | NoneaNoneuApp.add_template_filterDanameareturnustr | Noneut.Callable[[T_template_test], T_template_test]atemplate_testuApp.template_testDwfanameareturnuft.TemplateTestCallableustr | NoneaNoneuApp.add_template_testDanameareturnustr | Noneut.Callable[[T_template_global], T_template_global]atemplate_globaluApp.template_globalDwfanameareturnuft.TemplateGlobalCallableustr | NoneaNoneuApp.add_template_globalDwfareturnaT_teardownpateardown_appcontextuApp.teardown_appcontextDwfareturnaT_shell_context_processorpashell_context_processoruApp.shell_context_processorDweablueprintsareturnaExceptionulist[str]uft.ErrorHandlerCallable | Nonea_find_error_handleruApp._find_error_handlerDweareturnaExceptionaboolatrap_http_exceptionuApp.trap_http_exceptionDaerrorareturnuBaseException | NoneabooluThis is called to figure out if an error should be ignored
        or not as far as the teardown system is concerned.  If this
        function returns ``True`` then the teardown handlers will not be
        passed the error.

        .. versionadded:: 0.10
        ashould_ignore_erroruApp.should_ignore_errorTlDalocationacodeareturnastraintaBaseResponseuApp.redirectDaendpointavaluesareturnastrudict[str, t.Any]aNoneainject_url_defaultsuApp.inject_url_defaultsDaerroraendpointavaluesareturnaBuildErrorastrudict[str, t.Any]astrahandle_url_build_erroruApp.handle_url_build_errora__orig_bases__uflask\sansio\app.pyu<module flask.sansio.app>Ta__class__Taselfaimport_nameastatic_url_pathastatic_folderastatic_hostahost_matchingasubdomain_matchingatemplate_folderainstance_pathainstance_relative_configaroot_patha__class__Taselfaf_nameTaselfweablueprintsaexc_classacodeanameswcanameahandler_mapaclsahandlerTavalueTaselfwfanameT
aselfaruleaendpointaview_funcaprovide_automatic_optionsaoptionsamethodsarequired_methodsarule_objaold_funcTaselfaprefixapackage_pathTaselfTaselfavalueTwfaselfanameTanameaselfTaselfaerroraendpointavaluesahandlerarvweTaselfaendpointavaluesanamesanameafuncTaselfainstance_relativearoot_pathadefaultsTaselfafnTaselfalocationacodeTaselfablueprintaoptionsTaselfafilenameTaselfwfTaselfaerrorTaselfanameadecoratorTaselfweatrap_bad_request.flask.sansio.blueprintsKAAaappablueprintaoptionsafirst_registrationagetTasubdomainasubdomainTaurl_prefixaurl_prefixanameTaname_prefixuaname_prefixaurl_values_defaultsaurl_defaultsaupdateTaurl_defaultsTw/arstripTw/alstripa_endpoint_from_view_funcadefaultsapopTadefaultsaadd_url_ruleuw.uA helper method to register a rule (and optionally a view function)
        to the application.  The endpoint is automatically prefixed with the
        blueprint's name.
        a__class__a__init__Taimport_nameastatic_folderastatic_url_pathatemplate_folderaroot_pathu'name' may not be empty.u'name' may not contain a dot '.' character.adeferred_functionsacli_groupa_blueprintsa_got_registered_onceuThe setup method 'u' can no longer be called on the blueprint 'u'. It has already been registered at least once, any changes will not be applied consistently.
Make sure all imports, decorators, functions, etc. needed to set up the blueprint are done before registering it.aappenduRegisters a function that is called when the blueprint is
        registered on the application.  This function is called with the
        state as argument as returned by the :meth:`make_setup_state`
        method.
        DastateareturnaBlueprintSetupStateaNoneawrapperuBlueprint.record_once.<locals>.wrapperarecordaupdate_wrapperuWorks like :meth:`record` but wraps the function in another
        function that will ensure the function is only called once.  If the
        blueprint is registered a second time on the application, the
        function passed is not called.
        afuncaBlueprintSetupStateuCreates an instance of :meth:`~flask.blueprints.BlueprintSetupState`
        object that is later passed to the register callback functions.
        Subclasses can override this to return a subclass of the setup state.
        uCannot register a blueprint on itselfuRegister a :class:`~flask.Blueprint` on this blueprint. Keyword
        arguments passed to this method will override the defaults set
        on the blueprint.

        .. versionchanged:: 2.0.1
            The ``name`` option can be used to change the (pre-dotted)
            name the blueprint is registered with. This allows the same
            blueprint to be registered multiple times with unique names
            for ``url_for``.

        .. versionadded:: 2.0
        ablueprintsathisua differentu 'w'uThe name 'u' is already registered for u blueprintu. Use 'name=' to provide a unique name.avaluesamake_setup_stateahas_static_folderastatic_url_pathu/<path:filename>asend_static_fileastaticTaview_funcaendpointa_merge_blueprint_funcsastateacliacommandsa_sentinelaadd_commandutoo many values to unpack (expected 2)acopyaregisteruCalled by :meth:`Flask.register_blueprint` to register all
        views and callbacks registered on the blueprint with the
        application. Creates a :class:`.BlueprintSetupState` and calls
        each :meth:`record` callback with it.

        :param app: The application this blueprint is being registered
            with.
        :param options: Keyword arguments forwarded from
            :meth:`~Flask.register_blueprint`.

        .. versionchanged:: 2.3
            Nested blueprints now correctly apply subdomains.

        .. versionchanged:: 2.1
            Registering the same blueprint with the same name multiple
            times is an error.

        .. versionchanged:: 2.0.1
            Nested blueprints are registered with their dotted name.
            This allows different blueprints with the same name to be
            nested at different locations.

        .. versionchanged:: 2.0.1
            The ``name`` option can be used to change the (pre-dotted)
            name the blueprint is registered with. This allows the same
            blueprint to be registered multiple times with unique names
            for ``url_for``.
        aselfu<genexpr>uBlueprint.register.<locals>.<genexpr>Dabp_dictaparent_dictareturnudict[ft.AppOrBlueprintKey, list[t.Any]]udict[ft.AppOrBlueprintKey, list[t.Any]]aNoneaextenduBlueprint._merge_blueprint_funcs.<locals>.extendaerror_handler_specaitemsadefaultdictaview_functionsabefore_request_funcsaafter_request_funcsateardown_request_funcsaurl_default_functionsaurl_value_preprocessorsatemplate_context_processorsu'endpoint' may not contain a dot '.' character.a__name__u'view_func' name may not contain a dot '.' character.u<lambda>uBlueprint.add_url_rule.<locals>.<lambda>uRegister a URL rule with the blueprint. See :meth:`.Flask.add_url_rule` for
        full documentation.

        The URL rule is prefixed with the blueprint's URL prefix. The endpoint name,
        used with :func:`url_for`, is prefixed with the blueprint's name.
        aruleaendpointaview_funcaprovide_automatic_optionsDwfareturnaT_template_filterpadecoratoruBlueprint.app_template_filter.<locals>.decoratoruRegister a template filter, available in any template rendered by the
        application. Equivalent to :meth:`.Flask.template_filter`.

        :param name: the optional name of the filter, otherwise the
                     function name will be used.
        aadd_app_template_filterTanamearegister_templateuBlueprint.add_app_template_filter.<locals>.register_templatearecord_onceuRegister a template filter, available in any template rendered by the
        application. Works like the :meth:`app_template_filter` decorator. Equivalent to
        :meth:`.Flask.add_template_filter`.

        :param name: the optional name of the filter, otherwise the
                     function name will be used.
        wfajinja_envafiltersDwfareturnaT_template_testpuBlueprint.app_template_test.<locals>.decoratoruRegister a template test, available in any template rendered by the
        application. Equivalent to :meth:`.Flask.template_test`.

        .. versionadded:: 0.10

        :param name: the optional name of the test, otherwise the
                     function name will be used.
        aadd_app_template_testuBlueprint.add_app_template_test.<locals>.register_templateuRegister a template test, available in any template rendered by the
        application. Works like the :meth:`app_template_test` decorator. Equivalent to
        :meth:`.Flask.add_template_test`.

        .. versionadded:: 0.10

        :param name: the optional name of the test, otherwise the
                     function name will be used.
        atestsDwfareturnaT_template_globalpuBlueprint.app_template_global.<locals>.decoratoruRegister a template global, available in any template rendered by the
        application. Equivalent to :meth:`.Flask.template_global`.

        .. versionadded:: 0.10

        :param name: the optional name of the global, otherwise the
                     function name will be used.
        aadd_app_template_globaluBlueprint.add_app_template_global.<locals>.register_templateuRegister a template global, available in any template rendered by the
        application. Works like the :meth:`app_template_global` decorator. Equivalent to
        :meth:`.Flask.add_template_global`.

        .. versionadded:: 0.10

        :param name: the optional name of the global, otherwise the
                     function name will be used.
        aglobalsuBlueprint.before_app_request.<locals>.<lambda>uLike :meth:`before_request`, but before every request, not only those handled
        by the blueprint. Equivalent to :meth:`.Flask.before_request`.
        asetdefaultuBlueprint.after_app_request.<locals>.<lambda>uLike :meth:`after_request`, but after every request, not only those handled
        by the blueprint. Equivalent to :meth:`.Flask.after_request`.
        uBlueprint.teardown_app_request.<locals>.<lambda>uLike :meth:`teardown_request`, but after every request, not only those
        handled by the blueprint. Equivalent to :meth:`.Flask.teardown_request`.
        uBlueprint.app_context_processor.<locals>.<lambda>uLike :meth:`context_processor`, but for templates rendered by every view, not
        only by the blueprint. Equivalent to :meth:`.Flask.context_processor`.
        DwfareturnaT_error_handlerpuBlueprint.app_errorhandler.<locals>.decoratoruLike :meth:`errorhandler`, but for every request, not only those handled by
        the blueprint. Equivalent to :meth:`.Flask.errorhandler`.
        afrom_blueprintuBlueprint.app_errorhandler.<locals>.decorator.<locals>.from_blueprintaerrorhandleracodeuBlueprint.app_url_value_preprocessor.<locals>.<lambda>uLike :meth:`url_value_preprocessor`, but for every request, not only those
        handled by the blueprint. Equivalent to :meth:`.Flask.url_value_preprocessor`.
        uBlueprint.app_url_defaults.<locals>.<lambda>uLike :meth:`url_defaults`, but for every request, not only those handled by
        the blueprint. Equivalent to :meth:`.Flask.url_defaults`.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaoswtacollectionsTadefaultdictlTatypinglatypingaftascaffoldTa_endpoint_from_view_funclTa_sentinelTaScaffoldaScaffoldTasetupmethodasetupmethodaCallableTLaBlueprintSetupStatenaDeferredSetupFunctionaTypeVaraAfterRequestCallableaAnyTaT_after_requestTaboundaT_after_requestaBeforeRequestCallableTaT_before_requestaT_before_requestaErrorHandlerCallableTaT_error_handleraT_error_handleraTeardownCallableTaT_teardownaT_teardownaTemplateContextProcessorCallableTaT_template_context_processoraT_template_context_processoraTemplateFilterCallableTaT_template_filteraT_template_filteraTemplateGlobalCallableTaT_template_globalaT_template_globalaTemplateTestCallableTaT_template_testaT_template_testaURLDefaultCallableTaT_url_defaultsaT_url_defaultsaURLValuePreprocessorCallableTaT_url_value_preprocessoraT_url_value_preprocessoruflask.sansio.blueprintsa__module__uTemporary holder object for registering a blueprint with the
    application.  An instance of this class is created by the
    :meth:`~flask.Blueprint.make_setup_state` method and later passed
    to all register callback functions.
    a__qualname__Dablueprintaappaoptionsafirst_registrationareturnaBlueprintaApput.AnyaboolaNoneuBlueprintSetupState.__init__TnnDaruleaendpointaview_funcaoptionsareturnastrustr | Noneuft.RouteCallable | Noneut.AnyaNoneuBlueprintSetupState.add_url_rulea__prepare__aBlueprinta__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uRepresents a blueprint, a collection of routes and other
    app-related functions that can be registered on a real application
    later.

    A blueprint is an object that allows defining application functions
    without requiring an application object ahead of time. It uses the
    same decorators as :class:`~flask.Flask`, but defers the need for an
    application by recording them for later registration.

    Decorating a function with a blueprint creates a deferred function
    that is called with :class:`~flask.blueprints.BlueprintSetupState`
    when the blueprint is registered on an application.

    See :doc:`/blueprints` for more information.

    :param name: The name of the blueprint. Will be prepended to each
        endpoint name.
    :param import_name: The name of the blueprint package, usually
        ``__name__``. This helps locate the ``root_path`` for the
        blueprint.
    :param static_folder: A folder with static files that should be
        served by the blueprint's static route. The path is relative to
        the blueprint's root path. Blueprint static files are disabled
        by default.
    :param static_url_path: The url to serve static files from.
        Defaults to ``static_folder``. If the blueprint does not have
        a ``url_prefix``, the app's static route will take precedence,
        and the blueprint's static files won't be accessible.
    :param template_folder: A folder with templates that should be added
        to the app's template search path. The path is relative to the
        blueprint's root path. Blueprint templates are disabled by
        default. Blueprint templates have a lower precedence than those
        in the app's templates folder.
    :param url_prefix: A path to prepend to all of the blueprint's URLs,
        to make them distinct from the rest of the app's routes.
    :param subdomain: A subdomain that blueprint routes will match on by
        default.
    :param url_defaults: A dict of default values that blueprint routes
        will receive by default.
    :param root_path: By default, the blueprint will automatically set
        this based on ``import_name``. In certain situations this
        automatic detection can fail, so the path can be specified
        manually instead.

    .. versionchanged:: 1.1.0
        Blueprints have a ``cli`` group to register nested CLI commands.
        The ``cli_group`` parameter controls the name of the group under
        the ``flask`` command.

    .. versionadded:: 0.7
    D
anameaimport_nameastatic_folderastatic_url_pathatemplate_folderaurl_prefixasubdomainaurl_defaultsaroot_pathacli_groupastrpustr | os.PathLike[str] | Noneustr | Noneustr | os.PathLike[str] | Noneustr | Noneustr | Noneudict[str, t.Any] | Noneustr | Noneustr | NoneuBlueprint.__init__Daf_nameareturnastraNonea_check_setup_finisheduBlueprint._check_setup_finishedDafuncareturnaDeferredSetupFunctionaNoneuBlueprint.recorduBlueprint.record_onceTFDaappaoptionsafirst_registrationareturnaAppudict[str, t.Any]aboolaBlueprintSetupStateuBlueprint.make_setup_stateDablueprintaoptionsareturnaBlueprintut.AnyaNonearegister_blueprintuBlueprint.register_blueprintDaappaoptionsareturnaAppudict[str, t.Any]aNoneuBlueprint.registerDaappanameareturnaAppastraNoneuBlueprint._merge_blueprint_funcsTnnnDaruleaendpointaview_funcaprovide_automatic_optionsaoptionsareturnastrustr | Noneuft.RouteCallable | Noneubool | Noneut.AnyaNoneuBlueprint.add_url_ruleTnDanameareturnustr | Noneut.Callable[[T_template_filter], T_template_filter]aapp_template_filteruBlueprint.app_template_filterDwfanameareturnuft.TemplateFilterCallableustr | NoneaNoneuBlueprint.add_app_template_filterDanameareturnustr | Noneut.Callable[[T_template_test], T_template_test]aapp_template_testuBlueprint.app_template_testDwfanameareturnuft.TemplateTestCallableustr | NoneaNoneuBlueprint.add_app_template_testDanameareturnustr | Noneut.Callable[[T_template_global], T_template_global]aapp_template_globaluBlueprint.app_template_globalDwfanameareturnuft.TemplateGlobalCallableustr | NoneaNoneuBlueprint.add_app_template_globalDwfareturnaT_before_requestpabefore_app_requestuBlueprint.before_app_requestDwfareturnaT_after_requestpaafter_app_requestuBlueprint.after_app_requestDwfareturnaT_teardownpateardown_app_requestuBlueprint.teardown_app_requestDwfareturnaT_template_context_processorpaapp_context_processoruBlueprint.app_context_processorDacodeareturnutype[Exception] | intut.Callable[[T_error_handler], T_error_handler]aapp_errorhandleruBlueprint.app_errorhandlerDwfareturnaT_url_value_preprocessorpaapp_url_value_preprocessoruBlueprint.app_url_value_preprocessorDwfareturnaT_url_defaultspaapp_url_defaultsuBlueprint.app_url_defaultsa__orig_bases__uflask\sansio\blueprints.pyTa.0abpaselfTwsaruleaendpointaview_funcaprovide_automatic_optionsaoptionsTaendpointaoptionsaprovide_automatic_optionsaruleaview_funcTwswfTwfu<module flask.sansio.blueprints>Ta__class__Taselfanameaimport_nameastatic_folderastatic_url_pathatemplate_folderaurl_prefixasubdomainaurl_defaultsaroot_pathacli_groupa__class__Taselfablueprintaappaoptionsafirst_registrationasubdomainaurl_prefixTaselfaf_nameTaselfaappanameaextendakeyavalueaendpointafuncTaselfwfanamearegister_templateTaselfaruleaendpointaview_funcaprovide_automatic_optionsaoptionsTaselfaruleaendpointaview_funcaoptionsadefaultsTaselfwfTaselfacodeadecoratorTaselfanameadecoratorTwfafrom_blueprintaselfTacodeaselfTwfaselfanameTanameaselfTabp_dictaparent_dictakeyavaluesanameTastateacodewfTacodewfTaselfaappaoptionsafirst_registrationTaselfafuncTaselfafuncawrapperTaselfaappaoptionsaname_prefixaself_nameanameabp_descaexisting_atafirst_bp_registrationafirst_name_registrationastateadeferredacli_resolved_groupablueprintabp_optionsabp_url_prefixabp_subdomainTaselfablueprintaoptionsTastatewfanameTwfanameTastateafuncTafunc.flask.sansio
a_NamespacePathluflask.sansioapathajoinaenvironagetTaNUITKA_PACKAGE_flasku\not_existingasansioTaNUITKA_PACKAGE_flask_sansiou\not_existinga__path__uflask\sansiou.flask.sansio.scaffoldI2a__name__DaselfaargsakwargsareturnaScaffoldut.Anyut.Anyut.Anyawrapper_funcusetupmethod.<locals>.wrapper_funcacastwFaupdate_wrappera_check_setup_finishedaf_namewfaimport_nameastatic_folderastatic_url_pathatemplate_folderaget_root_patharoot_pathaview_functionsadefaultdictu<lambda>uScaffold.__init__.<locals>.<lambda>aerror_handler_specTOlistabefore_request_funcsaafter_request_funcsateardown_request_funcsa_default_template_ctx_processoratemplate_context_processorsaurl_value_preprocessorsaurl_default_functionsTOdictw<uw anamew>a_static_folderajoinuThe absolute path to the configured static folder. ``None``
        if no static folder is set.
        afspatharstripTu\/u``True`` if :attr:`static_folder` is set.

        .. versionadded:: 0.5
        a_static_url_pathw/uThe URL prefix that the static route will be accessible from.

        If it was not configured during init, it is derived from
        :attr:`static_folder`.
        Tw/aFileSystemLoaderuThe Jinja loader for this object's templates. By default this
        is a class :class:`jinja2.loaders.FileSystemLoader` to
        :attr:`template_folder` if it is set.

        .. versionadded:: 0.5
        amethodsuUse the 'route' decorator to use the 'methods' argument.aroutea_method_routeaGETuShortcut for :meth:`route` with ``methods=["GET"]``.

        .. versionadded:: 2.0
        aPOSTuShortcut for :meth:`route` with ``methods=["POST"]``.

        .. versionadded:: 2.0
        aPUTuShortcut for :meth:`route` with ``methods=["PUT"]``.

        .. versionadded:: 2.0
        aDELETEuShortcut for :meth:`route` with ``methods=["DELETE"]``.

        .. versionadded:: 2.0
        aPATCHuShortcut for :meth:`route` with ``methods=["PATCH"]``.

        .. versionadded:: 2.0
        DwfareturnaT_routepadecoratoruScaffold.route.<locals>.decoratoruDecorate a view function to register it with the given URL
        rule and options. Calls :meth:`add_url_rule`, which has more
        details about the implementation.

        .. code-block:: python

            @app.route("/")
            def index():
                return "Hello, World!"

        See :ref:`url-route-registrations`.

        The endpoint name for the route defaults to the name of the view
        function if the ``endpoint`` parameter isn't passed.

        The ``methods`` parameter defaults to ``["GET"]``. ``HEAD`` and
        ``OPTIONS`` are added automatically.

        :param rule: The URL rule string.
        :param options: Extra options passed to the
            :class:`~werkzeug.routing.Rule` object.
        aoptionsapopTaendpointnaselfaadd_url_rulearuleuRegister a rule for routing incoming requests and building
        URLs. The :meth:`route` decorator is a shortcut to call this
        with the ``view_func`` argument. These are equivalent:

        .. code-block:: python

            @app.route("/")
            def index():
                ...

        .. code-block:: python

            def index():
                ...

            app.add_url_rule("/", view_func=index)

        See :ref:`url-route-registrations`.

        The endpoint name for the route defaults to the name of the view
        function if the ``endpoint`` parameter isn't passed. An error
        will be raised if a function has already been registered for the
        endpoint.

        The ``methods`` parameter defaults to ``["GET"]``. ``HEAD`` is
        always added automatically, and ``OPTIONS`` is added
        automatically by default.

        ``view_func`` does not necessarily need to be passed, but if the
        rule should participate in routing an endpoint name must be
        associated with a view function at some point with the
        :meth:`endpoint` decorator.

        .. code-block:: python

            app.add_url_rule("/", endpoint="index")

            @app.endpoint("index")
            def index():
                ...

        If ``view_func`` has a ``required_methods`` attribute, those
        methods are added to the passed and automatic methods. If it
        has a ``provide_automatic_methods`` attribute, it is used as the
        default if the parameter is not passed.

        :param rule: The URL rule string.
        :param endpoint: The endpoint name to associate with the rule
            and view function. Used when routing and building URLs.
            Defaults to ``view_func.__name__``.
        :param view_func: The view function to associate with the
            endpoint name.
        :param provide_automatic_options: Add the ``OPTIONS`` method and
            respond to ``OPTIONS`` requests automatically.
        :param options: Extra options passed to the
            :class:`~werkzeug.routing.Rule` object.
        DwfareturnwFpuScaffold.endpoint.<locals>.decoratoruDecorate a view function to register it for the given
        endpoint. Used if a rule is added without a ``view_func`` with
        :meth:`add_url_rule`.

        .. code-block:: python

            app.add_url_rule("/ex", endpoint="example")

            @app.endpoint("example")
            def example():
                ...

        :param endpoint: The endpoint name to associate with the view
            function.
        aendpointasetdefaultaappenduRegister a function to run before each request.

        For example, this can be used to open a database connection, or
        to load the logged in user from the session.

        .. code-block:: python

            @app.before_request
            def load_user():
                if "user_id" in session:
                    g.user = db.session.get(session["user_id"])

        The function will be called without any arguments. If it returns
        a non-``None`` value, the value is handled as if it was the
        return value from the view, and further request handling is
        stopped.

        This is available on both app and blueprint objects. When used on an app, this
        executes before every request. When used on a blueprint, this executes before
        every request that the blueprint handles. To register with a blueprint and
        execute before every request, use :meth:`.Blueprint.before_app_request`.
        uRegister a function to run after each request to this object.

        The function is called with the response object, and must return
        a response object. This allows the functions to modify or
        replace the response before it is sent.

        If a function raises an exception, any remaining
        ``after_request`` functions will not be called. Therefore, this
        should not be used for actions that must execute, such as to
        close resources. Use :meth:`teardown_request` for that.

        This is available on both app and blueprint objects. When used on an app, this
        executes after every request. When used on a blueprint, this executes after
        every request that the blueprint handles. To register with a blueprint and
        execute after every request, use :meth:`.Blueprint.after_app_request`.
        uRegister a function to be called when the request context is
        popped. Typically this happens at the end of each request, but
        contexts may be pushed manually as well during testing.

        .. code-block:: python

            with app.test_request_context():
                ...

        When the ``with`` block exits (or ``ctx.pop()`` is called), the
        teardown functions are called just before the request context is
        made inactive.

        When a teardown function was called because of an unhandled
        exception it will be passed an error object. If an
        :meth:`errorhandler` is registered, it will handle the exception
        and the teardown will not receive it.

        Teardown functions must avoid raising exceptions. If they
        execute code that might fail they must surround that code with a
        ``try``/``except`` block and log any errors.

        The return values of teardown functions are ignored.

        This is available on both app and blueprint objects. When used on an app, this
        executes after every request. When used on a blueprint, this executes after
        every request that the blueprint handles. To register with a blueprint and
        execute after every request, use :meth:`.Blueprint.teardown_app_request`.
        uRegisters a template context processor function. These functions run before
        rendering a template. The keys of the returned dict are added as variables
        available in the template.

        This is available on both app and blueprint objects. When used on an app, this
        is called for every rendered template. When used on a blueprint, this is called
        for templates rendered from the blueprint's views. To register with a blueprint
        and affect every template, use :meth:`.Blueprint.app_context_processor`.
        uRegister a URL value preprocessor function for all view
        functions in the application. These functions will be called before the
        :meth:`before_request` functions.

        The function can modify the values captured from the matched url before
        they are passed to the view. For example, this can be used to pop a
        common language code value and place it in ``g`` rather than pass it to
        every view.

        The function is passed the endpoint name and values dict. The return
        value is ignored.

        This is available on both app and blueprint objects. When used on an app, this
        is called for every request. When used on a blueprint, this is called for
        requests that the blueprint handles. To register with a blueprint and affect
        every request, use :meth:`.Blueprint.app_url_value_preprocessor`.
        uCallback function for URL defaults for all view functions of the
        application.  It's called with the endpoint and values and should
        update the values passed in place.

        This is available on both app and blueprint objects. When used on an app, this
        is called for every request. When used on a blueprint, this is called for
        requests that the blueprint handles. To register with a blueprint and affect
        every request, use :meth:`.Blueprint.app_url_defaults`.
        DwfareturnaT_error_handlerpuScaffold.errorhandler.<locals>.decoratoruRegister a function to handle errors by code or exception class.

        A decorator that is used to register a function given an
        error code.  Example::

            @app.errorhandler(404)
            def page_not_found(error):
                return 'This page does not exist', 404

        You can also register handlers for arbitrary exceptions::

            @app.errorhandler(DatabaseError)
            def special_exception_handler(error):
                return 'Database connection failed', 500

        This is available on both app and blueprint objects. When used on an app, this
        can handle errors from every request. When used on a blueprint, this can handle
        errors from requests that the blueprint handles. To register with a blueprint
        and affect every request, use :meth:`.Blueprint.app_errorhandler`.

        .. versionadded:: 0.7
            Use :meth:`register_error_handler` instead of modifying
            :attr:`error_handler_spec` directly, for application wide error
            handlers.

        .. versionadded:: 0.7
           One can now additionally also register custom exception types
           that do not necessarily have to be a subclass of the
           :class:`~werkzeug.exceptions.HTTPException` class.

        :param code_or_exception: the code as integer for the handler, or
                                  an arbitrary exception
        aregister_error_handleracode_or_exceptiona_get_exc_class_and_codeutoo many values to unpack (expected 2)uAlternative error attach function to the :meth:`errorhandler`
        decorator that is more straightforward to use for non decorator
        usage.

        .. versionadded:: 0.7
        adefault_exceptionsw'u' is not a recognized HTTP error code. Use a subclass of HTTPException with that code instead.u is an instance, not a class. Handlers can only be registered for Exception classes or HTTP error codes.u' is not a subclass of Exception. Handlers can only be registered for Exception classes or HTTP error codes.aHTTPExceptionacodeuGet the exception class being handled. For HTTP status codes
        or ``HTTPException`` subclasses, return both the exception and
        status code.

        :param exc_class_or_code: Any exception class, or an HTTP status
            code as an integer.
        Tuexpected view func if endpoint is not provided.uInternal helper that returns the default endpoint for a given
    function.  This always is the function name.
    arelative_toapartitionTw.utoo many values to unpack (expected 3)aimportlibautilafind_specunot foundTEImportErrorEValueErroragetcwdasubmodule_search_locationsaoriginanamespaceapathlibaPathacommonpathluFind the path that contains the package or module.a_path_is_relative_toapackage_pathu<genexpr>u_find_package_path.<locals>.<genexpr>a_find_package_pathaprefixaPurePathasplitalowerusite-packagesalibuFind the prefix that a package is installed under, and the path
    that it would be imported from.

    The prefix is the directory containing the standard directory
    hierarchy (lib, bin, etc.). If the package is not installed to the
    system (:attr:`sys.prefix`) or a virtualenv (``site-packages``),
    ``None`` is returned.

    The path is the entry in :attr:`sys.path` that contains the package
    for import. If the package is not installed, it's assumed that the
    package was imported from the current working directory.
    a__doc__a__file__a__spec__ahas_locationa__cached__aannotationsuimportlib.utilaosasyswtacollectionsTadefaultdictajinja2TaBaseLoaderaBaseLoaderTaFileSystemLoaderuwerkzeug.exceptionsTadefault_exceptionsTaHTTPExceptionuwerkzeug.utilsTacached_propertyacached_propertyTatypinglatypingaftahelpersTaget_root_pathatemplatingTa_default_template_ctx_processora_sentinelaTypeVaraCallableaAnyTwFTaboundaAfterRequestCallableTaT_after_requestaT_after_requestaBeforeRequestCallableTaT_before_requestaT_before_requestaErrorHandlerCallableTaT_error_handleraT_error_handleraTeardownCallableTaT_teardownaT_teardownaTemplateContextProcessorCallableTaT_template_context_processoraT_template_context_processoraURLDefaultCallableTaT_url_defaultsaT_url_defaultsaURLValuePreprocessorCallableTaT_url_value_preprocessoraT_url_value_preprocessoraRouteCallableTaT_routeaT_routeasetupmethoduflask.sansio.scaffolda__module__uCommon behavior shared between :class:`~flask.Flask` and
    :class:`~flask.blueprints.Blueprint`.

    :param import_name: The import name of the module where this object
        is defined. Usually :attr:`__name__` should be used.
    :param static_folder: Path to a folder of static files to serve.
        If this is set, a static route will be added.
    :param static_url_path: URL prefix for the static route.
    :param template_folder: Path to a folder containing template files.
        for rendering. If this is set, a Jinja loader will be added.
    :param root_path: The path that static, template, and resource files
        are relative to. Typically not set, it is discovered based on
        the ``import_name``.

    .. versionadded:: 2.0
    aScaffolda__qualname__a__annotations__aGroupacliastrustr | NoneTnnnnDaimport_nameastatic_folderastatic_url_pathatemplate_folderaroot_pathastrustr | os.PathLike[str] | Noneustr | Noneustr | os.PathLike[str] | Noneustr | Nonea__init__uScaffold.__init__Dareturnastra__repr__uScaffold.__repr__Daf_nameareturnastraNoneuScaffold._check_setup_finishedDareturnustr | NoneuScaffold.static_folderasetterDavalueareturnustr | os.PathLike[str] | NoneaNoneDareturnaboolahas_static_folderuScaffold.has_static_folderuScaffold.static_url_pathDavalueareturnustr | NoneaNoneDareturnuBaseLoader | Noneajinja_loaderuScaffold.jinja_loaderDamethodaruleaoptionsareturnastrpudict[str, t.Any]ut.Callable[[T_route], T_route]uScaffold._method_routeDaruleaoptionsareturnastrut.Anyut.Callable[[T_route], T_route]agetuScaffold.getapostuScaffold.postaputuScaffold.putadeleteuScaffold.deleteapatchuScaffold.patchuScaffold.routeTnnnDaruleaendpointaview_funcaprovide_automatic_optionsaoptionsareturnastrustr | Noneuft.RouteCallable | Noneubool | Noneut.AnyaNoneuScaffold.add_url_ruleDaendpointareturnastrut.Callable[[F], F]uScaffold.endpointDwfareturnaT_before_requestpabefore_requestuScaffold.before_requestDwfareturnaT_after_requestpaafter_requestuScaffold.after_requestDwfareturnaT_teardownpateardown_requestuScaffold.teardown_requestDwfareturnaT_template_context_processorpacontext_processoruScaffold.context_processorDwfareturnaT_url_value_preprocessorpaurl_value_preprocessoruScaffold.url_value_preprocessorDwfareturnaT_url_defaultspaurl_defaultsuScaffold.url_defaultsDacode_or_exceptionareturnutype[Exception] | intut.Callable[[T_error_handler], T_error_handler]aerrorhandleruScaffold.errorhandlerDacode_or_exceptionwfareturnutype[Exception] | intuft.ErrorHandlerCallableaNoneuScaffold.register_error_handlerDaexc_class_or_codeareturnutype[Exception] | intutuple[type[Exception], int | None]uScaffold._get_exc_class_and_codeDaview_funcareturnuft.RouteCallableastra_endpoint_from_view_funcDapathabaseareturnupathlib.PurePathastraboolDaimport_nameareturnastrpDaimport_nameareturnastrutuple[str | None, str]afind_packageuflask\sansio\scaffold.pyTa.0alocationapackage_pathu<module flask.sansio.scaffold>Ta__class__Taselfaimport_nameastatic_folderastatic_url_pathatemplate_folderaroot_pathTaselfTaselfaf_nameTaview_funcTaimport_namearoot_mod_namew_aroot_specapackage_specapackage_pathasearch_locationTaexc_class_or_codeaexc_classTaselfamethodaruleaoptionsTapathabaseTaselfaruleaendpointaview_funcaprovide_automatic_optionsaoptionsTaselfwfTwfaselfaendpointTaendpointaselfTwfaselfacode_or_exceptionTacode_or_exceptionaselfTwfaendpointaoptionsaselfaruleTaoptionsaruleaselfTaselfaruleaoptionsTaselfaendpointadecoratorTaselfacode_or_exceptionadecoratorTaimport_nameapackage_pathapy_prefixasite_parentasite_folderaparentafolderTaselfacode_or_exceptionwfaexc_classacodeTaselfaruleaoptionsadecoratorTwfaf_nameawrapper_funcTaselfavalueTaselfabasenameTaselfaargsakwargsaf_namewfTwfaf_name.flask.sessions%agetTa_permanentFuThis reflects the ``'_permanent'`` key in the dict.a_permanentDaselfareturnute.SelfaNoneaon_updateuSecureCookieSession.__init__.<locals>.on_updatea__class__a__init__amodifiedaaccesseda__getitem__asetdefaultuThe session is unavailable because no secret key was set.  Set the secret_key on the application to something unique and secret.anull_session_classuCreates a null session which acts as a replacement object if the
        real session support could not be loaded due to a configuration
        error.  This mainly aids the user experience because the job of the
        null session is to still support lookup without complaining but
        modifications are answered with a helpful error message of what
        failed.

        This creates an instance of :attr:`null_session_class` by default.
        uChecks if a given object is a null session.  Null sessions are
        not asked to be saved.

        This checks if the object is an instance of :attr:`null_session_class`
        by default.
        aconfigaSESSION_COOKIE_NAMEuThe name of the session cookie. Uses``app.config["SESSION_COOKIE_NAME"]``.aSESSION_COOKIE_DOMAINuThe value of the ``Domain`` parameter on the session cookie. If not set,
        browsers will only send the cookie to the exact domain it was set from.
        Otherwise, they will send it to any subdomain of the given value as well.

        Uses the :data:`SESSION_COOKIE_DOMAIN` config.

        .. versionchanged:: 2.3
            Not set by default, does not fall back to ``SERVER_NAME``.
        aSESSION_COOKIE_PATHaAPPLICATION_ROOTuReturns the path for which the cookie should be valid.  The
        default implementation uses the value from the ``SESSION_COOKIE_PATH``
        config var if it's set, and falls back to ``APPLICATION_ROOT`` or
        uses ``/`` if it's ``None``.
        aSESSION_COOKIE_HTTPONLYuReturns True if the session cookie should be httponly.  This
        currently just returns the value of the ``SESSION_COOKIE_HTTPONLY``
        config var.
        aSESSION_COOKIE_SECUREuReturns True if the cookie should be secure.  This currently
        just returns the value of the ``SESSION_COOKIE_SECURE`` setting.
        aSESSION_COOKIE_SAMESITEuReturn ``'Strict'`` or ``'Lax'`` if the cookie should use the
        ``SameSite`` attribute. This currently just returns the value of
        the :data:`SESSION_COOKIE_SAMESITE` setting.
        apermanentadatetimeanowatimezoneautcapermanent_session_lifetimeuA helper method that returns an expiration date for the session
        or ``None`` if the session is linked to the browser session.  The
        default implementation returns now + the permanent session
        lifetime configured on the application.
        aSESSION_REFRESH_EACH_REQUESTuUsed by session backends to determine if a ``Set-Cookie`` header
        should be set for this session cookie for this response. If the session
        has been modified, the cookie is set. If the session is permanent and
        the ``SESSION_REFRESH_EACH_REQUEST`` config is true, the cookie is
        always set.

        This check is usually skipped if the session was deleted.

        .. versionadded:: 0.11
        uThis is called at the beginning of each request, after
        pushing the request context, before matching the URL.

        This must return an object which implements a dictionary-like
        interface as well as the :class:`SessionMixin` interface.

        This will return ``None`` to indicate that loading failed in
        some way that is not immediately an error. The request
        context will fall back to using :meth:`make_null_session`
        in this case.
        uThis is called at the end of each request, after generating
        a response, before removing the request context. It is skipped
        if :meth:`is_null_session` returns ``True``.
        ahashlibasha1uDon't access ``hashlib.sha1`` until runtime. FIPS builds may not include
    SHA-1, in which case the import and use as a default would fail before the
    developer can configure something else.
    asecret_keyakey_derivationadigest_methodaURLSafeTimedSerializerasaltaserializerTasaltaserializerasigner_kwargsaget_signing_serializeracookiesaget_cookie_nameasession_classatotal_secondsaloadsTamax_ageaBadSignatureaget_cookie_domainaget_cookie_pathaget_cookie_secureaget_cookie_samesiteaget_cookie_httponlyavaryaaddTaCookieadelete_cookieTadomainapathasecureasamesiteahttponlyashould_set_cookieaget_expiration_timeadumpsaset_cookieTaexpiresahttponlyadomainapathasecureasamesitea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationslwtucollections.abcTaMutableMappingaMutableMappingTadatetimeTatimezoneaitsdangerousTaBadSignatureTaURLSafeTimedSerializeruwerkzeug.datastructuresTaCallbackDictaCallbackDictujson.tagTaTaggedJSONSerializerlaTaggedJSONSerializera__prepare__aSessionMixinu%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uflask.sessionsa__module__uExpands a basic dictionary with session attributes.a__qualname__apropertyDareturnabooluSessionMixin.permanentasetterDavalueareturnaboolaNoneanewa__orig_bases__aSecureCookieSessionuBase class for sessions based on signed cookies.

    This session backend will set the :attr:`modified` and
    :attr:`accessed` attributes. It cannot reliably track whether a
    session is new (vs. empty), so :attr:`new` remains hard coded to
    ``False``.
    TnDainitialareturnut.AnyaNoneuSecureCookieSession.__init__Dakeyareturnastrut.AnyuSecureCookieSession.__getitem__Dakeyadefaultareturnastrut.Anyut.AnyuSecureCookieSession.getuSecureCookieSession.setdefaultaNullSessionuClass used to generate nicer error messages if sessions are not
    available.  Will still allow read-only access to the empty session
    but fail on setting.
    Daargsakwargsareturnut.Anyut.Anyut.NoReturna_failuNullSession._faila__setitem__a__delitem__aclearapopapopitemaupdateuThe basic interface you have to implement in order to replace the
    default session interface which uses werkzeug's securecookie
    implementation.  The only methods you have to implement are
    :meth:`open_session` and :meth:`save_session`, the others have
    useful defaults which you don't need to change.

    The session object returned by the :meth:`open_session` method has to
    provide a dictionary like interface plus the properties and methods
    from the :class:`SessionMixin`.  We recommend just subclassing a dict
    and adding that mixin::

        class Session(dict, SessionMixin):
            pass

    If :meth:`open_session` returns ``None`` Flask will call into
    :meth:`make_null_session` to create a session that acts as replacement
    if the session support cannot work because some requirement is not
    fulfilled.  The default :class:`NullSession` class that is created
    will complain that the secret key was not set.

    To replace the session interface on an application all you have to do
    is to assign :attr:`flask.Flask.session_interface`::

        app = Flask(__name__)
        app.session_interface = MySessionInterface()

    Multiple requests with the same session may be sent and handled
    concurrently. When implementing a new session interface, consider
    whether reads or writes to the backing store must be synchronized.
    There is no guarantee on the order in which the session for each
    request is opened or saved, it will occur in the order that requests
    begin and end processing.

    .. versionadded:: 0.8
    aSessionInterfaceapickle_basedDaappareturnaFlaskaNullSessionamake_null_sessionuSessionInterface.make_null_sessionDaobjareturnaobjectaboolais_null_sessionuSessionInterface.is_null_sessionDaappareturnaFlaskastruSessionInterface.get_cookie_nameDaappareturnaFlaskustr | NoneuSessionInterface.get_cookie_domainuSessionInterface.get_cookie_pathDaappareturnaFlaskabooluSessionInterface.get_cookie_httponlyuSessionInterface.get_cookie_secureuSessionInterface.get_cookie_samesiteDaappasessionareturnaFlaskaSessionMixinudatetime | NoneuSessionInterface.get_expiration_timeDaappasessionareturnaFlaskaSessionMixinabooluSessionInterface.should_set_cookieDaapparequestareturnaFlaskaRequestuSessionMixin | Noneaopen_sessionuSessionInterface.open_sessionDaappasessionaresponseareturnaFlaskaSessionMixinaResponseaNoneasave_sessionuSessionInterface.save_sessionasession_json_serializerTcDastringareturnabytesut.Anya_lazy_sha1aSecureCookieSessionInterfaceuThe default session interface that stores sessions in signed cookies
    through the :mod:`itsdangerous` module.
    ucookie-sessionastaticmethodahmacDaappareturnaFlaskuURLSafeTimedSerializer | NoneuSecureCookieSessionInterface.get_signing_serializerDaapparequestareturnaFlaskaRequestuSecureCookieSession | NoneuSecureCookieSessionInterface.open_sessionuSecureCookieSessionInterface.save_sessionuflask\sessions.pyu<module flask.sessions>Ta__class__Taselfakeya__class__Taselfainitialaon_updatea__class__TaselfaargsakwargsTastringTaselfakeyadefaulta__class__TaselfaappTaselfaappasessionTaselfaappasigner_kwargsTaselfaobjTaselfTaselfaapparequestwsavalamax_ageadataTaselfaapparequestTaselfavalueTaselfaappasessionaresponseanameadomainapathasecureasamesiteahttponlyaexpiresavalTaselfaappasessionaresponseu.flask.signalsZ$a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsablinkerTaNamespacelaNamespacea_signalsasignalTutemplate-renderedatemplate_renderedTubefore-render-templateabefore_render_templateTurequest-startedarequest_startedTurequest-finishedarequest_finishedTurequest-tearing-downarequest_tearing_downTugot-request-exceptionagot_request_exceptionTuappcontext-tearing-downaappcontext_tearing_downTuappcontext-pushedaappcontext_pushedTuappcontext-poppedaappcontext_poppedTumessage-flashedamessage_flasheduflask\signals.pyu<module flask.signals>u.flask.templating'a_cv_appagetTna_cv_requestwgarequestasessionuDefault template context processor.  Injects `request`,
    `session` and `g`.
    aloaderacreate_global_jinja_loaderaBaseEnvironmenta__init__aappaconfigaEXPLAIN_TEMPLATE_LOADINGa_get_source_explaineda_get_source_fasta_iter_loadersutoo many values to unpack (expected 2)aget_sourceaenvironmentatemplateatrvaTemplateNotFoundaattemptsarvadebughelpersTaexplain_template_loading_attemptslaexplain_template_loading_attemptslaselfajinja_loaderaiter_blueprintsuDispatchingJinjaLoader._iter_loadersaupdatealist_templatesaresultaaddaupdate_template_contextabefore_render_templateasendaensure_syncTa_async_wrapperatemplateacontextarenderatemplate_renderedacurrent_appa_get_current_objectajinja_envaget_or_select_templatea_renderuRender a template by name with the given context.

    :param template_name_or_list: The name of the template to render. If
        a list is given, the first name to exist will be rendered.
    :param context: The variables to make available in the template.
    afrom_stringuRender a template from the given source string with the given
    context.

    :param source: The source code of the template to render.
    :param context: The variables to make available in the template.
    Dareturnut.Iterator[str]agenerateu_stream.<locals>.generateastream_with_contextacontexta_streamuRender a template by name with the given context as a stream.
    This returns an iterator of strings, which can be used as a
    streaming response from a view.

    :param template_name_or_list: The name of the template to render. If
        a list is given, the first name to exist will be rendered.
    :param context: The variables to make available in the template.

    .. versionadded:: 2.2
    uRender a template from the given source string with the given
    context as a stream. This returns an iterator of strings, which can
    be used as a streaming response from a view.

    :param source: The source code of the template to render.
    :param context: The variables to make available in the template.

    .. versionadded:: 2.2
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtajinja2TaBaseLoaderaBaseLoaderTaEnvironmentaEnvironmentTaTemplateaTemplateTaTemplateNotFoundaglobalsTa_cv_appTa_cv_requestTacurrent_appTarequestahelpersTastream_with_contextasignalsTabefore_render_templateTatemplate_renderedDareturnudict[str, t.Any]a_default_template_ctx_processora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uflask.templatinga__module__uWorks like a regular Jinja2 environment but has some additional
    knowledge of how Flask's blueprint works so that it can prepend the
    name of the blueprint to referenced templates if necessary.
    a__qualname__DaappaoptionsareturnaApput.AnyaNoneuEnvironment.__init__a__orig_bases__aDispatchingJinjaLoaderuA loader that looks for templates in the application and all
    the blueprint folders.
    DaappareturnaAppaNoneuDispatchingJinjaLoader.__init__DaenvironmentatemplateareturnaBaseEnvironmentastrutuple[str, str | None, t.Callable[[], bool] | None]uDispatchingJinjaLoader.get_sourceuDispatchingJinjaLoader._get_source_explaineduDispatchingJinjaLoader._get_source_fastDatemplateareturnastrut.Iterator[tuple[Scaffold, BaseLoader]]Dareturnulist[str]uDispatchingJinjaLoader.list_templatesDaappatemplateacontextareturnaFlaskaTemplateudict[str, t.Any]astrDatemplate_name_or_listacontextareturnustr | Template | list[str | Template]ut.Anyastrarender_templateDasourceacontextareturnastrut.Anyastrarender_template_stringDaappatemplateacontextareturnaFlaskaTemplateudict[str, t.Any]ut.Iterator[str]Datemplate_name_or_listacontextareturnustr | Template | list[str | Template]ut.Anyut.Iterator[str]astream_templateDasourceacontextareturnastrut.Anyut.Iterator[str]astream_template_stringuflask\templating.pyu<module flask.templating>Ta__class__TaselfaappTaselfaappaoptionsTarvaappctxareqctxTaselfaenvironmentatemplatearvatrvaattemptsasrcobjaloaderaexplain_template_loading_attemptsTaselfaenvironmentatemplatea_srcobjaloaderTaselfatemplatealoaderablueprintTaappatemplateacontextarvTaappatemplateacontextageneratearvTatemplateacontextaappTaappacontextatemplateTaselfaenvironmentatemplateTaselfaresultaloaderablueprintatemplateTatemplate_name_or_listacontextaappatemplateTasourceacontextaappatemplateu.flask.testingmTuCannot pass "subdomain" or "url_scheme" with "base_url".aconfigagetTaSERVER_NAMEalocalhostaAPPLICATION_ROOTuw.aPREFERRED_URL_SCHEMEaurlsplitaschemeu://anetlocw/alstripTw/apathaqueryd?w?aappa__class__a__init__ajsonadumpsuSerialize ``obj`` to a JSON-formatted string.

        The serialization will be configured according to the config associated
        with this EnvironBuilder's ``app``.
        a_werkzeug_versionu3.0.4apreserve_contexta_new_contextsaExitStacka_context_stackaREMOTE_ADDRu127.0.0.1aHTTP_USER_AGENTuWerkzeug/a_get_werkzeug_versionaenviron_baseuWhen used in combination with a ``with`` statement this opens a
        session transaction.  This can be used to modify the session that
        the test client uses.  Once the ``with`` block is left the session is
        stored back.

        ::

            with client.session_transaction() as session:
                session['value'] = 42

        Internally this is implemented by going through a temporary test
        request context and since session handling could depend on
        request variables this function accepts the same arguments as
        :meth:`~flask.Flask.test_request_context` which are directly
        passed through.
        aselfa_cookiesuCookies are disabled. Create a client with 'use_cookies=True'.aapplicationatest_request_contextaargsakwargsa_add_cookies_to_wsgiarequestaenvirona__enter__a__exit__asession_interfaceaopen_sessionTnnnasessuSession backend did not open a session.aresponse_classais_null_sessionasave_sessiona_update_cookies_from_responseahostapartitionTw:laheadersagetlistTuSet-Cookieasession_transactionuFlaskClient.session_transactionaappenduwerkzeug.debug.preserve_contexta_copy_environaEnvironBuilderaget_requestacloseawerkzeugatestaBaseRequestacopyafrom_environTaappaenviron_basea_request_from_builder_argsaopenTabufferedafollow_redirectsajson_moduleapopaenter_contextuCannot nest client invocationsacliaobjaScriptInfou<lambda>uFlaskCliRunner.invoke.<locals>.<lambda>Tacreate_appainvokeuInvokes a CLI command in an isolated environment. See
        :meth:`CliRunner.invoke <click.testing.CliRunner.invoke>` for
        full method documentation. See :ref:`testing-cli` for examples.

        If the ``obj`` argument is not given, passes an instance of
        :class:`~flask.cli.ScriptInfo` that knows how to load the Flask
        app being tested.

        :param cli: Command object to invoke. Default is the app's
            :attr:`~flask.app.Flask.cli` group.
        :param args: List of strings to invoke the command with.

        :return: a :class:`~click.testing.Result` object.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaimportlibwtacontextlibTacontextmanageracontextmanagerTaExitStackTacopyaTracebackTypeuurllib.parseTaurlsplituwerkzeug.testuclick.testingTaCliRunneraCliRunnerTaClientaClientuwerkzeug.wrappersTaRequestaRequestTaScriptInfolasessionsTaSessionMixinaSessionMixina__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uflask.testinga__module__uAn :class:`~werkzeug.test.EnvironBuilder`, that takes defaults from the
    application.

    :param app: The Flask application to configure the environment from.
    :param path: URL path being requested.
    :param base_url: Base URL where the app is being served, which
        ``path`` is relative to. If not given, built from
        :data:`PREFERRED_URL_SCHEME`, ``subdomain``,
        :data:`SERVER_NAME`, and :data:`APPLICATION_ROOT`.
    :param subdomain: Subdomain name to append to :data:`SERVER_NAME`.
    :param url_scheme: Scheme to use instead of
        :data:`PREFERRED_URL_SCHEME`.
    :param json: If given, this is serialized as JSON and passed as
        ``data``. Also defaults ``content_type`` to
        ``application/json``.
    :param args: other positional arguments passed to
        :class:`~werkzeug.test.EnvironBuilder`.
    :param kwargs: other keyword arguments passed to
        :class:`~werkzeug.test.EnvironBuilder`.
    a__qualname__Tw/nnnDaappapathabase_urlasubdomainaurl_schemeaargsakwargsareturnaFlaskastrustr | Noneustr | Noneustr | Noneut.Anyut.AnyaNoneuEnvironBuilder.__init__Daobjakwargsareturnut.Anyut.Anyastrajson_dumpsuEnvironBuilder.json_dumpsa__orig_bases__DareturnastraFlaskClientuWorks like a regular Werkzeug test client but has knowledge about
    Flask's contexts to defer the cleanup of the request context until
    the end of a ``with`` block. For general information about how to
    use this class refer to :class:`werkzeug.test.Client`.

    .. versionchanged:: 0.12
       `app.test_client()` includes preset default environment, which can be
       set after instantiation of the `app.test_client()` object in
       `client.environ_base`.

    Basic usage is outlined in the :doc:`/testing` chapter.
    a__annotations__aFlaskDaargsakwargsareturnut.Anyut.AnyaNoneuFlaskClient.__init__Daargsakwargsareturnut.Anyut.Anyut.Iterator[SessionMixin]DaotherareturnaWSGIEnvironmentpuFlaskClient._copy_environDaargsakwargsareturnutuple[t.Any, ...]udict[str, t.Any]aBaseRequestuFlaskClient._request_from_builder_argsDabufferedafollow_redirectsFpDabufferedafollow_redirectsaargsakwargsareturnaboolput.Anyut.AnyaTestResponseuFlaskClient.openDareturnaFlaskClientuFlaskClient.__enter__Daexc_typeaexc_valueatbareturnutype | NoneuBaseException | NoneuTracebackType | NoneaNoneuFlaskClient.__exit__aFlaskCliRunneruA :class:`~click.testing.CliRunner` for testing a Flask app's
    CLI commands. Typically created using
    :meth:`~flask.Flask.test_cli_runner`. See :ref:`testing-cli`.
    DaappakwargsareturnaFlaskut.AnyaNoneuFlaskCliRunner.__init__TnnDacliaargsakwargsareturnut.Anyut.Anyut.Anyut.AnyuFlaskCliRunner.invokeuflask\testing.pyTaselfu<module flask.testing>Ta__class__Taselfaexc_typeaexc_valueatbT
aselfaappapathabase_urlasubdomainaurl_schemeaargsakwargsahttp_hostaapp_rootaurlasepa__class__Taselfaappakwargsa__class__Taselfaargsakwargsa__class__TaselfaotheraoutTaselfaargsakwargsabuilderTaselfacliaargsakwargsa__class__TaselfaobjakwargsT
aselfabufferedafollow_redirectsaargsakwargsabuilderarequestaresponseacma__class__Taselfaargsakwargsaappactxasessaresp.flask.typing2a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtaUnionaResponseaListaAnyaMappingaIteratoraResponseValueaTupleTOstrQaHeaderValueaHeadersaSequenceaHeadersValueaWSGIApplicationaResponseReturnValueaTypeVarTaResponseClassaResponseTaboundaResponseClassaOptionalaAppOrBlueprintKeyaCallableaAwaitableaAfterRequestCallableTLnaBeforeFirstRequestCallableaBeforeRequestCallableaDictaShellContextProcessorCallableaTeardownCallableaTemplateContextProcessorCallableaTemplateFilterCallableaTemplateGlobalCallableTQOboolaTemplateTestCallableaURLDefaultCallableaURLValuePreprocessorCallableaErrorHandlerCallableaRouteCallableuflask\typing.pyu<module flask.typing>u.flask.wrappershacurrent_appaconfigaMAX_CONTENT_LENGTHuRead-only view of the ``MAX_CONTENT_LENGTH`` config key.aurl_ruleaendpointuThe endpoint that matched the request URL.

        This will be ``None`` if matching failed or has not been
        performed yet.

        This in combination with :attr:`view_args` can be used to
        reconstruct the same URL or a modified URL.
        w.arpartitionTw.luThe registered name of the current blueprint.

        This will be ``None`` if the endpoint is not part of a
        blueprint, or if URL matching failed or has not been performed
        yet.

        This does not necessarily match the name the blueprint was
        created with. It may have been nested, or registered with a
        different name.
        ablueprinta_split_blueprint_pathuThe registered names of the current blueprint upwards through
        parent blueprints.

        This will be an empty list if there is no current blueprint, or
        if URL matching failed.

        .. versionadded:: 2.0.1
        a__class__a_load_form_dataadebugamimetypeumultipart/form-dataafilesadebughelpersTaattach_enctype_error_multidictlaattach_enctype_error_multidictaon_json_loading_failedaBadRequestaMAX_COOKIE_SIZEamax_cookie_sizeuRead-only view of the :data:`MAX_COOKIE_SIZE` config key.

        See :attr:`~werkzeug.wrappers.Response.max_cookie_size` in
        Werkzeug's docs.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtuwerkzeug.exceptionsTaBadRequestTaHTTPExceptionaHTTPExceptionuwerkzeug.wrappersTaRequestaRequestaRequestBaseTaResponseaResponseaResponseBaseuTajsonajsonaglobalsTacurrent_appahelpersTa_split_blueprint_patha__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uflask.wrappersa__module__uThe request object used by default in Flask.  Remembers the
    matched endpoint and view arguments.

    It is what ends up as :class:`~flask.request`.  If you want to replace
    the request object used you can subclass this and set
    :attr:`~flask.Flask.request_class` to your subclass.

    The request object is a :class:`~werkzeug.wrappers.Request` subclass and
    provides all of the attributes Werkzeug defines plus a few Flask
    specific ones.
    a__qualname__a__annotations__ajson_moduleut.AnyuRule | Noneaview_argsudict[str, t.Any] | Nonearouting_exceptionuHTTPException | NoneapropertyDareturnuint | Noneamax_content_lengthuRequest.max_content_lengthDareturnustr | NoneuRequest.endpointuRequest.blueprintDareturnulist[str]ablueprintsuRequest.blueprintsDareturnaNoneuRequest._load_form_dataDweareturnuValueError | Noneut.AnyuRequest.on_json_loading_faileda__orig_bases__uThe response object that is used by default in Flask.  Works like the
    response object from Werkzeug but is set to have an HTML mimetype by
    default.  Quite often you don't have to create this object yourself because
    :meth:`~flask.Flask.make_response` will take care of that for you.

    If you want to replace the response object used you can subclass this and
    set :attr:`~flask.Flask.response_class` to your subclass.

    .. versionchanged:: 1.0
        JSON support is added to the response, like the request. This is useful
        when testing to get the test client response data as JSON.

    .. versionchanged:: 1.0

        Added :attr:`max_cookie_size`.
    utext/htmladefault_mimetypeustr | Noneaautocorrect_location_headerDareturnaintuResponse.max_cookie_sizeuflask\wrappers.pyu<module flask.wrappers>Ta__class__Taselfaattach_enctype_error_multidicta__class__TaselfaendpointTaselfanameTaselfTaselfa__class__Taselfwea__class__.idnaa__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_idnau\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__apackage_dataTa__version__la__version__lacoreTw*uidna\__init__.pyu<module idna>u.idna.coreaunicodedataacombiningaunichrlanameuUnknown character in unicodedataaintranges_containaidnadataascriptsaencodeTapunycodeuU+{0:04X}lllutoo many values to unpack (expected 2)abidirectionaluaIDNABidiErroruUnknown directionality in label {0} at position {1}TwRaALaANabidi_labelTwRaALwLuFirst codepoint in label {0} must be directionality L, R or ALT
wRaALaANaENaESaCSaETaONaBNaNSMuInvalid direction for codepoint at position {0} in a right-to-left labelTwRaALaENaANaNSMTaANaENanumber_typeTuCan not mix numeral types in a right-to-left labelTwLaENaESaCSaETaONaBNaNSMuInvalid direction for codepoint at position {0} in a left-to-right labelTwLaENavalid_endingTuLabel ends with illegal codepoint directionalityacategorywMaIDNAErrorTuLabel begins with an illegal combining character:llnu--TuLabel has disallowed hyphens in 3rd and 4th positionw-qTuLabel must not start or end with a hyphenanormalizeaNFCTuLabel must be in Normalization Form Cl@a_combining_classa_virama_combining_classajoining_typesagetlTTlLlDTlRlDl@lllla_is_scriptaGreekllaHebrewlau・aHiraganaaKatakanaaHanlll
l
TObytesObytearrayadecodeTuutf-8TuEmpty Labelacheck_nfcacheck_hyphen_okacheck_initial_combineracodepoint_classesaPVALIDaCONTEXTJavalid_contextjalabelaInvalidCodepointContextuJoiner {0} not allowed at position {1} in {2}a_unotuUnknown codepoint adjacent to joiner {0} at position {1} in {2}aCONTEXTOavalid_contextouCodepoint {0} not allowed at position {1} in {2}aInvalidCodepointuCodepoint {0} at position {1} of {2} not allowedacheck_bidiTaasciiaulabelavalid_label_lengthTuLabel too longTuNo Inputaunicodeacheck_labela_punycodea_alabel_prefixalowerastartswithTuMalformed A-label, no Punycode eligible content foundTuA-label must not end with a hyphenauts46dataTauts46datalabisectabisect_leftwZlwVwDw3aoutputwIacode_pointaposuRe-map the characters in the string according to UTS46 processing.auts46_remapasplitTw.a_unicode_dots_reTuEmpty domainaalabelaresultTuEmpty labelcd.avalid_string_lengthTuDomain too longw.a__doc__a__file__a__spec__aoriginahas_locationa__cached__TaidnadataareasysaintrangesTaintranges_containlcxn--acompileTu[.。．｡]achrTEUnicodeErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uidna.corea__module__u Base exception for all IDNA-encoding related problems a__qualname__a__orig_bases__u Exception when bidirectional requirements are not satisfied u Exception when a disallowed or unallocated codepoint is used u Exception when the codepoint is not valid in the context it is used TFTtFTFpppTFppuidna\core.pyu<module idna.core>TacpwvTacpascriptTwsTalabelTalabelacheck_ltrabidi_labelaidxacpadirectionartlavalid_endinganumber_typeTalabelaposacpacp_valueTwsastrictauts46astd3_rulesatrailing_dotaresultalabelsalabelTwsastrictauts46astd3_rulesatransitionalatrailing_dotaresultalabelsalabelTadomainastd3_rulesatransitionalauts46dataaoutputaposacharacode_pointauts46rowastatusareplacementTalabelaposacp_valueaokwiajoining_typeTalabelaposaexceptionacp_valueacpTalabelatrailing_dot.idna.idnadata/a__doc__a__file__a__spec__aoriginahas_locationa__cached__u13.0.0a__version__DaGreekaHanaHebrewaHiraganaaKatakanaT$g
g
g
g
ggggggggt:gu:gu:gv;g|>g|>g|>g}>g}>g}>g}>g}>g}>g~?g~?g?g?g?g?g?ḡBgʭgggƤTg]g]g_g`g`g`g`gggggg
g
g
gggg˦TgggggggggTgagag
g
gTgagbgdgegfggg
g
ascriptsDlllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l0l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l1l@l@l@l@l@l@l@llllllllllllllllllllllllllllllllllllllllllllllllllllllllÕlĕlŕlƕlǕlȕlɕlʕl˕l̕l͕lΕlϕlЕlѕlҕlӕlԕlՕl֕lוlؕlٕlڕlەlܕlݕlޕlߕlllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllÞlĞlŞlўlҞlӞlԞllllllllllllllllllllßlğlşlƟlǟlȟlɟlʟl˟ll͡llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllUppppppplDlUlRppplDlRlDlRlDpppplRppplDpppppppppppplClDpppppplRlDppplRpplUlRpplDppppppppppppppplRppppppppppppppppplDppppppppppppppppppppppppppppppppppppplRlDplRpppppppplDlRlDlRlDplRpplUlRplDppplTlRlDpplRpppplDppplRlDpppppppplRlDlRlDlRlDplRplDpppppppppplRpplDpppppppppppppplRplDppplRlDlRplDpplRplDpppppppppppppppppppppppppppppppppppppplClRlDpppplRplDlRlDppppppppplRlDlRpplDlUlDppplUlRlDlRplDppppppppplRpplUlRlDplRplDpppplRlDppppppppppppplUplDlClUlDpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplUpppplTplDpppppppppppppppppppppppppppppppppplUlClUpppplDppppppppppppppppppppppppppppppppppppppppppppppppplLlUlDpppplRlUlRlUlRplUplLlRpppplDppplLlDpppplRlDpplRlUplRlDppplRlDlRlDlRpplDpplRlDplRlDlRplDlRpppplDplUlLlDpppppppppppppppppppppppppppppppplRlDppplRlDpppppppppppppppplUlDpplRlDlUlDplRpplUlDlRplDplRlDplUlDlRplDlUppplRlDlLlUplDppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppplTajoining_typesDaPVALIDaCONTEXTJaCONTEXTOTgZ.g`:g{ggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg
ggggg
g
g
g
g
g
g
ggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
gggggggggggggg
g
g
g
gggggg g!g!g"g"g#g#g%g%g%g&g&g&g&g&g&g&g'g'g'g'g'g'g'g(g(g(g(g(g(g(g(g(g(g)g)g)g)g)g*g*g*g*g*g*g*g*g+g+g+g+g+g+g,g,g,g,g,g,g,g,g-g-g-g-g-g-g.g.g.g.g.g.g.g.g.g.g.g/g/g/g/g/g0g0g0g0g0g1g1g1g1g1g1g2g2g2g2g2g2g2g3g3g3g3g3g3g3g4g4g4g5g5g5g5g5g5g6g6g6g6g6g7g7g7g7g7g7g7g8g8g9g9g:g:g:g:g:g:g:g;g;g;g;g;g<g<g<g<g<g<g<g<g=g=g=g=g=g=g=g=g=g=g>g>g>g>g>g>g>g>g>g?g@ gA!gC!gC"gH$gI$gI$gI$gI$gI%gJ%gJ%gJ%gJ%gK%gK%gK%gK&gL&gL&gM&gN'gN'gP,gY-gZ-gZ-g[-g\.g\.g\.g].g].g].g].g^/g^/g_/g_/g_/g`0g`0gb1gb1gd2gd2gd2ge2ge2gf3gf3gg3gh4gh4gi4gi5gj5gj5gj5gj5gl6gm6gm6gn7gp8gq8gq8gs9gs9gt:gt:gt:gu:gu:gu;gw;gw<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gx<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy<gy=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=gz=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{=g{>g|>g|>g|>g}>g}>g}>g}>g}>g}>g}>g}>g}>g}>g~?g~?g?g?g?g?g?g?gBgCgXg±XgʱXgбXgԱXgرXgXgXgXgYgYgYgYgYgYgYgYgYgYgYgYgYgYgYgYg²YgƲYgʲYgβYgҲYgֲYgڲYg޲YgYgYgYgYgYgYgYgYgYgYgYgYgYgYgYgYgYgYgYgYgYgYgYgYg³YgƳYgسYgܳYgYgZgδZgڴZgZg[g[gж[g[g[g[g[g[g[g\g޸\g`g`g`gagagagagagbgcgdggggggggggggggggggggggggƙgʙgΙgҙg֙gڙggggggggggggggggggggƜgʜgΜgҜg֜gڜgޜgggggggggggggggggggggggggƝgʝgΝgҝg֝gڝgޝgggggggggggggggggggƞgʞgΞgҞgޞggggggggggggؠgggggggggggggggggggggggЬggggدgggggggggggggggЀgg΀gހggggхgggڌgʆgggćgЇgАgggggg֎ggggggg֐ggggggggggggggggggȕggg֖gggɘgggggֺgggμgўgşggǠgggggggȢgggţgͣgۣgݣggggggggggggggggggŦgɦgΦgѦgئgggg˨gڨggƩgȩgکgggޫggŬgڬggʭggggggggggggĲgڲggسggggȴgggggggڸgggggggggȺgںgggggggggggg
ǌgggggggggƭgggggggƿggg֙gg
g
g
g
g
g
g
g
g
ggggggggggƀg̀ggggggggĤggg
g
g
ggg˦Tg@Tgg
ggg
gaacodepoint_classesuidna\idnadata.pyu<module idna.idnadata>u.idna.intrangesasortedqlalast_writearangesa_encode_rangeluRepresent a list of integers as a sequence of ranges:
    ((start_0, end_0), (start_1, end_1), ...), such that the original
    integers are exactly those x such that start_i <= x < end_i for some i.

    Ranges are encoded as single integers (start << 32 | end), not as tuples.
    l gabisectabisect_lefta_decode_rangeutoo many values to unpack (expected 2)uDetermine if `int_` falls into one of the ranges in `ranges`.u
Given a list of integers, made up of (hopefully) a small number of long runs
of consecutive integers, compute a representation of the form
((start1, end1), (start2, end2) ...). Then answer the question "was x present
in the original list?" in time O(log(# runs)).
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aintranges_from_listaintranges_containuidna\intranges.pyu<module idna.intranges>TwrTastartaendTaint_arangesatuple_aposaleftarightw_Talist_asorted_listarangesalast_writewiacurrent_rangeu.idna.package_dataa__doc__a__file__a__spec__aoriginahas_locationa__cached__u2.10a__version__uidna\package_data.pyu<module idna.package_data>u.idna.uts46dataXLdTlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tl
w3Tlw3Tlw3Tl
w3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tlw3Tl w3Tl!w3Tl"w3Tl#w3Tl$w3Tl%w3Tl&w3Tl'w3Tl(w3Tl)w3Tl*w3Tl+w3Tl,w3Tl-wVTl.wVTl/w3Tl0wVTl1wVTl2wVTl3wVTl4wVTl5wVTl6wVTl7wVTl8wVTl9wVTl:w3Tl;w3Tl<w3Tl=w3Tl>w3Tl?w3Tl@w3TlAwMwaTlBwMwbTlCwMwcTlDwMwdTlEwMweTlFwMwfTlGwMwgTlHwMwhTlIwMwiTlJwMwjTlKwMwkTlLwMwlTlMwMwmTlNwMwnTlOwMwoTlPwMwpTlQwMwqTlRwMwrTlSwMwsTlTwMwtTlUwMwuTlVwMwvTlWwMwwTlXwMwxTlYwMwyTlZwMwzTl[w3Tl\w3Tl]w3Tl^w3Tl_w3Tl`w3TlawVTlbwVTlcwVLdTldwVTlewVTlfwVTlgwVTlhwVTliwVTljwVTlkwVTllwVTlmwVTlnwVTlowVTlpwVTlqwVTlrwVTlswVTltwVTluwVTlvwVTlwwVTlxwVTlywVTlzwVTl{w3Tl|w3Tl}w3Tl~w3Tlw3TlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlwXTlw3w TlwVTlwVTlwVTlwVTlwVTlwVTlwVTlw3u ̈TlwVTlwMwaTlwVTlwVTlwITlwVTlw3u ̄TlwVTlwVTlwMw2TlwMw3Tlw3u ́TlwMuμTlwVTlwVTlw3u ̧TlwMw1TlwMwoTlwVTlwMu1⁄4TlwMu1⁄2TlwMu3⁄4TlwVTlwMuàTlwMuáTlwMuâTlwMuãTlwMuäTlwMuåTlwMuæTlwMuçLdTlwMuèTlwMuéTlwMuêTlwMuëTlwMuìTlwMuíTlwMuîTlwMuïTlwMuðTlwMuñTlwMuòTlwMuóTlwMuôTlwMuõTlwMuöTlwVTlwMuøTlwMuùTlwMuúTlwMuûTlwMuüTlwMuýTlwMuþTlwDassTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwVTlwMuāTlwVTlwMuăTlwVTlwMuąTlwVTlwMućTlwVTlwMuĉTlwVTlwMuċTlwVTlwMučTlwVTlwMuďTlwVTlwMuđTlwVTlwMuēTlwVTlwMuĕTlwVTlwMuėTlwVTlwMuęTlwVTlwMuěTlwVTlwMuĝTlwVTlwMuğTlwVTlwMuġTlwVTlwMuģTlwVTlwMuĥTlwVTlwMuħTlwVTlwMuĩTlwVTlwMuīTlwVLdTlwMuĭTlwVTlwMuįTlwVTlwMui̇TlwVTlwMaijTlwMuĵTlwVTlwMuķTlwVTlwMuĺTlwVTlwMuļTlwVTlwMuľTlwVTlwMul·TlwMułTlwVTlwMuńTlwVTlwMuņTlwVTlwMuňTlwVTlwMuʼnTlwMuŋTlwVTlwMuōTlwVTlwMuŏTlwVTlwMuőTlwVTlwMuœTlwVTlwMuŕTlwVTlwMuŗTlwVTlwMuřTlwVTlwMuśTlwVTlwMuŝTlwVTlwMuşTlwVTlwMušTlwVTlwMuţTlwVTlwMuťTlwVTlwMuŧTlwVTlwMuũTlwVTlwMuūTlwVTlwMuŭTlwVTlwMuůTlwVTlwMuűTlwVTlwMuųTlwVTlwMuŵTlwVTlwMuŷTlwVTlwMuÿTlwMuźTlwVTlwMużTlwVTlwMužTlwVTlwMwsTlwVTlwMuɓTlwMuƃTlwVTlwMuƅTlwVTlwMuɔTlwMuƈTlwVTlwMuɖTlwMuɗTlwMuƌTlwVTlwMuǝTlwMuəTlwMuɛTlwMuƒTlwVTlwMuɠLdTlwMuɣTlwVTlwMuɩTlwMuɨTlwMuƙTlwVTlwMuɯTlwMuɲTlwVTlwMuɵTlwMuơTlwVTlwMuƣTlwVTlwMuƥTlwVTlwMuʀTlwMuƨTlwVTlwMuʃTlwVTlwMuƭTlwVTlwMuʈTlwMuưTlwVTlwMuʊTlwMuʋTlwMuƴTlwVTlwMuƶTlwVTlwMuʒTlwMuƹTlwVTlwMuƽTlwVTlwMudžTlwMaljTlwManjTlwMuǎTlwVTlwMuǐTlwVTlwMuǒTlwVTlwMuǔTlwVTlwMuǖTlwVTlwMuǘTlwVTlwMuǚTlwVTlwMuǜTlwVTlwMuǟTlwVTlwMuǡTlwVTlwMuǣTlwVTlwMuǥTlwVTlwMuǧTlwVTlwMuǩTlwVTlwMuǫTlwVTlwMuǭTlwVTlwMuǯTlwVTlwMadzTlwMuǵTlwVTlwMuƕTlwMuƿTlwMuǹTlwVTlwMuǻTlwVTlwMuǽTlwVTlwMuǿTlwVTlwMuȁTlwVTlwMuȃTlwVTlwMuȅTlwVTlwMuȇTlwVTlwMuȉTlwVTlwMuȋTlwVTlwMuȍLdTlwVTlwMuȏTlwVTlwMuȑTlwVTlwMuȓTlwVTlwMuȕTlwVTlwMuȗTlwVTlwMușTlwVTlwMuțTlwVTlwMuȝTlwVTlwMuȟTlwVTlwMuƞTlwVTlwMuȣTlwVTlwMuȥTlwVTlwMuȧTlwVTlwMuȩTlwVTlwMuȫTlwVTlwMuȭTlwVTlwMuȯTlwVTlwMuȱTlwVTlwMuȳTlwVTlwMuⱥTlwMuȼTlwVTlwMuƚTlwMuⱦTlwVTlwMuɂTlwVTlwMuƀTlwMuʉTlwMuʌTlwMuɇTlwVTlwMuɉTlwVTlwMuɋTlwVTlwMuɍTlwVTlwMuɏTlwVTlwMwhTlwMuɦTlwMwjTlwMwrTlwMuɹTlwMuɻTlwMuʁTlwMwwTlwMwyTlwVTlw3u ̆Tlw3u ̇Tlw3u ̊Tlw3u ̨Tlw3u ̃Tlw3u ̋TlwVTlwMuɣTlwMwlTlwMwsTlwMwxTlwMuʕTlwVTlwMùTlwMúTlwVTlwMu̓TlwMǘTlwMuιTlwVTlwITlwVTlwMuͱTlwVTlwMuͳTlwVTlwMuʹTlwVTlwMuͷTlwVLdTlwXTlw3u ιTlwVTlw3w;TlwMuϳTlwXTlw3u ́Tlw3u ̈́TlwMuάTlwMu·TlwMuέTlwMuήTlwMuίTlwXTlwMuόTlwXTlwMuύTlwMuώTlwVTlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwXTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMuϊTlwMuϋTlwVTlwDuσTlwVTlwMuϗTlwMuβTlwMuθTlwMuυTlwMuύTlwMuϋTlwMuφTlwMuπTlwVTlwMuϙTlwVTlwMuϛTlwVTlwMuϝTlwVTlwMuϟTlwVTlwMuϡTlwVTlwMuϣTlwVTlwMuϥTlwVTlwMuϧTlwVTlwMuϩTlwVTlwMuϫTlwVTlwMuϭTlwVTlwMuϯTlwVTlwMuκTlwMuρTlwMuσTlwVTlwMuθTlwMuεTlwVTlwMuϸTlwVTlwMuσTlwMuϻTlwVTlwMuͻTlwMuͼTlwMuͽTlwMuѐTlwMuёTlwMuђLdTlwMuѓTlwMuєTlwMuѕTlwMuіTlwMuїTlwMuјTlwMuљTlwMuњTlwMuћTlwMuќTlwMuѝTlwMuўTlwMuџTlwMuаTlwMuбTlwMuвTlwMuгTlwMuдTlwMuеTlwMuжTlwMuзTlwMuиTlwMuйTlwMuкTlwMuлTlwMuмTlwMuнTlwMuоTlwMuпTlwMuрTlwMuсTlwMuтTlwMuуTlwMuфTlwMuхTlwMuцTlwMuчTlwMuшTlwMuщTlwMuъTlwMuыTlwMuьTlwMuэTlwMuюTlwMuяTlwVTlwMuѡTlwVTlwMuѣTlwVTlwMuѥTlwVTlwMuѧTlwVTlwMuѩTlwVTlwMuѫTlwVTlwMuѭTlwVTlwMuѯTlwVTlwMuѱTlwVTlwMuѳTlwVTlwMuѵTlwVTlwMuѷTlwVTlwMuѹTlwVTlwMuѻTlwVTlwMuѽTlwVTlwMuѿTlwVTlwMuҁTlwVTlwMuҋTlwVTlwMuҍTlwVTlwMuҏTlwVTlwMuґTlwVTlwMuғTlwVTlwMuҕTlwVTlwMuҗTlwVTlwMuҙTlwVTlwMuқTlwVTlwMuҝTlwVLdTlwMuҟTlwVTlwMuҡTlwVTlwMuңTlwVTlwMuҥTlwVTlwMuҧTlwVTlwMuҩTlwVTlwMuҫTlwVTlwMuҭTlwVTlwMuүTlwVTlwMuұTlwVTlwMuҳTlwVTlwMuҵTlwVTlwMuҷTlwVTlwMuҹTlwVTlwMuһTlwVTlwMuҽTlwVTlwMuҿTlwVTlwXTlwMuӂTlwVTlwMuӄTlwVTlwMuӆTlwVTlwMuӈTlwVTlwMuӊTlwVTlwMuӌTlwVTlwMuӎTlwVTlwMuӑTlwVTlwMuӓTlwVTlwMuӕTlwVTlwMuӗTlwVTlwMuәTlwVTlwMuӛTlwVTlwMuӝTlwVTlwMuӟTlwVTlwMuӡTlwVTlwMuӣTlwVTlwMuӥTlwVTlwMuӧTlwVTlwMuөTlwVTlwMuӫTlwVTlwMuӭTlwVTlwMuӯTlwVTlwMuӱTlwVTlwMuӳTlwVTlwMuӵTlwVTlwMuӷTlwVTlwMuӹTlwVTlwMuӻTlwVTlwMuӽTlwVTlwMuӿTlwVTl
wMuԁTl
wVTl
wMuԃLdTl
wVTl
wMuԅTl
wVTl
wMuԇTl
wVTl
wMuԉTl
wVTl
wMuԋTl
wVTl
wMuԍTl
wVTl
wMuԏTl
wVTl
wMuԑTl
wVTl
wMuԓTl
wVTl
wMuԕTl
wVTl
wMuԗTl
wVTl
wMuԙTl
wVTl
wMuԛTl
wVTl
wMuԝTl
wVTl
wMuԟTl
wVTl
wMuԡTl
wVTl
wMuԣTl
wVTl
wMuԥTl
wVTl
wMuԧTl
wVTl
wMuԩTl
wVTl
wMuԫTl
wVTl
wMuԭTl
wVTl
wMuԯTl
wVTl
wXTl
wMuաTl
wMuբTl
wMuգTl
wMuդTl
wMuեTl
wMuզTl
wMuէTl
wMuըTl
wMuթTl
wMuժTl
wMuիTl
wMuլTl
wMuխTl
wMuծTl
wMuկTl
wMuհTl
wMuձTl
wMuղTl
wMuճTl
wMuմTl
wMuյTl
wMuնTl
wMuշTl
wMuոTl
wMuչTl
wMuպTl
wMuջTl
wMuռTl
wMuսTl
wMuվTl
wMuտTl
wMuրTl
wMuցTl
wMuւTl
wMuփTl
wMuքTl
wMuօTl
wMuֆTl
wXTl
wVTlwMuեւTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVLdTlwMuاٴTlwMuوٴTlwMuۇٴTlwMuيٴTlwVTl
wXTl
wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwMuक़TlwMuख़TlwMuग़TlwMuज़TlwMuड़TlwMuढ़TlwMuफ़TlwMuय़TlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMuড়TlwMuঢ়TlwXTlwMuয়TlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwMuਲ਼TlwXTlwVTlwMuਸ਼TlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMuਖ਼TlwMuਗ਼TlwMuਜ਼LdTlwVTlwXTlwMuਫ਼TlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMuଡ଼TlwMuଢ଼TlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVLdTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwMuําTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwMuໍາTlwVLdTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMuຫນTlwMuຫມTlwVTlwXTlwVTlwMu་TlwVTlwMuགྷTlwVTlwXTlwVTlwMuཌྷTlwVTlwMuདྷTlwVTlwMuབྷTlwVTlwMuཛྷTlwVTlwMuཀྵTlwVTlwXTlwVTlwMuཱིTlwVTlwMuཱུTlwMuྲྀTlwMuྲཱྀTlwMuླྀTlwMuླཱྀTlwVTlwMuཱྀTlwVTlwMuྒྷTlwVTlwXTlwVTlwMuྜྷTlwVTlwMuྡྷTlwVTlwMuྦྷTlwVTlwMuྫྷTlwVTlwMuྐྵTlwVTlwXTlwVTlwXTlwVTlwXTl wVTl!wXTl!wMuⴧTl!wXTl!wMuⴭTl!wXTl!wVTl!wMuნTl!wVTl"wXTl"wVTl$wXTl$wVTl$wXTl$wVTl$wXTl$wVTl$wXTl$wVTl$wXTl$wVTl%wXTl%wVTl%wXTl%wVTl%wXTl%wVTl%wXTl%wVTl%wXTl%wVTl%wXTl%wVTl%wXTl%wVTl%wXTl%wVTl&wXTl&wVLdTl&wXTl&wVTl&wXTl&wVTl&wXTl'wVTl'wXTl'wVTl'wXTl'wMuᏰTl'wMuᏱTl'wMuᏲTl'wMuᏳTl'wMuᏴTl'wMuᏵTl'wXTl(wVTl-wXTl-wVTl-wXTl-wVTl-wXTl.wVTl.wXTl.wVTl.wXTl.wVTl.wXTl.wVTl.wXTl.wVTl.wXTl.wVTl.wXTl.wVTl.wXTl/wVTl/wXTl/wVTl/wXTl/wVTl/wXTl/wVTl/wXTl0wVTl0wXTl0wVTl0wITl0wXTl0wVTl0wXTl0wVTl0wXTl1wVTl1wXTl1wVTl1wXTl2wVTl2wXTl2wVTl2wXTl2wVTl2wXTl2wVTl2wXTl2wVTl2wXTl2wVTl2wXTl3wVTl3wXTl3wVTl3wXTl3wVTl3wXTl3wVTl4wXTl4wVTl4wXTl4wVTl4wXTl4wVTl5wXTl5wVTl5wXTl5wVTl5wXTl5wVTl5wXTl6wVTl6wXTl6wVTl6wXTl7wVTl7wXTl7wVTl8wXTl8wVTl8wXTl8wVLdTl9wMuвTl9wMuдTl9wMuоTl9wMuсTl9wMuтTl9wMuъTl9wMuѣTl9wMuꙋTl9wXTl9wMuაTl9wMuბTl9wMuგTl9wMuდTl9wMuეTl9wMuვTl9wMuზTl9wMuთTl9wMuიTl9wMuკTl9wMuლTl9wMuმTl9wMuნTl9wMuოTl9wMuპTl9wMuჟTl9wMuრTl9wMuსTl9wMuტTl9wMuუTl9wMuფTl9wMuქTl9wMuღTl9wMuყTl9wMuშTl9wMuჩTl9wMuცTl9wMuძTl9wMuწTl9wMuჭTl9wMuხTl9wMuჯTl9wMuჰTl9wMuჱTl9wMuჲTl9wMuჳTl9wMuჴTl9wMuჵTl9wMuჶTl9wMuჷTl9wMuჸTl9wMuჹTl9wMuჺTl9wXTl9wMuჽTl9wMuჾTl9wMuჿTl9wVTl9wXTl9wVTl9wXTl:wVTl:wMwaTl:wMuæTl:wMwbTl:wVTl:wMwdTl:wMweTl:wMuǝTl:wMwgTl:wMwhTl:wMwiTl:wMwjTl:wMwkTl:wMwlTl:wMwmTl:wMwnTl:wVTl:wMwoTl:wMuȣTl:wMwpTl:wMwrTl:wMwtTl:wMwuTl:wMwwTl:wMwaTl:wMuɐTl:wMuɑTl:wMuᴂTl:wMwbTl:wMwdTl:wMweTl:wMuəTl:wMuɛTl:wMuɜTl:wMwgTl:wVTl:wMwkTl:wMwmTl:wMuŋTl:wMwoLdTl:wMuɔTl:wMuᴖTl:wMuᴗTl:wMwpTl:wMwtTl:wMwuTl:wMuᴝTl:wMuɯTl:wMwvTl:wMuᴥTl:wMuβTl:wMuγTl:wMuδTl:wMuφTl:wMuχTl:wMwiTl:wMwrTl:wMwuTl:wMwvTl:wMuβTl:wMuγTl:wMuρTl:wMuφTl:wMuχTl:wVTl:wMuнTl:wVTl;wMuɒTl;wMwcTl;wMuɕTl;wMuðTl;wMuɜTl;wMwfTl;wMuɟTl;wMuɡTl;wMuɥTl;wMuɨTl;wMuɩTl;wMuɪTl;wMuᵻTl;wMuʝTl;wMuɭTl;wMuᶅTl;wMuʟTl;wMuɱTl;wMuɰTl;wMuɲTl;wMuɳTl;wMuɴTl;wMuɵTl;wMuɸTl;wMuʂTl;wMuʃTl;wMuƫTl;wMuʉTl;wMuʊTl;wMuᴜTl;wMuʋTl;wMuʌTl;wMwzTl;wMuʐTl;wMuʑTl;wMuʒTl;wMuθTl;wVTl;wXTl;wVTl<wMuḁTl<wVTl<wMuḃTl<wVTl<wMuḅTl<wVTl<wMuḇTl<wVTl<wMuḉTl<wVTl<wMuḋTl<wVTl<wMuḍTl<wVTl<wMuḏTl<wVTl<wMuḑTl<wVTl<wMuḓTl<wVTl<wMuḕTl<wVTl<wMuḗTl<wVTl<wMuḙTl<wVTl<wMuḛTl<wVTl<wMuḝTl<wVTl<wMuḟTl<wVTl<wMuḡLdTl<wVTl<wMuḣTl<wVTl<wMuḥTl<wVTl<wMuḧTl<wVTl<wMuḩTl<wVTl<wMuḫTl<wVTl<wMuḭTl<wVTl<wMuḯTl<wVTl<wMuḱTl<wVTl<wMuḳTl<wVTl<wMuḵTl<wVTl<wMuḷTl<wVTl<wMuḹTl<wVTl<wMuḻTl<wVTl<wMuḽTl<wVTl<wMuḿTl<wVTl<wMuṁTl<wVTl<wMuṃTl<wVTl<wMuṅTl<wVTl<wMuṇTl<wVTl<wMuṉTl<wVTl<wMuṋTl<wVTl<wMuṍTl<wVTl<wMuṏTl<wVTl<wMuṑTl<wVTl<wMuṓTl<wVTl<wMuṕTl<wVTl<wMuṗTl<wVTl<wMuṙTl<wVTl<wMuṛTl<wVTl<wMuṝTl<wVTl<wMuṟTl<wVTl<wMuṡTl<wVTl<wMuṣTl<wVTl<wMuṥTl<wVTl<wMuṧTl<wVTl<wMuṩTl<wVTl<wMuṫTl<wVTl<wMuṭTl<wVTl<wMuṯTl<wVTl<wMuṱTl<wVTl<wMuṳTl<wVTl<wMuṵTl<wVTl<wMuṷTl<wVTl<wMuṹTl<wVTl<wMuṻTl<wVTl<wMuṽTl<wVTl<wMuṿTl<wVTl=wMuẁTl=wVTl=wMuẃTl=wVTl=wMuẅLdTl=wVTl=wMuẇTl=wVTl=wMuẉTl=wVTl=wMuẋTl=wVTl=wMuẍTl=wVTl=wMuẏTl=wVTl=wMuẑTl=wVTl=wMuẓTl=wVTl=wMuẕTl=wVTl=wMuaʾTl=wMuṡTl=wVTl=wMassTl=wVTl=wMuạTl=wVTl=wMuảTl=wVTl=wMuấTl=wVTl=wMuầTl=wVTl=wMuẩTl=wVTl=wMuẫTl=wVTl=wMuậTl=wVTl=wMuắTl=wVTl=wMuằTl=wVTl=wMuẳTl=wVTl=wMuẵTl=wVTl=wMuặTl=wVTl=wMuẹTl=wVTl=wMuẻTl=wVTl=wMuẽTl=wVTl=wMuếTl=wVTl=wMuềTl=wVTl=wMuểTl=wVTl=wMuễTl=wVTl=wMuệTl=wVTl=wMuỉTl=wVTl=wMuịTl=wVTl=wMuọTl=wVTl=wMuỏTl=wVTl=wMuốTl=wVTl=wMuồTl=wVTl=wMuổTl=wVTl=wMuỗTl=wVTl=wMuộTl=wVTl=wMuớTl=wVTl=wMuờTl=wVTl=wMuởTl=wVTl=wMuỡTl=wVTl=wMuợTl=wVTl=wMuụTl=wVTl=wMuủTl=wVTl=wMuứTl=wVTl=wMuừTl=wVTl=wMuửTl=wVLdTl=wMuữTl=wVTl=wMuựTl=wVTl=wMuỳTl=wVTl=wMuỵTl=wVTl=wMuỷTl=wVTl=wMuỹTl=wVTl=wMuỻTl=wVTl=wMuỽTl=wVTl=wMuỿTl=wVTl>wMuἀTl>wMuἁTl>wMuἂTl>wMuἃTl>wMuἄTl>wMuἅTl>wMuἆTl>wMuἇTl>wVTl>wXTl>wMuἐTl>wMuἑTl>wMuἒTl>wMuἓTl>wMuἔTl>wMuἕTl>wXTl>wVTl>wMuἠTl>wMuἡTl>wMuἢTl>wMuἣTl>wMuἤTl>wMuἥTl>wMuἦTl>wMuἧTl>wVTl>wMuἰTl>wMuἱTl>wMuἲTl>wMuἳTl>wMuἴTl>wMuἵTl>wMuἶTl>wMuἷTl>wVTl>wXTl>wMuὀTl>wMuὁTl>wMuὂTl>wMuὃTl>wMuὄTl>wMuὅTl>wXTl>wVTl>wXTl>wMuὑTl>wXTl>wMuὓTl>wXTl>wMuὕTl>wXTl>wMuὗTl>wVTl>wMuὠTl>wMuὡTl>wMuὢTl>wMuὣTl>wMuὤTl>wMuὥTl>wMuὦTl>wMuὧTl>wVTl>wMuάTl>wVTl>wMuέTl>wVTl>wMuήTl>wVTl>wMuίTl>wVTl>wMuόTl>wVTl>wMuύTl>wVTl>wMuώTl>wXTl?wMuἀιTl?wMuἁιTl?wMuἂιTl?wMuἃιTl?wMuἄιLdTl?wMuἅιTl?wMuἆιTl?wMuἇιTl?wMuἀιTl?wMuἁιTl?wMuἂιTl?wMuἃιTl?wMuἄιTl?wMuἅιTl?wMuἆιTl?wMuἇιTl?wMuἠιTl?wMuἡιTl?wMuἢιTl?wMuἣιTl?wMuἤιTl?wMuἥιTl?wMuἦιTl?wMuἧιTl?wMuἠιTl?wMuἡιTl?wMuἢιTl?wMuἣιTl?wMuἤιTl?wMuἥιTl?wMuἦιTl?wMuἧιTl?wMuὠιTl?wMuὡιTl?wMuὢιTl?wMuὣιTl?wMuὤιTl?wMuὥιTl?wMuὦιTl?wMuὧιTl?wMuὠιTl?wMuὡιTl?wMuὢιTl?wMuὣιTl?wMuὤιTl?wMuὥιTl?wMuὦιTl?wMuὧιTl?wVTl?wMuὰιTl?wMuαιTl?wMuάιTl?wXTl?wVTl?wMuᾶιTl?wMuᾰTl?wMuᾱTl?wMuὰTl?wMuάTl?wMuαιTl?w3u ̓Tl?wMuιTl?w3u ̓Tl?w3u ͂Tl?w3u ̈͂Tl?wMuὴιTl?wMuηιTl?wMuήιTl?wXTl?wVTl?wMuῆιTl?wMuὲTl?wMuέTl?wMuὴTl?wMuήTl?wMuηιTl?w3u ̓̀Tl?w3u ̓́Tl?w3u ̓͂Tl?wVTl?wMuΐTl?wXTl?wVTl?wMuῐTl?wMuῑTl?wMuὶTl?wMuίTl?wXTl?w3u ̔̀Tl?w3u ̔́Tl?w3u ̔͂Tl?wVTl?wMuΰTl?wVTl?wMuῠTl?wMuῡTl?wMuὺTl?wMuύTl?wMuῥTl?w3u ̈̀Tl?w3u ̈́Tl?w3w`Tl?wXTl?wMuὼιTl?wMuωιLdTl?wMuώιTl?wXTl?wVTl?wMuῶιTl?wMuὸTl?wMuόTl?wMuὼTl?wMuώTl?wMuωιTl?w3u ́Tl?w3u ̔Tl?wXTl@w3w Tl@wITl@wDuTl@wXTl@wVTl@wMu‐Tl@wVTl@w3u ̳Tl@wVTl@wXTl@wVTl@wXTl@w3w Tl@wVTl@wMu′′Tl@wMu′′′Tl@wVTl@wMu‵‵Tl@wMu‵‵‵Tl@wVTl@w3u!!Tl@wVTl@w3u ̅Tl@wVTl@w3u??Tl@w3u?!Tl@w3u!?Tl@wVTl@wMu′′′′Tl@wVTl@w3w Tl@wITl@wXTl@wITl@wXTl@wMw0Tl@wMwiTl@wXTl@wMw4Tl@wMw5Tl@wMw6Tl@wMw7Tl@wMw8Tl@wMw9Tl@w3w+Tl@wMu−Tl@w3w=Tl@w3w(Tl@w3w)Tl@wMwnTlAwMw0TlAwMw1TlAwMw2TlAwMw3TlAwMw4TlAwMw5TlAwMw6TlAwMw7TlAwMw8TlAwMw9TlAw3w+TlAwMu−TlAw3w=TlAw3w(TlAw3w)TlAwXTlAwMwaTlAwMweTlAwMwoTlAwMwxTlAwMuəTlAwMwhTlAwMwkTlAwMwlTlAwMwmTlAwMwnTlAwMwpTlAwMwsTlAwMwtTlAwXTlAwVTlAwMarsTlAwVTlAwXTlAwVTlAwXTlBw3ua/cTlBw3ua/sLdTlBwMwcTlBwMu°cTlBwVTlBw3uc/oTlBw3uc/uTlBwMuɛTlBwVTlBwMu°fTlBwMwgTlBwMwhTlBwMuħTlBwMwiTlBwMwlTlBwVTlBwMwnTlBwManoTlBwVTlBwMwpTlBwMwqTlBwMwrTlBwVTlBwMasmTlBwMatelTlBwMatmTlBwVTlBwMwzTlBwVTlBwMuωTlBwVTlBwMwzTlBwVTlBwMwkTlBwMuåTlBwMwbTlBwMwcTlBwVTlBwMweTlBwMwfTlBwXTlBwMwmTlBwMwoTlBwMuאTlBwMuבTlBwMuגTlBwMuדTlBwMwiTlBwVTlBwMafaxTlBwMuπTlBwMuγTlBwMuπTlBwMu∑TlBwVTlBwMwdTlBwMweTlBwMwiTlBwMwjTlBwVTlBwMu1⁄7TlBwMu1⁄9TlBwMu1⁄10TlBwMu1⁄3TlBwMu2⁄3TlBwMu1⁄5TlBwMu2⁄5TlBwMu3⁄5TlBwMu4⁄5TlBwMu1⁄6TlBwMu5⁄6TlBwMu1⁄8TlBwMu3⁄8TlBwMu5⁄8TlBwMu7⁄8TlBwMu1⁄TlBwMwiTlBwMaiiTlBwMaiiiTlBwMaivTlBwMwvTlBwMaviTlBwMaviiTlBwMaviiiTlBwMaixTlBwMwxTlBwMaxiTlBwMaxiiTlBwMwlTlBwMwcTlBwMwdTlBwMwmTlBwMwiTlBwMaiiTlBwMaiiiTlBwMaivTlBwMwvTlBwMaviTlBwMaviiTlBwMaviiiTlBwMaixTlBwMwxLdTlBwMaxiTlBwMaxiiTlBwMwlTlBwMwcTlBwMwdTlBwMwmTlCwVTlCwXTlCwVTlCwMu0⁄3TlCwVTlCwXTlCwVTlDwMu∫∫TlDwMu∫∫∫TlDwVTlDwMu∮∮TlDwMu∮∮∮TlDwVTlDw3TlDwVTlDw3TlDwVTlFwMu〈TlFwMu〉TlFwVTlHwXTlHwVTlHwXTlHwMw1TlHwMw2TlHwMw3TlHwMw4TlHwMw5TlHwMw6TlHwMw7TlHwMw8TlHwMw9TlHwMu10TlHwMu11TlHwMu12TlHwMu13TlHwMu14TlHwMu15TlHwMu16TlHwMu17TlHwMu18TlHwMu19TlHwMu20TlHw3u(1)TlHw3u(2)TlHw3u(3)TlHw3u(4)TlHw3u(5)TlHw3u(6)TlHw3u(7)TlHw3u(8)TlHw3u(9)TlHw3u(10)TlHw3u(11)TlHw3u(12)TlIw3u(13)TlIw3u(14)TlIw3u(15)TlIw3u(16)TlIw3u(17)TlIw3u(18)TlIw3u(19)TlIw3u(20)TlIwXTlIw3u(a)TlIw3u(b)TlIw3u(c)TlIw3u(d)TlIw3u(e)TlIw3u(f)TlIw3u(g)TlIw3u(h)TlIw3u(i)TlIw3u(j)TlIw3u(k)TlIw3u(l)TlIw3u(m)TlIw3u(n)TlIw3u(o)TlIw3u(p)TlIw3u(q)TlIw3u(r)TlIw3u(s)TlIw3u(t)TlIw3u(u)TlIw3u(v)TlIw3u(w)TlIw3u(x)TlIw3u(y)TlIw3u(z)TlIwMwaTlIwMwbTlIwMwcTlIwMwdLdTlIwMweTlIwMwfTlIwMwgTlIwMwhTlIwMwiTlIwMwjTlIwMwkTlIwMwlTlIwMwmTlIwMwnTlIwMwoTlIwMwpTlIwMwqTlIwMwrTlIwMwsTlIwMwtTlIwMwuTlIwMwvTlIwMwwTlIwMwxTlIwMwyTlIwMwzTlIwMwaTlIwMwbTlIwMwcTlIwMwdTlIwMweTlIwMwfTlIwMwgTlIwMwhTlIwMwiTlIwMwjTlIwMwkTlIwMwlTlIwMwmTlIwMwnTlIwMwoTlIwMwpTlIwMwqTlIwMwrTlIwMwsTlIwMwtTlIwMwuTlIwMwvTlIwMwwTlIwMwxTlIwMwyTlIwMwzTlIwMw0TlIwVTlTwMu∫∫∫∫TlTwVTlTw3u::=TlTw3u==TlTw3u===TlTwVTlUwMu⫝̸TlUwVTlVwXTlVwVTlWwXTlWwVTlXwMuⰰTlXwMuⰱTlXwMuⰲTlXwMuⰳTlXwMuⰴTlXwMuⰵTlXwMuⰶTlXwMuⰷTlXwMuⰸTlXwMuⰹTlXwMuⰺTlXwMuⰻTlXwMuⰼTlXwMuⰽTlXwMuⰾTlXwMuⰿTlXwMuⱀTlXwMuⱁTlXwMuⱂTlXwMuⱃTlXwMuⱄTlXwMuⱅTlXwMuⱆTlXwMuⱇTlXwMuⱈTlXwMuⱉTlXwMuⱊTlXwMuⱋTlXwMuⱌTlXwMuⱍTlXwMuⱎTlXwMuⱏTlXwMuⱐTlXwMuⱑTlXwMuⱒTlXwMuⱓTlXwMuⱔTlXwMuⱕLdTlXwMuⱖTlXwMuⱗTlXwMuⱘTlXwMuⱙTlXwMuⱚTlXwMuⱛTlXwMuⱜTlXwMuⱝTlXwMuⱞTlXwXTlXwVTlXwXTlXwMuⱡTlXwVTlXwMuɫTlXwMuᵽTlXwMuɽTlXwVTlXwMuⱨTlXwVTlXwMuⱪTlXwVTlXwMuⱬTlXwVTlXwMuɑTlXwMuɱTlXwMuɐTlXwMuɒTlXwVTlXwMuⱳTlXwVTlXwMuⱶTlXwVTlXwMwjTlXwMwvTlXwMuȿTlXwMuɀTlYwMuⲁTlYwVTlYwMuⲃTlYwVTlYwMuⲅTlYwVTlYwMuⲇTlYwVTlYwMuⲉTlYwVTlYwMuⲋTlYwVTlYwMuⲍTlYwVTlYwMuⲏTlYwVTlYwMuⲑTlYwVTlYwMuⲓTlYwVTlYwMuⲕTlYwVTlYwMuⲗTlYwVTlYwMuⲙTlYwVTlYwMuⲛTlYwVTlYwMuⲝTlYwVTlYwMuⲟTlYwVTlYwMuⲡTlYwVTlYwMuⲣTlYwVTlYwMuⲥTlYwVTlYwMuⲧTlYwVTlYwMuⲩTlYwVTlYwMuⲫTlYwVTlYwMuⲭTlYwVTlYwMuⲯTlYwVTlYwMuⲱTlYwVTlYwMuⲳTlYwVTlYwMuⲵTlYwVTlYwMuⲷTlYwVTlYwMuⲹTlYwVTlYwMuⲻTlYwVTlYwMuⲽTlYwVTlYwMuⲿLdTlYwVTlYwMuⳁTlYwVTlYwMuⳃTlYwVTlYwMuⳅTlYwVTlYwMuⳇTlYwVTlYwMuⳉTlYwVTlYwMuⳋTlYwVTlYwMuⳍTlYwVTlYwMuⳏTlYwVTlYwMuⳑTlYwVTlYwMuⳓTlYwVTlYwMuⳕTlYwVTlYwMuⳗTlYwVTlYwMuⳙTlYwVTlYwMuⳛTlYwVTlYwMuⳝTlYwVTlYwMuⳟTlYwVTlYwMuⳡTlYwVTlYwMuⳣTlYwVTlYwMuⳬTlYwVTlYwMuⳮTlYwVTlYwMuⳳTlYwVTlYwXTlYwVTlZwXTlZwVTlZwXTlZwVTlZwXTlZwVTlZwXTlZwMuⵡTlZwVTlZwXTlZwVTl[wXTl[wVTl[wXTl[wVTl[wXTl[wVTl[wXTl[wVTl[wXTl[wVTl[wXTl[wVTl[wXTl[wVTl[wXTl[wVTl[wXTl[wVTl\wXTl]wVTl]wXTl]wVTl]wMu母Tl]wVTl]wMu龟Tl]wXTl^wMu一Tl^wMu丨Tl^wMu丶Tl^wMu丿Tl^wMu乙Tl^wMu亅Tl^wMu二Tl^wMu亠Tl^wMu人Tl^wMu儿Tl^wMu入Tl^wMu八Tl^wMu冂Tl^wMu冖Tl^wMu冫Tl^wMu几Tl^wMu凵Tl^wMu刀LdTl^wMu力Tl^wMu勹Tl^wMu匕Tl^wMu匚Tl^wMu匸Tl^wMu十Tl^wMu卜Tl^wMu卩Tl^wMu厂Tl^wMu厶Tl^wMu又Tl^wMu口Tl^wMu囗Tl^wMu土Tl^wMu士Tl^wMu夂Tl^wMu夊Tl^wMu夕Tl^wMu大Tl^wMu女Tl^wMu子Tl^wMu宀Tl^wMu寸Tl^wMu小Tl^wMu尢Tl^wMu尸Tl^wMu屮Tl^wMu山Tl^wMu巛Tl^wMu工Tl^wMu己Tl^wMu巾Tl^wMu干Tl^wMu幺Tl^wMu广Tl^wMu廴Tl^wMu廾Tl^wMu弋Tl^wMu弓Tl^wMu彐Tl^wMu彡Tl^wMu彳Tl^wMu心Tl^wMu戈Tl^wMu戶Tl^wMu手Tl^wMu支Tl^wMu攴Tl^wMu文Tl^wMu斗Tl^wMu斤Tl^wMu方Tl^wMu无Tl^wMu日Tl^wMu曰Tl^wMu月Tl^wMu木Tl^wMu欠Tl^wMu止Tl^wMu歹Tl^wMu殳Tl^wMu毋Tl^wMu比Tl^wMu毛Tl^wMu氏Tl^wMu气Tl^wMu水Tl^wMu火Tl^wMu爪Tl^wMu父Tl^wMu爻Tl^wMu爿Tl^wMu片Tl^wMu牙Tl^wMu牛Tl^wMu犬Tl^wMu玄Tl^wMu玉Tl^wMu瓜Tl^wMu瓦Tl^wMu甘Tl^wMu生Tl^wMu用Tl^wMu田Tl^wMu疋Tl^wMu疒Tl^wMu癶Tl^wMu白Tl^wMu皮Tl^wMu皿Tl^wMu目Tl^wMu矛Tl^wMu矢Tl^wMu石Tl^wMu示Tl^wMu禸Tl^wMu禾Tl^wMu穴Tl^wMu立Tl^wMu竹LdTl^wMu米Tl^wMu糸Tl^wMu缶Tl^wMu网Tl^wMu羊Tl^wMu羽Tl^wMu老Tl^wMu而Tl^wMu耒Tl^wMu耳Tl_wMu聿Tl_wMu肉Tl_wMu臣Tl_wMu自Tl_wMu至Tl_wMu臼Tl_wMu舌Tl_wMu舛Tl_wMu舟Tl_wMu艮Tl_wMu色Tl_wMu艸Tl_wMu虍Tl_wMu虫Tl_wMu血Tl_wMu行Tl_wMu衣Tl_wMu襾Tl_wMu見Tl_wMu角Tl_wMu言Tl_wMu谷Tl_wMu豆Tl_wMu豕Tl_wMu豸Tl_wMu貝Tl_wMu赤Tl_wMu走Tl_wMu足Tl_wMu身Tl_wMu車Tl_wMu辛Tl_wMu辰Tl_wMu辵Tl_wMu邑Tl_wMu酉Tl_wMu釆Tl_wMu里Tl_wMu金Tl_wMu長Tl_wMu門Tl_wMu阜Tl_wMu隶Tl_wMu隹Tl_wMu雨Tl_wMu靑Tl_wMu非Tl_wMu面Tl_wMu革Tl_wMu韋Tl_wMu韭Tl_wMu音Tl_wMu頁Tl_wMu風Tl_wMu飛Tl_wMu食Tl_wMu首Tl_wMu香Tl_wMu馬Tl_wMu骨Tl_wMu高Tl_wMu髟Tl_wMu鬥Tl_wMu鬯Tl_wMu鬲Tl_wMu鬼Tl_wMu魚Tl_wMu鳥Tl_wMu鹵Tl_wMu鹿Tl_wMu麥Tl_wMu麻Tl_wMu黃Tl_wMu黍Tl_wMu黑Tl_wMu黹Tl_wMu黽Tl_wMu鼎Tl_wMu鼓Tl_wMu鼠Tl_wMu鼻Tl_wMu齊Tl_wMu齒Tl_wMu龍Tl_wMu龜Tl_wMu龠Tl_wXTl`w3w Tl`wVTl`wMw.LdTl`wVTl`wMu〒Tl`wVTl`wMu十Tl`wMu卄Tl`wMu卅Tl`wVTl`wXTl`wVTlawXTlawVTlaw3u ゙Tlaw3u ゚TlawVTlawMuよりTlawVTlawMuコトTlbwXTlbwVTlbwXTlbwMuᄀTlbwMuᄁTlbwMuᆪTlbwMuᄂTlbwMuᆬTlbwMuᆭTlbwMuᄃTlbwMuᄄTlbwMuᄅTlbwMuᆰTlbwMuᆱTlbwMuᆲTlbwMuᆳTlbwMuᆴTlbwMuᆵTlbwMuᄚTlbwMuᄆTlbwMuᄇTlbwMuᄈTlbwMuᄡTlbwMuᄉTlbwMuᄊTlbwMuᄋTlbwMuᄌTlbwMuᄍTlbwMuᄎTlbwMuᄏTlbwMuᄐTlbwMuᄑTlbwMuᄒTlbwMuᅡTlbwMuᅢTlbwMuᅣTlbwMuᅤTlbwMuᅥTlbwMuᅦTlbwMuᅧTlbwMuᅨTlbwMuᅩTlbwMuᅪTlbwMuᅫTlbwMuᅬTlbwMuᅭTlbwMuᅮTlbwMuᅯTlbwMuᅰTlbwMuᅱTlbwMuᅲTlbwMuᅳTlbwMuᅴTlbwMuᅵTlbwXTlbwMuᄔTlbwMuᄕTlbwMuᇇTlbwMuᇈTlbwMuᇌTlbwMuᇎTlbwMuᇓTlbwMuᇗTlbwMuᇙTlbwMuᄜTlbwMuᇝTlbwMuᇟTlbwMuᄝTlbwMuᄞTlbwMuᄠTlbwMuᄢTlbwMuᄣTlbwMuᄧTlbwMuᄩTlbwMuᄫTlbwMuᄬTlbwMuᄭTlbwMuᄮTlbwMuᄯTlbwMuᄲTlbwMuᄶTlbwMuᅀTlcwMuᅇLdTlcwMuᅌTlcwMuᇱTlcwMuᇲTlcwMuᅗTlcwMuᅘTlcwMuᅙTlcwMuᆄTlcwMuᆅTlcwMuᆈTlcwMuᆑTlcwMuᆒTlcwMuᆔTlcwMuᆞTlcwMuᆡTlcwXTlcwVTlcwMu一TlcwMu二TlcwMu三TlcwMu四TlcwMu上TlcwMu中TlcwMu下TlcwMu甲TlcwMu乙TlcwMu丙TlcwMu丁TlcwMu天TlcwMu地TlcwMu人TlcwVTlcwXTlcwVTldw3u(ᄀ)Tldw3u(ᄂ)Tldw3u(ᄃ)Tldw3u(ᄅ)Tldw3u(ᄆ)Tldw3u(ᄇ)Tldw3u(ᄉ)Tldw3u(ᄋ)Tldw3u(ᄌ)Tldw3u(ᄎ)Tldw3u(ᄏ)Tldw3u(ᄐ)Tldw3u(ᄑ)Tldw3u(ᄒ)Tldw3u(가)Tldw3u(나)Tldw3u(다)Tldw3u(라)Tldw3u(마)Tldw3u(바)Tldw3u(사)Tldw3u(아)Tldw3u(자)Tldw3u(차)Tldw3u(카)Tldw3u(타)Tldw3u(파)Tldw3u(하)Tldw3u(주)Tldw3u(오전)Tldw3u(오후)TldwXTldw3u(一)Tldw3u(二)Tldw3u(三)Tldw3u(四)Tldw3u(五)Tldw3u(六)Tldw3u(七)Tldw3u(八)Tldw3u(九)Tldw3u(十)Tldw3u(月)Tldw3u(火)Tldw3u(水)Tldw3u(木)Tldw3u(金)Tldw3u(土)Tldw3u(日)Tldw3u(株)Tldw3u(有)Tldw3u(社)Tldw3u(名)Tldw3u(特)Tldw3u(財)Tldw3u(祝)Tldw3u(労)Tldw3u(代)Tldw3u(呼)Tldw3u(学)Tldw3u(監)Tldw3u(企)Tldw3u(資)Tldw3u(協)Tldw3u(祭)Tldw3u(休)Tldw3u(自)LdTldw3u(至)TldwMu問TldwMu幼TldwMu文TldwMu箏TldwVTldwMapteTldwMu21TldwMu22TldwMu23TldwMu24TldwMu25TldwMu26TldwMu27TldwMu28TldwMu29TldwMu30TldwMu31TldwMu32TldwMu33TldwMu34TldwMu35TldwMuᄀTldwMuᄂTldwMuᄃTldwMuᄅTldwMuᄆTldwMuᄇTldwMuᄉTldwMuᄋTldwMuᄌTldwMuᄎTldwMuᄏTldwMuᄐTldwMuᄑTldwMuᄒTldwMu가TldwMu나TldwMu다TldwMu라TldwMu마TldwMu바TldwMu사TldwMu아TldwMu자TldwMu차TldwMu카TldwMu타TldwMu파TldwMu하TldwMu참고TldwMu주의TldwMu우TldwVTlewMu一TlewMu二TlewMu三TlewMu四TlewMu五TlewMu六TlewMu七TlewMu八TlewMu九TlewMu十TlewMu月TlewMu火TlewMu水TlewMu木TlewMu金TlewMu土TlewMu日TlewMu株TlewMu有TlewMu社TlewMu名TlewMu特TlewMu財TlewMu祝TlewMu労TlewMu秘TlewMu男TlewMu女TlewMu適TlewMu優TlewMu印TlewMu注TlewMu項TlewMu休TlewMu写TlewMu正TlewMu上TlewMu中TlewMu下TlewMu左TlewMu右TlewMu医TlewMu宗TlewMu学TlewMu監TlewMu企LdTlewMu資TlewMu協TlewMu夜TlewMu36TlewMu37TlewMu38TlewMu39TlewMu40TlewMu41TlewMu42TlewMu43TlewMu44TlewMu45TlewMu46TlewMu47TlewMu48TlewMu49TlewMu50TlewMu1月TlewMu2月TlewMu3月TlewMu4月TlewMu5月TlewMu6月TlewMu7月TlewMu8月TlewMu9月TlewMu10月TlewMu11月TlewMu12月TlewMahgTlewMaergTlewMaevTlewMaltdTlewMuアTlewMuイTlewMuウTlewMuエTlewMuオTlewMuカTlewMuキTlewMuクTlewMuケTlewMuコTlewMuサTlewMuシTlewMuスTlewMuセTlewMuソTlewMuタTlewMuチTlewMuツTlewMuテTlewMuトTlewMuナTlewMuニTlewMuヌTlewMuネTlewMuノTlewMuハTlewMuヒTlewMuフTlewMuヘTlewMuホTlewMuマTlewMuミTlewMuムTlewMuメTlewMuモTlewMuヤTlewMuユTlewMuヨTlewMuラTlewMuリTlewMuルTlewMuレTlewMuロTlewMuワTlewMuヰTlewMuヱTlewMuヲTlewMu令和TlfwMuアパートTlfwMuアルファTlfwMuアンペアTlfwMuアールTlfwMuイニングTlfwMuインチTlfwMuウォンTlfwMuエスクードTlfwMuエーカーTlfwMuオンスTlfwMuオームTlfwMuカイリTlfwMuカラットTlfwMuカロリーTlfwMuガロンTlfwMuガンマTlfwMuギガTlfwMuギニーLdTlfwMuキュリーTlfwMuギルダーTlfwMuキロTlfwMuキログラムTlfwMuキロメートルTlfwMuキロワットTlfwMuグラムTlfwMuグラムトンTlfwMuクルゼイロTlfwMuクローネTlfwMuケースTlfwMuコルナTlfwMuコーポTlfwMuサイクルTlfwMuサンチームTlfwMuシリングTlfwMuセンチTlfwMuセントTlfwMuダースTlfwMuデシTlfwMuドルTlfwMuトンTlfwMuナノTlfwMuノットTlfwMuハイツTlfwMuパーセントTlfwMuパーツTlfwMuバーレルTlfwMuピアストルTlfwMuピクルTlfwMuピコTlfwMuビルTlfwMuファラッドTlfwMuフィートTlfwMuブッシェルTlfwMuフランTlfwMuヘクタールTlfwMuペソTlfwMuペニヒTlfwMuヘルツTlfwMuペンスTlfwMuページTlfwMuベータTlfwMuポイントTlfwMuボルトTlfwMuホンTlfwMuポンドTlfwMuホールTlfwMuホーンTlfwMuマイクロTlfwMuマイルTlfwMuマッハTlfwMuマルクTlfwMuマンションTlfwMuミクロンTlfwMuミリTlfwMuミリバールTlfwMuメガTlfwMuメガトンTlfwMuメートルTlfwMuヤードTlfwMuヤールTlfwMuユアンTlfwMuリットルTlfwMuリラTlfwMuルピーTlfwMuルーブルTlfwMuレムTlfwMuレントゲンTlfwMuワットTlfwMu0点TlfwMu1点TlfwMu2点TlfwMu3点TlfwMu4点TlfwMu5点TlfwMu6点TlfwMu7点TlfwMu8点TlfwMu9点TlfwMu10点TlfwMu11点TlfwMu12点TlfwMu13点TlfwMu14点TlfwMu15点TlfwMu16点TlfwMu17点TlfwMu18点TlfwMu19点TlfwMu20点TlfwMu21点TlfwMu22点TlfwMu23点TlfwMu24点TlfwMahpaTlfwMadaTlfwMaauTlfwMabarTlfwMaovLdTlfwMapcTlfwMadmTlfwMadm2TlfwMadm3TlfwMaiuTlfwMu平成TlfwMu昭和TlfwMu大正TlfwMu明治TlfwMu株式会社TlgwMapaTlgwManaTlgwMuμaTlgwMamaTlgwMakaTlgwMakbTlgwMambTlgwMagbTlgwMacalTlgwMakcalTlgwMapfTlgwManfTlgwMuμfTlgwMuμgTlgwMamgTlgwMakgTlgwMahzTlgwMakhzTlgwMamhzTlgwMaghzTlgwMathzTlgwMuμlTlgwMamlTlgwMadlTlgwMaklTlgwMafmTlgwManmTlgwMuμmTlgwMammTlgwMacmTlgwMakmTlgwMamm2TlgwMacm2TlgwMam2TlgwMakm2TlgwMamm3TlgwMacm3TlgwMam3TlgwMakm3TlgwMum∕sTlgwMum∕s2TlgwMapaTlgwMakpaTlgwMampaTlgwMagpaTlgwMaradTlgwMurad∕sTlgwMurad∕s2TlgwMapsTlgwMansTlgwMuμsTlgwMamsTlgwMapvTlgwManvTlgwMuμvTlgwMamvTlgwMakvTlgwMamvTlgwMapwTlgwManwTlgwMuμwTlgwMamwTlgwMakwTlgwMamwTlgwMukωTlgwMumωTlgwXTlgwMabqTlgwMaccTlgwMacdTlgwMuc∕kgTlgwXTlgwMadbTlgwMagyTlgwMahaTlgwMahpTlgwMainTlgwMakkTlgwMakmTlgwMaktTlgwMalmTlgwMalnTlgwMalogTlgwMalxTlgwMambTlgwMamilTlgwMamolTlgwMaphTlgwXTlgwMappmLdTlgwMaprTlgwMasrTlgwMasvTlgwMawbTlgwMuv∕mTlgwMua∕mTlgwMu1日TlgwMu2日TlgwMu3日TlgwMu4日TlgwMu5日TlgwMu6日TlgwMu7日TlgwMu8日TlgwMu9日TlgwMu10日TlgwMu11日TlgwMu12日TlgwMu13日TlgwMu14日TlgwMu15日TlgwMu16日TlgwMu17日TlgwMu18日TlgwMu19日TlgwMu20日TlgwMu21日TlgwMu22日TlgwMu23日TlgwMu24日TlgwMu25日TlgwMu26日TlgwMu27日TlgwMu28日TlgwMu29日TlgwMu30日TlgwMu31日TlgwMagalTlhwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMuꙁTlwVTlwMuꙃTlwVTlwMuꙅTlwVTlwMuꙇTlwVTlwMuꙉTlwVTlwMuꙋTlwVTlwMuꙍTlwVTlwMuꙏTlwVTlwMuꙑTlwVTlwMuꙓTlwVTlwMuꙕTlwVTlwMuꙗTlwVTlwMuꙙTlwVTlwMuꙛTlwVTlwMuꙝTlwVTlwMuꙟTlwVTlwMuꙡTlwVTlwMuꙣTlwVTlwMuꙥTlwVTlwMuꙧTlwVTlwMuꙩTlwVTlwMuꙫTlwVTlwMuꙭTlwVTlwMuꚁTlwVTlwMuꚃTlwVTlwMuꚅTlwVTlwMuꚇTlwVLdTlwMuꚉTlwVTlwMuꚋTlwVTlwMuꚍTlwVTlwMuꚏTlwVTlwMuꚑTlwVTlwMuꚓTlwVTlwMuꚕTlwVTlwMuꚗTlwVTlwMuꚙTlwVTlwMuꚛTlwVTlwMuъTlwMuьTlwVTlwXTlwVTlwMuꜣTlwVTlwMuꜥTlwVTlwMuꜧTlwVTlwMuꜩTlwVTlwMuꜫTlwVTlwMuꜭTlwVTlwMuꜯTlwVTlwMuꜳTlwVTlwMuꜵTlwVTlwMuꜷTlwVTlwMuꜹTlwVTlwMuꜻTlwVTlwMuꜽTlwVTlwMuꜿTlwVTlwMuꝁTlwVTlwMuꝃTlwVTlwMuꝅTlwVTlwMuꝇTlwVTlwMuꝉTlwVTlwMuꝋTlwVTlwMuꝍTlwVTlwMuꝏTlwVTlwMuꝑTlwVTlwMuꝓTlwVTlwMuꝕTlwVTlwMuꝗTlwVTlwMuꝙTlwVTlwMuꝛTlwVTlwMuꝝTlwVTlwMuꝟTlwVTlwMuꝡTlwVTlwMuꝣTlwVTlwMuꝥTlwVTlwMuꝧTlwVTlwMuꝩTlwVTlwMuꝫTlwVTlwMuꝭTlwVTlwMuꝯLdTlwVTlwMuꝯTlwVTlwMuꝺTlwVTlwMuꝼTlwVTlwMuᵹTlwMuꝿTlwVTlwMuꞁTlwVTlwMuꞃTlwVTlwMuꞅTlwVTlwMuꞇTlwVTlwMuꞌTlwVTlwMuɥTlwVTlwMuꞑTlwVTlwMuꞓTlwVTlwMuꞗTlwVTlwMuꞙTlwVTlwMuꞛTlwVTlwMuꞝTlwVTlwMuꞟTlwVTlwMuꞡTlwVTlwMuꞣTlwVTlwMuꞥTlwVTlwMuꞧTlwVTlwMuꞩTlwVTlwMuɦTlwMuɜTlwMuɡTlwMuɬTlwMuɪTlwVTlwMuʞTlwMuʇTlwMuʝTlwMuꭓTlwMuꞵTlwVTlwMuꞷTlwVTlwMuꞹTlwVTlwMuꞻTlwVTlwMuꞽTlwVTlwMuꞿTlwVTlwXTlwMuꟃTlwVTlwMuꞔTlwMuʂTlwMuᶎTlwMuꟈTlwVTlwMuꟊTlwVTlwXTlwMuꟶTlwVTlwMuħTlwMuœTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVLdTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwMuꜧTlwMuꬷTlwMuɫTlwMuꭒTlwVTlwMuʍTlwVTlwXTlwMuᎠTlwMuᎡTlwMuᎢTlwMuᎣTlwMuᎤTlwMuᎥTlwMuᎦTlwMuᎧTlwMuᎨTlwMuᎩTlwMuᎪTlwMuᎫTlwMuᎬTlwMuᎭTlwMuᎮTlwMuᎯTlwMuᎰTlwMuᎱTlwMuᎲTlwMuᎳTlwMuᎴTlwMuᎵTlwMuᎶTlwMuᎷTlwMuᎸTlwMuᎹTlwMuᎺTlwMuᎻTlwMuᎼTlwMuᎽTlwMuᎾTlwMuᎿTlwMuᏀTlwMuᏁTlwMuᏂTlwMuᏃTlwMuᏄTlwMuᏅTlwMuᏆTlwMuᏇTlwMuᏈTlwMuᏉTlwMuᏊTlwMuᏋTlwMuᏌTlwMuᏍTlwMuᏎTlwMuᏏTlwMuᏐTlwMuᏑTlwMuᏒTlwMuᏓTlwMuᏔTlwMuᏕTlwMuᏖTlwMuᏗTlwMuᏘTlwMuᏙTlwMuᏚTlwMuᏛTlwMuᏜTlwMuᏝTlwMuᏞTlwMuᏟTlwMuᏠTlwMuᏡTlwMuᏢTlwMuᏣLdTlwMuᏤTlwMuᏥTlwMuᏦTlwMuᏧTlwMuᏨTlwMuᏩTlwMuᏪTlwMuᏫTlwMuᏬTlwMuᏭTlwMuᏮTlwMuᏯTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlǯwXTl˯wVTlwXTlwMu豈TlwMu更TlwMu車TlwMu賈TlwMu滑TlwMu串TlwMu句TlwMu龜TlwMu契TlwMu金TlwMu喇TlwMu奈TlwMu懶TlwMu癩TlwMu羅TlwMu蘿TlwMu螺TlwMu裸TlwMu邏TlwMu樂TlwMu洛TlwMu烙TlwMu珞TlwMu落TlwMu酪TlwMu駱TlwMu亂TlwMu卵TlwMu欄TlwMu爛TlwMu蘭TlwMu鸞TlwMu嵐TlwMu濫TlwMu藍TlwMu襤TlwMu拉TlwMu臘TlwMu蠟TlwMu廊TlwMu朗TlwMu浪TlwMu狼TlwMu郎TlwMu來TlwMu冷TlwMu勞TlwMu擄TlwMu櫓TlwMu爐TlwMu盧TlwMu老TlwMu蘆TlwMu虜TlwMu路TlwMu露TlwMu魯TlwMu鷺TlwMu碌TlwMu祿TlwMu綠TlwMu菉TlwMu錄TlwMu鹿TlwMu論TlwMu壟TlwMu弄TlwMu籠TlwMu聾TlwMu牢TlwMu磊TlwMu賂TlwMu雷TlwMu壘TlwMu屢TlwMu樓TlwMu淚TlwMu漏LdTlwMu累TlwMu縷TlwMu陋TlwMu勒TlwMu肋TlwMu凜TlwMu凌TlwMu稜TlwMu綾TlwMu菱TlwMu陵TlwMu讀TlwMu拏TlwMu樂TlwMu諾TlwMu丹TlwMu寧TlwMu怒TlwMu率TlwMu異TlwMu北TlwMu磻TlwMu便TlwMu復TlwMu不TlwMu泌TlwMu數TlwMu索TlwMu參TlwMu塞TlwMu省TlwMu葉TlwMu說TlwMu殺TlwMu辰TlwMu沈TlwMu拾TlwMu若TlwMu掠TlwMu略TlwMu亮TlwMu兩TlwMu凉TlwMu梁TlwMu糧TlwMu良TlwMu諒TlwMu量TlwMu勵TlwMu呂TlwMu女TlwMu廬TlwMu旅TlwMu濾TlwMu礪TlwMu閭TlwMu驪TlwMu麗TlwMu黎TlwMu力TlwMu曆TlwMu歷TlwMu轢TlwMu年TlwMu憐TlwMu戀TlwMu撚TlwMu漣TlwMu煉TlwMu璉TlwMu秊TlwMu練TlwMu聯TlwMu輦TlwMu蓮TlwMu連TlwMu鍊TlwMu列TlwMu劣TlwMu咽TlwMu烈TlwMu裂TlwMu說TlwMu廉TlwMu念TlwMu捻TlwMu殮TlwMu簾TlwMu獵TlwMu令TlwMu囹TlwMu寧TlwMu嶺TlwMu怜TlwMu玲TlwMu瑩TlwMu羚TlwMu聆TlwMu鈴TlwMu零LdTlwMu靈TlwMu領TlwMu例TlwMu禮TlwMu醴TlwMu隸TlwMu惡TlwMu了TlwMu僚TlwMu寮TlwMu尿TlwMu料TlwMu樂TlwMu燎TlwMu療TlwMu蓼TlwMu遼TlwMu龍TlwMu暈TlwMu阮TlwMu劉TlwMu杻TlwMu柳TlwMu流TlwMu溜TlwMu琉TlwMu留TlwMu硫TlwMu紐TlwMu類TlwMu六TlwMu戮TlwMu陸TlwMu倫TlwMu崙TlwMu淪TlwMu輪TlwMu律TlwMu慄TlwMu栗TlwMu率TlwMu隆TlwMu利TlwMu吏TlwMu履TlwMu易TlwMu李TlwMu梨TlwMu泥TlwMu理TlwMu痢TlwMu罹TlwMu裏TlwMu裡TlwMu里TlwMu離TlwMu匿TlwMu溺TlwMu吝TlwMu燐TlwMu璘TlwMu藺TlwMu隣TlwMu鱗TlwMu麟TlwMu林TlwMu淋TlwMu臨TlwMu立TlwMu笠TlwMu粒TlwMu狀TlwMu炙TlwMu識TlwMu什TlwMu茶TlwMu刺TlwMu切TlwMu度TlwMu拓TlwMu糖TlwMu宅TlwMu洞TlwMu暴TlwMu輻TlwMu行TlwMu降TlwMu見TlwMu廓TlwMu兀TlwMu嗀TlwVTlwMu塚TlwVTlwMu晴TlwVTlwMu凞TlwMu猪TlwMu益TlwMu礼LdTlwMu神TlwMu祥TlwMu福TlwMu靖TlwMu精TlwMu羽TlwVTlwMu蘒TlwVTlwMu諸TlwVTlwMu逸TlwMu都TlwVTlwMu飯TlwMu飼TlwMu館TlwMu鶴TlwMu郞TlwMu隷TlwMu侮TlwMu僧TlwMu免TlwMu勉TlwMu勤TlwMu卑TlwMu喝TlwMu嘆TlwMu器TlwMu塀TlwMu墨TlwMu層TlwMu屮TlwMu悔TlwMu慨TlwMu憎TlwMu懲TlwMu敏TlwMu既TlwMu暑TlwMu梅TlwMu海TlwMu渚TlwMu漢TlwMu煮TlwMu爫TlwMu琢TlwMu碑TlwMu社TlwMu祉TlwMu祈TlwMu祐TlwMu祖TlwMu祝TlwMu禍TlwMu禎TlwMu穀TlwMu突TlwMu節TlwMu練TlwMu縉TlwMu繁TlwMu署TlwMu者TlwMu臭TlwMu艹TlwMu著TlwMu褐TlwMu視TlwMu謁TlwMu謹TlwMu賓TlwMu贈TlwMu辶TlwMu逸TlwMu難TlwMu響TlwMu頻TlwMu恵TlwMu𤋮TlwMu舘TlwXTlwMu並TlwMu况TlwMu全TlwMu侀TlwMu充TlwMu冀TlwMu勇TlwMu勺TlwMu喝TlwMu啕TlwMu喙TlwMu嗢TlwMu塚TlwMu墳TlwMu奄TlwMu奔TlwMu婢TlwMu嬨LdTlwMu廒TlwMu廙TlwMu彩TlwMu徭TlwMu惘TlwMu慎TlwMu愈TlwMu憎TlwMu慠TlwMu懲TlwMu戴TlwMu揄TlwMu搜TlwMu摒TlwMu敖TlwMu晴TlwMu朗TlwMu望TlwMu杖TlwMu歹TlwMu殺TlwMu流TlwMu滛TlwMu滋TlwMu漢TlwMu瀞TlwMu煮TlwMu瞧TlwMu爵TlwMu犯TlwMu猪TlwMu瑱TlwMu甆TlwMu画TlwMu瘝TlwMu瘟TlwMu益TlwMu盛TlwMu直TlwMu睊TlwMu着TlwMu磌TlwMu窱TlwMu節TlwMu类TlwMu絛TlwMu練TlwMu缾TlwMu者TlwMu荒TlwMu華TlwMu蝹TlwMu襁TlwMu覆TlwMu視TlwMu調TlwMu諸TlwMu請TlwMu謁TlwMu諾TlwMu諭TlwMu謹TlwMu變TlwMu贈TlwMu輸TlwMu遲TlwMu醙TlwMu鉶TlwMu陼TlwMu難TlwMu靖TlwMu韛TlwMu響TlwMu頋TlwMu頻TlwMu鬒TlwMu龜TlwMu𢡊TlwMu𢡄TlwMu𣏕TlwMu㮝TlwMu䀘TlwMu䀹TlwMu𥉉TlwMu𥳐TlwMu𧻓TlwMu齃TlwMu龎TlwXTlwMaffTlwMafiTlwMaflTlwMaffiTlwMafflTlwMastTlwXTlwMuմնTlwMuմեTlwMuմիTlwMuվնLdTlwMuմխTlwXTlwMuיִTlwVTlwMuײַTlwMuעTlwMuאTlwMuדTlwMuהTlwMuכTlwMuלTlwMuםTlwMuרTlwMuתTlw3w+TlwMuשׁTlwMuשׂTlwMuשּׁTlwMuשּׂTlwMuאַTlwMuאָTlwMuאּTlwMuבּTlwMuגּTlwMuדּTlwMuהּTlwMuוּTlwMuזּTlwXTlwMuטּTlwMuיּTlwMuךּTlwMuכּTlwMuלּTlwXTlwMuמּTlwXTlwMuנּTlwMuסּTlwXTlwMuףּTlwMuפּTlwXTlwMuצּTlwMuקּTlwMuרּTlwMuשּTlwMuתּTlwMuוֹTlwMuבֿTlwMuכֿTlwMuפֿTlwMuאלTlwMuٱTlwMuٻTlwMuپTlwMuڀTlwMuٺTlwMuٿTlwMuٹTlwMuڤTlwMuڦTlwMuڄTlwMuڃTlwMuچTlwMuڇTlwMuڍTlwMuڌTlwMuڎTlwMuڈTlwMuژTlwMuڑTlwMuکTlwMuگTlwMuڳTlwMuڱTlwMuںTlwMuڻTlwMuۀTlwMuہTlwMuھTlwMuےTlwMuۓTlwVTlwXTlwMuڭTlwMuۇTlwMuۆTlwMuۈTlwMuۇٴTlwMuۋTlwMuۅTlwMuۉTlwMuېTlwMuىTlwMuئاTlwMuئەTlwMuئوTlwMuئۇTlwMuئۆLdTlwMuئۈTlwMuئېTlwMuئىTlwMuیTlwMuئجTlwMuئحTlwMuئمTlwMuئىTlwMuئيTlwMuبجTlwMuبحTlwMuبخTlwMuبمTlwMuبىTlwMuبيTlwMuتجTlwMuتحTlwMuتخTlwMuتمTlwMuتىTlwMuتيTlwMuثجTlwMuثمTlwMuثىTlwMuثيTlwMuجحTlwMuجمTlwMuحجTlwMuحمTlwMuخجTlwMuخحTlwMuخمTlwMuسجTlwMuسحTlwMuسخTlwMuسمTlwMuصحTlwMuصمTlwMuضجTlwMuضحTlwMuضخTlwMuضمTlwMuطحTlwMuطمTlwMuظمTlwMuعجTlwMuعمTlwMuغجTlwMuغمTlwMuفجTlwMuفحTlwMuفخTlwMuفمTlwMuفىTlwMuفيTlwMuقحTlwMuقمTlwMuقىTlwMuقيTlwMuكاTlwMuكجTlwMuكحTlwMuكخTlwMuكلTlwMuكمTlwMuكىTlwMuكيTlwMuلجTlwMuلحTlwMuلخTlwMuلمTlwMuلىTlwMuليTlwMuمجTlwMuمحTlwMuمخTlwMuممTlwMuمىTlwMuميTlwMuنجTlwMuنحTlwMuنخTlwMuنمTlwMuنىTlwMuنيTlwMuهجTlwMuهمTlwMuهىTlwMuهيTlwMuيجTlwMuيحTlwMuيخTlwMuيمTlwMuيىTlwMuييTlwMuذٰTlwMuرٰTlwMuىٰTlw3u ٌّTlw3u ٍّLdTlw3u َّTlw3u ُّTlw3u ِّTlw3u ّٰTlwMuئرTlwMuئزTlwMuئمTlwMuئنTlwMuئىTlwMuئيTlwMuبرTlwMuبزTlwMuبمTlwMuبنTlwMuبىTlwMuبيTlwMuترTlwMuتزTlwMuتمTlwMuتنTlwMuتىTlwMuتيTlwMuثرTlwMuثزTlwMuثمTlwMuثنTlwMuثىTlwMuثيTlwMuفىTlwMuفيTlwMuقىTlwMuقيTlwMuكاTlwMuكلTlwMuكمTlwMuكىTlwMuكيTlwMuلمTlwMuلىTlwMuليTlwMuماTlwMuممTlwMuنرTlwMuنزTlwMuنمTlwMuننTlwMuنىTlwMuنيTlwMuىٰTlwMuيرTlwMuيزTlwMuيمTlwMuينTlwMuيىTlwMuييTlwMuئجTlwMuئحTlwMuئخTlwMuئمTlwMuئهTlwMuبجTlwMuبحTlwMuبخTlwMuبمTlwMuبهTlwMuتجTlwMuتحTlwMuتخTlwMuتمTlwMuتهTlwMuثمTlwMuجحTlwMuجمTlwMuحجTlwMuحمTlwMuخجTlwMuخمTlwMuسجTlwMuسحTlwMuسخTlwMuسمTlwMuصحTlwMuصخTlwMuصمTlwMuضجTlwMuضحTlwMuضخTlwMuضمTlwMuطحTlwMuظمTlwMuعجTlwMuعمTlwMuغجTlwMuغمTlwMuفجTlwMuفحTlwMuفخTlwMuفمTlwMuقحTlwMuقمLdTlwMuكجTlwMuكحTlwMuكخTlwMuكلTlwMuكمTlwMuلجTlwMuلحTlwMuلخTlwMuلمTlwMuلهTlwMuمجTlwMuمحTlwMuمخTlwMuممTlwMuنجTlwMuنحTlwMuنخTlwMuنمTlwMuنهTlwMuهجTlwMuهمTlwMuهٰTlwMuيجTlwMuيحTlwMuيخTlwMuيمTlwMuيهTlwMuئمTlwMuئهTlwMuبمTlwMuبهTlwMuتمTlwMuتهTlwMuثمTlwMuثهTlwMuسمTlwMuسهTlwMuشمTlwMuشهTlwMuكلTlwMuكمTlwMuلمTlwMuنمTlwMuنهTlwMuيمTlwMuيهTlwMuـَّTlwMuـُّTlwMuـِّTlwMuطىTlwMuطيTlwMuعىTlwMuعيTlwMuغىTlwMuغيTlwMuسىTlwMuسيTlwMuشىTlwMuشيTlwMuحىTlwMuحيTlwMuجىTlwMuجيTlwMuخىTlwMuخيTlwMuصىTlwMuصيTlwMuضىTlwMuضيTlwMuشجTlwMuشحTlwMuشخTlwMuشمTlwMuشرTlwMuسرTlwMuصرTlwMuضرTlwMuطىTlwMuطيTlwMuعىTlwMuعيTlwMuغىTlwMuغيTlwMuسىTlwMuسيTlwMuشىTlwMuشيTlwMuحىTlwMuحيTlwMuجىTlwMuجيTlwMuخىTlwMuخيTlwMuصىTlwMuصيTlwMuضىTlwMuضيTlwMuشجTlwMuشحTlwMuشخLdTlwMuشمTlwMuشرTlwMuسرTlwMuصرTlwMuضرTlwMuشجTlwMuشحTlwMuشخTlwMuشمTlwMuسهTlwMuشهTlwMuطمTlwMuسجTlwMuسحTlwMuسخTlwMuشجTlwMuشحTlwMuشخTlwMuطمTlwMuظمTlwMuاًTlwVTlwXTlwMuتجمTlwMuتحجTlwMuتحمTlwMuتخمTlwMuتمجTlwMuتمحTlwMuتمخTlwMuجمحTlwMuحميTlwMuحمىTlwMuسحجTlwMuسجحTlwMuسجىTlwMuسمحTlwMuسمجTlwMuسممTlwMuصححTlwMuصممTlwMuشحمTlwMuشجيTlwMuشمخTlwMuشممTlwMuضحىTlwMuضخمTlwMuطمحTlwMuطممTlwMuطميTlwMuعجمTlwMuعممTlwMuعمىTlwMuغممTlwMuغميTlwMuغمىTlwMuفخمTlwMuقمحTlwMuقممTlwMuلحمTlwMuلحيTlwMuلحىTlwMuلججTlwMuلخمTlwMuلمحTlwMuمحجTlwMuمحمTlwMuمحيTlwMuمجحTlwMuمجمTlwMuمخجTlwMuمخمTlwXTlwMuمجخTlwMuهمجTlwMuهممTlwMuنحمTlwMuنحىTlwMuنجمTlwMuنجىTlwMuنميTlwMuنمىTlwMuيممTlwMuبخيTlwMuتجيTlwMuتجىTlwMuتخيTlwMuتخىTlwMuتميTlwMuتمىTlwMuجميTlwMuجحىTlwMuجمىTlwMuسخىTlwMuصحيTlwMuشحيTlwMuضحيTlwMuلجيTlwMuلميTlwMuيحيLdTlwMuيجيTlwMuيميTlwMuمميTlwMuقميTlwMuنحيTlwMuقمحTlwMuلحمTlwMuعميTlwMuكميTlwMuنجحTlwMuمخيTlwMuلجمTlwMuكممTlwMuلجمTlwMuنجحTlwMuجحيTlwMuحجيTlwMuمجيTlwMuفميTlwMuبحيTlwMuكممTlwMuعجمTlwMuصممTlwMuسخيTlwMuنجيTlwXTlwMuصلےTlwMuقلےTlwMuاللهTlwMuاكبرTlwMuمحمدTlwMuصلعمTlwMuرسولTlwMuعليهTlwMuوسلمTlwMuصلىTlw3uصلى الله عليه وسلمTlw3uجل جلالهTlwMuریالTlwVTlwXTlwITlw3w,TlwMu、TlwXTlw3w:Tlw3w;Tlw3w!Tlw3w?TlwMu〖TlwMu〗TlwXTlwVTlwXTlwMu—TlwMu–Tlw3w_Tlw3w(Tlw3w)Tlw3w{Tlw3w}TlwMu〔TlwMu〕TlwMu【TlwMu】TlwMu《TlwMu》TlwMu〈TlwMu〉TlwMu「TlwMu」TlwMu『TlwMu』TlwVTlw3w[Tlw3w]Tlw3u ̅Tlw3w_Tlw3w,TlwMu、TlwXTlw3w;Tlw3w:Tlw3w?Tlw3w!TlwMu—Tlw3w(Tlw3w)Tlw3w{Tlw3w}TlwMu〔TlwMu〕Tlw3w#Tlw3w&Tlw3w*Tlw3w+TlwMw-Tlw3w<Tlw3w>Tlw3w=LdTlwXTlw3w\Tlw3w$Tlw3w%Tlw3w@TlwXTlw3u ًTlwMuـًTlw3u ٌTlwVTlw3u ٍTlwXTlw3u َTlwMuـَTlw3u ُTlwMuـُTlw3u ِTlwMuـِTlw3u ّTlwMuـّTlw3u ْTlwMuـْTlwMuءTlwMuآTlwMuأTlwMuؤTlwMuإTlwMuئTlwMuاTlwMuبTlwMuةTlwMuتTlwMuثTlwMuجTlwMuحTlwMuخTlwMuدTlwMuذTlwMuرTlwMuزTlwMuسTlwMuشTlwMuصTlwMuضTlwMuطTlwMuظTlwMuعTlwMuغTlwMuفTlwMuقTlwMuكTlwMuلTlwMuمTlwMuنTlwMuهTlwMuوTlwMuىTlwMuيTlwMuلآTlwMuلأTlwMuلإTlwMuلاTlwXTlwITlwXTlw3w!Tlw3w"Tlw3w#Tlw3w$Tlw3w%Tlw3w&Tlw3w'Tlw3w(Tlw3w)Tlw3w*Tlw3w+Tlw3w,TlwMw-TlwMw.Tlw3w/TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9Tlw3w:Tlw3w;Tlw3w<Tlw3w=Tlw3w>Tlw3w?Tlw3w@TlwMwaTlwMwbTlwMwcLdTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlw3w[Tlw3w\Tlw3w]Tlw3w^Tlw3w_Tlw3w`TlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlw3w{Tlw3w|Tlw3w}Tlw3w~TlwMu⦅TlwMu⦆TlwMw.TlwMu「TlwMu」TlwMu、TlwMu・TlwMuヲTlwMuァTlwMuィTlwMuゥTlwMuェTlwMuォTlwMuャTlwMuュTlwMuョTlwMuッTlwMuーTlwMuアTlwMuイTlwMuウTlwMuエTlwMuオTlwMuカTlwMuキTlwMuクTlwMuケTlwMuコTlwMuサTlwMuシTlwMuスTlwMuセTlwMuソTlwMuタTlwMuチTlwMuツTlwMuテTlwMuトTlwMuナTlwMuニTlwMuヌLdTlwMuネTlwMuノTlwMuハTlwMuヒTlwMuフTlwMuヘTlwMuホTlwMuマTlwMuミTlwMuムTlwMuメTlwMuモTlwMuヤTlwMuユTlwMuヨTlwMuラTlwMuリTlwMuルTlwMuレTlwMuロTlwMuワTlwMuンTlwMu゙TlwMu゚TlwXTlwMuᄀTlwMuᄁTlwMuᆪTlwMuᄂTlwMuᆬTlwMuᆭTlwMuᄃTlwMuᄄTlwMuᄅTlwMuᆰTlwMuᆱTlwMuᆲTlwMuᆳTlwMuᆴTlwMuᆵTlwMuᄚTlwMuᄆTlwMuᄇTlwMuᄈTlwMuᄡTlwMuᄉTlwMuᄊTlwMuᄋTlwMuᄌTlwMuᄍTlwMuᄎTlwMuᄏTlwMuᄐTlwMuᄑTlwMuᄒTlwXTlwMuᅡTlwMuᅢTlwMuᅣTlwMuᅤTlwMuᅥTlwMuᅦTlwXTlwMuᅧTlwMuᅨTlwMuᅩTlwMuᅪTlwMuᅫTlwMuᅬTlwXTlwMuᅭTlwMuᅮTlwMuᅯTlwMuᅰTlwMuᅱTlwMuᅲTlwXTlwMuᅳTlwMuᅴTlwMuᅵTlwXTlwMu¢TlwMu£TlwMu¬Tlw3u ̄TlwMu¦TlwMu¥TlwMu₩TlwXTlwMu│TlwMu←TlwMu↑TlwMu→TlwMu↓TlwMu■TlwMu○TlwXTlwVTlwXTlwVLdTlwXTlwVTlwXTlwVTlwXTlwVTl΀wXTlЀwVTlހwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlЃwVTlwXTlwVTlwXTlwVTlхwXTlwVTlwXTlwVTlwXTlwVTlˆwXTlІwVTlwXTlwVTlwXTlwVTlćwXTlȇwVTlևwXTlwMu𐐨TlwMu𐐩TlwMu𐐪TlwMu𐐫TlwMu𐐬TlwMu𐐭TlwMu𐐮TlwMu𐐯TlwMu𐐰TlwMu𐐱TlwMu𐐲TlwMu𐐳TlwMu𐐴TlwMu𐐵TlwMu𐐶TlwMu𐐷TlwMu𐐸TlwMu𐐹TlwMu𐐺TlwMu𐐻TlwMu𐐼TlwMu𐐽TlwMu𐐾TlwMu𐐿TlwMu𐑀TlwMu𐑁TlwMu𐑂TlwMu𐑃TlwMu𐑄TlwMu𐑅TlwMu𐑆TlwMu𐑇TlwMu𐑈TlwMu𐑉TlwMu𐑊TlwMu𐑋TlwMu𐑌TlwMu𐑍TlwMu𐑎TlwMu𐑏TlwVTlwXTlwVTlwXTlwMu𐓘TlwMu𐓙TlwMu𐓚TlwMu𐓛TlwMu𐓜TlwMu𐓝TlwMu𐓞TlwMu𐓟TlwMu𐓠TlwMu𐓡TlwMu𐓢TlwMu𐓣TlwMu𐓤TlwMu𐓥TlwMu𐓦LdTlwMu𐓧TlwMu𐓨TlwMu𐓩TlwMu𐓪TlÉwMu𐓫TlĉwMu𐓬TlŉwMu𐓭TlƉwMu𐓮TlǉwMu𐓯TlȉwMu𐓰TlɉwMu𐓱TlʉwMu𐓲TlˉwMu𐓳Tl̉wMu𐓴Tl͉wMu𐓵TlΉwMu𐓶TlωwMu𐓷TlЉwMu𐓸TlщwMu𐓹Tl҉wMu𐓺TlӉwMu𐓻TlԉwXTl؉wVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl֎wXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl֐wXTlאwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlГwXTlғwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlɔwXTlДwVTlٔwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl֖wXTlؖwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXLdTlwVTlɘwXTlwMu𐳀TlwMu𐳁TlwMu𐳂TlwMu𐳃TlwMu𐳄TlwMu𐳅TlwMu𐳆TlwMu𐳇TlwMu𐳈TlwMu𐳉TlwMu𐳊TlwMu𐳋TlwMu𐳌TlwMu𐳍TlwMu𐳎TlwMu𐳏TlwMu𐳐TlwMu𐳑TlwMu𐳒TlwMu𐳓TlwMu𐳔TlwMu𐳕TlwMu𐳖TlwMu𐳗TlwMu𐳘TlwMu𐳙TlwMu𐳚TlwMu𐳛TlwMu𐳜TlwMu𐳝TlwMu𐳞TlwMu𐳟TlwMu𐳠TlwMu𐳡TlwMu𐳢TlwMu𐳣TlwMu𐳤TlwMu𐳥TlwMu𐳦TlwMu𐳧TlwMu𐳨TlwMu𐳩TlwMu𐳪TlwMu𐳫TlwMu𐳬TlwMu𐳭TlwMu𐳮TlwMu𐳯TlwMu𐳰TlwMu𐳱TlwMu𐳲TlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlڞwXTlwVTl̟wXTlwVTlwXTlwVTlΠwXTlҠwVTlwXTlwVTlwXTlwVTl¡wXTlСwVTlwXTlwVTlwXTlwVTlwXTlwVTlȢwXTlТwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXLdTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlŦwXTlǦwVTlɦwXTl˦wVTlΦwXTlЦwVTlѦwXTlצwVTlئwXTlݦwVTlwXTlwVTlwXTlwVTlwXTlwVTlܨwXTlݨwVTlwXTlwVTlȩwXTlЩwVTlکwXTlwVTlwXTlwVTlޫwXTlwVTlŬwXTlЬwVTlڬwXTlwVTlwXTlwVTlwXTlwVTlʭwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMu𑣀TlwMu𑣁TlwMu𑣂TlwMu𑣃TlwMu𑣄TlwMu𑣅TlwMu𑣆TlwMu𑣇TlwMu𑣈TlwMu𑣉TlwMu𑣊TlwMu𑣋TlwMu𑣌TlwMu𑣍TlwMu𑣎TlwMu𑣏TlwMu𑣐TlwMu𑣑TlwMu𑣒TlwMu𑣓TlwMu𑣔TlwMu𑣕TlwMu𑣖TlwMu𑣗LdTlwMu𑣘TlwMu𑣙TlwMu𑣚TlwMu𑣛TlwMu𑣜TlwMu𑣝TlwMu𑣞TlwMu𑣟TlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlǲwXTlвwVTlڲwXTlwVTlwXTlwVTlسwXTlڳwVTlwXTlwVTlȴwXTlдwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlƸwXTlиwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlȺwXTlкwVTlںwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlǌwXTlwVTlwXTlwVTlwXLdTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMu𖹠TlwMu𖹡TlwMu𖹢TlwMu𖹣TlwMu𖹤TlwMu𖹥TlwMu𖹦TlwMu𖹧TlwMu𖹨TlwMu𖹩TlwMu𖹪TlwMu𖹫TlwMu𖹬TlwMu𖹭TlwMu𖹮TlwMu𖹯TlwMu𖹰TlwMu𖹱TlwMu𖹲TlwMu𖹳TlwMu𖹴TlwMu𖹵TlwMu𖹶TlwMu𖹷TlwMu𖹸TlwMu𖹹TlwMu𖹺TlwMu𖹻TlwMu𖹼TlwMu𖹽TlwMu𖹾TlwMu𖹿TlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTl֙wXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwITlwXTlwVTlwXTlwVTlwXTlwVTlޢwMu𝅗𝅥TlߢwMu𝅘𝅥TlwMu𝅘𝅥𝅮TlwMu𝅘𝅥𝅯TlwMu𝅘𝅥𝅰TlwMu𝅘𝅥𝅱TlwMu𝅘𝅥𝅲TlwVLdTlwXTlwVTlwMu𝆹𝅥TlwMu𝆺𝅥TlwMu𝆹𝅥𝅮TlwMu𝆺𝅥𝅮TlwMu𝆹𝅥𝅯TlwMu𝆺𝅥𝅯TlwVTlwXTlwVTlƤwXTlwVTlwXTlwVTlצwXTlwVTlwXTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTl¨wMwoTlèwMwpTlĨwMwqTlŨwMwrTlƨwMwsTlǨwMwtTlȨwMwuTlɨwMwvTlʨwMwwTl˨wMwxTl̨wMwyTlͨwMwzTlΨwMwaTlϨwMwbTlШwMwcTlѨwMwdLdTlҨwMweTlӨwMwfTlԨwMwgTlըwXTl֨wMwiTlרwMwjTlبwMwkTl٨wMwlTlڨwMwmTlۨwMwnTlܨwMwoTlݨwMwpTlިwMwqTlߨwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwXTlwMwcTlwMwdTlwXTlwMwgTlwXTlwMwjTlwMwkTlwXTlwMwnTlwMwoTlwMwpTlwMwqTlwXTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcLdTlwMwdTlwXTlwMwfTlwXTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTl©wMwmTléwMwnTlĩwXTlũwMwpTlƩwMwqTlǩwMwrTlȩwMwsTlɩwMwtTlʩwMwuTl˩wMwvTl̩wMwwTlͩwMwxTlΩwMwyTlϩwMwzTlЩwMwaTlѩwMwbTlҩwMwcTlөwMwdTlԩwMweTlթwMwfTl֩wMwgTlשwMwhTlةwMwiTl٩wMwjTlکwMwkTl۩wMwlTlܩwMwmTlݩwMwnTlީwMwoTlߩwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwXTlwMwdTlwMweTlwMwfTlwMwgTlwXTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwXTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwXLdTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwXTlwMwdTlwMweTlwMwfTlwMwgTlwXTlwMwiTlwMwjTlªwMwkTlêwMwlTlĪwMwmTlŪwXTlƪwMwoTlǪwXTlʪwMwsTl˪wMwtTl̪wMwuTlͪwMwvTlΪwMwwTlϪwMwxTlЪwMwyTlѪwXTlҪwMwaTlӪwMwbTlԪwMwcTlժwMwdTl֪wMweTlתwMwfTlتwMwgTl٪wMwhTlڪwMwiTl۪wMwjTlܪwMwkTlݪwMwlTlުwMwmTlߪwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxLdTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTl«wMwiTlëwMwjTlīwMwkTlūwMwlTlƫwMwmTlǫwMwnTlȫwMwoTlɫwMwpTlʫwMwqTl˫wMwrTl̫wMwsTlͫwMwtTlΫwMwuTlϫwMwvTlЫwMwwTlѫwMwxTlҫwMwyTlӫwMwzTlԫwMwaTlիwMwbTl֫wMwcTl׫wMwdTlثwMweTl٫wMwfTlګwMwgTl۫wMwhTlܫwMwiTlݫwMwjTlޫwMwkTl߫wMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtLdTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTl¬wMwgTlìwMwhTlĬwMwiTlŬwMwjTlƬwMwkTlǬwMwlTlȬwMwmTlɬwMwnTlʬwMwoTlˬwMwpLdTl̬wMwqTlͬwMwrTlάwMwsTlϬwMwtTlЬwMwuTlѬwMwvTlҬwMwwTlӬwMwxTlԬwMwyTlլwMwzTl֬wMwaTl׬wMwbTlجwMwcTl٬wMwdTlڬwMweTl۬wMwfTlܬwMwgTlݬwMwhTlެwMwiTl߬wMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMuıTlwMuȷTlwXTlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιLdTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuθTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∇Tl­wMuαTlíwMuβTlĭwMuγTlŭwMuδTlƭwMuεTlǭwMuζTlȭwMuηTlɭwMuθTlʭwMuιTl˭wMuκTḽwMuλTlͭwMuμTlέwMuνTlϭwMuξTlЭwMuοTlѭwMuπTlҭwMuρTlӭwMuσTlխwMuτTl֭wMuυTl׭wMuφTlحwMuχTl٭wMuψTlڭwMuωTlۭwMu∂TlܭwMuεTlݭwMuθTlޭwMuκTl߭wMuφTlwMuρTlwMuπTlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuθTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∇TlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∂TlwMuεLdTlwMuθTlwMuκTlwMuφTlwMuρTlwMuπTlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuθTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∇TlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTl®wMuνTlîwMuξTlĮwMuοTlŮwMuπTlƮwMuρTlǮwMuσTlɮwMuτTlʮwMuυTlˮwMuφTl̮wMuχTlͮwMuψTlήwMuωTlϮwMu∂TlЮwMuεTlѮwMuθTlҮwMuκTlӮwMuφTlԮwMuρTlծwMuπTl֮wMuαTl׮wMuβTlخwMuγTlٮwMuδTlڮwMuεTlۮwMuζTlܮwMuηTlݮwMuθTlޮwMuιTl߮wMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuθTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∇TlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμLdTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∂TlwMuεTlwMuθTlwMuκTlwMuφTlwMuρTlwMuπTlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuθTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTlwMuωTlwMu∇TlwMuαTlwMuβTlwMuγTlwMuδTlwMuεTlwMuζTlwMuηTlwMuθTlwMuιTlwMuκTlwMuλTlwMuμTlwMuνTlwMuξTlwMuοTlwMuπTlwMuρTlwMuσTlwMuτTlwMuυTlwMuφTlwMuχTlwMuψTl¯wMuωTlïwMu∂TlįwMuεTlůwMuθTlƯwMuκTlǯwMuφTlȯwMuρTlɯwMuπTlʯwMuϝTl̯wXTlίwMw0TlϯwMw1TlЯwMw2TlѯwMw3TlүwMw4TlӯwMw5TlԯwMw6TlկwMw7Tl֯wMw8TlׯwMw9TlدwMw0TlٯwMw1TlگwMw2TlۯwMw3TlܯwMw4TlݯwMw5TlޯwMw6Tl߯wMw7TlwMw8TlwMw9TlwMw0TlwMw1LdTlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9TlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMu𞤢TlwMu𞤣TlwMu𞤤TlwMu𞤥TlwMu𞤦TlwMu𞤧TlwMu𞤨TlwMu𞤩TlwMu𞤪TlwMu𞤫TlwMu𞤬TlwMu𞤭TlwMu𞤮TlwMu𞤯TlwMu𞤰TlwMu𞤱TlwMu𞤲TlwMu𞤳TlwMu𞤴TlwMu𞤵TlwMu𞤶TlwMu𞤷TlwMu𞤸TlwMu𞤹TlwMu𞤺TlwMu𞤻TlwMu𞤼TlwMu𞤽TlwMu𞤾TlwMu𞤿TlwMu𞥀TlwMu𞥁TlwMu𞥂TlwMu𞥃TlwVTlwXTlwVTlwXTlwVTlwXLdTlwVTlwXTlwVTlwXTlwMuاTlwMuبTlwMuجTlwMuدTlwXTlwMuوTlwMuزTlwMuحTlwMuطTlwMuيTlwMuكTlwMuلTlwMuمTlwMuنTlwMuسTlwMuعTlwMuفTlwMuصTlwMuقTlwMuرTlwMuشTlwMuتTlwMuثTlwMuخTlwMuذTlwMuضTlwMuظTlwMuغTlwMuٮTlwMuںTlwMuڡTlwMuٯTlwXTlwMuبTlwMuجTlwXTlwMuهTlwXTlwMuحTlwXTlwMuيTlwMuكTlwMuلTlwMuمTlwMuنTlwMuسTlwMuعTlwMuفTlwMuصTlwMuقTlwXTlwMuشTlwMuتTlwMuثTlwMuخTlwXTlwMuضTlwXTlwMuغTlwXTlwMuجTlwXTlwMuحTlwXTlwMuيTlwXTlwMuلTlwXTlwMuنTlwMuسTlwMuعTlwXTlwMuصTlwMuقTlwXTlwMuشTlwXTlwMuخTlwXTlwMuضTlwXTlwMuغTlwXTlwMuںTlwXTlwMuٯTlwXTlwMuبTlwMuجTlwXTlwMuهTlwXTlwMuحTlwMuطTlwMuيTlwMuكLdTlwXTlwMuمTlwMuنTlwMuسTlwMuعTlwMuفTlwMuصTlwMuقTlwXTlwMuشTlwMuتTlwMuثTlwMuخTlwXTlwMuضTlwMuظTlwMuغTlwMuٮTlwXTlwMuڡTlwXTlwMuاTlwMuبTlwMuجTlwMuدTlwMuهTlwMuوTlwMuزTlwMuحTlwMuطTlwMuيTlwXTlwMuلTlwMuمTlwMuنTlwMuسTlwMuعTlwMuفTlwMuصTlwMuقTlwMuرTlwMuشTlwMuتTlwMuثTlwMuخTlwMuذTlwMuضTlwMuظTlwMuغTlwXTlwMuبTlwMuجTlwMuدTlwXTlwMuوTlwMuزTlwMuحTlwMuطTlwMuيTlwXTlwMuلTlwMuمTlwMuنTlwMuسTlwMuعTlwMuفTlwMuصTlwMuقTlwMuرTlwMuشTlwMuتTlwMuثTlwMuخTlwMuذTlwMuضTlwMuظTlwMuغTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlw3u0,Tlw3u1,Tlw3u2,Tlw3u3,Tlw3u4,Tlw3u5,Tlw3u6,Tlw3u7,LdTlw3u8,Tlw3u9,TlwVTlw3u(a)Tlw3u(b)Tlw3u(c)Tlw3u(d)Tlw3u(e)Tlw3u(f)Tlw3u(g)Tlw3u(h)Tlw3u(i)Tlw3u(j)Tlw3u(k)Tlw3u(l)Tlw3u(m)Tlw3u(n)Tlw3u(o)Tlw3u(p)Tlw3u(q)Tlw3u(r)Tlw3u(s)Tlw3u(t)Tlw3u(u)Tlw3u(v)Tlw3u(w)Tlw3u(x)Tlw3u(y)Tlw3u(z)TlwMu〔s〕TlwMwcTlwMwrTlwMacdTlwMawzTlwVTlwMwaTlwMwbTlwMwcTlwMwdTlwMweTlwMwfTlwMwgTlwMwhTlwMwiTlwMwjTlwMwkTlwMwlTlwMwmTlwMwnTlwMwoTlwMwpTlwMwqTlwMwrTlwMwsTlwMwtTlwMwuTlwMwvTlwMwwTlwMwxTlwMwyTlwMwzTlwMahvTlwMamvTlwMasdTlwMassTlwMappvTlwMawcTlwVTlwMamcTlwMamdTlwMamrTlwVTlwMadjTlwVTlwXTlwVTlwMuほかTlwMuココTlwMuサTlwXTlwMu手TlwMu字TlwMu双TlwMuデTlwMu二TlwMu多TlwMu解TlwMu天TlwMu交TlwMu映TlwMu無TlwMu料TlwMu前TlwMu後TlwMu再TlwMu新TlwMu初TlwMu終TlwMu生TlwMu販LdTlwMu声TlwMu吹TlwMu演TlwMu投TlwMu捕TlwMu一TlwMu三TlwMu遊TlwMu左TlwMu中TlwMu右TlwMu指TlwMu走TlwMu打TlwMu禁TlwMu空TlwMu合TlwMu満TlwMu有TlwMu月TlwMu申TlwMu割TlwMu営TlwMu配TlwXTlwMu〔本〕TlwMu〔三〕TlwMu〔二〕TlwMu〔安〕TlwMu〔点〕TlwMu〔打〕TlwMu〔盗〕TlwMu〔勝〕TlwMu〔敗〕TlwXTlwMu得TlwMu可TlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwVTlwXTlwMw0TlwMw1TlwMw2TlwMw3TlwMw4TlwMw5TlwMw6TlwMw7TlwMw8TlwMw9LdTlwXTlwVTl
wXTl
wVTl
wXTl
wVTl
wXTl
wVTlwXTlwVTlwXTlwMu丽TlwMu丸TlwMu乁TlwMu𠄢TlwMu你TlwMu侮TlwMu侻TlwMu倂TlwMu偺TlwMu備TlwMu僧TlwMu像TlwMu㒞TlwMu𠘺TlwMu免TlwMu兔TlwMu兤TlwMu具TlwMu𠔜TlwMu㒹TlwMu內TlwMu再TlwMu𠕋TlwMu冗TlwMu冤TlwMu仌TlwMu冬TlwMu况TlwMu𩇟TlwMu凵TlwMu刃TlwMu㓟TlwMu刻TlwMu剆TlwMu割TlwMu剷TlwMu㔕TlwMu勇TlwMu勉TlwMu勤TlwMu勺TlwMu包TlwMu匆TlwMu北TlwMu卉TlwMu卑TlwMu博TlwMu即TlwMu卽TlwMu卿TlwMu𠨬TlwMu灰TlwMu及TlwMu叟TlwMu𠭣TlwMu叫TlwMu叱TlwMu吆TlwMu咞TlwMu吸TlwMu呈TlwMu周TlwMu咢TlwMu哶TlwMu唐TlwMu啓TlwMu啣TlwMu善TlwMu喙TlwMu喫TlwMu喳TlwMu嗂TlwMu圖TlwMu嘆TlwMu圗TlwMu噑TlwMu噴TlwMu切TlwMu壮TlwMu城TlwMu埴TlwMu堍TlwMu型TlwMu堲TlwMu報TlwMu墬TlwMu𡓤TlwMu売TlwMu壷LdTlwMu夆TlwMu多TlwMu夢TlwMu奢TlwMu𡚨TlwMu𡛪TlwMu姬TlwMu娛TlwMu娧TlwMu姘TlwMu婦TlwMu㛮TlwXTlwMu嬈TlwMu嬾TlwMu𡧈TlwMu寃TlwMu寘TlwMu寧TlwMu寳TlwMu𡬘TlwMu寿TlwMu将TlwXTlwMu尢TlwMu㞁TlwMu屠TlwMu屮TlwMu峀TlwMu岍TlwMu𡷤TlwMu嵃TlwMu𡷦TlwMu嵮TlwMu嵫TlwMu嵼TlwMu巡TlwMu巢TlwMu㠯TlwMu巽TlwMu帨TlwMu帽TlwMu幩TlwMu㡢TlwMu𢆃TlwMu㡼TlwMu庰TlwMu庳TlwMu庶TlwMu廊TlwMu𪎒TlwMu廾TlwMu𢌱TlwMu舁TlwMu弢TlwMu㣇TlwMu𣊸TlwMu𦇚TlwMu形TlwMu彫TlwMu㣣TlwMu徚TlwMu忍TlwMu志TlwMu忹TlwMu悁TlwMu㤺TlwMu㤜TlwMu悔TlwMu𢛔TlwMu惇TlwMu慈TlwMu慌TlwMu慎TlwMu慌TlwMu慺TlwMu憎TlwMu憲TlwMu憤TlwMu憯TlwMu懞TlwMu懲TlwMu懶TlwMu成TlwMu戛TlwMu扝TlwMu抱TlwMu拔TlwMu捐TlwMu𢬌TlwMu挽TlwMu拼TlwMu捨TlwMu掃TlwMu揤TlwMu𢯱TlwMu搢TlwMu揅TlwMu掩TlwMu㨮LdTlwMu摩TlwMu摾TlwMu撝TlwMu摷TlwMu㩬TlwMu敏TlwMu敬TlwMu𣀊TlwMu旣TlwMu書TlwMu晉TlwMu㬙TlwMu暑TlwMu㬈TlwMu㫤TlwMu冒TlwMu冕TlwMu最TlwMu暜TlwMu肭TlwMu䏙TlwMu朗TlwMu望TlwMu朡TlwMu杞TlwMu杓TlwMu𣏃TlwMu㭉TlwMu柺TlwMu枅TlwMu桒TlwMu梅TlwMu𣑭TlwMu梎TlwMu栟TlwMu椔TlwMu㮝TlwMu楂TlwMu榣TlwMu槪TlwMu檨TlwMu𣚣TlwMu櫛TlwMu㰘TlwMu次TlwMu𣢧TlwMu歔TlwMu㱎TlwMu歲TlwMu殟TlwMu殺TlwMu殻TlwMu𣪍TlwMu𡴋TlwMu𣫺TlwMu汎TlwMu𣲼TlwMu沿TlwMu泍TlwMu汧TlwMu洖TlwMu派TlwMu海TlwMu流TlwMu浩TlwMu浸TlwMu涅TlwMu𣴞TlwMu洴TlwMu港TlwMu湮TlwMu㴳TlwMu滋TlwMu滇TlwMu𣻑TlwMu淹TlwMu潮TlwMu𣽞TlwMu𣾎TlwMu濆TlwMu瀹TlwMu瀞TlwMu瀛TlwMu㶖TlwMu灊TlwMu災TlwMu灷TlwMu炭TlwMu𠔥TlwMu煅TlwMu𤉣TlwMu熜TlwXTlwMu爨TlwMu爵TlwMu牐TlwMu𤘈TlwMu犀TlwMu犕TlwMu𤜵LdTlwMu𤠔TlwMu獺TlwMu王TlwMu㺬TlwMu玥TlwMu㺸TlwMu瑇TlwMu瑜TlwMu瑱TlwMu璅TlwMu瓊TlwMu㼛TlwMu甤TlwMu𤰶TlwMu甾TlwMu𤲒TlwMu異TlwMu𢆟TlwMu瘐TlwMu𤾡TlwMu𤾸TlwMu𥁄TlwMu㿼TlwMu䀈TlwMu直TlwMu𥃳TlwMu𥃲TlwMu𥄙TlwMu𥄳TlwMu眞TlwMu真TlwMu睊TlwMu䀹TlwMu瞋TlwMu䁆TlwMu䂖TlwMu𥐝TlwMu硎TlwMu碌TlwMu磌TlwMu䃣TlwMu𥘦TlwMu祖TlwMu𥚚TlwMu𥛅TlwMu福TlwMu秫TlwMu䄯TlwMu穀TlwMu穊TlwMu穏TlwMu𥥼TlwMu𥪧TlwXTlwMu䈂TlwMu𥮫TlwMu篆TlwMu築TlwMu䈧TlwMu𥲀TlwMu糒TlwMu䊠TlwMu糨TlwMu糣TlwMu紀TlwMu𥾆TlwMu絣TlwMu䌁TlwMu緇TlwMu縂TlwMu繅TlwMu䌴TlwMu𦈨TlwMu𦉇TlwMu䍙TlwMu𦋙TlwMu罺TlwMu𦌾TlwMu羕TlwMu翺TlwMu者TlwMu𦓚TlwMu𦔣TlwMu聠TlwMu𦖨TlwMu聰TlwMu𣍟TlwMu䏕TlwMu育TlwMu脃TlwMu䐋TlwMu脾TlwMu媵TlwMu𦞧TlwMu𦞵TlwMu𣎓TlwMu𣎜TlwMu舁TlwMu舄TlwMu辞LdTlwMu䑫TlwMu芑TlwMu芋TlwMu芝TlwMu劳TlwMu花TlwMu芳TlwMu芽TlwMu苦TlwMu𦬼TlwMu若TlwMu茝TlwMu荣TlwMu莭TlwMu茣TlwMu莽TlwMu菧TlwMu著TlwMu荓TlwMu菊TlwMu菌TlwMu菜TlwMu𦰶TlwMu𦵫TlwMu𦳕TlwMu䔫TlwMu蓱TlwMu蓳TlwMu蔖TlwMu𧏊TlwMu蕤TlwMu𦼬TlwMu䕝TlwMu䕡TlwMu𦾱TlwMu𧃒TlwMu䕫TlwMu虐TlwMu虜TlwMu虧TlwMu虩TlwMu蚩TlwMu蚈TlwMu蜎TlwMu蛢TlwMu蝹TlwMu蜨TlwMu蝫TlwMu螆TlwXTlwMu蟡TlwMu蠁TlwMu䗹TlwMu衠TlwMu衣TlwMu𧙧TlwMu裗TlwMu裞TlwMu䘵TlwMu裺TlwMu㒻TlwMu𧢮TlwMu𧥦TlwMu䚾TlwMu䛇TlwMu誠TlwMu諭TlwMu變TlwMu豕TlwMu𧲨TlwMu貫TlwMu賁TlwMu贛TlwMu起TlwMu𧼯TlwMu𠠄TlwMu跋TlwMu趼TlwMu跰TlwMu𠣞TlwMu軔TlwMu輸TlwMu𨗒TlwMu𨗭TlwMu邔TlwMu郱TlwMu鄑TlwMu𨜮TlwMu鄛TlwMu鈸TlwMu鋗TlwMu鋘TlwMu鉼TlwMu鏹TlwMu鐕TlwMu𨯺TlwMu開TlwMu䦕TlwMu閷TlwMu𨵷L0TlwMu䧦TlwMu雃TlwMu嶲TlwMu霣TlwMu𩅅TlwMu𩈚TlwMu䩮TlwMu䩶TlwMu韠TlwMu𩐊TlwMu䪲TlwMu𩒖TlwMu頋TlwMu頩TlwMu𩖶TlwMu飢TlwMu䬳TlwMu餩TlwMu馧TlwMu駂TlwMu駾TlwMu䯎TlwMu𩬰TlwMu鬒TlwMu鱀TlwMu鳽TlwMu䳎TlwMu䳭TlwMu鵧TlwMu𪃎TlwMu䳸TlwMu𪄅TlwMu𪈎TlwMu𪊑TlwMu麻TlwMu䵖TlwMu黹TlwMu黾TlwMu鼅TlwMu鼏TlwMu鼖TlwMu鼻TlwMu𪘀TlwXTlwVTl˦wXTl8wITl8wXuIDNA Mapping Table from UTS46.a__doc__a__file__a__spec__aoriginahas_locationa__cached__u13.0.0a__version__a_seg_0a_seg_1a_seg_2a_seg_3a_seg_4a_seg_5a_seg_6a_seg_7a_seg_8a_seg_9a_seg_10a_seg_11a_seg_12a_seg_13a_seg_14a_seg_15a_seg_16a_seg_17a_seg_18a_seg_19a_seg_20a_seg_21a_seg_22a_seg_23a_seg_24a_seg_25a_seg_26a_seg_27a_seg_28a_seg_29a_seg_30a_seg_31a_seg_32a_seg_33a_seg_34a_seg_35a_seg_36a_seg_37a_seg_38a_seg_39a_seg_40a_seg_41a_seg_42a_seg_43a_seg_44a_seg_45a_seg_46a_seg_47a_seg_48a_seg_49a_seg_50a_seg_51a_seg_52a_seg_53a_seg_54a_seg_55a_seg_56a_seg_57a_seg_58a_seg_59a_seg_60a_seg_61a_seg_62a_seg_63a_seg_64a_seg_65a_seg_66a_seg_67a_seg_68a_seg_69a_seg_70a_seg_71a_seg_72a_seg_73a_seg_74a_seg_75a_seg_76a_seg_77a_seg_78a_seg_79auts46datauidna\uts46data.pyu<module idna.uts46data>u.itsdangerous._jsona_jsonaloadsaensure_asciiasetdefaultTaseparatorsTw,w:adumpsa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsajsonlwtuitsdangerous._jsona__module__uWrapper around json module that strips whitespace.a_CompactJSONa__qualname__Dapayloadareturnustr | bytesut.Anyu_CompactJSON.loadsDaobjakwargsareturnut.Anyut.Anyastru_CompactJSON.dumpsuitsdangerous\_json.pyu<module itsdangerous._json>TaobjakwargsTapayloadu.itsdangerousvFa__version__awarningslawarnuThe '__version__' attribute is deprecated and will be removed in ItsDangerous 2.3. Use feature detection or 'importlib.metadata.version("itsdangerous")' instead.aDeprecationWarningDastacklevellu2.2.0a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_itsdangerousu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationswtaencodingTabase64_decodelabase64_decodeTabase64_encodeabase64_encodeTawant_bytesawant_bytesaexcTaBadDataaBadDataTaBadHeaderaBadHeaderTaBadPayloadaBadPayloadTaBadSignatureaBadSignatureTaBadTimeSignatureaBadTimeSignatureTaSignatureExpiredaSignatureExpiredaserializerTaSerializeraSerializerasignerTaHMACAlgorithmaHMACAlgorithmTaNoneAlgorithmaNoneAlgorithmTaSigneraSigneratimedTaTimedSerializeraTimedSerializerTaTimestampSigneraTimestampSigneraurl_safeTaURLSafeSerializeraURLSafeSerializerTaURLSafeTimedSerializeraURLSafeTimedSerializerDanameareturnastrut.Anya__getattr__uitsdangerous\__init__.pyu<module itsdangerous>Tanameaimportlibawarningsu.itsdangerous.encoding@aencodeawant_bytesabase64aurlsafe_b64encodearstripTd=uBase64 encode a string of bytes or text. The resulting bytes are
    safe to use in URLs.
    Daencodingaerrorsaasciiaignored=laurlsafe_b64decodeTETypeErrorEValueErroraBadDataTuInvalid base64-encoded datauBase64 decode a URL-safe string of bytes or text. The result is
    bytes.
    a_int_to_bytesalstripTda_bytes_to_intarjustTldla__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsastringastructwtaexcTaBadDatalTuutf-8astrictDwsaencodingaerrorsareturnustr | bytesastrpabytesDastringareturnustr | bytesabytesabase64_encodeabase64_decodeaascii_lettersuadigitsu-_=aasciia_base64_alphabetaStructTu>Qa_int64_structapackacastut.Callable[[bytes], tuple[int]]aunpackDanumareturnaintabytesaint_to_bytesDabytestrareturnabytesaintabytes_to_intuitsdangerous\encoding.pyu<module itsdangerous.encoding>TastringweTastringTabytestrTanumTwsaencodingaerrors.itsdangerous.excBa__class__a__init__amessageapayloadadate_signedaheaderaoriginal_errora__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtadatetimeTadatetimelTEExceptiona__prepare__aBadDataa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uitsdangerous.exca__module__uRaised if bad data of any sort was encountered. This is the base
    for all exceptions that ItsDangerous defines.

    .. versionadded:: 0.15
    a__qualname__DamessageastruBadData.__init__Dareturnastra__str__uBadData.__str__a__orig_bases__aBadSignatureuRaised if a signature does not match.TnDamessageapayloadastrut.Any | NoneuBadSignature.__init__aBadTimeSignatureuRaised if a time-based signature is invalid. This is a subclass
    of :class:`BadSignature`.
    TnnDamessageapayloadadate_signedastrut.Any | Noneudatetime | NoneuBadTimeSignature.__init__aSignatureExpireduRaised if a signature timestamp is older than ``max_age``. This
    is a subclass of :exc:`BadTimeSignature`.
    aBadHeaderuRaised if a signed header is invalid in some form. This only
    happens for serializers that have a header that goes with the
    signature.

    .. versionadded:: 0.24
    TnnnDamessageapayloadaheaderaoriginal_errorastrut.Any | Noneut.Any | NoneuException | NoneuBadHeader.__init__aBadPayloaduRaised if a payload is invalid. This could happen if the payload
    is loaded despite an invalid signature, or if there is a mismatch
    between the serializer and deserializer. The original exception
    that occurred during loading is stored on as :attr:`original_error`.

    .. versionadded:: 0.15
    Damessageaoriginal_errorastruException | NoneuBadPayload.__init__uitsdangerous\exc.pyu<module itsdangerous.exc>Ta__class__Taselfamessagea__class__Taselfamessageapayloadaheaderaoriginal_errora__class__Taselfamessageaoriginal_errora__class__Taselfamessageapayloada__class__Taselfamessageapayloadadate_signeda__class__Taselfu.itsdangerous.serializer#adumpsuChecks whether a serializer generates text or binary.a_make_keys_listasecret_keysawant_bytesasaltadefault_serializeraserializerais_text_serializeradefault_signerasignerasigner_kwargsadefault_fallback_signersafallback_signersaserializer_kwargsquThe newest (last) entry in the :attr:`secret_keys` list. This
        is for compatibility from before key rotation support was added.
        aloadsadecodeTuutf-8aBadPayloadTuCould not load the payload because an exception occurred on unserializing the data.Taoriginal_erroruLoads the encoded object. This function raises
        :class:`.BadPayload` if the payload is not valid. The
        ``serializer`` parameter can be used to override the serializer
        stored on the class. The encoded ``payload`` should always be
        bytes.
        uDumps the encoded object. The return value is always bytes.
        If the internal serializer returns text, the value will be
        encoded as UTF-8.
        uCreates a new instance of the signer to be used. The default
        implementation uses the :class:`.Signer` base class.
        uIterates over all signers to be tried for unsigning. Starts
        with the configured signer, then constructs each signer
        specified in ``fallback_signers``.
        aselfamake_signerutoo many values to unpack (expected 2)aiter_unsignersuSerializer.iter_unsignersadump_payloadasignuReturns a signed string serialized with the internal
        serializer. The return value can be either a byte or unicode
        string depending on the format of the internal serializer.
        awriteuLike :meth:`dumps` but dumps into a file. The file handle has
        to be compatible with what the internal serializer expects.
        aload_payloadaunsignwsaBadSignatureacastalast_exceptionuReverse of :meth:`dumps`. Raises :exc:`.BadSignature` if the
        signature validation fails.
        areaduLike :meth:`loads` but loads from a file.a_loads_unsafe_impluLike :meth:`loads` but without verifying the signature. This
        is potentially very dangerous to use depending on how your
        serializer works. The return value is ``(signature_valid,
        payload)`` instead of just the payload. The first item will be a
        boolean that indicates if the signature is valid. This function
        never fails.

        Use it for debugging only and if you know that your serializer
        module is not exploitable (for example, do not use it with a
        pickle serializer).

        .. versionadded:: 0.15
        apayloadTFnuLow level helper function to implement :meth:`loads_unsafe`
        in serializer subclasses.
        aloads_unsafeTasaltuLike :meth:`loads_unsafe` but loads from a file.

        .. versionadded:: 0.15
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucollections.abclaabcacabcajsonwtaencodingTawant_byteslaexcTaBadPayloadTaBadSignatureTa_make_keys_listTaSigneraSigneraTypeVaraUnionTOstrObytesTa_TSerializedTabounda_TSerializedaProtocola__prepare__a_PDataSerializera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uitsdangerous.serializera__module__a__qualname__Dapayloadareturna_TSerializedut.Anyu_PDataSerializer.loadsDaobjareturnut.Anya_TSerializedu_PDataSerializer.dumpsa__orig_bases__Daserializerareturnu_PDataSerializer[t.Any]ute.TypeGuard[_PDataSerializer[str]]aGenericaSerializeruA serializer wraps a :class:`~itsdangerous.signer.Signer` to
    enable serializing and securely signing data other than bytes. It
    can unsign to verify that the data hasn't been changed.

    The serializer provides :meth:`dumps` and :meth:`loads`, similar to
    :mod:`json`, and by default uses :mod:`json` internally to serialize
    the data to bytes.

    The secret key should be a random string of ``bytes`` and should not
    be saved to code or version control. Different salts should be used
    to distinguish signing in different contexts. See :doc:`/concepts`
    for information about the security of the secret key and salt.

    :param secret_key: The secret key to sign and verify with. Can be a
        list of keys, oldest to newest, to support key rotation.
    :param salt: Extra key to combine with ``secret_key`` to distinguish
        signatures in different contexts.
    :param serializer: An object that provides ``dumps`` and ``loads``
        methods for serializing data to a string. Defaults to
        :attr:`default_serializer`, which defaults to :mod:`json`.
    :param serializer_kwargs: Keyword arguments to pass when calling
        ``serializer.dumps``.
    :param signer: A ``Signer`` class to instantiate when signing data.
        Defaults to :attr:`default_signer`, which defaults to
        :class:`~itsdangerous.signer.Signer`.
    :param signer_kwargs: Keyword arguments to pass when instantiating
        the ``Signer`` class.
    :param fallback_signers: List of signer parameters to try when
        unsigning with the default signer fails. Each item can be a dict
        of ``signer_kwargs``, a ``Signer`` class, or a tuple of
        ``(signer, signer_kwargs)``. Defaults to
        :attr:`default_fallback_signers`.

    .. versionchanged:: 2.0
        Added support for key rotation by passing a list to
        ``secret_key``.

    .. versionchanged:: 2.0
        Removed the default SHA-512 fallback signer from
        ``default_fallback_signers``.

    .. versionchanged:: 1.1
        Added support for ``fallback_signers`` and configured a default
        SHA-512 fallback. This fallback is for users who used the yanked
        1.0.0 release which defaulted to SHA-512.

    .. versionchanged:: 0.14
        The ``signer`` and ``signer_kwargs`` parameters were added to
        the constructor.
    a__annotations__u_PDataSerializer[t.Any]utype[Signer]ulist[dict[str, t.Any] | tuple[type[Signer], dict[str, t.Any]] | type[Signer]]aoverloadTcitsdangerousnnnnnDaselfasecret_keyasaltaserializeraserializer_kwargsasignerasigner_kwargsafallback_signersuSerializer[str]ustr | bytes | cabc.Iterable[str] | cabc.Iterable[bytes]ustr | bytes | NoneuNone | _PDataSerializer[str]udict[str, t.Any] | Noneutype[Signer] | Noneudict[str, t.Any] | Noneulist[dict[str, t.Any] | tuple[type[Signer], dict[str, t.Any]] | type[Signer]] | Nonea__init__uSerializer.__init__TnnnnDaselfasecret_keyasaltaserializeraserializer_kwargsasignerasigner_kwargsafallback_signersuSerializer[bytes]ustr | bytes | cabc.Iterable[str] | cabc.Iterable[bytes]ustr | bytes | Noneu_PDataSerializer[bytes]udict[str, t.Any] | Noneutype[Signer] | Noneudict[str, t.Any] | Noneulist[dict[str, t.Any] | tuple[type[Signer], dict[str, t.Any]] | type[Signer]] | NoneTcitsdangerousDaserializer_kwargsasignerasigner_kwargsafallback_signersnnnnDasecret_keyasaltaserializeraserializer_kwargsasignerasigner_kwargsafallback_signersustr | bytes | cabc.Iterable[str] | cabc.Iterable[bytes]ustr | bytes | Noneut.Anyudict[str, t.Any] | Noneutype[Signer] | Noneudict[str, t.Any] | Noneulist[dict[str, t.Any] | tuple[type[Signer], dict[str, t.Any]] | type[Signer]] | NoneDasecret_keyasaltaserializeraserializer_kwargsasignerasigner_kwargsafallback_signersustr | bytes | cabc.Iterable[str] | cabc.Iterable[bytes]ustr | bytes | Noneut.Any | Noneudict[str, t.Any] | Noneutype[Signer] | Noneudict[str, t.Any] | Noneulist[dict[str, t.Any] | tuple[type[Signer], dict[str, t.Any]] | type[Signer]] | NoneapropertyDareturnabytesasecret_keyuSerializer.secret_keyTnDapayloadaserializerareturnabytesu_PDataSerializer[t.Any] | Noneut.AnyuSerializer.load_payloadDaobjareturnut.AnyabytesuSerializer.dump_payloadDasaltareturnustr | bytes | NoneaSigneruSerializer.make_signerDasaltareturnustr | bytes | Noneucabc.Iterator[Signer]Daobjasaltareturnut.Anyustr | bytes | Nonea_TSerializeduSerializer.dumpsDaobjwfasaltareturnut.Anyut.IO[t.Any]ustr | bytes | NoneaNoneadumpuSerializer.dumpDwsasaltakwargsareturnustr | bytesustr | bytes | Noneut.Anyut.AnyuSerializer.loadsDwfasaltareturnut.IO[t.Any]ustr | bytes | Noneut.AnyaloaduSerializer.loadDwsasaltareturnustr | bytesustr | bytes | Noneutuple[bool, t.Any]uSerializer.loads_unsafeTnnDwsasaltaload_kwargsaload_payload_kwargsareturnustr | bytesustr | bytes | Noneudict[str, t.Any] | Noneudict[str, t.Any] | Noneutuple[bool, t.Any]uSerializer._loads_unsafe_implDwfasaltareturnut.IO[t.Any]ustr | bytes | Noneutuple[bool, t.Any]aload_unsafeuSerializer.load_unsafeuitsdangerous\serializer.pyu<module itsdangerous.serializer>Ta__class__Taselfasecret_keyasaltaserializeraserializer_kwargsasignerasigner_kwargsafallback_signersTaselfwsasaltaload_kwargsaload_payload_kwargsweTaselfaobjwfasaltTaselfaobjTaselfaobjasaltapayloadarvTaserializerTaselfasaltafallbackakwargsasecret_keyTaselfwfasaltTaselfapayloadaserializerause_serializerais_textweTaselfwsasaltakwargsalast_exceptionasigneraerrTaselfapayloadTaselfwsasaltTaselfasaltTaselfu.itsdangerous.signeruReturns the signature for the given key and value.ahmacacompare_digestaget_signatureuVerifies the given signature matches the expected
        signature.
        ahashlibasha1uDon't access ``hashlib.sha1`` until runtime. FIPS builds may not include
    SHA-1, in which case the import and use as a default would fail before the
    developer can configure something else.
    adefault_digest_methodadigest_methodanewTamsgadigestmodadigestTOstrObytesawant_bytesa_make_keys_listasecret_keysasepa_base64_alphabetuThe given separator cannot be used because it may be contained in the signature itself. ASCII letters, digits, and '-_=' must not be used.citsdangerous.Signerasaltadefault_key_derivationakey_derivationaHMACAlgorithmaalgorithmquThe newest (last) entry in the :attr:`secret_keys` list. This
        is for compatibility from before key rotation support was added.
        aconcatacastudjango-concatcsignerTadigestmodaupdateanoneuUnknown key derivation methoduThis method is called to derive the key. The default key
        derivation choices can be overridden here. Key derivation is not
        intended to be used as a security method to make a complex key
        out of a short password. Instead you should use large random
        secret keys.

        :param secret_key: A specific secret key to derive from.
            Defaults to the last item in :attr:`secret_keys`.

        .. versionchanged:: 2.0
            Added the ``secret_key`` parameter.
        aderive_keyabase64_encodeuReturns the signature for the given value.uSigns the given string.abase64_decodeaselfaverify_signatureavalueasiguVerifies the signature for the given value.aBadSignatureuNo uu found in valuearsplitlutoo many values to unpack (expected 2)uSignature u does not matchTapayloaduUnsigns the given string.aunsignuOnly validates the given signed value. Returns ``True`` if
        the signature exists and is valid.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucollections.abclaabcacabcwtaencodingTa_base64_alphabetTabase64_decodeTabase64_encodeTawant_bytesaexcTaBadSignatureuitsdangerous.signera__module__uSubclasses must implement :meth:`get_signature` to provide
    signature generation functionality.
    aSigningAlgorithma__qualname__DakeyavalueareturnabytesppuSigningAlgorithm.get_signatureDakeyavalueasigareturnabytesppabooluSigningAlgorithm.verify_signaturea__prepare__aNoneAlgorithma__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uProvides an algorithm that does not perform any signing and
    returns an empty signature.
    cuNoneAlgorithm.get_signaturea__orig_bases__TcDastringareturnabytesut.Anya_lazy_sha1uProvides signature generation using HMACs.a__annotations__astaticmethodut.AnyTnDadigest_methodut.Anya__init__uHMACAlgorithm.__init__uHMACAlgorithm.get_signatureDasecret_keyareturnustr | bytes | cabc.Iterable[str] | cabc.Iterable[bytes]ulist[bytes]uA signer securely signs bytes, then unsigns them to verify that
    the value hasn't been changed.

    The secret key should be a random string of ``bytes`` and should not
    be saved to code or version control. Different salts should be used
    to distinguish signing in different contexts. See :doc:`/concepts`
    for information about the security of the secret key and salt.

    :param secret_key: The secret key to sign and verify with. Can be a
        list of keys, oldest to newest, to support key rotation.
    :param salt: Extra key to combine with ``secret_key`` to distinguish
        signatures in different contexts.
    :param sep: Separator between the signature and value.
    :param key_derivation: How to derive the signing key from the secret
        key and salt. Possible values are ``concat``, ``django-concat``,
        or ``hmac``. Defaults to :attr:`default_key_derivation`, which
        defaults to ``django-concat``.
    :param digest_method: Hash function to use when generating the HMAC
        signature. Defaults to :attr:`default_digest_method`, which
        defaults to :func:`hashlib.sha1`. Note that the security of the
        hash alone doesn't apply when used intermediately in HMAC.
    :param algorithm: A :class:`SigningAlgorithm` instance to use
        instead of building a default :class:`HMACAlgorithm` with the
        ``digest_method``.

    .. versionchanged:: 2.0
        Added support for key rotation by passing a list to
        ``secret_key``.

    .. versionchanged:: 0.18
        ``algorithm`` was added as an argument to the class constructor.

    .. versionchanged:: 0.14
        ``key_derivation`` and ``digest_method`` were added as arguments
        to the class constructor.
    aSignerastrTcitsdangerous.Signerd.nnnDasecret_keyasaltasepakey_derivationadigest_methodaalgorithmustr | bytes | cabc.Iterable[str] | cabc.Iterable[bytes]ustr | bytes | Noneustr | bytesustr | Noneut.Any | NoneuSigningAlgorithm | NoneuSigner.__init__Dareturnabytesasecret_keyuSigner.secret_keyDasecret_keyareturnustr | bytes | NoneabytesuSigner.derive_keyDavalueareturnustr | bytesabytesuSigner.get_signatureasignuSigner.signDavalueasigareturnustr | bytesustr | bytesabooluSigner.verify_signatureDasigned_valueareturnustr | bytesabytesuSigner.unsignDasigned_valueareturnustr | bytesaboolavalidateuSigner.validateuitsdangerous\signer.pyu<module itsdangerous.signer>Ta__class__Taselfadigest_methodTaselfasecret_keyasaltasepakey_derivationadigest_methodaalgorithmTastringTasecret_keyTaselfasecret_keyamacTaselfakeyavalueamacTaselfakeyavalueTaselfavalueakeyasigTaselfTaselfavalueTaselfasigned_valueavalueasigTaselfasigned_valueTaselfavalueasigasecret_keyakeyTaselfakeyavalueasig.itsdangerous.timedatimeuReturns the current timestamp. The function must return an
        integer.
        adatetimeafromtimestampatimezoneautcTatzuConvert the timestamp from :meth:`get_timestamp` into an
        aware :class`datetime.datetime` in UTC.

        .. versionchanged:: 2.0
            The timestamp is returned as a timezone-aware ``datetime``
            in UTC rather than a naive ``datetime`` assumed to be UTC.
        awant_bytesabase64_encodeaint_to_bytesaget_timestampasepaget_signatureuSigns the given string and also attaches time information.a__class__aunsignaBadSignatureapayloadcaBadTimeSignatureTutimestamp missingTapayloadarsplitlutoo many values to unpack (expected 2)abytes_to_intabase64_decodeatimestamp_to_datetimeTEValueErrorEOSErrorEOverflowErrorTuMalformed timestampTapayloadadate_signedaSignatureExpireduSignature age uu > u secondslu < 0 secondsuWorks like the regular :meth:`.Signer.unsign` but can also
        validate the time. See the base docstring of the class for
        the general behavior. If ``return_timestamp`` is ``True`` the
        timestamp of the signature will be returned as an aware
        :class:`datetime.datetime` object in UTC.

        .. versionchanged:: 2.0
            The timestamp is returned as a timezone-aware ``datetime``
            in UTC rather than a naive ``datetime`` assumed to be UTC.
        Tamax_ageuOnly validates the given signed value. Returns ``True`` if
        the signature exists and is valid.acastucabc.Iterator[TimestampSigner]aiter_unsignerswsamax_ageTamax_ageareturn_timestampaselfaload_payloadalast_exceptionuReverse of :meth:`dumps`, raises :exc:`.BadSignature` if the
        signature validation fails. If a ``max_age`` is provided it will
        ensure the signature is not older than that time in seconds. In
        case the signature is outdated, :exc:`.SignatureExpired` is
        raised. All arguments are forwarded to the signer's
        :meth:`~TimestampSigner.unsign` method.
        a_loads_unsafe_implTaload_kwargsa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucollections.abcaabcacabcwtTadatetimeTatimezoneaencodingTabase64_decodeTabase64_encodeTabytes_to_intTaint_to_bytesTawant_bytesaexcTaBadSignatureTaBadTimeSignatureTaSignatureExpiredaserializerTa_TSerializeda_TSerializedTaSerializeraSerializerasignerTaSigneraSignera__prepare__aTimestampSignera__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uitsdangerous.timeda__module__uWorks like the regular :class:`.Signer` but also records the time
    of the signing and can be used to expire signatures. The
    :meth:`unsign` method can raise :exc:`.SignatureExpired` if the
    unsigning failed because the signature is expired.
    a__qualname__DareturnaintuTimestampSigner.get_timestampDatsareturnaintadatetimeuTimestampSigner.timestamp_to_datetimeDavalueareturnustr | bytesabytesasignuTimestampSigner.signaoverloadTnFDasigned_valueamax_ageareturn_timestampareturnustr | bytesuint | Noneut.Literal[False]abytesuTimestampSigner.unsignTntDasigned_valueamax_ageareturn_timestampareturnustr | bytesuint | Noneut.Literal[True]utuple[bytes, datetime]Dasigned_valueamax_ageareturn_timestampareturnustr | bytesuint | Noneaboolutuple[bytes, datetime] | bytesTnDasigned_valueamax_ageareturnustr | bytesuint | NoneaboolavalidateuTimestampSigner.validatea__orig_bases__aTimedSerializeruUses :class:`TimestampSigner` instead of the default
    :class:`.Signer`.
    a__annotations__adefault_signerutype[TimestampSigner]Dasaltareturnustr | bytes | Noneucabc.Iterator[TimestampSigner]uTimedSerializer.iter_unsignersTnFnDwsamax_ageareturn_timestampasaltareturnustr | bytesuint | Noneaboolustr | bytes | Noneut.AnyaloadsuTimedSerializer.loadsTnnDwsamax_ageasaltareturnustr | bytesuint | Noneustr | bytes | Noneutuple[bool, t.Any]aloads_unsafeuTimedSerializer.loads_unsafeuitsdangerous\timed.pyu<module itsdangerous.timed>Ta__class__TaselfTaselfasalta__class__Taselfwsamax_ageareturn_timestampasaltalast_exceptionasignerabase64datimestampapayloadaerrTaselfwsamax_ageasaltTaselfavalueatimestampasepTaselfatsTaselfasigned_valueamax_ageareturn_timestampTaselfasigned_valueamax_ageareturn_timestampats_intats_dtaresultasig_errorweasepavalueats_bytesaexcaagea__class__Taselfasigned_valueamax_age.itsdangerous.url_safesIastartswithTd.:lnnabase64_decodeapayloadaBadPayloadTuCould not base64 decode the payload because of an exceptionTaoriginal_errorazlibadecompressTuCould not zlib decompress the payload before decoding the payloada__class__aload_payloadadump_payloadacompressabase64_encodeajsond.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtla_jsonTa_CompactJSONla_CompactJSONaencodingTabase64_decodeTabase64_encodeaexcTaBadPayloadaserializerTa_PDataSerializera_PDataSerializerTaSerializeraSerializeratimedTaTimedSerializeraTimedSerializera__prepare__aURLSafeSerializerMixina__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uitsdangerous.url_safea__module__uMixed in with a regular serializer it will attempt to zlib
    compress the string to make it shorter if necessary. It will also
    base64 encode the string so that it can safely be placed in a URL.
    a__qualname__a__annotations__adefault_serializeru_PDataSerializer[str]DaserializernDapayloadaserializeraargsakwargsareturnabytesut.Any | Noneut.Anyut.Anyut.AnyuURLSafeSerializerMixin.load_payloadDaobjareturnut.AnyabytesuURLSafeSerializerMixin.dump_payloada__orig_bases__aURLSafeSerializeruWorks like :class:`.Serializer` but dumps and loads into a URL
    safe string consisting of the upper and lowercase character of the
    alphabet as well as ``'_'``, ``'-'`` and ``'.'``.
    aURLSafeTimedSerializeruWorks like :class:`.TimedSerializer` but dumps and loads into a
    URL safe string consisting of the upper and lowercase character of
    the alphabet as well as ``'_'``, ``'-'`` and ``'.'``.
    uitsdangerous\url_safe.pyu<module itsdangerous.url_safe>Ta__class__Taselfaobjajsonais_compressedacompressedabase64da__class__Taselfapayloadaserializeraargsakwargsadecompressajsonwea__class__u.jinja2._identifiera__doc__a__file__a__spec__aoriginahas_locationa__cached__arelacompileTu[\w·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣঁ-ঃ়া-ৄেৈো-্ৗৢৣ৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑੰੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣஂா-ூெ-ைொ-்ௗఀ-ఄా-ౄె-ైొ-్ౕౖౢౣಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣංඃ්ා-ුූෘ-ෟෲෳัิ-ฺ็-๎ັິ-ູົຼ່-ໍ༹༘༙༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏႚ-ႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝᠋-᠍ᢅᢆᢩᤠ-ᤫᤰ-᤻ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼᪰-᪽ᬀ-ᬄ᬴-᭄᭫-᭳ᮀ-ᮂᮡ-ᮭ᯦-᯳ᰤ-᰷᳐-᳔᳒-᳨᳭ᳲ-᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰℘℮⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣠-꣱ꣿꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀ꧥꨩ-ꨶꩃꩌꩍꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭ﬞ︀-️︠-︯︳︴﹍-﹏＿𐇽𐋠𐍶-𐍺𐨁-𐨃𐨅𐨆𐨌-𐨏𐨸-𐨿𐨺𐫦𐫥𐴤-𐽆𐴧-𐽐𑀀-𑀂𑀸-𑁆𑁿-𑂂𑂰-𑂺𑄀-𑄂𑄧-𑄴𑅅𑅆𑅳𑆀-𑆂𑆳-𑇀𑇉-𑇌𑈬-𑈷𑈾𑋟-𑋪𑌀-𑌃𑌻𑌼𑌾-𑍄𑍇𑍈𑍋-𑍍𑍗𑍢𑍣𑍦-𑍬𑍰-𑍴𑐵-𑑆𑑞𑒰-𑓃𑖯-𑖵𑖸-𑗀𑗜𑗝𑘰-𑙀𑚫-𑚷𑜝-𑜫𑠬-𑠺𑨁-𑨊𑨳-𑨹𑨻-𑨾𑩇𑩑-𑩛𑪊-𑪙𑰯-𑰶𑰸-𑰿𑲒-𑲧𑲩-𑲶𑴱-𑴶𑴺𑴼𑴽𑴿-𑵅𑵇𑶊-𑶎𑶐𑶑𑶓-𑶗𑻳-𑻶𖫰-𖫴𖬰-𖬶𖽑-𖽾𖾏-𖾒𛲝𛲞𝅥-𝅩𝅭-𝅲𝅻-𝆂𝆅-𝆋𝆪-𝆭𝉂-𝉄𝨀-𝨶𝨻-𝩬𝩵𝪄𝪛-𝪟𝪡-𝪯𞀀-𞀆𞀈-𞀘𞀛-𞀡𞀣𞀤𞀦-𞣐𞀪-𞣖𞥄-𞥊󠄀-󠇯]+apatternujinja2\_identifier.pyu<module jinja2._identifier>u.jinja2.async_utils)Eadecoratoruasync_variant.<locals>.decoratora_PassArgafrom_objanormal_funcaenvironmentaargsaAnyareturnais_asyncuasync_variant.<locals>.decorator.<locals>.is_asyncaWRAPPER_ASSIGNMENTSadifferenceTTa__module__a__name__a__qualname__awrapsTaassignedDaassignedaupdatedTa__module__a__name__a__qualname__Tawrapperuasync_variant.<locals>.decorator.<locals>.wrapperapass_eval_contextajinja_async_variantacastlaneed_eval_context:lnnaasync_funcavaluea_common_primitiveswVainspectaisawaitableut.Awaitable[V]aauto_awaitaiterablea__aiter__ut.AsyncIterable[V]aauto_aiteraauto_to_lista__doc__a__file__a__spec__aoriginahas_locationa__cached__wtautilsTa_PassArglTapass_eval_contextaTypeVarTwVaasync_variantSOfloatOintOdictOstrOlistOtupleMOboolaUnionaAwaitableDaiterableareturnut.Union[t.AsyncIterable[V], t.Iterable[V]]ut.AsyncIterator[V]ut.Union[t.AsyncIterable[V], t.Iterable[V]]aListujinja2\async_utils.pyu<module jinja2.async_utils>Tanormal_funcadecoratorTaiterableaitemTavalueTaasync_funcapass_arganeed_eval_contextais_asyncaasync_func_attrsanormal_func_attrsawrapperanormal_funcTanormal_funcTaargsTaargsakwargswbais_asyncaneed_eval_contextaasync_funcanormal_funcTaasync_funcais_asyncaneed_eval_contextanormal_funcu.jinja2.bccache aenvironmentakeyachecksumaresetacodeuResets the bucket (unloads the bytecode).areadabc_magicapicklealoadamarshalTEEOFErrorEValueErrorETypeErroruLoads bytecode from a file or file like object.ucan't write empty bucketawriteadumpluDump the bytecode into the file or file like object passed.aload_bytecodeaBytesIOuLoad bytecode from bytes.awrite_bytecodeagetvalueuReturn the bytecode as bytes.uSubclasses have to override this method to load bytecode into a
        bucket.  If they are not able to find code in the cache for the
        bucket, it must not do anything.
        uSubclasses have to override this method to write the bytecode
        from a bucket back to the cache.  If it unable to do so it must not
        fail silently but raise an exception.
        asha1aencodeTuutf-8aupdatew|uahexdigestuReturns the unique hash key for this template name.uReturns a checksum for the source.aget_cache_keyaget_source_checksumaBucketuReturn a cache bucket for the given template.  All arguments are
        mandatory but filename may be `None`.
        adump_bytecodeuPut the bucket into the cache.a_get_default_cache_diradirectoryapatternDareturnute.NoReturna_unsafe_diruFileSystemBytecodeCache._get_default_cache_dir.<locals>._unsafe_diratempfileagettempdiruCannot determine safe temp directory.  You need to explicitly provide one.ajoina_get_cache_filenamearbTEFileNotFoundErrorEIsADirectoryErrorEPermissionErrora__enter__a__exit__TnnnaNamedTemporaryFileawbu.tmpTamodeadiraprefixasuffixadeleteDareturnnaremove_silentuFileSystemBytecodeCache.dump_bytecode.<locals>.remove_silentareplaceanamearemovewflafnmatchafilterTw*aselfaclientaprefixatimeoutaignore_memcache_errorsagetabytecode_from_stringabytecode_to_stringasetuThe optional bytecode cache system. This is useful if you have very
complex template situations and the compilation of all those templates
slows down your application too much.

Situations where this is useful are often forking web applications that
are initialized on the first request.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aerrnoaosastatasyswtahashlibTasha1aCodeTypelabc_versioncj2adumpsTllujinja2.bccachea__module__uBuckets are used to store the bytecode for one template.  It's created
    and initialized by the bytecode cache and passed to the loading functions.

    The buckets get an internal checksum from the cache assigned and use this
    to automatically reject outdated cache material.  Individual bytecode
    cache subclasses don't have to care about cache invalidation.
    a__qualname__DaenvironmentakeyachecksumareturnaEnvironmentOstrpna__init__uBucket.__init__uBucket.resetaBinaryIOareturnuBucket.load_bytecodeaIOuBucket.write_bytecodeDastringareturnObytesnuBucket.bytecode_from_stringDareturnObytesuBucket.bytecode_to_stringuTo implement your own bytecode cache you have to subclass this class
    and override :meth:`load_bytecode` and :meth:`dump_bytecode`.  Both of
    these methods are passed a :class:`~jinja2.bccache.Bucket`.

    A very basic bytecode cache that saves the bytecode on the file system::

        from os import path

        class MyCache(BytecodeCache):

            def __init__(self, directory):
                self.directory = directory

            def load_bytecode(self, bucket):
                filename = path.join(self.directory, bucket.key)
                if path.exists(filename):
                    with open(filename, 'rb') as f:
                        bucket.load_bytecode(f)

            def dump_bytecode(self, bucket):
                filename = path.join(self.directory, bucket.key)
                with open(filename, 'wb') as f:
                    bucket.write_bytecode(f)

    A more advanced version of a filesystem based bytecode cache is part of
    Jinja.
    aBytecodeCacheabucketuBytecodeCache.load_bytecodeuBytecodeCache.dump_bytecodeuClears the cache.  This method is not used by Jinja but should be
        implemented to allow applications to clear the bytecode cache used
        by a particular environment.
        aclearuBytecodeCache.clearTnafilenameaOptionalaUnionuBytecodeCache.get_cache_keyDasourceareturnOstrpuBytecodeCache.get_source_checksumaEnvironmentasourceaget_bucketuBytecodeCache.get_bucketaset_bucketuBytecodeCache.set_bucketa__prepare__aFileSystemBytecodeCachea__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uA bytecode cache that stores bytecode on the filesystem.  It accepts
    two arguments: The directory where the cache items are stored and a
    pattern string that is used to build the filename.

    If no directory is specified a default cache directory is selected.  On
    Windows the user's temp directory is used, on UNIX systems a directory
    is created for the user in the system temp directory.

    The pattern can be used to have multiple separate caches operate on the
    same directory.  The default pattern is ``'__jinja2_%s.cache'``.  ``%s``
    is replaced with the cache key.

    >>> bcc = FileSystemBytecodeCache('/tmp/jinja_cache', '%s.cache')

    This bytecode cache supports clearing of the cache using the clear method.
    Tnu__jinja2_%s.cacheastruFileSystemBytecodeCache.__init__uFileSystemBytecodeCache._get_default_cache_diruFileSystemBytecodeCache._get_cache_filenameuFileSystemBytecodeCache.load_bytecodeuFileSystemBytecodeCache.dump_bytecodeuFileSystemBytecodeCache.cleara__orig_bases__aMemcachedBytecodeCacheuThis class implements a bytecode cache that uses a memcache cache for
    storing the information.  It does not enforce a specific memcache library
    (tummy's memcache or cmemcache) but will accept any class that provides
    the minimal interface required.

    Libraries compatible with this class:

    -   `cachelib <https://github.com/pallets/cachelib>`_
    -   `python-memcached <https://pypi.org/project/python-memcached/>`_

    (Unfortunately the django cache interface is not compatible because it
    does not support storing binary data, only text. You can however pass
    the underlying cache client to the bytecode cache which is available
    as `django.core.cache.cache._client`.)

    The minimal interface for the client passed to the constructor is this:

    .. class:: MinimalClientInterface

        .. method:: set(key, value[, timeout])

            Stores the bytecode in the cache.  `value` is a string and
            `timeout` the timeout of the key.  If timeout is not provided
            a default timeout or no timeout should be assumed, if it's
            provided it's an integer with the number of seconds the cache
            item should exist.

        .. method:: get(key)

            Returns the value for the cache key.  If the item does not
            exist in the cache the return value must be `None`.

    The other arguments to the constructor are the prefix for all keys that
    is added before the actual cache key and the timeout for the bytecode in
    the cache system.  We recommend a high (or no) timeout.

    This bytecode cache does not support clearing of used items in the cache.
    The clear method is a no-operation function.

    .. versionadded:: 2.7
       Added support for ignoring memcache errors through the
       `ignore_memcache_errors` parameter.
    Tujinja2/bytecode/nta_MemcachedClientaintabooluMemcachedBytecodeCache.__init__uMemcachedBytecodeCache.load_bytecodeuMemcachedBytecodeCache.dump_bytecodeujinja2\bccache.pyu<module jinja2.bccache>Ta__class__TaselfaenvironmentakeyachecksumTaselfadirectoryapatternTaselfaclientaprefixatimeoutaignore_memcache_errorsTaselfabucketTaselfa_unsafe_diratmpdiradirnameaactual_dirweaactual_dir_statTaselfastringTaselfaoutTaselfTaselfaremoveafilesafilenameTaselfabucketanamewfaremove_silentTaselfabucketakeyavalueTaselfaenvironmentanameafilenameasourceakeyachecksumabucketTaselfanameafilenameahashTaselfasourceTaselfwfamagicachecksumTaselfabucketafilenamewfTaselfabucketacodeTwfTaselfwf.jinja2.compilernVaselfaCodeGeneratoranodeanodesaExpraframeaFrameakwargsaAnyareturnanew_funcuoptimizeconst.<locals>.new_funcaupdate_wrapperacastwFaoptimizeraeval_ctxavolatileavisitwfaoptimizeconstaBinExpravisitoru_make_binop.<locals>.visitoraenvironmentasandboxedaopaintercepted_binopsawriteuenvironment.call_binop(context, uu, aleftTu, arightTw(w Tw)aUnaryExpru_make_unop.<locals>.visitoraintercepted_unopsuenvironment.call_unop(context, w(aTemplateuCan't compile non template nodesacode_generator_classastreamagetvalueuGenerate the python source for a node tree.aEllipsisaMarkupPOsetOlistOfrozensetOtupleaitemsuDoes the node have a safe representation?ahas_safe_repru<genexpr>uhas_safe_repr.<locals>.<genexpr>utoo many values to unpack (expected 2)aUndeclaredNameVisitoraVisitorExitaundeclareduCheck if the names passed are accessed undeclared.  The return value
    is a set of all the undeclared names from the sequence of names found.
    aaccesses_calleraaccesses_kwargsaaccesses_varargsaparentaSymbolsTalevelasymbolsarequire_output_checkabufferablockatoplevelarootlevelaloop_frameablock_frameasoft_framea__new__aupdateacopyuCreate a copy of the current one.alevelluReturn an inner frame.uReturn a soft frame.  A soft frame may not be modified as
        standalone thing as it shares the resources with the frame it
        was created of, but it's not a rootlevel frame any longer.

        This is only used to implement if-statements and conditional
        expressions.
        afiltersatestsageneric_visitaaddanameanamesactxaloadadiscardaStringIOafilenameacreated_block_contextadefer_initaOptimizeraimport_aliasesablockslaextends_so_farahas_known_extendsacode_linenoadebug_infoa_write_debug_infoa_new_linesa_last_linea_first_writea_last_identifiera_indentationa_assign_stacka_param_def_blockacontexta_context_reference_stackaTemplateAssertionErroruFail with a :exc:`TemplateAssertionError`.at_uGet a new unique identifier.atemporary_identifierawritelineu = []uEnable buffering for the frame from that point onwards.Tuif context.eval_ctx.autoescape:aindentureturn Markup(concat(u))aoutdentTuelse:ureturn concat(w)aautoescapeuReturn the buffer contents of the frame.uIndent by one.uOutdent by step.uyield u.append(uYield or write into the frame buffer.uEnd the writing process started by `start_write`.astart_writeaend_writeuSimple shortcut for start_write + write + end_write.TapassaCompilerExituVisit a list of nodes as block in a frame.  If the current frame
        is no buffer a dummy ``if 0: yield None`` is written automatically.
        w
aappendu    uWrite a string into the output stream.anewlineuCombination of newline and write.amaxalinenouAdd one or more newlines before the next write.achainaargsw=adyn_argsTu, *adyn_kwargsTu, **dict({Tu, **{akeyu: avalueTu}, **Tw}Tu, **uWrites a function call to the stream for the current node.
        A leading comma is added automatically.  The extra keyword
        arguments may not include python keywords otherwise a syntax
        error could occur.  The extra keyword arguments should be given
        as python dict.
        uCodeGenerator.signature.<locals>.<genexpr>ais_python_keywordaDependencyFinderVisitorutoo many values to unpack (expected 3)asortedaid_mapTutry:u = environment.w[w]Tuexcept KeyError:Tu@internalcodeudef u(*unused):uraise TemplateRuntimeError("No :nqnu named u found.")uFind all filter and test names used in the template and
        assign them to variables in the compiled namespace. Checking
        that the names are registered with the environment is done when
        compiling the Filter and Test nodes. If the node is in an If or
        CondExpr node, the check is done at runtime instead.

        .. versionchanged:: 3.0
            Filters and tests in If and CondExpr nodes are checked at
            runtime instead of compile time.
        aloadsaVAR_LOAD_PARAMETERaVAR_LOAD_RESOLVEu = aget_resolve_funcaVAR_LOAD_ALIASaVAR_LOAD_UNDEFINEDaundefsuunknown load instructionu = missingais_asyncachoose_asyncainneraanalyze_nodeaMacroRefacallerTakwargsavarargsaskip_special_paramsarefafind_undeclaredabodyTacallerakwargsavarargsaexplicit_calleradefaultsafailuWhen defining macros or call blocks the special "caller" argument must be omitted or be given a default.adeclare_parameterTacallerTakwargsavarargsTavarargsafuncTamacrou):aenter_frameapush_parameter_definitionsuif u is missing:u = undefined("parameter u was not provided", name=adefaultamark_parameter_storedapop_parameter_definitionsablockvisitareturn_buffer_contentsDaforce_unescapedtaleave_frameDawith_python_scopetuDump the function def of a macro or call block.w,uMacro(environment, macro, u, (u), u, context.eval_ctx.autoescape)uDump the macro definition for the def created by macro_body.uCodeGenerator.macro_def.<locals>.<genexpr>uline u in uReturn a human readable position for the node.adump_storesw{w}uCodeGenerator.dump_local_context.<locals>.<genexpr>Turesolve = context.resolve_or_missingTuundefined = environment.undefinedTuconcat = environment.concatTucond_expr_undefined = UndefinedTuif 0: yield NoneuWrites a common preamble that is used by root and block functions.
        Primarily this sets up common local helpers and enforces a generator
        through a dead branch.
        adump_param_targetsuPushes all parameter targets from the given frame into a local
        stack that permits tracking of yet to be assigned parameters.  In
        particular this enables the optimization from `visit_Name` to skip
        undefined expressions for parameters in macros as macros can reference
        otherwise unbound parameters.
        apopuPops the current parameter definitions set.quMarks a parameter in the current parameter definitions as stored.
        This will skip the enforced undefined checks.
        aresolveu.resolveaget_context_refu.derived(adump_local_contextuChecks if a given target is an undeclared parameter.uPushes a new layer for assignment tracking.:nlnw_u_loop_vars[u] = u_block_vars[ucontext.vars[Tu_loop_vars.update({Tu_block_vars.update({Tucontext.vars.update({Tu})ucontext.exported_vars.add(areprucontext.exported_vars.update((uPops the topmost level for assignment tracking and updates the
        context variables if necessary.
        Tuno root frame allowedaEvalContextaruntimeTaasync_exportedaasync_exportedTaexportedaexportedufrom jinja2.runtime import u, environment=environmentafindaExtendsafind_allaBlockublock u defined twiceaImportedNameaimportnamew.arsplitTw.lufrom u import u as uimport uname = Tarootu(context, missing=missingDaextralawrite_commonsTaselfu = TemplateReference(context)Tuparent_template = Noneapull_dependenciesTuif parent_template is not None:Tuyield from parent_template.root_render_func(context)Tuasync for event in parent_template.root_render_func(context):Tuyield eventablock_TaselfasuperasuperTasuperu = context.super(u, block_Tu_block_vars = {}ublocks = {w&udebug_info = u: block_uCodeGenerator.visit_Template.<locals>.<genexpr>Tuif parent_template is None:ascopedaderive_contextarequireduif len(context.blocks[u]) <= 1:uraise TemplateRuntimeError("Required block u not found")uyield from context.blocks[u][0](ufor event in context.blocks[asimple_writeaeventuCall a block and register it for the template.ucannot use extend from a non top-level scopeTuraise TemplateRuntimeError("extended multiple times")uparent_template = environment.get_template(atemplateTufor name, parent_block in parent_template.blocks.items():Tucontext.blocks.setdefault(name, []).append(parent_block)uCalls the extender.aignore_missingaget_or_select_templateaConstaget_templateTOtupleOlistaselect_templateaTupleaListutemplate = environment.Tuexcept TemplateNotFound:awith_contextufor event in template.root_render_func(template.new_context(context.get_all(), True, u)):Tufor event in (await template._get_default_module_async())._body_stream:Tuyield from template._get_default_module()._body_streamuHandles includes.Tuawait uenvironment.get_template(u).amake_moduleTa_asyncu(context.get_all(), True, a_get_default_moduleu(context)atargeta_import_commonastartswithTw_ucontext.exported_vars.discard(uVisit regular imports.Tuincluded_template = u = getattr(included_template, u, missing)uthe template {included_template.__name__!r} (imported on apositionu) does not export the requested name u = undefined(fu, name=avar_namesadiscarded_namesucontext.vars.update({u})ucontext.exported_vars.difference_update((uVisit named imports.uCodeGenerator.visit_FromImport.<locals>.<genexpr>arecursivealoopaiter_child_nodesTTabodyTaonlyTaloopDafor_branchabodyaelse_Dafor_branchaelseatestDafor_branchatestu(fiter):Tuasync for ufor Tu in Tuauto_aiter(fiter)afiterTw:Tuyield Tlu(reciter, loop_render_func, depth=0):aNameastoreuCan't assign to special loop variable in for-loop targetu = 1TaAsyncuLoopContext(aloop_filter_funcTareciterTuauto_aiter(aiterTu, undefined, loop_render_func, depth):u, undefined):w:Tu_loop_vars = {}aiteration_indicatoru = 0Tawith_python_scopeuloop(Tu, loop)adifference_updateastoresuCodeGenerator.visit_For.<locals>.<genexpr>asoftaelif_uelif aif_frameamacro_bodyamacro_defTucaller = avisit_CallacallDaforward_callertavisit_Filterafilteratargetsavaluesawith_frameTu = uThe default finalize function if the environment isn't
        configured with one. Or, if the environment has one, this is
        called on that function's output for constants.
        a_finalizea_default_finalizeafinalizeuenvironment.finalize(a_PassArgaeval_contextucontext.eval_ctxafrom_objuCodeGenerator._make_finalize.<locals>.finalizea_FinalizeInfouBuild the finalize function to be used on constants and at
        runtime. Cached so it's only created once for all output nodes.

        Returns a ``namedtuple`` with the following attributes:

        ``const``
            A function to finalize constant data at compile time.

        ``src``
            Source code to output around nodes to be evaluated at
            runtime.
        aenv_finalizeaconcatuGiven a group of constant values converted from ``Output``
        child nodes, produce a string to write to the template module
        source.
        aas_constaescapeaTemplateDataaconstuTry to optimize a child of an ``Output`` node by trying to
        convert it to constant, finalized data at compile time.

        If :exc:`Impossible` is raised, the node is not constant and
        will be evaluated at runtime. Any other exception will also be
        evaluated at runtime for easier debugging.
        Tu(escape if context.eval_ctx.autoescape else str)(Tuescape(Tustr(asrcuOutput extra source code before visiting a child of an
        ``Output`` node.
        uOutput extra source code after visiting a child of an
        ``Output`` node.
        a_make_finalizeaImpossiblea_output_child_to_constu.extend((a_output_const_repra_output_child_preaitema_output_child_postTw,apush_assign_trackingapop_assign_trackingTu = (Markup if context.eval_ctx.autoescape else identity)(uconcat(afind_loadaparameter_is_undeclaredu(undefined(name=u) if u is missing else uif not isinstance(u, Namespace):Turaise TemplateRuntimeError("cannot assign attribute on non-namespace object")aattru(Markup if context.eval_ctx.autoescape else identity)(adataaidxu,)Tw[Tw]Tw{Tu: u(markup_join if context.eval_ctx.volatile else str_join)amarkup_joinastr_joinu((Tu))aexpraopsaoperatorsTu(await auto_await(Tuenvironment.getattr(aargaSliceTuenvironment.getitem(astartastopastepais_filteragetuNo asignaturea_filter_test_commonuCodeGenerator._filter_test_commona__enter__a__exit__u(Markup(concat(u)) if context.eval_ctx.autoescape else concat(uMarkup(concat(TnnnDareturnnawrite_expr2uCodeGenerator.visit_CondExpr.<locals>.write_expr2aexpr1Tu if Tu else aexpr2ucond_expr_undefined("the inline if-expression on u evaluated to false and no else section was defined.")Tuenvironment.call(context, Tucontext.call(DacalleracallerDa_loop_varsa_loop_varsDa_block_varsa_block_varsaextra_kwargsTuMarkup(Tu(Markup if context.eval_ctx.autoescape else identity)(uenvironment.uenvironment.extensions[aidentifieru].Tacontextacontinueabreaku.vars = apush_context_referenceTtTaisolatedapop_context_referenceaoptionsucontext.eval_ctx.avalasaveu = context.eval_ctx.save()avisit_EvalContextModifierarevertucontext.eval_ctx.revert(uCompiles nodes from the parser into Python code.a__doc__a__file__a__spec__aoriginahas_locationa__cached__wtacontextlibTacontextmanageracontextmanageraitertoolsTachainakeywordTaiskeywordaiskeywordamarkupsafeTaescapeTaMarkupTanodesaexceptionsTaTemplateAssertionErroraidtrackingTaSymbolsTaVAR_LOAD_ALIASTaVAR_LOAD_PARAMETERTaVAR_LOAD_RESOLVETaVAR_LOAD_UNDEFINEDTaEvalContextTaOptimizerautilsTa_PassArgTaconcatTaNodeVisitoraNodeVisitoraTypeVaraCallableTwFTaboundDaeqaneagtagteqaltalteqainanotinu==u!=w>u>=w<u<=ainunot ina_make_binopa_make_unopTnFtaEnvironmentaOptionalaTextIOaoptimizedagenerateaIterableaNodeaSetujinja2.compilera__module__a__qualname__aUnionaMacroaCallBlocka__init__uMacroRef.__init__uHolds compile time information for us.TnnuFrame.__init__DareturnaFrameuFrame.copyTFDaisolatedareturnOboolaFrameuFrame.inneruFrame.softa__copy__TERuntimeErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uException used by the `UndeclaredNameVisitor` to signal a stop.a__orig_bases__uA visitor that collects filter and test calls.uDependencyFinderVisitor.__init__aFilteruDependencyFinderVisitor.visit_FilteraTestavisit_TestuDependencyFinderVisitor.visit_TestuStop visiting at blocks.avisit_BlockuDependencyFinderVisitor.visit_BlockuA visitor that checks if a name is accessed without being
    declared.  This is different from the frame visitor as it will
    not stop at closure frames.
    astruUndeclaredNameVisitor.__init__avisit_NameuUndeclaredNameVisitor.visit_NameuStop visiting a blocks.uUndeclaredNameVisitor.visit_BlockTEExceptionuRaised if the compiler encountered a situation where it just
    doesn't make sense to further process the code.  Any block that
    raises such an exception is not further processed.
    a__annotations__abooluCodeGenerator.__init__apropertyuCodeGenerator.optimizedamsgaintute.NoReturnuCodeGenerator.failuCodeGenerator.temporary_identifieruCodeGenerator.bufferaforce_unescapeduCodeGenerator.return_buffer_contentsuCodeGenerator.indentTluCodeGenerator.outdentTnuCodeGenerator.start_writeuCodeGenerator.end_writewsuCodeGenerator.simple_writeuCodeGenerator.blockvisitwxuCodeGenerator.writeTnlaextrauCodeGenerator.writelineuCodeGenerator.newlineaCallaMappinguCodeGenerator.signatureuCodeGenerator.pull_dependenciesuCodeGenerator.enter_frameawith_python_scopeuCodeGenerator.leave_frameTuasync uaasync_valueasync_valueuCodeGenerator.choose_asyncuCodeGenerator.funcuCodeGenerator.macro_bodyamacro_refuCodeGenerator.macro_defuCodeGenerator.positionuCodeGenerator.dump_local_contextuCodeGenerator.write_commonsuCodeGenerator.push_parameter_definitionsuCodeGenerator.pop_parameter_definitionsuCodeGenerator.mark_parameter_storeduCodeGenerator.push_context_referenceuCodeGenerator.pop_context_referenceuCodeGenerator.get_context_refuCodeGenerator.get_resolve_funcuCodeGenerator.derive_contextuCodeGenerator.parameter_is_undeclareduCodeGenerator.push_assign_trackinguCodeGenerator.pop_assign_trackingavisit_TemplateuCodeGenerator.visit_TemplateuCodeGenerator.visit_Blockavisit_ExtendsuCodeGenerator.visit_ExtendsaIncludeavisit_IncludeuCodeGenerator.visit_IncludeaImportaFromImportuCodeGenerator._import_commonavisit_ImportuCodeGenerator.visit_Importavisit_FromImportuCodeGenerator.visit_FromImportaForavisit_ForuCodeGenerator.visit_ForaIfavisit_IfuCodeGenerator.visit_Ifavisit_MacrouCodeGenerator.visit_Macroavisit_CallBlockuCodeGenerator.visit_CallBlockaFilterBlockavisit_FilterBlockuCodeGenerator.visit_FilterBlockaWithavisit_WithuCodeGenerator.visit_WithaExprStmtavisit_ExprStmtuCodeGenerator.visit_ExprStmtaNamedTupleuCodeGenerator._FinalizeInfoastaticmethoduCodeGenerator._default_finalizeuCodeGenerator._make_finalizeagroupuCodeGenerator._output_const_repruCodeGenerator._output_child_to_constuCodeGenerator._output_child_preuCodeGenerator._output_child_postaOutputavisit_OutputuCodeGenerator.visit_OutputaAssignavisit_AssignuCodeGenerator.visit_AssignaAssignBlockavisit_AssignBlockuCodeGenerator.visit_AssignBlockuCodeGenerator.visit_NameaNSRefavisit_NSRefuCodeGenerator.visit_NSRefavisit_ConstuCodeGenerator.visit_Constavisit_TemplateDatauCodeGenerator.visit_TemplateDataavisit_TupleuCodeGenerator.visit_Tupleavisit_ListuCodeGenerator.visit_ListaDictavisit_DictuCodeGenerator.visit_DictTw+avisit_AddTw-avisit_SubTw*avisit_MulTw/avisit_DivTu//avisit_FloorDivTu**avisit_PowTw%avisit_ModTaandavisit_AndTaoravisit_Oravisit_Posavisit_NegTunot avisit_NotaConcatavisit_ConcatuCodeGenerator.visit_ConcataCompareavisit_CompareuCodeGenerator.visit_CompareaOperandavisit_OperanduCodeGenerator.visit_OperandaGetattravisit_GetattruCodeGenerator.visit_GetattraGetitemavisit_GetitemuCodeGenerator.visit_Getitemavisit_SliceuCodeGenerator.visit_SliceaIteratoruCodeGenerator.visit_FilteruCodeGenerator.visit_TestaCondExpravisit_CondExpruCodeGenerator.visit_CondExpraforward_calleruCodeGenerator.visit_CallaKeywordavisit_KeyworduCodeGenerator.visit_KeywordaMarkSafeavisit_MarkSafeuCodeGenerator.visit_MarkSafeaMarkSafeIfAutoescapeavisit_MarkSafeIfAutoescapeuCodeGenerator.visit_MarkSafeIfAutoescapeaEnvironmentAttributeavisit_EnvironmentAttributeuCodeGenerator.visit_EnvironmentAttributeaExtensionAttributeavisit_ExtensionAttributeuCodeGenerator.visit_ExtensionAttributeavisit_ImportedNameuCodeGenerator.visit_ImportedNameaInternalNameavisit_InternalNameuCodeGenerator.visit_InternalNameaContextReferenceavisit_ContextReferenceuCodeGenerator.visit_ContextReferenceaDerivedContextReferenceavisit_DerivedContextReferenceuCodeGenerator.visit_DerivedContextReferenceaContinueavisit_ContinueuCodeGenerator.visit_ContinueaBreakavisit_BreakuCodeGenerator.visit_BreakaScopeavisit_ScopeuCodeGenerator.visit_ScopeaOverlayScopeavisit_OverlayScopeuCodeGenerator.visit_OverlayScopeaEvalContextModifieruCodeGenerator.visit_EvalContextModifieraScopedEvalContextModifieravisit_ScopedEvalContextModifieruCodeGenerator.visit_ScopedEvalContextModifierujinja2\compiler.pyTa.0anameatargetTa.0wxTa.0wkTa.0ablockTa.0anameaframeTa.0wkwvTa.0wvu<module jinja2.compiler>Ta__class__Taselfaenvironmentanameafilenameastreamadefer_initaoptimizedTaselfaeval_ctxaparentalevelTaselfanodeTaselfanamesTavalueTaselfanodeaframeais_filterafuncatype_nameapass_argTaselfanodeaframeaf_nameTaopavisitorTaselfafinalizeadefaultasrcaenv_finalizeapass_argTaselfanodeaframeafinalizeTaselfanodeaframeafinalizeaconstTaselfagroupTaselfanodesaframeanodeTaselfaframeTaselfaasync_valueasync_valueTaselfarvTaselfaframeaitems_kvTaselfaframeaundefsatargetaactionaparamTaselfamsgalinenoTavalueadefaultaenv_finalizeTadefaultaenv_finalizeTavalueadefaultaenv_finalizeaselfTadefaultaenv_finalizeaselfTanodesanamesavisitoranodeTaselfanameTanodeaenvironmentanameafilenameastreamadefer_initaoptimizedageneratorTaselfatargetTaselfaisolatedTaselfaframeawith_python_scopeaundefsatargetTaselfanodeaframeamacro_refaexplicit_calleraskip_special_paramsaargsaidxaargaundeclaredarefadefaultTaselfamacro_refaframeaarg_tupleanameTaselfanodeaframeakwargsanew_nodewfTwfTaselfanodeaextraTwfanew_funcTaselfastepTaselfaframeavarsapublic_namesanamearefaidxanames_strTaselfanodearvTaselfanodesavisitoranodeaid_mapanamesadependencyanameTaselfaframeaforce_unescapedTaselfanodeaframeaextra_kwargsakwarg_workaroundaargakwargakeyavalueTaselfwsaframeanodeTaselfaframeanodeTaselfanodeaframeTaselfanodeaframeablock_frameTaselfanodeaframealevelacontextTaselfanodeaframeaforward_calleraextra_kwargsaloop_kwargsablock_kwargsTaselfanodeaframeacall_frameamacro_refTaselfanodeaframeaopTaselfanodeaframeafunc_nameaargTaselfanodeaframeawrite_expr2TaselfanodeaframeavalTaselfanodeaframeaidxaitemTaselfanodeaframeakeywordavalTaselfanodeaframeafilter_frameTaselfanodeaframealoop_frameatest_frameaelse_frameaextended_loopaloop_refaloop_filter_funcanameaiteration_indicatorT
aselfanodeaframeavar_namesadiscarded_namesanameaaliasamessageanames_kvanames_strTaselfanodeaframeaif_frameaelif_Taselfanodeaframeafunc_nameaskip_event_yieldTaselfanodeaframeamacro_frameamacro_refTaselfanodeaframearefTaselfanodeaframearefaloadTaselfanodeaframeabodyafinalizeachildaconstaitemavalTaselfanodeaframeactxascope_frameTaselfanodeaframeascope_frameTaselfanodeaframeaold_ctx_nameasaved_ctxachildTaselfanodeaframeaeval_ctxaasync_exportedaexportedaexported_namesaenvenvahave_extendsablockaimport_aimpaaliasamoduleaobjarefanameablock_frameaundeclaredablocks_kv_stradebug_kv_strTaselfanodeaframeawith_frameatargetaexprTaopTaselfwxTanodeaselfaframeTaframeanodeaselfTaselfwxanodeaextra.jinja2YuJinja is a template engine written in pure Python. It provides a
non-XML syntax that supports inline expressions and an optional
sandboxed environment.
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_jinja2u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__abccacheTaBytecodeCachelaBytecodeCachelTaFileSystemBytecodeCacheaFileSystemBytecodeCacheTaMemcachedBytecodeCacheaMemcachedBytecodeCacheaenvironmentTaEnvironmentaEnvironmentTaTemplateaTemplateaexceptionsTaTemplateAssertionErroraTemplateAssertionErrorTaTemplateErroraTemplateErrorTaTemplateNotFoundaTemplateNotFoundTaTemplateRuntimeErroraTemplateRuntimeErrorTaTemplatesNotFoundaTemplatesNotFoundTaTemplateSyntaxErroraTemplateSyntaxErrorTaUndefinedErroraUndefinedErroraloadersTaBaseLoaderaBaseLoaderTaChoiceLoaderaChoiceLoaderTaDictLoaderaDictLoaderTaFileSystemLoaderaFileSystemLoaderTaFunctionLoaderaFunctionLoaderTaModuleLoaderaModuleLoaderTaPackageLoaderaPackageLoaderTaPrefixLoaderaPrefixLoaderaruntimeTaChainableUndefinedaChainableUndefinedTaDebugUndefinedaDebugUndefinedTamake_logging_undefinedamake_logging_undefinedTaStrictUndefinedaStrictUndefinedTaUndefinedaUndefinedautilsTaclear_cachesaclear_cachesTais_undefinedais_undefinedTapass_contextapass_contextTapass_environmentapass_environmentTapass_eval_contextapass_eval_contextTaselect_autoescapeaselect_autoescapeu3.1.4a__version__ujinja2\__init__.pyu<module jinja2>u.jinja2.constantsa__doc__a__file__a__spec__aoriginahas_locationa__cached__ua ac accumsan ad adipiscing aenean aliquam aliquet amet ante aptent arcu at
auctor augue bibendum blandit class commodo condimentum congue consectetuer
consequat conubia convallis cras cubilia cum curabitur curae cursus dapibus
diam dictum dictumst dignissim dis dolor donec dui duis egestas eget eleifend
elementum elit enim erat eros est et etiam eu euismod facilisi facilisis fames
faucibus felis fermentum feugiat fringilla fusce gravida habitant habitasse hac
hendrerit hymenaeos iaculis id imperdiet in inceptos integer interdum ipsum
justo lacinia lacus laoreet lectus leo libero ligula litora lobortis lorem
luctus maecenas magna magnis malesuada massa mattis mauris metus mi molestie
mollis montes morbi mus nam nascetur natoque nec neque netus nibh nisi nisl non
nonummy nostra nulla nullam nunc odio orci ornare parturient pede pellentesque
penatibus per pharetra phasellus placerat platea porta porttitor posuere
potenti praesent pretium primis proin pulvinar purus quam quis quisque rhoncus
ridiculus risus rutrum sagittis sapien scelerisque sed sem semper senectus sit
sociis sociosqu sodales sollicitudin suscipit suspendisse taciti tellus tempor
tempus tincidunt torquent tortor tristique turpis ullamcorper ultrices
ultricies urna ut varius vehicula vel velit venenatis vestibulum vitae vivamus
viverra volutpat vulputateaLOREM_IPSUM_WORDSujinja2\constants.pyu<module jinja2.constants>u.jinja2.debug_aexc_infoutoo many values to unpack (expected 3)acastaTracebackTypeaTemplateSyntaxErroratranslatedasourceawith_tracebackTnafake_tracebackafilenameu<unknown>alinenoatb_nextatbatb_frameaf_codeainternal_codeaf_globalsagetTa__jinja_template__aget_corresponding_linenoatb_linenoaexc_valueastackuRewrite the current exception to replace any tracebacks from
    within compiled template code with tracebacks that look like they
    came from the template source.

    This must be called within an ``except`` block.

    :param source: For ``TemplateSyntaxError``, the original source if
        known.
    :return: The original exception with the rewritten traceback.
    aget_template_localsaf_localsapopTa__jinja_exception__na__name__a__file__a__jinja_exception__w
luraise __jinja_exception__aexecatemplateaco_namearootutop-level template codeastartswithTablock_ublock :lnnuareplaceTaco_namealocalsacodeaglobalsalocationafunctionu<string>luProduce a new traceback object that looks like it came from the
    template source instead of the compiled code. The filename, line
    number, and location name will point to the template, and the local
    variables will be the current template context.

    :param exc_value: The original exception to be re-raised to create
        the new traceback.
    :param tb: The original traceback to get the local variables and
        code info from.
    :param filename: The template filename.
    :param lineno: The line number in the template source.
    Tacontextaget_allacopyaitemsutoo many values to unpack (expected 2)Tal_amissingasplitTw_lalocal_overridesTqladatauBased on the runtime locals, get the context that would be
    available at that point in the template.
    a__doc__a__spec__aoriginahas_locationa__cached__asyswtaCodeTypeaexceptionsTaTemplateSyntaxErrorautilsTainternal_codeTamissingaOptionalareturnarewrite_traceback_stackareal_localsaMappingaAnyaDictujinja2\debug.pyu<module jinja2.debug>Taexc_valueatbafilenamealinenoacodealocalsaglobalsalocationafunctionT
areal_localsactxadataalocal_overridesanameavaluew_adepth_stradepthacur_depthTasourcew_aexc_valueatbastackatemplatealinenoafake_tbatb_next.jinja2.defaults>a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__wtafiltersTaFILTERSlaFILTERSlaDEFAULT_FILTERSatestsTaTESTSaTESTSaDEFAULT_TESTSautilsTaCycleraCyclerTagenerate_lorem_ipsumagenerate_lorem_ipsumTaJoineraJoinerTaNamespaceaNamespaceu{%aBLOCK_START_STRINGu%}aBLOCK_END_STRINGu{{aVARIABLE_START_STRINGu}}aVARIABLE_END_STRINGu{#aCOMMENT_START_STRINGu#}aCOMMENT_END_STRINGaLINE_STATEMENT_PREFIXaOptionalaLINE_COMMENT_PREFIXaTRIM_BLOCKSaLSTRIP_BLOCKSw
aNEWLINE_SEQUENCEute.Literal['\n', '\r\n', '\r']aKEEP_TRAILING_NEWLINEarangeadictalipsumacyclerajoineranamespaceaDEFAULT_NAMESPACEDucompiler.ascii_struurlize.reluurlize.targetuurlize.extra_schemesutruncate.leewayujson.dumps_functionujson.dumps_kwargsuext.i18n.trimmedtanoopenernnlnDasort_keystFaDEFAULT_POLICIESaDictaAnyujinja2\defaults.pyu<module jinja2.defaults>u.jinja2.environmentashareduReturn a new spontaneous environment. A spontaneous environment
    is used for templates created directly rather than through an
    existing environment.

    :param cls: Environment class to create.
    :param args: Positional arguments passed to environment.
    laLRUCacheuReturn the cache class for the given size.acapacityuCreate an empty copy of the given cache.acastaTypeaExtensionaimport_stringaenvironmentaresultaidentifieruLoad the extensions from the list and bind it to the environment.
    Returns a dict of instantiated extensions.
    aundefinedaUndefinedTu'undefined' must be a subclass of 'jinja2.Undefined'.avariable_start_stringablock_start_stringacomment_start_stringTublock, variable and comment start strings must be different.anewline_sequencePu
w
w
Tu'newline_sequence' must be one of '\n', '\r\n', or '\r'.uPerform a sanity check on the environment.ablock_end_stringavariable_end_stringacomment_end_stringaline_statement_prefixaline_comment_prefixatrim_blocksalstrip_blocksakeep_trailing_newlineaoptimizedafinalizeaautoescapeaDEFAULT_FILTERSacopyafiltersaDEFAULT_TESTSatestsaDEFAULT_NAMESPACEaglobalsaloaderacreate_cacheacacheabytecode_cacheaauto_reloadaDEFAULT_POLICIESapoliciesaload_extensionsaextensionsais_asynca_environment_config_checkaupdateuAdds an extension after the environment was created.

        .. versionadded:: 2.5
        utoo many values to unpack (expected 2)uAdd the items to the instance of the environment if they do not exist
        yet.  This is used by :ref:`extensions <writing-extensions>` to register
        callbacks and configuration values without breaking inheritance.
        aselfacache_sizeaenable_asynca__new__aoverlayedalinked_toamissingacopy_cacheaitemsabindarvuCreate a new overlay environment that shares all the data with the
        current environment except for cache and the overridden attributes.
        Extensions cannot be removed for an overlayed environment.  An overlayed
        environment automatically gets all the extensions of the environment it
        is linked to plus optional extra extensions.

        Creating overlays should happen after the initial environment was set
        up completely.  Not all attributes are truly linked, some are just
        copied over so modifications on the original environment may not shine
        through.

        .. versionchanged:: 3.1.2
            Added the ``newline_sequence``,, ``keep_trailing_newline``,
            and ``enable_async`` parameters to match ``__init__``.
        aget_lexeruThe lexer for this environment.asortedavaluesu<lambda>uEnvironment.iter_extensions.<locals>.<lambda>TakeyuIterates over the extensions by priority.apriorityTEAttributeErrorETypeErrorELookupErroraattrTaobjanameuGet an item or attribute of an object but prefer the item.TETypeErrorELookupErrorEAttributeErroruGet an item or attribute of an object but prefer the attribute.
        Unlike :meth:`getitem` the attribute *must* be a string.
        afilteratestagetuNo u named uw.a_fail_with_undefined_erroru (u; did you forget to quote the callable name?)aTemplateRuntimeErrora_PassArgafrom_objacontextuAttempted to invoke a context u without context.ainsertaeval_contextaeval_ctxaEvalContextaargsa_filter_test_commonuInvoke a filter on a value the same way the compiler does.

        This might return a coroutine if the filter is running from an
        environment in async mode and the filter supports async
        execution. It's your responsibility to await this if needed.

        .. versionadded:: 2.7
        uInvoke a test on a value the same way the compiler does.

        This might return a coroutine if the test is running from an
        environment in async mode and the test supports async execution.
        It's your responsibility to await this if needed.

        .. versionchanged:: 3.0
            Tests support ``@pass_context``, etc. decorators. Added
            the ``context`` and ``eval_ctx`` parameters.

        .. versionadded:: 2.7
        a_parseaTemplateSyntaxErrorahandle_exceptionTasourceuParse the sourcecode and return the abstract syntax tree.  This
        tree of nodes is used by the compiler to convert the template into
        executable source- or bytecode.  This is useful for debugging or to
        extract information from templates.

        If you are :ref:`developing Jinja extensions <writing-extensions>`
        this gives you a good overview of the node tree generated.
        aParseraparseuInternal parsing function used by `parse` and `compile`.alexeratokeniteruLex the given sourcecode and return a generator that yields
        tokens as tuples in the form ``(lineno, token_type, value)``.
        This can be useful for :ref:`extension development <writing-extensions>`
        and debugging templates.

        This does not perform preprocessing.  If you want the preprocessing
        of the extensions to be applied you have to filter source through
        the :meth:`preprocess` method.
        areduceuEnvironment.preprocess.<locals>.<lambda>aiter_extensionsuPreprocesses the source with all extensions.  This is automatically
        called for all parsing and compiling methods but *not* for :meth:`lex`
        because there you usually only want the actual source tokenized.
        apreprocessanameafilenameatokenizeafilter_streamastreamaTokenStreamuCalled by the parser to do the preprocessing and filtering
        for all the extensions.  Returns a :class:`~jinja2.lexer.TokenStream`.
        agenerateTadefer_initaoptimizeduInternal hook that can be overridden to hook a different generate
        method in.

        .. versionadded:: 2.5
        aexecuInternal hook that can be overridden to hook a different compile
        method in.

        .. versionadded:: 2.5
        a_generateTadefer_initu<template>a_compileuCompile a node or template source code.  The `name` parameter is
        the load name of the template after it was joined using
        :meth:`join_path` if necessary, not the filename on the file system.
        the `filename` parameter is the estimated filename of the template on
        the file system.  If the template came from a database or memory this
        can be omitted.

        The return value of this method is a python code object.  If the `raw`
        parameter is `True` the return value will be a string with python
        code equivalent to the bytecode returned otherwise.  This method is
        mainly used internally.

        `defer_init` is use internally to aid the module code generator.  This
        causes the generated code to be able to import without the global
        environment variable to be set.

        .. versionadded:: 2.4
           `defer_init` parameter added.
        Dastateavariableaparse_expressionaeosuchunk after expressionacurrentalinenoaset_environmentanodesaAssignaNameTaresultastoreaexprDalinenolafrom_stringaTemplateaTemplateExpressionuA handy helper method that returns a callable that accepts keyword
        arguments that appear as variables in the expression.  If called it
        returns the result of the expression.

        This is useful if applications want to use the same rules as Jinja
        in template "configuration files" or similar situations.

        Example usage:

        >>> env = Environment()
        >>> expr = env.compile_expression('foo == 42')
        >>> expr(foo=23)
        False
        >>> expr(foo=42)
        True

        Per default the return value is converted to `None` if the
        expression returns an undefined value.  This can be changed
        by setting `undefined_to_none` to `False`.

        >>> env.compile_expression('var')() is None
        True
        >>> env.compile_expression('var', undefined_to_none=False)()
        Undefined

        .. versionadded:: 2.1
        aloadersTaModuleLoaderlaModuleLoaderDwxareturnOstrnalog_functionuEnvironment.compile_templates.<locals>.log_functionTuNo loader configured.DafilenameadataareturnOstrpnawrite_fileuEnvironment.compile_templates.<locals>.write_fileazipfileTaZIP_DEFLATEDaZIP_DEFLATEDTaZIP_STOREDaZIP_STOREDTaZipFileaZipFileTaZipInfoaZipInfowwadeflatedastoreduCompiling into Zip archive amakedirsuCompiling into folder alist_templatesaget_sourceutoo many values to unpack (expected 3)acompileuCould not compile "u": aget_module_filenameuCompiled "u" as azip_fileacloseTuFinished compiling templatesuFinds all the templates the loader can find, compiles them
        and stores them in `target`.  If `zip` is `None`, instead of in a
        zipfile, the templates will be stored in a directory.
        By default a deflate zip algorithm is used. To switch to
        the stored algorithm, `zip` can be set to ``'stored'``.

        `extensions` and `filter_func` are passed to :meth:`list_templates`.
        Each template returned will be compiled to the target folder or
        zipfile.

        By default template compilation errors are ignored.  In case a
        log function is provided, errors are logged.  If you want template
        syntax errors to abort the compilation you can set `ignore_errors`
        to `False` and you will get an exception on syntax errors.

        .. versionadded:: 2.4
        aziplaexternal_attrawritestrajoinatargetawba__enter__a__exit__awriteaencodeTautf8Tnnnueither extensions or filter_func can be passed, but not bothDwxareturnOstrOboolafilter_funcuEnvironment.list_templates.<locals>.filter_funcuReturns a list of templates for this environment.  This requires
        that the loader supports the loader's
        :meth:`~BaseLoader.list_templates` method.

        If there are other files in the template folder besides the
        actual templates, the returned list can be filtered.  There are two
        ways: either `extensions` is set to a list of file extensions for
        templates, or a `filter_func` can be provided which is a callable that
        is passed a template name and should return `True` if it should end up
        in the result list.

        If the loader does not support that, a :exc:`TypeError` is raised.

        .. versionadded:: 2.4
        arsplitTw.ladebugTarewrite_traceback_stackarewrite_traceback_stackuException handling helper.  This is used internally to either raise
        rewritten exceptions or return a rendered traceback for the template.
        uJoin a template with the parent.  By default all the lookups are
        relative to the loader root so this method returns the `template`
        parameter unchanged, but if the paths should be relative to the
        parent template, this function can be used to calculate the real
        template name.

        Subclasses may override this method and implement template path
        joining here.
        uno loader for this environment specifiedaweakrefarefais_up_to_datealoadamake_globalsajoin_patha_load_templateuLoad a template by name with :attr:`loader` and return a
        :class:`Template`. If the template does not exist a
        :exc:`TemplateNotFound` exception is raised.

        :param name: Name of the template to load. When loading
            templates from the filesystem, "/" is used as the path
            separator, even on Windows.
        :param parent: The name of the parent template importing this
            template. :meth:`join_path` can be used to implement name
            transformations with this.
        :param globals: Extend the environment :attr:`globals` with
            these extra variables available for all renders of this
            template. If the template has already been loaded and
            cached, its globals are updated with any new items.

        .. versionchanged:: 3.0
            If a template is loaded from cache, ``globals`` will update
            the template's globals instead of ignoring the new values.

        .. versionchanged:: 2.4
            If ``name`` is a :class:`Template` object it is returned
            unchanged.
        aTemplatesNotFoundTuTried to select from an empty list of templates.TamessageaparentaTemplateNotFoundaUndefinedErroruLike :meth:`get_template`, but tries loading multiple names.
        If none of the names can be loaded a :exc:`TemplatesNotFound`
        exception is raised.

        :param names: List of template names to try loading in order.
        :param parent: The name of the parent template importing this
            template. :meth:`join_path` can be used to implement name
            transformations with this.
        :param globals: Extend the environment :attr:`globals` with
            these extra variables available for all renders of this
            template. If the template has already been loaded and
            cached, its globals are updated with any new items.

        .. versionchanged:: 3.0
            If a template is loaded from cache, ``globals`` will update
            the template's globals instead of ignoring the new values.

        .. versionchanged:: 2.11
            If ``names`` is :class:`Undefined`, an :exc:`UndefinedError`
            is raised instead. If no templates were found and ``names``
            contains :class:`Undefined`, the message is more helpful.

        .. versionchanged:: 2.4
            If ``names`` contains a :class:`Template` object it is
            returned unchanged.

        .. versionadded:: 2.3
        aget_templateaselect_templateuUse :meth:`select_template` if an iterable of template names
        is given, or :meth:`get_template` if one name is given.

        .. versionadded:: 2.3
        atemplate_classafrom_codeuLoad a template from a source string without using
        :attr:`loader`.

        :param source: Jinja source to compile into a template.
        :param globals: Extend the environment :attr:`globals` with
            these extra variables available for all renders of this
            template. If the template has already been loaded and
            cached, its globals are updated with any new items.
        :param template_class: Return an instance of this
            :class:`Template` class.
        aChainMapuMake the globals map for a template. Any given template
        globals overlay the environment :attr:`globals`.

        Returns a :class:`collections.ChainMap`. This allows any changes
        to a template's globals to only affect that template, while
        changes to the environment's globals are still reflected.
        However, avoid modifying any globals after a template is loaded.

        :param d: Dict of template-specific globals.

        .. versionchanged:: 3.0
            Use :class:`collections.ChainMap` to always prevent mutating
            environment globals.
        aget_spontaneous_environmentaenvironment_classTatemplate_classa__file__aco_filenameaclsacodeauptodateanamespaceu<string>a_from_namespacea_uptodateuCreates a template object from compiled code and the globals.  This
        is used by the loaders and environment to create a template object.
        uCreates a template object from a module.  This is used by the
        module loader to create a template object.

        .. versionadded:: 2.4
        ablocksarootaroot_render_funca_moduleadebug_infoa_debug_infoa__jinja_template__aasyncioaget_running_loopanew_event_looparun_until_completearender_asyncanew_contextaconcatuThis method accepts the same arguments as the `dict` constructor:
        A dict, a dict subclass or some keyword arguments.  If no arguments
        are given the context will be empty.  These two calls do the same::

            template.render(knights='that say nih')
            template.render({'knights': 'that say nih'})

        This will return the rendered template as a string.
        uThis works similar to :meth:`render` but returns a coroutine
        that when awaited returns the entire rendered template string.  This
        requires the async feature to be enabled.

        Example usage::

            await template.render_async(knights='that say nih; asynchronously')
        uThe environment was not created with async mode enabled.akwargsuTemplate.render_asyncaTemplateStreamuWorks exactly like :meth:`generate` but returns a
        :class:`TemplateStream`.
        uFor very large templates it can be useful to not render the whole
        template at once but evaluate each statement after another and yield
        piece for piece.  This method basically does exactly that and returns
        a generator that yields one item after another as strings.

        It accepts the same arguments as :meth:`render`.
        areturnaListato_listuTemplate.generate.<locals>.to_listarunuTemplate.generateagenerate_asyncuAn async version of :meth:`generate`.  Works very similarly but
        returns an async iterator instead.
        uTemplate.generate_asyncuCreate a new :class:`Context` for this template.  The vars
        provided will be passed to the template.  Per default the globals
        are added to the context.  If shared is set to `True` the data
        is passed as is to the context without adding the globals.

        `locals` can be a dict of local variables for internal usage.
        aTemplateModuleuThis method works like the :attr:`module` attribute when called
        without arguments but it will evaluate the template on every call
        rather than caching it.  It's also possible to provide
        a dict which is then used as context.  The arguments are the same
        as for the :meth:`new_context` method.
        uAs template module creation can invoke template code for
        asynchronous executions this method must be used instead of the
        normal :meth:`make_module` one.  Likewise the module attribute
        becomes unavailable in async mode.
        avarsalocalsamake_module_asyncuTemplate.make_module_asyncuModule is not available in async mode.aglobals_keysakeysamake_moduleactxuIf a context is passed in, this means that the template was
        imported. Imported templates have access to the current
        template's globals by default, but they can only be accessed via
        the context during runtime.

        If there are new globals, we need to create a new module because
        the cached module is already rendered and will not have access
        to globals from the current context. This new module is not
        cached because the template can be imported elsewhere, and it
        should have access to only the current template's globals.
        a_get_default_module_asyncuTemplate._get_default_module_asynca_get_default_moduleuThe template as module.  This is used for imports in the
        template runtime but is also useful if one wants to access
        exported template variables from the Python layer:

        >>> t = Template('{% macro foo() %}42{% endmacro %}23')
        >>> str(t.module)
        '23'
        >>> t.module.foo() == u'42'
        True

        This attribute is not available if async mode is enabled.
        uReturn the source line number of a line number in the
        generated bytecode as they are not in sync.
        uIf this variable is `False` there is a newer version available.asplitTw&Tw=uThe debug info mapping.umemory:wxw<a__name__w w>uAsync mode requires a body stream to be passed to a template module. Use the async methods of the API you are using.a_body_streamaget_exportedaMarkupa_templatea_undefined_to_noneaconsumea_genadisable_bufferinguutf-8awritelinesareal_fpuDump the complete stream into a file or file-like object.
        Per default strings are written, if you want to encode
        before writing specify an `encoding`.

        Example usage::

            Template('Hello {{ name }}!').stream(name='foo').dump('hello.html')
        aencodingaerrorsu<genexpr>uTemplateStream.dump.<locals>.<genexpr>apartialanexta_nextabuffereduDisable the output buffering.aappendac_sizeasizeapushabuf:nnna_buffered_generatoruTemplateStream._buffered_generatorubuffer size too smalluEnable buffering.  Buffer `size` items before yielding them.uClasses for managing templates and their runtime and compile time
options.
a__doc__a__spec__aoriginahas_locationa__cached__aosatypingwtacollectionsTaChainMapalru_cacheaCodeTypeamarkupsafeTaMarkupTanodesacompilerTaCodeGeneratoraCodeGeneratorTagenerateadefaultsTaBLOCK_END_STRINGaBLOCK_END_STRINGTaBLOCK_START_STRINGaBLOCK_START_STRINGTaCOMMENT_END_STRINGaCOMMENT_END_STRINGTaCOMMENT_START_STRINGaCOMMENT_START_STRINGTaDEFAULT_FILTERSTaDEFAULT_NAMESPACETaDEFAULT_POLICIESTaDEFAULT_TESTSTaKEEP_TRAILING_NEWLINEaKEEP_TRAILING_NEWLINETaLINE_COMMENT_PREFIXaLINE_COMMENT_PREFIXTaLINE_STATEMENT_PREFIXaLINE_STATEMENT_PREFIXTaLSTRIP_BLOCKSaLSTRIP_BLOCKSTaNEWLINE_SEQUENCEaNEWLINE_SEQUENCETaTRIM_BLOCKSaTRIM_BLOCKSTaVARIABLE_END_STRINGaVARIABLE_END_STRINGTaVARIABLE_START_STRINGaVARIABLE_START_STRINGaexceptionsTaTemplateNotFoundTaTemplateRuntimeErrorTaTemplatesNotFoundTaTemplateSyntaxErrorTaUndefinedErrorTaget_lexerTaLexeraLexerTaTokenStreamTaEvalContextaparserTaParseraruntimeTaContextaContextTanew_contextTaUndefinedautilsTa_PassArgTaconcatTaconsumeTaimport_stringTainternalcodeainternalcodeTaLRUCacheTamissingaTypeVarTa_env_boundaEnvironmentTabounda_env_boundTl
TamaxsizeaAnyaOptionalaMutableMappingaTupleTuweakref.ref[t.Any]OstraEnvironmentaSequenceaUnionaDictTOstraExtensionDaenvironmentareturnaEnvironmentaEnvironmentujinja2.environmenta__module__uThe core component of Jinja is the `Environment`.  It contains
    important shared variables like configuration, filters, tests,
    globals and others.  Instances of this class may be modified if
    they are not shared and if no template was loaded so far.
    Modifications on environments after the first template was loaded
    will lead to surprising effects and undefined behavior.

    Here are the possible initialization parameters:

        `block_start_string`
            The string marking the beginning of a block.  Defaults to ``'{%'``.

        `block_end_string`
            The string marking the end of a block.  Defaults to ``'%}'``.

        `variable_start_string`
            The string marking the beginning of a print statement.
            Defaults to ``'{{'``.

        `variable_end_string`
            The string marking the end of a print statement.  Defaults to
            ``'}}'``.

        `comment_start_string`
            The string marking the beginning of a comment.  Defaults to ``'{#'``.

        `comment_end_string`
            The string marking the end of a comment.  Defaults to ``'#}'``.

        `line_statement_prefix`
            If given and a string, this will be used as prefix for line based
            statements.  See also :ref:`line-statements`.

        `line_comment_prefix`
            If given and a string, this will be used as prefix for line based
            comments.  See also :ref:`line-statements`.

            .. versionadded:: 2.2

        `trim_blocks`
            If this is set to ``True`` the first newline after a block is
            removed (block, not variable tag!).  Defaults to `False`.

        `lstrip_blocks`
            If this is set to ``True`` leading spaces and tabs are stripped
            from the start of a line to a block.  Defaults to `False`.

        `newline_sequence`
            The sequence that starts a newline.  Must be one of ``'\r'``,
            ``'\n'`` or ``'\r\n'``.  The default is ``'\n'`` which is a
            useful default for Linux and OS X systems as well as web
            applications.

        `keep_trailing_newline`
            Preserve the trailing newline when rendering templates.
            The default is ``False``, which causes a single newline,
            if present, to be stripped from the end of the template.

            .. versionadded:: 2.7

        `extensions`
            List of Jinja extensions to use.  This can either be import paths
            as strings or extension classes.  For more information have a
            look at :ref:`the extensions documentation <jinja-extensions>`.

        `optimized`
            should the optimizer be enabled?  Default is ``True``.

        `undefined`
            :class:`Undefined` or a subclass of it that is used to represent
            undefined values in the template.

        `finalize`
            A callable that can be used to process the result of a variable
            expression before it is output.  For example one can convert
            ``None`` implicitly into an empty string here.

        `autoescape`
            If set to ``True`` the XML/HTML autoescaping feature is enabled by
            default.  For more details about autoescaping see
            :class:`~markupsafe.Markup`.  As of Jinja 2.4 this can also
            be a callable that is passed the template name and has to
            return ``True`` or ``False`` depending on autoescape should be
            enabled by default.

            .. versionchanged:: 2.4
               `autoescape` can now be a function

        `loader`
            The template loader for this environment.

        `cache_size`
            The size of the cache.  Per default this is ``400`` which means
            that if more than 400 templates are loaded the loader will clean
            out the least recently used template.  If the cache size is set to
            ``0`` templates are recompiled all the time, if the cache size is
            ``-1`` the cache will not be cleaned.

            .. versionchanged:: 2.8
               The cache size was increased to 400 from a low 50.

        `auto_reload`
            Some loaders load templates from locations where the template
            sources may change (ie: file system or database).  If
            ``auto_reload`` is set to ``True`` (default) every time a template is
            requested the loader checks if the source changed and if yes, it
            will reload the template.  For higher performance it's possible to
            disable that.

        `bytecode_cache`
            If set to a bytecode cache object, this object will provide a
            cache for the internal Jinja bytecode so that templates don't
            have to be parsed if they were not changed.

            See :ref:`bytecode-cache` for more information.

        `enable_async`
            If set to true this enables async template execution which
            allows using async functions and generators.
    a__qualname__a__annotations__asandboxedacode_generator_classacontext_classlute.Literal['\n', '\r\n', '\r']aCallableaBaseLoaderaBytecodeCachea__init__uEnvironment.__init__aextensionaadd_extensionuEnvironment.add_extensionaattributesaextenduEnvironment.extendaoverlayuEnvironment.overlayuEnvironment.lexeraIteratoruEnvironment.iter_extensionsaobjaargumentagetitemuEnvironment.getitemaattributeagetattruEnvironment.getattravalueaMappingais_filteruEnvironment._filter_test_commonTnnnnacall_filteruEnvironment.call_filteracall_testuEnvironment.call_testTnnasourceuEnvironment.parseuEnvironment._parseTOintOstrpalexuEnvironment.lexuEnvironment.preprocessastatea_tokenizeuEnvironment._tokenizeTFadefer_inituEnvironment._generateuEnvironment._compileaoverloadTnnFparawute.Literal[False]uEnvironment.compileTnnQFute.Literal[True]TtDasourceaundefined_to_noneareturnOstrOboolaTemplateExpressionacompile_expressionuEnvironment.compile_expressionTnnadeflatedntTOstruos.PathLike[str]aCollectionTLOstrOboolTLOstrnaignore_errorsacompile_templatesuEnvironment.compile_templatesuEnvironment.list_templatesTnute.NoReturnuEnvironment.handle_exceptionDatemplateaparentareturnOstrppuEnvironment.join_pathuEnvironment._load_templateTOstraTemplateuEnvironment.get_templateanamesaIterableuEnvironment.select_templateatemplate_name_or_listaget_or_select_templateuEnvironment.get_or_select_templateuEnvironment.from_stringwduEnvironment.make_globalsuA compiled template that can be rendered.

    Use the methods on :class:`Environment` to create or load templates.
    The environment is used to configure how templates are compiled and
    behave.

    It is also possible to create a template object directly. This is
    not usually recommended. The constructor takes most of the same
    arguments as :class:`Environment`. All templates created with the
    same environment arguments share the same ephemeral ``Environment``
    instance behind the scenes.

    A template object should be considered immutable. Modifications on
    the object are not supported.
    TLObooluTemplate.__new__uTemplate.from_codeamodule_dictafrom_module_dictuTemplate.from_module_dictuTemplate._from_namespacearenderuTemplate.renderuTemplate.streamaAsyncIteratorTnFnuTemplate.new_contextuTemplate.make_moduleuTemplate._get_default_moduleDareturnaTemplateModuleamoduleuTemplate.moduleDalinenoareturnOintpaget_corresponding_linenouTemplate.get_corresponding_linenoDareturnObooluTemplate.is_up_to_dateTOintpuTemplate.debug_infoDareturnOstra__repr__uTemplate.__repr__uRepresents an imported template.  All the exported names of the
    template are available as attributes on this object.  Additionally
    converting it into a string renders the contents.
    atemplateabody_streamuTemplateModule.__init__a__html__uTemplateModule.__html__a__str__uTemplateModule.__str__uTemplateModule.__repr__uThe :meth:`jinja2.Environment.compile_expression` method returns an
    instance of this object.  It encapsulates the expression-like access
    to the template with an expression it wraps.
    aundefined_to_noneuTemplateExpression.__init__a__call__uTemplateExpression.__call__uA template stream works pretty much like an ordinary python generator
    but it can buffer multiple items to reduce the number of total iterations.
    Per default the output is unbuffered which means that for every unbuffered
    instruction in the template one string is yielded.

    If buffering is enabled with a buffer size of 5, five items are combined
    into a new string.  This is mainly useful if you are streaming
    big templates to a client via WSGI which flushes after each iteration.
    agenuTemplateStream.__init__TnastrictafpaIOadumpuTemplateStream.dumpDareturnnuTemplateStream.disable_bufferingTlDasizeareturnOintnaenable_bufferinguTemplateStream.enable_bufferingDareturnaTemplateStreama__iter__uTemplateStream.__iter__a__next__uTemplateStream.__next__ujinja2\environment.pyTa.0wxaencodingaerrorsTwxTwsweanameafilenameTafilenameanameu<module jinja2.environment>Ta__class__TaselfaargsakwargsacontextarvTaselfTaselfablock_start_stringablock_end_stringavariable_start_stringavariable_end_stringacomment_start_stringacomment_end_stringaline_statement_prefixaline_comment_prefixatrim_blocksalstrip_blocksanewline_sequenceakeep_trailing_newlineaextensionsaoptimizedaundefinedafinalizeaautoescapealoaderacache_sizeaauto_reloadabytecode_cacheaenable_asyncTaselfatemplateaundefined_to_noneTaselfatemplateacontextabody_streamTaselfagenTaclsasourceablock_start_stringablock_end_stringavariable_start_stringavariable_end_stringacomment_start_stringacomment_end_stringaline_statement_prefixaline_comment_prefixatrim_blocksalstrip_blocksanewline_sequenceakeep_trailing_newlineaextensionsaoptimizedaundefinedafinalizeaautoescapeaenable_asyncaenvTaselfanameTaselfasizeabufac_sizeapushwcTaselfasourceafilenameTaenvironmentTaselfanameavalueaargsakwargsacontextaeval_ctxais_filteraenv_mapatype_nameafuncamsgweapass_argTaclsaenvironmentanamespaceaglobalswtTaselfasourceanameafilenameadefer_initTaselfactxakeysTaselfanameaglobalsacache_keyatemplateTaselfasourceanameafilenameTaselfasourceanameafilenameastateastreamaextTaselfaextensionTaselfanameavalueaargsakwargsacontextaeval_ctxTaselfasourceanameafilenamearawadefer_initTaselfasourceanameafilenamearawadefer_initasource_hintTaselfasourceaundefined_to_noneaparseraexprabodyatemplateTaselfatargetaextensionsafilter_funcazipalog_functionaignore_errorsaModuleLoaderawrite_fileaZIP_DEFLATEDaZIP_STOREDaZipFileaZipInfoazip_fileanameasourceafilenamew_acodeweTacacheTasizeTaselfafpaencodingaerrorsareal_fpacloseaiterableaitemTaselfasizeTaselfaattributesakeyavalueTwxaextensionsTaextensionsTaclsaenvironmentacodeaglobalsauptodateanamespacearvTaclsaenvironmentamodule_dictaglobalsTaselfasourceaglobalsatemplate_classagsaclsTaselfaargsakwargsaasyncioato_listactxTaselfaargsakwargsactxaeventTaselfalinenoatemplate_lineacode_lineTaselfatemplate_name_or_listaparentaglobalsTaclsaargsaenvTaselfanameaparentaglobalsTaselfaobjaattributeTaselfaobjaargumentaattrTaselfasourcearewrite_traceback_stackTaselfatemplateaparentTaselfaextensionsafilter_funcanamesTaenvironmentaextensionsaresultaextensionTaselfwdTaselfavarsasharedalocalsactxTaselfavarsasharedalocalsTaselfablock_start_stringablock_end_stringavariable_start_stringavariable_end_stringacomment_start_stringacomment_end_stringaline_statement_prefixaline_comment_prefixatrim_blocksalstrip_blocksanewline_sequenceakeep_trailing_newlineaextensionsaoptimizedaundefinedafinalizeaautoescapealoaderacache_sizeaauto_reloadabytecode_cacheaenable_asyncaargsarvakeyavalueTaselfaargsakwargsaasyncioaclosealoopactxTaselfaargsakwargsactxTaselfanamesaparentaglobalsanameTaselfaargsakwargsTaargsakwargsaselfTafilenameadataainfowfazipaZipInfoazip_fileatargetTaZipInfoatargetazipazip_file.jinja2.exceptionsZ
ba__class__a__init__aargslaruntimeTaUndefinedlaUndefineda_fail_with_undefined_erroramessageanameatemplatesapartsa_undefined_messageu, unone of the templates given were found: uqalinenoafilenameasourceatranslatedacastuline uFile "u", u  asplitlinesu    alineastripw
a__doc__a__file__a__spec__aoriginahas_locationa__cached__wtTEExceptiona__prepare__aTemplateErrora__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ujinja2.exceptionsa__module__uBaseclass for all template errors.a__qualname__TnaOptionalastrareturnuTemplateError.__init__apropertyuTemplateError.messagea__orig_bases__aTemplateNotFounduRaised if a template does not exist.

    .. versionchanged:: 2.11
        If the given name is :class:`Undefined` and no message was
        provided, an :exc:`UndefinedError` is raised.
    a__annotations__aUnionuTemplateNotFound.__init__a__str__uTemplateNotFound.__str__aTemplatesNotFounduLike :class:`TemplateNotFound` but raised if multiple templates
    are selected.  This is a subclass of :class:`TemplateNotFound`
    exception, so just catching the base exception will catch both.

    .. versionchanged:: 2.11
        If a name in the list of names is :class:`Undefined`, a message
        about it being undefined is shown rather than the empty string.

    .. versionadded:: 2.2
    TTnanamesaSequenceuTemplatesNotFound.__init__aTemplateSyntaxErroruRaised to tell the user that there is a problem with the template.TnnaintuTemplateSyntaxError.__init__uTemplateSyntaxError.__str__a__reduce__uTemplateSyntaxError.__reduce__aTemplateAssertionErroruLike a template syntax error, but covers cases where something in the
    template caused an error at compile time that wasn't necessarily caused
    by a syntax error.  However it's a direct subclass of
    :exc:`TemplateSyntaxError` and has the same attributes.
    aTemplateRuntimeErroruA generic runtime error in the template engine.  Under some situations
    Jinja may raise this exception.
    aUndefinedErroruRaised if a template tries to operate on :class:`Undefined`.aSecurityErroruRaised if a template tries to do something insecure if the
    sandbox is enabled.
    aFilterArgumentErroruThis error is raised if a filter was called with inappropriate
    arguments
    ujinja2\exceptions.pyu<module jinja2.exceptions>Ta__class__Taselfamessagea__class__TaselfanameamessageaUndefinedTaselfamessagealinenoanameafilenamea__class__TaselfanamesamessageaUndefinedapartsanameaparts_stra__class__TaselfTaselfalocationanamealinesaline.jinja2.ext7a__module__uw.a__name__aidentifieraenvironmenta__new__aupdateuCreate a copy of this extension bound to another environment.uThis method is called before the actual lexing and can be used to
        preprocess the source.  The `filename` is optional.  The return value
        must be the preprocessed source.
        uIt's passed a :class:`~jinja2.lexer.TokenStream` that can be used
        to filter tokens returned.  This method has to return an iterable of
        :class:`~jinja2.lexer.Token`\s, but it doesn't have to return a
        :class:`~jinja2.lexer.TokenStream`.
        uIf any of the :attr:`tags` matched this method is called with the
        parser as first argument.  The token the parser stream is pointing at
        is the name token that matched.  This method has to return one or a
        list of multiple nodes.
        anodesaExtensionAttributeTalinenouReturn an attribute node for the current extension.  This is useful
        to pass constants on extensions to generated template code.

        ::

            self.attr('_my_attribute', lineno=lineno)
        aCallaattruCall a method of the extension.  This is a shortcut for
        :meth:`attr` + :class:`jinja2.nodes.Call`.
        acallaresolveTagettextapass_contexta__contextaContexta__stringavariablesaAnyareturnagettextu_make_new_gettext.<locals>.gettextafuncaeval_ctxaautoescapeaMarkupa__singulara__plurala__numangettextu_make_new_ngettext.<locals>.ngettextanuma__string_ctxapgettextu_make_new_pgettext.<locals>.pgettextacontextanpgettextu_make_new_npgettext.<locals>.npgettextasetdefaulta__class__a__init__a_gettext_aliasaglobalsw_aextenda_installa_install_nulla_install_callablesa_uninstalla_extractTainstall_gettext_translationsainstall_null_translationsainstall_gettext_callablesauninstall_gettext_translationsaextract_translationsanewstyle_gettextaugettextaungettextTanewstyleapgettextanpgettextlaNullTranslationsDwcwsareturnOstrppuInternationalizationExtension._install_null.<locals>.pgettextDwcwswpwnareturnOstrppOintOstruInternationalizationExtension._install_null.<locals>.npgettextTagettextangettextanewstyleapgettextanpgettextlanewstyle_gettexta_make_new_gettexta_make_new_ngettexta_make_new_pgettexta_make_new_npgettextTagettextangettextapgettextanpgettextaselfapopaparseaextract_from_astastreamalinenoanext_ifTastringavalueaparseracurrentatypeablock_endaexpectTacommaaskip_ifTacolonTanameafailutranslatable variable u defined twice.aTemplateAssertionErrorTaexcaassignaparse_expressionatrimmedTatrimmedanotrimmedaNamealoadaplural_exprTa_transaloadaAssignTa_transastoreTablock_enda_parse_blockutoo many values to unpack (expected 2)atestTuname:pluralizeuunknown variable u for pluralizationupluralize without variablesapoliciesuext.i18n.trimmeda_trim_whitespacea_make_nodeanum_called_numaset_linenoaplural_expr_assignmentuParse a translatable tag.asubw astripadataabufareplaceTw%u%%avariable_beginareferencedu%(u)sTavariable_endablock_beginanameaendtransapluralizeTua translatable section can have only one pluralize sectionatransTutrans blocks can't be nested; did you mean `endtrans`?ucontrol structures in translatable sections are not allowed; saw `w`aeosTuunclosed translation blockuinternal parser erroraconcatuParse until the next block tag with a given name.Tu%%w%aConstwpwnaitemsanodeakwargsaappendaKeywordaMarkSafeIfAutoescapeaModaDictaPairaOutputuGenerates a useful node from the data provided.aExprStmtaparse_tupleabreakaBreakaContinueTuname:debugaContextReferenceacall_methoda_renderaget_allafiltersasortedakeysatestsapprintapformatDadepthacompactltuExtract localizable strings from the given template node.  Per
    default this function returns matches in babel style that means non string
    parameters as well as keyword arguments are returned as `None`.  This
    allows Babel to figure out what you really meant if you are using
    gettext functions that allow keyword arguments for placeholder expansion.
    If you don't want that behavior set the `babel_style` parameter to `False`
    which causes only strings to be returned and parameters are always stored
    in tuples.  As a consequence invalid gettext calls (calls without a single
    string parameter or string parameters after non-string parameters) are
    skipped.

    This example explains the behavior:

    >>> from jinja2 import Environment
    >>> env = Environment()
    >>> node = env.parse('{{ (_("foo"), _(), ngettext("foo", "bar", 42)) }}')
    >>> list(extract_from_ast(node))
    [(1, '_', 'foo'), (1, '_', ()), (1, 'ngettext', ('foo', 'bar', None))]
    >>> list(extract_from_ast(node, babel_style=False))
    [(1, '_', ('foo',)), (1, 'ngettext', ('foo', 'bar'))]

    For every string found this function yields a ``(lineno, function,
    message)`` tuple, where:

    * ``lineno`` is the number of the line on which the string was found,
    * ``function`` is the name of the ``gettext`` function used (if the
      string was extracted from embedded Python code), and
    *   ``message`` is the string, or a tuple of strings for functions
         with multiple string arguments.

    This extraction function operates on the AST and is because of that unable
    to extract any comments.  For comment support you have to use the babel
    extraction interface or extract comments yourself.
    aastafind_allagettext_functionsaargsastringsadyn_argsadyn_kwargsTnababel_styleu<genexpr>uextract_from_ast.<locals>.<genexpr>atokensacomment_tagsaoffsetalast_linenoutoo many values to unpack (expected 3)TacommentalinecommentasplitTnlarstripafind_backwardsuBabel extraction method for Jinja templates.

    .. versionchanged:: 2.3
       Basic support for translation comments was added.  If `comment_tags`
       is now set to a list of keywords for extraction, the extractor will
       try to find the best preceding comment that begins with one of the
       keywords.  For best results, make sure to not have more than one
       gettext call in one line of code and the matching comment in the
       same line or the line before.

    .. versionchanged:: 2.5.1
       The `newstyle_gettext` flag can be set to `True` to enable newstyle
       gettext calls.

    .. versionchanged:: 2.7
       A `silent` option can now be provided.  If set to `False` template
       syntax errors are propagated instead of being ignored.

    :param fileobj: the file-like object the messages should be extracted from
    :param keywords: a list of keywords (i.e. function names) that should be
                     recognized as translation functions
    :param comment_tags: a list of translator tags to search for and include
                         in the results.
    :param options: a dictionary of additional options (optional)
    :return: an iterator over ``(lineno, funcname, message, comments)`` tuples.
             (comments will be empty currently)
    aoptionsagetTaextensionsuTw,aextensionsaimport_stringaInternationalizationExtensionTFaMappingTOstrpakeyadefaultagetboolubabel_extract.<locals>.getboolasilentaEnvironmentablock_start_stringadefaultsaBLOCK_START_STRINGablock_end_stringaBLOCK_END_STRINGavariable_start_stringaVARIABLE_START_STRINGavariable_end_stringaVARIABLE_END_STRINGacomment_start_stringaCOMMENT_START_STRINGacomment_end_stringaCOMMENT_END_STRINGTaline_statement_prefixaLINE_STATEMENT_PREFIXTaline_comment_prefixaLINE_COMMENT_PREFIXatrim_blocksaTRIM_BLOCKSalstrip_blocksaLSTRIP_BLOCKSaNEWLINE_SEQUENCEakeep_trailing_newlineaKEEP_TRAILING_NEWLINEDacache_sizeaauto_reloadlFafileobjareadadecodeTaencodinguutf-8alexapreprocessaTemplateSyntaxErrora_CommentFinderakeywordsafinderafind_commentsababel_extractalowerPayesatruew1aonuExtension API for adding custom tags and behavior.a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__arewtamarkupsafeTaMarkupTadefaultsTanodesTaEnvironmentaexceptionsTaTemplateAssertionErrorTaTemplateSyntaxErroraruntimeTaconcatTaContextTaUndefinedaUndefinedautilsTaimport_stringTapass_contextTw_agettextangettextapgettextanpgettextaGETTEXT_FUNCTIONSaTupleTOstrQacompileTu\s*\n\s*a_ws_reujinja2.extuExtensions can be used to add extra functionality to the Jinja template
    system at the parser level.  Custom extensions are bound to an environment
    but may not store environment specific data on `self`.  The reason for
    this is that an extension can be bound to another environment (for
    overlays) by creating a copy and reassigning the `environment` attribute.

    As extensions are created by the environment they cannot accept any
    arguments for configuration.  One may want to work around that by using
    a factory function, but that is not possible as extensions are identified
    by their import name.  The correct way to configure the extension is
    storing the configuration values on the environment.  Because this way the
    environment ends up acting as central configuration storage the
    attributes may clash which is why extensions have to ensure that the names
    they choose for configuration are not too generic.  ``prefix`` for example
    is a terrible name, ``fragment_cache_prefix`` on the other hand is a good
    name as includes the name of the extension (fragment cache).
    aExtensiona__qualname__aClassVarDareturnna__init_subclass__uExtension.__init_subclass__atagsaSetldapriorityuExtension.__init__abinduExtension.bindasourceaOptionalafilenameuExtension.preprocessaTokenStreamaUnionaIterableaTokenafilter_streamuExtension.filter_streamaParseraNodeaListuExtension.parseuExtension.attrTnnnnnaExpruExtension.call_methodaCallableTLOstrOstrTQOstrTLOstrpOintOstrTLOstrpOstrTLOstrppOintOstra__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uThis extension adds gettext support to Jinja.SatransuInternationalizationExtension.__init__atranslationsa_SupportedTranslationsanewstyleabooluInternationalizationExtension._installuInternationalizationExtension._install_nullTnnnastraintuInternationalizationExtension._install_callablesDatranslationsareturna_SupportedTranslationsnuInternationalizationExtension._uninstallaTemplateaSequenceaIteratoruInternationalizationExtension._extractuInternationalizationExtension.parseastringaPatternuInternationalizationExtension._trim_whitespaceaallow_pluralizeuInternationalizationExtension._parse_blockasingularapluralavars_referenceduInternationalizationExtension._make_nodea__orig_bases__aExprStmtExtensionuAdds a `do` tag to Jinja that works like the print statement just
    that it doesn't print the return value.
    SadouExprStmtExtension.parseaLoopControlExtensionuAdds break and continue to the template engine.SacontinueabreakuLoopControlExtension.parseaDebugExtensionuA ``{% debug %}`` tag that dumps the available variables,
    filters, and tests.

    .. code-block:: html+jinja

        <pre>{% debug %}</pre>

    .. code-block:: text

        {'context': {'cycler': <class 'jinja2.utils.Cycler'>,
                     ...,
                     'namespace': <class 'jinja2.utils.Namespace'>},
         'filters': ['abs', 'attr', 'batch', 'capitalize', 'center', 'count', 'd',
                     ..., 'urlencode', 'urlize', 'wordcount', 'wordwrap', 'xmlattr'],
         'tests': ['!=', '<', '<=', '==', '>', '>=', 'callable', 'defined',
                   ..., 'odd', 'sameas', 'sequence', 'string', 'undefined', 'upper']}

    .. versionadded:: 2.11.0
    SadebuguDebugExtension.parseuDebugExtension._renderuHelper class to find comments in a token stream.  Can only
    find comments for gettext calls forwards.  Once the comment
    from line 4 is found, a comment for line 1 will not return a
    usable value.
    TOintOstrpu_CommentFinder.__init__u_CommentFinder.find_backwardsu_CommentFinder.find_commentsaBinaryIOai18nadoaloopcontrolsadebugujinja2\ext.pyTa.0wxu<module jinja2.ext>Ta__class__TaselfaenvironmentTaselfaenvironmenta__class__Taselfatokensacomment_tagsTaclsTaselfasourceagettext_functionsTa__contextaargsakwargsTaselfatranslationsanewstyleagettextangettextapgettextanpgettextTaselfagettextangettextanewstyleapgettextanpgettextTaselfanewstyleagettextatranslationsapgettextanpgettextTafuncagettextTafuncangettextTafuncanpgettextTafuncapgettextTaselfasingularapluralacontextavariablesaplural_expravars_referencedanum_called_numanodeafunc_argsanewstyleafunc_nameakeyavalueTaselfaparseraallow_pluralizeareferencedabufanameablock_nameTaselfacontextaresultTaselfastringa_ws_reTaselfatranslationsakeyTaselfanamealinenoTafileobjakeywordsacomment_tagsaoptionsaextensionsaextension_nameagetboolasilentaenvironmentasourceanodeatokensafinderalinenoafuncamessageTaselfaenvironmentarvTaselfanameaargsakwargsadyn_argsadyn_kwargsalinenoTaastagettext_functionsababel_styleaoutastringsanodeaargw_TaselfastreamTaselfaoffsetw_atoken_typeatoken_valueaprefixacommentTaselfalinenoaidxatoken_linenow_TaoptionsakeyadefaultTa__contexta__stringavariablesarvafuncTafuncTa__contexta__singulara__plurala__numavariablesarvafuncTwcwswpwnTa__contexta__string_ctxa__singulara__plurala__numavariablesarvafuncTaselfaparseralinenoacontextaresultTaselfaparseranodeTaselfaparserTaselfaparseraplural_expraplural_expr_assignmentavariablesalinenoacontextacontext_tokenanum_called_numatrimmedatokenavarapluralahave_pluralareferencedasingular_namesasingularaplural_namesanameanodeTaselfaparseratokenTwcwsTa__contexta__string_ctxa__stringavariablesarvafuncTaselfasourceanameafilename.jinja2.filtersYLacastwValoweruFor use as a postprocessor for :func:`make_attrgetter`. Converts strings
    to lowercase and returns other types as-is.a_prepare_attribute_partsaitemaAnyareturnaattrgetterumake_attrgetter.<locals>.attrgetteruReturns a callable that looks up the given attribute from a
    passed object with the rules of the environment.  Dots are allowed
    to access attributes of attributes.  Integer parts in paths are
    looked up as integers.
    apartsaenvironmentagetitemadefaultaUndefinedapostprocessasplitTw,aListumake_multi_attrgetter.<locals>.attrgetteruReturns a callable that looks up the given comma separated
    attributes from a passed object with the rules of the environment.
    Dots are allowed to access attributes of each attribute.  Integer
    parts in paths are looked up as integers.

    The value returned by the returned callable is a list of extracted
    attribute values.

    Examples of attribute: "attr1,attr2", "attr1.inner1.0,attr2.inner2.0", etc.
    utoo many values to unpack (expected 2)aitem_iaitemsTw.aisdigita__html__aHasHTMLaescapeuEnforce HTML escaping.  This will probably double escape variables.aabcaIterableaurl_quotew&uQuote data for use in a URL path or query using UTF-8.

    Basic wrapper around :func:`urllib.parse.quote` when given a
    string, or :func:`urllib.parse.urlencode` for a dict or iterable.

    :param value: Data to quote. A string will be quoted directly. A
        dict or iterable of ``(key, value)`` pairs will be joined as a
        query string.

    When given a string, "/" is not quoted. HTTP servers treat "/" and
    "%2F" equivalently in paths. If you need quoted slashes, use the
    ``|replace("/", "%2F")`` filter.

    .. versionadded:: 2.7
    Dafor_qstuw=u<genexpr>udo_urlencode.<locals>.<genexpr>qaautoescapeareplaceasoft_struReturn a copy of the value with all occurrences of a substring
    replaced with a new one. The first argument is the substring
    that should be replaced, the second is the replacement string.
    If the optional third argument ``count`` is given, only the first
    ``count`` occurrences are replaced:

    .. sourcecode:: jinja

        {{ "Hello World"|replace("Hello", "Goodbye") }}
            -> Goodbye World

        {{ "aaaaargh"|replace("a", "d'oh, ", 2) }}
            -> d'oh, d'oh, aaargh
    aupperuConvert a value to uppercase.uConvert a value to lowercase.uReturn an iterator over the ``(key, value)`` items of a mapping.

    ``x|items`` is the same as ``x.items()``, except if ``x`` is
    undefined an empty iterator is returned.

    This filter is useful if you expect the template to be rendered with
    an implementation of Jinja in another programming language that does
    not have a ``.items()`` method on its mapping type.

    .. code-block:: html+jinja

        <dl>
        {% for key, value in my_dict|items %}
            <dt>{{ key }}
            <dd>{{ value }}
        {% endfor %}
        </dl>

    .. versionadded:: 3.1
    avalueaMappinguCan only get item pairs from a mapping.ado_itemsa_attr_key_reasearchuInvalid character in attribute name: u="w"w aMarkupuCreate an SGML/XML attribute string based on the items in a dict.

    **Values** that are neither ``none`` nor ``undefined`` are automatically
    escaped, safely allowing untrusted user input.

    User input should not be used as **keys** to this filter. If any key
    contains a space, ``/`` solidus, ``>`` greater-than sign, or ``=`` equals
    sign, this fails with a ``ValueError``. Regardless of this, user input
    should never be used as keys to this filter, or must be separately validated
    first.

    .. sourcecode:: html+jinja

        <ul{{ {'class': 'my_list', 'missing': none,
                'id': 'list-%d'|format(variable)}|xmlattr }}>
        ...
        </ul>

    Results in something like this:

    .. sourcecode:: html

        <ul class="my_list" id="list-42">
        ...
        </ul>

    As you can see it automatically prepends a space in front of the item
    if the filter returned something unless the second parameter is false.

    .. versionchanged:: 3.1.4
        Keys with ``/`` solidus, ``>`` greater-than sign, or ``=`` equals sign
        are not allowed.

    .. versionchanged:: 3.1.3
        Keys with spaces are not allowed.
    acapitalizeuCapitalize a value. The first character will be uppercase, all others
    lowercase.
    a_word_beginning_split_rel:lnnuReturn a titlecased version of the value. I.e. words will start with
    uppercase letters, all remaining characters are lowercase.
    akeylaFilterArgumentErrorTuYou can only sort by either "key" or "value"aTupleasort_funcudo_dictsort.<locals>.sort_funcasortedTakeyareverseuSort a dict and yield (key, value) pairs. Python dicts may not
    be in the order you want to display them in, so sort them first.

    .. sourcecode:: jinja

        {% for key, value in mydict|dictsort %}
            sort the dict by key, case insensitive

        {% for key, value in mydict|dictsort(reverse=true) %}
            sort the dict by key, case insensitive, reverse order

        {% for key, value in mydict|dictsort(true) %}
            sort the dict by key, case sensitive

        {% for key, value in mydict|dictsort(false, 'value') %}
            sort the dict by value, case insensitive
    aposacase_sensitiveaignore_caseamake_multi_attrgetterTapostprocessuSort an iterable using Python's :func:`sorted`.

    .. sourcecode:: jinja

        {% for city in cities|sort %}
            ...
        {% endfor %}

    :param reverse: Sort descending instead of ascending.
    :param case_sensitive: When sorting strings, sort upper and lower
        case separately.
    :param attribute: When sorting objects or dicts, an attribute or
        key to sort by. Can use dot notation like ``"address.city"``.
        Can be a list of attributes like ``"age,name"``.

    The sort is stable, it does not change the relative order of
    elements that compare equal. This makes it is possible to chain
    sorts on different attributes and ordering.

    .. sourcecode:: jinja

        {% for user in users|sort(attribute="name")
            |sort(reverse=true, attribute="age") %}
            ...
        {% endfor %}

    As a shortcut to chaining when the direction is the same for all
    attributes, pass a comma separate list of attributes.

    .. sourcecode:: jinja

        {% for user in users|sort(attribute="age,name") %}
            ...
        {% endfor %}

    .. versionchanged:: 2.11.0
        The ``attribute`` parameter can be a comma separated list of
        attributes, e.g. ``"age,name"``.

    .. versionchanged:: 2.6
       The ``attribute`` parameter was added.
    uReturns a list of unique items from the given iterable.

    .. sourcecode:: jinja

        {{ ['foo', 'bar', 'foobar', 'FooBar']|unique|list }}
            -> ['foo', 'bar', 'foobar']

    The unique items are yielded in the same order as their first occurrence in
    the iterable passed to the filter.

    :param case_sensitive: Treat upper and lower case strings as distinct.
    :param attribute: Filter objects with unique values for this attribute.
    amake_attrgetteraattributeagetteraseenaaddado_uniqueaundefinedTuNo aggregated item, sequence was empty.achainTakeya_min_or_maxaminuReturn the smallest item from the sequence.

    .. sourcecode:: jinja

        {{ [1, 2, 3]|min }}
            -> 1

    :param case_sensitive: Treat upper and lower case strings as distinct.
    :param attribute: Get the object with the min value of this attribute.
    amaxuReturn the largest item from the sequence.

    .. sourcecode:: jinja

        {{ [1, 2, 3]|max }}
            -> 3

    :param case_sensitive: Treat upper and lower case strings as distinct.
    :param attribute: Get the object with the max value of this attribute.
    uIf the value is undefined it will return the passed default value,
    otherwise the value of the variable:

    .. sourcecode:: jinja

        {{ my_variable|default('my_variable is not defined') }}

    This will output the value of ``my_variable`` if the variable was
    defined, otherwise ``'my_variable is not defined'``. If you want
    to use default with variables that evaluate to false you have to
    set the second parameter to `true`:

    .. sourcecode:: jinja

        {{ ''|default('the string was empty', true) }}

    .. versionchanged:: 2.11
       It's now possible to configure the :class:`~jinja2.Environment` with
       :class:`~jinja2.ChainableUndefined` to make the `default` filter work
       on nested elements and attributes that may contain undefined values
       in the chain without getting an :exc:`~jinja2.UndefinedError`.
    ajoinado_escapeuReturn a string which is the concatenation of the strings in the
    sequence. The separator between elements is an empty string per
    default, you can define it with the optional parameter:

    .. sourcecode:: jinja

        {{ [1, 2, 3]|join('|') }}
            -> 1|2|3

        {{ [1, 2, 3]|join }}
            -> 123

    It is also possible to join certain attributes of an object:

    .. sourcecode:: jinja

        {{ users|join(', ', attribute='username') }}

    .. versionadded:: 2.6
       The `attribute` parameter was added.
    async_do_joinaeval_ctxaauto_to_listwdado_joinacenteruCenters the value in a field of a given width.TuNo first item, sequence was empty.uReturn the first item of a sequence.aauto_aiteraseqa__anext__ado_firstTuNo last item, sequence was empty.uReturn the last item of a sequence.

    Note: Does not work with generators. You may want to explicitly
    convert it to a list:

    .. sourcecode:: jinja

        {{ data | selectattr('name', '==', 'Jinja') | list | last }}
    arandomachoiceTuNo random item, sequence was empty.uReturn a random item from the sequence.llaKiBakBaMiBaMBaGiBaGBaTiBaTBaPiBaPBaEiBaEBaZiBaZBaYiBaYBu1 Byteu Bytesabaselu.1faunitaprefixuFormat the value like a 'human-readable' file size (i.e. 13 kB,
    4.1 MB, 102 Bytes, etc).  Per default decimal prefixes are used (Mega,
    Giga, etc.), if the second parameter is set to `True` the binary
    prefixes are used (Mebi, Gibi).
    apformatuPretty print a variable. Useful for debugging.apoliciesTanofollowaupdateuurlize.reluurlize.targetuurlize.extra_schemesa_uri_scheme_reafullmatchu is not a valid URI scheme prefix.aurlizeTatrim_url_limitarelatargetaextra_schemesuConvert URLs in text into clickable links.

    This may not recognize links in some situations. Usually, a more
    comprehensive formatter, such as a Markdown library, is a better
    choice.

    Works on ``http://``, ``https://``, ``www.``, ``mailto:``, and email
    addresses. Links with trailing punctuation (periods, commas, closing
    parentheses) and leading punctuation (opening parentheses) are
    recognized excluding the punctuation. Email addresses that include
    header fields are not recognized (for example,
    ``mailto:address@example.com?cc=copy@example.com``).

    :param value: Original text containing URLs to link.
    :param trim_url_limit: Shorten displayed URL values to this length.
    :param nofollow: Add the ``rel=nofollow`` attribute to links.
    :param target: Add the ``target`` attribute to links.
    :param rel: Add the ``rel`` attribute to links.
    :param extra_schemes: Recognize URLs that start with these schemes
        in addition to the default behavior. Defaults to
        ``env.policies["urlize.extra_schemes"]``, which defaults to no
        extra schemes.

    .. versionchanged:: 3.0
        The ``extra_schemes`` parameter was added.

    .. versionchanged:: 3.0
        Generate ``https://`` links for URLs without a scheme.

    .. versionchanged:: 3.0
        The parsing rules were updated. Recognize email addresses with
        or without the ``mailto:`` scheme. Validate IP addresses. Ignore
        parentheses and brackets in more cases.

    .. versionchanged:: 2.8
       The ``target`` parameter was added.
    w
aindentionasplitlinesapopTluReturn a copy of the string with each line indented by 4 spaces. The
    first line and blank lines are not indented by default.

    :param width: Number of spaces, or a string, to indent by.
    :param first: Don't skip indenting the first line.
    :param blank: Don't skip indenting empty lines.

    .. versionchanged:: 3.0
        ``width`` can be a string.

    .. versionchanged:: 2.10
        Blank lines are not indented by default.

        Rename the ``indentfirst`` argument to ``first``.
    udo_indent.<locals>.<genexpr>utruncate.leewayuexpected length >= u, got uexpected leeway >= 0, got arsplitTw luReturn a truncated copy of the string. The length is specified
    with the first parameter which defaults to ``255``. If the second
    parameter is ``true`` the filter will cut the text at length. Otherwise
    it will discard the last word. If the text was in fact
    truncated it will append an ellipsis sign (``"..."``). If you want a
    different ellipsis sign than ``"..."`` you can specify it using the
    third parameter. Strings that only exceed the length by the tolerance
    margin given in the fourth parameter will not be truncated.

    .. sourcecode:: jinja

        {{ "foo bar baz qux"|truncate(9) }}
            -> "foo..."
        {{ "foo bar baz qux"|truncate(9, True) }}
            -> "foo ba..."
        {{ "foo bar baz qux"|truncate(11) }}
            -> "foo bar baz qux"
        {{ "foo bar baz qux"|truncate(11, False, '...', 0) }}
            -> "foo bar..."

    The default leeway on newer Jinja versions is 5 and was 0 before but
    can be reconfigured globally.
    atextwrapanewline_sequenceawrapstringawrapawidthabreak_long_wordsabreak_on_hyphensTawidthaexpand_tabsareplace_whitespaceabreak_long_wordsabreak_on_hyphensuWrap a string to the given width. Existing newlines are treated
    as paragraphs to be wrapped separately.

    :param s: Original text to wrap.
    :param width: Maximum length of wrapped lines.
    :param break_long_words: If a word is longer than ``width``, break
        it across lines.
    :param break_on_hyphens: If a word contains hyphens, it may be split
        across lines.
    :param wrapstring: String to join each wrapped line. Defaults to
        :attr:`Environment.newline_sequence`.

    .. versionchanged:: 2.11
        Existing newlines are treated as paragraphs wrapped separately.

    .. versionchanged:: 2.11
        Added the ``break_on_hyphens`` parameter.

    .. versionchanged:: 2.7
        Added the ``wrapstring`` parameter.
    a_word_reafindalluCount the words in that string.TETypeErrorEValueErroruConvert the value into an integer. If the
    conversion doesn't work it will return ``0``. You can
    override this default using the first parameter. You
    can also override the default base (10) in the second
    parameter, which handles input with prefixes such as
    0b, 0o and 0x for bases 2, 8 and 16 respectively.
    The base is ignored for decimal numbers and non-string values.
    uConvert the value into a floating point number. If the
    conversion doesn't work it will return ``0.0``. You can
    override this default using the first parameter.
    Tucan't handle positional and keyword arguments at the same timeuApply the given values to a `printf-style`_ format string, like
    ``string % values``.

    .. sourcecode:: jinja

        {{ "%s, %s!"|format(greeting, name) }}
        Hello, World!

    In most cases it should be more convenient and efficient to use the
    ``%`` operator or :meth:`str.format`.

    .. code-block:: text

        {{ "%s, %s!" % (greeting, name) }}
        {{ "{}, {}!".format(greeting, name) }}

    .. _printf-style: https://docs.python.org/library/stdtypes.html
        #printf-style-string-formatting
    astripuStrip leading and trailing characters, by default whitespace.astriptagsuStrip SGML/XML tags and replace adjacent whitespace by one space.uSlice an iterator and return a list of lists containing
    those items. Useful if you want to create a div containing
    three ul tags that represent columns:

    .. sourcecode:: html+jinja

        <div class="columnwrapper">
          {%- for column in items|slice(3) %}
            <ul class="column-{{ loop.index }}">
            {%- for item in column %}
              <li>{{ item }}</li>
            {%- endfor %}
            </ul>
          {%- endfor %}
        </div>

    If you pass it a second argument it's used to fill missing
    values on the last iteration.
    aslicesaoffsetaitems_per_sliceafill_withaappendasync_do_sliceado_sliceu
    A filter that batches items. It works pretty much like `slice`
    just the other way round. It returns a list of lists with the
    given number of items. If you provide a second parameter this
    is used to fill up missing items. See this example:

    .. sourcecode:: html+jinja

        <table>
        {%- for row in items|batch(3, '&nbsp;') %}
          <tr>
          {%- for column in row %}
            <td>{{ column }}</td>
          {%- endfor %}
          </tr>
        {%- endfor %}
        </table>
    atmpalinecountado_batchPaceilaflooracommonTumethod must be common, ceil or flooracommonaroundamathl
uRound the number to a given precision. The first
    parameter specifies the precision (default is ``0``), the
    second the rounding method:

    - ``'common'`` rounds either up or down
    - ``'ceil'`` always rounds up
    - ``'floor'`` always rounds down

    If you don't specify a method ``'common'`` is used.

    .. sourcecode:: jinja

        {{ 42.55|round }}
            -> 43.0
        {{ 42.55|round(1, 'floor') }}
            -> 42.5

    Note that even if rounded to 0 precision, a float is returned.  If
    you need a real integer, pipe it through `int`:

    .. sourcecode:: jinja

        {{ 42.55|round|int }}
            -> 43
    a__repr__a__str__Tapostprocessadefaultagroupbya_GroupTupleTadefaultaoutput_expruGroup a sequence of objects by an attribute using Python's
    :func:`itertools.groupby`. The attribute can use dot notation for
    nested access, like ``"address.city"``. Unlike Python's ``groupby``,
    the values are sorted first so only one group is returned for each
    unique value.

    For example, a list of ``User`` objects with a ``city`` attribute
    can be rendered in groups. In this example, ``grouper`` refers to
    the ``city`` value of the group.

    .. sourcecode:: html+jinja

        <ul>{% for city, items in users|groupby("city") %}
          <li>{{ city }}
            <ul>{% for user in items %}
              <li>{{ user.name }}
            {% endfor %}</ul>
          </li>
        {% endfor %}</ul>

    ``groupby`` yields namedtuples of ``(grouper, list)``, which
    can be used instead of the tuple unpacking above. ``grouper`` is the
    value of the attribute, and ``list`` is the items with that value.

    .. sourcecode:: html+jinja

        <ul>{% for group in users|groupby("city") %}
          <li>{{ group.grouper }}: {{ group.list|join(", ") }}
        {% endfor %}</ul>

    You can specify a ``default`` value to use if an object in the list
    does not have the given attribute.

    .. sourcecode:: jinja

        <ul>{% for city, items in users|groupby("city", default="NY") %}
          <li>{{ city }}: {{ items|map(attribute="name")|join(", ") }}</li>
        {% endfor %}</ul>

    Like the :func:`~jinja-filters.sort` filter, sorting and grouping is
    case-insensitive by default. The ``key`` for each group will have
    the case of the first item in that group of values. For example, if
    a list of users has cities ``["CA", "NY", "ca"]``, the "CA" group
    will have two values. This can be disabled by passing
    ``case_sensitive=True``.

    .. versionchanged:: 3.1
        Added the ``case_sensitive`` parameter. Sorting and grouping is
        case-insensitive by default, matching other filters that do
        comparisons.

    .. versionchanged:: 3.0
        Added the ``default`` parameter.

    .. versionchanged:: 2.6
        The attribute supports dot notation for nested access.
    ado_groupbyuReturns the sum of a sequence of numbers plus the value of parameter
    'start' (which defaults to 0).  When the sequence is empty it returns
    start.

    It is also possible to sum up only certain attributes:

    .. sourcecode:: jinja

        Total: {{ items|sum(attribute='price') }}

    .. versionchanged:: 2.6
       The ``attribute`` parameter was added to allow summing up over
       attributes.  Also the ``start`` parameter was moved on to the right.
    astartwxafuncudo_sum.<locals>.funcaiterablearvado_sumuConvert the value into a list.  If it was a string the returned list
    will be a list of characters.
    ado_listuMark the value as safe which means that in an environment with automatic
    escaping enabled this variable will not be escaped.
    uMark a value as unsafe.  This is the reverse operation for :func:`safe`.:nnqTuargument must be iterableuReverse the object or return an iterator that iterates over it the other
    way round.
    asandboxedaSandboxedEnvironmentais_safe_attributeaunsafe_undefinedTaobjanameuGet an attribute of an object.  ``foo|attr("bar")`` works like
    ``foo.bar`` just that always an attribute is returned and items are not
    looked up.

    See :ref:`Notes on subscriptions <notes-on-subscriptions>` for more details.
    uApplies a filter on a sequence of objects or looks up an attribute.
    This is useful when dealing with lists of objects but you are really
    only interested in a certain value of it.

    The basic usage is mapping on an attribute.  Imagine you have a list
    of users but you are only interested in a list of usernames:

    .. sourcecode:: jinja

        Users on this page: {{ users|map(attribute='username')|join(', ') }}

    You can specify a ``default`` value to use if an object in the list
    does not have the given attribute.

    .. sourcecode:: jinja

        {{ users|map(attribute="username", default="Anonymous")|join(", ") }}

    Alternatively you can let it invoke a filter by passing the name of the
    filter and the arguments afterwards.  A good example would be applying a
    text conversion filter on a sequence:

    .. sourcecode:: jinja

        Users on this page: {{ titles|map('lower')|join(', ') }}

    Similar to a generator comprehension such as:

    .. code-block:: python

        (u.username for u in users)
        (getattr(u, "username", "Anonymous") for u in users)
        (do_lower(x) for x in titles)

    .. versionchanged:: 2.11.0
        Added the ``default`` parameter.

    .. versionadded:: 2.7
    aprepare_mapacontextaargsakwargsasync_do_mapaauto_awaitado_mapaselect_or_rejectu<lambda>usync_do_select.<locals>.<lambda>uFilters a sequence of objects by applying a test to each object,
    and only selecting the objects with the test succeeding.

    If no test is specified, each object will be evaluated as a boolean.

    Example usage:

    .. sourcecode:: jinja

        {{ numbers|select("odd") }}
        {{ numbers|select("odd") }}
        {{ numbers|select("divisibleby", 3) }}
        {{ numbers|select("lessthan", 42) }}
        {{ strings|select("equalto", "mystring") }}

    Similar to a generator comprehension such as:

    .. code-block:: python

        (n for n in numbers if test_odd(n))
        (n for n in numbers if test_divisibleby(n, 3))

    .. versionadded:: 2.7
    aasync_select_or_rejectudo_select.<locals>.<lambda>ado_selectusync_do_reject.<locals>.<lambda>uFilters a sequence of objects by applying a test to each object,
    and rejecting the objects with the test succeeding.

    If no test is specified, each object will be evaluated as a boolean.

    Example usage:

    .. sourcecode:: jinja

        {{ numbers|reject("odd") }}

    Similar to a generator comprehension such as:

    .. code-block:: python

        (n for n in numbers if not test_odd(n))

    .. versionadded:: 2.7
    udo_reject.<locals>.<lambda>ado_rejectusync_do_selectattr.<locals>.<lambda>uFilters a sequence of objects by applying a test to the specified
    attribute of each object, and only selecting the objects with the
    test succeeding.

    If no test is specified, the attribute's value will be evaluated as
    a boolean.

    Example usage:

    .. sourcecode:: jinja

        {{ users|selectattr("is_active") }}
        {{ users|selectattr("email", "none") }}

    Similar to a generator comprehension such as:

    .. code-block:: python

        (u for user in users if user.is_active)
        (u for user in users if test_none(user.email))

    .. versionadded:: 2.7
    udo_selectattr.<locals>.<lambda>ado_selectattrusync_do_rejectattr.<locals>.<lambda>uFilters a sequence of objects by applying a test to the specified
    attribute of each object, and rejecting the objects with the test
    succeeding.

    If no test is specified, the attribute's value will be evaluated as
    a boolean.

    .. sourcecode:: jinja

        {{ users|rejectattr("is_active") }}
        {{ users|rejectattr("email", "none") }}

    Similar to a generator comprehension such as:

    .. code-block:: python

        (u for user in users if not user.is_active)
        (u for user in users if not test_none(user.email))

    .. versionadded:: 2.7
    udo_rejectattr.<locals>.<lambda>ado_rejectattrujson.dumps_functionujson.dumps_kwargsacopyaindentahtmlsafe_json_dumpsadumpsuSerialize an object to a string of JSON, and mark it safe to
    render in HTML. This filter is only for use in HTML documents.

    The returned string is safe to render in HTML documents and
    ``<script>`` tags. The exception is in HTML attributes that are
    double quoted; either use single quotes or the ``|forceescape``
    filter.

    :param value: The object to serialize to JSON.
    :param indent: The ``indent`` parameter passed to ``dumps``, for
        pretty-printing the value.

    .. versionadded:: 2.9
    TaattributeTadefaultnuUnexpected keyword argument Tumap requires a filter argumentuprepare_map.<locals>.funcacall_filteranameTacontextTuMissing parameter for attribute nameatransfuncuprepare_select_or_reject.<locals>.transfuncuprepare_select_or_reject.<locals>.funcuprepare_select_or_reject.<locals>.<lambda>acall_testamodfuncaprepare_select_or_rejectalookup_attruBuilt-in template filters used with the ``|`` operator.a__doc__a__file__a__spec__aoriginahas_locationa__cached__areatypingwtacollectionsTaabcaitertoolsTachainTagroupbyamarkupsafeTaescapeTaMarkupTasoft_straasync_utilsTaasync_variantaasync_variantTaauto_aiterTaauto_awaitTaauto_to_listaexceptionsTaFilterArgumentErroraruntimeTaUndefinedautilsTahtmlsafe_json_dumpsTapass_contextapass_contextTapass_environmentapass_environmentTapass_eval_contextapass_eval_contextTapformatTaurl_quoteTaurlizeaTypeVaraCallableTwFTaboundwFTwKwKTwVTnnaEnvironmentaOptionalaUnionTOstrOintTnaattrut.Union[str, HasHTML]ado_forceescapeado_urlencodeaEvalContextwsaoldanewacountado_replaceDwsareturnOstrpado_upperado_loweraIteratoracompileaASCIITu[\s/>=]TaflagsTtaautospaceado_xmlattrado_capitalizeTu([-\s({\[<]+)ado_titleTFakeyFabyute.Literal["key", "value"]areverseado_dictsortTFpnut.Iterable[V]ut.List[V]ado_sortTFnut.Iterator[V]ut.Callable[..., V]ut.Union[V, Undefined]ado_minado_maxTuFadefault_valueabooleanado_defaultTunaAsyncIterableTlPDavalueawidthareturnOstrOintOstrado_centerDaenvironmentaseqareturnaEnvironmentut.Iterable[V]ut.Union[V, Undefined]async_do_firstDaenvironmentaseqareturnaEnvironmentut.Union[t.AsyncIterable[V], t.Iterable[V]]ut.Union[V, Undefined]DaenvironmentaseqareturnaEnvironmentut.Reversible[V]ut.Union[V, Undefined]ado_lastDacontextaseqareturnaContextut.Sequence[V]ut.Union[V, Undefined]ado_randomTFTOstrOfloatOintabinaryado_filesizeformatado_pprintTu^([\w.+-]{2,}:(/){0,2})$TnFnnnatrim_url_limitanofollowatargetarelaextra_schemesado_urlizeTlFpTOintOstrafirstablankado_indentTlFu...naenvalengthakillwordsaendaleewayado_truncateTlOtntado_wordwrapTu\w+DwsareturnOstrOintado_wordcountTll
ado_intTZado_floatado_formatacharsado_trimDavalueareturnut.Union[str, HasHTML]Ostrado_striptagsDavalueaslicesafill_withareturnut.Collection[V]Ointut.Optional[V]ut.Iterator[t.List[V]]ut.Union[t.AsyncIterable[V], t.Iterable[V]]ut.Iterator[t.List[V]]Davaluealinecountafill_withareturnut.Iterable[V]Ointut.Optional[V]ut.Iterator[t.List[V]]TlacommonDavalueaprecisionamethodareturnOfloatOintute.Literal["common", "ceil", "floor"]Ofloatado_roundaNamedTuplea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ujinja2.filtersa__module__a__qualname__a__annotations__agrouperalistastru_GroupTuple.__repr__u_GroupTuple.__str__a__orig_bases__TnFut.List[_GroupTuple]async_do_groupbyTnlasync_do_sumDavalueareturnut.Iterable[V]ut.List[V]async_do_listDavalueareturnut.Union[t.AsyncIterable[V], t.Iterable[V]]ut.List[V]ado_mark_safeDavalueareturnOstrpado_mark_unsafeaoverloadado_reverseDavalueareturnut.Iterable[V]ut.Iterable[V]aobjado_attraContextDaattributeadefaultQnasync_do_selectut.AsyncIterator[V]async_do_rejectasync_do_selectattrasync_do_rejectattrado_tojsonaDictaabsabatchalenadictsortweafilesizeformatafloataforceescapeaformataintalastamapapprintarejectarejectattrasafeaselectaselectattrasliceasortastringasumatitleatrimatruncateauniqueaurlencodeawordcountawordwrapaxmlattratojsonaFILTERSujinja2\filters.pyTa.0alineaindentionTa.0wkwvTwxTaitemamodfuncafuncatransfuncTafuncamodfuncatransfuncu<module jinja2.filters>Ta__class__TaselfTaenvironmentavalueafuncacase_sensitiveaattributeaitafirstakey_funcTaattrTacontextavalueaargsakwargsamodfuncalookup_attrafuncaitemTaitemapartapartsaenvironmentadefaultapostprocessTadefaultaenvironmentapartsapostprocessTaitemaitemswiaattribute_partaitem_iapartapartsaenvironmentapostprocessTaenvironmentapartsapostprocessTaenvironmentaobjanameavalueTavaluealinecountafill_withatmpaitemTwsTavalueawidthTavalueadefault_valueabooleanTavalueacase_sensitiveabyareverseaposasort_funcTavalueabinaryabytesabaseaprefixeswiaprefixaunitTaenvironmentaseqTavalueadefaultTavalueTavalueaargsakwargsTaenvironmentavalueaattributeadefaultacase_sensitiveaexpraoutaoutput_exprTwsawidthafirstablankaindentionanewlinearvalinesTavalueadefaultabaseTaeval_ctxavaluewdaattributeTacontextavalueaargsakwargsafuncaitemTacontextavalueaattributeadefaultTacontextavalueanameaargsakwargsTaenvironmentavalueacase_sensitiveaattributeTacontextaseqTacontextavalueaargsakwargsTaeval_ctxwsaoldanewacountTavaluearvweTavalueaprecisionamethodafuncTavalueaslicesafill_withTaenvironmentavalueareverseacase_sensitiveaattributeakey_funcTaenvironmentaiterableaattributeastartarvafuncaitemTaeval_ctxavalueaindentapoliciesadumpsakwargsTavalueacharsTaenvwsalengthakillwordsaendaleewayaresultTaenvironmentavalueacase_sensitiveaattributeagetteraseenaitemakeyTavalueaitemsTaeval_ctxavalueatrim_url_limitanofollowatargetarelaextra_schemesapoliciesarel_partsaschemearvTaenvironmentwsawidthabreak_long_wordsawrapstringabreak_on_hyphensatextwrapTaeval_ctxwdaautospaceaitemsakeyavaluearvTaitemacontextanameaargsakwargsTaargsacontextakwargsanameTaenvironmentaattributeapostprocessadefaultapartsaattrgetterTaenvironmentaattributeapostprocessasplitapartsaattrgetterTacontextaargsakwargsaattributeadefaultafuncanameT
acontextaargsakwargsamodfuncalookup_attraattratransfuncaoffanameafuncTaitemavalueaposacase_sensitiveTacase_sensitiveaposTaeval_ctxavaluewdaattributeado_escapeaidxaitemTavalueaslicesafill_withaseqalengthaitems_per_sliceaslices_with_extraaoffsetaslice_numberastartaendatmpTaenvironmentaiterableaattributeastart.jinja2.idtracking)aSymbolsTaparentaFrameSymbolVisitoravisitoravisitaanalyze_nodelalevellaparentarefsaloadsastoresaRootVisitoral_uw_afind_loadafind_refuTried to resolve a name to a reference that was unknown to the frame (w)a__new__aupdateacopyaadda_define_refaVAR_LOAD_ALIASTaloadaVAR_LOAD_UNDEFINEDaVAR_LOAD_PARAMETERaVAR_LOAD_RESOLVEaselfutoo many values to unpack (expected 2)Tushould not happenanodeasortedarvaitemsasym_visitoraiter_child_nodesabodyTTacallTaexcludeatargetDastore_as_paramtaelseaelse_atestuUnknown for branchatargetsuCannot find symbols for a__name__asymbolsactxaparamadeclare_parameteranameastorealoaduAll assignments to names go through this function.anodesaIterableaNodeareturnainner_visituFrameSymbolVisitor.visit_If.<locals>.inner_visitaelif_abranch_updateaoriginal_symbolsakwargsageneric_visitanamesuVisit assignments in the correct order.aiteruVisiting stops at for blocks.  However the block sequence
        is visited as part of the outer scope.
        acallafilteravaluesuStop visiting at block assigns.a__doc__a__file__a__spec__aoriginahas_locationa__cached__wtTanodesTaNodeVisitoraNodeVisitoraresolveaaliasaundefinedTnaparent_symbolsaOptionalafind_symbolsasymbols_for_nodeujinja2.idtrackinga__module__a__qualname__Tnna__init__uSymbols.__init__aAnyuSymbols.analyze_nodeaTupleuSymbols._define_refuSymbols.find_loaduSymbols.find_refDanameareturnOstrparefuSymbols.refDareturnaSymbolsuSymbols.copyDanameareturnOstrnuSymbols.storeuSymbols.declare_parameteruSymbols.loadabranch_symbolsaSequenceuSymbols.branch_updateaDictTOstrpadump_storesuSymbols.dump_storesaSetadump_param_targetsuSymbols.dump_param_targetsa__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>DasymbolsareturnaSymbolsnuRootVisitor.__init__a_simple_visituRootVisitor._simple_visitavisit_Templateavisit_Blockavisit_Macroavisit_FilterBlockavisit_Scopeavisit_Ifavisit_ScopedEvalContextModifieraAssignBlockavisit_AssignBlockuRootVisitor.visit_AssignBlockaCallBlockavisit_CallBlockuRootVisitor.visit_CallBlockaOverlayScopeavisit_OverlayScopeuRootVisitor.visit_OverlayScopeTabodyaForafor_branchastravisit_ForuRootVisitor.visit_ForaWithavisit_WithuRootVisitor.visit_WithaargsuRootVisitor.generic_visita__orig_bases__uA visitor for `Frame.inspect`.uFrameSymbolVisitor.__init__TFaNameastore_as_paramaboolavisit_NameuFrameSymbolVisitor.visit_NameaNSRefavisit_NSRefuFrameSymbolVisitor.visit_NSRefaIfuFrameSymbolVisitor.visit_IfaMacrouFrameSymbolVisitor.visit_MacroaImportavisit_ImportuFrameSymbolVisitor.visit_ImportaFromImportavisit_FromImportuFrameSymbolVisitor.visit_FromImportaAssignavisit_AssignuFrameSymbolVisitor.visit_AssignuFrameSymbolVisitor.visit_ForuFrameSymbolVisitor.visit_CallBlockaFilterBlockuFrameSymbolVisitor.visit_FilterBlockuFrameSymbolVisitor.visit_WithuFrameSymbolVisitor.visit_AssignBlockaScopeuStop visiting at scopes.uFrameSymbolVisitor.visit_ScopeaBlockuStop visiting at blocks.uFrameSymbolVisitor.visit_BlockuDo not visit into overlay scopes.uFrameSymbolVisitor.visit_OverlayScopeujinja2\idtracking.pyu<module jinja2.idtracking>Ta__class__TaselfasymbolsTaselfaparentalevelTaselfanamealoadaidentTaselfanodeakwargsachildTaselfanodeakwargsavisitorTaselfabranch_symbolsastoresabranchatargetasymanameabranch_countaouter_targetTaselfarvTaselfanameTaselfanodearvatargetainstrw_TaselfarvanodeanameTaselfatargetTanodesaparent_symbolsasymavisitoranodeTaselfanodeaargsakwargsTanodesarvasubnodeaoriginal_symbolsaselfakwargsTakwargsaoriginal_symbolsaselfTaselfanamearvTaselfanameaouter_refTanodeaparent_symbolsasymTaselfanodeakwargsTaselfanodeafor_branchakwargsabranchaitemTaselfanodeakwargsanameTaselfanodeakwargsaoriginal_symbolsainner_visitabody_symbolsaelif_symbolsaelse_symbolsTaselfanodeastore_as_paramakwargsTaselfanodeakwargsatargetTaselfanodeakwargsatargetachild.jinja2.lexer%areaescapeu<genexpr>areverse_operatorsaTOKEN_COMMENT_BEGINubegin of commentaTOKEN_COMMENT_ENDuend of commentaTOKEN_COMMENTacommentaTOKEN_LINECOMMENTaTOKEN_BLOCK_BEGINubegin of statement blockaTOKEN_BLOCK_ENDuend of statement blockaTOKEN_VARIABLE_BEGINubegin of print statementaTOKEN_VARIABLE_ENDuend of print statementaTOKEN_LINESTATEMENT_BEGINubegin of line statementaTOKEN_LINESTATEMENT_ENDuend of line statementaTOKEN_DATAutemplate data / textaTOKEN_EOFuend of templateatypeaTOKEN_NAMEavaluea_describe_token_typeuReturns a description of the token.w:asplitTw:lutoo many values to unpack (expected 2)uLike `describe_token` but for token expressions.anewline_reafindalluCount the number of newline characters in the string.  This is
    useful for extensions that filter a stream.
    acomment_start_stringablock_start_stringavariable_start_stringaline_statement_prefixu^[ \t\v]*aline_comment_prefixaTOKEN_LINECOMMENT_BEGINu(?:^|(?<=\S))[^\S\r\n]*asortedDareverset:lnnuCompiles all the rules from the environment into a list of rules.amessageaerror_classadescribe_tokenuTest a token against a token expression.  This can either be a
        token type or ``'token_type:token_value'``.  This can only test
        against string values and types.
        uTest against multiple token expressions.aselfatestuToken.test_any.<locals>.<genexpr>astreamacurrentaclosea_iteradequea_pushedanameafilenameaclosedaTokenlaTOKEN_INITIALuaTokenStreamIteratoruAre we at the end of the stream?aappenduPush a token back to the stream.apushuLook at the next token.uGot n tokens ahead.uPerform the token test and return the token if it matched.
        Otherwise the return value is `None`.
        anext_ifuLike :meth:`next_if` but only returns `True` or `False`.apopleftuGo one token ahead and return the old one.

        Use the built-in :func:`next` instead of calling this directly.
        alinenouClose the stream.adescribe_token_expraTemplateSyntaxErroruunexpected end of template, expected w.uexpected token u, got uExpect a given token type and return it.  This accepts the same
        argument as :meth:`jinja2.lexer.Token.test`.
        ablock_end_stringavariable_end_stringacomment_end_stringatrim_blocksalstrip_blocksanewline_sequenceakeep_trailing_newlinea_lexer_cacheagetaLexeruReturn a lexer which is probably cached.a__class__a__new__wxareturnaPatternwcuLexer.__init__.<locals>.ca_Ruleawhitespace_reaTOKEN_WHITESPACEafloat_reaTOKEN_FLOATainteger_reaTOKEN_INTEGERaname_reastring_reaTOKEN_STRINGaoperator_reaTOKEN_OPERATORacompile_rulesu\n?u(?P<raw_begin>u(\-|\+|)\s*raw\s*(?:\-u\s*|u))w|u(?P<w>u(\-|\+|))arootu(.*?)(?:w)aOptionalLStripu#bygroupTu.+u(.*?)((?:\+u|\-u#popTu(.)aFailureTuMissing end of comment tagu(?:\+u\-aTOKEN_RAW_BEGINu(.*?)((?:u(\-|\+|))\s*endraw\s*(?:\+aTOKEN_RAW_ENDTuMissing end of raw directiveTu\s*(\n|$)Tu(.*?)()(?=\n|$)aTOKEN_LINECOMMENT_ENDarulesacompilewMwSasubuReplace all newlines with the configured sequence in strings
        and template data.
        atokeniteraTokenStreamawrapuCalls tokeniter + tokenize and wraps it in a token stream.uThis is called with the stream as returned by `tokenize` and wraps
        every token in a :class:`Token` and converts the value.
        utoo many values to unpack (expected 3)aignored_tokensa_normalize_newlinesakeywordaisidentifieruInvalid character in identifier:lqnaencodeTaasciiabackslashreplaceadecodeTuunicode-escapeTw:qastripareplaceTw_ulaliteral_evalaoperatorsuLexer.wrapuThis method tokenizes the text and returns the tokens in a
        generator. Use this method if you just want to tokenize a template.

        .. versionchanged:: 3.0
            Only ``\n``, ``\r\n`` and ``\r`` are treated as line
            breaks.
        asource:nnlw
astateTavariableablockTuinvalid statea_beginastatetokensamatchaposabalancing_stackagroups:lnlw-arstripacountTw
w+agroupdictarfindaline_startingafullmatchwmaitemsu wanted to resolve the token dynamically but no group matchedaignore_if_emptyanewlines_strippedagroupw{w}w(w[w]Tw}w)w]uunexpected 'w'u', expected ':qnnaendastacku wanted to resolve the new state dynamically but no group matchedu yielded empty string without stack changeuunexpected char u at uLexer.tokeniteruLexer.tokeniter.<locals>.<genexpr>uImplements a Jinja / Python combination lexer. The ``Lexer`` class
is used to do some preprocessing. It filters out invalid operators like
the bitshift operators we don't allow in templates. It separates
template code and python code in expressions.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__wtaastTaliteral_evalacollectionsTadequeainterna_identifierTapatternapatternaexceptionsTaTemplateSyntaxErrorautilsTaLRUCacheaLRUCacheTl2aMutableMappingaTupleTu\s+Tu(\r\n|\r|\n)u('([^'\\]*(?:\\.[^'\\]*)*)'|"([^"\\]*(?:\\.[^"\\]*)*)")u
    (
        0b(_?[0-1])+ # binary
    |
        0o(_?[0-7])+ # octal
    |
        0x(_?[\da-f])+ # hex
    |
        [1-9](_?\d)* # decimal
    |
        0(_?0)* # decimal zero
    )
    aIGNORECASEaVERBOSEu
    (?<!\.)  # doesn't start with a .
    (\d+_)*\d+  # digits, possibly _ separated
    (
        (\.(\d+_)*\d+)?  # optional fractional part
        e[+\-]?(\d+_)*\d+  # exponent part
    |
        \.(\d+_)*\d+  # required fractional part
    )
    TaaddaTOKEN_ADDTaassignaTOKEN_ASSIGNTacolonaTOKEN_COLONTacommaaTOKEN_COMMATadivaTOKEN_DIVTadotaTOKEN_DOTTaeqaTOKEN_EQTafloordivaTOKEN_FLOORDIVTagtaTOKEN_GTTagteqaTOKEN_GTEQTalbraceaTOKEN_LBRACETalbracketaTOKEN_LBRACKETTalparenaTOKEN_LPARENTaltaTOKEN_LTTalteqaTOKEN_LTEQTamodaTOKEN_MODTamulaTOKEN_MULTaneaTOKEN_NETapipeaTOKEN_PIPETapowaTOKEN_POWTarbraceaTOKEN_RBRACETarbracketaTOKEN_RBRACKETTarparenaTOKEN_RPARENTasemicolonaTOKEN_SEMICOLONTasubaTOKEN_SUBTatildeaTOKEN_TILDETawhitespaceTafloatTaintegerTanameTastringTaoperatorTablock_beginTablock_endTavariable_beginTavariable_endTaraw_beginTaraw_endTacomment_beginTacomment_endTacommentTalinestatement_beginTalinestatement_endTalinecomment_beginTalinecomment_endTalinecommentTadataTainitialTaeofw/u//w*w%u**w~u==u!=u>=w<u<=w=w,w;Tuoperators droppedu<lambda>TakeyDatoken_typeareturnOstrpDatokenareturnaTokenOstrDaexprareturnOstrpDavalueareturnOstrOintacount_newlinesaenvironmentaEnvironmentaListTOstrpujinja2.lexera__module__uClass that raises a `TemplateSyntaxError` if called.
    Used by the `Lexer` to specify known errors.
    a__qualname__aclsaTypea__init__uFailure.__init__DalinenoafilenameareturnOintOstrute.NoReturna__call__uFailure.__call__aNamedTuplea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>aintastra__str__uToken.__str__aexprabooluToken.testaiterableatest_anyuToken.test_anya__orig_bases__uThe iterator for tokenstreams.  Iterate over the stream
    until the eof token is reached.
    DastreamareturnaTokenStreamnuTokenStreamIterator.__init__DareturnaTokenStreamIteratora__iter__uTokenStreamIterator.__iter__a__next__uTokenStreamIterator.__next__uA token stream is an iterable that yields :class:`Token`\s.  The
    parser however does not iterate over it but calls :meth:`next` to go
    one token ahead.  The current active token is stored as :attr:`current`.
    ageneratoraIterableaOptionaluTokenStream.__init__uTokenStream.__iter__DareturnOboola__bool__uTokenStream.__bool__aeosuTokenStream.eosatokenuTokenStream.pushalookuTokenStream.lookTlDwnareturnOintnaskipuTokenStream.skipuTokenStream.next_ifDaexprareturnOstrOboolaskip_ifuTokenStream.skip_ifuTokenStream.__next__DareturnnuTokenStream.closeaexpectuTokenStream.expectDaenvironmentareturnaEnvironmentaLexeraget_lexerTOtupleuA special tuple for marking a point in the state that can have
    lstrip applied.
    a__slots__uOptionalLStrip.__new__aUnionatokensacommanduClass that implements a lexer for a given environment. Automatically
    created by the environment class, usually you don't have to do that.

    Note that the lexer is not automatically bound to an environment.
    Multiple environments can share the same lexer.
    DaenvironmentareturnaEnvironmentnuLexer.__init__DavalueareturnOstrpuLexer._normalize_newlinesTnnnatokenizeuLexer.tokenizeTnnTOintOstrpaIteratorujinja2\lexer.pyTa.0wxTa.0wgTa.0aexpraselfTwxu<module jinja2.lexer>Ta__class__TaselfTaselfalinenoafilenameTaselfamessageaclsT
aselfaenvironmentatag_ruleswewcaroot_tag_rulesablock_start_reablock_end_reacomment_end_reavariable_end_reablock_suffix_rearoot_raw_rearoot_parts_reTaselfageneratoranameafilenameTaselfastreamTaclsamembersakwargsa__class__TaselfarvTaselfatokenTatoken_typeTaselfavalueTaenvironmentwearulesTavalueTatokenTaexpratypeavalueTaselfaexprTaenvironmentakeyalexerTaselfaold_tokenaresultTaselfwnw_TaselfaiterableTaselfasourceanameafilenameastateabalancing_stackagroupsalinesaposalinenoastackastatetokensasource_lengthanewlines_strippedaline_startingaregexatokensanew_statewmatextastrip_signastrippedal_posaidxatokenakeyavalueadataaexpected_opapos2TaselfasourceanameafilenameastateastreamT
aselfastreamanameafilenameavaluealinenoatokenavalue_strweamsg.jinja2.loadersS,asplitTw/asepaaltsepapardiraTemplateNotFoundw.apiecesuSplit a path into segments and perform a sanity check.  If it detects
    '..' in the path it will raise a `TemplateNotFound` error.
    ahas_source_accessa__name__uu cannot provide access to the sourceuGet the template source, filename and reload helper for a template.
        It's passed the environment and template name and has to return a
        tuple in the form ``(source, filename, uptodate)`` or raise a
        `TemplateNotFound` error if it can't locate the template.

        The source part of the returned tuple must be the source of the
        template as a string. The filename should be the name of the
        file on the filesystem if it was loaded from there, otherwise
        ``None``. The filename is used by Python for the tracebacks
        if no loader extension is used.

        The last item in the tuple is the `uptodate` function.  If auto
        reloading is enabled it's always called to check if the template
        changed.  No arguments are passed so the function must store the
        old state somewhere (for example in a closure).  If it returns `False`
        the template will be reloaded.
        uthis loader cannot iterate over all templatesuIterates over all templates.  If the loader does not support that
        it should raise a :exc:`TypeError` which is the default behavior.
        aget_sourceutoo many values to unpack (expected 3)abytecode_cacheaget_bucketacodeacompileabucketaset_bucketatemplate_classafrom_codeuLoads a template.  This method looks up the template in the cache
        or loads one by calling :meth:`get_source`.  Subclasses should not
        override this method as loaders working on collections of other
        loaders (such as :class:`PrefixLoader` or :class:`ChoiceLoader`)
        will not call this method but `get_source` directly.
        aabcaIterableafspathasearchpathaencodingafollowlinksasplit_template_pathajoinafilenamea__enter__a__exit__areadTnnnagetmtimeDareturnOboolauptodateuFileSystemLoader.get_source.<locals>.uptodateacontentsamtimeawalkaselfTafollowlinksadirpathastripareplacew/:nlnu./:lnnafoundaaddasortedarstripacurdirapackage_pathapackage_nameaimport_moduleaimportlibautilafind_specTuAn import spec was not found for the package.aloaderTuA loader was not found for the package.a_loadera_archiveazipimportazipimporteraarchiveasubmodule_search_locationsaoriginarootsuThe u package was not installed in a way that PackageLoader understands.a_template_rootarbaup_to_dateuPackageLoader.get_source.<locals>.up_to_dateaget_dataasourceadecodewpalstriparesultsa_filesuThis zip import does not have the required metadata to list templates.akeysastartswithaprefixqasortu<genexpr>uPackageLoader.list_templates.<locals>.<genexpr>amappingu<lambda>uDictLoader.get_source.<locals>.<lambda>agetatemplateaload_funcadelimiterlutoo many values to unpack (expected 2)TEValueErrorEKeyErroraget_loaderaloadaitemsalist_templatesaresultaloadersaenvironmentanameaglobalsaupdatea_jinja2_module_templates_wxa_TemplateModulea__path__aweakrefaproxyuModuleLoader.__init__.<locals>.<lambda>amodulesamoduleapopatmpl_asha1aencodeTuutf-8ahexdigestaModuleLoaderaget_template_keyu.pyarootafrom_module_dictuAPI and implementations for loading templates from different data
sources.
a__doc__a__file__a__spec__ahas_locationa__cached__uimportlib.utillaosaposixpathasyswtacollectionsTaabcahashlibTasha1aModuleTypeaexceptionsTaTemplateNotFoundautilsTainternalcodeainternalcodeareturnaListujinja2.loadersa__module__uBaseclass for all loaders.  Subclass this and override `get_source` to
    implement a custom loading mechanism.  The environment provides a
    `get_template` method that calls the loader's `load` method to get the
    :class:`Template` object.

    A very basic example for a loader that looks up templates on the file
    system could look like this::

        from jinja2 import BaseLoader, TemplateNotFound
        from os.path import join, exists, getmtime

        class MyLoader(BaseLoader):

            def __init__(self, path):
                self.path = path

            def get_source(self, environment, template):
                path = join(self.path, template)
                if not exists(path):
                    raise TemplateNotFound(template)
                mtime = getmtime(path)
                with open(path) as f:
                    source = f.read()
                return source, path, lambda: mtime == getmtime(path)
    aBaseLoadera__qualname__aEnvironmentaTupleaOptionalaCallableTLObooluBaseLoader.get_sourceuBaseLoader.list_templatesTnaMutableMappingaAnyaTemplateuBaseLoader.loada__prepare__aFileSystemLoadera__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uLoad templates from a directory in the file system.

    The path can be relative or absolute. Relative paths are relative to
    the current working directory.

    .. code-block:: python

        loader = FileSystemLoader("templates")

    A list of paths can be given. The directories will be searched in
    order, stopping at the first matching template.

    .. code-block:: python

        loader = FileSystemLoader(["/override/templates", "/default/templates"])

    :param searchpath: A path, or list of paths, to the directory that
        contains the templates.
    :param encoding: Use this encoding to read the text from template
        files.
    :param followlinks: Follow symbolic links in the path.

    .. versionchanged:: 2.8
        Added the ``followlinks`` parameter.
    Tuutf-8FaUnionastruos.PathLike[str]aSequenceaboola__init__uFileSystemLoader.__init__uFileSystemLoader.get_sourceuFileSystemLoader.list_templatesa__orig_bases__aPackageLoaderuLoad templates from a directory in a Python package.

    :param package_name: Import name of the package that contains the
        template directory.
    :param package_path: Directory within the imported package that
        contains the templates.
    :param encoding: Encoding of template files.

    The following example looks up templates in the ``pages`` directory
    within the ``project.ui`` package.

    .. code-block:: python

        loader = PackageLoader("project.ui", "pages")

    Only packages installed as directories (standard pip behavior) or
    zip/egg files (less common) are supported. The Python API for
    introspecting data in packages is too limited to support other
    installation methods the way this loader requires.

    There is limited support for :pep:`420` namespace packages. The
    template directory is assumed to only be in one namespace
    contributor. Zip files contributing to a namespace are not
    supported.

    .. versionchanged:: 3.0
        No longer uses ``setuptools`` as a dependency.

    .. versionchanged:: 3.0
        Limited PEP 420 namespace package support.
    Tatemplatesuutf-8uPackageLoader.__init__uPackageLoader.get_sourceuPackageLoader.list_templatesaDictLoaderuLoads a template from a Python dict mapping template names to
    template source.  This loader is useful for unittesting:

    >>> loader = DictLoader({'index.html': 'source here'})

    Because auto reloading is rarely useful this is disabled per default.
    aMappinguDictLoader.__init__uDictLoader.get_sourceuDictLoader.list_templatesaFunctionLoaderuA loader that is passed a function which does the loading.  The
    function receives the name of the template and has to return either
    a string with the template source, a tuple in the form ``(source,
    filename, uptodatefunc)`` or `None` if the template does not exist.

    >>> def load_template(name):
    ...     if name == 'index.html':
    ...         return '...'
    ...
    >>> loader = FunctionLoader(load_template)

    The `uptodatefunc` is a function that is called if autoreload is enabled
    and has to return `True` if the template is still up to date.  For more
    details have a look at :meth:`BaseLoader.get_source` which has the same
    return value.
    uFunctionLoader.__init__uFunctionLoader.get_sourceaPrefixLoaderuA loader that is passed a dict of loaders where each loader is bound
    to a prefix.  The prefix is delimited from the template by a slash per
    default, which can be changed by setting the `delimiter` argument to
    something else::

        loader = PrefixLoader({
            'app1':     PackageLoader('mypackage.app1'),
            'app2':     PackageLoader('mypackage.app2')
        })

    By loading ``'app1/index.html'`` the file from the app1 package is loaded,
    by loading ``'app2/index.html'`` the file from the second.
    uPrefixLoader.__init__uPrefixLoader.get_loaderuPrefixLoader.get_sourceuPrefixLoader.loaduPrefixLoader.list_templatesaChoiceLoaderuThis loader works like the `PrefixLoader` just that no prefix is
    specified.  If a template could not be found by one loader the next one
    is tried.

    >>> loader = ChoiceLoader([
    ...     FileSystemLoader('/path/to/user/templates'),
    ...     FileSystemLoader('/path/to/system/templates')
    ... ])

    This is useful if you want to allow users to override builtin templates
    from a different location.
    uChoiceLoader.__init__uChoiceLoader.get_sourceuChoiceLoader.loaduChoiceLoader.list_templatesuLike a normal module but with support for weak referencesuThis loader loads templates from precompiled templates.

    Example usage:

    >>> loader = ChoiceLoader([
    ...     ModuleLoader('/path/to/compiled/templates'),
    ...     FileSystemLoader('/path/to/templates')
    ... ])

    Templates can be precompiled with :meth:`Environment.compile_templates`.
    apathuModuleLoader.__init__astaticmethoduModuleLoader.get_template_keyaget_module_filenameuModuleLoader.get_module_filenameuModuleLoader.loadujinja2\loaders.pyTa.0anameadirpathTasourceaselfatemplateTaselfasourceatemplateTwxapackage_nameTapackage_nameu<module jinja2.loaders>Ta__class__TaselfaloadersTaselfamappingTaselfasearchpathaencodingafollowlinksTaselfaload_funcTaselfapathapackage_nameamodT
aselfapackage_nameapackage_pathaencodingarootsaspecaloaderatemplate_rootapkgdirarootTaselfamappingadelimiterTaselfatemplateaprefixanamealoaderweTanameTaselfaenvironmentatemplateTaselfaenvironmentatemplatealoaderTaselfaenvironmentatemplateasourceT
aselfaenvironmentatemplateapiecesasearchpathafilenamewfacontentsamtimeauptodateTaselfaenvironmentatemplatearvTaselfaenvironmentatemplateaup_to_datewpwfasourceamtimeweTaselfaenvironmentatemplatealoaderanameweTaselfTaselfafoundaloaderTaselfafoundasearchpathawalk_diradirpathw_afilenamesafilenameatemplateTaselfaresultsaoffsetadirpathw_afilenamesaprefixanameTaselfaresultaprefixaloaderatemplateT
aselfaenvironmentanameaglobalsacodeasourceafilenameauptodateabccabucketTaselfaenvironmentanameaglobalsaloaderTaselfaenvironmentanameaglobalsakeyamoduleamodweTaselfaenvironmentanameaglobalsaloaderalocal_nameweTatemplateapiecesapieceTwpamtimeTamtimewpTafilenameamtime.jinja2.nodesBTafieldsaattributeslwdagetTumultiple inheritance not allowedTulayout conflictasetdefaultTaabstractFa__new__aenvironmentacallableaautoescapeavolatileacopyaclearaupdateuif no eval context is passed, the node must have an attached environment.aEvalContextaabstractuabstract nodes are not instantiableafieldsa__name__uu takes 0 argumentsu takes 0 or u argumentwsutoo many values to unpack (expected 2)aattributesuunknown attribute uThis method iterates over all fields that are defined and yields
        ``(key, value)`` tuples.  Per default all fields are returned, but
        it's possible to limit that to some fields by providing the `only`
        parameter or to exclude some using the `exclude` parameter.  Both
        should be sets or tuples of field names.
        aselfaexcludeaonlyaiter_fieldsuNode.iter_fieldsuIterates over all direct child nodes of the node.  This iterates
        over all fields and yields the values of they are nodes.  If the value
        of a field is a list all the nodes in that list are returned.
        aNodeaiter_child_nodesuNode.iter_child_nodesafind_alluFind the first node of a given type.  If no such node exists the
        return value is `None`.
        uFind all the nodes of a given type.  If the type is a tuple,
        the check is performed for any of the tuple items.
        anode_typeuNode.find_alladequeatodoapopleftactxaextenduReset the context of a node and all child nodes.  Per default the
        parser will all generate nodes that have a 'load' context as it's the
        most common one.  This method is used in the parser to set assignment
        targets and other nodes to a store context.
        alinenouSet the line numbers of the node and children.uSet the environment for all nodes.u, w(w)w=u<genexpr>uNode.__repr__.<locals>.<genexpr>anodeaUnionaAnyareturna_dumpuNode.dump.<locals>._dumpabufaappendunodes.Tw)Tu, Tw[Tw]aImpossibleuReturn the value of the expression as constant or raise
        :exc:`Impossible` if this was not possible.

        An :class:`EvalContext` can be provided, if none is given
        a default context is created which requires the nodes to have
        an attached environment.

        .. versionchanged:: 2.4
           the `eval_ctx` parameter was added.
        aget_eval_contextasandboxedaoperatoraintercepted_binopsa_binop_to_funcaleftaas_constarightaintercepted_unopsa_uaop_to_funcanamePatrueaTrueafalseanoneaNoneaFalseavalueacompilerTahas_safe_reprlahas_safe_reprTalinenoaenvironmentuReturn a const object if the value is representable as
        constant value in the generated code, otherwise it will raise
        an `Impossible` exception.
        aMarkupadataaitemsaeval_ctxuTuple.as_const.<locals>.<genexpr>acan_assignuDict.as_const.<locals>.<genexpr>akeyatestaexpr1aexpr2aargsakwargsadyn_argsadyn_kwargsuargs_as_const.<locals>.<genexpr>a_is_filterafiltersatestsa_PassArgafrom_objacontextais_asyncajinja_async_variantainspectaiscoroutinefunctionaargs_as_constainsertaeval_contexta__class__Taeval_ctxaloadagetitemaargagetattraattraobjaOptionalaExpraconstuSlice.as_const.<locals>.constastartastopastepanodesuConcat.as_const.<locals>.<genexpr>aexpraopsa_cmpop_to_funcaoparesultuCan't create internal names.  Use the `free_identifier` method on a parser.ucan't create custom node typesuAST nodes generated by the parser for the compiler. Also provides
some node tree helper functions used by the parser and compiler in order
to normalize nodes.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__wtacollectionsTadequeamarkupsafeTaMarkupautilsTa_PassArgaTypeVarTa_NodeBoundaNodeTabounda_NodeBoundw*amulw/atruedivu//afloordivu**apoww%amodw+aaddw-asubaDictaCallableanotanot_aposanegaeqaneagtagteqagealtalteqaleainu<lambda>anotinTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ujinja2.nodesa__module__uRaised if the node could not perform a requested action.a__qualname__a__orig_bases__TOtypeaNodeTypeuA metaclass for nodes that handles the field and attribute
    inheritance.  fields and attributes from the parent class are
    automatically forwarded to the child.uNodeType.__new__uHolds evaluation time information.  Custom attributes can be attached
    to it in extensions.
    TnaEnvironmentatemplate_namea__init__uEvalContext.__init__aMappingasaveuEvalContext.saveaoldarevertuEvalContext.revertametaclassTaNodeTuBaseclass for all Jinja nodes.  There are a number of nodes available
    of different types.  There are four major types:

    -   :class:`Stmt`: statements
    -   :class:`Expr`: expressions
    -   :class:`Helper`: helper nodes
    -   :class:`Template`: the outermost wrapper node

    All nodes have fields and attributes.  Fields may be other nodes, lists,
    or arbitrary values.  Fields are passed to the constructor as regular
    positional arguments, attributes as keyword arguments.  Each node has
    two attributes: `lineno` (the line number of the node) and `environment`.
    The `environment` attribute is set at the end of the parsing process for
    all nodes automatically.
    aTupleastraintuNode.__init__TnnaContaineraIteratoraTypeafinduNode.findaset_ctxuNode.set_ctxTFaoverrideaboolaset_linenouNode.set_linenoDaenvironmentareturnaEnvironmentaNodeaset_environmentuNode.set_environmentaothera__eq__uNode.__eq__aobjecta__hash__a__repr__uNode.__repr__adumpuNode.dumpaStmtuBase node for all statements.aHelperuNodes that exist in a specific context only.aTemplateuNode that represents a template.  This must be the outermost node that
    is passed to the compiler.
    TabodyaListabodyaOutputuA node that holds multiple expressions which are then printed out.
    This is used both for the `print` statement and the regular template data.
    TanodesaExtendsuRepresents an extends statement.TatemplateatemplateaForuThe for loop.  `target` is the target for the iteration (usually a
    :class:`Name` or :class:`Tuple`), `iter` the iterable.  `body` is a list
    of nodes that are used as loop-body, and `else_` a list of nodes for the
    `else` block.  If no else node exists it has to be an empty list.

    For filtered nodes an expression can be stored as `test`, otherwise `None`.
    Tatargetaiterabodyaelse_atestarecursiveatargetaiteraelse_arecursiveaIfuIf `test` is true, `body` is rendered, else `else_`.Tatestabodyaelif_aelse_aelif_aMacrouA macro definition.  `name` is the name of the macro, `args` a list of
    arguments and `defaults` a list of defaults if there are any.  `body` is
    a list of nodes for the macro body.
    TanameaargsadefaultsabodyaNameadefaultsaCallBlockuLike a macro without a name but a call instead.  `call` is called with
    the unnamed macro as `caller` argument this node holds.
    TacallaargsadefaultsabodyaCallacallaFilterBlockuNode for filter sections.TabodyafilteraFilterafilteraWithuSpecific node for with statements.  In older versions of Jinja the
    with statement was implemented on the base of the `Scope` node instead.

    .. versionadded:: 2.9.3
    TatargetsavaluesabodyatargetsavaluesaBlockuA node that represents a block.

    .. versionchanged:: 3.0.0
        the `required` field was added.
    TanameabodyascopedarequiredascopedarequiredaIncludeuA node that represents the include tag.Tatemplateawith_contextaignore_missingawith_contextaignore_missingaImportuA node that represents the import tag.Tatemplateatargetawith_contextaFromImportuA node that represents the from import tag.  It's important to not
    pass unsafe names to the name attribute.  The compiler translates the
    attribute lookups directly into getattr calls and does *not* use the
    subscript callback of the interface.  As exported variables may not
    start with double underscores (which the parser asserts) this is not a
    problem for regular Jinja code, but if this node is used in an extension
    extra care must be taken.

    The list of names may contain tuples if aliases are wanted.
    Tatemplateanamesawith_contextanamesaExprStmtuA statement that evaluates an expression and discards the result.TanodeaAssignuAssigns an expression to a target.TatargetanodeaAssignBlockuAssigns a block to a target.TatargetafilterabodyuBaseclass for all expressions.uExpr.as_constuCheck if it's possible to assign something to this node.uExpr.can_assignaBinExpruBaseclass for all binary expressions.TaleftarightuBinExpr.as_constaUnaryExpruBaseclass for all unary expressions.uUnaryExpr.as_constuLooks up a name or stores a value in a name.
    The `ctx` of the node can be one of the following values:

    -   `store`: store a value in the name
    -   `load`: load that name
    -   `param`: like `store` but if the name was defined as function parameter.
    TanameactxuName.can_assignaNSRefuReference to a namespace value assignmentTanameaattruNSRef.can_assignaLiteraluBaseclass for literals.aConstuAll constant values.  The parser will return this node for simple
    constants such as ``42`` or ``"foo"`` but it can be used to store more
    complex values such as lists too.  Only constants with a safe
    representation (objects where ``eval(repr(x)) == x`` is true).
    TavalueuConst.as_constaclassmethodut.Optional[Environment]afrom_untrusteduConst.from_untrustedaTemplateDatauA constant template string.TadatauTemplateData.as_constuFor loop unpacking and some other things like multiple arguments
    for subscripts.  Like for :class:`Name` `ctx` specifies if the tuple
    is used for loading the names or storing.
    TaitemsactxuTuple.as_constuTuple.can_assignuAny list literal such as ``[1, 2, 3]``TaitemsuList.as_constuAny dict literal such as ``{1: 2, 3: 4}``.  The items must be a list of
    :class:`Pair` nodes.
    aPairuDict.as_constuA key, value pair for dicts.TakeyavalueuPair.as_constaKeyworduA key, value pair for keyword arguments where key is a string.uKeyword.as_constaCondExpruA conditional expression (inline if expression).  (``{{
    foo if bar else baz }}``)
    Tatestaexpr1aexpr2uCondExpr.as_constTa_FilterTestCommonaCalla_FilterTestCommonTanodeanameaargsakwargsadyn_argsadyn_kwargsu_FilterTestCommon.as_constuApply a filter to an expression. ``name`` is the name of the
    filter, the other fields are the same as :class:`Call`.

    If ``node`` is ``None``, the filter is being used in a filter block
    and is applied to the content of the block.
    uFilter.as_constaTestuApply a test to an expression. ``name`` is the name of the test,
    the other field are the same as :class:`Call`.

    .. versionchanged:: 3.0
        ``as_const`` shares the same logic for filters and tests. Tests
        check for volatile, async, and ``@pass_context`` etc.
        decorators.
    uCalls an expression.  `args` is a list of arguments, `kwargs` a list
    of keyword arguments (list of :class:`Keyword` nodes), and `dyn_args`
    and `dyn_kwargs` has to be either `None` or a node that is used as
    node for dynamic positional (``*args``) or keyword (``**kwargs``)
    arguments.
    Tanodeaargsakwargsadyn_argsadyn_kwargsaGetitemuGet an attribute or item from an expression and prefer the item.TanodeaargactxuGetitem.as_constaGetattruGet an attribute or item from an expression that is a ascii-only
    bytestring and prefer the attribute.
    TanodeaattractxuGetattr.as_constaSliceuRepresents a slice object.  This must only be used as argument for
    :class:`Subscript`.
    TastartastopastepasliceuSlice.as_constaConcatuConcatenates the list of expressions provided after converting
    them to strings.
    uConcat.as_constaCompareuCompares an expression with some other expressions.  `ops` must be a
    list of :class:`Operand`\s.
    TaexpraopsaOperanduCompare.as_constuHolds an operator and an expression.TaopaexpraMuluMultiplies the left with the right node.aDivuDivides the left by the right node.aFloorDivuDivides the left by the right node and converts the
    result into an integer by truncating.
    aAdduAdd the left to the right node.aSubuSubtract the right from the left node.aModuLeft modulo right.aPowuLeft to the power of right.aAnduShort circuited AND.aanduAnd.as_constaOruShort circuited OR.aoruOr.as_constaNotuNegate the expression.aNeguMake the expression negative.aPosuMake the expression positive (noop for most expressions)aEnvironmentAttributeuLoads an attribute from the environment object.  This is useful for
    extensions that want to call a callback stored on the environment.
    TanameaExtensionAttributeuReturns the attribute of an extension bound to the environment.
    The identifier is the identifier of the :class:`Extension`.

    This node is usually constructed by calling the
    :meth:`~jinja2.ext.Extension.attr` method on an extension.
    TaidentifieranameaidentifieraImportedNameuIf created with an import name the import name is returned on node
    access.  For example ``ImportedName('cgi.escape')`` returns the `escape`
    function from the cgi module on evaluation.  Imports are optimized by the
    compiler so there is no need to assign them to local variables.
    TaimportnameaimportnameaInternalNameuAn internal name in the compiler.  You cannot create these nodes
    yourself but the parser provides a
    :meth:`~jinja2.parser.Parser.free_identifier` method that creates
    a new identifier for you.  This identifier is not available from the
    template and is not treated specially by the compiler.
    DareturnnuInternalName.__init__aMarkSafeuMark the wrapped expression as safe (wrap it as `Markup`).TaexpruMarkSafe.as_constaMarkSafeIfAutoescapeuMark the wrapped expression as safe (wrap it as `Markup`) but
    only if autoescaping is active.

    .. versionadded:: 2.5
    uMarkSafeIfAutoescape.as_constaContextReferenceuReturns the current template context.  It can be used like a
    :class:`Name` node, with a ``'load'`` ctx and will return the
    current :class:`~jinja2.runtime.Context` object.

    Here an example that assigns the current template name to a
    variable named `foo`::

        Assign(Name('foo', ctx='store'),
               Getattr(ContextReference(), 'name'))

    This is basically equivalent to using the
    :func:`~jinja2.pass_context` decorator when using the high-level
    API, which causes a reference to the context to be passed as the
    first argument to a function.
    aDerivedContextReferenceuReturn the current template context including locals. Behaves
    exactly like :class:`ContextReference`, but includes local
    variables, such as from a ``for`` loop.

    .. versionadded:: 2.11
    aContinueuContinue a loop.aBreakuBreak a loop.aScopeuAn artificial scope.aOverlayScopeuAn overlay scope for extensions.  This is a largely unoptimized scope
    that however can be used to introduce completely arbitrary variables into
    a sub scope from a dictionary or dictionary like object.  The `context`
    field has to evaluate to a dictionary object.

    Example usage::

        OverlayScope(context=self.call_method('get_context'),
                     body=[...])

    .. versionadded:: 2.10
    TacontextabodyaEvalContextModifieruModifies the eval context.  For each option that should be modified,
    a :class:`Keyword` has to be added to the :attr:`options` list.

    Example to change the `autoescape` setting::

        EvalContextModifier(options=[Keyword('autoescape', Const(True))])
    TaoptionsaoptionsaScopedEvalContextModifieruModifies the eval context and reverts it later.  Works exactly like
    :class:`EvalContextModifier` but will only modify the
    :class:`~jinja2.nodes.EvalContext` for nodes in the :attr:`body`.
    ute.NoReturna_failing_newujinja2\nodes.pyTa.0wxaeval_ctxTa.0waaselfTwawbu<module jinja2.nodes>Ta__class__TaselfaotherTaselfaenvironmentatemplate_nameTaselfTaselfafieldsaattributesanameaargaattrTamcsanameabaseswdastorageaattrTaselfaargs_strTanodeaidxafieldavalueaitemabufa_dumpTa_dumpabufTaargsakwargsTanodeaeval_ctxaargsakwargsweTaselfaeval_ctxTaselfaeval_ctxwfweTaselfaeval_ctxaresultavalueaopanew_valueweTaselfaeval_ctxa__class__Taselfaeval_ctxweTaselfaeval_ctxaexprTaselfaeval_ctxaconstTaselfaeval_ctxaenv_mapafuncapass_argaargsakwargsweTaselfaitemTaobjaeval_ctxTaselfabufa_dumpTaselfanode_typearesultTaselfanode_typeachildTaclsavaluealinenoaenvironmentahas_safe_reprTanodeactxTaselfaexcludeaonlyw_aitemwnTaselfaexcludeaonlyanameTaselfaoldTaselfactxatodoanodeTaselfaenvironmentatodoanodeTaselfalinenoaoverrideatodoanode.jinja2.optimizer9aOptimizeracastanodesaNodeavisituThe context hint can be used to perform an static optimization
    based on the context given.aenvironmenta__class__ageneric_visitaExpraConstafrom_untrustedaas_constlalinenoTalinenoaenvironmentaImpossibleuThe optimizer tries to constant fold expressions and modify the AST
in place so that it should be faster to evaluate.

Because the AST does not contain all the scoping information and the
compiler has to find that out, we cannot do all the optimizations we
want. For example, loop unrolling doesn't work because unrolled loops
would have a different scope. The solution would be a second syntax tree
that stored the scoping rules.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__wtuTanodeslavisitorTaNodeTransformeraNodeTransformeranodeaEnvironmentareturnaoptimizea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>ujinja2.optimizera__module__a__qualname__Daenvironmentareturnut.Optional[Environment]na__init__uOptimizer.__init__aargsaAnyakwargsuOptimizer.generic_visita__orig_bases__ujinja2\optimizer.pyu<module jinja2.optimizer>Ta__class__TaselfaenvironmentTaselfanodeaargsakwargsa__class__Tanodeaenvironmentaoptimizer.jinja2.parserz,aenvironmenta_tokenizeastreamanameafilenameaclosedaextensionsaiter_extensionsatagsaextensionaparseaselfla_last_identifiera_tag_stacka_end_token_stackacurrentalinenouConvenience method that raises `exc` with the message, passed
        line number or last line number as well as the current name and
        filename.
        aexpectedaupdateadescribe_token_expru or areprquUnexpected end of template.uEncountered unknown tag uw.uYou probably made a nesting mistake. Jinja is expecting this tag, but currently looking for uJinja was looking for the following tags: amessageaappenduThe innermost block that needs to be closed is afailw a_fail_ut_eofuCalled if the parser encounters an unknown tag.  Tries to fail
        with a human readable error message that could help to identify
        the problem.
        uLike fail_unknown_tag but for end of template situations.atypeTavariable_endablock_endarparenatest_anyuAre we at the end of a tuple?la__new__anodesaInternalNameaNodea__init__afiTalinenouReturn a new free identifier as :class:`~jinja2.nodes.InternalName`.utag name expectedavaluea_statement_keywordsaparse_acallaparse_call_blockafilteraparse_filter_blockagetapopafail_unknown_taguParse a single statement.askip_ifTacolonaexpectTablock_endasubparseaeofafail_eofuParse multiple statements into a list until one of the end tokens
        is reached.  This is used to parse the body of statements as it also
        parses template data if appropriate.  The parser checks first if the
        current token is a colon and skips it if there is one.  Then it checks
        for the block end and parses until if one of the `end_tokens` is
        reached.  Per default the active token in the stream at the end of
        the call is the matched end token.  If this is not wanted `drop_needle`
        can be set to `True` and the end token is removed.
        aparse_assign_targetTtTawith_namespaceTaassignaparse_tupleaAssignaparse_filterTnaparse_statementsTTuname:endsettTadrop_needleaAssignBlockuParse an assign statement.Tuname:forTTuname:inTaextra_end_rulesTuname:inTFTuname:recursiveTawith_condexpraextra_end_rulesTuname:ifaparse_expressionTuname:recursiveTTuname:endforuname:elseaendforTTuname:endfortaForuParse a for loop.aIfTFTawith_condexpranodeatestTTuname:elifuname:elseuname:endifabodyaelif_aelse_Tuname:elifaresultTuname:elseTTuname:endiftuParse an if construct.aWithablock_endatargetsTacommaaset_ctxTaparamavaluesTTuname:endwithtaScopedEvalContextModifieraKeywordaautoescapeaoptionsTTuname:endautoescapetaScopeaBlockTanameTuname:scopedascopedTuname:requiredarequiredasubTuBlock names in Jinja have to be valid Python identifiers and may not contain hyphens, use an underscore instead.TTuname:endblocktaOutputTuRequired blocks can only contain comments or whitespaceuname:aTemplateDataadataaisspaceu<genexpr>uParser.parse_block.<locals>.<genexpr>aExtendsatemplateTuname:withuname:withoutalookTuname:contextawithawith_contextaskipaIncludeTuname:ignoreTuname:missingaignore_missingTlaparse_import_contextaImportTuname:asTaname_onlyatargetaFromImportTuname:importanamesDareturnOboolaparse_contextuParser.parse_from.<locals>.parse_contextastartswithTw_unames starting with an underline can not be importedaTemplateAssertionErrorTaexcacommaPawithawithoutaargsadefaultsTalparenarparenTunon-default argument follows default argumentTarparenaCallBlockalparenaparse_signatureaCalluexpected callTTuname:endcalltaFilterBlockTntTastart_inlineTTuname:endfiltertaMacroTTuname:endmacrotadotaNSRefaNameastoreTasimplifiedaextra_end_rulesaparse_primaryTastoreacan_assignucan't assign to a__name__aloweruParse an assignment target.  As Jinja allows assignments to
        tuples, this function can parse all allowed assignment targets.  Per
        default assignments to tuples are parsed, that can be disable however
        by setting `with_tuple` to `False`.  If only assignments to names are
        wanted `name_only` can be set to `True`.  The `extra_end_rules`
        parameter is forwarded to the tuple parsing function.  If
        `with_namespace` is enabled, a namespace assignment may be parsed.
        aparse_condexpraparse_oruParse an expression.  Per default all expressions are parsed, if
        the optional `with_condexpr` parameter is set to `False` conditional
        expressions are not parsed.
        aCondExpraexpr1aparse_andTuname:oraOraleftaparse_notTuname:andaAndTuname:notaNotaparse_compareaparse_math1a_compare_operatorsaopsaOperandainanotinaCompareaparse_concatTaaddasuba_math_nodesaparse_math2atildeaConcataparse_powTamuladivafloordivamodaparse_unaryapowaPowaNegaaddaPosaparse_postfixaparse_filter_exprTatrueafalseaTrueaFalseaConstTatrueaTrueTanoneaNonealoadastringabufTaintegerafloatTaexplicit_parenthesesalbracketaparse_listalbraceaparse_dictuunexpected adescribe_tokenareturnaExpruParser.parse_tuple.<locals>.parseais_tuple_endaextra_end_rulesais_tupleuExpected an expression, got aTupleuWorks like `parse_expression` but if multiple expressions are
        delimited by a comma a :class:`~jinja2.nodes.Tuple` node is created.
        This method could also return a regular expression instead of a tuple
        if no commas where found.

        The default parsing mode is a full tuple.  If `simplified` is `True`
        only names and literals are parsed.  The `no_condexpr` parameter is
        forwarded to :meth:`parse_expression`.

        Because tuples do not require delimiters and may end in a bogus comma
        an extra hint is needed that marks the end of a tuple.  For example
        for loops support tuples between `for` and `in`.  In that case the
        `extra_end_rules` is set to ``['name:in']``.

        `explicit_parentheses` is true if the parsing was triggered by an
        expression in parentheses.  This is used to figure out if an empty
        tuple is a valid expression or not.
        TalbracketarbracketaitemsTarbracketaListTalbracearbraceaPairTarbraceaDictaparse_subscriptaparse_callapipeaisaparse_testaGetattraintegeruexpected name or numberaGetitemaparse_subscribeduexpected subscript expressionacolonTarbracketacommaaSliceDaexprareturnOboolnaensureuParser.parse_call_args.<locals>.ensurearequire_commaamuladyn_argsadyn_kwargsaassignakwargsuinvalid syntax for function call expressionatokenaparse_call_argsutoo many values to unpack (expected 4)astart_inlineaFilterPastringaintegeralbracketanameafloatalparenalbraceTuname:elseuname:oruname:andTuname:isTuYou cannot chain multiple tests with isaTestDareturnnaflush_datauParser.subparse.<locals>.flush_dataaadd_dataavariable_beginTavariable_endablock_beginaparse_statementaextenduinternal parsing erroradata_buffer:nnnaTemplateDalinenolaset_environmentuParse the whole template into a `Template` node.uParse tokens from the lexer into nodes for the compiler.a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__atypingwtTanodesaexceptionsTaTemplateAssertionErrorTaTemplateSyntaxErroraTemplateSyntaxErroralexerTadescribe_tokenTadescribe_token_expraTypeVara_ImportIncludea_MacroCallPamacroasetaforafromaautoescapeaifaimportaextendsaincludeaprintablockawithPaneagteqaeqaltagtalteqaAddaSubaMuladivaDivafloordivaFloorDivamodaModaTypeujinja2.parsera__module__uThis is the central parsing class Jinja uses.  It's passed to
    extensions and can be used to parse expressions or statements.
    aParsera__qualname__TnnnaEnvironmentasourceaOptionalastateuParser.__init__amsgaexcute.NoReturnuParser.failaend_token_stackTOstrQuParser._fail_ut_eofuParser.fail_unknown_tagTnnaend_tokensuParser.fail_eofuParser.is_tuple_endafree_identifieruParser.free_identifieraUnionuParser.parse_statementadrop_needleuParser.parse_statementsaparse_setuParser.parse_setaparse_foruParser.parse_foraparse_ifuParser.parse_ifaparse_withuParser.parse_withaparse_autoescapeuParser.parse_autoescapeaparse_blockuParser.parse_blockaparse_extendsuParser.parse_extendsadefaultuParser.parse_import_contextaparse_includeuParser.parse_includeaparse_importuParser.parse_importaparse_fromuParser.parse_fromuParser.parse_signatureuParser.parse_call_blockuParser.parse_filter_blockaparse_macrouParser.parse_macroaparse_printuParser.parse_printaoverloadTQQawith_tupleaname_onlyute.Literal[True]uParser.parse_assign_targetTtFnFawith_namespaceawith_condexpruParser.parse_expressionuParser.parse_condexpruParser.parse_oruParser.parse_anduParser.parse_notuParser.parse_compareuParser.parse_math1uParser.parse_concatuParser.parse_math2uParser.parse_powawith_filteruParser.parse_unaryuParser.parse_primaryTFtnFasimplifiedaexplicit_parenthesesuParser.parse_tupleuParser.parse_listuParser.parse_dictuParser.parse_postfixuParser.parse_filter_expruParser.parse_subscriptuParser.parse_subscribeduParser.parse_call_argsuParser.parse_calluParser.parse_filteruParser.parse_testuParser.subparseuParser.parseujinja2\parser.pyTa.0aoutput_nodeu<module jinja2.parser>Ta__class__TaselfaenvironmentasourceanameafilenameastateaextensionatagTaselfanameaend_token_stackalinenoaexpectedacurrently_lookingaexprsamessageTaexpraselfatokenTaselfatokenTaselfamsgalinenoaexcTaselfaend_tokensalinenoastackTaselfanamealinenoTalinenoadata_bufferabodyTabodyadata_bufferTaselfalinenoarvTaselfaextra_end_rulesTaselfaresultTaselfTaselfalinenoaleftarightTaselfawith_tupleaname_onlyTaselfawith_tupleaname_onlyaextra_end_rulesawith_namespaceTaselfawith_tupleaname_onlyaextra_end_rulesawith_namespaceatargetatokenaattrTaselfanodeTaselfanodeabody_nodeTaselfanodeatokenaargsakwargsadyn_argsadyn_kwargsT
aselfatokenaargsakwargsadyn_argsadyn_kwargsarequire_commaaensureakeyavalueTaselfanodeacall_nodeTaselfalinenoaexpraopsatoken_typeTaselfalinenoaargsTaselfaexpr3alinenoaexpr1aexpr2TanodeaselfTaselfaitemsatokenakeyavalueTaselfawith_condexprTaselfanodeastart_inlineatokenanameaargsakwargsadyn_argsadyn_kwargsTaselfanodeatoken_typeTaselfalinenoatargetaiteratestarecursiveabodyaelse_Taselfanodeaparse_contextatargetaaliasTaselfanodearesultatokenTaselfanodeadefaultTaselfaitemsatokenTaselfalinenoaleftaclsarightTaselfalinenoTaselfanodeatokenabufalinenoTaselfalinenoatargetaexprafilter_nodeabodyTaselfanodeaargsadefaultsaargTaselfatokenapop_tagwfaextTaselfaend_tokensadrop_needlearesultTaselfaargsalinenoanodeTaselfanodeaargaargsatokenaattr_tokenT
aselfanodeakwargsatokenanegatedanameadyn_argsadyn_kwargsaargsaarg_nodeTaselfasimplifiedawith_condexpraextra_end_rulesaexplicit_parenthesesaargsalinenoaparseais_tupleTaselfawith_filteranodeatoken_typealinenoTaselfatargetsavaluesanodeatargetTaselfaend_tokensabodyadata_bufferaadd_dataaflush_dataatokenarv.jinja2.runtimed<uReturns its argument. Useful for certain things in the
    environment.
    asoft_strabufa__html__aMarkupTuajoinachainaconcatuConcatenation that escapes if necessary and converts to string.uSimple args to string conversion and concatenation.aitemsutoo many values to unpack (expected 2)amissingaparentacontext_classTaglobalsuInternal helper for context creation.a_TemplateReference__contextablocksaBlockReferencelw<a__name__uw anamew>awrapsaselfaContextareturnaAnyaf_allu_dict_method_all.<locals>.f_allacastwFadict_methodaget_allavarsaenvironmentaEvalContextaeval_ctxaexported_varsaglobals_keysaindexlaundefineduthere is no parent block called w.DanameasuperuRender a parent block.uLook up a variable by name, or return a default if the key is
        not found.

        :param key: The variable name to look up.
        :param default: The value to return if the key is not found.
        aresolve_or_missingTanameuLook up a variable by name, or return an :class:`Undefined`
        object if the key is not found.

        If you need to add custom behavior, override
        :meth:`resolve_or_missing`, not this method. The various lookup
        functions use that method, not this one.

        :param key: The variable name to look up.
        uLook up a variable by name, or return a ``missing`` sentinel
        if the key is not found.

        Override this method to add custom lookup behavior.
        :meth:`resolve`, :meth:`get`, and :meth:`__getitem__` use this
        method. Don't call this method directly.

        :param key: The variable name to look up.
        uGet a new dict with the exported variables.uReturn the complete context as dict including the exported
        variables.  For optimizations reasons this might not return an
        actual copy so be careful with using it.
        a__call__a_PassArgafrom_obja_Context__objacontexta_loop_varsaderiveda_block_varsaeval_contextapopTa_loop_varsna_Context__selfTuvalue was undefined because a callable raised a StopIteration exceptionuCall the callable with the arguments and keyword arguments
        provided but inject the active context or environment as first
        argument if the callable has :func:`pass_context` or
        :func:`pass_environment`.
        anew_contextaupdateuInternal helper function to create a derived context.  This is
        used in situations where the system needs a new context in the same
        template that is independent.
        u<genexpr>uContext.derived.<locals>.<genexpr>uLook up a variable by name with ``[]`` syntax, or raise a
        ``KeyError`` if the key is not found.
        u of a_contexta_stacka_depthuSuper the block.aautoescapea_async_calluBlockReference._async_callais_asynca_iterablea_to_iteratora_iteratora_undefineda_recurseadepth0u
        :param iterable: Iterable to wrap.
        :param undefined: :class:`Undefined` class to use for next and
            previous items.
        :param recurse: The function to render the loop body when the
            loop is marked recursive.
        :param depth0: Incremented when looping recursively.
        a_lengtha_afteruLength of the iterable.

        If the iterable is a generator or otherwise does not have a
        size, it is eagerly evaluated to get a size.
        alengthuHow many levels deep a recursive loop currently is, starting at 1.aindex0uCurrent iteration of the loop, starting at 1.uNumber of iterations from the end of the loop, ending at 0.

        Requires calculating :attr:`length`.
        uNumber of iterations from the end of the loop, ending at 1.

        Requires calculating :attr:`length`.
        uWhether this is the first iteration of the loop.uReturn the next element in the iterable, or :data:`missing`
        if the iterable is exhausted. Only peeks one item ahead, caching
        the result in :attr:`_last` for use in subsequent checks. The
        cache is reset when :meth:`__next__` is called.
        a_peek_nextuWhether this is the last iteration of the loop.

        Causes the iterable to advance early. See
        :func:`itertools.groupby` for issues this can cause.
        The :func:`groupby` filter avoids that issue.
        afirstTuthere is no previous itema_beforeuThe item in the previous iteration. Undefined during the
        first iteration.
        Tuthere is no next itemuThe item in the next iteration. Undefined during the last
        iteration.

        Causes the iterable to advance early. See
        :func:`itertools.groupby` for issues this can cause.
        The :func:`jinja-filters.groupby` filter avoids that issue.
        uno items for cycling givenuReturn a value from the given args, cycling through based on
        the current :attr:`index0`.

        :param args: One or more values to cycle through.
        a_last_changed_valueuReturn ``True`` if previously called with a different value
        (including when called for the first time).

        :param value: One or more values to compare to the last call.
        a_currentuThe loop must have the 'recursive' marker to be called recursively.adepthTadepthuWhen iterating over nested data, render the body of the loop
        recursively with the given inner iterable data.

        The loop must have the ``recursive`` marker for this to work.
        w/aauto_aiteruAsyncLoopContext.lengtharevindex0uAsyncLoopContext.revindex0arevindexuAsyncLoopContext.revindexa__anext__uAsyncLoopContext._peek_nextalastuAsyncLoopContext.lastanextitemuAsyncLoopContext.nextitemuAsyncLoopContext.__anext__a_environmenta_funca_argument_countaargumentsacatch_kwargsacatch_varargsacalleraexplicit_calleracallableTna_default_autoescape:lnnakwargsafound_callerTuNo caller definedacalleraappendumacro u was invoked with two values for the special caller argument. This is most likely a bug.u takes no keyword argument u takes not more than u argument(s)a_invokea_async_invokeuMacro._async_invokeaanonymousa_undefined_hinta_undefined_obja_undefined_namea_undefined_exceptionu is undefinedaobject_type_repru has no element u has no attribute uBuild a message about the undefined value based on how it was
        accessed.
        a_undefined_messageuRaise an :exc:`UndefinedError` when operations are performed
        on the undefined value.
        :nlna__a_fail_with_undefined_errora__eq__a__iter__uUndefined.__iter__a__aiter__uUndefined.__aiter__aloggingagetLoggerTujinja2.runtimeaaddHandleraStreamHandlerastderraundefaUndefineda_log_messageumake_logging_undefined.<locals>._log_messagea__prepare__aLoggingUndefineda__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>ujinja2.runtimea__module__umake_logging_undefined.<locals>.LoggingUndefineda__qualname__a__slots__aargswtute.NoReturnumake_logging_undefined.<locals>.LoggingUndefined._fail_with_undefined_errorastra__str__umake_logging_undefined.<locals>.LoggingUndefined.__str__aIteratorumake_logging_undefined.<locals>.LoggingUndefined.__iter__aboola__bool__umake_logging_undefined.<locals>.LoggingUndefined.__bool__a__orig_bases__uGiven a logger object this returns a new undefined class that will
    log certain failures.  It will log iterations and printing.  If no
    logger is given a default logger is created.

    Example::

        logger = logging.getLogger(__name__)
        LoggingUndefined = make_logging_undefined(
            logger=logger,
            base=Undefined
        )

    .. versionadded:: 2.8

    :param logger: the logger to use.  If not provided, a default logger
                   is created.
    :param base: the base class to add logging functionality to.  This
                 defaults to :class:`Undefined`.
    aloggerawarninguTemplate variable warning: %sa__class__aerroruTemplate variable error: %suundefined value printed: uno such element: w[w]u{{ u }}uThe runtime functions and state used by compiled templates.a__doc__a__file__a__spec__aoriginahas_locationa__cached__afunctoolsasysacollectionsTaabcaabcaitertoolsTachainamarkupsafeTaescapeaescapeTaMarkupTasoft_straasync_utilsTaauto_aiterTaauto_awaitaauto_awaitaexceptionsTaTemplateNotFoundaTemplateNotFoundTaTemplateRuntimeErroraTemplateRuntimeErrorTaUndefinedErroraUndefinedErroranodesTaEvalContextautilsTa_PassArgTaconcatTainternalcodeainternalcodeTamissingTaNamespaceaNamespaceTaobject_type_reprTapass_eval_contextapass_eval_contextaTypeVarTwVwVaCallableTwFTaboundLaLoopContextaTemplateReferenceaMacroaMarkupaTemplateRuntimeErroramissingaescapeamarkup_joinastr_joinaidentityaTemplateNotFoundaNamespaceaUndefinedainternalcodeaexportedaAsyncLoopContextaasync_exportedwxaidentityaseqaIterableamarkup_joinastr_joinTnFnnaEnvironmentatemplate_nameaOptionalaDictasharedaglobalsaMutableMappingalocalsaMappinguThe `self` in templates.aTemplateReferenceDacontextareturnaContextna__init__uTemplateReference.__init__uTemplateReference.__getitem__DareturnOstra__repr__uTemplateReference.__repr__a_dict_method_allaregisteruThe template context holds the variables of a template.  It stores the
    values passed to the template and also the names the template exports.
    Creating instances is neither supported nor useful as it's created
    automatically at various stages of the template evaluation and should not
    be created by hand.

    The context is immutable.  Modifications on :attr:`parent` **must not**
    happen and modifications on :attr:`vars` are allowed from generated
    template code only.  Template filters and global functions marked as
    :func:`pass_context` get the active context passed as first argument
    and are allowed to access the context read-only.

    The template context supports read only dict operations (`get`,
    `keys`, `values`, `items`, `iterkeys`, `itervalues`, `iteritems`,
    `__getitem__`, `__contains__`).  Additionally there is a :meth:`resolve`
    method that doesn't fail with a `KeyError` but returns an
    :class:`Undefined` object for missing variables.
    uContext.__init__acurrentaUnionTaBlockReferenceaUndefinedasuperuContext.superakeyadefaultagetuContext.getaresolveuContext.resolveuContext.resolve_or_missingaget_exporteduContext.get_exporteduContext.get_allacalluContext.calluContext.derivedakeysavaluesDanameareturnOstrOboola__contains__uContext.__contains__uContext.__getitem__uContext.__repr__uOne block on a template reference.astackaListuBlockReference.__init__uBlockReference.superuBlockReference.__call__uA wrapper iterable for dynamic ``for`` loops, with information
    about the loop and iteration.
    aLoopContexta__annotations__qTnlaiterableaTypearecurseaLoopRenderFuncuLoopContext.__init__uLoopContext._to_iteratorDareturnOintuLoopContext.lengtha__len__uLoopContext.__len__uLoopContext.depthuLoopContext.indexuLoopContext.revindex0uLoopContext.revindexDareturnObooluLoopContext.firstuLoopContext._peek_nextuLoopContext.lastaprevitemuLoopContext.previtemuLoopContext.nextitemacycleuLoopContext.cycleavalueachangeduLoopContext.changedDareturnaLoopContextuLoopContext.__iter__aTuplea__next__uLoopContext.__next__uLoopContext.__call__uLoopContext.__repr__aAsyncIteratorastaticmethodaAsyncIterableuAsyncLoopContext._to_iteratorapropertyaintDareturnaAsyncLoopContextuAsyncLoopContext.__aiter__uWraps a macro function.aMacroafuncTQOstradefault_autoescapeuMacro.__init__uMacro.__call__uMacro._invokeuMacro.__repr__uThe default undefined type.  This undefined type can be printed and
    iterated over, but every other access will raise an :exc:`UndefinedError`:

    >>> foo = Undefined(name='foo')
    >>> str(foo)
    ''
    >>> not foo
    True
    >>> foo + 42
    Traceback (most recent call last):
      ...
    jinja2.exceptions.UndefinedError: 'foo' is undefined
    Ta_undefined_hinta_undefined_obja_undefined_namea_undefined_exceptionahintaobjaexcuUndefined.__init__uUndefined._undefined_messageuUndefined._fail_with_undefined_errora__getattr__uUndefined.__getattr__a__add__a__radd__a__sub__a__rsub__a__mul__a__rmul__a__div__a__rdiv__a__truediv__a__rtruediv__a__floordiv__a__rfloordiv__a__mod__a__rmod__a__pos__a__neg__a__lt__a__le__a__gt__a__ge__a__int__a__float__a__complex__a__pow__a__rpow__aotheruUndefined.__eq__a__ne__uUndefined.__ne__a__hash__uUndefined.__hash__uUndefined.__str__uUndefined.__len__uUndefined.__bool__uUndefined.__repr__ulogging.Loggerabaseamake_logging_undefinedaChainableUndefineduAn undefined that is chainable, where both ``__getattr__`` and
    ``__getitem__`` return itself rather than raising an
    :exc:`UndefinedError`.

    >>> foo = ChainableUndefined(name='foo')
    >>> str(foo.bar['baz'])
    ''
    >>> foo.bar['baz'] + 42
    Traceback (most recent call last):
      ...
    jinja2.exceptions.UndefinedError: 'foo' is undefined

    .. versionadded:: 2.11.0
    uChainableUndefined.__html__w_uChainableUndefined.__getattr__aDebugUndefineduAn undefined that returns the debug info when printed.

    >>> foo = DebugUndefined(name='foo')
    >>> str(foo)
    '{{ foo }}'
    >>> not foo
    True
    >>> foo + 42
    Traceback (most recent call last):
      ...
    jinja2.exceptions.UndefinedError: 'foo' is undefined
    uDebugUndefined.__str__aStrictUndefineduAn undefined that barks on print and iteration as well as boolean
    tests and all kinds of comparisons.  In other words: you can do nothing
    with it except checking if it's defined using the `defined` test.

    >>> foo = StrictUndefined(name='foo')
    >>> str(foo)
    Traceback (most recent call last):
      ...
    jinja2.exceptions.UndefinedError: 'foo' is undefined
    >>> not foo
    Traceback (most recent call last):
      ...
    jinja2.exceptions.UndefinedError: 'foo' is undefined
    >>> foo + 42
    Traceback (most recent call last):
      ...
    jinja2.exceptions.UndefinedError: 'foo' is undefined
    ujinja2\runtime.pyTa.0wkwvu<module jinja2.runtime>Ta__class__TaselfTaselfw_TaselfarvTaselfa_log_messagea__class__Ta__class__a_log_messageTaselfaiterableT
aselfaargsakwargsaautoescapeaargumentsaoffafound_calleranameavalueacallerTaselfanameTaselfaotherTaselfakeyaitemTaselfanameablocksTaselfanameacontextastackadepthTaselfaenvironmentaparentanameablocksaglobalsTaselfaiterableaundefinedarecurseadepth0Taselfaenvironmentafuncanameaargumentsacatch_kwargsacatch_varargsacalleradefault_autoescapeTaselfacontextTaselfahintaobjanameaexcTaselfamessageTaselfaargumentsaautoescapearvTadict_methodaf_allTaselfaargsakwargsTaselfaargsakwargswealoggera__class__Ta__class__aloggerTaundefaloggerTaloggerTaiterableTa_Context__selfa_Context__objaargsakwargsa__traceback_hide__apass_argTaselfavalueTaselfaargsTaselfalocalsacontextTaselfadict_methodTadict_methodTaselfakeyadefaultTwxTaloggerabasealogginga_log_messageaLoggingUndefinedTaseqabufaiteratoraargT
aenvironmentatemplate_nameablocksavarsasharedaglobalsalocalsaparentakeyavalueTaselfakeyarvTaselfakeyTaseqTaselfanameacurrentablocksaindex.jinja2.tests
lluReturn true if the variable is odd.luReturn true if the variable is even.uCheck if a variable is divisible by a number.aUndefineduReturn true if the variable is defined:

    .. sourcecode:: jinja

        {% if variable is defined %}
            value of variable: {{ variable }}
        {% else %}
            variable is not defined
        {% endif %}

    See the :func:`default` filter for a simple way to set undefined
    variables.
    uLike :func:`defined` but the other way round.afiltersuCheck if a filter exists by name. Useful if a filter may be
    optionally available.

    .. code-block:: jinja

        {% if 'markdown' is filter %}
            {{ value | markdown }}
        {% else %}
            {{ value }}
        {% endif %}

    .. versionadded:: 3.0
    atestsuCheck if a test exists by name. Useful if a test may be
    optionally available.

    .. code-block:: jinja

        {% if 'loud' is test %}
            {% if value is loud %}
                {{ value|upper }}
            {% else %}
                {{ value|lower }}
            {% endif %}
        {% else %}
            {{ value }}
        {% endif %}

    .. versionadded:: 3.0
    uReturn true if the variable is none.uReturn true if the object is a boolean value.

    .. versionadded:: 2.11
    uReturn true if the object is False.

    .. versionadded:: 2.11
    uReturn true if the object is True.

    .. versionadded:: 2.11
    uReturn true if the object is an integer.

    .. versionadded:: 2.11
    uReturn true if the object is a float.

    .. versionadded:: 2.11
    aisloweruReturn true if the variable is lowercased.aisupperuReturn true if the variable is uppercased.uReturn true if the object is a string.aabcaMappinguReturn true if the object is a mapping (dict etc.).

    .. versionadded:: 2.6
    aNumberuReturn true if the variable is a number.a__getitem__uReturn true if the variable is a sequence. Sequences are variables
    that are iterable.
    uCheck if an object points to the same memory address than another
    object:

    .. sourcecode:: jinja

        {% if foo.attribute is sameas false %}
            the foo attribute really is the `False` singleton
        {% endif %}
    uCheck if it's possible to iterate over an object.a__html__uCheck if the value is escaped.uCheck if value is in seq.

    .. versionadded:: 2.10
    uBuilt-in template tests used with the ``is`` operator.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aoperatorwtacollectionsTaabcanumbersTaNumberaruntimeTaUndefinedautilsTapass_environmentapass_environmentDavalueareturnOintOboolatest_oddatest_evenDavalueanumareturnOintpOboolatest_divisiblebyavalueaAnyareturnatest_definedatest_undefinedDaenvavalueareturnaEnvironmentOstrOboolatest_filteratest_testatest_noneatest_booleanatest_falseatest_trueatest_integeratest_floatDavalueareturnOstrOboolatest_loweratest_upperatest_stringatest_mappingatest_numberatest_sequenceaotheratest_sameasatest_iterableatest_escapedaseqaContaineratest_inaoddaevenadivisiblebyadefinedaundefinedafilteratestanoneabooleanafalseatrueaintegerafloataloweraupperastringamappinganumberasequenceaiterableacallableasameasaescapedainu==aeqaequaltou!=anew>agtagreaterthanageu>=w<altalessthanu<=aleaTESTSujinja2\tests.pyu<module jinja2.tests>TavalueTavalueanumTaenvavalueTavalueaseqTavalueaotheru.jinja2.utils8a_PassArgacontextajinja_pass_arguPass the :class:`~jinja2.runtime.Context` as the first argument
    to the decorated function when called while rendering a template.

    Can be used on functions, filters, and tests.

    If only ``Context.eval_context`` is needed, use
    :func:`pass_eval_context`. If only ``Context.environment`` is
    needed, use :func:`pass_environment`.

    .. versionadded:: 3.0.0
        Replaces ``contextfunction`` and ``contextfilter``.
    aeval_contextuPass the :class:`~jinja2.nodes.EvalContext` as the first argument
    to the decorated function when called while rendering a template.
    See :ref:`eval-context`.

    Can be used on functions, filters, and tests.

    If only ``EvalContext.environment`` is needed, use
    :func:`pass_environment`.

    .. versionadded:: 3.0.0
        Replaces ``evalcontextfunction`` and ``evalcontextfilter``.
    aenvironmentuPass the :class:`~jinja2.Environment` as the first argument to
    the decorated function when called while rendering a template.

    Can be used on functions, filters, and tests.

    .. versionadded:: 3.0.0
        Replaces ``environmentfunction`` and ``environmentfilter``.
    ainternal_codeaadda__code__uMarks the function as internally usedaruntimeTaUndefinedlaUndefinedluCheck if the object passed is undefined.  This does nothing more than
    performing an instance check against :class:`Undefined` but looks nicer.
    This can be used for custom filters or tests that want to react to
    undefined variables.  For example a custom default filter can look like
    this::

        def default(var, default=''):
            if is_undefined(var):
                return default
            return var
    uConsumes an iterable without doing anything with it.Taget_spontaneous_environmentaget_spontaneous_environmentalexerTa_lexer_cachea_lexer_cacheacache_clearaclearuJinja keeps internal caches for environments and lexers.  These are
    used so that Jinja doesn't have to recreate environments and lexers all
    the time.  Normally you don't have to care about that but if you are
    measuring memory consumption you may want to clean the caches.
    w:asplitTw:lutoo many values to unpack (expected 2)w.arpartitionTw.utoo many values to unpack (expected 3)TEImportErrorEAttributeErroruImports an object based on a string.  This is useful if you want to
    use import paths as endpoints or something similar.  An import path can
    be specified either in dotted notation (``xml.sax.saxutils.escape``)
    or with a colon as object delimiter (``xml.sax.saxutils:escape``).

    If the `silent` is True the return value will be `None` if the import
    fails.

    :return: imported object
    uReturns a file descriptor for the filename if that file exists,
    otherwise ``None``.
    aNoneaEllipsisa__module__abuiltinsa__name__uu objectuReturns the name of the object's type.  For some recognized
    singletons the name of the object is returned instead. (For
    example for `None` and `Ellipsis`).
    apprintTapformatapformatuFormat an object using :func:`pprint.pformat`.DwxareturnOstrpatrim_urluurlize.<locals>.trim_urlareu(\s+)amarkupsafeaescapeu rel="w"u target="amatchu^([(<]|&lt;)+agroupaendamiddleaendswithTTw)w>w.w,w
u&gt;asearchu([)>.,\n]|&gt;)+$astartTTw(w)Tw<w>Tu&lt;u&gt;acountaminatailaindexaend_chara_http_reastartswithTuhttps://Tuhttp://u<a href="w>u</a>u<a href="https://Tumailto:a_email_re:lnnu">w@Tuwww.u<a href="mailto:aextra_schemesawordsuConvert URLs in text into clickable links.

    This may not recognize links in some situations. Usually, a more
    comprehensive formatter, such as a Markdown library, is a better
    choice.

    Works on ``http://``, ``https://``, ``www.``, ``mailto:``, and email
    addresses. Links with trailing punctuation (periods, commas, closing
    parentheses) and leading punctuation (opening parentheses) are
    recognized excluding the punctuation. Email addresses that include
    header fields are not recognized (for example,
    ``mailto:address@example.com?cc=copy@example.com``).

    :param text: Original text containing URLs to link.
    :param trim_url_limit: Shorten displayed URL values to this length.
    :param target: Add the ``target`` attribute to links.
    :param rel: Add the ``rel`` attribute to links.
    :param extra_schemes: Recognize URLs that start with these schemes
        in addition to the default behavior.

    .. versionchanged:: 3.0
        The ``extra_schemes`` parameter was added.

    .. versionchanged:: 3.0
        Generate ``https://`` links for URLs without a scheme.

    .. versionchanged:: 3.0
        The parsing rules were updated. Recognize email addresses with
        or without the ``mailto:`` scheme. Validate IP addresses. Ignore
        parentheses and brackets in more cases.
    atrim_url_limitu...aconstantsTaLOREM_IPSUM_WORDSaLOREM_IPSUM_WORDSarandrangeamaxachoicealastanext_capitalizedacapitalizeTllalast_commaalast_fullstoplawordw,Tl
lwpw :nqnaresultu

aMarkupw
uGenerate some lorem ipsum for the template.u<p>u</p>u<genexpr>ugenerate_lorem_ipsum.<locals>.<genexpr>aencodecd/aquote_from_bytesareplaceTu%20w+uQuote a string for use in a URL using the given charset.

    :param obj: String or bytes to quote. Other types are converted to
        string then encoded to bytes using the given charset.
    :param charset: Encode text to bytes using this charset.
    :param for_qs: Quote "/" and use "+" for spaces.
    acapacitya_mappingadequea_queuea_postinitapoplefta_popleftapopa_poparemovea_removeaLocka_wlockaappenda_appendaupdateaextenduReturn a shallow copy of the instance.uReturn an item from the cache dict or `default`uSet `default` if the key is not in the cache otherwise
        leave unchanged. Return the value of this key.
        a__enter__a__exit__TnnnuClear the cache.uCheck if a key exists in this cache.uReturn the current size of the cache.w<quGet an item from the cache. Moves the item up so that it has the
        highest priority then.

        Raise a `KeyError` if it does not exist.
        uSets the value for an item. Moves the item up so that it
        has the highest priority then.
        uRemove an item from the cache dict.
        Raise a `KeyError` if it does not exist.
        aselfareverseuReturn a list of items.aitemsuReturn a list of all values.uReturn a list of all keys ordered by most recent usage.uIterate over the keys in the cache dict, oldest items
        coming first.
        atemplate_nameaOptionalareturnaautoescapeuselect_autoescape.<locals>.autoescapeuIntelligently sets the initial value of autoescaping based on the
    filename of the template.  This is the recommended way to configure
    autoescaping if you do not want to write a custom function yourself.

    If you want to enable it for all templates created from strings or
    for all templates with `.html` and `.xml` extensions::

        from jinja2 import Environment, select_autoescape
        env = Environment(autoescape=select_autoescape(
            enabled_extensions=('html', 'xml'),
            default_for_string=True,
        ))

    Example configuration to turn it on at all times except if the template
    ends with `.txt`::

        from jinja2 import Environment, select_autoescape
        env = Environment(autoescape=select_autoescape(
            disabled_extensions=('txt',),
            default_for_string=True,
            default=True,
        ))

    The `enabled_extensions` is an iterable of all the extensions that
    autoescaping should be enabled for.  Likewise `disabled_extensions` is
    a list of all templates it should be disabled for.  If a template is
    loaded from a string then the default from `default_for_string` is used.
    If nothing matches then the initial value of autoescaping is set to the
    value of `default`.

    For security reasons this function operates case insensitive.

    .. versionadded:: 2.9
    alstripaloweruselect_autoescape.<locals>.<genexpr>adefault_for_stringaenabled_patternsadisabled_patternsadefaultajsonadumpsTw<u\u003cTw>u\u003eTw&u\u0026Tw'u\u0027uSerialize an object to a string of JSON with :func:`json.dumps`,
    then replace HTML-unsafe characters with Unicode escapes and mark
    the result safe with :class:`~markupsafe.Markup`.

    This is available in templates as the ``|tojson`` filter.

    The following characters are escaped: ``<``, ``>``, ``&``, ``'``.

    The returned string is safe to render in HTML documents and
    ``<script>`` tags. The exception is in HTML attributes that are
    double quoted; either use single quotes or the ``|forceescape``
    filter.

    :param obj: The object to serialize to JSON.
    :param dumps: The ``dumps`` function to use. Defaults to
        ``env.policies["json.dumps_function"]``, which defaults to
        :func:`json.dumps`.
    :param kwargs: Extra arguments to pass to ``dumps``. Merged onto
        ``env.policies["json.dumps_kwargs"]``.

    .. versionchanged:: 3.0
        The ``dumper`` parameter is renamed to ``dumps``.

    .. versionadded:: 2.9
    uat least one item has to be providedaposuResets the current item to the first item.uReturn the current item. Equivalent to the item that will be
        returned next time :meth:`next` is called.
        acurrentuReturn the current item, then advance :attr:`current` to the
        next item.
        asepaused:lnna_Namespace__attrsPa_Namespace__attrsa__class__a__getattribute__u<Namespace a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aenumaoswtacollectionsTaabcaabcTadequearandomTachoiceTarandrangeathreadingTaLockaCodeTypeuurllib.parseTaquote_from_bytesaTypeVaraCallableaAnyTwFTaboundwFaMissingTypea__repr__amissingu<lambda>ujinja2.utilsaMutableSetajoinaconcatwfapass_contextapass_eval_contextapass_environmentaEnuma__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>a__qualname__aautoaclassmethodaobjafrom_obju_PassArg.from_obja__orig_bases__ainternalcodeais_undefinedaiterableaIterableaconsumeDareturnnaclear_cachesTFaimport_nameasilentaimport_stringTarbafilenameamodeaIOaopen_if_existsaobject_type_repracompileu
    ^
    (
        (https?://|www\.)  # scheme or www
        (([\w%-]+\.)+)?  # subdomain
        (
            [a-z]{2,63}  # basic tld
        |
            xn--[\w%]{2,59}  # idna tld
        )
    |
        ([\w%-]{2,63}\.)+  # basic domain
        (com|net|int|edu|gov|org|info|mil)  # basic tld
    |
        (https?://)  # scheme
        (
            (([\d]{1,3})(\.[\d]{1,3}){3})  # IPv4
        |
            (\[([\da-f]{0,4}:){2}([\da-f]{0,4}:?){1,6}])  # IPv6
        )
    )
    (?::[\d]{1,5})?  # port
    (?:[/?#]\S*)?  # path, query, and fragment
    $
    aIGNORECASEaVERBOSETu^\S+@\w[\w.-]*\.\w+$TnnnnatextarelatargetaurlizeTltlldDwnahtmlaminamaxareturnOintOboolOintpOstragenerate_lorem_ipsumTuutf-8Facharsetafor_qsaurl_quoteaMutableMappingaregisteruA simple LRU Cache implementation.aLRUCacheDacapacityareturnOintna__init__uLRUCache.__init__uLRUCache._postinitaMappinga__getstate__uLRUCache.__getstate__wda__setstate__uLRUCache.__setstate__aTuplea__getnewargs__uLRUCache.__getnewargs__DareturnaLRUCacheacopyuLRUCache.copyTnakeyagetuLRUCache.getasetdefaultuLRUCache.setdefaultuLRUCache.cleara__contains__uLRUCache.__contains__DareturnOinta__len__uLRUCache.__len__DareturnOstruLRUCache.__repr__uLRUCache.__getitem__avaluea__setitem__uLRUCache.__setitem__a__delitem__uLRUCache.__delitem__uLRUCache.itemsavaluesuLRUCache.valuesakeysuLRUCache.keysaIteratora__iter__uLRUCache.__iter__a__reversed__uLRUCache.__reversed__a__copy__TTahtmlahtmaxmlTtFaenabled_extensionsaCollectionadisabled_extensionsaselect_autoescapeTQOstrakwargsahtmlsafe_json_dumpsuCycle through values by yield them one at a time, then restarting
    once the end is reached. Available as ``cycler`` in templates.

    Similar to ``loop.cycle``, but can be used outside loops or across
    multiple loops. For example, render a list of folders and files in a
    list, alternating giving them "odd" and "even" classes.

    .. code-block:: html+jinja

        {% set row_class = cycler("odd", "even") %}
        <ul class="browser">
        {% for folder in folders %}
          <li class="folder {{ row_class.next() }}">{{ folder }}
        {% endfor %}
        {% for file in files %}
          <li class="file {{ row_class.next() }}">{{ file }}
        {% endfor %}
        </ul>

    :param items: Each positional argument will be yielded in the order
        given for each cycle.

    .. versionadded:: 2.1
    aCycleruCycler.__init__aresetuCycler.resetuCycler.currentanextuCycler.nexta__next__uA joining helper for templates.aJoinerTu, DasepareturnOstrnuJoiner.__init__a__call__uJoiner.__call__uA namespace object that can hold arbitrary attributes.  It may be
    initialized from a dictionary or with keyword arguments.aNamespaceaargsuNamespace.__init__anameuNamespace.__getattribute__uNamespace.__setitem__uNamespace.__repr__ujinja2\utils.pyTa.0wxTwxu<module jinja2.utils>Ta__class__TaselfTaselfakeyTaselfanameTaselfakeyarvTaselfaitemsTaselfasepTaselfacapacityTaargsakwargsaselfTaselfakeyavalueTaselfanameavalueTaselfwdTatemplate_nameadefault_for_stringaenabled_patternsadisabled_patternsadefaultTadefaultadefault_for_stringadisabled_patternsaenabled_patternsTaget_spontaneous_environmenta_lexer_cacheTaiterablew_TaselfarvTaclsaobjTwnahtmlaminamaxaLOREM_IPSUM_WORDSawordsaresultw_anext_capitalizedalast_commaalast_fullstopawordalastwpaidxap_strTaselfakeyadefaultTaobjadumpsakwargsTaimport_nameasilentamoduleaobjw_TwfTaobjaUndefinedTaselfaresultTaobjaclsTafilenameamodeTaobjapformatTaenabled_extensionsadisabled_extensionsadefault_for_stringadefaultaenabled_patternsadisabled_patternsaautoescapeTwxatrim_url_limitTatrim_url_limitTaobjacharsetafor_qsasafearvTatextatrim_url_limitarelatargetaextra_schemesatrim_urlawordsarel_attratarget_attrwiawordaheadamiddleatailamatchastart_charaend_charastart_countw_aend_indexascheme.jinja2.visitor(?avisit_a__name__uuReturn the visitor function for this node or `None` if no visitor
        exists for this node.  In that case the generic visit function is
        used instead.
        aget_visitorageneric_visituVisit a node.aiter_child_nodesaselfavisituCalled if no explicit visitor function exists for a node.aiter_fieldsutoo many values to unpack (expected 2)aNodeanew_values:nnnadelattruAs transformers may return lists in some places this method
        can be used to enforce a list as return value.
        uAPI for traversing the AST nodes. Implemented by the compiler and
meta introspection.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__wtanodesTaNodellujinja2.visitora__module__uWalks the abstract syntax tree and call visitor functions for every
    node found.  The visitor functions may return values which will be
    forwarded by the `visit` method.

    Per default the visitor functions for the nodes are ``'visit_'`` +
    class name of the node.  So a `TryFinally` node visit function would
    be `visit_TryFinally`.  This behavior can be changed by overriding
    the `get_visitor` function.  If no visitor function exists for a node
    (return value `None`) the `generic_visit` visitor is used instead.
    aNodeVisitora__qualname__anodeareturnut.Optional[VisitCallable]uNodeVisitor.get_visitoraargsaAnyakwargsuNodeVisitor.visituNodeVisitor.generic_visita__prepare__aNodeTransformera__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uWalks the abstract syntax tree and allows modifications of nodes.

    The `NodeTransformer` will walk the AST and use the return value of the
    visitor functions to replace or remove the old node.  If the return
    value of the visitor function is `None` the node will be removed
    from the previous location otherwise it's replaced with the return
    value.  The return value may be the original node in which case no
    replacement takes place.
    uNodeTransformer.generic_visitaListavisit_listuNodeTransformer.visit_lista__orig_bases__ujinja2\visitor.pyu<module jinja2.visitor>Ta__class__Taselfanodeaargsakwargsafieldaold_valueanew_valuesavalueanew_nodeTaselfanodeaargsakwargsachild_nodeTaselfanodeTaselfanodeaargsakwargswfTaselfanodeaargsakwargsarv.markupsafe._nativeareplaceTw&u&amp;Tw>u&gt;Tw<u&lt;Tw'u&#39;Tw"u&#34;a__doc__a__file__a__spec__aoriginahas_locationa__cached__DwsareturnOstrpa_escape_innerumarkupsafe\_native.pyu<module markupsafe._native>Twsu.markupsafe
aMarkupa_escape_innera__html__uReplace the characters ``&``, ``<``, ``>``, ``'``, and ``"`` in
    the string with HTML-safe sequences. Use this if you need to display
    text that might contain such characters in HTML.

    If the object has an ``__html__`` method, it is called and the
    return value is assumed to already be safe for HTML.

    :param s: An object to be converted to a string and escaped.
    :return: A :class:`Markup` string with the escaped text.
    aescapeuLike :func:`escape` but treats ``None`` as the empty string.
    Useful with optional values, as otherwise you get the string
    ``'None'`` when the value is ``None``.

    >>> escape(None)
    Markup('None')
    >>> escape_silent(None)
    Markup('')
    uConvert an object to a string if it isn't already. This preserves
    a :class:`Markup` string rather than converting it back to a basic
    string, so it will still be marked as safe and won't be escaped
    again.

    >>> value = escape("<User 1>")
    >>> value
    Markup('&lt;User 1&gt;')
    >>> escape(str(value))
    Markup('&amp;lt;User 1&amp;gt;')
    >>> escape(soft_str(value))
    Markup('&lt;User 1&gt;')
    a__class__a__new__a__add__a__mul__a__getitem__a_MarkupEscapeHelperaselfa__mod__u<genexpr>uMarkup.__mod__.<locals>.<genexpr>a__name__uw(a__repr__w)ajoinasplitarsplitasplitlinesahtmlTaunescapelaunescapeuConvert escaped markup back into a text string. This replaces
        HTML entities with the characters they represent.

        >>> Markup("Main &raquo; <em>About</em>").unescape()
        'Main » <em>About</em>'
        avalueafindTu<!--qu-->lTw<w>lw u:meth:`unescape` the markup, remove tags, and normalize
        whitespace to single spaces.

        >>> Markup("Main &raquo;<em>About</em>").striptags()
        'Main » About'
        uEscape a string. Calls :func:`escape` and ensures that for
        subclasses the correct type is returned.
        acapitalizeatitlealoweraupperareplacealjustarjustalstriparstripacenterastripatranslateaexpandtabsaswapcaseazfillacasefoldaremoveprefixaremovesuffixapartitionutoo many values to unpack (expected 3)arpartitionaEscapeFormatteravformatuUnsupported format specification for Markup.a__init__a__html_format__uFormat specifier u given, but u does not define __html_format__. A class that defines __html__ must define __html_format__ to work with format specifiers.aformat_fieldaobja__version__awarningsawarnTuThe '__version__' attribute is deprecated and will be removed in MarkupSafe 3.1. Use feature detection, or `importlib.metadata.version("markupsafe")`, instead.lTastacklevelu3.0.2a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_markupsafeu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationsucollections.abcaabcacabcastringwta_speedupsTa_escape_innera_nativeaProtocola__prepare__a_HasHTMLu%s.__prepare__() must return a mapping, not %su<metaclass>amarkupsafea__module__a__qualname__Dareturnastru_HasHTML.__html__a__orig_bases__a_TPEscapeDwsareturnut.AnyaMarkupa__call__u_TPEscape.__call__Dwsareturnut.Any | NoneaMarkupaescape_silentDwsareturnut.Anyastrasoft_strTOstruA string that is ready to be safely inserted into an HTML or XML
    document, either because it was escaped or because it was marked
    safe.

    Passing an object to the constructor converts it to text and wraps
    it to mark it safe without escaping. To escape the text, use the
    :meth:`escape` class method instead.

    >>> Markup("Hello, <em>World</em>!")
    Markup('Hello, <em>World</em>!')
    >>> Markup(42)
    Markup('42')
    >>> Markup.escape("Hello, <em>World</em>!")
    Markup('Hello &lt;em&gt;World&lt;/em&gt;!')

    This implements the ``__html__()`` interface that some frameworks
    use. Passing an object that implements ``__html__()`` will wrap the
    output of that method, marking it safe.

    >>> class Foo:
    ...     def __html__(self):
    ...         return '<a href="/foo">foo</a>'
    ...
    >>> Markup(Foo())
    Markup('<a href="/foo">foo</a>')

    This is a subclass of :class:`str`. It has the same methods, but
    escapes their arguments and returns a ``Markup`` instance.

    >>> Markup("<em>%s</em>") % ("foo & bar",)
    Markup('<em>foo &amp; bar</em>')
    >>> Markup("<em>Hello</em> ") + "<foo>"
    Markup('<em>Hello</em> &lt;foo&gt;')
    a__slots__TunastrictDaobjectaencodingaerrorsareturnut.Anyustr | Noneastrute.SelfuMarkup.__new__Dareturnute.SelfuMarkup.__html__Davalueareturnustr | _HasHTMLute.SelfuMarkup.__add__a__radd__uMarkup.__radd__Davalueareturnut.SupportsIndexute.SelfuMarkup.__mul__a__rmul__uMarkup.__rmul__Davalueareturnut.Anyute.SelfuMarkup.__mod__uMarkup.__repr__Daiterableareturnucabc.Iterable[str | _HasHTML]ute.SelfuMarkup.joinTnqDasepamaxsplitareturnustr | Noneut.SupportsIndexulist[te.Self]uMarkup.splituMarkup.rsplitTFDakeependsareturnaboolulist[te.Self]uMarkup.splitlinesuMarkup.unescapeastriptagsuMarkup.striptagsaclassmethodDwsareturnut.Anyute.SelfuMarkup.escapeDakeyareturnut.SupportsIndex | sliceute.SelfuMarkup.__getitem__uMarkup.capitalizeuMarkup.titleuMarkup.loweruMarkup.upperTqDaoldanewacountareturnastrput.SupportsIndexute.SelfuMarkup.replaceTw Dawidthafillcharareturnut.SupportsIndexastrute.SelfuMarkup.ljustuMarkup.rjustTnDacharsareturnustr | Noneute.SelfuMarkup.lstripuMarkup.rstripuMarkup.centeruMarkup.stripDatableareturnucabc.Mapping[int, str | int | None]astruMarkup.translateTlDatabsizeareturnut.SupportsIndexute.SelfuMarkup.expandtabsuMarkup.swapcaseDawidthareturnut.SupportsIndexute.SelfuMarkup.zfilluMarkup.casefoldDaprefixareturnastrute.SelfuMarkup.removeprefixDasuffixareturnastrute.SelfuMarkup.removesuffixDasepareturnastrutuple[te.Self, te.Self, te.Self]uMarkup.partitionuMarkup.rpartitionDaargsakwargsareturnut.Anyut.Anyute.SelfaformatuMarkup.formatDamappingareturnucabc.Mapping[str, t.Any]ute.Selfaformat_mapuMarkup.format_mapDaformat_specareturnastrute.SelfuMarkup.__html_format__aFormatterTaescapeDaescapeareturna_TPEscapeaNoneuEscapeFormatter.__init__Davalueaformat_specareturnut.AnyastrpuEscapeFormatter.format_fielduHelper for :meth:`Markup.__mod__`.TaobjaescapeDaobjaescapeareturnut.Anya_TPEscapeaNoneu_MarkupEscapeHelper.__init__Dakeyareturnut.Anyute.Selfu_MarkupEscapeHelper.__getitem__a__str__u_MarkupEscapeHelper.__str__u_MarkupEscapeHelper.__repr__Dareturnainta__int__u_MarkupEscapeHelper.__int__Dareturnafloata__float__u_MarkupEscapeHelper.__float__Danameareturnastrut.Anya__getattr__umarkupsafe\__init__.pyTa.0wxaselfTa__class__u<module markupsafe>Taselfavaluea__class__TaselfwsTaselfTanameaimportlibawarningsTaselfakeya__class__TaselfakeyTaselfaformat_specTaselfaescapea__class__TaselfaobjaescapeTaclsaobjectaencodingaerrorsa__class__TaselfavalueTaselfa__class__Taselfawidthafillchara__class__TaclswsarvTwsTaselfatabsizea__class__TaselfaargsakwargsaformatterTaselfavalueaformat_specarva__class__TaselfamappingaformatterTaselfaiterablea__class__Taselfacharsa__class__Taselfasepaleftarightaclsa__class__Taselfaprefixa__class__Taselfasuffixa__class__Taselfaoldanewacounta__class__Taselfasepamaxsplita__class__Taselfakeependsa__class__TaselfavalueastartaendTaselfatablea__class__TaselfaunescapeTaselfawidtha__class__.multiprocessing-postLoadoaim_selfagetattraim_classaim_funca__name__a__doc__a__file__a__spec__aoriginahas_locationa__cached__umultiprocessing.forkingTaForkingPicklerlaForkingPicklerumultiprocessing.reductionumultiprocessing-postLoada__module__wCa__qualname__wfuC.fa_reduce_compiled_methodaregisterumultiprocessing-postLoad.pyu<module multiprocessing-postLoad>Twmu.multiprocessing-preLoada__doc__a__file__a__spec__aoriginahas_locationa__cached__asysaoslafrozenaargvlaargv0aendswithTu.exeu.exea__nuitka_binary_exeaexecutablea_base_executableumultiprocessing-preLoad.pyu<module multiprocessing-preLoad>u.requests.__version__a__doc__a__file__a__spec__aoriginahas_locationa__cached__arequestsa__title__uPython HTTP for Humans.a__description__uhttps://requests.readthedocs.ioa__url__u2.25.1a__version__la__build__uKenneth Reitza__author__ume@kennethreitz.orga__author_email__uApache 2.0a__license__uCopyright 2020 Kenneth Reitza__copyright__u✨ 🍰 ✨a__cake__urequests\__version__.pyu<module requests.__version__>u.requests._internal_utils[abuiltin_strais_py2aencodeadecodeuGiven a string object, regardless of type, returns a representation of
    that string in the native string type, encoding and decoding where
    necessary. This assumes ASCII unless told otherwise.
    astrTaasciiuDetermine if unicode string only contains ASCII characters.

    :param str u_string: unicode string to check. Must be unicode
        and not Python 2 `str`.
    :rtype: bool
    u
requests._internal_utils
~~~~~~~~~~~~~~

Provides utility functions that are consumed internally by Requests
which depend on extremely few external helpers (such as compat)
a__doc__a__file__a__spec__aoriginahas_locationa__cached__acompatTais_py2abuiltin_strastrllato_native_stringaunicode_is_asciiurequests\_internal_utils.pyu<module requests._internal_utils>TastringaencodingaoutTau_stringu.requests.adapters/aInvalidSchemaTuMissing dependencies for SOCKS support.aBaseAdaptera__init__uSends PreparedRequest object. Returns Response object.

        :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
        :param stream: (optional) Whether to stream the request content.
        :param timeout: (optional) How long to wait for the server to send
            data before giving up, as a float, or a :ref:`(connect timeout,
            read timeout) <timeouts>` tuple.
        :type timeout: float or tuple
        :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use
        :param cert: (optional) Any user-provided SSL certificate to be trusted.
        :param proxies: (optional) The proxies dictionary to apply to the request.
        uCleans up adapter specific items.aDEFAULT_RETRIESaRetryTlFTareadamax_retriesafrom_intaselfaconfigaproxy_manageraHTTPAdaptera_pool_connectionsa_pool_maxsizea_pool_blockainit_poolmanagerTablocka__attrs__aitemsutoo many values to unpack (expected 2)aPoolManageranum_poolsamaxsizeablockastrictapoolmanageruInitializes a urllib3 PoolManager.

        This method should not be called from user code, and is only
        exposed for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param connections: The number of urllib3 connection pools to cache.
        :param maxsize: The maximum number of connections to save in the pool.
        :param block: Block when no free connections are available.
        :param pool_kwargs: Extra keyword arguments used to initialize the Pool Manager.
        alowerastartswithTasocksaget_auth_from_urlaSOCKSProxyManagerausernameapasswordaproxy_headersaproxy_from_urluReturn urllib3 ProxyManager for the given proxy.

        This method should not be called from user code, and is only
        exposed for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param proxy: The proxy to return a urllib3 ProxyManager for.
        :param proxy_kwargs: Extra keyword arguments used to configure the Proxy Manager.
        :returns: ProxyManager
        :rtype: urllib3.ProxyManager
        Tahttpsaextract_zipped_pathsaDEFAULT_CA_BUNDLE_PATHaosapathaexistsuCould not find a suitable TLS CA certificate bundle, invalid path: {}aCERT_REQUIREDacert_reqsaisdiraca_certsaca_cert_diraCERT_NONEabasestringlaconnacert_filelakey_fileuCould not find the TLS certificate file, invalid path: {}uCould not find the TLS key file, invalid path: {}uVerify a SSL certificate. This method should not be called from user
        code, and is only exposed for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param conn: The urllib3 connection object associated with the cert.
        :param url: The requested URL.
        :param verify: Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use
        :param cert: The SSL certificate to verify.
        aResponseastatusastatus_codeaCaseInsensitiveDictaheadersaget_encoding_from_headersaencodingarawareasonaurladecodeTuutf-8aextract_cookies_to_jaracookiesarequestaconnectionuBuilds a :class:`Response <requests.Response>` object from a urllib3
        response. This should not be called from user code, and is only exposed
        for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`

        :param req: The :class:`PreparedRequest <PreparedRequest>` used to generate the response.
        :param resp: The urllib3 response object.
        :rtype: requests.Response
        aselect_proxyaprepend_scheme_if_neededahttpaparse_urlahostaInvalidProxyURLTuPlease check proxy URL. It is malformed and could be missing the host.aproxy_manager_foraconnection_from_urlaurlparseageturluReturns a urllib3 connection for the given URL. This should not be
        called from user code, and is only exposed for use when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param url: The URL to connect to.
        :param proxies: (optional) A Requests-style dictionary of proxies used on this request.
        :rtype: urllib3.ConnectionPool
        aclearavaluesuDisposes of any internal state.

        Currently, this closes the PoolManager and any active ProxyManager,
        which closes any pooled connections.
        aschemeahttpsapath_urlaurldefragauthuObtain the url to use when making the final request.

        If the message is being sent through a HTTP proxy, the full URL has to
        be used. Otherwise, we should only use the path portion of the URL.

        This should not be called from user code, and is only exposed for use
        when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
        :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs.
        :rtype: str
        a_basic_auth_struProxy-AuthorizationuReturns a dictionary of the headers to add to any request sent
        through a proxy. This works with urllib3 magic to ensure that they are
        correctly sent to the proxy, rather than in a tunnelled request if
        CONNECT is being used.

        This should not be called from user code, and is only exposed for use
        when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param proxy: The url of the proxy being used for this request.
        :rtype: dict
        aget_connectionaLocationValueErroraInvalidURLTarequestacert_verifyarequest_urlaadd_headersTastreamatimeoutaverifyacertaproxiesabodyuContent-LengthaTimeoutSauceTaconnectareaduInvalid timeout {}. Pass a (connect, read) timeout tuple, or a single float to set both timeouts to the same valueaurlopenamethodatimeoutT
amethodaurlabodyaheadersaredirectaassert_same_hostapreload_contentadecode_contentaretriesatimeoutaproxy_poola_get_connaDEFAULT_POOL_TIMEOUTTatimeoutaputrequestDaskip_accept_encodingtalow_connaputheaderaendheadersasend:lnnaencodeTc
Tc0

agetresponseTtTabufferingaHTTPResponseafrom_httplibTapoolaconnectionapreload_contentadecode_contentacloseaProtocolErrorasocketaerroraConnectionErroraMaxRetryErroraConnectTimeoutErroraNewConnectionErroraConnectTimeoutaResponseErroraRetryErrora_ProxyErroraProxyErrora_SSLErroraSSLErroraClosedPoolErrora_HTTPErroraReadTimeoutErroraReadTimeoutabuild_responseuSends PreparedRequest object. Returns Response object.

        :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.
        :param stream: (optional) Whether to stream the request content.
        :param timeout: (optional) How long to wait for the server to send
            data before giving up, as a float, or a :ref:`(connect timeout,
            read timeout) <timeouts>` tuple.
        :type timeout: float or tuple or urllib3 Timeout object
        :param verify: (optional) Either a boolean, in which case it controls whether
            we verify the server's TLS certificate, or a string, in which case it
            must be a path to a CA bundle to use
        :param cert: (optional) Any user-provided SSL certificate to be trusted.
        :param proxies: (optional) The proxies dictionary to apply to the request.
        :rtype: requests.Response
        u
requests.adapters
~~~~~~~~~~~~~~~~~

This module contains the transport adapters that Requests uses to define
and maintain connections.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uos.pathuurllib3.poolmanagerTaPoolManageraproxy_from_urluurllib3.responseTaHTTPResponseuurllib3.utilTaparse_urlTaTimeoutaTimeoutuurllib3.util.retryTaRetryuurllib3.exceptionsTaClosedPoolErrorTaConnectTimeoutErrorTaHTTPErroraHTTPErrorTaMaxRetryErrorTaNewConnectionErrorTaProxyErrorTaProtocolErrorTaReadTimeoutErrorTaSSLErrorTaResponseErrorTaLocationValueErroramodelsTaResponseacompatTaurlparseabasestringautilsTaDEFAULT_CA_BUNDLE_PATHaextract_zipped_pathsaget_encoding_from_headersaprepend_scheme_if_neededaget_auth_from_urlaurldefragauthaselect_proxyastructuresTaCaseInsensitiveDictTaextract_cookies_to_jaraexceptionsTaConnectionErroraConnectTimeoutaReadTimeoutaSSLErroraProxyErroraRetryErroraInvalidSchemaaInvalidProxyURLaInvalidURLaauthTa_basic_auth_struurllib3.contrib.socksTaSOCKSProxyManageraDEFAULT_POOLBLOCKl
aDEFAULT_POOLSIZETOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests.adaptersa__module__uThe Base Transport Adaptera__qualname__uBaseAdapter.__init__TFntnnuBaseAdapter.senduBaseAdapter.closea__orig_bases__uThe built-in HTTP Adapter for urllib3.

    Provides a general-case interface for Requests sessions to contact HTTP and
    HTTPS urls by implementing the Transport Adapter interface. This class will
    usually be created by the :class:`Session <Session>` class under the
    covers.

    :param pool_connections: The number of urllib3 connection pools to cache.
    :param pool_maxsize: The maximum number of connections to save in the pool.
    :param max_retries: The maximum number of retries each connection
        should attempt. Note, this applies only to failed DNS lookups, socket
        connections and connection timeouts, never to requests where data has
        made it to the server. By default, Requests does not retry failed
        connections. If you need granular control over the conditions under
        which we retry a request, import urllib3's ``Retry`` class and pass
        that instead.
    :param pool_block: Whether the connection pool should block for connections.

    Usage::

      >>> import requests
      >>> s = requests.Session()
      >>> a = requests.adapters.HTTPAdapter(max_retries=3)
      >>> s.mount('http://', a)
    Lamax_retriesaconfiga_pool_connectionsa_pool_maxsizea_pool_blockuHTTPAdapter.__init__a__getstate__uHTTPAdapter.__getstate__a__setstate__uHTTPAdapter.__setstate__uHTTPAdapter.init_poolmanageruHTTPAdapter.proxy_manager_foruHTTPAdapter.cert_verifyuHTTPAdapter.build_responseTnuHTTPAdapter.get_connectionuHTTPAdapter.closeuHTTPAdapter.request_urluAdd any headers needed by the connection. As of v2.0 this does
        nothing by default, but is left for overriding by users that subclass
        the :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        This should not be called from user code, and is only exposed for use
        when subclassing the
        :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.

        :param request: The :class:`PreparedRequest <PreparedRequest>` to add headers to.
        :param kwargs: The keyword arguments from the call to send().
        uHTTPAdapter.add_headersuHTTPAdapter.proxy_headersuHTTPAdapter.sendurequests\adapters.pyu<module requests.adapters>Ta__class__TaargsakwargsTaselfTaselfa__class__Taselfapool_connectionsapool_maxsizeamax_retriesapool_blocka__class__TaselfastateaattravalueTaselfarequestakwargsTaselfareqaresparesponseTaselfaconnaurlaverifyacertacert_locTaselfaproxyTaselfaurlaproxiesaproxyaproxy_urlaproxy_manageraconnaparsedTaselfaconnectionsamaxsizeablockapool_kwargsTaselfaproxyaheadersausernameapasswordTaselfaproxyaproxy_kwargsamanagerausernameapasswordaproxy_headersTaselfarequestaproxiesaproxyaschemeais_proxied_http_requestausing_socks_proxyaproxy_schemeaurlTaselfarequestastreamatimeoutaverifyacertaproxiesTaselfarequestastreamatimeoutaverifyacertaproxiesaconnweaurlachunkedaconnectareadaerrarespalow_connaheaderavaluewiwru.requests.api/asessionsaSessiona__enter__a__exit__arequestamethodaurlTnnnuConstructs and sends a :class:`Request <Request>`.

    :param method: method for the new :class:`Request` object: ``GET``, ``OPTIONS``, ``HEAD``, ``POST``, ``PUT``, ``PATCH``, or ``DELETE``.
    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary, list of tuples or bytes to send
        in the query string for the :class:`Request`.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.
    :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.
    :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.
    :param files: (optional) Dictionary of ``'name': file-like-objects`` (or ``{'name': file-tuple}``) for multipart encoding upload.
        ``file-tuple`` can be a 2-tuple ``('filename', fileobj)``, 3-tuple ``('filename', fileobj, 'content_type')``
        or a 4-tuple ``('filename', fileobj, 'content_type', custom_headers)``, where ``'content-type'`` is a string
        defining the content type of the given file and ``custom_headers`` a dict-like object containing additional headers
        to add for the file.
    :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.
    :param timeout: (optional) How many seconds to wait for the server to send data
        before giving up, as a float, or a :ref:`(connect timeout, read
        timeout) <timeouts>` tuple.
    :type timeout: float or tuple
    :param allow_redirects: (optional) Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to ``True``.
    :type allow_redirects: bool
    :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.
    :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use. Defaults to ``True``.
    :param stream: (optional) if ``False``, the response content will be immediately downloaded.
    :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response

    Usage::

      >>> import requests
      >>> req = requests.request('GET', 'https://httpbin.org/get')
      >>> req
      <Response [200]>
    aallow_redirectsagetaparamsuSends a GET request.

    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary, list of tuples or bytes to send
        in the query string for the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    aoptionsuSends an OPTIONS request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    aheaduSends a HEAD request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes. If
        `allow_redirects` is not provided, it will be set to `False` (as
        opposed to the default :meth:`request` behavior).
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    apostadataajsonuSends a POST request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) json data to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    aputuSends a PUT request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) json data to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    apatchuSends a PATCH request.

    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, list of tuples, bytes, or file-like
        object to send in the body of the :class:`Request`.
    :param json: (optional) json data to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    adeleteuSends a DELETE request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    u
requests.api
~~~~~~~~~~~~

This module implements the Requests API.

:copyright: (c) 2012 by Kenneth Reitz.
:license: Apache2, see LICENSE for more details.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uTasessionsllTnTnnurequests\api.pyu<module requests.api>TaurlakwargsTaurlaparamsakwargsTaurladataakwargsTaurladataajsonakwargsTamethodaurlakwargsasession.requests.authabasestringawarningsawarnuNon-string usernames will no longer be supported in Requests 3.0.0. Please convert the object you've passed in ({!r}) to a string or bytes object in the near future to avoid problems.aDeprecationWarningTacategoryastruNon-string passwords will no longer be supported in Requests 3.0.0. Please convert the object you've passed in ({!r}) to a string or bytes object in the near future to avoid problems.aencodeTalatin1uBasic ato_native_stringab64encoded:astripuReturns a Basic Auth string.uAuth hooks must be callable.ausernameapassworda_basic_auth_straheadersaAuthorizationuProxy-Authorizationathreadingalocala_thread_localainitualast_noncelanonce_countachalaposanum_401_callsarealmanonceagetTaqopTaalgorithmTaopaqueaMD5aupperuMD5-SESSamd5_utf8uHTTPDigestAuth.build_digest_header.<locals>.md5_utf8aSHAasha_utf8uHTTPDigestAuth.build_digest_header.<locals>.sha_utf8uSHA-256asha256_utf8uHTTPDigestAuth.build_digest_header.<locals>.sha256_utf8uSHA-512asha512_utf8uHTTPDigestAuth.build_digest_header.<locals>.sha512_utf8u<lambda>uHTTPDigestAuth.build_digest_header.<locals>.<lambda>aurlparseapathw/aqueryw?u%s:%s:%su%s:%slu%08xTuutf-8atimeactimeaurandomTlahashlibasha1ahexdigest:nlnaauthasplitTw,u%s:%s:%s:%s:%suusername="%s", realm="%s", nonce="%s", uri="%s", response="%s"u, opaque="%s"u, algorithm="%s"u, qop="auth", nc=%s, cnonce="%s"uDigest %su
        :rtype: str
        amd5asha256asha512ahash_utf8ais_redirectuReset num_401_calls counter on redirects.astatus_codellarequestabodyaseekTuwww-authenticateuadigestalowerlareacompileaIGNORECASETudigest Taflagsaparse_dict_headerasubDacountlacontentacloseacopyaextract_cookies_to_jara_cookiesarawaprepare_cookiesabuild_digest_headeramethodaurlaconnectionasendahistoryaappendu
        Takes the given response and tries digest-auth, if needed.

        :rtype: requests.Response
        ainit_per_thread_stateatellaregister_hookaresponseahandle_401ahandle_redirectu
requests.auth
~~~~~~~~~~~~~

This module contains the authentication handlers for Requests.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosabase64Tab64encodeacompatTaurlparseastrabasestringacookiesTaextract_cookies_to_jara_internal_utilsTato_native_stringautilsTaparse_dict_headeruapplication/x-www-form-urlencodedaCONTENT_TYPE_FORM_URLENCODEDumultipart/form-dataaCONTENT_TYPE_MULTI_PARTTOobjecta__prepare__aAuthBasea__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests.autha__module__uBase class that all auth implementations derive froma__qualname__a__call__uAuthBase.__call__a__orig_bases__aHTTPBasicAuthuAttaches HTTP Basic Authentication to the given Request object.a__init__uHTTPBasicAuth.__init__a__eq__uHTTPBasicAuth.__eq__a__ne__uHTTPBasicAuth.__ne__uHTTPBasicAuth.__call__aHTTPProxyAuthuAttaches HTTP Proxy Authentication to a given Request object.uHTTPProxyAuth.__call__aHTTPDigestAuthuAttaches HTTP Digest Authentication to the given Request object.uHTTPDigestAuth.__init__uHTTPDigestAuth.init_per_thread_stateuHTTPDigestAuth.build_digest_headeruHTTPDigestAuth.handle_redirectuHTTPDigestAuth.handle_401uHTTPDigestAuth.__call__uHTTPDigestAuth.__eq__uHTTPDigestAuth.__ne__urequests\auth.pyTwswdahash_utf8Tahash_utf8u<module requests.auth>Ta__class__TaselfwrTaselfaotherTaselfausernameapasswordTausernameapasswordaauthstrTaselfamethodaurlarealmanonceaqopaalgorithmaopaqueahash_utf8a_algorithmamd5_utf8asha_utf8asha256_utf8asha512_utf8aKDaentdigap_parsedapathaA1aA2aHA1aHA2ancvaluewsacnoncearespdiganoncebitabaseTaselfwrakwargsas_authapataprepa_rTaselfwrakwargsTaselfTwx.requests.certsu
requests.certs
~~~~~~~~~~~~~~

This module returns the preferred default CA certificate bundle. There is
only one — the one from the certifi package.

If you are packaging Requests, e.g., for a Linux distribution or a managed
environment, you can change the definition of where() to return a separately
packaged CA bundle.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__acertifiTawherelawhereurequests\certs.pyu<module requests.certs>u.requests.compat=u
requests.compat
~~~~~~~~~~~~~~~

This module handles import compatibility issues between Python 2 and
Python 3.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__achardetlasysa_verais_py2ais_py3asimplejsonajsonuurllib.parseT
aurlparseaurlunparseaurljoinaurlsplitaurlencodeaquoteaunquoteaquote_plusaunquote_plusaurldefragaurlparseaurlunparseaurljoinaurlsplitaurlencodeaquoteaunquoteaquote_plusaunquote_plusaurldefraguurllib.requestTaparse_http_listagetproxiesaproxy_bypassaproxy_bypass_environmentagetproxies_environmentaparse_http_listagetproxiesaproxy_bypassaproxy_bypass_environmentagetproxies_environmentahttpTacookiejaracookiejaracookielibuhttp.cookiesTaMorselaMorselaStringIOacollectionsTaOrderedDictaOrderedDictucollections.abcTaCallableaMappingaMutableMappingaCallableaMappingaMutableMappingastrabuiltin_strabytesabasestringTOintOfloatanumeric_typesTOintainteger_typesurequests\compat.pyu<module requests.compat>u.requests.
tasplitTw.adevaappendTw0utoo many values to unpack (expected 3)lll:nlnTlllTllplluOld version of cryptography ({}) may cause slowdown.awarningsawarnaRequestsDependencyWarningu
Requests HTTP Library
~~~~~~~~~~~~~~~~~~~~~

Requests is an HTTP library, written in Python, for human beings.
Basic GET usage:

   >>> import requests
   >>> r = requests.get('https://www.python.org')
   >>> r.status_code
   200
   >>> b'Python is a programming language' in r.content
   True

... or POST:

   >>> payload = dict(key1='value1', key2='value2')
   >>> r = requests.post('https://httpbin.org/post', data=payload)
   >>> print(r.text)
   {
     ...
     "form": {
       "key1": "value1",
       "key2": "value2"
     },
     ...
   }

The other HTTP methods are supported - see `requests.api`. Full documentation
is at <https://requests.readthedocs.io>.

:copyright: (c) 2017 by Kenneth Reitz.
:license: Apache 2.0, see LICENSE for more details.
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_requestsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aurllib3lachardetaexceptionsTaRequestsDependencyWarningacheck_compatibilitya_check_cryptographya__version__TEAssertionErrorEValueErroruurllib3 ({}) or chardet ({}) doesn't match a supported version!asslaHAS_SNIuurllib3.contribTapyopensslapyopensslainject_into_urllib3acryptographyTa__version__acryptography_versionuurllib3.exceptionsTaDependencyWarningaDependencyWarningasimplefilteraignoreTa__title__a__description__a__url__a__version__a__title__a__description__a__url__Ta__build__a__author__a__author_email__a__license__a__build__a__author__a__author_email__a__license__Ta__copyright__a__cake__a__copyright__a__cake__uTautilsautilsTapackagesapackagesamodelsTaRequestaResponseaPreparedRequestaRequestaResponseaPreparedRequestaapiTarequestagetaheadapostapatchaputadeleteaoptionsarequestaheadapostapatchaputadeleteaoptionsasessionsTasessionaSessionasessionaSessionastatus_codesTacodesacodesTaRequestExceptionaTimeoutaURLRequiredaTooManyRedirectsaHTTPErroraConnectionErroraFileModeWarningaConnectTimeoutaReadTimeoutaRequestExceptionaTimeoutaURLRequiredaTooManyRedirectsaHTTPErroraConnectionErroraFileModeWarningaConnectTimeoutaReadTimeoutaloggingTaNullHandleraNullHandleragetLoggerTarequestsaaddHandleradefaultDaappendturequests\__init__.pyu<module requests>Tacryptography_versionawarningTaurllib3_versionachardet_versionamajoraminorapatch.requests.cookiesH+a_ra_new_headersaurlparseaurlaschemeatypeanetlocaget_hostaheadersagetTaHostato_native_stringaHostDaencodinguutf-8aurlunparseapathaparamsaqueryafragmentuCookie headers should be added with add_unredirected_header()ucookielib has no legitimate use for this method; add it back if you find one.ais_unverifiableaget_origin_req_hosta_headersuMake a MockResponse for `cookielib` to read.

        :param headers: a httplib.HTTPMessage or analogous carrying the headers
        agetheadersa_original_responseaMockRequestaMockResponseamsgaextract_cookiesuExtract the cookies from the response into a CookieJar.

    :param jar: cookielib.CookieJar (not necessarily a RequestsCookieJar)
    :param request: our own requests.Request object
    :param response: urllib3.HTTPResponse object
    aadd_cookie_headeraget_new_headersTaCookieu
    Produce an appropriate Cookie header string to be sent with `request`, or None.

    :rtype: str
    anameadomainaclearablesutoo many values to unpack (expected 3)acookiejaraclearuUnsets a cookie by name, by default over all domains and paths.

    Wraps CookieJar.clear(), is O(n).
    a_find_no_duplicatesuDict-like get() that also supports optional domain and path args in
        order to resolve naming collisions from using one cookie jar over
        multiple domains.

        .. warning:: operation is O(n), not O(1).
        aremove_cookie_by_nameTadomainapathaMorselamorsel_to_cookieacreate_cookieaset_cookieuDict-like set() that also supports optional domain and path args in
        order to resolve naming collisions from using one cookie jar over
        multiple domains.
        uDict-like iterkeys() that returns an iterator of names of cookies
        from the jar.

        .. seealso:: itervalues() and iteritems().
        aselfaiterkeysuRequestsCookieJar.iterkeysuDict-like keys() that returns a list of names of cookies from the
        jar.

        .. seealso:: values() and items().
        uDict-like itervalues() that returns an iterator of values of cookies
        from the jar.

        .. seealso:: iterkeys() and iteritems().
        avalueaitervaluesuRequestsCookieJar.itervaluesuDict-like values() that returns a list of values of cookies from the
        jar.

        .. seealso:: keys() and items().
        uDict-like iteritems() that returns an iterator of name-value tuples
        from the jar.

        .. seealso:: iterkeys() and itervalues().
        aiteritemsuRequestsCookieJar.iteritemsuDict-like items() that returns a list of name-value tuples from the
        jar. Allows client-code to call ``dict(RequestsCookieJar)`` and get a
        vanilla python dict of key value pairs.

        .. seealso:: keys() and values().
        adomainsuUtility method to list all the domains in the jar.apathsuUtility method to list all the paths in the jar.uReturns True if there are multiple domains in the jar.
        Returns False otherwise.

        :rtype: bool
        adictionaryuTakes as an argument an optional domain and path and returns a plain
        old Python dict of name-value pairs of cookies that meet the
        requirements.

        :rtype: dict
        aRequestsCookieJara__contains__aCookieConflictErroruDict-like __getitem__() for compatibility with client code. Throws
        exception if there are more than one cookie with name. In that case,
        use the more explicit get() method instead.

        .. warning:: operation is O(n), not O(1).
        asetuDict-like __setitem__ for compatibility with client code. Throws
        exception if there is already a cookie of that name in the jar. In that
        case, use the more explicit set() method instead.
        uDeletes a cookie given a name. Wraps ``cookielib.CookieJar``'s
        ``remove_cookie_by_name()``.
        astartswithTw"aendswithareplaceTu\"uacookielibaCookieJaracopyaupdateuUpdates this jar with cookies from another CookieJar or dict-likeuname=%r, domain=%r, path=%ruRequests uses this method internally to get cookie values.

        If there are conflicting cookies, _find arbitrarily chooses one.
        See _find_no_duplicates if you want an exception thrown if there are
        conflicting cookies.

        :param name: a string containing name of cookie
        :param domain: (optional) string containing domain of cookie
        :param path: (optional) string containing path of cookie
        :return: cookie.value
        atoReturnuThere are multiple cookies with name, %ruBoth ``__get_item__`` and ``get`` call this function: it's never
        used elsewhere in Requests.

        :param name: a string containing name of cookie
        :param domain: (optional) string containing domain of cookie
        :param path: (optional) string containing path of cookie
        :raises KeyError: if cookie is not found
        :raises CookieConflictError: if there are multiple cookies
            that match name and optionally domain and path
        :return: cookie.value
        apopTa_cookies_lockuUnlike a normal CookieJar, this class is pickleable.a_cookies_lockathreadingaRLockaset_policyaget_policyuReturn a copy of this RequestsCookieJar.a_policyuReturn the CookiePolicy instance used.anew_jaraversionlaportuw/asecureaexpiresadiscardacommentacomment_urlarestDaHttpOnlynarfc2109ucreate_cookie() got unexpected keyword arguments: %saport_specifiedadomain_specifiedTw.adomain_initial_dotapath_specifiedaCookieuMake a cookie from underspecified parameters.

    By default, the pair of `name` and `value` will be set for the domain ''
    and sent on every request (this is sometimes called a "supercookie").
    umax-ageatimeumax-age: %s must be integeracalendaratimegmastrptimeu%a, %d-%b-%Y %H:%M:%S GMTakeyaHttpOnlyahttponlyT
acommentacomment_urladiscardadomainaexpiresanameapathaportarestarfc2109asecureavalueaversionuConvert a Morsel object into a Cookie containing the one k/v pair.uReturns a CookieJar from a key/value dictionary.

    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :param cookiejar: (optional) A cookiejar to add the cookies to.
    :param overwrite: (optional) If False, will not replace cookies
        already in the jar with new ones.
    :rtype: CookieJar
    uYou can only merge into CookieJaracookiejar_from_dictTacookiejaraoverwriteuAdd cookies to cookiejar and returns a merged CookieJar.

    :param cookiejar: CookieJar object to add the cookies to.
    :param cookies: Dictionary or CookieJar object to be added.
    :rtype: CookieJar
    u
requests.cookies
~~~~~~~~~~~~~~~~

Compatibility code to be able to use `cookielib.CookieJar` with requests.

requests.utils imports from here, so be careful with imports.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a_internal_utilsTato_native_stringlacompatTacookielibaurlparseaurlunparseaMorselaMutableMappingaMutableMappingadummy_threadingTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests.cookiesa__module__uWraps a `requests.Request` to mimic a `urllib2.Request`.

    The code in `cookielib.CookieJar` expects this interface in order to correctly
    manage cookie policies, i.e., determine whether a cookie can be set, given the
    domains of the request and the cookie.

    The original request object is read-only. The client is responsible for collecting
    the new headers via `get_new_headers()` and interpreting them appropriately. You
    probably want `get_cookie_header`, defined below.
    a__qualname__a__init__uMockRequest.__init__aget_typeuMockRequest.get_typeuMockRequest.get_hostuMockRequest.get_origin_req_hostaget_full_urluMockRequest.get_full_urluMockRequest.is_unverifiableahas_headeruMockRequest.has_headerTnaget_headeruMockRequest.get_headeraadd_headeruMockRequest.add_headeraadd_unredirected_headeruMockRequest.add_unredirected_headeruMockRequest.get_new_headersapropertyaunverifiableuMockRequest.unverifiableaorigin_req_hostuMockRequest.origin_req_hostahostuMockRequest.hosta__orig_bases__uWraps a `httplib.HTTPMessage` to mimic a `urllib.addinfourl`.

    ...what? Basically, expose the parsed HTTP headers from the server response
    the way `cookielib` expects to see them.
    uMockResponse.__init__ainfouMockResponse.infouMockResponse.getheadersaextract_cookies_to_jaraget_cookie_headerTnnTERuntimeErroruThere are two cookies that meet the criteria specified in the cookie jar.
    Use .get and .set and include domain and path args in order to be more specific.
    uCompatibility class; is a cookielib.CookieJar, but exposes a dict
    interface.

    This is the CookieJar we create by default for requests and sessions that
    don't specify one, since some clients may expect response.cookies and
    session.cookies to support dict operations.

    Requests does not use the dict interface internally; it's just for
    compatibility with external client code. All requests code should work
    out of the box with externally provided instances of ``CookieJar``, e.g.
    ``LWPCookieJar`` and ``FileCookieJar``.

    Unlike a regular CookieJar, this class is pickleable.

    .. warning:: dictionary operations that are normally O(1) may be O(n).
    TnnnuRequestsCookieJar.getuRequestsCookieJar.setakeysuRequestsCookieJar.keysavaluesuRequestsCookieJar.valuesaitemsuRequestsCookieJar.itemsalist_domainsuRequestsCookieJar.list_domainsalist_pathsuRequestsCookieJar.list_pathsamultiple_domainsuRequestsCookieJar.multiple_domainsaget_dictuRequestsCookieJar.get_dictuRequestsCookieJar.__contains__uRequestsCookieJar.__getitem__a__setitem__uRequestsCookieJar.__setitem__a__delitem__uRequestsCookieJar.__delitem__uRequestsCookieJar.set_cookieuRequestsCookieJar.updatea_finduRequestsCookieJar._finduRequestsCookieJar._find_no_duplicatesa__getstate__uRequestsCookieJar.__getstate__a__setstate__uRequestsCookieJar.__setstate__uRequestsCookieJar.copyuRequestsCookieJar.get_policya_copy_cookie_jarTntamerge_cookiesurequests\cookies.pyu<module requests.cookies>Ta__class__Taselfanamea__class__TaselfanameTaselfastateTaselfarequestTaselfaheadersTaselfanameavalueTajaranew_jaracookieTaselfanameadomainapathacookieTaselfanameadomainapathatoReturnacookieTaselfakeyavalTacookie_dictacookiejaraoverwriteanames_from_jaranameTaselfanew_cjTanameavalueakwargsaresultabadargsaerrTajararequestaresponseareqaresTaselfanameadefaultadomainapathTajararequestwrTaselfadomainapathadictionaryacookieTaselfahostaparsedTaselfanameadefaultTaselfTaselfacookieTaselfadomainsacookieTaselfapathsacookieTacookiejaracookiesacookie_in_jarTamorselaexpiresatime_templateTacookiejaranameadomainapathaclearablesacookieTaselfanameavalueakwargswcTaselfacookieaargsakwargsa__class__Taselfaotheracookiea__class__.requests.exceptionsQaresponseapopTarequestnarequestaRequestExceptiona__init__uInitialize RequestException with `request` and `response` objects.u
requests.exceptions
~~~~~~~~~~~~~~~~~~~

This module contains the set of Requests' exceptions.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__uurllib3.exceptionsTaHTTPErrorlaHTTPErroraBaseHTTPErrorTEOSErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests.exceptionsa__module__uThere was an ambiguous exception that occurred while handling your
    request.
    a__qualname__uRequestException.__init__a__orig_bases__uAn HTTP error occurred.aConnectionErroruA Connection error occurred.aProxyErroruA proxy error occurred.aSSLErroruAn SSL error occurred.aTimeoutuThe request timed out.

    Catching this error will catch both
    :exc:`~requests.exceptions.ConnectTimeout` and
    :exc:`~requests.exceptions.ReadTimeout` errors.
    aConnectTimeoutuThe request timed out while trying to connect to the remote server.

    Requests that produced this error are safe to retry.
    aReadTimeoutuThe server did not send any data in the allotted amount of time.aURLRequireduA valid URL is required to make a request.aTooManyRedirectsuToo many redirects.aMissingSchemauThe URL schema (e.g. http or https) is missing.aInvalidSchemauSee defaults.py for valid schemas.aInvalidURLuThe URL provided was somehow invalid.aInvalidHeaderuThe header value provided was somehow invalid.aInvalidProxyURLuThe proxy URL provided is invalid.aChunkedEncodingErroruThe server declared chunked encoding but sent an invalid chunk.aContentDecodingErroruFailed to decode response content.aStreamConsumedErroruThe content for this response was already consumed.aRetryErroruCustom retries logic failedaUnrewindableBodyErroruRequests encountered an error when trying to rewind a body.aWarningaRequestsWarninguBase warning for Requests.aDeprecationWarningaFileModeWarninguA file was opened in text mode, but Requests determined its binary length.aRequestsDependencyWarninguAn imported dependency doesn't match the expected version range.urequests\exceptions.pyu<module requests.exceptions>Ta__class__Taselfaargsakwargsaresponsea__class__u.requests.hooksaHOOKSageta__call__ahook_datauDispatches a hook dictionary on a given piece of data.u
requests.hooks
~~~~~~~~~~~~~~

This module provides the capabilities for the Requests hooks system.

Available hooks:

``response``:
    The response generated from a Request.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aresponseadefault_hooksadispatch_hookurequests\hooks.pyu<module requests.hooks>Takeyahooksahook_dataakwargsahooka_hook_datau.requests.models5aurlsplitaurlapathw/aqueryw?uuBuild the path URL to use.astrabytesareada__iter__ato_key_val_listutoo many values to unpack (expected 2)abasestringaresultwkaencodeTuutf-8aurlencodeDadoseqtuEncode parameters in a piece of data.

        Will successfully encode parameters when passed as a dict or a list of
        2-tuples. Order is retained if data is a list of 2-tuples but arbitrary
        if parameters are supplied as a dict.
        uFiles must be provided.uData must not be a string.anew_fieldsafieldadecodeTOtupleOlistutoo many values to unpack (expected 3)utoo many values to unpack (expected 4)aguess_filenameaRequestFieldTanameadataafilenameaheadersamake_multipartTacontent_typeaencode_multipart_formdatauBuild the body for a multipart/form-data request.

        Will successfully encode files when passed as a dict or a list of
        tuples. Order is retained if data is a list of tuples but arbitrary
        if parameters are supplied as a dict.
        The tuples may be 2-tuples (filename, fileobj), 3-tuples (filename, fileobj, contentype)
        or 4-tuples (filename, fileobj, contentype, custom_headers).
        ahooksuUnsupported event specified, with event name "%s"aCallableaappendaextenduProperly register a hook.u<genexpr>uRequestHooksMixin.register_hook.<locals>.<genexpr>aremoveuDeregister a previously registered hook.
        Returns True if the hook existed, False if not.
        adefault_hooksaitemsaselfaregister_hookTaeventahookamethodaheadersafilesadataajsonaparamsaauthacookiesu<Request [%s]>aPreparedRequestaprepareT
amethodaurlaheadersafilesadataajsonaparamsaauthacookiesahooksuConstructs a :class:`PreparedRequest <PreparedRequest>` for transmission and returns it.a_cookiesabodya_body_positionaprepare_methodaprepare_urlaprepare_headersaprepare_cookiesaprepare_bodyaprepare_authaprepare_hooksuPrepares the entire request with the given parameters.u<PreparedRequest [%s]>acopya_copy_cookie_jarato_native_stringaupperuPrepares the given HTTP method.aidnalDauts46taIDNAErrorTautf8ais_py2aunicodealstripw:alowerastartswithTahttpaparse_urlutoo many values to unpack (expected 7)aLocationParseErroraInvalidURLaargsuInvalid URL {0!r}: No schema supplied. Perhaps you meant http://{0}?autf8aMissingSchemauInvalid URL %r: No host suppliedaunicode_is_asciia_get_idna_encoded_hostTuURL has an invalid label.Tw*w@ahosta_encode_paramsu%s&%sarequote_uriaurlunparseuPrepares the given HTTP URL.aCaseInsensitiveDictacheck_header_validityuPrepares the given HTTP headers.uapplication/jsonacomplexjsonadumpsaMappingasuper_lenaUnsupportedOperationatellTEOSErrorpuStreamed bodies and files are mutually exclusive.abuiltin_struContent-LengthachunkeduTransfer-Encodinga_encode_filesuapplication/x-www-form-urlencodedaprepare_content_lengthucontent-typeuContent-TypeuPrepares the given HTTP body data.TaGETaHEADagetTuContent-Lengthw0uPrepare Content-Length header based on request method and bodyaget_auth_from_urlaHTTPBasicAuthaupdateuPrepares the given HTTP auth data.acookielibaCookieJaracookiejar_from_dictaget_cookie_headeraCookieuPrepares the given HTTP cookie data.

        This function eventually generates a ``Cookie`` header from the
        given cookies using cookielib. Due to cookielib's design, the header
        will not be regenerated if it already exists, meaning this function
        can only be called once for the life of the
        :class:`PreparedRequest <PreparedRequest>` object. Any subsequent calls
        to ``prepare_cookies`` will have no actual effect, unless the "Cookie"
        header is removed beforehand.
        uPrepares the given hooks.a_contenta_content_consumeda_nextastatus_codearawaencodingahistoryareasonadatetimeatimedeltaTlaelapsedarequestacloseacontenta__attrs__u<Response [%s]>aokuReturns True if :attr:`status_code` is less than 400.

        This attribute checks if the status code of the response is between
        400 and 600 to see if there was a client error or a server error. If
        the status code, is between 200 and 400, this will return True. This
        is **not** a check to see if the response code is ``200 OK``.
        aiter_contentTluAllows you to use a response as an iterator.araise_for_statusaHTTPErroruReturns True if :attr:`status_code` is less than 400, False if not.

        This attribute checks if the status code of the response is between
        400 and 600 to see if there was a client error or a server error. If
        the status code is between 200 and 400, this will return True. This
        is **not** a check to see if the response code is ``200 OK``.
        alocationaREDIRECT_STATIuTrue if this Response is a well-formed HTTP redirect that could have
        been processed automatically (by :meth:`Session.resolve_redirects`).
        acodesamoved_permanentlyapermanent_redirectuTrue if this Response one of the permanent versions of redirect.uReturns a PreparedRequest for the next request in a redirect chain, if there is one.achardetadetectuThe apparent encoding, provided by the chardet library.agenerateuResponse.iter_content.<locals>.generateaStreamConsumedErroruchunk_size must be an int, it is instead a %s.aiter_slicesastream_decode_response_unicodeuIterates over the response data.  When stream=True is set on the
        request, this avoids reading the content at once into memory for
        large responses.  The chunk size is the number of bytes it should
        read into memory.  This is not necessarily the length of each item
        returned as decoding can take place.

        chunk_size must be of type int or None. A value of None will
        function differently depending on the value of `stream`.
        stream=True will read data as it arrives in whatever size the
        chunks are received. If stream=False, data is returned as
        a single chunk.

        If decode_unicode is True, content will be decoded using the best
        available encoding based on the response.
        astreamachunk_sizeDadecode_contenttaProtocolErroraChunkedEncodingErroraDecodeErroraContentDecodingErroraReadTimeoutErroraConnectionErroruIterates over the response data, one line at a time.  When
        stream=True is set on the request, this avoids reading the
        content at once into memory for large responses.

        .. note:: This method is not reentrant safe.
        adecode_unicodeTachunk_sizeadecode_unicodeapendingadelimiterasplitasplitlinesqachunkapopaiter_linesuResponse.iter_linesuThe content for this response was already consumedcaCONTENT_CHUNK_SIZEuContent of the response, in bytes.Tuaapparent_encodingDaerrorsareplaceTELookupErrorETypeErroruContent of the response, in unicode.

        If Response.encoding is None, encoding will be guessed using
        ``chardet``.

        The encoding of the response content is determined based solely on HTTP
        headers, following RFC 2616 to the letter. If you can take advantage of
        non-HTTP knowledge to make a better guess at the encoding, you should
        set ``r.encoding`` appropriately before accessing this property.
        aguess_json_utfaloadsatextuReturns the json-encoded content of a response, if any.

        :param \*\*kwargs: Optional arguments that ``json.loads`` takes.
        :raises ValueError: If the response body does not contain valid json.
        Talinkaparse_header_linksTarelTaurlwluReturns the parsed header links of the response, if any.Tuiso-8859-1llu%s Client Error: %s for url: %slu%s Server Error: %s for url: %sTaresponseuRaises :class:`HTTPError`, if one occurred.arelease_connuReleases the connection back to the pool. Once this method has been
        called the underlying ``raw`` object must not be accessed again.

        *Note: Should not normally need to be called explicitly.*
        u
requests.models
~~~~~~~~~~~~~~~

This module contains the primary objects that power Requests.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysuencodings.idnaaencodingsuurllib3.fieldsTaRequestFielduurllib3.filepostTaencode_multipart_formdatauurllib3.utilTaparse_urluurllib3.exceptionsTaDecodeErroraReadTimeoutErroraProtocolErroraLocationParseErrorTadefault_hookslastructuresTaCaseInsensitiveDictTaHTTPBasicAuthTacookiejar_from_dictaget_cookie_headera_copy_cookie_jaraexceptionsTaHTTPErroraMissingSchemaaInvalidURLaChunkedEncodingErroraContentDecodingErroraConnectionErroraStreamConsumedErrora_internal_utilsTato_native_stringaunicode_is_asciiautilsT
aguess_filenameaget_auth_from_urlarequote_uriastream_decode_response_unicodeato_key_val_listaparse_header_linksaiter_slicesaguess_json_utfasuper_lenacheck_header_validityacompatTaCallableaMappingacookielibaurlunparseaurlsplitaurlencodeastrabytesais_py2achardetabuiltin_strabasestringTajsonastatus_codesTacodesamovedafoundaotheratemporary_redirectlaDEFAULT_REDIRECT_LIMITlPlaITER_CHUNK_SIZETOobjecta__prepare__aRequestEncodingMixina__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests.modelsa__module__a__qualname__apropertyapath_urluRequestEncodingMixin.path_urlastaticmethoduRequestEncodingMixin._encode_paramsuRequestEncodingMixin._encode_filesa__orig_bases__aRequestHooksMixinuRequestHooksMixin.register_hookaderegister_hookuRequestHooksMixin.deregister_hookaRequestuA user-created :class:`Request <Request>` object.

    Used to prepare a :class:`PreparedRequest <PreparedRequest>`, which is sent to the server.

    :param method: HTTP method to use.
    :param url: URL to send.
    :param headers: dictionary of headers to send.
    :param files: dictionary of {filename: fileobject} files to multipart upload.
    :param data: the body to attach to the request. If a dictionary or
        list of tuples ``[(key, value)]`` is provided, form-encoding will
        take place.
    :param json: json for the body to attach to the request (if files or data is not specified).
    :param params: URL parameters to append to the URL. If a dictionary or
        list of tuples ``[(key, value)]`` is provided, form-encoding will
        take place.
    :param auth: Auth handler or (user, pass) tuple.
    :param cookies: dictionary or CookieJar of cookies to attach to this request.
    :param hooks: dictionary of callback hooks, for internal usage.

    Usage::

      >>> import requests
      >>> req = requests.Request('GET', 'https://httpbin.org/get')
      >>> req.prepare()
      <PreparedRequest [GET]>
    T
nnnnnnnnnna__init__uRequest.__init__a__repr__uRequest.__repr__uRequest.prepareuThe fully mutable :class:`PreparedRequest <PreparedRequest>` object,
    containing the exact bytes that will be sent to the server.

    Instances are generated from a :class:`Request <Request>` object, and
    should not be instantiated manually; doing so may produce undesirable
    effects.

    Usage::

      >>> import requests
      >>> req = requests.Request('GET', 'https://httpbin.org/get')
      >>> r = req.prepare()
      >>> r
      <PreparedRequest [GET]>

      >>> s = requests.Session()
      >>> s.send(r)
      <Response [200]>
    uPreparedRequest.__init__uPreparedRequest.prepareuPreparedRequest.__repr__uPreparedRequest.copyuPreparedRequest.prepare_methoduPreparedRequest._get_idna_encoded_hostuPreparedRequest.prepare_urluPreparedRequest.prepare_headersTnuPreparedRequest.prepare_bodyuPreparedRequest.prepare_content_lengthuPreparedRequest.prepare_authuPreparedRequest.prepare_cookiesuPreparedRequest.prepare_hooksaResponseuThe :class:`Response <Response>` object, which contains a
    server's response to an HTTP request.
    L
a_contentastatus_codeaheadersaurlahistoryaencodingareasonacookiesaelapsedarequestuResponse.__init__a__enter__uResponse.__enter__a__exit__uResponse.__exit__a__getstate__uResponse.__getstate__a__setstate__uResponse.__setstate__uResponse.__repr__a__bool__uResponse.__bool__a__nonzero__uResponse.__nonzero__uResponse.__iter__uResponse.okais_redirectuResponse.is_redirectais_permanent_redirectuResponse.is_permanent_redirectanextuResponse.nextuResponse.apparent_encodingTlFuResponse.iter_contentuResponse.contentuResponse.textuResponse.jsonalinksuResponse.linksuResponse.raise_for_statusuResponse.closeurequests\models.pyTa.0whu<module requests.models>Ta__class__TaselfTaselfaargsT
aselfamethodaurlaheadersafilesadataaparamsaauthacookiesahooksajsonwkwvTaselfastateanameavalueTafilesadataanew_fieldsafieldsafieldavalwvwkaftafhafnafpafdataarfabodyacontent_typeTadataaresultwkavswvTahostaidnaTaselfarelease_connTaselfwpTaselfaeventahookTachunkweaselfachunk_sizeTachunk_sizeaselfTaselfachunk_sizeadecode_unicodeagenerateareused_chunksastream_chunksachunksTaselfachunk_sizeadecode_unicodeadelimiterapendingachunkalinesalineTaselfakwargsaencodingTaselfaheaderwlalinksalinkakeyTaselfaurlwpapathaqueryTaselfamethodaurlaheadersafilesadataaparamsaauthacookiesahooksajsonTaselfaauthaurlaurl_authwrTaselfadataafilesajsonabodyacontent_typeais_streamalengthTaselfabodyalengthTaselfacookiesacookie_headerTaselfaheadersaheaderanameavalueTaselfahooksaeventTaselfamethodTaselfaurlaparamsaschemeaauthahostaportapathaqueryafragmentweaerroranetlocaenc_paramsTaselfahttp_error_msgareasonTaselfacontentaencoding.requests.packagesa__doc__a__file__a__spec__aoriginahas_locationa__cached__asysTaurllib3aidnaachardetapackageamodulesamodastartswithw.urequests.packages.urequests\packages.pyu<module requests.packages>u.requests.sessions835aMappingato_key_val_listaupdateaitemsutoo many values to unpack (expected 2)uDetermines appropriate setting for a given request, taking into account
    the explicit setting on that request, and the setting in the session. If a
    setting is a dictionary, they will be merged together using `dict_class`
    agetTaresponseamerge_settinguProperly merges both requests and session hooks.

    This is necessary because when request_hooks == {'response': []}, the
    merge breaks Session hooks entirely.
    ais_redirectaheadersalocationais_py3aencodeTalatin1ato_native_stringautf8uReceives a Response. Returns a redirect URI or ``None``aurlparseahostnameaschemeahttpaportTlPnahttpsTlnaDEFAULT_PORTSuDecide whether Authorization header should be removed when redirectinguReceives a Response. Returns a generator of Responses or Requests.aselfaget_redirect_targetarespareqaurlafragmentacopyahist:lnnahistoryacontentaChunkedEncodingErroraContentDecodingErrorarawareadTFTadecode_contentamax_redirectsaTooManyRedirectsuExceeded {} redirects.acloseastartswithTu//w:uaprevious_fragmenta_replaceTafragmentaparsedageturlanetlocaurljoinarequote_uriarebuild_methodastatus_codeacodesatemporary_redirectapermanent_redirectTuContent-LengthuContent-TypeuTransfer-Encodingaprepared_requestapopabodyTaCookienaextract_cookies_to_jara_cookiesamerge_cookiesacookiesaprepare_cookiesarebuild_proxiesaproxiesarebuild_autha_body_positionuContent-LengthuTransfer-Encodingarewind_bodyayield_requestsasendastreamatimeoutaverifyacertaallow_redirectsaadapter_kwargsaresolve_redirectsuSessionRedirectMixin.resolve_redirectsaAuthorizationashould_strip_autharequestatrust_envaget_netrc_authaprepare_authuWhen being redirected we may want to strip authentication from the
        request to avoid leaking credentials. This method intelligently removes
        and reapplies authentication where possible to avoid credential loss.
        Tano_proxyashould_bypass_proxiesaget_environ_proxiesTaallasetdefaultuProxy-Authorizationaget_auth_from_urlTnna_basic_auth_struThis method re-evaluates the proxy configuration by considering the
        environment variables. If we are redirected to a URL covered by
        NO_PROXY, we strip the proxy configuration. Otherwise, we set missing
        proxy keys for this URL (in case they were stripped by a previous
        redirect).

        This method also replaces the Proxy-Authorization header where
        necessary.

        :rtype: dict
        amethodasee_otheraHEADaGETafoundamovedaPOSTuWhen being redirected we may want to change the method of the request
        based on certain specs or browser behavior.
        adefault_headersaauthadefault_hooksahooksaparamsaDEFAULT_REDIRECT_LIMITacookiejar_from_dictaOrderedDictaadaptersamountuhttps://aHTTPAdapteruhttp://acookielibaCookieJaraRequestsCookieJaraPreparedRequestaprepareaupperafilesadataajsonaCaseInsensitiveDictTadict_classamerge_hooksT
amethodaurlafilesadataajsonaheadersaparamsaauthacookiesahooksuConstructs a :class:`PreparedRequest <PreparedRequest>` for
        transmission and returns it. The :class:`PreparedRequest` has settings
        merged from the :class:`Request <Request>` instance and those of the
        :class:`Session`.

        :param request: :class:`Request` instance to prepare with this
            session's settings.
        :rtype: requests.PreparedRequest
        aRequestT
amethodaurlaheadersafilesadataajsonaparamsaauthacookiesahooksaprepare_requestamerge_environment_settingsuConstructs a :class:`Request <Request>`, prepares it and sends it.
        Returns :class:`Response <Response>` object.

        :param method: method for the new :class:`Request` object.
        :param url: URL for the new :class:`Request` object.
        :param params: (optional) Dictionary or bytes to be sent in the query
            string for the :class:`Request`.
        :param data: (optional) Dictionary, list of tuples, bytes, or file-like
            object to send in the body of the :class:`Request`.
        :param json: (optional) json to send in the body of the
            :class:`Request`.
        :param headers: (optional) Dictionary of HTTP Headers to send with the
            :class:`Request`.
        :param cookies: (optional) Dict or CookieJar object to send with the
            :class:`Request`.
        :param files: (optional) Dictionary of ``'filename': file-like-objects``
            for multipart encoding upload.
        :param auth: (optional) Auth tuple or callable to enable
            Basic/Digest/Custom HTTP Auth.
        :param timeout: (optional) How long to wait for the server to send
            data before giving up, as a float, or a :ref:`(connect timeout,
            read timeout) <timeouts>` tuple.
        :type timeout: float or tuple
        :param allow_redirects: (optional) Set to True by default.
        :type allow_redirects: bool
        :param proxies: (optional) Dictionary mapping protocol or protocol and
            hostname to the URL of the proxy.
        :param stream: (optional) whether to immediately download the response
            content. Defaults to ``False``.
        :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use. Defaults to ``True``. When set to
            ``False``, requests will accept any TLS certificate presented by
            the server, and will ignore hostname mismatches and/or expired
            certificates, which will make your application vulnerable to
            man-in-the-middle (MitM) attacks. Setting verify to ``False``
            may be useful during local development or testing.
        :param cert: (optional) if String, path to ssl client cert file (.pem).
            If Tuple, ('cert', 'key') pair.
        :rtype: requests.Response
        uSends a GET request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        aOPTIONSuSends a OPTIONS request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        uSends a HEAD request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        uSends a POST request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param data: (optional) Dictionary, list of tuples, bytes, or file-like
            object to send in the body of the :class:`Request`.
        :param json: (optional) json to send in the body of the :class:`Request`.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        aPUTuSends a PUT request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param data: (optional) Dictionary, list of tuples, bytes, or file-like
            object to send in the body of the :class:`Request`.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        aPATCHuSends a PATCH request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param data: (optional) Dictionary, list of tuples, bytes, or file-like
            object to send in the body of the :class:`Request`.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        aDELETEuSends a DELETE request. Returns :class:`Response` object.

        :param url: URL for the new :class:`Request` object.
        :param \*\*kwargs: Optional arguments that ``request`` takes.
        :rtype: requests.Response
        uYou can only send PreparedRequests.Taallow_redirectstTastreamaget_adapterTaurlapreferred_clockatimedeltaTasecondsaelapsedadispatch_hookaresponseainsertlwrDayield_requeststa_nextuSend a given PreparedRequest.

        :rtype: requests.Response
        aenvironTaREQUESTS_CA_BUNDLETaCURL_CA_BUNDLEu
        Check the environment and merge it with some settings.

        :rtype: dict
        aloweraInvalidSchemauNo connection adapters were found for {!r}u
        Returns the appropriate connection adapter for the given URL.

        :rtype: requests.adapters.BaseAdapter
        avaluesuCloses all adapters and as such the sessionuRegisters a connection adapter to a prefix.

        Adapters are sorted in descending order by prefix length.
        a__attrs__aSessionu
    Returns a :class:`Session` for context-management.

    .. deprecated:: 1.0.0

        This method has been deprecated since version 1.0.0 and is only kept for
        backwards compatibility. New code should use :class:`~requests.sessions.Session`
        to create a session. This may be removed at a future date.

    :rtype: Session
    u
requests.sessions
~~~~~~~~~~~~~~~~~

This module provides a Session object to manage and persist settings across
requests (cookies, auth, proxies).
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosasysatimeadatetimeTatimedeltaacollectionsTaOrderedDictTa_basic_auth_strlacompatTacookielibais_py3aurljoinaurlparseaMappingTacookiejar_from_dictaextract_cookies_to_jaraRequestsCookieJaramerge_cookiesamodelsTaRequestaPreparedRequestaDEFAULT_REDIRECT_LIMITTadefault_hooksadispatch_hooka_internal_utilsTato_native_stringautilsTato_key_val_listadefault_headersaDEFAULT_PORTSaexceptionsTaTooManyRedirectsaInvalidSchemaaChunkedEncodingErroraContentDecodingErrorastructuresTaCaseInsensitiveDictTaHTTPAdapterTarequote_uriaget_environ_proxiesaget_netrc_authashould_bypass_proxiesaget_auth_from_urlarewind_bodyastatus_codesTacodesTaREDIRECT_STATIaREDIRECT_STATIaperf_counteraclockTOobjecta__prepare__aSessionRedirectMixina__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests.sessionsa__module__a__qualname__uSessionRedirectMixin.get_redirect_targetuSessionRedirectMixin.should_strip_authTFntnnFuSessionRedirectMixin.rebuild_authuSessionRedirectMixin.rebuild_proxiesuSessionRedirectMixin.rebuild_methoda__orig_bases__uA Requests session.

    Provides cookie persistence, connection-pooling, and configuration.

    Basic Usage::

      >>> import requests
      >>> s = requests.Session()
      >>> s.get('https://httpbin.org/get')
      <Response [200]>

    Or as a context manager::

      >>> with requests.Session() as s:
      ...     s.get('https://httpbin.org/get')
      <Response [200]>
    Laheadersacookiesaauthaproxiesahooksaparamsaverifyacertaadaptersastreamatrust_envamax_redirectsa__init__uSession.__init__a__enter__uSession.__enter__a__exit__uSession.__exit__uSession.prepare_requestTnnnnnnntnnnnnnuSession.requestuSession.getaoptionsuSession.optionsaheaduSession.headapostuSession.postTnaputuSession.putapatchuSession.patchadeleteuSession.deleteuSession.senduSession.merge_environment_settingsuSession.get_adapteruSession.closeuSession.mounta__getstate__uSession.__getstate__a__setstate__uSession.__setstate__asessionurequests\sessions.pyu<module requests.sessions>Ta__class__TaselfTaselfaargsTaselfastateTaselfastateaattravalueTaselfwvTaselfaurlakwargsTaselfaurlaprefixaadapterTaselfarespalocationT
aselfaurlaproxiesastreamaverifyacertano_proxyaenv_proxieswkwvTarequest_hooksasession_hooksadict_classTarequest_settingasession_settingadict_classamerged_settinganone_keysakeyTaselfaprefixaadapterakeys_to_moveakeyTaselfaurladataakwargsTaselfaurladataajsonakwargsTaselfarequestacookiesamerged_cookiesaauthwpTaselfaprepared_requestaresponseaheadersaurlanew_authTaselfaprepared_requestaresponseamethodT
aselfaprepared_requestaproxiesaheadersaurlaschemeanew_proxiesano_proxyabypass_proxyaenviron_proxiesaproxyausernameapasswordTaselfamethodaurlaparamsadataaheadersacookiesafilesaauthatimeoutaallow_redirectsaproxiesahooksastreamaverifyacertajsonareqaprepasettingsasend_kwargsarespTaselfarespareqastreamatimeoutaverifyacertaproxiesayield_requestsaadapter_kwargsahistaurlaprevious_fragmentaprepared_requestaparsed_rurlaparsedapurged_headersaheaderaheadersarewindableT
aselfarequestakwargsaallow_redirectsastreamahooksaadapterastartwraelapsedarespagenahistoryTaselfaold_urlanew_urlaold_parsedanew_parsedachanged_portachanged_schemeadefault_port.requests.status_codes(a_codesaitemsutoo many values to unpack (expected 2)acodesastartswithTTw\w/aupperadocu_init.<locals>.doca__doc__w
asortedu, u* %d: %su``%s``u<genexpr>u_init.<locals>.doc.<locals>.<genexpr>u_init.<locals>.<genexpr>u
The ``codes`` object defines a mapping from common names for HTTP statuses
to their numerical codes, accessible either as attributes or as dictionary
items.

Example::

    >>> import requests
    >>> requests.codes['temporary_redirect']
    307
    >>> requests.codes.teapot
    418
    >>> requests.codes['\o/']
    200

Some codes have multiple names, and both upper- and lower-case versions of
the names are allowed. For example, ``codes.ok``, ``codes.OK``, and
``codes.okay`` all correspond to the HTTP status code 200.
a__file__a__spec__aoriginahas_locationa__cached__astructuresTaLookupDictlaLookupDictlDDldlelflglzlllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllTacontinueTaswitching_protocolsTaprocessingTacheckpointTauri_too_longarequest_uri_too_longTaokaokayaall_okaall_okayaall_goodu\o/u✓TacreatedTaacceptedTanon_authoritative_infoanon_authoritative_informationTano_contentTareset_contentaresetTapartial_contentapartialTamulti_statusamultiple_statusamulti_statiamultiple_statiTaalready_reportedTaim_usedTamultiple_choicesTamoved_permanentlyamovedu\o-TafoundTasee_otheraotherTanot_modifiedTause_proxyTaswitch_proxyTatemporary_redirectatemporary_movedatemporaryTapermanent_redirectaresume_incompletearesumeTabad_requestabadTaunauthorizedTapayment_requiredapaymentTaforbiddenTanot_foundu-o-Tamethod_not_allowedanot_allowedTanot_acceptableTaproxy_authentication_requiredaproxy_authaproxy_authenticationTarequest_timeoutatimeoutTaconflictTagoneTalength_requiredTaprecondition_failedapreconditionTarequest_entity_too_largeTarequest_uri_too_largeTaunsupported_media_typeaunsupported_mediaamedia_typeTarequested_range_not_satisfiablearequested_rangearange_not_satisfiableTaexpectation_failedTaim_a_teapotateapotai_am_a_teapotTamisdirected_requestTaunprocessable_entityaunprocessableTalockedTafailed_dependencyadependencyTaunordered_collectionaunorderedTaupgrade_requiredaupgradeTaprecondition_requiredapreconditionTatoo_many_requestsatoo_manyTaheader_fields_too_largeafields_too_largeTano_responseanoneTaretry_witharetryTablocked_by_windows_parental_controlsaparental_controlsTaunavailable_for_legal_reasonsalegal_reasonsTaclient_closed_requestTainternal_server_erroraserver_erroru/o\u✗Tanot_implementedTabad_gatewayTaservice_unavailableaunavailableTagateway_timeoutTahttp_version_not_supportedahttp_versionTavariant_also_negotiatesTainsufficient_storageTabandwidth_limit_exceededabandwidthTanot_extendedTanetwork_authentication_requiredanetwork_authanetwork_authenticationTastatus_codesTanamea_initurequests\status_codes.pyTa.0acodeadocTa.0wnu<module requests.status_codes>TacodeatitlesatitleadocTacodeanamesu.requests.structuresPaOrderedDicta_storeaupdatealowerlavaluesutoo many values to unpack (expected 2)u<genexpr>uCaseInsensitiveDict.__iter__.<locals>.<genexpr>aitemsuLike iteritems(), but with all lowercase keys.uCaseInsensitiveDict.lower_items.<locals>.<genexpr>aMappingaCaseInsensitiveDictalower_itemsanameaLookupDicta__init__u<lookup '%s'>agetu
requests.structures
~~~~~~~~~~~~~~~~~~~

Data structures that power Requests.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__acollectionsTaOrderedDictlacompatTaMappingaMutableMappingaMutableMappinga__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>urequests.structuresa__module__uA case-insensitive ``dict``-like object.

    Implements all methods and operations of
    ``MutableMapping`` as well as dict's ``copy``. Also
    provides ``lower_items``.

    All keys are expected to be strings. The structure remembers the
    case of the last key to be set, and ``iter(instance)``,
    ``keys()``, ``items()``, ``iterkeys()``, and ``iteritems()``
    will contain case-sensitive keys. However, querying and contains
    testing is case insensitive::

        cid = CaseInsensitiveDict()
        cid['Accept'] = 'application/json'
        cid['aCCEPT'] == 'application/json'  # True
        list(cid) == ['Accept']  # True

    For example, ``headers['content-encoding']`` will return the
    value of a ``'Content-Encoding'`` response header, regardless
    of how the header name was originally stored.

    If the constructor, ``.update``, or equality comparison
    operations are given keys that have equal ``.lower()``s, the
    behavior is undefined.
    a__qualname__TnuCaseInsensitiveDict.__init__a__setitem__uCaseInsensitiveDict.__setitem__uCaseInsensitiveDict.__getitem__a__delitem__uCaseInsensitiveDict.__delitem__a__iter__uCaseInsensitiveDict.__iter__a__len__uCaseInsensitiveDict.__len__uCaseInsensitiveDict.lower_itemsa__eq__uCaseInsensitiveDict.__eq__acopyuCaseInsensitiveDict.copya__repr__uCaseInsensitiveDict.__repr__a__orig_bases__TOdictuDictionary lookup object.uLookupDict.__init__uLookupDict.__repr__uLookupDict.__getitem__uLookupDict.geturequests\structures.pyTa.0acasedkeyamappedvalueTa.0alowerkeyakeyvalu<module requests.structures>Ta__class__TaselfakeyTaselfaotherTaselfadataakwargsTaselfanamea__class__TaselfTaselfakeyavalueTaselfakeyadefaultu.requests.utils4ais_py3awinregla_winregaOpenKeyaHKEY_CURRENT_USERuSoftware\Microsoft\Windows\CurrentVersion\Internet SettingsaQueryValueExaProxyEnableaProxyOverrideasplitTw;u<local>w.ahostareplaceTw.u\.Tw*u.*Tw?w.areamatchwIagetproxies_environmentaproxy_bypass_environmentaproxy_bypass_registryuReturn True, if the host should be bypassed.

        Checks proxy settings gathered from the environment, if specified,
        or the registry.
        aitemsuReturns an internal sequence dictionary update.a__len__alenafilenoaUnsupportedOperationafstatast_sizewbamodeawarningsawarnuRequests has determined the content-length for this request using the binary size of the file: however, the file has been opened in text mode (i.e. without the 'b' flag in the mode). This may lead to an incorrect content-length. In Requests 3.0, support will be removed for files in text mode.aFileModeWarningwoatellTEOSErrorpaseekTllatotal_lengthamaxaenvironagetTaNETRCaNETRC_FILESanetrcTanetrcaNetrcParseErroraNetrcParseErroraexpanduseraurlparsed:astraasciianetlocaauthenticatorsllTEImportErrorEAttributeErroruReturns the Requests tuple auth for a given url from netrc.u~/{}u<genexpr>uget_netrc_auth.<locals>.<genexpr>anameabasestringw<qw>uTries to guess the filename of the given object.utoo many values to unpack (expected 2)aarchivew/amemberazipfileais_zipfileaZipFileanamelistatempfileagettempdirajoinTw/aextractTapathuReplace nonexistent paths that look like they refer to a member of a zip
    archive with the location of an extracted copy of the target, or else
    just return the provided path unchanged.
    abytesucannot encode objects that are not 2-tuplesaOrderedDictuTake an object and test to see if it can be represented as a
    dictionary. Unless it can not be represented as such, return an
    OrderedDict, e.g.,

    ::

        >>> from_key_val_list([('key', 'val')])
        OrderedDict([('key', 'val')])
        >>> from_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples
        >>> from_key_val_list({'key': 'val'})
        OrderedDict([('key', 'val')])

    :rtype: OrderedDict
    aMappinguTake an object and test to see if it can be represented as a
    dictionary. If it can be, return a list of tuples, e.g.,

    ::

        >>> to_key_val_list([('key', 'val')])
        [('key', 'val')]
        >>> to_key_val_list({'key': 'val'})
        [('key', 'val')]
        >>> to_key_val_list('string')
        Traceback (most recent call last):
        ...
        ValueError: cannot encode objects that are not 2-tuples

    :rtype: list
    a_parse_list_header:qnn:nlnw"aunquote_header_value:lqnaresultuParse lists as described by RFC 2068 Section 2.

    In particular, parse comma-separated lists where the elements of
    the list may include quoted-strings.  A quoted-string could
    contain a comma.  A non-quoted string could have quotes in the
    middle.  Quotes are removed automatically after parsing.

    It basically works like :func:`parse_set_header` just that items
    may appear multiple times and case sensitivity is preserved.

    The return value is a standard :class:`list`:

    >>> parse_list_header('token, "quoted value"')
    ['token', 'quoted value']

    To create a header from the :class:`list` again, use the
    :func:`dump_header` function.

    :param value: a string with a list header.
    :return: :class:`list`
    :rtype: list
    w=Tw=luParse lists of key, value pairs as described by RFC 2068 Section 2 and
    convert them into a python dict:

    >>> d = parse_dict_header('foo="is a fish", bar="as well"')
    >>> type(d) is dict
    True
    >>> sorted(d.items())
    [('bar', 'as well'), ('foo', 'is a fish')]

    If there is no value for a key it will be `None`:

    >>> parse_dict_header('key_without_value')
    {'key_without_value': None}

    To create a header from the :class:`dict` again, use the
    :func:`dump_header` function.

    :param value: a string with a dict header.
    :return: :class:`dict`
    :rtype: dict
    :nlnu\\Tu\\w\Tu\"w"uUnquotes a header value.  (Reversal of :func:`quote_header_value`).
    This does not use the real unquoting but what browsers are actually
    using for quoting.

    :param value: the header value to unquote.
    :rtype: str
    avalueacookie_dictuReturns a key/value dictionary from a CookieJar.

    :param cj: CookieJar object to extract cookies from.
    :rtype: dict
    acookiejar_from_dictuReturns a CookieJar from a key/value dictionary.

    :param cj: CookieJar to insert cookies into.
    :param cookie_dict: Dict of key/values to insert into CookieJar.
    :rtype: CookieJar
    uIn requests 3.0, get_encodings_from_content will be removed. For more information, please see the discussion on issue #2266. (This warning should only appear once.)aDeprecationWarningacompileTu<meta.*?charset=["\']*(.+?)["\'>]TaflagsTu<meta.*?content=["\']*;?charset=(.+?)["\'>]Tu^<\?xml.*?encoding=["\']*(.+?)["\'>]afindalluReturns encodings from given content string.

    :param content: bytestring to extract encodings from.
    astrip:lnnu"' afindTw=aitems_to_stripaparams_dictaloweruReturns content type and parameters from given header

    :param header: string
    :return: tuple containing content type and dictionary of
         parameters
    Tucontent-typea_parse_content_type_headeracharsetTu'"atextuISO-8859-1uapplication/jsonuutf-8uReturns encodings from given HTTP Header Dict.

    :param headers: dictionary to extract encoding from.
    :rtype: str
    uStream decodes a iterator.wraencodingaiteratoracodecsagetincrementaldecoderTareplaceTaerrorsadecoderadecodeTctTafinalastream_decode_response_unicodeuIterate over slices of a string.aslice_lengthastringaposaiter_slicesuIn requests 3.0, get_unicode_from_response will be removed. For more information, please see the discussion on issue #2266. (This warning should only appear once.)aget_encoding_from_headersaheadersacontentDaerrorsareplaceuReturns the requested content back in unicode.

    :param r: Response object to get unicode content from.

    Tried:

    1. charset from content-type
    2. fall back and replace all unicode characters

    :rtype: str
    Tw%aparts:llnaisalnumlaInvalidURLuInvalid percent-escape sequence: '%s'aUNRESERVED_SET:lnnw%uuUn-escape any percent-escape sequences in a URI that are unreserved
    characters. This leaves all reserved, illegal and non-ASCII bytes encoded.

    :rtype: str
    aquoteaunquote_unreservedDasafeu!#$%&'()*+,/:;=?@[]~Dasafeu!#$&'()*+,/:;=?@[]~uRe-quote the given URI.

    This function passes the given URI through an unquote/quote cycle to
    ensure that it is fully and consistently quoted.

    :rtype: str
    astructaunpacku=Lasocketainet_atonadotted_netmaskuThis function allows you to check if an IP belongs to a network subnet

    Example: returns True if ip = 192.168.1.1 and net = 192.168.1.0/24
             returns False if ip = 192.168.1.1 and net = 192.168.100.0/24

    :rtype: bool
    gl ainet_ntoaapacku>IuConverts mask from /xx format to xxx.xxx.xxx.xxx

    Example: if mask is 24 function returns 255.255.255.0

    :rtype: str
    aerroru
    :rtype: bool
    acountu
    Very simple check of the cidr format in no_proxy variable.

    :rtype: bool
    uSet the environment variable 'env_name' to 'value'

    Save previous value, yield, and then restore the previous value stored in
    the environment variable 'env_name'.

    If 'value' is None, do nothingaenv_nameaold_valueaset_environu<lambda>ushould_bypass_proxies.<locals>.<lambda>Tano_proxyahostnameano_proxyTw uTw,ais_ipv4_addressais_valid_cidraaddress_in_networkaparsedaportu:{}aendswithahost_with_porta__enter__a__exit__aproxy_bypassagaierrorTnnnabypassu
    Returns whether we should bypass proxies or not.

    :rtype: bool
    aupperushould_bypass_proxies.<locals>.<genexpr>ashould_bypass_proxiesagetproxiesu
    Return a dict of environment proxies.

    :rtype: dict
    aschemeTaallu://uall://aalluSelect a proxy for the url, if applicable.

    :param url: The url being for the request
    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs
    u%s/%sa__version__u
    Return a string representing the default user agent.

    :rtype: str
    aCaseInsensitiveDictuUser-Agentadefault_user_agentuAccept-Encodingugzip, deflateaAcceptu*/*aConnectionukeep-aliveu
    :rtype: requests.structures.CaseInsensitiveDict
    u '"u, *<Tw;laurlTu<> '"areplace_charsalinkalinksuReturn a list of parsed link headers proxies.

    i.e. Link: <http:/.../front.jpeg>; rel=front; type="image/jpeg",<http://.../back.jpeg>; rel=back;type="image/jpeg"

    :rtype: list
    :nlnaBOM_UTF32_LEaBOM_UTF32_BEuutf-32:nlnaBOM_UTF8uutf-8-sigaBOM_UTF16_LEaBOM_UTF16_BEuutf-16a_null:nnla_null2uutf-16-be:lnluutf-16-lela_null3uutf-32-beuutf-32-leu
    :rtype: str
    utoo many values to unpack (expected 6)aurlunparseuGiven a URL that may or may not have a scheme, prepend the given scheme.
    Does not replace a present scheme with the one provided as an argument.

    :rtype: str
    aunquoteausernameapasswordTEAttributeErrorETypeErrorTupuGiven a url with authentication components, extract them into a tuple of
    username,password.

    :rtype: (str,str)
    a_CLEAN_HEADER_REGEX_BYTEa_CLEAN_HEADER_REGEX_STRaInvalidHeaderuInvalid return character or leading space in header: %suValue for header {%s: %s} must be of type str or bytes, not %suVerifies that header value is a string which doesn't contain
    leading whitespace or return characters. This prevents unintended
    header injection.

    :param header: tuple, in the format (name, value).
    arsplitTw@lu
    Given a url remove the fragment and the authentication part.

    :rtype: str
    abodya_body_positionainteger_typesaUnrewindableBodyErrorTuAn error occurred when rewinding request body for redirect.TuUnable to rewind request body for redirect.uMove file pointer back to its recorded starting position
    so it can be read again on redirect.
    u
requests.utils
~~~~~~~~~~~~~~

This module provides utility functions that are used within Requests
that are also useful for external consumption.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__acontextlibaioaosasysacollectionsTaOrderedDictTa__version__Tacertsacertsa_internal_utilsTato_native_stringato_native_stringacompatTaparse_http_listaparse_http_listTaquoteaurlparseabytesastraunquoteagetproxiesaproxy_bypassaurlunparseabasestringainteger_typesais_py3aproxy_bypass_environmentagetproxies_environmentaMappingacookiesTacookiejar_from_dictastructuresTaCaseInsensitiveDictaexceptionsTaInvalidURLaInvalidHeaderaFileModeWarningaUnrewindableBodyErrorTu.netrca_netrcawhereaDEFAULT_CA_BUNDLE_PATHDahttpahttpslPlaDEFAULT_PORTSadict_to_sequenceasuper_lenTFaget_netrc_authaguess_filenameaextract_zipped_pathsafrom_key_val_listato_key_val_listaparse_list_headeraparse_dict_headeradict_from_cookiejaraadd_dict_to_cookiejaraget_encodings_from_contentaget_unicode_from_responsePBwSwKwQwUwAwrwzw9wMwYwLwBw5waw8wvwowWwjw.w_wCw~w7wfwGwxwgwNwkw0w4wDwRwpwOwdwywJwXwnwEwHwbw2wFwmw6w1wIwTwZw3w-wqwuwswhwtwiwcwVwewwwlwParequote_uriacontextmanagerTnaget_environ_proxiesaselect_proxyTupython-requestsadefault_headersaparse_header_linkswaguess_json_utfaprepend_scheme_if_neededaget_auth_from_urlTc^\S[^\r\n]*$|^$Tu^\S[^\r\n]*$|^$acheck_header_validityaurldefragautharewind_bodyurequests\utils.pyTa.0wfTa.0ahostTwku<module requests.utils>T
aheaderatokensacontent_typeaparamsaparams_dictaitems_to_stripaparamakeyavalueaindex_of_equalsTacjacookie_dictTaipanetaipaddranetaddrabitsanetmaskanetworkTaheaderanameavalueapatTanameTacjacookie_dictacookieTwdTamaskabitsTapathaarchiveamemberaprefixazip_fileatmpaextracted_pathTavalueTaurlaparsedaauthTaheadersacontent_typeaparamsTacontentacharset_reapragma_reaxml_reTaurlano_proxyTaurlaraise_errorsanetrc_fileanetrc_locationsanetrcaNetrcParseErroranetrc_pathwfalocariasplitstrahosta_netrcalogin_iTwratried_encodingsaencodingTaobjanameTadataasampleanullcountTastring_ipTastring_networkamaskTastringaslice_lengthaposTavaluearesultaitemanameTavaluealinksareplace_charsavalaurlaparamsalinkaparamakeyTavaluearesultaitemTaurlanew_schemeaschemeanetlocapathaparamsaqueryafragmentTahostTahostawinregainternetSettingsaproxyEnableaproxyOverrideatestTauriasafe_with_percentasafe_without_percentTaprepared_requestabody_seekTaurlaproxiesaurlpartsaproxy_keysaproxyaproxy_keyTaenv_nameavalueavalue_changedaold_valueTaurlano_proxyaget_proxyano_proxy_argaparsedaproxy_ipahost_with_portahostabypassTaiteratorwraitemadecoderachunkarvTwoatotal_lengthacurrent_positionafilenoTavalueais_filenameTauriapartswiwhwcTaurlaschemeanetlocapathaparamsaqueryafragment.socks*kawrapsawrapperuset_self_blocking.<locals>.wrapperlagettimeoutasetblockingTtafunctionTFa_is_blockingamsgasocket_erru: {}aencodeasocksocketadefault_proxyuSets a default proxy.

    All further socksocket objects will use the default unless explicitly
    changed. All parameters are as for socket.set_proxy().aproxytypeaproxy_typeaset_default_proxyuReturns the default proxy, set by set_default_proxy.asocketaGeneralProxyErrorTuNo default proxy specifieduAttempts to replace a module's socket library with a SOCKS socket.

    Must set a default proxy using set_default_proxy(...) first. This will
    only work on modules that import socket directly into the namespace;
    most of the Python Standard Library falls into this category.utoo many values to unpack (expected 2)astartswithTw[astripTu[]agetaddrinfoaproxy_addraSOCK_STREAMutoo many values to unpack (expected 5)asocket_optionsasockasetsockoptatimeoutTOintOfloatasettimeoutaset_proxyaproxy_portaproxy_rdnsaproxy_usernameaproxy_passwordasource_addressabindaconnectaremote_hostaremote_portaerroraProxyErroracloseaerrTugai returned empty list.ucreate_connection(dest_pair, *[, timeout], **proxy_args) -> socket object

    Like socket.create_connection(), but connects to proxy
    before returning the socket object.

    dest_pair - 2-tuple of (IP/hostname, port).
    **proxy_args - Same args passed to socksocket.set_proxy() if present.
    timeout - Optional socket timeout value, in seconds.
    source_address - tuple (host, port) for the socket to bind to as its source
    address before connecting (only for compatibility)
    a_orig_socketa__init__a_savedmethodsa_savenamesaselfadelattru<lambda>u_makemethod.<locals>.<lambda>anameaSOCK_DGRAMuSocket type must be stream or datagram, not {!r}a_proxyconnaproxyTnnnnnnaproxy_socknameaproxy_peernamea_timeoutcadataacountafileareadTuConnection closed unexpectedlyuReceive EXACTLY the number of bytes requested from the file object.

        Blocks until the required number of bytes have been received.aget_proxy_peernameTnTZu Sets the proxy to be used.

        proxy_type -  The type of the proxy to be used. Three types
                        are supported: PROXY_TYPE_SOCKS4 (including socks4a),
                        PROXY_TYPE_SOCKS5 and PROXY_TYPE_HTTP
        addr -        The address of the server (IP or DNS).
        port -        The port of the server. Defaults to 1080 for SOCKS
                        servers and 8080 for HTTP proxy servers.
        rdns -        Should DNS queries be performed on the remote side
                       (rather than the local side). The default is True.
                       Note: This has no effect with SOCKS4 servers.
        username -    Username to authenticate with to the server.
                       The default is no authentication.
        password -    Password to authenticate with to the server.
                       Only relevant when username is also provided.utoo many values to unpack (expected 6)atypeaEINVALuSocket already bound to an addressaSOCKS5aEOPNOTSUPPuUDP only supported by SOCKS5 proxy typeagetsocknamew0a_proxy_addra_SOCKS5_requestdTu0.0.0.0luImplements proxy connection for UDP sockets.

        Happens during the bind() phase.asendtoTTulq:nqnaBytesIOawriteTbTda_write_SOCKS5_addressasendagetvalueatellarecvfromarecvlaseeklaSEEK_CURTluReceived UDP packet fragmenta_read_SOCKS5_addressaEAGAINuPacket filtereduReturns the bound IP address and port number at the proxy.agetpeernameu
        Returns the IP and port number of the proxy.
        uReturns the IP address and port number of the destination machine.

        Note: get_proxy_peername returns the proxy.duNegotiates a stream connection through a SOCKS5 server.amakefileTawbTarblTbTbawriteraflusha_readall:llndTuSOCKS5 proxy server sent invalid data:llndaSOCKS5AuthErrorTuNo username/password supplied. Server requested username/password authenticationdTuSOCKS5 authentication faileddTuAll offered SOCKS5 authentication methods were rejectedlaSOCKS5_ERRORSagetuUnknown erroraSOCKS5Erroru{:#04x}: {}u
        Send SOCKS5 request with given command (CMD field) and
        address (DST field). Returns resolved DST address that was used.
        aAF_INETaAF_INET6dainet_ptonahostainet_ntopastructapacku>HaportTaidnaaAF_UNSPECaIPPROTO_TCPaAI_ADDRCONFIGlu
        Return the host and port packed for the SOCKS5 protocol,
        and the resolved address as a tuple object.
        lainet_ntoalaunpackainet_atonbagethostbynameu>BBHlTuSOCKS4 proxy server sent invalid datalZaSOCKS4_ERRORSaSOCKS4Error:lnn:llnuNegotiates a connection through a SOCKS4 server.cCONNECT d:c HTTP/1.1cHost: cProxy-Authorization: basic ab64encodec
asendallareadlineasplitTw lutoo many values to unpack (expected 3)TuHTTP proxy server sent invalid responseTuHTTP/TuProxy server does not appear to be an HTTP proxyaHTTPErrorTuHTTP proxy server did not return a valid HTTP statuslu{}: {}Tlllu
[*] Note: The HTTP proxy server may not be supported by PySocks (must be a CONNECT tunnel proxy)Tc0.0.0.0luNegotiates a connection through an HTTP server.

        NOTE: This currently only supports HTTP CONNECT-style proxies.uPySocks doesn't support IPv6: %su0.0.0.0TOlistOtupleTuInvalid destination-connection (host, port) pairu{}:{}aPRINTABLE_PROXY_TYPESuError connecting to {} proxy {}alogadebugu%s due to: %saProxyConnectionErrora_proxy_negotiatorsuSocket erroru
        Connects to the specified destination through a proxy.
        Uses the same API as socket's connect().
        To select the proxy server, use set_proxy().

        dest_pair - 2-tuple of (IP/hostname, port).
        Dacatch_errorstaerrnou https://docs.python.org/3/library/socket.html#socket.socket.connect_ex
        Like connect(address), but return an error indicator instead of raising an exception for errors returned by the C-level connect() call (other problems, such as "host not found" can still raise exceptions).
        aDEFAULT_PORTSTuInvalid proxy typeu
        Return proxy address to connect to as tuple object
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__abase64Tab64encodeucollections.abcTaCallableaCallableacollectionsTaEOPNOTSUPPaEINVALaEAGAINafunctoolsaloggingaosasysu1.7.1a__version__agetLoggerTasocksaPROXY_TYPE_SOCKS4aSOCKS4aPROXY_TYPE_SOCKS5aPROXY_TYPE_HTTPaHTTPaPROXY_TYPESa_orgsocketaset_self_blockingTEOSErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>asocksa__module__uSocket_err contains original socket.error exception.a__qualname__uProxyError.__init__a__str__uProxyError.__str__a__orig_bases__Dl[l\l]uRequest rejected or faileduRequest rejected because SOCKS server cannot connect to identd on the clientuRequest rejected because the client program and identd report different user-idsDlllllllluGeneral SOCKS server failureuConnection not allowed by rulesetuNetwork unreachableuHost unreachableuConnection refuseduTTL expireduCommand not supported, or protocol erroruAddress type not supportedll?Tnnntnnasetdefaultproxyaget_default_proxyagetdefaultproxyawrap_moduleawrapmoduleTnnnnntnnnacreate_connectiona_BaseSocketuAllows Python 2 delegated methods such as send() to be overridden.u_BaseSocket.__init__alista_makemethodTasendtoasendarecvfromarecvamethodaappendusocksocket([family[, type[, proto]]]) -> socket object

    Open a SOCKS enabled socket. The parameters are the same as
    those of the standard socket init. In order for SOCKS to work,
    you must specify family=AF_INET and proto=0.
    The "type" argument must be either SOCK_STREAM or SOCK_DGRAM.
    usocksocket.__init__usocksocket._readallusocksocket.settimeoutusocksocket.gettimeoutusocksocket.setblockingusocksocket.set_proxyasetproxyusocksocket.setproxyusocksocket.bindusocksocket.sendtoTlusocksocket.sendusocksocket.recvfromusocksocket.recvusocksocket.closeaget_proxy_socknameusocksocket.get_proxy_socknameagetproxysocknameusocksocket.get_proxy_peernameagetproxypeernameaget_peernameusocksocket.get_peernamea_negotiate_SOCKS5usocksocket._negotiate_SOCKS5usocksocket._SOCKS5_requestusocksocket._write_SOCKS5_addressusocksocket._read_SOCKS5_addressa_negotiate_SOCKS4usocksocket._negotiate_SOCKS4a_negotiate_HTTPusocksocket._negotiate_HTTPusocksocket.connectaconnect_exusocksocket.connect_exusocksocket._proxy_addrusocks.pyTaselfaposakwanameTanameu<module socks>Ta__class__Taselfaconnacmdadstaproxy_typeaaddraportardnsausernameapasswordawriterareaderachosen_authaauth_statusaresolvedarespastatusaerrorabnda__class__Taselfamsgasocket_errTaselfafamilyatypeaprotoaargsakwargsamsga__class__TaselfTaselfadest_addradest_portaproxy_typeaaddraportardnsausernameapasswordahttp_headersafobjastatus_lineaprotoastatus_codeastatus_msgaerrorTaselfadest_addradest_portaproxy_typeaaddraportardnsausernameapasswordawriterareaderaremote_resolveaaddr_bytesarespastatusaerrorTaselfadest_addraCONNECTTaselfaproxy_typeaproxy_addraproxy_portardnsausernameapasswordTaselfafileaatypaaddralengthaportTaselfafileacountadatawdTaselfaaddrafileahostaportaproxy_typew_ardnsausernameapasswordafamily_to_byteafamilyaaddr_bytesahost_bytesaaddressesatarget_addrTaselfaposakwaproxy_typeaproxy_addraproxy_portardnsausernameapasswordamsgw_aportadstaproxyaUDP_ASSOCIATEarelayahosta__class__Taselfa__class__Taselfadest_pairacatch_errorsadest_addradest_portaproxy_typeaproxy_addraproxy_portardnsausernameapasswordaerroraproxy_serveraprintable_typeamsganegotiatea__class__Taselfadest_pairweTadest_pairatimeoutasource_addressaproxy_typeaproxy_addraproxy_portaproxy_rdnsaproxy_usernameaproxy_passwordasocket_optionsaremote_hostaremote_portaerrwrafamilyasocket_typeaprotoacanonnameasaasockaoptweTaselfaposakwabytesw_T
aselfabufsizeaflagsabufafragafromhostafromportapeerhostapeerporta__class__Taselfabytesaflagsakwargsa__class__TaselfabytesaargsakwargsaaddressaflagsaheaderaRSVaSTANDALONEasenta__class__Taproxy_typeaaddraportardnsausernameapasswordTaselfaproxy_typeaaddraportardnsausernameapasswordTafunctionawrapperTaselfwvTaargsakwargsTaselfaargsakwargsTaselfatimeoutapeera__class__TamoduleTaargsakwargsaselfa_is_blockingweafunctionTafunctionu.urllib3._collectionsa_maxsizeadispose_funcaContainerClsa_containeraRLockalocka__enter__a__exit__apopTnnna_NullagetapopitemTFTalastutoo many values to unpack (expected 2)avalueuIteration over this class is unlikely to be threadsafe.aitervaluesaclearavaluesaselfaiterkeysaHTTPHeaderDicta__init__aOrderedDicta_copy_fromaextendaloweru, :lnnaMappingakeysaitermergedu<genexpr>uHTTPHeaderDict.__eq__.<locals>.<genexpr>a__eq__la__iter__uHTTPHeaderDict.__iter__a_HTTPHeaderDict__markeruD.pop(k[,d]) -> v, remove specified key and return the corresponding value.
        If key is not found, d is returned if given, otherwise KeyError is raised.
        asetdefaultaappenduAdds a (name, value) pair, doesn't overwrite the value if it already
        exists.

        >>> headers = HTTPHeaderDict(foo='bar')
        >>> headers.add('Foo', 'baz')
        >>> headers['foo']
        'bar, baz'
        uextend() takes at most 1 positional arguments ({0} given)aiteritemsaadduGeneric import function for any type of header-like object.
        Adapted version of MutableMapping.update in order to insert items
        with self.add instead of self.__setitem__
        uReturns a list of all the values for the named field. Returns an
        empty list if the key doesn't exist.u%s(%s)a__name__aotheragetlistuIterate over all header lines, including duplicate ones.uHTTPHeaderDict.iteritemsuIterate over all headers, merging duplicate ones together.uHTTPHeaderDict.itermergedTw waheadersastartswithaobs_fold_continued_leadersaInvalidHeaderuHeader continuation with no previous header: %sqw astripasplitTw:luRead headers from a Python 2 httplib message object.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importucollections.abcTaMappingaMutableMappingaMutableMappingacollectionsathreadingTaRLockuurllib3._collectionsa__module__a__qualname__uRLock.__enter__uRLock.__exit__TaOrderedDictaexceptionsTaInvalidHeaderlapackagesTasixasixupackages.sixTaiterkeysaitervaluesaRecentlyUsedContainera__all__a__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>u
    Provides a thread-safe dict-like container which maintains up to
    ``maxsize`` keys while throwing away the least-recently-used keys beyond
    ``maxsize``.

    :param maxsize:
        Maximum number of recent elements to retain.

    :param dispose_func:
        Every time an item is evicted from the container,
        ``dispose_func(value)`` is called.  Callback which will get called
    Tl
nuRecentlyUsedContainer.__init__uRecentlyUsedContainer.__getitem__a__setitem__uRecentlyUsedContainer.__setitem__a__delitem__uRecentlyUsedContainer.__delitem__a__len__uRecentlyUsedContainer.__len__uRecentlyUsedContainer.__iter__uRecentlyUsedContainer.clearuRecentlyUsedContainer.keysa__orig_bases__u
    :param headers:
        An iterable of field-value pairs. Must not contain multiple field names
        when compared case-insensitively.

    :param kwargs:
        Additional field-value pairs to pass in to ``dict.update``.

    A ``dict`` like container for storing HTTP Headers.

    Field names are stored and compared case-insensitively in compliance with
    RFC 7230. Iteration provides the first case-sensitive key seen for each
    case-insensitive pair.

    Using ``__setitem__`` syntax overwrites fields that compare equal
    case-insensitively in order to maintain ``dict``'s api. For fields that
    compare equal, instead create a new ``HTTPHeaderDict`` and use ``.add``
    in a loop.

    If multiple fields that are equal case-insensitively are passed to the
    constructor or ``.update``, the behavior is undefined and some will be
    lost.

    >>> headers = HTTPHeaderDict()
    >>> headers.add('Set-Cookie', 'foo=bar')
    >>> headers.add('set-cookie', 'baz=quxx')
    >>> headers['content-length'] = '7'
    >>> headers['SET-cookie']
    'foo=bar, baz=quxx'
    >>> headers['Content-Length']
    '7'
    TnuHTTPHeaderDict.__init__uHTTPHeaderDict.__setitem__uHTTPHeaderDict.__getitem__uHTTPHeaderDict.__delitem__a__contains__uHTTPHeaderDict.__contains__uHTTPHeaderDict.__eq__a__ne__uHTTPHeaderDict.__ne__aPY2aobjectuHTTPHeaderDict.__len__uHTTPHeaderDict.popadiscarduHTTPHeaderDict.discarduHTTPHeaderDict.adduHTTPHeaderDict.extenduHTTPHeaderDict.getlistagetheadersagetallmatchingheadersaigetaget_alla__repr__uHTTPHeaderDict.__repr__uHTTPHeaderDict._copy_fromacopyuHTTPHeaderDict.copyaitemsuHTTPHeaderDict.itemsaclassmethodafrom_httplibuHTTPHeaderDict.from_httplibuurllib3\_collections.pyTa.0wkwvu<module urllib3._collections>Ta__class__TaselfakeyTaselfakeyavalueTaselfTaselfaotherTaselfaexc_typeaexc_valueatracebackTaselfakeyavalTaselfakeyaitemTaselfaheadersakwargsa__class__Taselfamaxsizeadispose_funcTaselfavalsTaselfakeyavalueaevicted_valuea_keyTaselfaotherakeyavalTaselfakeyavalakey_loweranew_valsavalsTaselfavaluesavalueTaselfacloneTaselfaargsakwargsaotherakeyavalavalueTaclsamessageaobs_fold_continued_leadersaheadersalineakeyavalueTaselfakeyadefaultavalsTaselfakeyavalsavalTaselfakeyadefaultavalueu.urllib3._versiona__doc__a__file__a__spec__aoriginahas_locationa__cached__u1.26.6a__version__uurllib3\_version.pyu<module urllib3._version>u.urllib3.connectionasixaPY2astrictagetTasource_addressasource_addressapopasocket_optionsadefault_socket_optionsTaproxynaproxyTaproxy_confignaproxy_configa_HTTPConnectiona__init__a_dns_hostarstripTw.u
        Getter method to remove any trailing dots that indicate the hostname is an FQDN.

        In general, SSL certificates don't include the trailing dot indicating a
        fully-qualified domain name, and thus, they don't validate properly when
        checked against a domain name that includes the dot. In addition, some
        servers may not expect to receive the trailing dot when provided.

        However, the hostname with trailing dot is critical to DNS resolution; doing a
        lookup with the trailing dot will properly only resolve the appropriate FQDN,
        whereas a lookup without a trailing dot will search the system's search domain
        list. Thus, it's important to keep the original host around for use only in
        those cases where it's appropriate (i.e., when doing DNS lookup to establish the
        actual TCP connection across which we're going to send HTTP requests).
        u
        Setter for the `host` property.

        We assume that only urllib3 uses the _dns_host attribute; httplib itself
        only uses `host`, and it seems reasonable that other libraries follow suit.
        aconnectionacreate_connectionaportatimeoutaSocketTimeoutaConnectTimeoutErroruConnection to %s timed out. (connect timeout=%s)ahostaSocketErroraNewConnectionErroruFailed to establish a new connection: %suEstablish a socket connection and set nodelay settings on it.

        :return: New socket connection.
        a_tunnel_hostasocka_is_using_tunnela_tunnellaauto_opena_new_conna_prepare_conna_CONTAINS_CONTROL_CHAR_REasearchuMethod cannot contain non-token characters %r (found at least %r)agroupaputrequestw aputheaderaensure_straloweraSKIPPABLE_HEADERSuurllib3.util.SKIP_HEADER only supports '%s'u', 'atitleasortedaSKIP_HEADERu<genexpr>uHTTPConnection.putheader.<locals>.<genexpr>acopyuuser-agenta_get_default_user_agentuUser-AgentaHTTPConnectionarequestTabodyaheadersuHTTPConnection.request.<locals>.<genexpr>uaccept-encodingTaskip_accept_encodingaskip_hostaitemsutoo many values to unpack (expected 2)aselfutransfer-encodingTuTransfer-Encodingachunkedaendheadersastring_typesTObytesaencodeTautf8:lnnc
asendTc0

u
        Alternative to the common request method, which sends the
        body with chunked encoding and not as one block
        akey_fileacert_fileakey_passwordassl_contextaserver_hostnameahttpsa_protocolaverify_modearesolve_cert_reqsTnacert_reqsaassert_hostnameaassert_fingerprintaexpanduseraca_certsaca_cert_diraca_cert_datau
        This method should only be called once, before the connection is used.
        atls_in_tls_requireda_connect_tls_proxyadatetimeadateatodayaRECENT_DATEawarningsawarnuSystem time is way off (before {0}). This will probably lead to SSL verification errorsaSystemTimeWarningacreate_urllib3_contextaresolve_ssl_versionassl_versionTassl_versionacert_reqsaload_default_certsassl_wrap_socketaconnT
asockakeyfileacertfileakey_passwordaca_certsaca_cert_diraca_cert_dataaserver_hostnameassl_contextatls_in_tlsaversionPuTLSv1.1aTLSv1uNegotiating TLSv1/TLSv1.1 by default is deprecated and will be disabled in urllib3 v2.0.0. Connecting to '%s' with '%s' can be enabled by explicitly opting-in with 'ssl_version'aDeprecationWarningagetpeercertTtTabinary_formasslaCERT_NONEacheck_hostnameTasubjectAltNameTuCertificate for {0} has no `subjectAltName`, falling back to check for a `commonName` for now. This feature is being removed by major browsers and deprecated by RFC 2818. (See https://github.com/urllib3/urllib3/issues/497 for details.)aSubjectAltNameWarninga_match_hostnameaCERT_REQUIREDais_verifiedTasockaserver_hostnameassl_contextacreate_proxy_ssl_contextTasockaca_certsaca_cert_diraca_cert_dataaserver_hostnameassl_contextu
        Establish a TLS connection to the proxy using the provided SSL context.
        amatch_hostnameaCertificateErroralogawarninguCertificate did not match expected hostname: %s. Certificate: %sa_peer_certupython-urllib3/%sa__version__a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importaloggingaosareasocketTaerroraerrorTatimeoutapackagesTasixlupackages.six.moves.http_clientTaHTTPConnectionTaHTTPExceptionaHTTPExceptionuutil.proxyTacreate_proxy_ssl_contextaSSLErroraBaseSSLErrorTEImportErrorEAttributeErrorTEBaseExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.connectiona__module__a__qualname__a__orig_bases__aConnectionErrorTEExceptionaBrokenPipeErrora_collectionsTaHTTPHeaderDictaHTTPHeaderDicta_versionTa__version__aexceptionsTaConnectTimeoutErroraNewConnectionErroraSubjectAltNameWarningaSystemTimeWarningupackages.ssl_match_hostnameTaCertificateErroramatch_hostnameautilTaSKIP_HEADERaSKIPPABLE_HEADERSaconnectionuutil.ssl_Taassert_fingerprintacreate_urllib3_contextaresolve_cert_reqsaresolve_ssl_versionassl_wrap_socketagetLoggerTuurllib3.connectionDahttpahttpslPlaport_by_schemeTlllacompileTu[^-!#$%&'*+.^_`|~0-9a-zA-Z]u
    Based on :class:`http.client.HTTPConnection` but provides an extra constructor
    backwards-compatibility layer between older and newer Pythons.

    Additional keyword parameters are used to configure attributes of the connection.
    Accepted parameters include:

    - ``strict``: See the documentation on :class:`urllib3.connectionpool.HTTPConnectionPool`
    - ``source_address``: Set the source address for the current connection.
    - ``socket_options``: Set specific options on the underlying socket. If not specified, then
      defaults are loaded from ``HTTPConnection.default_socket_options`` which includes disabling
      Nagle's algorithm (sets TCP_NODELAY to 1) unless the connection is behind a proxy.

      For example, if you wish to enable TCP Keep Alive in addition to the defaults,
      you might pass:

      .. code-block:: python

         HTTPConnection.default_socket_options + [
             (socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1),
         ]

      Or you may want to disable the defaults by passing an empty list (e.g., ``[]``).
    ahttpadefault_portaIPPROTO_TCPaTCP_NODELAYuHTTPConnection.__init__apropertyuHTTPConnection.hostasetteruHTTPConnection._new_connuHTTPConnection._is_using_tunneluHTTPConnection._prepare_connaconnectuHTTPConnection.connectuHTTPConnection.putrequestuHTTPConnection.putheaderTnnuHTTPConnection.requestarequest_chunkeduHTTPConnection.request_chunkedaHTTPSConnectionu
    Many of the parameters to this constructor are passed to the underlying SSL
    socket by means of :py:func:`urllib3.util.ssl_wrap_socket`.
    a_GLOBAL_DEFAULT_TIMEOUTuHTTPSConnection.__init__Tnnnnnnnnnaset_certuHTTPSConnection.set_certuHTTPSConnection.connectuHTTPSConnection._connect_tls_proxyTOobjectaDummyConnectionuUsed to detect a failed ConnectionCls import.aVerifiedHTTPSConnectionuurllib3\connection.pyTa.0wvTa.0wkTa__class__u<module urllib3.connection>TaselfaargsakwTaselfahostaportakey_fileacert_fileakey_passwordastrictatimeoutassl_contextaserver_hostnameakwTaselfahostnameaconnaproxy_configassl_contextTaselfTacertaasserted_hostnameweTaselfaextra_kwaconnweTaselfaconnTaselfaconnahostnameatls_in_tlsaserver_hostnameais_time_offadefault_ssl_contextacontextacertTaselfavalueTaselfaheaderavaluesTaselfamethodaurlaargsakwargsamatchTaselfamethodaurlabodyaheadersa__class__Taselfamethodaurlabodyaheadersaheader_keysaskip_accept_encodingaskip_hostaheaderavalueastringish_typesachunkalen_strato_sendT
aselfakey_fileacert_fileacert_reqsakey_passwordaca_certsaassert_hostnameaassert_fingerprintaca_cert_diraca_cert_datau.urllib3.connectionpoolBTaLocationValueErrorTuNo host specified.a_normalize_hostaschemeTaschemeahostalowera_proxy_hostaportu%s(host=%r, port=%r)a__name__acloseaConnectionPoola__init__aRequestMethodsastrictaTimeoutafrom_floataRetryaDEFAULTatimeoutaretriesaQueueClsapoolablockaproxyaproxy_headersaproxy_configaxrangeaselfaputTnlanum_connectionsanum_requestsaconn_kwasetdefaultasocket_optionslalogadebuguStarting new HTTP connection (%d): %s:%su80aConnectionClsaconnect_timeoutu
        Return a fresh :class:`HTTPConnection`.
        agetTablockatimeoutaClosedPoolErroruPool is closed.aqueueaEmptyaEmptyPoolErroruPool reached maximum size and no more connections are allowed.ais_connection_droppeduResetting dropped connection: %saauto_openaconna_new_connu
        Get a connection. Will return a pooled connection if one is available.

        If no connections are available and :prop:`.block` is ``False``, then a
        fresh connection is returned.

        :param timeout:
            Seconds to wait before giving up and raising
            :class:`urllib3.exceptions.EmptyPoolError` if the pool is empty and
            :prop:`.block` is ``True``.
        DablockFaFullawarninguConnection pool is full, discarding connection: %su
        Put a connection back into the pool.

        :param conn:
            Connection object for the current host and port as returned by
            :meth:`._new_conn` or :meth:`._get_conn`.

        If the pool is already full, the connection is closed and discarded
        because we exceeded maxsize. If connections are discarded frequently,
        then maxsize should be increased.

        If the pool is closed, then the connection will be closed and discarded.
        a_DefaultacloneuHelper that always returns a :class:`urllib3.util.Timeout`aSocketTimeoutaReadTimeoutErroruRead timed out. (read timeout=%s)aerrnoa_blocking_errnosutimed outudid not complete (read)uIs the error actually a timeout? Will raise a ReadTimeout or passa_get_timeoutastart_connecta_validate_connaBaseSSLErrora_raise_timeoutTaerraurlatimeout_valuearequest_chunkedarequestaBrokenPipeErroraEPIPEaESHUTDOWNaEPROTOTYPEaread_timeoutasockaDEFAULT_TIMEOUTasettimeoutasocketagetdefaulttimeoutagetresponseTtTabufferingasixaraise_fromaSocketErrora_http_vsn_struHTTP/?u%s://%s:%s "%s %s %s" %s %sahttplib_responseastatusalengthaassert_header_parsingamsgaHeaderParsingErroruFailed to parse headers (url=%s): %sa_absolute_urlDaexc_infotu
        Perform a request on a given urllib connection object taken from our
        pool.

        :param conn:
            a connection from one of our connection pools

        :param timeout:
            Socket timeout in seconds for the request. This can be a
            float or integer, which will set the same timeout value for
            the socket connect and the socket read, or an instance of
            :class:`urllib3.util.Timeout`, which gives you more fine-grained
            control over your timeouts.
        aUrlTaschemeahostaportapathaurlutoo many values to unpack (expected 2)aold_poolTFTablocku
        Close all pooled connections and disable the pool.
        astartswithTw/aget_hostutoo many values to unpack (expected 3)aport_by_schemeu
        Check if the given ``url`` is a member of the same host as this
        connection pool.
        aparse_urlaheadersafrom_intTaredirectadefaultapreload_contentais_same_hostaHostChangedErroraensure_stra_encode_targetaconnection_requires_http_tunnelacopyaupdateaset_file_positiona_get_connTatimeouta_prepare_proxya_make_requestTatimeoutabodyaheadersachunkedarequest_methodaResponseClsafrom_httplibaconnectionaTimeoutErroraHTTPExceptionaProtocolErroraSSLErroraCertificateErroraNewConnectionErroraProxyErroruCannot connect to proxy.uConnection aborted.aincrementaexc_infolTaerrora_poola_stacktraceasleepa_put_connuRetrying (%r) after connection broken by '%r': %saurlopenapool_timeoutarelease_connachunkedabody_posaresponseaget_redirect_locationlaGETamethodTaresponsea_poolaMaxRetryErroraraise_on_redirectadrain_connasleep_for_retryuRedirecting %s -> %saredirectaassert_same_hostagetheaderTuRetry-Afterais_retryaraise_on_statusuRetry: %su
        Get a connection from the pool and perform an HTTP request. This is the
        lowest level call for making a request, so you'll need to specify all
        the raw details.

        .. note::

           More commonly, it's appropriate to use a convenience method provided
           by :class:`.RequestMethods`, such as :meth:`request`.

        .. note::

           `release_conn` will only behave as expected if
           `preload_content=False` because we want to make
           `preload_content=False` the default behaviour someday soon without
           breaking backwards compatibility.

        :param method:
            HTTP request method (such as GET, POST, PUT, etc.)

        :param url:
            The URL to perform the request on.

        :param body:
            Data to send in the request body, either :class:`str`, :class:`bytes`,
            an iterable of :class:`str`/:class:`bytes`, or a file-like object.

        :param headers:
            Dictionary of custom headers to send, such as User-Agent,
            If-None-Match, etc. If None, pool headers are used. If provided,
            these headers completely replace any pool-specific headers.

        :param retries:
            Configure the number of retries to allow before raising a
            :class:`~urllib3.exceptions.MaxRetryError` exception.

            Pass ``None`` to retry until you receive a response. Pass a
            :class:`~urllib3.util.retry.Retry` object for fine-grained control
            over different types of retries.
            Pass an integer number to retry connection errors that many times,
            but no other types of errors. Pass zero to never retry.

            If ``False``, then retries are disabled and any exception is raised
            immediately. Also, instead of raising a MaxRetryError on redirects,
            the redirect response will be returned.

        :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.

        :param redirect:
            If True, automatically handle redirects (status codes 301, 302,
            303, 307, 308). Each redirect counts as a retry. Disabling retries
            will disable redirect, too.

        :param assert_same_host:
            If ``True``, will make sure that the host of the pool requests is
            consistent else will raise HostChangedError. When ``False``, you can
            use the pool on an HTTP proxy and request foreign hosts.

        :param timeout:
            If specified, overrides the default timeout for this one
            request. It may be a float (in seconds) or an instance of
            :class:`urllib3.util.Timeout`.

        :param pool_timeout:
            If set and the pool is set to block=True, then this method will
            block for ``pool_timeout`` seconds and raise EmptyPoolError if no
            connection is available within the time period.

        :param release_conn:
            If False, then the urlopen call will not release the connection
            back into the pool once a response is received (but will release if
            you read the entire contents of the response such as when
            `preload_content=True`). This is useful if you're not preloading
            the response's content immediately. You will need to call
            ``r.release_conn()`` on the response ``r`` to return the connection
            back into the pool. If None, it takes the value of
            ``response_kw.get('preload_content', True)``.

        :param chunked:
            If True, urllib3 will send the body using chunked transfer
            encoding. Otherwise, urllib3 will send the body using the standard
            content-length form. Defaults to False.

        :param int body_pos:
            Position to seek to in file-like body in the event of a retry or
            redirect. Typically this won't need to be set because urllib3 will
            auto-populate the value when needed.

        :param \**response_kw:
            Additional parameters are passed to
            :meth:`urllib3.response.HTTPResponse.from_httplib`
        aHTTPConnectionPoolakey_fileacert_fileacert_reqsakey_passwordaca_certsaca_cert_dirassl_versionaassert_hostnameaassert_fingerprintaVerifiedHTTPSConnectionaset_certTakey_fileakey_passwordacert_fileacert_reqsaca_certsaca_cert_diraassert_hostnameaassert_fingerprintu
        Prepare the ``connection`` for :meth:`urllib3.util.ssl_wrap_socket`
        and establish the tunnel if proxy is used.
        aset_tunnelahttpsatls_in_tls_requiredaconnectu
        Establishes a tunnel connection through HTTP CONNECT.

        Tunnel connection is established early because otherwise httplib would
        improperly set Host: header to proxy's IP:port.
        uStarting new HTTPS connection (%d): %s:%su443aDummyConnectionTuCan't connect to HTTPS URL because the SSL module is not available.a_prepare_connu
        Return a fresh :class:`http.client.HTTPSConnection`.
        aHTTPSConnectionPoolais_verifiedawarningsawarnuUnverified HTTPS request is being made to host '%s'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warningsaInsecureRequestWarningu
        Called right before a request is made, after the socket is created.
        lPu
    Given a url, return an :class:`.ConnectionPool` instance of its host.

    This is a shortcut for not having to parse out the scheme, host, and port
    of the url before creating an :class:`.ConnectionPool` instance.

    :param url:
        Absolute URL string that must include the scheme. Port is optional.

    :param \**kw:
        Passes additional parameters to the constructor of the appropriate
        :class:`.ConnectionPool`. Useful for specifying things like
        timeout, maxsize, headers, etc.

    Example::

        >>> conn = connection_from_url('http://google.com/')
        >>> r = conn.request('GET', '/')
    anormalize_hostTw[aendswithTw]:lqnu
    Normalize hosts for comparisons and use with sockets.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importaloggingasysTaerroraerrorTaBaseSSLErroraBrokenPipeErroraDummyConnectionaHTTPConnectionaHTTPExceptionaHTTPSConnectionaVerifiedHTTPSConnectionaport_by_schemeaHTTPConnectionaHTTPSConnectionaexceptionsT
aClosedPoolErroraEmptyPoolErroraHeaderParsingErroraHostChangedErroraInsecureRequestWarningaLocationValueErroraMaxRetryErroraNewConnectionErroraProtocolErroraProxyErroraReadTimeoutErroraSSLErroraTimeoutErrorapackagesTasixupackages.six.movesTaqueueupackages.ssl_match_hostnameTaCertificateErrorTaRequestMethodsTaHTTPResponseaHTTPResponseuutil.connectionTais_connection_droppeduutil.proxyTaconnection_requires_http_tunneluutil.queueTaLifoQueueaLifoQueueuutil.requestTaset_file_positionuutil.responseTaassert_header_parsinguutil.retryTaRetryuutil.timeoutTaTimeoutuutil.urlTaUrla_encode_targetTa_normalize_hostTaget_hostaparse_urlamovesagetLoggerTuurllib3.connectionpoolTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uurllib3.connectionpoola__module__u
    Base class for all connection pools, such as
    :class:`.HTTPConnectionPool` and :class:`.HTTPSConnectionPool`.

    .. note::
       ConnectionPool.urlopen() does not normalize or percent-encode target URIs
       which is useful if your target server doesn't support percent-encoded
       target URIs.
    a__qualname__uConnectionPool.__init__a__str__uConnectionPool.__str__a__enter__uConnectionPool.__enter__a__exit__uConnectionPool.__exit__uConnectionPool.closea__orig_bases__aEAGAINaEWOULDBLOCKu
    Thread-safe connection pool for one host.

    :param host:
        Host used for this HTTP Connection (e.g. "localhost"), passed into
        :class:`http.client.HTTPConnection`.

    :param port:
        Port used for this HTTP Connection (None is equivalent to 80), passed
        into :class:`http.client.HTTPConnection`.

    :param strict:
        Causes BadStatusLine to be raised if the status line can't be parsed
        as a valid HTTP/1.0 or 1.1 status line, passed into
        :class:`http.client.HTTPConnection`.

        .. note::
           Only works in Python 2. This parameter is ignored in Python 3.

    :param timeout:
        Socket timeout in seconds for each individual connection. This can
        be a float or integer, which sets the timeout for the HTTP request,
        or an instance of :class:`urllib3.util.Timeout` which gives you more
        fine-grained control over request timeouts. After the constructor has
        been parsed, this is always a `urllib3.util.Timeout` object.

    :param maxsize:
        Number of connections to save that can be reused. More than 1 is useful
        in multithreaded situations. If ``block`` is set to False, more
        connections will be created but they will not be saved once they've
        been used.

    :param block:
        If set to True, no more than ``maxsize`` connections will be used at
        a time. When no free connections are available, the call will block
        until a connection has been released. This is a useful side effect for
        particular multithreaded situations where one does not want to use more
        than maxsize connections per host to prevent flooding.

    :param headers:
        Headers to include with all requests, unless other headers are given
        explicitly.

    :param retries:
        Retry configuration to use by default with requests in this pool.

    :param _proxy:
        Parsed proxy URL, should not be used directly, instead, see
        :class:`urllib3.ProxyManager`

    :param _proxy_headers:
        A dictionary with proxy headers, should not be used directly,
        instead, see :class:`urllib3.ProxyManager`

    :param \**conn_kw:
        Additional parameters are used to create fresh :class:`urllib3.connection.HTTPConnection`,
        :class:`urllib3.connection.HTTPSConnection` instances.
    ahttpuHTTPConnectionPool.__init__uHTTPConnectionPool._new_connuHTTPConnectionPool._get_connuHTTPConnectionPool._put_connuHTTPConnectionPool._validate_connuHTTPConnectionPool._prepare_proxyuHTTPConnectionPool._get_timeoutuHTTPConnectionPool._raise_timeoutuHTTPConnectionPool._make_requestuHTTPConnectionPool._absolute_urluHTTPConnectionPool.closeuHTTPConnectionPool.is_same_hostuHTTPConnectionPool.urlopenu
    Same as :class:`.HTTPConnectionPool`, but HTTPS.

    :class:`.HTTPSConnection` uses one of ``assert_fingerprint``,
    ``assert_hostname`` and ``host`` in this order to verify connections.
    If ``assert_hostname`` is False, no verification is done.

    The ``key_file``, ``cert_file``, ``cert_reqs``, ``ca_certs``,
    ``ca_cert_dir``, ``ssl_version``, ``key_password`` are only used if :mod:`ssl`
    is available and are fed into :meth:`urllib3.util.ssl_wrap_socket` to upgrade
    the connection socket into an SSL socket.
    uHTTPSConnectionPool.__init__uHTTPSConnectionPool._prepare_connuHTTPSConnectionPool._prepare_proxyuHTTPSConnectionPool._new_connuHTTPSConnectionPool._validate_connaconnection_from_urluurllib3\connectionpool.pyu<module urllib3.connectionpool>Ta__class__TaselfTaselfaexc_typeaexc_valaexc_tbTaselfahostaportTaselfahostaportastrictatimeoutamaxsizeablockaheadersaretriesa_proxya_proxy_headersa_proxy_configaconn_kww_Taselfahostaportastrictatimeoutamaxsizeablockaheadersaretriesa_proxya_proxy_headersakey_fileacert_fileacert_reqsakey_passwordaca_certsassl_versionaassert_hostnameaassert_fingerprintaca_cert_diraconn_kwTaselfapathTaselfatimeoutaconnTaselfatimeoutT
aselfaconnamethodaurlatimeoutachunkedahttplib_request_kwatimeout_objwearead_timeoutahttplib_responseahttp_versionahpeTaselfaconnTaselfaactual_hostaactual_portaconnTahostaschemeTaselfaerraurlatimeout_valueTaselfaconna__class__Taselfaold_poolaconnTaurlakwaschemeahostaportTaselfaurlaschemeahostaportTaselfamethodaurlabodyaheadersaretriesaredirectaassert_same_hostatimeoutapool_timeoutarelease_connachunkedabody_posaresponse_kwaparsed_urladestination_schemeaconnarelease_this_connahttp_tunnel_requiredaerraclean_exitatimeout_objais_new_proxy_connahttplib_responsearesponse_connaresponsewearedirect_locationahas_retry_afteru.urllib3CZaloggingagetLoggerTaurllib3aStreamHandlerasetFormatteraFormatterTu%(asctime)s %(levelname)s %(message)saaddHandlerasetLeveladebugTuAdded a stderr logging handler to logger: %saurllib3u
    Helper for quickly adding a StreamHandler to the logger. Useful for
    debugging.

    Returns the handler after adding it.
    awarningsasimplefilteraignoreu
    Helper for quickly disabling all urllib3 warnings.
    u
Python HTTP library with thread-safe connection pooling, file post support, user friendly, and more
a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_urllib3u\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aabsolute_importlTaNullHandleraNullHandleruTaexceptionslaexceptionsa_versionTa__version__a__version__aconnectionpoolTaHTTPConnectionPoolaHTTPSConnectionPoolaconnection_from_urlaHTTPConnectionPoolaHTTPSConnectionPoolaconnection_from_urlafilepostTaencode_multipart_formdataaencode_multipart_formdataapoolmanagerTaPoolManageraProxyManageraproxy_from_urlaPoolManageraProxyManageraproxy_from_urlaresponseTaHTTPResponseaHTTPResponseuutil.requestTamake_headersamake_headersuutil.retryTaRetryaRetryuutil.timeoutTaTimeoutaTimeoutuutil.urlTaget_hostaget_hostuAndrey Petrov (andrey.petrov@shazow.net)a__author__aMITa__license__TaHTTPConnectionPoolaHTTPSConnectionPoolaPoolManageraProxyManageraHTTPResponseaRetryaTimeoutaadd_stderr_loggeraconnection_from_urladisable_warningsaencode_multipart_formdataaget_hostamake_headersaproxy_from_urla__all__aDEBUGaadd_stderr_loggeraalwaysaSecurityWarningDaappendtadefaultaSubjectAltNameWarningaInsecurePlatformWarningaSNIMissingWarningaHTTPWarningadisable_warningsuurllib3\__init__.pyu<module urllib3>TalevelaloggerahandlerTacategory.urllib3.contrib._appengine_environais_local_appengineais_prod_appengineais_appengineaenvironaAPPENGINE_RUNTIMEapython27uReports if the app is running in the first generation sandbox.

    The second generation runtimes are technically still in a sandbox, but it
    is much less restrictive, so generally you shouldn't need to check for it.
    see https://cloud.google.com/appengine/docs/standard/runtimes
    agetTaSERVER_SOFTWAREuastartswithTuDevelopment/TuGoogle App Engine/u
This module provides means to detect the App Engine environment.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aosais_appengine_sandboxuDeprecated.ais_prod_appengine_mvmsuurllib3\contrib\_appengine_environ.pyu<module urllib3.contrib._appengine_environ>u.urllib3.contrib.appengineOaurlfetchaAppEnginePlatformErrorTuURLFetch is not available in this environment.awarningsawarnuurllib3 is using URLFetch on Google App Engine sandbox instead of sockets. To use sockets directly instead of URLFetch see https://urllib3.readthedocs.io/en/1.26.x/reference/urllib3.contrib.html.aAppEnginePlatformWarningaRequestMethodsa__init__avalidate_certificateaurlfetch_retriesaRetryaDEFAULTaretriesa_get_retriesaredirectlatotalafetcha_get_absolute_timeoutTapayloadamethodaheadersaallow_truncatedafollow_redirectsadeadlineavalidate_certificateaDeadlineExceededErroraTimeoutErroraInvalidURLErrorutoo largeuURLFetch request too large, URLFetch only supports requests up to 10mb in size.aProtocolErroraDownloadErroruToo many redirectsaMaxRetryErrorTareasonaResponseTooLargeErroruURLFetch response too large, URLFetch only supportsresponses up to 32mb in size.aSSLCertificateErroraSSLErroraInvalidMethodErroruURLFetch does not support method: %sa_urlfetch_response_to_http_responseaget_redirect_locationaraise_on_redirectutoo many redirectsastatuslaGETaincrementamethodTaresponsea_poolasleep_for_retryalogadebuguRedirecting %s -> %saurljoinaurlopenatimeoutagetheaderTuRetry-Afterais_retryuRetry: %sasleepabodyaheadersais_prod_appengineagetTucontent-encodingadeflateucontent-encodingTutransfer-encodingachunkedasplitTw,aremoveTachunkedw,utransfer-encodingaHTTPResponseaBytesIOacontentamsgaheader_msgastatus_codeaoriginal_responseaTimeoutaDEFAULT_TIMEOUTa_reada_connectuURLFetch does not support granular timeout settings, reverting to total or default URLFetch timeout.afrom_intTaredirectadefaultaconnectareaduURLFetch only supports total retries and does not recognize connect, read, or redirect retry parameters.u
This module provides a pool manager that uses Google App Engine's
`URLFetch Service <https://cloud.google.com/appengine/docs/python/urlfetch>`_.

Example usage::

    from urllib3 import PoolManager
    from urllib3.contrib.appengine import AppEngineManager, is_appengine_sandbox

    if is_appengine_sandbox():
        # AppEngineManager uses AppEngine's URLFetch API behind the scenes
        http = AppEngineManager()
    else:
        # PoolManager uses a socket-level API behind the scenes
        http = PoolManager()

    r = http.request('GET', 'https://google.com/')

There are `limitations <https://cloud.google.com/appengine/docs/python/urlfetch/#Python_Quotas_and_limits>`_ to the URLFetch service and it may not be
the best choice for your application. There are three options for using
urllib3 on Google App Engine:

1. You can use :class:`AppEngineManager` with URLFetch. URLFetch is
   cost-effective in many circumstances as long as your usage is within the
   limitations.
2. You can use a normal :class:`~urllib3.PoolManager` by enabling sockets.
   Sockets also have `limitations and restrictions
   <https://cloud.google.com/appengine/docs/python/sockets/   #limitations-and-restrictions>`_ and have a lower free quota than URLFetch.
   To use sockets, be sure to specify the following in your ``app.yaml``::

        env_variables:
            GAE_USE_SOCKETS_HTTPLIB : 'true'

3. If you are using `App Engine Flexible
<https://cloud.google.com/appengine/docs/flexible/>`_, you can use the standard
:class:`PoolManager` without any configuration or special environment variables.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importaioaloggingaexceptionsTaHTTPErroraHTTPWarningaMaxRetryErroraProtocolErroraSSLErroraTimeoutErrorlaHTTPErroraHTTPWarningupackages.six.moves.urllib.parseTaurljoinarequestTaRequestMethodsaresponseTaHTTPResponseuutil.retryTaRetryuutil.timeoutTaTimeoutuTa_appengine_environla_appengine_environugoogle.appengine.apiTaurlfetchagetLoggerTuurllib3.contrib.appenginea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.contrib.appenginea__module__a__qualname__a__orig_bases__aAppEngineManageru
    Connection manager for Google App Engine sandbox applications.

    This manager uses the URLFetch service directly instead of using the
    emulated httplib, and is subject to URLFetch limitations as described in
    the App Engine documentation `here
    <https://cloud.google.com/appengine/docs/python/urlfetch>`_.

    Notably it will raise an :class:`AppEnginePlatformError` if:
        * URLFetch is not available.
        * If you attempt to use this on App Engine Flexible, as full socket
          support is available.
        * If a request size is more than 10 megabytes.
        * If a response size is more than 32 megabytes.
        * If you use an unsupported request method such as OPTIONS.

    Beyond those cases, it will raise normal urllib3 errors.
    TnntpuAppEngineManager.__init__a__enter__uAppEngineManager.__enter__a__exit__uAppEngineManager.__exit__uAppEngineManager.urlopenuAppEngineManager._urlfetch_response_to_http_responseuAppEngineManager._get_absolute_timeoutuAppEngineManager._get_retriesais_appengineais_appengine_sandboxais_local_appengineais_prod_appengine_mvmsuurllib3\contrib\appengine.pyu<module urllib3.contrib.appengine>Ta__class__TaselfTaselfaexc_typeaexc_valaexc_tbTaselfaheadersaretriesavalidate_certificateaurlfetch_retriesTaselfatimeoutTaselfaretriesaredirectTaselfaurlfetch_resparesponse_kwacontent_encodingatransfer_encodingaencodingsaoriginal_responseTaselfamethodaurlabodyaheadersaretriesaredirectatimeoutaresponse_kwafollow_redirectsaresponseweahttp_responsearedirect_locationaredirect_urlahas_retry_after.urllib3.contrib'a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_urllib3u\not_existingacontribTaNUITKA_PACKAGE_urllib3_contribu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__uurllib3\contrib\__init__.pyu<module urllib3.contrib>u.urllib3.contrib.pyopenssl'utoo many values to unpack (expected 2)u<genexpr>a_validate_dependencies_metaPyOpenSSLContextautilaSSLContextassl_aHAS_SNIaIS_PYOPENSSLuMonkey-patch urllib3 with PyOpenSSL-backed SSL-support.aorig_util_SSLContextaorig_util_HAS_SNIuUndo monkey-patching by :func:`inject_into_urllib3`.ucryptography.x509.extensionsTaExtensionslaExtensionsaget_extension_for_classu'cryptography' module missing required functionality.  Try upgrading to v1.3.4 or newer.uOpenSSL.cryptoTaX509aX509a_x509u'pyOpenSSL' module missing required functionality. Try upgrading to v0.14 or newer.u
    Verifies that PyOpenSSL's package-level dependencies have been met.
    Throws `ImportError` if they are not met.
    u
        Borrowed wholesale from the Python Cryptography Project. It turns out
        that we can't just safely call `idna.encode`: it can explode for
        wildcard names. This avoids that problem.
        aidna_encodeu_dnsname_to_stdlib.<locals>.idna_encodew:adecodeTuutf-8u
    Converts a dNSName SubjectAlternativeName field to the form used by the
    standard library on the given Python version.

    Cryptography produces a dNSName as a unicode string that was idna-decoded
    from ASCII bytes. We need to idna-encode that string to get it back, and
    then on Python 3 we also need to convert to unicode via UTF-8 (the stdlib
    uses PyUnicode_FromStringAndSize on it, which decodes via UTF-8).

    If the name cannot be idna-encoded then we return None signalling that
    the name given should be skipped.
    aidnaTu*.w.anameastartswithaencodeTaasciiacoreaIDNAErrorato_cryptographya_Certificateaopenssl_backendaextensionsax509aSubjectAlternativeNameavalueaExtensionNotFoundaDuplicateExtensionaUnsupportedExtensionaUnsupportedGeneralNameTypealogawarninguA problem was encountered with the certificate that prevented urllib3 from finding the SubjectAlternativeName field. This can affect certificate validation. The error was %sa_dnsname_to_stdlibaget_values_for_typeaDNSNameaDNSaextendaIPAddressu
    Given an PyOpenSSL certificate, provides all the subject alternative names.
    uIP Addressuget_subj_alt_name.<locals>.<genexpr>aconnectionasocketasuppress_ragged_eofsa_makefile_refsa_closedafilenolaclosearecvaOpenSSLaSSLaSysCallErroraargsTquUnexpected EOFcaSocketErroraZeroReturnErroraget_shutdownaRECEIVED_SHUTDOWNaWantReadErrorawait_for_readagettimeoutatimeoutTuThe read operation timed outaErrorasslaSSLErroruread error: %rarecv_intoasettimeoutaselfasendadataaWantWriteErrorawait_for_writeatotal_senta_send_until_doneaSSL_WRITE_BLOCKSIZEashutdownaget_peer_certificateacryptoadump_certificateaFILETYPE_ASN1asubjectacommonNameaget_subjectaCNasubjectAltNameaget_subj_alt_nameaget_protocol_version_namea_fileobjectDacloseta_openssl_versionsaprotocolaContexta_ctxa_optionsacheck_hostnameaset_optionsa_openssl_to_stdlib_verifyaget_verify_modeaset_verifya_stdlib_to_openssl_verifya_verify_callbackaset_default_verify_pathsasixatext_typeaset_cipher_listaload_verify_locationsaBytesIOuunable to load trusted certificates: %rause_certificate_chain_fileabinary_typeaset_passwd_cbu<lambda>uPyOpenSSLContext.load_cert_chain.<locals>.<lambda>ause_privatekey_fileapasswordaensure_binaryaset_alpn_protosaConnectionaset_tlsext_host_nameaset_connect_stateacnxado_handshakeasockTuselect timed outubad handshake: %raWrappedSocketu
TLS with SNI_-support for Python 2. Follow these instructions if you would
like to verify TLS certificates in Python 2. Note, the default libraries do
*not* do certificate checking; you need to do additional work to validate
certificates yourself.

This needs the following packages installed:

* `pyOpenSSL`_ (tested with 16.0.0)
* `cryptography`_ (minimum 1.3.4, from pyopenssl)
* `idna`_ (minimum 2.0, from cryptography)

However, pyopenssl depends on cryptography, which depends on idna, so while we
use all three directly here we end up having relatively few packages required.

You can install them with the following command:

.. code-block:: bash

    $ python -m pip install pyopenssl cryptography idna

To activate certificate checking, call
:func:`~urllib3.contrib.pyopenssl.inject_into_urllib3` from your Python code
before you begin making HTTP requests. This can be done in a ``sitecustomize``
module, or at any other time before your application begins using ``urllib3``,
like this:

.. code-block:: python

    try:
        import urllib3.contrib.pyopenssl
        urllib3.contrib.pyopenssl.inject_into_urllib3()
    except ImportError:
        pass

Now you can use :mod:`urllib3` as you normally would, and it will support SNI
when the required modules are installed.

Activating this module also has the positive side effect of disabling SSL/TLS
compression in Python 2 (see `CRIME attack`_).

.. _sni: https://en.wikipedia.org/wiki/Server_Name_Indication
.. _crime attack: https://en.wikipedia.org/wiki/CRIME_(security_exploit)
.. _pyopenssl: https://www.pyopenssl.org
.. _cryptography: https://cryptography.io
.. _idna: https://github.com/kjd/idna
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importuOpenSSL.SSLacryptographyTax509ucryptography.hazmat.backends.opensslTabackendabackenducryptography.hazmat.backends.openssl.x509Ta_Certificateucryptography.x509TaUnsupportedExtensionTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.contrib.pyopenssla__module__a__qualname__a__orig_bases__TaerroraerrorTatimeoutTa_fileobjectupackages.backports.makefileTabackport_makefilelabackport_makefilealoggingasysuTautilapackagesTasixuutil.ssl_TaPROTOCOL_TLS_CLIENTaPROTOCOL_TLS_CLIENTainject_into_urllib3aextract_from_urllib3a__all__aPROTOCOL_TLSaSSLv23_METHODaPROTOCOL_TLSv1aTLSv1_METHODaPROTOCOL_SSLv3aSSLv3_METHODaPROTOCOL_TLSv1_1aTLSv1_1_METHODaPROTOCOL_TLSv1_2aTLSv1_2_METHODaCERT_NONEaVERIFY_NONEaCERT_OPTIONALaVERIFY_PEERaCERT_REQUIREDaVERIFY_FAIL_IF_NO_PEER_CERTlagetLoggerTuurllib3.contrib.pyopensslTOobjectuAPI-compatibility wrapper for Python OpenSSL's Connection-class.

    Note: _makefile_refs, _drop() and _reuse() are needed for the garbage
    collector of pypy.
    Tta__init__uWrappedSocket.__init__uWrappedSocket.filenoa_decref_socketiosuWrappedSocket._decref_socketiosuWrappedSocket.recvuWrappedSocket.recv_intouWrappedSocket.settimeoutuWrappedSocket._send_until_doneasendalluWrappedSocket.sendalluWrappedSocket.shutdownuWrappedSocket.closeTFagetpeercertuWrappedSocket.getpeercertaversionuWrappedSocket.versiona_reuseuWrappedSocket._reusea_dropuWrappedSocket._dropTqamakefileu
    I am a wrapper class for the PyOpenSSL ``Context`` object. I am responsible
    for translating the interface of the standard library ``SSLContext`` object
    to calls into PyOpenSSL.
    uPyOpenSSLContext.__init__apropertyaoptionsuPyOpenSSLContext.optionsasetteraverify_modeuPyOpenSSLContext.verify_modeuPyOpenSSLContext.set_default_verify_pathsaset_ciphersuPyOpenSSLContext.set_ciphersTnnnuPyOpenSSLContext.load_verify_locationsTnnaload_cert_chainuPyOpenSSLContext.load_cert_chainaset_alpn_protocolsuPyOpenSSLContext.set_alpn_protocolsTFtpnawrap_socketuPyOpenSSLContext.wrap_socketuurllib3\contrib\pyopenssl.pyTa.0wkwvTa.0anameTw_apasswordTapasswordu<module urllib3.contrib.pyopenssl>Ta__class__TaselfaprotocolTaselfaconnectionasocketasuppress_ragged_eofsTaselfTanameaidna_encodeTaselfadataweTaExtensionsaX509ax509Tacnxax509aerr_noaerr_depthareturn_codeTapeer_certacertaextweanamesTaselfabinary_formax509TanameaidnaaprefixTaselfacertfileakeyfileapasswordTaselfacafileacapathacadataweTaselfamodeabufsizeTaselfavalueTaselfaargsakwargsadataweTaselfaargsakwargsweTaselfadataatotal_sentasentTaselfaprotocolsTaselfaciphersTaselfatimeoutTaselfasockaserver_sideado_handshake_on_connectasuppress_ragged_eofsaserver_hostnameacnxwe.urllib3.contrib.socksVna_socks_optionsaSOCKSConnectiona__init__asource_addressasocket_optionsasocksacreate_connectionahostaportaproxy_typeasocks_versionaproxy_addraproxy_hostaproxy_portaproxy_usernameausernameaproxy_passwordapasswordaproxy_rdnsardnsatimeoutaSocketTimeoutaConnectTimeoutErroruConnection to %s timed out. (connect timeout=%s)aProxyErrorasocket_erraNewConnectionErroruFailed to establish a new connection: %saSocketErroru
        Establish a new connection via the SOCKS proxy.
        aparse_urlaauthasplitTw:utoo many values to unpack (expected 2)aschemeasocks5aPROXY_TYPE_SOCKS5asocks5hasocks4aPROXY_TYPE_SOCKS4asocks4auUnable to determine SOCKS version from %saproxy_urlaSOCKSProxyManagerapool_classes_by_schemeu
This module contains provisional support for SOCKS proxies from within
urllib3. This module supports SOCKS4, SOCKS4A (an extension of SOCKS4), and
SOCKS5. To enable its functionality, either install PySocks or install this
module with the ``socks`` extra.

The SOCKS implementation supports the full range of urllib3 features. It also
supports the following SOCKS features:

- SOCKS4A (``proxy_url='socks4a://...``)
- SOCKS4 (``proxy_url='socks4://...``)
- SOCKS5 with remote DNS (``proxy_url='socks5h://...``)
- SOCKS5 with local DNS (``proxy_url='socks5://...``)
- Usernames and passwords for the SOCKS proxy

.. note::
   It is recommended to use ``socks5h://`` or ``socks4a://`` schemes in
   your ``proxy_url`` to ensure that DNS resolution is done from the remote
   server instead of client-side when connecting to a domain name.

SOCKS4 supports IPv4 and domain names with the SOCKS4A extension. SOCKS5
supports IPv4, IPv6, and domain names.

When connecting to a SOCKS4 proxy the ``username`` portion of the ``proxy_url``
will be sent as the ``userid`` section of the SOCKS request:

.. code-block:: python

    proxy_url="socks4a://<userid>@proxy-host"

When connecting to a SOCKS5 proxy the ``username`` and ``password`` portion
of the ``proxy_url`` will be sent as the username/password to authenticate
with the proxy:

.. code-block:: python

    proxy_url="socks5h://<username>:<password>@proxy-host"

a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importlawarningsaexceptionsTaDependencyWarninglaDependencyWarningawarnuSOCKS support in urllib3 requires the installation of optional dependencies: specifically, PySocks.  For more information, see https://urllib3.readthedocs.io/en/1.26.x/contrib.html#socks-proxiesasocketTaerroraerrorTatimeoutaconnectionTaHTTPConnectionaHTTPSConnectionaHTTPConnectionaHTTPSConnectionaconnectionpoolTaHTTPConnectionPoolaHTTPSConnectionPoolaHTTPConnectionPoolaHTTPSConnectionPoolTaConnectTimeoutErroraNewConnectionErrorapoolmanagerTaPoolManageraPoolManageruutil.urlTaparse_urlassla__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.contrib.socksa__module__u
    A plain-text HTTP connection that connects via a SOCKS proxy.
    a__qualname__uSOCKSConnection.__init__a_new_connuSOCKSConnection._new_conna__orig_bases__aSOCKSHTTPSConnectionaSOCKSHTTPConnectionPoolaConnectionClsaSOCKSHTTPSConnectionPoolu
    A version of the urllib3 ProxyManager that routes connections via the
    defined SOCKS proxy.
    ahttpahttpsTnnl
nuSOCKSProxyManager.__init__uurllib3\contrib\socks.pyu<module urllib3.contrib.socks>Ta__class__Taselfaargsakwargsa__class__T
aselfaproxy_urlausernameapasswordanum_poolsaheadersaconnection_pool_kwaparsedasplitasocks_versionardnsasocks_optionsa__class__Taselfaextra_kwaconnweaerroru.urllib3.exceptionsapoolaHTTPErrora__init__u%s: %sTnnaurlaPoolErroraProxyErroraoriginal_errorareasonuMax retries exceeded with url: %s (Caused by %r)aRequestErroruTried to open a foreign host with url: %saretriesuFailed to parse: %salocationuNot supported URL scheme %saURLSchemeUnknownaschemeaIncompleteReaduIncompleteRead(%i bytes read, %i more expected)apartialaexpectedaInvalidChunkLengthatellalength_remainingaresponsealengthuInvalidChunkLength(got length %r, %i bytes read)alocalhostuProxy URL had no scheme, should start with http:// or https://uProxy URL had unsupported scheme %s, should use http:// or https://aProxySchemeUnknownu%s, unparsed data: %raUnknownaHeaderParsingErrora__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importupackages.six.moves.http_clientTaIncompleteReadllahttplib_IncompleteReadTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.exceptionsa__module__uBase exception used by this module.a__qualname__a__orig_bases__aWarningaHTTPWarninguBase warning used by this module.uBase exception for errors caused within a pool.uPoolError.__init__a__reduce__uPoolError.__reduce__uBase exception for PoolErrors that have associated URLs.uRequestError.__init__uRequestError.__reduce__aSSLErroruRaised when SSL certificate fails in an HTTPS connection.uRaised when the connection to a proxy fails.uProxyError.__init__aDecodeErroruRaised when automatic decoding based on Content-Type fails.aProtocolErroruRaised when something unexpected happens mid-request/response.aConnectionErroraMaxRetryErroruRaised when the maximum number of retries is exceeded.

    :param pool: The connection pool
    :type pool: :class:`~urllib3.connectionpool.HTTPConnectionPool`
    :param string url: The requested Url
    :param exceptions.Exception reason: The underlying error

    TnuMaxRetryError.__init__aHostChangedErroruRaised when an existing pool gets a request for a foreign host.TluHostChangedError.__init__aTimeoutStateErroruRaised when passing an invalid state to a timeoutaTimeoutErroruRaised when a socket timeout error occurs.

    Catching this error will catch both :exc:`ReadTimeoutErrors
    <ReadTimeoutError>` and :exc:`ConnectTimeoutErrors <ConnectTimeoutError>`.
    aReadTimeoutErroruRaised when a socket timeout occurs while receiving data from a serveraConnectTimeoutErroruRaised when a socket timeout occurs while connecting to a serveraNewConnectionErroruRaised when we fail to establish a new connection. Usually ECONNREFUSED.aEmptyPoolErroruRaised when a pool runs out of connections and no more are allowed.aClosedPoolErroruRaised when a request enters a pool after the pool has been closed.aLocationValueErroruRaised when there is something wrong with a given URL input.aLocationParseErroruRaised when get_host or similar fails to parse the URL input.uLocationParseError.__init__uRaised when a URL input has an unsupported scheme.uURLSchemeUnknown.__init__aResponseErroruUsed as a container for an error reason supplied in a MaxRetryError.utoo many error responsesaGENERIC_ERRORutoo many {status_code} error responsesaSPECIFIC_ERRORaSecurityWarninguWarned when performing security reducing actionsaSubjectAltNameWarninguWarned when connecting to a host with a certificate missing a SAN.aInsecureRequestWarninguWarned when making an unverified HTTPS request.aSystemTimeWarninguWarned when system time is suspected to be wrongaInsecurePlatformWarninguWarned when certain TLS/SSL configuration is not available on a platform.aSNIMissingWarninguWarned when making a HTTPS request without SNI available.aDependencyWarningu
    Warned when an attempt is made to import a module with missing optional
    dependencies.
    aResponseNotChunkeduResponse needs to be chunked in order to read it as chunks.aBodyNotHttplibCompatibleu
    Body should be :class:`http.client.HTTPResponse` like
    (have an fp attribute which returns raw chunks) for read_chunked().
    u
    Response length doesn't match expected Content-Length

    Subclass of :class:`http.client.IncompleteRead` to allow int value
    for ``partial`` to avoid creating large objects on streamed reads.
    uIncompleteRead.__init__a__repr__uIncompleteRead.__repr__uInvalid chunk length in a chunked response.uInvalidChunkLength.__init__uInvalidChunkLength.__repr__aInvalidHeaderuThe header provided was somehow invalid.uProxyManager does not support the supplied schemeuProxySchemeUnknown.__init__TEValueErroraProxySchemeUnsupporteduFetching HTTPS resources through HTTPS proxies is unsupporteduRaised by assert_header_parsing, but we convert it to a log.warning statement.uHeaderParsingError.__init__aUnrewindableBodyErroruurllib3 encountered an error when trying to rewind a bodyuurllib3\exceptions.pyu<module urllib3.exceptions>Ta__class__Taselfadefectsaunparsed_dataamessagea__class__TaselfapoolaurlaretriesamessageTaselfapartialaexpecteda__class__Taselfaresponsealengtha__class__TaselfalocationamessageTaselfapoolaurlareasonamessageTaselfapoolamessageTaselfamessageaerroraargsa__class__Taselfaschemeamessagea__class__TaselfapoolaurlamessageTaselfu.urllib3.fieldsamimetypesaguess_typelu
    Guess the "Content-Type" of a file.

    :param filename:
        The filename to guess the "Content-Type" of using :mod:`mimetypes`.
    :param default:
        If no "Content-Type" can be guessed, default to `default`.
    asixabinary_typeadecodeTuutf-8u"\
u%s="%s"avalueaasciiTEUnicodeEncodeErrorEUnicodeDecodeErroraPY2aencodeaemailautilsaencode_rfc2231uutf-8u%s*=%su
    Helper function to format and quote a single header parameter using the
    strategy defined in RFC 2231.

    Particularly useful for header parameters which might contain
    non-ASCII values, like file names. This follows
    `RFC 2388 Section 4.4 <https://tools.ietf.org/html/rfc2388#section-4.4>`_.

    :param name:
        The name of the parameter, a string expected to be ASCII only.
    :param value:
        The value of the parameter, provided as ``bytes`` or `str``.
    :ret:
        An RFC-2231-formatted unicode string.
    u<genexpr>uformat_header_param_rfc2231.<locals>.<genexpr>areplaceru_replace_multiple.<locals>.replacerareacompilew|akeysaescapeasubaneedles_and_replacementsagroupTla_replace_multiplea_HTML5_REPLACEMENTSu
    Helper function to format and quote a single header parameter using the
    HTML5 strategy.

    Particularly useful for header parameters which might contain
    non-ASCII values, like file names. This follows the `HTML5 Working Draft
    Section 4.10.22.7`_ and matches the behavior of curl and modern browsers.

    .. _HTML5 Working Draft Section 4.10.22.7:
        https://w3c.github.io/html/sec-forms.html#multipart-form-data

    :param name:
        The name of the parameter, a string expected to be ASCII only.
    :param value:
        The value of the parameter, provided as ``bytes`` or `str``.
    :ret:
        A unicode string, stripped of troublesome characters.
    a_namea_filenameadataaheadersaheader_formatterutoo many values to unpack (expected 3)utoo many values to unpack (expected 2)aguess_content_typeafilenameTafilenameaheader_formatteramake_multipartTacontent_typeu
        A :class:`~urllib3.fields.RequestField` factory from old-style tuple parameters.

        Supports constructing :class:`~urllib3.fields.RequestField` from
        parameter of key/value strings AND key/filetuple. A filetuple is a
        (filename, data, MIME type) tuple where the MIME type is optional.
        For example::

            'foo': 'bar',
            'fakefile': ('foofile.txt', 'contents of foofile'),
            'realfile': ('barfile.txt', open('realfile').read()),
            'typedfile': ('bazfile.bin', open('bazfile').read(), 'image/jpeg'),
            'nonamefile': 'contents of nonamefile field',

        Field names and filenames must be unicode.
        u
        Overridable helper function to format a single header parameter. By
        default, this calls ``self.header_formatter``.

        :param name:
            The name of the parameter, a string expected to be ASCII only.
        :param value:
            The value of the parameter, provided as a unicode string.
        aitemsapartsaselfa_render_partu; u
        Helper function to format and quote a single header.

        Useful for single headers that are composed of multiple items. E.g.,
        'Content-Disposition' fields.

        :param header_parts:
            A sequence of (k, v) tuples or a :class:`dict` of (k, v) to format
            as `k1="v1"; k2="v2"; ...`.
        uContent-DispositionuContent-TypeuContent-Locationagetalinesu%s: %su
u
        Renders the headers for this request field.
        uform-dataua_render_partsanameu
        Makes this request field into a multipart request field.

        This method overrides "Content-Disposition", "Content-Type" and
        "Content-Location" headers to the request parameter.

        :param content_type:
            The 'Content-Type' of the request body.
        :param content_location:
            The 'Content-Location' of the request body.

        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importuemail.utilsapackagesTasixlTuapplication/octet-streamaformat_header_param_rfc2231Dw"w\u%22u\\;ll lTlaunichru%{:02X}aformat_header_param_html5aformat_header_paramTOobjecta__prepare__aRequestFielda__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.fieldsa__module__u
    A data container for request body parameters.

    :param name:
        The name of this request field. Must be unicode.
    :param data:
        The data/value body.
    :param filename:
        An optional filename of the request field. Must be unicode.
    :param headers:
        An optional dict-like object of headers to initially use for the field.
    :param header_formatter:
        An optional callable that is used to encode and format the headers. By
        default, this is :func:`format_header_param_html5`.
    a__qualname__a__init__uRequestField.__init__aclassmethodafrom_tuplesuRequestField.from_tuplesuRequestField._render_partuRequestField._render_partsarender_headersuRequestField.render_headersTnnnuRequestField.make_multiparta__orig_bases__uurllib3\fields.pyTa.0achavalueu<module urllib3.fields>Ta__class__Taselfanameadataafilenameaheadersaheader_formatterTaselfanameavalueTaselfaheader_partsapartsaiterableanameavalueTavalueaneedles_and_replacementsareplacerapatternaresultTanameavalueTanameavaluearesultTaclsafieldnameavalueaheader_formatterafilenameadataacontent_typearequest_paramTafilenameadefaultTaselfacontent_dispositionacontent_typeacontent_locationTaselfalinesasort_keysasort_keyaheader_nameaheader_valueTamatchaneedles_and_replacementsTaneedles_and_replacements.urllib3.filepost8AabinasciiahexlifyaurandomTlasixaPY2adecodeTaasciiu
    Our embarrassingly-simple replacement for mimetools.choose_boundary.
    u
    Iterate over fields.

    Supports list of (k, v) tuples and dicts, and lists of
    :class:`~urllib3.fields.RequestField`.

    afieldsaiteritemsaRequestFieldafrom_tuplesaiter_field_objectsu
    .. deprecated:: 1.6

    Iterate over fields.

    The addition of :class:`~urllib3.fields.RequestField` makes this function
    obsolete. Instead, use :func:`iter_field_objects`, which returns
    :class:`~urllib3.fields.RequestField` objects.

    Supports list of (k, v) tuples and dicts.
    utoo many values to unpack (expected 2)u<genexpr>uiter_fields.<locals>.<genexpr>aBytesIOachoose_boundaryabodyawritewbu--%s
aboundaryawriterarender_headersadataatext_typeTc
u--%s--
umultipart/form-data; boundary=%sagetvalueu
    Encode a dictionary of ``fields`` using the multipart/form-data MIME format.

    :param fields:
        Dictionary of fields or list of (key, :class:`~urllib3.fields.RequestField`).

    :param boundary:
        If not specified, then a random boundary will be generated using
        :func:`urllib3.filepost.choose_boundary`.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importlacodecsaosTaRequestFieldlapackagesTasixupackages.sixTwbalookupTuutf-8laiter_fieldsTnaencode_multipart_formdatauurllib3\filepost.pyTa.0wkwvu<module urllib3.filepost>TaboundaryTafieldsaboundaryabodyafieldadataacontent_typeTafieldswiafieldTafieldsu.urllib3.packages.backportsa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_urllib3u\not_existingupackages\backportsTaNUITKA_PACKAGE_urllib3_packagesu\not_existingabackportsTaNUITKA_PACKAGE_urllib3_packages_backportsu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__uurllib3\packages\backports\__init__.pyu<module urllib3.packages.backports>u.urllib3.packages.backports.makefile"Swwwbwruinvalid mode %r (only r, w, b allowed)wwwrwbuaSocketIOa_makefile_refslqlaDEFAULT_BUFFER_SIZEuunbuffered streams must be binaryaBufferedRWPairaBufferedReaderaBufferedWriteraTextIOWrapperamodeu
    Backport of ``socket.makefile`` from Python 3.5.
    u
backports.makefile
~~~~~~~~~~~~~~~~~~

Backports the Python 3 ``socket.makefile`` method for use with anything that
wants to create a "fake" socket object.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aioasocketTaSocketIOTwrnnnnabackport_makefileuurllib3\packages\backports\makefile.pyu<module urllib3.packages.backports.makefile>T
aselfamodeabufferingaencodingaerrorsanewlineawritingareadingabinaryarawmodearawabufferatext.urllib3.packagessa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_urllib3u\not_existingapackagesTaNUITKA_PACKAGE_urllib3_packagesu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aabsolute_importuTassl_match_hostnamelassl_match_hostnamela__all__uurllib3\packages\__init__.pyu<module urllib3.packages>.urllib3.packages.six9%a__doc__uAdd documentation to a function.amodulesuImport module, returning the module after the last dot.anamea_resolveadelattraMovedModulea__init__aPY3amoda_import_modulea_LazyModulea__name__a_moved_attributesaMovedAttributeaattraknown_modulesaselfw.aspec_from_loaderuThis loader does not know module a_SixMetaPathImporter__get_modulea__loader__a__path__u
        Return true, if the named module is a package.

        We need this method to get correct spec objects with
        Python 3.4 (see PEP451)
        uReturn None

        Required, if is_package is implementedaload_moduleLaparseaerrorarequestaresponsearobotparsera_MovedItemsuAdd an item to six.moves.amovesuno such move, %ruRemove item from six.moves.anexta__mro__a__call__u<genexpr>ucallable.<locals>.<genexpr>aim_funcaMethodTypea__next__akeysavaluesaitemsalistsaiterkeysaitervaluesaiteritemsaiterlistsaencodeTulatin-1aunicodeareplaceTu\\u\\\\aunicode_escapela_assertCountEquala_assertRaisesRegexa_assertRegexa_assertNotRegexa__traceback__awith_tracebacka_getframeTlaf_globalsaf_localsa_code_a_globs_a_locs_aframeuexec _code_ in _globs_, _locs_u<string>aexecuExecute code in a namespace.afileastdoutawriteuprint_.<locals>.writeapopTasepnusep must be None or a stringTaendnuend must be None or a stringuinvalid keyword arguments to print()Tw
Tw w
w utoo many values to unpack (expected 2)asepuThe new-style print function for Python 2.4 and 2.5.abasestringafpaencodingaerrorsastrictTOtypea__prepare__ametaclassa__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uurllib3.packages.sixa__module__uwith_metaclass.<locals>.metaclassa__qualname__a__new__uwith_metaclass.<locals>.metaclass.__new__aclassmethoduwith_metaclass.<locals>.metaclass.__prepare__a__orig_bases__atemporary_classuCreate a base class with a metaclass.aresolve_basesabasesametaawrapperuadd_metaclass.<locals>.wrapperuClass decorator for creating a class with a metaclass.acopyagetTa__slots__aorig_varsTa__dict__nTa__weakref__na__bases__abinary_typeatext_typeunot expecting type '%s'uCoerce **s** to six.binary_type.

    For Python 2:
      - `unicode` -> encoded to `str`
      - `str` -> `str`

    For Python 3:
      - `str` -> encoded to `bytes`
      - `bytes` -> `bytes`
    aPY2adecodeuCoerce *s* to `str`.

    For Python 2:
      - `unicode` -> encoded to `str`
      - `str` -> `str`

    For Python 3:
      - `str` -> `str`
      - `bytes` -> decoded to `str`
    uCoerce *s* to six.text_type.

    For Python 2:
      - `unicode` -> `unicode`
      - `str` -> `unicode`

    For Python 3:
      - `str` -> `str`
      - `bytes` -> decoded to `str`
    a__str__u@python_2_unicode_compatible cannot be applied to %s because it doesn't define __str__().a__unicode__u<lambda>upython_2_unicode_compatible.<locals>.<lambda>u
    A class decorator that defines __unicode__ and __str__ methods under Python 2.
    Under Python 3 it does nothing.

    To support Python 2 and 3 with a single code base, define a __str__ method
    returning text and apply this decorator to the class.
    Tuutf-8uUtilities for writing code that runs on Python 2 and 3a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importafunctoolsaitertoolsaoperatorasysatypesuBenjamin Peterson <benjamin@python.org>a__author__u1.16.0a__version__aPY34TOstrastring_typesTOintainteger_typesaclass_typesgaMAXSIZEuimportlib.utilTaspec_from_loadera_add_docTOobjecta_LazyDescru_LazyDescr.__init__a__get__u_LazyDescr.__get__TnuMovedModule.__init__uMovedModule._resolvea__getattr__uMovedModule.__getattr__aModuleTypeu_LazyModule.__init__a__dir__u_LazyModule.__dir__TnnuMovedAttribute.__init__uMovedAttribute._resolvea_SixMetaPathImporteru
    A meta path importer to import six.moves and its submodules.

    This class implements a PEP302 finder and loader. It should be compatible
    with Python 2.5 and all existing versions of Python3
    u_SixMetaPathImporter.__init__a_add_moduleu_SixMetaPathImporter._add_modulea_get_moduleu_SixMetaPathImporter._get_moduleafind_moduleu_SixMetaPathImporter.find_moduleafind_specu_SixMetaPathImporter.find_speca__get_moduleu_SixMetaPathImporter.__get_moduleu_SixMetaPathImporter.load_moduleais_packageu_SixMetaPathImporter.is_packageaget_codeu_SixMetaPathImporter.get_codeaget_sourceacreate_moduleu_SixMetaPathImporter.create_moduleaexec_moduleu_SixMetaPathImporter.exec_moduleTuurllib3.packages.sixa_importeruLazy loading of moved objectsTacStringIOacStringIOaioaStringIOTafilteraitertoolsabuiltinsaifilterafilterTafilterfalseaitertoolsaitertoolsaifilterfalseafilterfalseTainputa__builtin__abuiltinsaraw_inputainputTainterna__builtin__asysTamapaitertoolsabuiltinsaimapamapTagetcwdaosaosagetcwduagetcwdTagetcwdbaosaosagetcwdagetcwdbTagetoutputacommandsasubprocessTarangea__builtin__abuiltinsaxrangearangeareload_modulea__builtin__aimportlibaimpareloadTareducea__builtin__afunctoolsTashlex_quoteapipesashlexaquoteTaStringIOaStringIOaioTaUserDictaUserDictacollectionsTaUserListaUserListacollectionsTaUserStringaUserStringacollectionsTaxrangea__builtin__abuiltinsaxrangearangeTazipaitertoolsabuiltinsaizipazipTazip_longestaitertoolsaitertoolsaizip_longestazip_longestTabuiltinsa__builtin__TaconfigparseraConfigParserTacollections_abcacollectionsucollections.abcTacopyregacopy_regTadbm_gnuagdbmudbm.gnuTadbm_ndbmadbmudbm.ndbmTa_dummy_threadadummy_threada_threadTahttp_cookiejaracookielibuhttp.cookiejarTahttp_cookiesaCookieuhttp.cookiesTahtml_entitiesahtmlentitydefsuhtml.entitiesTahtml_parseraHTMLParseruhtml.parserTahttp_clientahttplibuhttp.clientTaemail_mime_baseuemail.MIMEBaseuemail.mime.baseTaemail_mime_imageuemail.MIMEImageuemail.mime.imageTaemail_mime_multipartuemail.MIMEMultipartuemail.mime.multipartTaemail_mime_nonmultipartuemail.MIMENonMultipartuemail.mime.nonmultipartTaemail_mime_textuemail.MIMETextuemail.mime.textTaBaseHTTPServeraBaseHTTPServeruhttp.serverTaCGIHTTPServeraCGIHTTPServeruhttp.serverTaSimpleHTTPServeraSimpleHTTPServeruhttp.serverTacPickleacPickleapickleTaqueueaQueueTareprlibareprTasocketserveraSocketServerTa_threadathreada_threadTatkinteraTkinterTatkinter_dialogaDialogutkinter.dialogTatkinter_filedialogaFileDialogutkinter.filedialogTatkinter_scrolledtextaScrolledTextutkinter.scrolledtextTatkinter_simpledialogaSimpleDialogutkinter.simpledialogTatkinter_tixaTixutkinter.tixTatkinter_ttkattkutkinter.ttkTatkinter_constantsaTkconstantsutkinter.constantsTatkinter_dndaTkdndutkinter.dndTatkinter_colorchooseratkColorChooserutkinter.colorchooserTatkinter_commondialogatkCommonDialogutkinter.commondialogTatkinter_tkfiledialogatkFileDialogutkinter.filedialogTatkinter_fontatkFontutkinter.fontTatkinter_messageboxatkMessageBoxutkinter.messageboxTatkinter_tksimpledialogatkSimpleDialogutkinter.simpledialogTaurllib_parseuurllib3.packages.six.moves.urllib_parseuurllib.parseTaurllib_erroruurllib3.packages.six.moves.urllib_erroruurllib.errorTaurllibuurllib3.packages.six.moves.urllibuurllib3.packages.six.moves.urllibTaurllib_robotparserarobotparseruurllib.robotparserTaxmlrpc_clientaxmlrpclibuxmlrpc.clientTaxmlrpc_serveraSimpleXMLRPCServeruxmlrpc.serverTawinrega_winregumoves.Tuurllib3.packages.six.movesaModule_six_moves_urllib_parseuLazy loading of moved objects in six.moves.urllib_parseTaParseResultaurlparseuurllib.parseTaSplitResultaurlparseuurllib.parseTaparse_qsaurlparseuurllib.parseTaparse_qslaurlparseuurllib.parseTaurldefragaurlparseuurllib.parseTaurljoinaurlparseuurllib.parseTaurlparseaurlparseuurllib.parseTaurlsplitaurlparseuurllib.parseTaurlunparseaurlparseuurllib.parseTaurlunsplitaurlparseuurllib.parseTaquoteaurllibuurllib.parseTaquote_plusaurllibuurllib.parseTaunquoteaurllibuurllib.parseTaunquote_plusaurllibuurllib.parseTaunquote_to_bytesaurllibuurllib.parseaunquoteaunquote_to_bytesTaurlencodeaurllibuurllib.parseTasplitqueryaurllibuurllib.parseTasplittagaurllibuurllib.parseTasplituseraurllibuurllib.parseTasplitvalueaurllibuurllib.parseTauses_fragmentaurlparseuurllib.parseTauses_netlocaurlparseuurllib.parseTauses_paramsaurlparseuurllib.parseTauses_queryaurlparseuurllib.parseTauses_relativeaurlparseuurllib.parsea_urllib_parse_moved_attributesTuurllib3.packages.six.moves.urllib_parseumoves.urllib_parseumoves.urllib.parseaModule_six_moves_urllib_erroruLazy loading of moved objects in six.moves.urllib_errorTaURLErroraurllib2uurllib.errorTaHTTPErroraurllib2uurllib.errorTaContentTooShortErroraurllibuurllib.errora_urllib_error_moved_attributesTuurllib3.packages.six.moves.urllib.errorumoves.urllib_errorumoves.urllib.erroraModule_six_moves_urllib_requestuLazy loading of moved objects in six.moves.urllib_requestTaurlopenaurllib2uurllib.requestTainstall_openeraurllib2uurllib.requestTabuild_openeraurllib2uurllib.requestTapathname2urlaurllibuurllib.requestTaurl2pathnameaurllibuurllib.requestTagetproxiesaurllibuurllib.requestTaRequestaurllib2uurllib.requestTaOpenerDirectoraurllib2uurllib.requestTaHTTPDefaultErrorHandleraurllib2uurllib.requestTaHTTPRedirectHandleraurllib2uurllib.requestTaHTTPCookieProcessoraurllib2uurllib.requestTaProxyHandleraurllib2uurllib.requestTaBaseHandleraurllib2uurllib.requestTaHTTPPasswordMgraurllib2uurllib.requestTaHTTPPasswordMgrWithDefaultRealmaurllib2uurllib.requestTaAbstractBasicAuthHandleraurllib2uurllib.requestTaHTTPBasicAuthHandleraurllib2uurllib.requestTaProxyBasicAuthHandleraurllib2uurllib.requestTaAbstractDigestAuthHandleraurllib2uurllib.requestTaHTTPDigestAuthHandleraurllib2uurllib.requestTaProxyDigestAuthHandleraurllib2uurllib.requestTaHTTPHandleraurllib2uurllib.requestTaHTTPSHandleraurllib2uurllib.requestTaFileHandleraurllib2uurllib.requestTaFTPHandleraurllib2uurllib.requestTaCacheFTPHandleraurllib2uurllib.requestTaUnknownHandleraurllib2uurllib.requestTaHTTPErrorProcessoraurllib2uurllib.requestTaurlretrieveaurllibuurllib.requestTaurlcleanupaurllibuurllib.requestTaURLopeneraurllibuurllib.requestTaFancyURLopeneraurllibuurllib.requestTaproxy_bypassaurllibuurllib.requestTaparse_http_listaurllib2uurllib.requestTaparse_keqv_listaurllib2uurllib.requesta_urllib_request_moved_attributesTuurllib3.packages.six.moves.urllib.requestumoves.urllib_requestumoves.urllib.requestaModule_six_moves_urllib_responseuLazy loading of moved objects in six.moves.urllib_responseTaaddbaseaurllibuurllib.responseTaaddclosehookaurllibuurllib.responseTaaddinfoaurllibuurllib.responseTaaddinfourlaurllibuurllib.responsea_urllib_response_moved_attributesTuurllib3.packages.six.moves.urllib.responseumoves.urllib_responseumoves.urllib.responseaModule_six_moves_urllib_robotparseruLazy loading of moved objects in six.moves.urllib_robotparserTaRobotFileParserarobotparseruurllib.robotparsera_urllib_robotparser_moved_attributesTuurllib3.packages.six.moves.urllib.robotparserumoves.urllib_robotparserumoves.urllib.robotparseraModule_six_moves_urllibuCreate a six.moves.urllib namespace that resembles the Python 3 namespaceTumoves.urllib_parseaparseTumoves.urllib_erroraerrorTumoves.urllib_requestarequestTumoves.urllib_responsearesponseTumoves.urllib_robotparserarobotparseruModule_six_moves_urllib.__dir__Tuurllib3.packages.six.moves.urllibumoves.urllibaadd_movearemove_movea__func__a_meth_funca__self__a_meth_selfa__closure__a_func_closurea__code__a_func_codea__defaults__a_func_defaultsa__globals__a_func_globalsaim_selfafunc_closureafunc_codeafunc_defaultsafunc_globalsaadvance_iteratoracallableaget_unbound_functionacreate_bound_methodacreate_unbound_methodaIteratoruIterator.nextuGet the function out of a possibly unbound functionaattrgetteraget_method_functionaget_method_selfaget_function_closureaget_function_codeaget_function_defaultsaget_function_globalsamethodcallerTakeysaviewkeysTavaluesaviewvaluesTaitemsaviewitemsTaviewkeysTaviewvaluesTaviewitemsuReturn an iterator over the keys of a dictionary.uReturn an iterator over the values of a dictionary.uReturn an iterator over the (key, value) pairs of a dictionary.uReturn an iterator over the (key, [values]) pairs of a dictionary.wbwuachraunichrastructaStructTu>Bapackaint2byteaitemgetterTlabyte2intagetitemaindexbytesaiteraiterbytesaioaStringIOaBytesIOaassertCountEqualaassertRaisesRegexaassertRegexaassertNotRegexapartialaimapaordaassertItemsEqualaassertRaisesRegexpaassertRegexpMatchesaassertNotRegexpMatchesuByte literaluText literalabuiltinsaexec_areraiseTudef reraise(tp, value, tb=None):
    try:
        raise tp, value, tb
    finally:
        tb = None
Tudef raise_from(value, from_value):
    try:
        raise value from from_value
    finally:
        value = None
aprintaprint_uReraise an exception.awrapsawith_metaclassaadd_metaclassTuutf-8astrictaensure_binaryaensure_straensure_textapython_2_unicode_compatiblea__package__Ta__spec__asubmodule_search_locationsameta_pathwiaimporteraappenduurllib3\packages\six.pyTa.0aklassTaselfu<module urllib3.packages.six>Ta__class__TaselfaattrsTaselfaobjatparesultTaselfafullnameTaselfaattra_moduleavalueTaselfanameaold_modanew_modaold_attranew_attra__class__Taselfanameaoldanewa__class__TaselfanameTaselfanamea__class__Taselfasix_module_nameTaclsanameathis_baseswdaresolved_basesabasesametaTabasesametaTaclsanameathis_basesametaabasesTafuncadocTaselfamodafullnamesafullnameTanameTaselfamoduleTametaclassawrapperTamoveTaitTaselfaargsakwargsTwsTabsTaobjTafuncaobjTaselfaspecTafuncaclsTwsaencodingaerrorsTa_code_a_globs_a_locs_aframeTaselfafullnameapathTaselfafullnameapathatargetTaunboundTabufwiTwdakwTaselfafullnameamodTaargsakwargsafpawriteawant_unicodeasepaendaarganewlineaspacewiTaklassTatpavalueatbTametaabasesametaclassTaclsaorig_varsaslotsaslots_varametaclassTametaclassTadataaerrorsafpTafpu.urllib3.packages.ssl_match_hostname._implementationNasplitTw.l:lnnacountTw*aCertificateErrorutoo many wildcards in certificate DNS name: alowerw*u[^.]+astartswithTuxn--areaescapeareplaceTu\*u[^.]*apatsacompileu\Au\.u\ZaIGNORECASEamatchuMatching according to RFC 6125, section 6.4.3

    http://tools.ietf.org/html/rfc6125#section-6.4.3
    aipaddressaip_addressa_to_unicodearstripuExact matching of IP addresses.

    RFC 6125 explicitly doesn't define an algorithm for this
    (section 1.7.2 - "Out of Scope").
    uempty or no certificate, match_hostname needs a SSL socket or SSL context with either CERT_OPTIONAL or CERT_REQUIREDagetTasubjectAltNameTutoo many values to unpack (expected 2)aDNSahost_ipa_dnsname_matchahostnameadnsnamesuIP Addressa_ipaddress_matchTasubjectTacommonNameuhostname %r doesn't match either of %su, arepruhostname %r doesn't match %rTuno appropriate commonName or subjectAltName fields were founduVerify that *cert* (in decoded format as returned by
    SSLSocket.getpeercert()) matches the *hostname*.  RFC 2818 and RFC 6125
    rules are followed, but IP addresses are not accepted for *hostname*.

    CertificateError is raised on failure. On success, the function
    returns nothing.
    uThe match_hostname() function from Python 3.3.3, essential when using SSL.a__doc__a__file__a__spec__aoriginahas_locationa__cached__asysu3.5.0.1a__version__TEValueErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.packages.ssl_match_hostname._implementationa__module__a__qualname__a__orig_bases__Tlamatch_hostnameuurllib3\packages\ssl_match_hostname\_implementation.pyu<module urllib3.packages.ssl_match_hostname._implementation>T
adnahostnameamax_wildcardsapatsapartsaleftmostaremainderawildcardsafragapatTaipnameahost_ipaipTaobjTacertahostnameahost_ipadnsnamesasanakeyavalueasubu.urllib3.packages.ssl_match_hostname_a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_urllib3u\not_existingupackages\ssl_match_hostnameTaNUITKA_PACKAGE_urllib3_packagesu\not_existingassl_match_hostnameTaNUITKA_PACKAGE_urllib3_packages_ssl_match_hostnameu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__asysuFallback to vendored codeubackports.ssl_match_hostnameTaCertificateErroramatch_hostnamelaCertificateErroramatch_hostnamea_implementationla__all__uurllib3\packages\ssl_match_hostname\__init__.pyu<module urllib3.packages.ssl_match_hostname>u.urllib3.poolmanager+acopyaschemealowerahostTaheadersa_proxy_headersa_socks_optionsacontextaitemsagetTasocket_optionsasocket_optionsakeysapopakey_a_fieldsu
    Create a pool key out of a request context dictionary.

    According to RFC 3986, both the scheme and host are case-insensitive.
    Therefore, this function normalizes both before constructing the pool
    key for an HTTPS request. If you wish to change this behaviour, provide
    alternate callables to ``key_fn_by_scheme``.

    :param key_class:
        The class to use when constructing the key. This should be a namedtuple
        with the ``scheme`` and ``host`` keys at a minimum.
    :type  key_class: namedtuple
    :param request_context:
        A dictionary-like object that contain the context for a request.
    :type  request_context: dict

    :return: A namedtuple that can be used as a connection pool key.
    :rtype:  PoolKey
    aRequestMethodsa__init__aconnection_pool_kwaRecentlyUsedContaineru<lambda>uPoolManager.__init__.<locals>.<lambda>Tadispose_funcapoolsapool_classes_by_schemeakey_fn_by_schemeacloseaclearTaschemeahostaportarequest_contextahttpaSSL_KEYWORDSu
        Create a new :class:`urllib3.connectionpool.ConnectionPool` based on host, port, scheme, and
        any additional pool keyword arguments.

        If ``request_context`` is provided, it is provided as keyword arguments
        to the pool class used. This method is used to actually create the
        connection pools handed out by :meth:`connection_from_url` and
        companion methods. It is intended to be overridden for customization.
        u
        Empty our store of pools and direct them all to close.

        This will not affect in-flight connections, but they will not be
        re-used after completion.
        aLocationValueErrorTuNo host specified.a_merge_pool_kwargsaport_by_schemelPaportaconnection_from_contextu
        Get a :class:`urllib3.connectionpool.ConnectionPool` based on the host, port, and scheme.

        If ``port`` isn't given, it will be derived from the ``scheme`` using
        ``urllib3.connectionpool.port_by_scheme``. If ``pool_kwargs`` is
        provided, it is merged with the instance's ``connection_pool_kw``
        variable and used to create the new connection pool, if one is
        needed.
        aURLSchemeUnknownaconnection_from_pool_keyTarequest_contextu
        Get a :class:`urllib3.connectionpool.ConnectionPool` based on the request context.

        ``request_context`` must at least contain the ``scheme`` key and its
        value must be a key in ``key_fn_by_scheme`` instance variable.
        alocka__enter__a__exit__a_new_poolTnnnapoolu
        Get a :class:`urllib3.connectionpool.ConnectionPool` based on the provided pool key.

        ``pool_key`` should be a namedtuple that only contains immutable
        objects. At a minimum it must have the ``scheme``, ``host``, and
        ``port`` fields.
        aparse_urlaconnection_from_hostTaportaschemeapool_kwargsu
        Similar to :func:`urllib3.connectionpool.connection_from_url`.

        If ``pool_kwargs`` is not provided and a new pool needs to be
        constructed, ``self.connection_pool_kw`` is used to initialize
        the :class:`urllib3.connectionpool.ConnectionPool`. If ``pool_kwargs``
        is provided, it is used instead. Note that if a new pool does not
        need to be created for the request, the provided ``pool_kwargs`` are
        not used.
        utoo many values to unpack (expected 2)abase_pool_kwargsu
        Merge a dictionary of override values for self.connection_pool_kw.

        This does not modify self.connection_pool_kw and returns a new dict.
        Any keys in the override dictionary with a value of ``None`` are
        removed from the merged dictionary.
        aproxyaconnection_requires_http_tunnelaproxy_configu
        Indicates if the proxy requires the complete destination URL in the
        request.  Normally this is only needed when not using an HTTP CONNECT
        tunnel.
        ahttpsasixaPY2ause_forwarding_for_httpsaProxySchemeUnsupportedTuContacting HTTPS destinations through HTTPS proxies 'via CONNECT tunnels' is not supported in Python 2u
        Validates that were not attempting to do TLS in TLS connections on
        Python2 or with unsupported SSL implementations.
        a_validate_proxy_scheme_url_selectionTaportaschemeaassert_same_hostaredirectaheadersa_proxy_requires_url_absolute_formaurlopenarequest_uriaget_redirect_locationaurljoinastatuslaGETTaretriesaRetryafrom_intTaredirectaremove_headers_on_redirectaconnais_same_hostaiterkeysaretriesaincrementTaresponsea_poolaMaxRetryErroraraise_on_redirectadrain_connalogainfouRedirecting %s -> %su
        Same as :meth:`urllib3.HTTPConnectionPool.urlopen`
        with custom cross-host redirect logic and only sends the request-uri
        portion of the ``url``.

        The given ``url`` parameter must be absolute, such that an appropriate
        :class:`urllib3.connectionpool.ConnectionPool` can be chosen for it.
        aHTTPConnectionPoolu%s://%s:%iTahttpahttpsaProxySchemeUnknowna_replaceTaportaproxy_headersaproxy_ssl_contextaProxyConfiga_proxya_proxy_headersa_proxy_configaProxyManagerTapool_kwargsDaAcceptu*/*anetlocaHostu
        Sets headers needed by proxies: specifically, the Accept and Host
        headers. Only sets headers not provided by the user.
        a_set_proxy_headersuSame as HTTP(S)ConnectionPool.urlopen, ``url`` must be absolute.aproxy_urla__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importacollectionslafunctoolsalogginga_collectionsTaRecentlyUsedContainerlaconnectionpoolTaHTTPConnectionPoolaHTTPSConnectionPoolaport_by_schemeaHTTPSConnectionPoolaexceptionsTaLocationValueErroraMaxRetryErroraProxySchemeUnknownaProxySchemeUnsupportedaURLSchemeUnknownapackagesTasixupackages.six.moves.urllib.parseTaurljoinarequestTaRequestMethodsuutil.proxyTaconnection_requires_http_tunneluutil.retryTaRetryuutil.urlTaparse_urlaPoolManageraproxy_from_urla__all__agetLoggerTuurllib3.poolmanagerTakey_fileacert_fileacert_reqsaca_certsassl_versionaca_cert_dirassl_contextakey_passwordTakey_schemeakey_hostakey_portakey_timeoutakey_retriesakey_strictakey_blockakey_source_addressakey_key_fileakey_key_passwordakey_cert_fileakey_cert_reqsakey_ca_certsakey_ssl_versionakey_ca_cert_dirakey_ssl_contextakey_maxsizeakey_headersakey__proxyakey__proxy_headersakey__proxy_configakey_socket_optionsakey__socks_optionsakey_assert_hostnameakey_assert_fingerprintakey_server_hostnamea_key_fieldsanamedtupleaPoolKeyTassl_contextause_forwarding_for_httpsa_proxy_config_fieldsa_default_key_normalizerapartiala__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.poolmanagera__module__u
    Allows for arbitrary requests while transparently keeping track of
    necessary connection pools for you.

    :param num_pools:
        Number of connection pools to cache before discarding the least
        recently used pool.

    :param headers:
        Headers to include with all requests, unless other headers are given
        explicitly.

    :param \**connection_pool_kw:
        Additional parameters are used to create fresh
        :class:`urllib3.connectionpool.ConnectionPool` instances.

    Example::

        >>> manager = PoolManager(num_pools=2)
        >>> r = manager.request('GET', 'http://google.com/')
        >>> r = manager.request('GET', 'http://google.com/mail')
        >>> r = manager.request('GET', 'http://yahoo.com/')
        >>> len(manager.pools)
        2

    a__qualname__Tl
nuPoolManager.__init__uPoolManager.__enter__uPoolManager.__exit__TnuPoolManager._new_pooluPoolManager.clearTnahttpnuPoolManager.connection_from_hostuPoolManager.connection_from_contextuPoolManager.connection_from_pool_keyaconnection_from_urluPoolManager.connection_from_urluPoolManager._merge_pool_kwargsuPoolManager._proxy_requires_url_absolute_formuPoolManager._validate_proxy_scheme_url_selectionTtuPoolManager.urlopena__orig_bases__u
    Behaves just like :class:`PoolManager`, but sends all requests through
    the defined proxy, using the CONNECT method for HTTPS URLs.

    :param proxy_url:
        The URL of the proxy to be used.

    :param proxy_headers:
        A dictionary containing headers that will be sent to the proxy. In case
        of HTTP they are being sent with each request, while in the
        HTTPS/CONNECT case they are sent only once. Could be used for proxy
        authentication.

    :param proxy_ssl_context:
        The proxy SSL context is used to establish the TLS connection to the
        proxy when using HTTPS proxies.

    :param use_forwarding_for_https:
        (Defaults to False) If set to True will forward requests to the HTTPS
        proxy to be made on behalf of the client instead of creating a TLS
        tunnel via the CONNECT method. **Enabling this flag means that request
        and response headers and content will be visible from the HTTPS proxy**
        whereas tunneling keeps request and response headers and content
        private.  IP address, target hostname, SNI, and port are always visible
        to an HTTPS proxy even when this flag is disabled.

    Example:
        >>> proxy = urllib3.ProxyManager('http://localhost:3128/')
        >>> r1 = proxy.request('GET', 'http://google.com/')
        >>> r2 = proxy.request('GET', 'http://httpbin.org/')
        >>> len(proxy.pools)
        1
        >>> r3 = proxy.request('GET', 'https://httpbin.org/')
        >>> r4 = proxy.request('GET', 'https://twitter.com/')
        >>> len(proxy.pools)
        3

    Tl
nnnFuProxyManager.__init__uProxyManager.connection_from_hostuProxyManager._set_proxy_headersuProxyManager.urlopenuurllib3\poolmanager.pyTwpu<module urllib3.poolmanager>Ta__class__TaselfTaselfaexc_typeaexc_valaexc_tbTaselfanum_poolsaheadersaconnection_pool_kwTaselfaproxy_urlanum_poolsaheadersaproxy_headersaproxy_ssl_contextause_forwarding_for_httpsaconnection_pool_kwaproxyaporta__class__Takey_classarequest_contextacontextakeyasocket_optsafieldTaselfaoverrideabase_pool_kwargsakeyavalueTaselfaschemeahostaportarequest_contextapool_clsakeyakwTaselfaparsed_urlTaselfaurlaheadersaheaders_anetlocTaselfaurl_schemeTaselfarequest_contextaschemeapool_key_constructorapool_keyTaselfahostaportaschemeapool_kwargsarequest_contextTaselfahostaportaschemeapool_kwargsa__class__Taselfapool_keyarequest_contextapoolaschemeahostaportTaselfaurlapool_kwargswuTaurlakwTaselfamethodaurlaredirectakwwuaconnaresponsearedirect_locationaretriesaheadersaheaderTaselfamethodaurlaredirectakwwuaheadersa__class__u.urllib3.requestfEaheadersuClasses extending RequestMethods must implement their own ``urlopen`` method.aupperarequest_urla_encode_url_methodsarequest_encode_urlafieldsarequest_encode_bodyu
        Make a request using :meth:`urlopen` with the appropriate encoding of
        ``fields`` based on the ``method`` used.

        This is a convenience method that requires the least amount of manual
        effort. It can be used in most situations, while still having the
        option to drop down to more specific methods when necessary, such as
        :meth:`request_encode_url`, :meth:`request_encode_body`,
        or even the lowest level :meth:`urlopen`.
        w?aurlencodeaurlopenu
        Make a request using :meth:`urlopen` with the ``fields`` encoded in
        the url. This is useful for request methods like GET, HEAD, DELETE, etc.
        DaheadersDabodyurequest got values for both 'fields' and 'body', can only specify one.aencode_multipart_formdataTaboundaryutoo many values to unpack (expected 2)uapplication/x-www-form-urlencodeduContent-Typeaupdateu
        Make a request using :meth:`urlopen` with the ``fields`` encoded in
        the body. This is useful for request methods like POST, PUT, PATCH, etc.

        When ``encode_multipart=True`` (default), then
        :func:`urllib3.encode_multipart_formdata` is used to encode
        the payload with the appropriate content type. Otherwise
        :func:`urllib.parse.urlencode` is used with the
        'application/x-www-form-urlencoded' content type.

        Multipart encoding must be used when posting files, and it's reasonably
        safe to use it in other times too. However, it may break request
        signing, such as with OAuth.

        Supports an optional ``fields`` parameter of key/value strings AND
        key/filetuple. A filetuple is a (filename, data, MIME type) tuple where
        the MIME type is optional. For example::

            fields = {
                'foo': 'bar',
                'fakefile': ('foofile.txt', 'contents of foofile'),
                'realfile': ('barfile.txt', open('realfile').read()),
                'typedfile': ('bazfile.bin', open('bazfile').read(),
                              'image/jpeg'),
                'nonamefile': 'contents of nonamefile field',
            }

        When uploading a file, providing a filename (the first parameter of the
        tuple) is optional but recommended to best mimic behavior of browsers.

        Note that if ``headers`` are supplied, the 'Content-Type' header will
        be overwritten because it depends on the dynamic random boundary string
        which is used to compose the body of the request. The random boundary
        string can be explicitly set with the ``multipart_boundary`` parameter.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importafilepostTaencode_multipart_formdatallupackages.six.moves.urllib.parseTaurlencodeaRequestMethodsa__all__TOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.requesta__module__u
    Convenience mixin for classes who implement a :meth:`urlopen` method, such
    as :class:`urllib3.HTTPConnectionPool` and
    :class:`urllib3.PoolManager`.

    Provides behavior for making common types of HTTP request methods and
    decides which type of request field encoding to use.

    Specifically,

    :meth:`.request_encode_url` is for sending requests whose fields are
    encoded in the URL (such as GET, HEAD, DELETE).

    :meth:`.request_encode_body` is for sending requests whose fields are
    encoded in the *body* of the request using multipart or www-form-urlencoded
    (such as for POST, PUT, PATCH).

    :meth:`.request` is for making any kind of request, it will look up the
    appropriate encoding format and use one of the above two methods to make
    the request.

    Initializer parameters:

    :param headers:
        Headers to include with all requests, unless other headers are given
        explicitly.
    a__qualname__SaDELETEaHEADaGETaOPTIONSTna__init__uRequestMethods.__init__TnntnuRequestMethods.urlopenTnnarequestuRequestMethods.requestuRequestMethods.request_encode_urluRequestMethods.request_encode_bodya__orig_bases__uurllib3\request.pyu<module urllib3.request>Ta__class__TaselfaheadersTaselfamethodaurlafieldsaheadersaurlopen_kwTaselfamethodaurlafieldsaheadersaencode_multipartamultipart_boundaryaurlopen_kwaextra_kwabodyacontent_typeTaselfamethodaurlafieldsaheadersaurlopen_kwaextra_kwTaselfamethodaurlabodyaheadersaencode_multipartamultipart_boundaryakwu.urllib3.response)-a_first_tryca_dataazlibadecompressobja_objadecompressaerroraMAX_WBITSlaGzipDecoderStateaFIRST_MEMBERa_stateBaSWALLOW_DATAaretaselfadataaOTHER_MEMBERSaunused_dataabrotliaDecompressoraprocessaflushasplitTw,a_get_decoderastripa_decoderslw,aMultiDecoderagzipaGzipDecoderabraBrotliDecoderaDeflateDecoderaHTTPHeaderDictaheadersastatusaversionareasonastrictadecode_contentaretriesaenforce_content_lengthaauto_closea_decodera_bodya_fpa_original_responsea_fp_bytes_readamsga_request_urlasixastring_typesa_poola_connectionareadachunkedachunk_leftagetTutransfer-encodingualowera_init_lengthalength_remainingTadecode_contentu<genexpr>uHTTPResponse.__init__.<locals>.<genexpr>aREDIRECT_STATUSESTalocationu
        Should we redirect and where to?

        :returns: Truthy redirect location string if we got a redirect status
            code and valid location. ``None`` if redirect status and no
            location. ``False`` if not a redirect status code.
        a_put_connaHTTPErroraSocketErroraBaseSSLErroraHTTPExceptionu
        Read and discard any remaining HTTP response data in the response connection.

        Unread data in the HTTPResponse connection blocks the connection from being released back to the pool.
        TtTacache_contentais_fp_closedu
        Obtain the number of bytes pulled over the wire so far. May differ from
        the amount of content returned by :meth:``urllib3.response.HTTPResponse.read``
        if bytes are encoded on the wire (e.g, compressed).
        Tucontent-lengthalogawarningTuReceived response with both Content-Length and Transfer-Encoding set. This is expressly forbidden by RFC 7230 sec 3.3.2. Ignoring Content-Length and attempting to process response as Transfer-Encoding: chunked.aInvalidHeaderuContent-Length contained multiple unmatching values (%s)apopTllldlaHEADu
        Set initial length value for Response content if available.
        Tucontent-encodinguaCONTENT_DECODERSu
        Set-up the _decoder attribute if necessary.
        aDECODER_ERROR_CLASSESaDecodeErroruReceived response with content-encoding: %s, but failed to decode it.a_flush_decoderu
        Decode the data passed in and potentially flush the decoder.
        Tcu
        Flushes the decoder. Should only be called if the decoder is actually
        being used.
        u
        Catch low-level python exceptions, instead re-raising urllib3
        variants, so that low-level exceptions are not leaked in the
        high-level api.

        On exit, release the connection back to the pool.
        aSocketTimeoutaReadTimeoutErroruRead timed out.uread operation timed outaSSLErroraProtocolErroruConnection broken: %racloseaisclosedarelease_conna_error_catcheruHTTPResponse._error_catchera_init_decoderacloseda__enter__a__exit__TlnaIncompleteReadTnnna_decodeu
        Similar to :meth:`http.client.HTTPResponse.read`, but with two additional
        parameters: ``decode_content`` and ``cache_content``.

        :param amt:
            How much of the content to read. If specified, caching is skipped
            because it doesn't make sense to cache partial content as the full
            response.

        :param decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.

        :param cache_content:
            If True, will save the returned data such that the same result is
            returned despite of the state of the underlying file object. This
            is useful if you want the ``.data`` property to continue working
            after having ``.read()`` the file object. (Overridden if ``amt`` is
            set.)
        u
        A generator wrapper for the read() method. A call will block until
        ``amt`` bytes have been read from the connection or until the
        connection is closed.

        :param amt:
            How much of the content to read. The generator will return up to
            much data per iteration, but may return less. This is particularly
            likely when using compressed data. However, the empty string will
            never be returned.

        :param decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.
        asupports_chunked_readsaread_chunkedaamtTaamtadecode_contentastreamuHTTPResponse.streamaPY2afrom_httplibaitemsabodyaoriginal_responseu
        Given an :class:`http.client.HTTPResponse` instance ``r``, return a
        corresponding :class:`urllib3.response.HTTPResponse` object.

        Remaining parameters are passed to the HTTPResponse constructor, along
        with ``original_response=r``.
        aIOBasea__get__uHTTPResponse has no file to get a fileno fromafilenouThe file-like object this HTTPResponse is wrapped around has no file descriptorafpu
        Checks if the underlying file-like object looks like a
        :class:`http.client.HTTPResponse` object. We do this by testing for
        the fp attribute. If it is present we assume it returns raw chunks as
        processed by read_chunked().
        areadlineTd;laInvalidChunkLengtha_safe_readTlu
        Similar to :meth:`HTTPResponse.read`, but with an additional
        parameter: ``decode_content``.

        :param amt:
            How much of the content to read. If specified, caching is skipped
            because it doesn't make sense to cache partial content as the full
            response.

        :param decode_content:
            If True, will attempt to decode the body based on the
            'content-encoding' header.
        aResponseNotChunkedTuResponse is not chunked. Header 'transfer-encoding: chunked' is missing.aBodyNotHttplibCompatibleTuBody should be http.client.HTTPResponse like. It should have have an fp attribute which returns raw chunks.ais_response_to_heada_update_chunk_lengtha_handle_chunkTadecode_contentaflush_decoderc
uHTTPResponse.read_chunkedahistoryqaredirect_locationu
        Returns the URL that was the source of this response.
        If the request that generated this response redirected, this method
        will return the final redirect location.
        d
Td
abuffer:lqna__iter__uHTTPResponse.__iter__a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importaioaloggingacontextlibTacontextmanageracontextmanagerasocketTaerrorTatimeoutatimeouta_collectionsTaHTTPHeaderDictlaconnectionTaBaseSSLErroraHTTPExceptionaexceptionsT
aBodyNotHttplibCompatibleaDecodeErroraHTTPErroraIncompleteReadaInvalidChunkLengthaInvalidHeaderaProtocolErroraReadTimeoutErroraResponseNotChunkedaSSLErrorapackagesTasixuutil.responseTais_fp_closedais_response_to_headagetLoggerTuurllib3.responseTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.responsea__module__a__qualname__a__init__uDeflateDecoder.__init__a__getattr__uDeflateDecoder.__getattr__uDeflateDecoder.decompressa__orig_bases__luGzipDecoder.__init__uGzipDecoder.__getattr__uGzipDecoder.decompressuBrotliDecoder.__init__uBrotliDecoder.flushu
    From RFC7231:
        If one or more encodings have been applied to a representation, the
        sender that applied the encodings MUST generate a Content-Encoding
        header field that lists the content codings in the order in which
        they were applied.
    uMultiDecoder.__init__uMultiDecoder.flushuMultiDecoder.decompressaHTTPResponseu
    HTTP Response container.

    Backwards-compatible with :class:`http.client.HTTPResponse` but the response ``body`` is
    loaded and decoded on-demand when the ``data`` property is accessed.  This
    class is also compatible with the Python standard library's :mod:`io`
    module, and can hence be treated as a readable object in the context of that
    framework.

    Extra parameters for behaviour not present in :class:`http.client.HTTPResponse`:

    :param preload_content:
        If True, the response's body will be preloaded during construction.

    :param decode_content:
        If True, will attempt to decode the body based on the
        'content-encoding' header.

    :param original_response:
        When this HTTPResponse wrapper is generated from an :class:`http.client.HTTPResponse`
        object, it's convenient to include the original for debug purposes. It's
        otherwise unused.

    :param retries:
        The retries contains the last :class:`~urllib3.util.retry.Retry` that
        was used during the request.

    :param enforce_content_length:
        Enforce content length checking. Body returned by server must match
        value of Content-Length header, if present. Otherwise, raise error.
    adeflateLlllllTunlpnltpnnnnnFnntuHTTPResponse.__init__aget_redirect_locationuHTTPResponse.get_redirect_locationuHTTPResponse.release_connadrain_connuHTTPResponse.drain_connapropertyuHTTPResponse.datauHTTPResponse.connectionuHTTPResponse.isclosedatelluHTTPResponse.telluHTTPResponse._init_lengthuHTTPResponse._init_decoderaIOErroruHTTPResponse._decodeuHTTPResponse._flush_decoderTnnFuHTTPResponse.readTlnaclassmethoduHTTPResponse.from_httplibagetheadersuHTTPResponse.getheadersTnagetheaderuHTTPResponse.getheaderainfouHTTPResponse.infouHTTPResponse.closeuHTTPResponse.closeduHTTPResponse.filenouHTTPResponse.flushareadableuHTTPResponse.readableareadintouHTTPResponse.readintouHTTPResponse.supports_chunked_readsuHTTPResponse._update_chunk_lengthuHTTPResponse._handle_chunkTnnageturluHTTPResponse.geturluurllib3\response.pyTa.0aencu<module urllib3.response>Ta__class__TaselfanameTaselfTaselfabodyaheadersastatusaversionareasonastrictapreload_contentadecode_contentaoriginal_responseapoolaconnectionamsgaretriesaenforce_content_lengtharequest_methodarequest_urlaauto_closeatr_encaencodingsTaselfamodesTaselfabufferachunkwxTaselfadataadecode_contentaflush_decoderweacontent_encodingTaselfaclean_exitweTaselfabufTamodeTaselfaamtareturned_chunkachunkavalueTaselfacontent_encodingaencodingsTaselfarequest_methodalengthalengthsastatusTaselfalineTaselfadataadecompressedTaselfadataaretaprevious_stateTaselfadatawdTaResponseClswraresponse_kwaheadersastrictarespTaselfanameadefaultTaselfaamtadecode_contentacache_contentaflush_decoderafp_closedadataTaselfaamtadecode_contentachunkadecodedalineTaselfwbatempTaselfaamtadecode_contentalineadatau.urllib3.util.connectionKasockawait_for_readDatimeoutZaNoWayToWaitForSocketErroru
    Returns True if the connection is dropped and should be closed.

    :param conn:
        :class:`http.client.HTTPConnection` object.

    Note: For platforms like AppEngine, this will always return ``False`` to
    let the platform handle connection recycling transparently for us.
    utoo many values to unpack (expected 2)astartswithTw[astripTu[]aallowed_gai_familyahostaencodeTaidnaasixaraise_fromaLocationParseErroru'%s', label empty or too longasocketagetaddrinfoaSOCK_STREAMutoo many values to unpack (expected 5)a_set_socket_optionsasocket_optionsatimeouta_GLOBAL_DEFAULT_TIMEOUTasettimeoutasource_addressabindaconnectaerroracloseaerrTugetaddrinfo returns an empty listuConnect to *address* and return the socket object.

    Convenience function.  Connect to *address* (a 2-tuple ``(host,
    port)``) and return the socket object.  Passing the optional
    *timeout* parameter will set the timeout on the socket instance
    before attempting to connect.  If no *timeout* is supplied, the
    global default timeout setting returned by :func:`socket.getdefaulttimeout`
    is used.  If *source_address* is set it must be a tuple of (host, port)
    for the socket to bind as a source address before making the connection.
    An host of '' or port 0 tells the OS to use the default.
    asetsockoptaAF_INETaHAS_IPV6aAF_UNSPECuThis function is designed to work in the context of
    getaddrinfo, where family=socket.AF_UNSPEC is the default and
    will perform a DNS search for both IPv6 and IPv4 records.a_appengine_environais_appengine_sandboxahas_ipv6aAF_INET6luReturns True if the system can bind an IPv6 address.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importuurllib3.exceptionsTaLocationParseErroracontribTa_appengine_environlapackagesTasixawaitTaNoWayToWaitForSocketErrorawait_for_readlais_connection_droppedacreate_connectiona_has_ipv6Tu::1uurllib3\util\connection.pyu<module urllib3.util.connection>Tahostasockahas_ipv6TasockaoptionsaoptTafamilyTaaddressatimeoutasource_addressasocket_optionsahostaportaerrafamilyaresaafasocktypeaprotoacanonnameasaasockweTaconnasocku.urllib3.util@a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_urllib3u\not_existingautilTaNUITKA_PACKAGE_urllib3_utilu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aabsolute_importaconnectionTais_connection_droppedlais_connection_droppedlarequestTaSKIP_HEADERaSKIPPABLE_HEADERSamake_headersaSKIP_HEADERaSKIPPABLE_HEADERSamake_headersaresponseTais_fp_closedais_fp_closedaretryTaRetryaRetryassl_T
aALPN_PROTOCOLSaHAS_SNIaIS_PYOPENSSLaIS_SECURETRANSPORTaPROTOCOL_TLSaSSLContextaassert_fingerprintaresolve_cert_reqsaresolve_ssl_versionassl_wrap_socketaALPN_PROTOCOLSaHAS_SNIaIS_PYOPENSSLaIS_SECURETRANSPORTaPROTOCOL_TLSaSSLContextaassert_fingerprintaresolve_cert_reqsaresolve_ssl_versionassl_wrap_socketatimeoutTaTimeoutacurrent_timeaTimeoutacurrent_timeaurlTaUrlaget_hostaparse_urlasplit_firstaUrlaget_hostaparse_urlasplit_firstawaitTawait_for_readawait_for_writeawait_for_readawait_for_writeTaHAS_SNIaIS_PYOPENSSLaIS_SECURETRANSPORTaSSLContextaPROTOCOL_TLSaALPN_PROTOCOLSaRetryaTimeoutaUrlaassert_fingerprintacurrent_timeais_connection_droppedais_fp_closedaget_hostaparse_urlamake_headersaresolve_cert_reqsaresolve_ssl_versionasplit_firstassl_wrap_socketawait_for_readawait_for_writeaSKIP_HEADERaSKIPPABLE_HEADERSa__all__uurllib3\util\__init__.pyu<module urllib3.util>u.urllib3.util.proxyahttpaschemeahttpsause_forwarding_for_httpsu
    Returns True if the connection requires an HTTP CONNECT through the proxy.

    :param URL proxy_url:
        URL of the proxy.
    :param ProxyConfig proxy_config:
        Proxy configuration from poolmanager.py
    :param str destination_scheme:
        The scheme of the destination. (i.e https, http, etc)
    acreate_urllib3_contextaresolve_ssl_versionaresolve_cert_reqsTassl_versionacert_reqsaload_default_certsu
    Generates a default proxy ssl context if one hasn't been provided by the
    user.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__assl_Tacreate_urllib3_contextaresolve_cert_reqsaresolve_ssl_versionllTnnnaconnection_requires_http_tunnelacreate_proxy_ssl_contextuurllib3\util\proxy.pyu<module urllib3.util.proxy>Taproxy_urlaproxy_configadestination_schemeTassl_versionacert_reqsaca_certsaca_cert_diraca_cert_dataassl_contextu.urllib3.util.queue@0acollectionsadequeaqueueaappendapopa__doc__a__file__a__spec__aoriginahas_locationa__cached__lapackagesTasixlasixupackages.six.movesTaqueueaPY2aQueuea_unused_module_Queuea__prepare__aLifoQueuea__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.util.queuea__module__a__qualname__a_inituLifoQueue._initalena_qsizeuLifoQueue._qsizea_putuLifoQueue._puta_getuLifoQueue._geta__orig_bases__uurllib3\util\queue.pyu<module urllib3.util.queue>Ta__class__TaselfTaselfw_TaselfaitemTaselfalenu.urllib3.util.requesty=w,aACCEPT_ENCODINGuaccept-encodinguuser-agentukeep-aliveaconnectionuBasic ab64encodewbadecodeTuutf-8aauthorizationuproxy-authorizationuno-cacheucache-controlu
    Shortcuts for generating request headers.

    :param keep_alive:
        If ``True``, adds 'connection: keep-alive' header.

    :param accept_encoding:
        Can be a boolean, list, or string.
        ``True`` translates to 'gzip,deflate'.
        List will get joined by comma.
        String will be used as provided.

    :param user_agent:
        String representing the user-agent you want, such as
        "python-urllib3/0.6"

    :param basic_auth:
        Colon-separated username:password string for 'authorization: basic ...'
        auth header.

    :param proxy_basic_auth:
        Colon-separated username:password string for 'proxy-authorization: basic ...'
        auth header.

    :param disable_cache:
        If ``True``, adds 'cache-control: no-cache' header.

    Example::

        >>> make_headers(keep_alive=True, user_agent="Batman/1.0")
        {'connection': 'keep-alive', 'user-agent': 'Batman/1.0'}
        >>> make_headers(accept_encoding=True)
        {'accept-encoding': 'gzip,deflate'}
    arewind_bodyatellTEOSErrorpa_FAILEDTELLaposu
    If a position is provided, move file to that point.
    Otherwise, we'll attempt to record a position for future use.
    aseekainteger_typesaUnrewindableBodyErrorTuAn error occurred when rewinding request body for redirect/retry.TuUnable to record file position for rewinding request body during a redirect/retry.ubody_pos must be of type integer, instead it was %s.u
    Attempt to rewind body to a certain position.
    Primarily used for request redirects and retries.

    :param body:
        File-like object that supports seek.

    :param int pos:
        Position to seek to in file.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importabase64Tab64encodelaexceptionsTaUnrewindableBodyErrorlupackages.sixTwbainteger_typesu@@@SKIP_HEADER@@@aSKIP_HEADERPahostuuser-agentuaccept-encodingaSKIPPABLE_HEADERSugzip,deflateabrotlia_unused_module_brotliu,brTnnnnnnamake_headersaset_file_positionuurllib3\util\request.pyu<module urllib3.util.request>Takeep_aliveaaccept_encodingauser_agentabasic_authaproxy_basic_authadisable_cacheaheadersTabodyabody_posabody_seekTabodyaposu.urllib3.util.response/aisclosedaclosedafpuUnable to determine whether fp is closed.u
    Checks whether a given file-like object is closed.

    :param obj:
        The file-like object to check.
    ahttplibaHTTPMessageuexpected httplib.Message, got {0}.adefectsaget_payloadais_multipartTObytesOstraStartBoundaryNotFoundDefectaMultipartInvariantViolationDefectaHeaderParsingErrorTadefectsaunparsed_datau
    Asserts whether all headers have been successfully parsed.
    Extracts encountered errors from the result of parsing headers.

    Only works on Python 3.

    :param http.client.HTTPMessage headers: Headers to verify.

    :raises urllib3.exceptions.HeaderParsingError:
        If parsing errors are found.
    a_methodlaupperaHEADu
    Checks whether the request of a response has been a HEAD-request.
    Handles the quirks of AppEngine.

    :param http.client.HTTPResponse response:
        Response to check if the originating request
        used 'HEAD' as a method.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importuemail.errorsTaMultipartInvariantViolationDefectaStartBoundaryNotFoundDefectlaexceptionsTaHeaderParsingErrorlupackages.six.movesTahttp_clientahttp_clientais_fp_closedaassert_header_parsingais_response_to_headuurllib3\util\response.pyu<module urllib3.util.response>Taheadersadefectsaget_payloadaunparsed_dataapayloadTaobjTaresponseamethodu.urllib3.util.retry*awarningsawarnuUsing 'Retry.DEFAULT_METHOD_WHITELIST' is deprecated and will be removed in v2.0. Use 'Retry.DEFAULT_ALLOWED_METHODS' insteadaDeprecationWarningaDEFAULT_ALLOWED_METHODSuUsing 'Retry.DEFAULT_REDIRECT_HEADERS_BLACKLIST' is deprecated and will be removed in v2.0. Use 'Retry.DEFAULT_REMOVE_HEADERS_ON_REDIRECT' insteadaDEFAULT_REMOVE_HEADERS_ON_REDIRECTa_DefaultuUsing both 'allowed_methods' and 'method_whitelist' together is not allowed. Instead only use 'allowed_methods'uUsing 'method_whitelist' with Retry is deprecated and will be removed in v2.0. Use 'allowed_methods' insteadDastacklevellatotalaconnectareadastatusaotherlaredirectastatus_forcelistaallowed_methodsabackoff_factoraraise_on_redirectaraise_on_statusahistoryarespect_retry_after_headeraloweraremove_headers_on_redirectamethod_whitelistaparamsaDEFAULTaRetryTaredirectalogadebuguConverted retries value: %r -> %ruBackwards-compatibility for the old retries format.atakewhileu<lambda>uRetry.get_backoff_time.<locals>.<lambda>laminaBACKOFF_MAXuFormula for computing the current backoff

        :rtype: float
        aredirect_locationareamatchu^\s*[0-9]+\s*$aemailautilsaparsedate_tzaInvalidHeaderuInvalid Retry-After header: %sl:nlnTl:l
nnamktime_tzatimeagetheaderTuRetry-Afteraparse_retry_afteruGet the value of Retry-After in seconds.aget_retry_afterasleepaget_backoff_timeasleep_for_retrya_sleep_backoffuSleep between retry attempts.

        This method will respect a server's ``Retry-After`` response header
        and sleep the duration of the time requested. If that is not present, it
        will use an exponential backoff. By default, the backoff factor is 0 and
        this method will return immediately.
        aProxyErroraoriginal_erroraConnectTimeoutErroruErrors when we're fairly sure that the server did not receive the
        request, so it should be safe to retry.
        aReadTimeoutErroraProtocolErroruErrors that occur after the request has been started, so we should
        assume that the server began processing it.
        aupperuChecks if a given HTTP method should be retried upon, depending if
        it is included in the allowed_methods
        a_is_method_retryableaRETRY_AFTER_STATUS_CODESuIs this method/status code retryable? (Based on allowlists and control
        variables such as the number of total retries to allow, whether to
        respect the Retry-After header, whether this header is present, and
        whether the returned status code is on the list of status codes to
        be retried upon on the presence of the aforementioned header)
        uAre we out of retries?asixareraiselaunknowna_is_connection_errora_is_read_erroraget_redirect_locationutoo many redirectsaResponseErroraGENERIC_ERRORaSPECIFIC_ERRORaformatTastatus_codeaRequestHistoryanewTatotalaconnectareadaredirectastatusaotherahistoryais_exhaustedaMaxRetryErroruIncremented Retry for (url='%s'): %ruReturn a new Retry object with incremented retry counters.

        :param response: A response object, or None, if the server did not
            return a response.
        :type response: :class:`~urllib3.response.HTTPResponse`
        :param Exception error: An error encountered during the request, or
            None if the response was received successfully.

        :return: A new ``Retry`` object.
        u{cls.__name__}(total={self.total}, connect={self.connect}, read={self.read}, redirect={self.redirect}, status={self.status})Taclsaselfa__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importaloggingacollectionsTanamedtupleanamedtupleaitertoolsTatakewhileaexceptionsTaConnectTimeoutErroraInvalidHeaderaMaxRetryErroraProtocolErroraProxyErroraReadTimeoutErroraResponseErrorapackagesTasixagetLoggerTuurllib3.util.retryLamethodaurlaerrorastatusaredirect_locationTOtypea__prepare__a_RetryMetaa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.util.retrya__module__a__qualname__apropertyaDEFAULT_METHOD_WHITELISTu_RetryMeta.DEFAULT_METHOD_WHITELISTasetteraDEFAULT_REDIRECT_HEADERS_BLACKLISTu_RetryMeta.DEFAULT_REDIRECT_HEADERS_BLACKLISTa__orig_bases__TOobjectaadd_metaclassuRetry configuration.

    Each retry attempt will create a new Retry object with updated values, so
    they can be safely reused.

    Retries can be defined as a default for a pool::

        retries = Retry(connect=5, read=2, redirect=5)
        http = PoolManager(retries=retries)
        response = http.request('GET', 'http://example.com/')

    Or per-request (which overrides the default for the pool)::

        response = http.request('GET', 'http://example.com/', retries=Retry(10))

    Retries can be disabled by passing ``False``::

        response = http.request('GET', 'http://example.com/', retries=False)

    Errors will be wrapped in :class:`~urllib3.exceptions.MaxRetryError` unless
    retries are disabled, in which case the causing exception will be raised.

    :param int total:
        Total number of retries to allow. Takes precedence over other counts.

        Set to ``None`` to remove this constraint and fall back on other
        counts.

        Set to ``0`` to fail on the first retry.

        Set to ``False`` to disable and imply ``raise_on_redirect=False``.

    :param int connect:
        How many connection-related errors to retry on.

        These are errors raised before the request is sent to the remote server,
        which we assume has not triggered the server to process the request.

        Set to ``0`` to fail on the first retry of this type.

    :param int read:
        How many times to retry on read errors.

        These errors are raised after the request was sent to the server, so the
        request may have side-effects.

        Set to ``0`` to fail on the first retry of this type.

    :param int redirect:
        How many redirects to perform. Limit this to avoid infinite redirect
        loops.

        A redirect is a HTTP response with a status code 301, 302, 303, 307 or
        308.

        Set to ``0`` to fail on the first retry of this type.

        Set to ``False`` to disable and imply ``raise_on_redirect=False``.

    :param int status:
        How many times to retry on bad status codes.

        These are retries made on responses, where status code matches
        ``status_forcelist``.

        Set to ``0`` to fail on the first retry of this type.

    :param int other:
        How many times to retry on other errors.

        Other errors are errors that are not connect, read, redirect or status errors.
        These errors might be raised after the request was sent to the server, so the
        request might have side-effects.

        Set to ``0`` to fail on the first retry of this type.

        If ``total`` is not set, it's a good idea to set this to 0 to account
        for unexpected edge cases and avoid infinite retry loops.

    :param iterable allowed_methods:
        Set of uppercased HTTP method verbs that we should retry on.

        By default, we only retry on methods which are considered to be
        idempotent (multiple requests with the same parameters end with the
        same state). See :attr:`Retry.DEFAULT_ALLOWED_METHODS`.

        Set to a ``False`` value to retry on any verb.

        .. warning::

            Previously this parameter was named ``method_whitelist``, that
            usage is deprecated in v1.26.0 and will be removed in v2.0.

    :param iterable status_forcelist:
        A set of integer HTTP status codes that we should force a retry on.
        A retry is initiated if the request method is in ``allowed_methods``
        and the response status code is in ``status_forcelist``.

        By default, this is disabled with ``None``.

    :param float backoff_factor:
        A backoff factor to apply between attempts after the second try
        (most errors are resolved immediately by a second try without a
        delay). urllib3 will sleep for::

            {backoff factor} * (2 ** ({number of total retries} - 1))

        seconds. If the backoff_factor is 0.1, then :func:`.sleep` will sleep
        for [0.0s, 0.2s, 0.4s, ...] between retries. It will never be longer
        than :attr:`Retry.BACKOFF_MAX`.

        By default, backoff is disabled (set to 0).

    :param bool raise_on_redirect: Whether, if the number of redirects is
        exhausted, to raise a MaxRetryError, or to return a response with a
        response code in the 3xx range.

    :param bool raise_on_status: Similar meaning to ``raise_on_redirect``:
        whether we should raise an exception, or return a response,
        if status falls in ``status_forcelist`` range and retries have
        been exhausted.

    :param tuple history: The history of the request encountered during
        each call to :meth:`~Retry.increment`. The list is in the order
        the requests occurred. Each list item is of class :class:`RequestHistory`.

    :param bool respect_retry_after_header:
        Whether to respect Retry-After header on status codes defined as
        :attr:`Retry.RETRY_AFTER_STATUS_CODES` or not.

    :param iterable remove_headers_on_redirect:
        Sequence of headers to remove from the request when a response
        indicating a redirect is returned before firing off the redirected
        request.
    afrozensetLaHEADaGETaPUTaDELETEaOPTIONSaTRACEPaGETaDELETEaPUTaHEADaTRACEaOPTIONSlllPlllaAuthorizationPaAuthorizationlxl
a__init__uRetry.__init__uRetry.newaclassmethodTtnafrom_intuRetry.from_intuRetry.get_backoff_timeuRetry.parse_retry_afteruRetry.get_retry_afterTnuRetry.sleep_for_retryuRetry._sleep_backoffuRetry.sleepuRetry._is_connection_erroruRetry._is_read_erroruRetry._is_method_retryableTFais_retryuRetry.is_retryuRetry.is_exhaustedTnnnnnnaincrementuRetry.incrementa__repr__uRetry.__repr__a__getattr__uRetry.__getattr__Tluurllib3\util\retry.pyTwxu<module urllib3.util.retry>TaclsTaclsavalueTa__class__Taselfaitema__class__Taselfatotalaconnectareadaredirectastatusaotheraallowed_methodsastatus_forcelistabackoff_factoraraise_on_redirectaraise_on_statusahistoryarespect_retry_after_headeraremove_headers_on_redirectamethod_whitelistTaselfTaselfaerrTaselfamethodaallowed_methodsTaselfabackoffTaclsaretriesaredirectadefaultanew_retriesTaselfaconsecutive_errors_lenabackoff_valueTaselfaresponsearetry_afterTaselfamethodaurlaresponseaerrora_poola_stacktraceatotalaconnectareadaredirectastatus_countaotheracauseastatusaredirect_locationahistoryanew_retryTaselfaretry_countsTaselfamethodastatus_codeahas_retry_afterTaselfakwaparamsTaselfaretry_afterasecondsaretry_date_tuplearetry_dateTaselfaresponseasleptu.urllib3.util.ssl_utoo many values to unpack (expected 2)aresultlu
    Compare two digests of equal length in constant time.

    The digests must be of type str/bytes.
    Returns True if the digests match, and False otherwise.
    aprotocolacheck_hostnameasslaCERT_NONEaverify_modeaca_certsaoptionsacertfileakeyfileaciphersaSSLErrorTuCA directories not supported in older PythonsTuCA data not supported in older PythonsawarningsawarnuA true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warningsaInsecurePlatformWarningacert_reqsassl_versionaserver_sideawrap_socketareplaceTw:ualoweraHASHFUNC_MAPagetuFingerprint of invalid length: {0}aunhexlifyaencodeadigesta_const_compare_digestuFingerprints did not match. Expected "{0}", got "{1}".ahexlifyu
    Checks if given fingerprint matches the supplied certificate.

    :param cert:
        Certificate as bytes object.
    :param fingerprint:
        Fingerprint as string of hexdigits, can be interspersed by colons.
    aCERT_REQUIREDaCERT_u
    Resolves the argument to a numeric constant, which can be passed to
    the wrap_socket function/method from the ssl module.
    Defaults to :data:`ssl.CERT_REQUIRED`.
    If given a string it is assumed to be the name of the constant in the
    :mod:`ssl` module or its abbreviation.
    (So you can specify `REQUIRED` instead of `CERT_REQUIRED`.
    If it's neither `None` nor a string we assume it is already the numeric
    constant which can directly be passed to wrap_socket.
    aPROTOCOL_TLSaPROTOCOL_u
    like resolve_cert_reqs
    aPROTOCOL_TLS_CLIENTaSSLContextaset_ciphersaDEFAULT_CIPHERSaOP_NO_SSLv2aOP_NO_SSLv3aOP_NO_COMPRESSIONaOP_NO_TICKETapost_handshake_authadisable_check_hostnameucreate_urllib3_context.<locals>.disable_check_hostnameakeylog_filenameaenvironTaSSLKEYLOGFILEuAll arguments have the same meaning as ``ssl_wrap_socket``.

    By default, this function does a lot of the same work that
    ``ssl.create_default_context`` does on Python 3.4+. It:

    - Disables SSLv2, SSLv3, and compression
    - Sets a restricted set of server ciphers

    If you wish to enable SSLv3, you can do::

        from urllib3.util import ssl_
        context = ssl_.create_urllib3_context()
        context.options &= ~ssl_.OP_NO_SSLv3

    You can do the same to enable compression (substituting ``COMPRESSION``
    for ``SSLv3`` in the last line above).

    :param ssl_version:
        The desired protocol version to use. This will default to
        PROTOCOL_SSLv23 which will negotiate the highest protocol that both
        the server and your installation of OpenSSL support.
    :param cert_reqs:
        Whether to require the certificate verification. This defaults to
        ``ssl.CERT_REQUIRED``.
    :param options:
        Specific OpenSSL options. These default to ``ssl.OP_NO_SSLv2``,
        ``ssl.OP_NO_SSLv3``, ``ssl.OP_NO_COMPRESSION``, and ``ssl.OP_NO_TICKET``.
    :param ciphers:
        Which cipher suites to allow the server to select.
    :returns:
        Constructed SSLContext object with specified options
    :rtype: SSLContext
    acontextacreate_urllib3_contextTaciphersaload_verify_locationsTEOSErrorpaload_default_certsa_is_key_file_encryptedTuClient private key is encrypted, password is requiredaload_cert_chainaset_alpn_protocolsaALPN_PROTOCOLSais_ipaddressaHAS_SNIaIS_SECURETRANSPORTuAn HTTPS request has been made, but the SNI (Server Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warningsaSNIMissingWarninga_ssl_wrap_socket_implTaserver_hostnameu
    All arguments except for server_hostname, ssl_context, and ca_cert_dir have
    the same meaning as they do when using :func:`ssl.wrap_socket`.

    :param server_hostname:
        When SNI is supported, the expected hostname of the certificate
    :param ssl_context:
        A pre-made :class:`SSLContext` object. If none is provided, one will
        be created using :func:`create_urllib3_context`.
    :param ciphers:
        A string of ciphers we wish the client to support.
    :param ca_cert_dir:
        A directory containing CA certificates in multiple separate files, as
        supported by OpenSSL's -CApath flag or the capath argument to
        SSLContext.load_verify_locations().
    :param key_password:
        Optional password if the keyfile is encrypted.
    :param ca_cert_data:
        Optional string containing CA certificates in PEM format suitable for
        passing as the cadata parameter to SSLContext.load_verify_locations()
    :param tls_in_tls:
        Use SSLTransport to wrap the existing socket.
    asixaPY2adecodeTaasciiaIPV4_REamatchaBRACELESS_IPV6_ADDRZ_REuDetects whether the hostname given is an IPv4 or IPv6 address.
    Also detects IPv6 addresses with Zone IDs.

    :param str hostname: Hostname to examine.
    :return: True if the hostname is an IP address, False otherwise.
    wra__enter__a__exit__aENCRYPTEDTnnnuDetects if a key file is encrypted or not.aSSLTransportaProxySchemeUnsupportedTuTLS in TLS requires support for the 'ssl' modulea_validate_ssl_context_for_tls_in_tlsa__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importahmacaosasysabinasciiTahexlifyaunhexlifyahashlibTamd5asha1asha256amd5asha1asha256aexceptionsTaInsecurePlatformWarningaProxySchemeUnsupportedaSNIMissingWarningaSSLErrorlapackagesTasixaurlTaBRACELESS_IPV6_ADDRZ_REaIPV4_RElaIS_PYOPENSSLuhttp/1.1l l(l@a_const_compare_digest_backportacompare_digestTaCERT_REQUIREDawrap_socketTaHAS_SNIassltransportTaSSLTransportTaPROTOCOL_TLSaPROTOCOL_SSLv23TaPROTOCOL_SSLv23TaPROTOCOL_TLS_CLIENTTaOP_NO_COMPRESSIONaOP_NO_SSLv2aOP_NO_SSLv3TlllTaOP_NO_TICKETluECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:ECDH+AESGCM:DH+AESGCM:ECDH+AES:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!eNULL:!MD5:!DSSTaSSLContextTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.util.ssl_a__module__a__qualname__a__init__uSSLContext.__init__uSSLContext.load_cert_chainuSSLContext.load_verify_locationsuSSLContext.set_ciphersTnFuSSLContext.wrap_socketa__orig_bases__aassert_fingerprintaresolve_cert_reqsaresolve_ssl_versionTnnnnTnnnnnnnnnnnFassl_wrap_socketTnuurllib3\util\ssl_.pyu<module urllib3.util.ssl_>Ta__class__Taselfaprotocol_versionTwawbaresultaleftarightTakey_filewfalineTasockassl_contextatls_in_tlsaserver_hostnameTacertafingerprintadigest_lengthahashfuncafingerprint_bytesacert_digestTassl_versionacert_reqsaoptionsaciphersacontextadisable_check_hostnameasslkeylogfileTacontextTahostnameTaselfacertfileakeyfileTaselfacafileacapathacadataTacandidatearesTaselfacipher_suiteTasockakeyfileacertfileacert_reqsaca_certsaserver_hostnameassl_versionaciphersassl_contextaca_cert_dirakey_passwordaca_cert_dataatls_in_tlsacontextweause_sni_hostnameasend_sniassl_sockTaselfasocketaserver_hostnameaserver_sideakwargsu.urllib3.util.ssltransportawrap_bioasixaPY2aProxySchemeUnsupportedTuTLS in TLS requires SSLContext.wrap_bio() which isn't supported on Python 2TuTLS in TLS requires SSLContext.wrap_bio() which isn't available on non-native SSLContextu
        Raises a ProxySchemeUnsupported if the provided ssl_context can't be used
        for TLS in TLS.

        The only requirement is that the ssl_context provides the 'wrap_bio'
        methods.
        asslaMemoryBIOaincomingaoutgoingasuppress_ragged_eofsasocketTaserver_hostnameasslobja_ssl_io_loopado_handshakeu
        Create an SSLTransport around socket using the provided ssl_context.
        acloseafilenoa_wrap_ssl_readlunon-zero flags not allowed in calls to recvunon-zero flags not allowed in calls to recv_intolareadunon-zero flags not allowed in calls to sendalla__enter__a__exit__acastTwBacountaselfasendTnnnunon-zero flags not allowed in calls to sendawriteSwwwbwruinvalid mode %r (only r, w, b allowed)wwwrwbuaSocketIOa_io_refslqaDEFAULT_BUFFER_SIZEuunbuffered streams must be binaryaBufferedRWPairaBufferedReaderaBufferedWriteraTextIOWrapperamodeu
        Python's httpclient uses makefile and buffered io when reading HTTP
        messages and we need to support it.

        This is unfortunately a copy and paste of socket.py makefile with small
        changes to point to the socket directly.
        aunwrapagetpeercertaversionacipheraselected_alpn_protocolaselected_npn_protocolashared_ciphersacompressionasettimeoutagettimeouta_decref_socketiosaSSLErroraerrnoaSSL_ERROR_EOFashould_loopaSSL_ERROR_WANT_READaSSL_ERROR_WANT_WRITEasendallarecvaSSL_BLOCKSIZEawrite_eofaretuPerforms an I/O loop between incoming/outgoing and the socket.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aiouurllib3.exceptionsTaProxySchemeUnsupporteduurllib3.packagesTasixluurllib3.util.ssltransporta__module__u
    The SSLTransport wraps an existing socket and establishes an SSL connection.

    Contrary to Python's implementation of SSLSocket, it allows you to chain
    multiple TLS connections together. It's particularly useful if you need to
    implement TLS within TLS.

    The class supports most of the socket API operations.
    aSSLTransporta__qualname__a_validate_ssl_context_for_tls_in_tlsuSSLTransport._validate_ssl_context_for_tls_in_tlsTnta__init__uSSLTransport.__init__uSSLTransport.__enter__uSSLTransport.__exit__uSSLTransport.filenoTlnuSSLTransport.readTlluSSLTransport.recvTnlarecv_intouSSLTransport.recv_intoTluSSLTransport.sendalluSSLTransport.sendTwrnnnnamakefileuSSLTransport.makefileuSSLTransport.unwrapuSSLTransport.closeTFuSSLTransport.getpeercertuSSLTransport.versionuSSLTransport.cipheruSSLTransport.selected_alpn_protocoluSSLTransport.selected_npn_protocoluSSLTransport.shared_ciphersuSSLTransport.compressionuSSLTransport.settimeoutuSSLTransport.gettimeoutuSSLTransport._decref_socketiosTnuSSLTransport._wrap_ssl_readuSSLTransport._ssl_io_loopuurllib3\util\ssltransport.pyu<module urllib3.util.ssltransport>TaselfTaselfw_Taselfasocketassl_contextaserver_hostnameasuppress_ragged_eofsTaselfafuncaargsashould_looparetaerrnoweabufTassl_contextTaselfalenabufferweTaselfabinary_formT
aselfamodeabufferingaencodingaerrorsanewlineawritingareadingabinaryarawmodearawabufferatextTaselfalenabufferTaselfalenaflagsTaselfabufferanbytesaflagsTaselfadataaflagsaresponseTaselfadataaflagsacountaviewabyte_viewaamountwvTaselfavalue.urllib3.util.timeout<Ua_validate_timeoutaconnecta_connectareada_readatotala_start_connectu%s(connect=%r, read=%r, total=%r)a__name__a_DefaultaDEFAULT_TIMEOUTuTimeout cannot be a boolean value. It must be an int, float or None.TETypeErrorEValueErroruTimeout value %s was %s, but it must be an int, float or None.luAttempted to set %s timeout to %s, but the timeout cannot be set to a value less than or equal to 0.uCheck that a timeout attribute is valid.

        :param value: The timeout value to validate
        :param name: The name of the timeout attribute to validate. This is
            used to specify in error messages.
        :return: The validated and casted version of the given value.
        :raises ValueError: If it is a numeric value less than or equal to
            zero, or the type is not an integer, float, or None.
        aTimeoutTareadaconnectuCreate a new Timeout from a legacy timeout value.

        The timeout value used by httplib.py sets the same timeout on the
        connect(), and recv() socket requests. This creates a :class:`Timeout`
        object that sets the individual timeouts to the ``timeout`` value
        passed to this function.

        :param timeout: The legacy timeout value.
        :type timeout: integer, float, sentinel default object, or None
        :return: Timeout object
        :rtype: :class:`Timeout`
        TaconnectareadatotaluCreate a copy of the timeout object

        Timeout properties are stored per-pool but each request needs a fresh
        Timeout object to ensure each one has its own start/stop configured.

        :return: a copy of the timeout object
        :rtype: :class:`Timeout`
        aTimeoutStateErrorTuTimeout timer has already been started.acurrent_timeuStart the timeout clock, used during a connect() attempt

        :raises urllib3.exceptions.TimeoutStateError: if you attempt
            to start a timer that has been started already.
        TuCan't get connect duration for timer that has not started.uGets the time elapsed since the call to :meth:`start_connect`.

        :return: Elapsed time in seconds.
        :rtype: float
        :raises urllib3.exceptions.TimeoutStateError: if you attempt
            to get duration for a timer that hasn't been started.
        aminuGet the value to use when setting a connection timeout.

        This will be a positive float or integer, the value None
        (never timeout), or the default system timeout.

        :return: Connect timeout.
        :rtype: int, float, :attr:`Timeout.DEFAULT_TIMEOUT` or None
        amaxaget_connect_durationuGet the value for the read timeout.

        This assumes some time has elapsed in the connection timeout and
        computes the read timeout appropriately.

        If self.total is set, the read timeout is dependent on the amount of
        time taken by the connect timeout. If the connection time has not been
        established, a :exc:`~urllib3.exceptions.TimeoutStateError` will be
        raised.

        :return: Value to use for the read timeout.
        :rtype: int, float, :attr:`Timeout.DEFAULT_TIMEOUT` or None
        :raises urllib3.exceptions.TimeoutStateError: If :meth:`start_connect`
            has not yet been called on this object.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importatimeasocketTa_GLOBAL_DEFAULT_TIMEOUTa_GLOBAL_DEFAULT_TIMEOUTaexceptionsTaTimeoutStateErrorlamonotonicTOobjecta__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uurllib3.util.timeouta__module__uTimeout configuration.

    Timeouts can be defined as a default for a pool:

    .. code-block:: python

       timeout = Timeout(connect=2.0, read=7.0)
       http = PoolManager(timeout=timeout)
       response = http.request('GET', 'http://example.com/')

    Or per-request (which overrides the default for the pool):

    .. code-block:: python

       response = http.request('GET', 'http://example.com/', timeout=Timeout(10))

    Timeouts can be disabled by setting all the parameters to ``None``:

    .. code-block:: python

       no_timeout = Timeout(connect=None, read=None)
       response = http.request('GET', 'http://example.com/, timeout=no_timeout)


    :param total:
        This combines the connect and read timeouts into one; the read timeout
        will be set to the time leftover from the connect attempt. In the
        event that both a connect timeout and a total are specified, or a read
        timeout and a total are specified, the shorter timeout will be applied.

        Defaults to None.

    :type total: int, float, or None

    :param connect:
        The maximum amount of time (in seconds) to wait for a connection
        attempt to a server to succeed. Omitting the parameter will default the
        connect timeout to the system default, probably `the global default
        timeout in socket.py
        <http://hg.python.org/cpython/file/603b4d593758/Lib/socket.py#l535>`_.
        None will set an infinite timeout for connection attempts.

    :type connect: int, float, or None

    :param read:
        The maximum amount of time (in seconds) to wait between consecutive
        read operations for a response from the server. Omitting the parameter
        will default the read timeout to the system default, probably `the
        global default timeout in socket.py
        <http://hg.python.org/cpython/file/603b4d593758/Lib/socket.py#l535>`_.
        None will set an infinite timeout.

    :type read: int, float, or None

    .. note::

        Many factors can affect the total amount of time for urllib3 to return
        an HTTP response.

        For example, Python's DNS resolver does not obey the timeout specified
        on the socket. Other factors that can affect total request time include
        high CPU load, high swap, the program running at a low priority level,
        or other behaviors.

        In addition, the read and total timeouts only measure the time between
        read operations on the socket connecting the client and the server,
        not the total amount of time for the request to return a complete
        response. For most requests, the timeout is raised because the server
        has not sent the first byte in the specified time. This is not always
        the case; if a server streams one byte every fifteen seconds, a timeout
        of 20 seconds will not trigger, even though the request will take
        several minutes to complete.

        If your goal is to cut off any request after a set amount of wall clock
        time, consider having a second "watcher" thread to cut off a slow
        request.
    a__qualname__a__init__uTimeout.__init__a__repr__uTimeout.__repr__a__str__aclassmethoduTimeout._validate_timeoutafrom_floatuTimeout.from_floatacloneuTimeout.cloneastart_connectuTimeout.start_connectuTimeout.get_connect_durationapropertyaconnect_timeoutuTimeout.connect_timeoutaread_timeoutuTimeout.read_timeouta__orig_bases__uurllib3\util\timeout.pyu<module urllib3.util.timeout>Ta__class__TaselfatotalaconnectareadTaselfTaclsavalueanameTaclsatimeoutu.urllib3.util.urlastartswithTw/w/aloweraUrla__new__apathahostuFor backwards-compatibility with urlparse. We're nice like that.aqueryw?uAbsolute path including the query string.aportu%s:%duNetwork location including host and portutoo many values to unpack (expected 7)uu://w@w:w#u
        Convert self into a url

        This function should more or less round-trip with :func:`.parse_url`. The
        returned url may not be exactly the same as the url inputted to
        :func:`.parse_url`, but it should be equivalent by the RFC (e.g., urls
        with a blank port will have : removed).

        Example: ::

            >>> U = parse_url('http://google.com/mail/')
            >>> U.url
            'http://google.com/mail/'
            >>> Url('http', 'username:password', 'host.com', 80,
            ... '/path', 'query', 'fragment').url
            'http://username:password@host.com:80/path?query#fragment'
        aurlwsafindlamin_idxlamin_delimu
    .. deprecated:: 1.25

    Given a string and an iterable of delimiters, split on the first found
    delimiter. Return two split parts and the matched delimiter.

    If not found, then the first part is the full input string.

    Example::

        >>> split_first('foo/bar?baz', '?/=')
        ('foo', 'bar?baz', '/')
        >>> split_first('foo/bar?baz', '123')
        ('foo/bar?baz', '', None)

    Scales linearly with number of delims. Not ideal for large number of delims.
    asixaensure_textaPERCENT_REasubnu<lambda>u_encode_invalid_chars.<locals>.<lambda>utoo many values to unpack (expected 2)aencodeTuutf-8asurrogatepassacountTd%Bd%ladecodeaencoded_componentaextend:lnnazfillTlaupperuPercent-encodes a URI component without reapplying
    onto an already percent-encoded component.
    agroupTlasplitw.u..aoutputaendswithTTu/.u/..aappendTuabinary_typeaensure_straNORMALIZABLE_SCHEMESaIPV6_ADDRZ_REamatchaZONE_ID_REasearchaspanTlTu%25u%25:lnn:lnnw%a_encode_invalid_charsaUNRESERVED_CHARSaIPV4_REd.Tw.a_idna_encodeaidnaaraise_fromaLocationParseErrorTuUnable to parse URL without the 'idna' moduleDastrictastd3_rulestpaIDNAErroruName '%s' is not a valid IDNA labelTaasciiaTARGET_REagroupsaPATH_CHARSaQUERY_CHARSuPercent-encodes a request target so that there are no invalid charactersaSCHEME_REu//aURI_REutoo many values to unpack (expected 5)arpartitionTw@utoo many values to unpack (expected 3)a_HOST_PORT_REaUSERINFO_CHARSTnnnla_normalize_hostaschemea_remove_path_dot_segmentsaFRAGMENT_CHARSTEValueErrorEAttributeErroratext_typeaensure_typeuparse_url.<locals>.ensure_typeTaschemeaauthahostaportapathaqueryafragmentu
    Given a url, return a parsed :class:`.Url` namedtuple. Best-effort is
    performed to parse incomplete urls. Fields not provided will be None.
    This parser is RFC 3986 compliant.

    The parser logic and helper functions are based heavily on
    work done in the ``rfc3986`` module.

    :param str url: URL to parse into a :class:`.Url` namedtuple.

    Partly backwards-compatible with :mod:`urlparse`.

    Example::

        >>> parse_url('http://google.com/mail/')
        Url(scheme='http', host='google.com', port=None, path='/mail/', ...)
        >>> parse_url('google.com:80')
        Url(scheme=None, host='google.com', port=80, path=None, ...)
        >>> parse_url('/foo?bar')
        Url(scheme=None, host=None, port=None, path='/foo', query='bar', ...)
    aensure_funcaparse_urlahttpahostnameu
    Deprecated. Use :func:`parse_url` instead.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aabsolute_importareacollectionsTanamedtupleanamedtupleaexceptionsTaLocationParseErrorlapackagesTasixLaschemeaauthahostaportapathaqueryafragmentaurl_attrsTahttpahttpsnacompileTu%[a-fA-F0-9]{2}Tu^(?:[a-zA-Z][a-zA-Z0-9+-]*:|/)u^(?:([a-zA-Z][a-zA-Z0-9+.-]*):)?(?://([^\\/?#]*))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?$aUNICODEaDOTALLu(?:[0-9]{1,3}\.){3}[0-9]{1,3}aIPV4_PATu[0-9A-Fa-f]{1,4}aHEX_PATu(?:{hex}:{hex}|{ipv4})Tahexaipv4aLS32_PATahexals32a_subsLu(?:%(hex)s:){6}%(ls32)su::(?:%(hex)s:){5}%(ls32)su(?:%(hex)s)?::(?:%(hex)s:){4}%(ls32)su(?:(?:%(hex)s:)?%(hex)s)?::(?:%(hex)s:){3}%(ls32)su(?:(?:%(hex)s:){0,2}%(hex)s)?::(?:%(hex)s:){2}%(ls32)su(?:(?:%(hex)s:){0,3}%(hex)s)?::%(hex)s:%(ls32)su(?:(?:%(hex)s:){0,4}%(hex)s)?::%(ls32)su(?:(?:%(hex)s:){0,5}%(hex)s)?::%(hex)su(?:(?:%(hex)s:){0,6}%(hex)s)?::a_variationsuABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789._!\-~aUNRESERVED_PATu(?:w|w)aIPV6_PATu(?:%25|%)(?:[u]|%[a-fA-F0-9]{2})+aZONE_ID_PATu\[u)?\]aIPV6_ADDRZ_PATu(?:[^\[\]%:/?#]|%[a-fA-F0-9]{2})*aREG_NAME_PATTu^(/[^?#]*)(?:\?([^#]*))?(?:#.*)?$w^w$aIPV6_RE:lqnaBRACELESS_IPV6_ADDRZ_REw(u)\]$u^(%s|%s|%s)(?::([0-9]{0,5}))?$a_HOST_PORT_PATSBwSwKwQwUwAwrwzw9wMwYwLwBw5waw8wvwowWwjw.w_wCw~w7wfwGwxwgwNwkw0w4wDwRwpwOwdwywJwXwnwEwHwbw2wFwmw6w1wIwTwZw3w-wqwuwswhwtwiwcwVwewwwlwPSw'w;w+w,w)w(w!w=w*w&w$aSUB_DELIM_CHARSSw:Sw/w@Sw?a__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.util.urla__module__u
    Data structure for representing an HTTP URL. Used as a return value for
    :func:`parse_url`. Both the scheme and host are normalized as they are
    both case-insensitive according to RFC 3986.
    a__qualname__a__slots__TnnnnnnnuUrl.__new__apropertyuUrl.hostnamearequest_uriuUrl.request_urianetlocuUrl.netlocuUrl.urla__str__uUrl.__str__a__orig_bases__asplit_firstTuutf-8a_encode_targetaget_hostuurllib3\util\url.pyTamatchu<module urllib3.util.url>Ta__class__Taclsaschemeaauthahostaportapathaqueryafragmenta__class__TaselfT
acomponentaallowed_charsaencodingapercent_encodingsauri_bytesais_percent_encodedaencoded_componentwiabyteabyte_ordTatargetapathaqueryTanameaidnaTahostaschemeais_ipv6amatchastartaendazone_idTapathasegmentsaoutputasegmentTwxaensure_funcTaensure_funcTaurlwpTaurlasource_urlaschemeaauthorityapathaqueryafragmentanormalize_uriaauthw_ahost_portahostaportaensure_funcaensure_typeTaselfauriTwsadelimsamin_idxamin_delimwdaidxTaselfaschemeaauthahostaportapathaqueryafragmentaurl.urllib3.util.wait?umust specify at least one of read=True, write=Trueapartialaselecta_retry_on_intrutoo many values to unpack (expected 3)laPOLLINaPOLLOUTapollaregisterado_pollupoll_wait_for_socket.<locals>.do_polllapoll_objaNoWayToWaitForSocketErrorTuno select-equivalent availableTEAttributeErrorEOSErrora_have_working_pollapoll_wait_for_socketawait_for_socketaselect_wait_for_socketanull_wait_for_socketTareadatimeoutuWaits for reading to be available on a given socket.
    Returns True if the socket is readable, or False if the timeout expired.
    TawriteatimeoutuWaits for writing to be available on a given socket.
    Returns True if the socket is readable, or False if the timeout expired.
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aerrnoasysatimeTamonotonicamonotonicTatimeawait_for_readawait_for_writea__all__TEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uurllib3.util.waita__module__a__qualname__a__orig_bases__TFpnTnuurllib3\util\wait.pyu<module urllib3.util.wait>Tapoll_objTafnatimeoutTwtapoll_objTaargsakwargsTasockareadawriteatimeoutamaskapoll_objado_pollT
asockareadawriteatimeoutarcheckawcheckafnarreadyawreadyaxreadyTasockatimeoutu.werkzeug._internal
aencodeTalatin1adecodeTareplaceTaerrorsaenvirona__name__uu is not a WSGI environment (has to be a dict)agetEffectiveLevelacurrentahandlersapropagateaparentuCheck if there is a handler in the logging chain that will handle
    the given logger's effective level.
    alevelu<genexpr>u_has_level_handler.<locals>.<genexpr>acoloramalaAnsiToWin32astderra__class__a__init__astreama_loggeraloggingagetLoggerTawerkzeugaNOTSETasetLevelaINFOa_has_level_handleraaddHandlera_ColorStreamHandlerarstripuLog a message to the 'werkzeug' logger.

    The logger is created the first time it is needed. If there is no
    level set, it is set to :data:`logging.INFO`. If there is no handler
    for the logger's effective level, a :class:`logging.StreamHandler`
    is added.
    atzinfoareplaceatimezoneautcTatzinfoaastimezoneanameadefaultaload_funcadump_funcaread_onlya__doc__alookupTEValueErrorETypeErroruread only propertyapopw<w w>astripa_plain_int_reafullmatchuParse an int only if it is only ASCII digits and ``-``.

    This disallows ``+``, ``_``, and non-ASCII digits, which are accepted by ``int`` but
    are not allowed in HTTP header values.

    Any leading or trailing whitespace is stripped
    a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsareasyswtadatetimeTadatetimeTatimezoneulogging.Logger | Noneuwerkzeug._internala__module__a_Missinga__qualname__Dareturnastruno valuea__repr__u_Missing.__repr__a_missinga__reduce__u_Missing.__reduce__Dwsareturnastrpa_wsgi_decoding_dancea_wsgi_encoding_danceDaobjareturnuWSGIEnvironment | RequestaWSGIEnvironmenta_get_environDaloggerareturnulogging.LoggeraboolaStreamHandlera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uOn Windows, wrap stream with Colorama for ANSI style support.DareturnaNoneu_ColorStreamHandler.__init__a__orig_bases__Datypeamessageaargsakwargsareturnastrput.Anyut.AnyaNonea_logaoverloadDadtareturnaNonepa_dt_as_utcDadtareturnadatetimepDadtareturnudatetime | Noneudatetime | NoneaTypeVarTa_TAccessorValuea_TAccessorValueaGenerica_DictAccessorPropertyuBaseclass for `environ_property` and `header_property`.TnnnnnDanameadefaultaload_funcadump_funcaread_onlyadocareturnastru_TAccessorValue | Noneut.Callable[[str], _TAccessorValue] | Noneut.Callable[[_TAccessorValue], str] | Noneubool | Noneustr | NoneaNoneu_DictAccessorProperty.__init__Dainstanceareturnut.Anyut.MutableMapping[str, t.Any]u_DictAccessorProperty.lookupDainstanceaownerareturnaNoneatypeu_DictAccessorProperty[_TAccessorValue]a__get__u_DictAccessorProperty.__get__Dainstanceaownerareturnut.Anyatypea_TAccessorValueDainstanceaownerareturnut.Any | Noneatypeu_TAccessorValue | _DictAccessorProperty[_TAccessorValue]Dainstanceavalueareturnut.Anya_TAccessorValueaNonea__set__u_DictAccessorProperty.__set__Dainstanceareturnut.AnyaNonea__delete__u_DictAccessorProperty.__delete__u_DictAccessorProperty.__repr__acompileu-?\d+aASCIIDavalueareturnastrainta_plain_intuwerkzeug\_internal.pyTa.0ahandleralevelu<module werkzeug._internal>Ta__class__TaselfainstanceTaselfainstanceaownerTaselfainstanceaownerastorageavalueTaselfacoloramaastreama__class__Taselfanameadefaultaload_funcadump_funcaread_onlyadocTaselfTaselfainstanceavalueTadtTaobjaenvTaloggeralevelacurrentTatypeamessageaargsakwargsTavalueTws.werkzeug)a__version__awarningslawarnuThe '__version__' attribute is deprecated and will be removed in Werkzeug 3.1. Use feature detection or 'importlib.metadata.version("werkzeug")' instead.aDeprecationWarningDastacklevellu3.0.4a__doc__a__file__apathadirnameaenvironagetTaNUITKA_PACKAGE_werkzeugu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aannotationswtaservingTarun_simplelarun_simpleatestTaClientaClientawrappersTaRequestaRequestTaResponseaResponseDanameareturnastrut.Anya__getattr__uwerkzeug\__init__.pyu<module werkzeug>Tanameaimportlibawarningsu.werkzeug.datastructures.accepta__init__aprovidedaAcceptasortedu<lambda>uAccept.__init__.<locals>.<lambda>Takeyareverseaselfa_specificityllw*uReturns a tuple describing the value's specificity.aloweruCheck if a value matches a given accept item.aqualitya__getitem__uBesides index lookup (getting item n) you can also pass it a string
        to get the quality for the item.  If the item is not in the list, the
        returned quality is ``0``.
        utoo many values to unpack (expected 2)a_value_matchesakeyuReturns the quality of the key.

        .. versionadded:: 0.6
           In previous versions you had to use the item-lookup syntax
           (eg: ``obj[key]`` instead of ``obj.quality(key)``)
        avalueu, a__name__uu([u])w(w)u<genexpr>uAccept.__repr__.<locals>.<genexpr>aindexuGet the position of an entry or raise :exc:`ValueError`.

        :param key: The key to be looked up.

        .. versionchanged:: 0.5
           This used to raise :exc:`IndexError`, which was inconsistent
           with the list API.
        quGet the position of an entry or return -1.

        :param key: The key to be looked up.
        uIterate over all values.avaluesuAccept.valuesu;q=aresultw,uConvert the header set into an HTTP header string.ato_headeramatchTqa_best_single_matchabest_qualityabest_specificityuReturns the best match from a list of possible matches based
        on the specificity and quality of the client. If two items have the
        same quality and specificity, the one is returned that comes first.

        :param matches: a list of matches to check for
        :param default: the value that is returned if none match
        uThe best match as value.a_mime_split_reasplituMIMEAccept._specificity.<locals>.<genexpr>w/uinvalid mimetype a_normalize_mime:nln:lnnutext/htmluapplication/xhtml+xmlaaccept_xhtmluTrue if this object accepts HTML.uapplication/xmluTrue if this object accepts XHTML.uapplication/jsonuTrue if this object accepts JSON.a_locale_delim_reuProcess a language tag for matching.a_normalize_langa__class__abest_matchuGiven a list of supported values, finds the best match from
        the list of accepted values.

        Language tags are normalized for the purpose of matching, but
        are returned unchanged.

        If no exact match is found, this will fall back to matching
        the first subtag (primary language only), first with the
        accepted values then with the match values. This partial is not
        applied to any other language subtags.

        The default is returned if no exact or fallback match is found.

        :param matches: A list of supported languages to find a match.
        :param default: The value that is returned if none match.
        astartswithuLanguageAccept.best_match.<locals>.<genexpr>a_normalizeuCharsetAccept._value_matches.<locals>._normalizeacodecsalookupanamea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsareastructuresTaImmutableListaImmutableLista__prepare__u%s.__prepare__() must return a mapping, not %su<metaclass>uwerkzeug.datastructures.accepta__module__uAn :class:`Accept` object is just a list subclass for lists of
    ``(value, quality)`` tuples.  It is automatically sorted by specificity
    and quality.

    All :class:`Accept` objects work similar to a list but provide extra
    functionality for working with the data.  Containment checks are
    normalized to the rules of that header:

    >>> a = CharsetAccept([('ISO-8859-1', 1), ('utf-8', 0.7)])
    >>> a.best
    'ISO-8859-1'
    >>> 'iso-8859-1' in a
    True
    >>> 'UTF8' in a
    True
    >>> 'utf7' in a
    False

    To get the quality for an item you can use normal item lookup:

    >>> print a['utf-8']
    0.7
    >>> a['utf7']
    0

    .. versionchanged:: 0.5
       :class:`Accept` objects are forced immutable now.

    .. versionchanged:: 1.0.0
       :class:`Accept` internal values are no longer ordered
       alphabetically for equal quality tags. Instead the initial
       order is preserved.

    a__qualname__TTuAccept.__init__uAccept._specificityuAccept._value_matchesuAccept.__getitem__uAccept.qualitya__contains__uAccept.__contains__a__repr__uAccept.__repr__uAccept.indexafinduAccept.finduAccept.to_headera__str__uAccept.__str__uAccept._best_single_matchTnuAccept.best_matchapropertyabestuAccept.besta__orig_bases__acompileTu/|(?:\s*;\s*)aMIMEAcceptuLike :class:`Accept` but with special methods and behavior for
    mimetypes.
    uMIMEAccept._specificityuMIMEAccept._value_matchesaaccept_htmluMIMEAccept.accept_htmluMIMEAccept.accept_xhtmlaaccept_jsonuMIMEAccept.accept_jsonTu[_-]aLanguageAcceptuLike :class:`Accept` but with normalization for language tags.uLanguageAccept._value_matchesuLanguageAccept.best_matchaCharsetAcceptuLike :class:`Accept` but with normalization for charsets.uCharsetAccept._value_matchesuwerkzeug\datastructures\accept.pyTa.0wxwyTa.0aitemaresultTa__class__Ta.0wxTwxaselfTaselfu<module werkzeug.datastructures.accept>Taselfavalueaitema_qualityTaselfakeyTaselfavaluesTaselfapairs_strTaselfamatchaclient_itemaqualityTanameTavalueTaselfavalueTaselfavalueaitemTaselfavalueaitema_normalizeTaselfavalueaitemanormalized_valueavalue_typeavalue_subtypeavalue_paramsanormalized_itemaitem_typeaitem_subtypeaitem_paramsTaselfamatchesadefaultaresultabest_qualityabest_specificityaserver_itemamatchaclient_itemaqualityaspecificityTaselfamatchesadefaultaresultafallbackafallback_matchesa__class__Taselfakeyaidxaitema_qualityTaselfakeyaitemaqualityTaselfaresultavalueaqualityTaselfaitem.werkzeug.datastructures.authatypeaparametersatokenagetaAuthorizationapartitionTw utoo many values to unpack (expected 3)alowerastripabasicabase64ab64decodeadecodeTw:abinasciiaErrorausernameapasswordw=arstripTw=aparse_dict_headeruParse an ``Authorization`` header value and return an instance, or ``None``
        if the value is empty.

        :param value: The header value to parse.

        .. versionadded:: 2.3
        ab64encodeuw:TaasciiuBasic atitlew adump_headeruProduce an ``Authorization`` header value representing this data.

        .. versionadded:: 2.0
        ato_headerw<a__name__w>a_typeaCallbackDictu<lambda>uWWWAuthenticate.__init__.<locals>.<lambda>a_parametersa_tokena_on_updateaselfa_trigger_on_updateuThe authorization scheme, like ``basic``, ``digest``, or ``bearer``.uA dict of parameters for the header. Only one of this or :attr:`token` should
        have a value for a given scheme.
        uWWWAuthenticate.parameters.<locals>.<lambda>uA token for the header. Only one of this or :attr:`parameters` should have a
        value for a given scheme.

        .. versionadded:: 2.3
        Pa_typea_tokena_parametersa_on_updatea__class__a__setattr__aWWWAuthenticateuParse a ``WWW-Authenticate`` header value and return an instance, or ``None``
        if the value is empty.

        :param value: The header value to parse.

        .. versionadded:: 2.3
        adigestaitemsutoo many values to unpack (expected 2)Paqopanonceaopaquearealmadomainaquote_header_valueDaallow_tokenFuDigest u, uProduce a ``WWW-Authenticate`` header value representing this data.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationslwtahttpTadump_headerlTaparse_dict_headerTaquote_header_valueastructuresTaCallbackDictluwerkzeug.datastructures.autha__module__uRepresents the parts of an ``Authorization`` request header.

    :attr:`.Request.authorization` returns an instance if the header is set.

    An instance can be used with the test :class:`.Client` request methods' ``auth``
    parameter to send the header in test requests.

    Depending on the auth scheme, either :attr:`parameters` or :attr:`token` will be
    set. The ``Basic`` scheme's token is decoded into the ``username`` and ``password``
    parameters.

    For convenience, ``auth["key"]`` and ``auth.key`` both access the key in the
    :attr:`parameters` dict, along with ``auth.get("key")`` and ``"key" in auth``.

    .. versionchanged:: 2.3
        The ``token`` parameter and attribute was added to support auth schemes that use
        a token instead of parameters, such as ``Bearer``.

    .. versionchanged:: 2.3
        The object is no longer a ``dict``.

    .. versionchanged:: 0.5
        The object is an immutable dict.
    a__qualname__TnnDaauth_typeadataatokenareturnastrudict[str, str | None] | Noneustr | NoneaNonea__init__uAuthorization.__init__Danameareturnastrustr | Nonea__getattr__uAuthorization.__getattr__a__getitem__uAuthorization.__getitem__TnDakeyadefaultareturnastrustr | Noneustr | NoneuAuthorization.getDakeyareturnastraboola__contains__uAuthorization.__contains__Daotherareturnaobjectaboola__eq__uAuthorization.__eq__Davalueareturnustr | Noneute.Self | Noneafrom_headeruAuthorization.from_headerDareturnastruAuthorization.to_headera__str__uAuthorization.__str__a__repr__uAuthorization.__repr__uRepresents the parts of a ``WWW-Authenticate`` response header.

    Set :attr:`.Response.www_authenticate` to an instance of list of instances to set
    values for this header in the response. Modifying this instance will modify the
    header value.

    Depending on the auth scheme, either :attr:`parameters` or :attr:`token` should be
    set. The ``Basic`` scheme will encode ``username`` and ``password`` parameters to a
    token.

    For convenience, ``auth["key"]`` and ``auth.key`` both act on the :attr:`parameters`
    dict, and can be used to get, set, or delete parameters. ``auth.get("key")`` and
    ``"key" in auth`` are also provided.

    .. versionchanged:: 2.3
        The ``token`` parameter and attribute was added to support auth schemes that use
        a token instead of parameters, such as ``Bearer``.

    .. versionchanged:: 2.3
        The object is no longer a ``dict``.

    .. versionchanged:: 2.3
        The ``on_update`` parameter was removed.
    Daauth_typeavaluesatokenastrudict[str, str | None] | Noneustr | NoneuWWWAuthenticate.__init__DareturnaNoneuWWWAuthenticate._trigger_on_updateuWWWAuthenticate.typeasetterDavalueareturnastraNoneDareturnudict[str, str | None]uWWWAuthenticate.parametersDavalueareturnudict[str, str]aNoneDareturnustr | NoneuWWWAuthenticate.tokenDavalueareturnustr | NoneaNoneDakeyareturnastrustr | NoneuWWWAuthenticate.__getitem__Dakeyavalueareturnastrustr | NoneaNonea__setitem__uWWWAuthenticate.__setitem__DakeyareturnastraNonea__delitem__uWWWAuthenticate.__delitem__uWWWAuthenticate.__getattr__Danameavalueareturnastrustr | NoneaNoneuWWWAuthenticate.__setattr__DanameareturnastraNonea__delattr__uWWWAuthenticate.__delattr__uWWWAuthenticate.__contains__uWWWAuthenticate.__eq__uWWWAuthenticate.getuWWWAuthenticate.from_headeruWWWAuthenticate.to_headeruWWWAuthenticate.__str__uWWWAuthenticate.__repr__uwerkzeug\datastructures\auth.pyTw_aselfTaselfu<module werkzeug.datastructures.auth>Ta__class__TaselfakeyTaselfanameTaselfaotherTaselfaauth_typeadataatokenTaselfaauth_typeavaluesatokenTaselfanameavaluea__class__TaselfakeyavalueTaclsavalueaschemew_arestausernameapasswordTaclsavalueaschemew_arestTaselfakeyadefaultTaselfavalueTaselfaitemsakeyavalue.werkzeug.datastructures.cache_controlwu<lambda>ucache_control_property.<locals>.<lambda>uaccessor for uuReturn a new property object for a cache header. Useful if you
    want to add support for a cache extension in a subclass.

    .. versionchanged:: 2.0
        Renamed from ``cache_property``.
    a_get_cache_valueakeyaemptyatypea_set_cache_valuea_del_cache_valuea__init__aon_updateaprovidedavalueuUsed internally by the accessor properties.apopahttpadump_headeruConvert the stored values into a cache control header.ato_headerw asortedaitemsw<a__name__w>utoo many values to unpack (expected 2)w=u<genexpr>u_CacheControl.__repr__.<locals>.<genexpr>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsamixinsTaImmutableDictMixinlaImmutableDictMixinlTaUpdateDictMixinaUpdateDictMixinacache_control_propertya__prepare__a_CacheControla__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uwerkzeug.datastructures.cache_controla__module__uSubclass of a dict that stores values for a Cache-Control header.  It
    has accessors for all the cache-control directives specified in RFC 2616.
    The class does not differentiate between request and response directives.

    Because the cache-control directives in the HTTP header use dashes the
    python descriptors use underscores for that.

    To get a header of the :class:`CacheControl` object again you can convert
    the object into a string or call the :meth:`to_header` method.  If you plan
    to subclass it and add your own items have a look at the sourcecode for
    that class.

    .. versionchanged:: 2.1.0
        Setting int properties such as ``max_age`` will convert the
        value to an int.

    .. versionchanged:: 0.4

       Setting `no_cache` or `private` to boolean `True` will set the implicit
       none-value which is ``*``:

       >>> cc = ResponseCacheControl()
       >>> cc.no_cache = True
       >>> cc
       <ResponseCacheControl 'no-cache'>
       >>> cc.no_cache
       '*'
       >>> cc.no_cache = None
       >>> cc
       <ResponseCacheControl ''>

       In versions before 0.5 the behavior documented here affected the now
       no longer existing `CacheControl` class.
    a__qualname__Tuno-cachew*nano_cacheuno-storeaboolano_storeumax-ageqaintamax_ageTuno-transformnnano_transformTTnu_CacheControl.__init__u_CacheControl._get_cache_valueu_CacheControl._set_cache_valueu_CacheControl._del_cache_valueu_CacheControl.to_headera__str__u_CacheControl.__str__a__repr__u_CacheControl.__repr__astaticmethodacache_propertya__orig_bases__aRequestCacheControluA cache control for requests.  This is immutable and gives access
    to all the request-relevant cache control headers.

    To get a header of the :class:`RequestCacheControl` object again you can
    convert the object into a string or call the :meth:`to_header` method.  If
    you plan to subclass it and add your own items have a look at the sourcecode
    for that class.

    .. versionchanged:: 2.1.0
        Setting int properties such as ``max_age`` will convert the
        value to an int.

    .. versionadded:: 0.5
       In previous versions a `CacheControl` class existed that was used
       both for request and response.
    umax-stalew*amax_staleumin-freshamin_freshuonly-if-cachedaonly_if_cachedaResponseCacheControluA cache control for responses.  Unlike :class:`RequestCacheControl`
    this is mutable and gives access to response-relevant cache control
    headers.

    To get a header of the :class:`ResponseCacheControl` object again you can
    convert the object into a string or call the :meth:`to_header` method.  If
    you plan to subclass it and add your own items have a look at the sourcecode
    for that class.

    .. versionchanged:: 2.1.1
        ``s_maxage`` converts the value to an int.

    .. versionchanged:: 2.1.0
        Setting int properties such as ``max_age`` will convert the
        value to an int.

    .. versionadded:: 0.5
       In previous versions a `CacheControl` class existed that was used
       both for request and response.
    apublicTaprivatew*naprivateumust-revalidateamust_revalidateuproxy-revalidateaproxy_revalidateus-maxageas_maxageaimmutableTahttpluwerkzeug\datastructures\cache_control.pyTa.0wkwvTwxakeyTakeyTwxakeyaemptyatypeTaemptyakeyatypeTwxwvakeyatypeTakeyatypeu<module werkzeug.datastructures.cache_control>Ta__class__Taselfavaluesaon_updateTaselfakv_strTaselfTaselfakeyTaselfakeyaemptyatypeavalueTaselfakeyavalueatypeTakeyaemptyatype.werkzeug.datastructuresKca__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_werkzeugu\not_existingadatastructuresTaNUITKA_PACKAGE_werkzeug_datastructuresu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aacceptTaAcceptlaAcceptlTaCharsetAcceptaCharsetAcceptTaLanguageAcceptaLanguageAcceptTaMIMEAcceptaMIMEAcceptaauthTaAuthorizationaAuthorizationTaWWWAuthenticateaWWWAuthenticateacache_controlTaRequestCacheControlaRequestCacheControlTaResponseCacheControlaResponseCacheControlacspTaContentSecurityPolicyaContentSecurityPolicyaetagTaETagsaETagsafile_storageTaFileMultiDictaFileMultiDictTaFileStorageaFileStorageaheadersTaEnvironHeadersaEnvironHeadersTaHeadersaHeadersamixinsTaImmutableDictMixinaImmutableDictMixinTaImmutableHeadersMixinaImmutableHeadersMixinTaImmutableListMixinaImmutableListMixinTaImmutableMultiDictMixinaImmutableMultiDictMixinTaUpdateDictMixinaUpdateDictMixinarangeTaContentRangeaContentRangeTaIfRangeaIfRangeTaRangeaRangeastructuresTaCallbackDictaCallbackDictTaCombinedMultiDictaCombinedMultiDictTaHeaderSetaHeaderSetTaImmutableDictaImmutableDictTaImmutableListaImmutableListTaImmutableMultiDictaImmutableMultiDictTaImmutableOrderedMultiDictaImmutableOrderedMultiDictTaImmutableTypeConversionDictaImmutableTypeConversionDictTaiter_multi_itemsaiter_multi_itemsTaMultiDictaMultiDictTaOrderedMultiDictaOrderedMultiDictTaTypeConversionDictaTypeConversionDictuwerkzeug\datastructures\__init__.pyu<module werkzeug.datastructures>u.werkzeug.datastructures.cspq
u<lambda>ucsp_property.<locals>.<lambda>uaccessor for uuReturn a new property object for a content security policy header.
    Useful if you want to add support for a csp extension in a
    subclass.
    a_get_valueakeya_set_valuea_del_valuea__init__aon_updateaprovidedagetuUsed internally by the accessor properties.apopahttpTadump_csp_headerladump_csp_headerluConvert the stored values into a cache control header.ato_headerw asortedaitemsw<a__name__w>utoo many values to unpack (expected 2)w=u<genexpr>uContentSecurityPolicy.__repr__.<locals>.<genexpr>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsamixinsTaUpdateDictMixinlaUpdateDictMixinacsp_propertya__prepare__aContentSecurityPolicya__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uwerkzeug.datastructures.cspa__module__uSubclass of a dict that stores values for a Content Security Policy
    header. It has accessors for all the level 3 policies.

    Because the csp directives in the HTTP header use dashes the
    python descriptors use underscores for that.

    To get a header of the :class:`ContentSecuirtyPolicy` object again
    you can convert the object into a string or call the
    :meth:`to_header` method.  If you plan to subclass it and add your
    own items have a look at the sourcecode for that class.

    .. versionadded:: 1.0.0
       Support for Content Security Policy headers was added.

    a__qualname__Tubase-uriabase_uriTuchild-srcachild_srcTuconnect-srcaconnect_srcTudefault-srcadefault_srcTufont-srcafont_srcTuform-actionaform_actionTuframe-ancestorsaframe_ancestorsTuframe-srcaframe_srcTuimg-srcaimg_srcTumanifest-srcamanifest_srcTumedia-srcamedia_srcTunavigate-toanavigate_toTuobject-srcaobject_srcTuprefetch-srcaprefetch_srcTuplugin-typesaplugin_typesTureport-toareport_toTureport-uriareport_uriTasandboxasandboxTuscript-srcascript_srcTuscript-src-attrascript_src_attrTuscript-src-elemascript_src_elemTustyle-srcastyle_srcTustyle-src-attrastyle_src_attrTustyle-src-elemastyle_src_elemTuworker-srcaworker_srcTTnuContentSecurityPolicy.__init__uContentSecurityPolicy._get_valueuContentSecurityPolicy._set_valueuContentSecurityPolicy._del_valueuContentSecurityPolicy.to_headera__str__uContentSecurityPolicy.__str__a__repr__uContentSecurityPolicy.__repr__a__orig_bases__uwerkzeug\datastructures\csp.pyTa.0wkwvTwxakeyTakeyTwxwvakeyu<module werkzeug.datastructures.csp>Ta__class__Taselfavaluesaon_updateTaselfakv_strTaselfTaselfakeyTaselfakeyavalueTaselfadump_csp_header.werkzeug.datastructures.etagR\a_strongPaselfa_weakastar_tagaupdateuConvert the `ETags` object into a python set.  Per default all the
        weak etags are not part of this set.uCheck if an etag is weak.uCheck if an etag is strong.ais_weakacontainsuCheck if an etag is part of the set including weak and strong tags.ais_stronguCheck if an etag is part of the set ignoring weak tags.
        It is also possible to use the ``in`` operator.
        ahttpTaunquote_etaglaunquote_etaglutoo many values to unpack (expected 2)acontains_weakuWhen passed a quoted tag it will check if this tag is part of the
        set.  If the tag is weak it is checked against weak and strong tags,
        otherwise strong only.w*u, w"uuW/"uConvert the etags set into a HTTP header string.ueither tag or data required, but at least oneTagenerate_etagagenerate_etagato_headerw<a__name__w w>a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucollections.abcTaCollectionaCollectiona__prepare__aETagsa__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uwerkzeug.datastructures.etaga__module__uA set that can be used to check if one etag is present in a collection
    of etags.
    a__qualname__TnnFa__init__uETags.__init__TFaas_setuETags.as_setuETags.is_weakuETags.is_stronguETags.contains_weakuETags.containsacontains_rawuETags.contains_rawuETags.to_headera__call__uETags.__call__a__bool__uETags.__bool__a__str__uETags.__str__a__len__uETags.__len__a__iter__uETags.__iter__a__contains__uETags.__contains__a__repr__uETags.__repr__a__orig_bases__uwerkzeug\datastructures\etag.pyu<module werkzeug.datastructures.etag>Ta__class__TaselfTaselfaetagadataainclude_weakagenerate_etagTaselfaetagTaselfastrong_etagsaweak_etagsastar_tagTaselfainclude_weakarvTaselfaetagaunquote_etagaweak.werkzeug.datastructures.file_storage&nanameaBytesIOastreamafsdecodelw<qw>afilenameaheadersTaHeaderslaHeadersuContent-TypeuContent-Lengtha_parsed_content_typeahttpaparse_options_headeracontent_typeagetTucontent-typeuThe content-type sent in the header.  Usually not availableucontent-lengtha_plain_intuThe content-length sent in the header.  Usually not availablea_parse_content_typealoweruLike :attr:`content_type`, but without parameters (eg, without
        charset, type etc.) and always lowercase.  For example if the content
        type is ``text/HTML; charset=utf-8`` the mimetype would be
        ``'text/html'``.

        .. versionadded:: 0.7
        uThe mimetype parameters as dict.  For example if the content
        type is ``text/html; charset=utf-8`` the params would be
        ``{'charset': 'utf-8'}``.

        .. versionadded:: 0.7
        ashutilTacopyfileobjacopyfileobja__fspath__afspathawbacloseuSave the file to a destination path or file object.  If the
        destination is a file object you have to close it yourself after the
        call.  The buffer size is the number of bytes held in memory during
        the copy process.  It defaults to 16KB.

        For secure file saving also have a look at :func:`secure_filename`.

        :param dst: a filename, :class:`os.PathLike`, or open file
            object to write to.
        :param buffer_size: Passed as the ``length`` parameter of
            :func:`shutil.copyfileobj`.

        .. versionchanged:: 1.0
            Supports :mod:`pathlib`.
        uClose the underlying file if possible.a_filea__name__uu: u (u)>aFileStoragearbamimetypesaguess_typeuapplication/octet-streamaadduAdds a new file to the dict.  `file` can be a file name or
        a :class:`file`-like or a :class:`FileStorage` object.

        :param name: the name of the field.
        :param file: a filename or :class:`file`-like object
        :param filename: an optional filename
        :param content_type: an optional content type
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsa_internalTa_plain_intlastructuresTaMultiDictaMultiDictuwerkzeug.datastructures.file_storagea__module__uThe :class:`FileStorage` class is a thin wrapper over incoming files.
    It is used by the request object to represent uploaded files.  All the
    attributes of the wrapper stream are proxied by the file storage so
    it's possible to do ``storage.read()`` instead of the long form
    ``storage.stream.read()``.
    a__qualname__Tnnnnnna__init__uFileStorage.__init__uFileStorage._parse_content_typeuFileStorage.content_typeacontent_lengthuFileStorage.content_lengthamimetypeuFileStorage.mimetypeamimetype_paramsuFileStorage.mimetype_paramsTlasaveuFileStorage.saveuFileStorage.closea__bool__uFileStorage.__bool__a__getattr__uFileStorage.__getattr__a__iter__uFileStorage.__iter__a__repr__uFileStorage.__repr__a__prepare__aFileMultiDicta__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uA special :class:`MultiDict` that has convenience methods to add
    files to it.  This is used for :class:`EnvironBuilder` and generally
    useful for unittesting.

    .. versionadded:: 0.5
    Tnnaadd_fileuFileMultiDict.add_filea__orig_bases__Tahttpuwerkzeug\datastructures\file_storage.pyu<module werkzeug.datastructures.file_storage>Ta__class__TaselfTaselfanameTaselfastreamafilenameanameacontent_typeacontent_lengthaheadersaHeadersTaselfanameafileafilenameacontent_typeavalueTaselfadstabuffer_sizeacopyfileobjaclose_dst.werkzeug.datastructures.headers~*a_listaextendaBadRequestKeyErroralowerutoo many values to unpack (expected 2)alowereduHeaders.__eq__.<locals>.loweredl:lnna__getitem__Da_get_modetuReturn the default value if the requested data doesn't exist.
        If `type` is provided and is a callable it should convert the value,
        return it or raise a :exc:`ValueError` if that is not possible.  In
        this case the function will return the default as if the value was not
        found:

        >>> d = Headers([('Content-Length', '42')])
        >>> d.get('Content-Length', type=int)
        42

        :param key: The key to be looked up.
        :param default: The default value to be returned if the key can't
                        be looked up.  If not further specified `None` is
                        returned.
        :param type: A callable that is used to cast the value in the
                     :class:`Headers`.  If a :exc:`ValueError` is raised
                     by this callable the default value is returned.

        .. versionchanged:: 3.0
            The ``as_bytes`` parameter was removed.

        .. versionchanged:: 0.9
            The ``as_bytes`` parameter was added.
        atypearesultuReturn the list of items for a given key. If that key is not in the
        :class:`Headers`, the return value will be an empty list.  Just like
        :meth:`get`, :meth:`getlist` accepts a `type` parameter.  All items will
        be converted with the callable defined there.

        :param key: The key to be looked up.
        :param type: A callable that is used to cast the value in the
                     :class:`Headers`.  If a :exc:`ValueError` is raised
                     by this callable the value will be removed from the list.
        :return: a :class:`list` of all the values for the key.

        .. versionchanged:: 3.0
            The ``as_bytes`` parameter was removed.

        .. versionchanged:: 0.9
            The ``as_bytes`` parameter was added.
        agetlistuReturn a list of all the values for the named field.

        This method is compatible with the :mod:`wsgiref`
        :meth:`~wsgiref.headers.Headers.get_all` method.
        aselfaitemsuHeaders.itemsakeysuHeaders.keysavaluesuHeaders.valuesuupdate expected at most 1 arguments, got uaiter_multi_itemsaadduExtend headers in this object with items from another object
        containing header items as well as keyword arguments.

        To replace existing keys instead of extending, use
        :meth:`update` instead.

        If provided, the first argument can be another :class:`Headers`
        object, a :class:`MultiDict`, :class:`dict`, or iterable of
        pairs.

        .. versionchanged:: 1.0
            Support :class:`MultiDict`. Allow passing ``kwargs``.
        TOintOsliceanew:nnna__delitem__Da_index_operationFuRemove a key.

        :param key: The key to be removed.
        apoparemovea_missinguRemoves and returns a key or index.

        :param key: The key to be popped.  If this is an integer the item at
                    that position is removed, if it's a string the value for
                    that key is.  If the key is omitted or `None` the last
                    item is removed.
        :return: an item.
        uRemoves a key or index and returns a (key, value) item.uCheck if a key is present.uYield ``(key, value)`` tuples.a_options_header_vkwa_str_header_valueaappenduAdd a new header tuple to the list.

        Keyword arguments can specify additional parameters for the header
        value, with underscores converted to dashes::

        >>> d = Headers()
        >>> d.add('Content-Type', 'text/plain')
        >>> d.add('Content-Disposition', 'attachment', filename='foo.png')

        The keyword argument dumping uses :func:`dump_options_header`
        behind the scenes.

        .. versionadded:: 0.4.1
            keyword arguments were added for :mod:`wsgiref` compatibility.
        uAdd a new header tuple to the list.

        An alias for :meth:`add` for compatibility with the :mod:`wsgiref`
        :meth:`~wsgiref.headers.Headers.add_header` method.
        uClears all headers.aidxluRemove all header tuples for `key` and add a new one.  The newly
        added key either appears at the end of the list if there was no
        entry or replaces the first one.

        Keyword arguments can specify additional parameters for the header
        value, with underscores converted to dashes.  See :meth:`add` for
        more information.

        .. versionchanged:: 0.6.1
           :meth:`set` now accepts the same arguments as :meth:`add`.

        :param key: The key to be inserted.
        :param value: The value to be inserted.
        asetakeyuRemove any existing values for a header and add new ones.

        :param key: The header key to set.
        :param values: An iterable of values to set for the key.

        .. versionadded:: 1.0
        uReturn the first value for the key if it is in the headers,
        otherwise set the header to the value given by ``default`` and
        return that.

        :param key: The header key to get.
        :param default: The value to set for the key if it is not in the
            headers.
        asetlistuReturn the list of values for the key if it is in the
        headers, otherwise set the header to the list of values given
        by ``default`` and return that.

        Unlike :meth:`MultiDict.setlistdefault`, modifying the returned
        list will not affect the headers.

        :param key: The header key to get.
        :param default: An iterable of values to set for the key if it
            is not in the headers.

        .. versionadded:: 1.0
        TOsliceOintuLike :meth:`set` but also supports index/slice based setting.aHeadersaMultiDictamappingTOlistOtupleuReplace headers in this object with items from another
        headers object and keyword arguments.

        To extend existing keys instead of replacing, use :meth:`extend`
        instead.

        If provided, the first argument can be another :class:`Headers`
        object, a :class:`MultiDict`, :class:`dict`, or iterable of
        pairs.

        .. versionadded:: 1.0
        uConvert the headers into a list suitable for WSGI.

        :return: list
        acopyato_wsgi_listastrsu: u
uReturns formatted headers suitable for HTTP transmission.a__name__w(w)ahttpadump_options_headerareplaceTw_w-a_newline_reasearchuHeader values must not contain newline characters.aenvironaupperTw-w_PaCONTENT_TYPEaCONTENT_LENGTHaHTTP_astartswithTaHTTP_PaHTTP_CONTENT_TYPEaHTTP_CONTENT_LENGTH:lnnatitlea__iter__uEnvironHeaders.__iter__ucannot create u copiesa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsarewta_internalTa_missinglaexceptionsTaBadRequestKeyErroramixinsTaImmutableHeadersMixinaImmutableHeadersMixinastructuresTaiter_multi_itemsTaMultiDictuwerkzeug.datastructures.headersa__module__uAn object that stores some headers. It has a dict-like interface,
    but is ordered, can store the same key multiple times, and iterating
    yields ``(key, value)`` pairs instead of only keys.

    This data structure is useful if you want a nicer way to handle WSGI
    headers which are stored as tuples in a list.

    From Werkzeug 0.3 onwards, the :exc:`KeyError` raised by this class is
    also a subclass of the :class:`~exceptions.BadRequest` HTTP exception
    and will render a page for a ``400 BAD REQUEST`` if caught in a
    catch-all for HTTP exceptions.

    Headers is mostly compatible with the Python :class:`wsgiref.headers.Headers`
    class, with the exception of `__getitem__`.  :mod:`wsgiref` will return
    `None` for ``headers['missing']``, whereas :class:`Headers` will raise
    a :class:`KeyError`.

    To create a new ``Headers`` object, pass it a list, dict, or
    other ``Headers`` object with default values. These values are
    validated the same way values added later are.

    :param defaults: The list of default values for the :class:`Headers`.

    .. versionchanged:: 2.1.0
        Default values are validated the same as values added later.

    .. versionchanged:: 0.9
       This data structure now stores unicode values similar to how the
       multi dicts do it.  The main difference is that bytes can be set as
       well which will automatically be latin1 decoded.

    .. versionchanged:: 0.9
       The :meth:`linked` function was removed without replacement as it
       was an API that does not support the changes to the encoding model.
    a__qualname__Tna__init__uHeaders.__init__TFuHeaders.__getitem__a__eq__uHeaders.__eq__a__hash__TnnagetuHeaders.getuHeaders.getlistaget_alluHeaders.get_alluHeaders.extendTtuHeaders.__delitem__uHeaders.removeuHeaders.popapopitemuHeaders.popitema__contains__uHeaders.__contains__uHeaders.__iter__a__len__uHeaders.__len__uHeaders.addaadd_headeruHeaders.add_headeraclearuHeaders.clearuHeaders.setuHeaders.setlistasetdefaultuHeaders.setdefaultasetlistdefaultuHeaders.setlistdefaulta__setitem__uHeaders.__setitem__aupdateuHeaders.updateuHeaders.to_wsgi_listuHeaders.copya__copy__uHeaders.__copy__a__str__uHeaders.__str__a__repr__uHeaders.__repr__Davalueakwastrudict[str, t.Any]acompileTu[\r\n]Davalueareturnut.Anyastra__prepare__aEnvironHeadersu%s.__prepare__() must return a mapping, not %su<metaclass>uRead only version of the headers from a WSGI environment.  This
    provides the same interface as `Headers` and is constructed from
    a WSGI environment.
    From Werkzeug 0.3 onwards, the `KeyError` raised by this class is also a
    subclass of the :exc:`~exceptions.BadRequest` HTTP exception and will
    render a page for a ``400 BAD REQUEST`` if caught in a catch-all for
    HTTP exceptions.
    uEnvironHeaders.__init__uEnvironHeaders.__eq__uEnvironHeaders.__getitem__uEnvironHeaders.__len__uEnvironHeaders.copya__orig_bases__Tahttpuwerkzeug\datastructures\headers.pyu<module werkzeug.datastructures.headers>Ta__class__TaselfakeyTaselfTaselfakeya_index_operationanewwkwvTaselfaotherTaselfaotheraloweredTaselfakeya_get_modeTaselfakeya_get_modeaikeywkwvTaselfaenvironTaselfadefaultsTaselfakeyavalueTaselfastrsakeyavalueTavalueakwTavalueTaselfa_keya_valueakwTaselfa_keya_valuea_kwTaselfaargsakwargsakeyavalueTaselfakeyadefaultatypearvTaselfanameTaselfakeyatypeaikeyaresultwkwvTaselfalowerakeyavalueTaselfalowerakeyw_TaitemTaselfakeyadefaultarvTaselfa_keya_valueakwalistiteraikeyaidxaold_keya_old_valueTaselfakeyadefaultTaselfakeyavaluesavalues_iteravalueTaselfaargsakwargsamappingakeyavalueTaselfw_avalue.werkzeug.datastructures.mixins
a__name__uu objects are immutablea_hash_cacheais_immutablea__class__a__new__a__init__arepeataitemsa_iter_hashitemsTtTamultiaoncallu_calls_update.<locals>.oncallaUpdateDictMixinanameaon_updateasetdefaulta_missingapopa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaitertoolsTarepeatla_internalTa_missingluwerkzeug.datastructures.mixinsa__module__uMakes a :class:`list` immutable.

    .. versionadded:: 0.5

    :private:
    aImmutableListMixina__qualname__a__hash__uImmutableListMixin.__hash__a__reduce_ex__uImmutableListMixin.__reduce_ex__a__delitem__uImmutableListMixin.__delitem__a__iadd__uImmutableListMixin.__iadd__a__imul__uImmutableListMixin.__imul__a__setitem__uImmutableListMixin.__setitem__aappenduImmutableListMixin.appendaremoveuImmutableListMixin.removeaextenduImmutableListMixin.extendainsertuImmutableListMixin.insertTquImmutableListMixin.popareverseuImmutableListMixin.reverseTnFasortuImmutableListMixin.sortuMakes a :class:`dict` immutable.

    .. versionadded:: 0.5

    :private:
    aImmutableDictMixinTnafromkeysuImmutableDictMixin.fromkeysuImmutableDictMixin.__reduce_ex__uImmutableDictMixin._iter_hashitemsuImmutableDictMixin.__hash__uImmutableDictMixin.setdefaultaupdateuImmutableDictMixin.updateuImmutableDictMixin.popapopitemuImmutableDictMixin.popitemuImmutableDictMixin.__setitem__uImmutableDictMixin.__delitem__aclearuImmutableDictMixin.cleara__prepare__aImmutableMultiDictMixina__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uMakes a :class:`MultiDict` immutable.

    .. versionadded:: 0.5

    :private:
    uImmutableMultiDictMixin.__reduce_ex__uImmutableMultiDictMixin._iter_hashitemsaadduImmutableMultiDictMixin.addapopitemlistuImmutableMultiDictMixin.popitemlistapoplistuImmutableMultiDictMixin.poplistasetlistuImmutableMultiDictMixin.setlistasetlistdefaultuImmutableMultiDictMixin.setlistdefaulta__orig_bases__uMakes a :class:`Headers` immutable.  We do not mark them as
    hashable though since the only usecase for this datastructure
    in Werkzeug is a view on a mutable structure.

    .. versionadded:: 0.5

    :private:
    aImmutableHeadersMixinuImmutableHeadersMixin.__delitem__uImmutableHeadersMixin.__setitem__asetuImmutableHeadersMixin.setuImmutableHeadersMixin.setlistuImmutableHeadersMixin.addaadd_headeruImmutableHeadersMixin.add_headeruImmutableHeadersMixin.removeuImmutableHeadersMixin.extenduImmutableHeadersMixin.updateuImmutableHeadersMixin.insertuImmutableHeadersMixin.popuImmutableHeadersMixin.popitemuImmutableHeadersMixin.setdefaultuImmutableHeadersMixin.setlistdefaulta_calls_updateTOdictuMakes dicts call `self.on_update` on modifications.

    .. versionadded:: 0.5

    :private:
    uUpdateDictMixin.setdefaultuUpdateDictMixin.popTa__setitem__Ta__delitem__TaclearTapopitemTaupdateuwerkzeug\datastructures\mixins.pyu<module werkzeug.datastructures.mixins>Ta__class__TaselfakeyTaselfakeyakwargsTaselfarvTaselfaotherTaselfaprotocolTaselfakeyavalueTanameaoncallTaselfTaselfa_keya_valueakwargsTaselfa_keya_valuea_kwargsTaselfaitemTaselfaargsakwargsTaselfaiterableTaclsakeysavalueainstancea__class__TaselfaposavalueTaselfaargsakwarvanameTanameTaselfakeyadefaultTaselfaindexTaselfakeyadefaultamodifiedarva__class__TaselfakeyavaluesTaselfakeyanew_listTaselfakeyadefault_listTaselfakeyareverse.werkzeug.datastructures.range
uaetagadateahttpahttp_dateaquote_etaguuConverts the object back into an HTTP header.ato_headerw<a__name__w w>aunitsarangesutoo many values to unpack (expected 2)lu is not a valid range.abytesais_byte_range_validaminuIf the range is for bytes, the length is not None and there is
        exactly one range and it is satisfiable it returns a ``(start, stop)``
        tuple, otherwise `None`.
        arange_for_lengthaContentRangeluCreates a :class:`~werkzeug.datastructures.ContentRange` object
        from the current range and given content length.
        w-w=w,w/uConverts the object into `Content-Range` HTTP header,
        based on given length
        afgetu_callback_property.<locals>.fgetafsetu_callback_property.<locals>.fsetanameaon_updateTuBad range providedaseta_unitsa_starta_stopa_lengthuSimple method to update the ranges.TnnnTaunitsuSets the units to `None` which indicates that the header should
        no longer be used.
        alengthw*astartu */astopa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsuwerkzeug.datastructures.rangea__module__uVery simple object that represents the `If-Range` header in parsed
    form.  It will either have neither a etag or date or one of either but
    never both.

    .. versionadded:: 0.7
    aIfRangea__qualname__Tnna__init__uIfRange.__init__uIfRange.to_headera__str__uIfRange.__str__a__repr__uIfRange.__repr__uRepresents a ``Range`` header. All methods only support only
    bytes as the unit. Stores a list of ranges if given, but the methods
    only work if only one range is provided.

    :raise ValueError: If the ranges provided are invalid.

    .. versionchanged:: 0.15
        The ranges passed in are validated.

    .. versionadded:: 0.7
    aRangeuRange.__init__uRange.range_for_lengthamake_content_rangeuRange.make_content_rangeuRange.to_headerato_content_range_headeruRange.to_content_range_headeruRange.__str__uRange.__repr__a_callback_propertyuRepresents the content range header.

    .. versionadded:: 0.7
    uContentRange.__init__Ta_unitsTa_startTa_stopTa_lengthTnabytesuContentRange.setaunsetuContentRange.unsetuContentRange.to_headera__bool__uContentRange.__bool__uContentRange.__str__uContentRange.__repr__Tahttpluwerkzeug\datastructures\range.pyu<module werkzeug.datastructures.range>Ta__class__TaselfTaselfaunitsastartastopalengthaon_updateTaselfaetagadateTaselfaunitsarangesastartaendTanameafgetafsetTaselfanameTanameTaselfavalueanameTaselfalengtharngTaselfalengthastartaendTaselfastartastopalengthaunitsTaselfalengtharangeTaselfalengthTaselfarangesabeginaend.werkzeug.datastructures.structuresYJqa__name__uu objects are immutableuIterates over the items of a mapping yielding keys and values
    without dropping any from more complex structures.
    amappingaMultiDictaitemsTtTamultiutoo many values to unpack (expected 2)TOtupleOlistaiter_multi_itemsw(a__repr__w)TEValueErrorETypeErroruReturn the default value if the requested data doesn't exist.
        If `type` is provided and is a callable it should convert the value,
        return it or raise a :exc:`ValueError` if that is not possible.  In
        this case the function will return the default as if the value was not
        found:

        >>> d = TypeConversionDict(foo='42', bar='blub')
        >>> d.get('foo', type=int)
        42
        >>> d.get('bar', -1, type=int)
        -1

        :param key: The key to be looked up.
        :param default: The default value to be returned if the key can't
                        be looked up.  If not further specified `None` is
                        returned.
        :param type: A callable that is used to cast the value in the
                     :class:`MultiDict`.  If a :exc:`ValueError` or a
                     :exc:`TypeError` is raised by this callable the default
                     value is returned.

        .. versionchanged:: 3.0.2
           Returns the default value on :exc:`TypeError`, too.
        aTypeConversionDictuReturn a shallow mutable copy of this object.  Keep in mind that
        the standard library's :func:`copy` function is a no-op for this class
        like for any other python immutable type (eg: :class:`tuple`).
        a__init__alistsatmpaappend:nnnu<genexpr>uMultiDict.__init__.<locals>.<genexpr>aclearaupdatea__iter__a__getitem__laexceptionsaBadRequestKeyErroruReturn the first data value for this key;
        raises KeyError if not found.

        :param key: The key to be looked up.
        :raise KeyError: if the key does not exist.
        a__setitem__uLike :meth:`add` but removes an existing key first.

        :param key: the key for the value.
        :param value: the value to set.
        asetdefaultuAdds a new value for the key.

        .. versionadded:: 0.6

        :param key: the key for the value.
        :param value: the value to add.
        aresultatypeuReturn the list of items for a given key. If that key is not in the
        `MultiDict`, the return value will be an empty list.  Just like `get`,
        `getlist` accepts a `type` parameter.  All items will be converted
        with the callable defined there.

        :param key: The key to be looked up.
        :param type: A callable that is used to cast the value in the
                     :class:`MultiDict`.  If a :exc:`ValueError` is raised
                     by this callable the value will be removed from the list.
        :return: a :class:`list` of all the values for the key.
        uRemove the old values for a key and add new ones.  Note that the list
        you pass the values in will be shallow-copied before it is inserted in
        the dictionary.

        >>> d = MultiDict()
        >>> d.setlist('foo', ['1', '2'])
        >>> d['foo']
        '1'
        >>> d.getlist('foo')
        ['1', '2']

        :param key: The key for which the values are set.
        :param new_list: An iterable with the new values for the key.  Old values
                         are removed first.
        adefaultuReturns the value for the key if it is in the dict, otherwise it
        returns `default` and sets that value for `key`.

        :param key: The key to be looked up.
        :param default: The default value to be returned if the key is not
                        in the dict.  If not further specified it's `None`.
        adefault_listuLike `setdefault` but sets multiple values.  The list returned
        is not a copy, but the list that is actually used internally.  This
        means that you can put new values into the dict by appending items
        to the list:

        >>> d = MultiDict({"foo": 1})
        >>> d.setlistdefault("foo").extend([2, 3])
        >>> d.getlist("foo")
        [1, 2, 3]

        :param key: The key to be looked up.
        :param default_list: An iterable of default values.  It is either copied
                             (in case it was a list) or converted into a list
                             before returned.
        :return: a :class:`list`
        uReturn an iterator of ``(key, value)`` pairs.

        :param multi: If set to `True` the iterator returned will have a pair
                      for each value of each key.  Otherwise it will only
                      contain pairs for the first value of each key.
        aselfamultiuMultiDict.itemsuReturn a iterator of ``(key, values)`` pairs, where values is the list
        of all values associated with the key.uMultiDict.listsuReturns an iterator of the first value on every key's value list.avaluesuMultiDict.valuesuReturn an iterator of all values associated with a key.  Zipping
        :meth:`keys` and this is the same as calling :meth:`lists`:

        >>> d = MultiDict({"foo": [1, 2, 3]})
        >>> zip(d.keys(), d.listvalues()) == d.lists()
        True
        uReturn a shallow copy of this object.adeepcopyato_dictTFTaflatuReturn a deep copy of this object.uReturn the contents as regular dict.  If `flat` is `True` the
        returned dict will only have the first item present, if `flat` is
        `False` all values will be returned as lists.

        :param flat: If set to `False` the dict returned will have lists
                     with all the values in it.  Otherwise it will only
                     contain the first value for each key.
        :return: a :class:`dict`
        aadduupdate() extends rather than replaces existing key lists:

        >>> a = MultiDict({'x': 1})
        >>> b = MultiDict({'x': 2, 'y': 3})
        >>> a.update(b)
        >>> a
        MultiDict([('y', 3), ('x', 1), ('x', 2)])

        If the value list for a key in ``other_dict`` is empty, no new values
        will be added to the dict and the key will not be created:

        >>> x = {'empty_list': []}
        >>> y = MultiDict()
        >>> y.update(x)
        >>> y
        MultiDict([])
        apopa_missinguPop the first item for a list on the dict.  Afterwards the
        key is removed from the dict, so additional values are discarded:

        >>> d = MultiDict({"foo": [1, 2, 3]})
        >>> d.pop("foo")
        1
        >>> "foo" in d
        False

        :param key: the key to pop.
        :param default: if provided the value to return if the key was
                        not in the dictionary.
        apopitemlaargsuPop an item from the dict.uPop the list for a key from the dict.  If the key is not in the dict
        an empty list is returned.

        .. versionchanged:: 0.5
           If the key does no longer exist a list is returned instead of
           raising an error.
        uPop a ``(key, list)`` tuple from the dict.acopyTamemoa_last_bucketaprevakeyavalueanexta_first_bucketaOrderedMultiDictaotheragetlistapoplistuOrderedMultiDict.keys.<locals>.<genexpr>akeysuOrderedMultiDict.values.<locals>.<genexpr>aptrareturned_keysuOrderedMultiDict.itemsuOrderedMultiDict.listsalistvaluesuOrderedMultiDict.listvaluesa_omd_bucketusetlistdefault is unsupported for ordered multi dictsaunlinkadictsucannot create u instances by fromkeysarvuThis function exists so __len__ can be implemented more efficiently,
        saving one list creation from an iterator.
        a_keys_implafounduCombinedMultiDict.itemsuCombinedMultiDict.valuesaextenduCombinedMultiDict.listvalues.<locals>.<genexpr>uReturn a shallow mutable copy of this object.

        This returns a :class:`MultiDict` representing the data at the
        time of copying. The copy will no longer reflect changes to the
        wrapped dicts.

        .. versionchanged:: 0.15
            Return a mutable :class:`MultiDict`.
        uReturn the contents as regular dict.  If `flat` is `True` the
        returned dict will only have the first item present, if `flat` is
        `False` all values will be returned as lists.

        :param flat: If set to `False` the dict returned will have lists
                     with all the values in it.  Otherwise it will only
                     contain the first item for each key.
        :return: a :class:`dict`
        aon_updatew<w w>a_headersalowera_setuAdd a new header to the set.aremoveuRemove a header from the set.  This raises an :exc:`KeyError` if the
        header is not in the set.

        .. versionchanged:: 0.5
            In older versions a :exc:`IndexError` was raised instead of a
            :exc:`KeyError` if the object was missing.

        :param header: the header to be removed.
        ainserted_anyuAdd all the headers from the iterable to the set.

        :param iterable: updates the set with the items from the iterable.
        uLike :meth:`remove` but ignores errors.

        :param header: the header to be discarded.
        quReturn the index of the header in the set or return -1 if not found.

        :param header: the header to be looked up.
        afinduReturn the index of the header in the set or raise an
        :exc:`IndexError`.

        :param header: the header to be looked up.
        uClear the set.uReturn the set as real python set type.  When calling this, all
        the items are converted to lowercase and the ordering is lost.

        :param preserve_casing: if set to `True` the items in the set returned
                                will have the original case like in the
                                :class:`HeaderSet`, otherwise they will
                                be lowercase.
        u, ahttpaquote_header_valueuConvert the header set into an HTTP header string.ato_headera__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucollections.abcTaMutableSetaMutableSetTadeepcopyTaexceptionsla_internalTa_missingamixinsTaImmutableDictMixinaImmutableDictMixinTaImmutableListMixinaImmutableListMixinTaImmutableMultiDictMixinaImmutableMultiDictMixinTaUpdateDictMixinaUpdateDictMixinais_immutablea__prepare__aImmutableListu%s.__prepare__() must return a mapping, not %su<metaclass>uwerkzeug.datastructures.structuresa__module__uAn immutable :class:`list`.

    .. versionadded:: 0.5

    :private:
    a__qualname__uImmutableList.__repr__a__orig_bases__TOdictuWorks like a regular dict but the :meth:`get` method can perform
    type conversions.  :class:`MultiDict` and :class:`CombinedMultiDict`
    are subclasses of this class and provide the same feature.

    .. versionadded:: 0.5
    TnnagetuTypeConversionDict.getaImmutableTypeConversionDictuWorks like a :class:`TypeConversionDict` but does not support
    modifications.

    .. versionadded:: 0.5
    uImmutableTypeConversionDict.copya__copy__uImmutableTypeConversionDict.__copy__uA :class:`MultiDict` is a dictionary subclass customized to deal with
    multiple values for the same key which is for example used by the parsing
    functions in the wrappers.  This is necessary because some HTML form
    elements pass multiple values for the same key.

    :class:`MultiDict` implements all standard dictionary methods.
    Internally, it saves all values for a key as a list, but the standard dict
    access methods will only return the first value for a key. If you want to
    gain access to the other values, too, you have to use the `list` methods as
    explained below.

    Basic Usage:

    >>> d = MultiDict([('a', 'b'), ('a', 'c')])
    >>> d
    MultiDict([('a', 'b'), ('a', 'c')])
    >>> d['a']
    'b'
    >>> d.getlist('a')
    ['b', 'c']
    >>> 'a' in d
    True

    It behaves like a normal dict thus all dict functions will only return the
    first value when multiple values for one key are found.

    From Werkzeug 0.3 onwards, the `KeyError` raised by this class is also a
    subclass of the :exc:`~exceptions.BadRequest` HTTP exception and will
    render a page for a ``400 BAD REQUEST`` if caught in a catch-all for HTTP
    exceptions.

    A :class:`MultiDict` can be constructed from an iterable of
    ``(key, value)`` tuples, a dict, a :class:`MultiDict` or from Werkzeug 0.2
    onwards some keyword parameters.

    :param mapping: the initial value for the :class:`MultiDict`.  Either a
                    regular dict, an iterable of ``(key, value)`` tuples
                    or `None`.
    TnuMultiDict.__init__a__getstate__uMultiDict.__getstate__a__setstate__uMultiDict.__setstate__uMultiDict.__iter__uMultiDict.__getitem__uMultiDict.__setitem__uMultiDict.adduMultiDict.getlistasetlistuMultiDict.setlistuMultiDict.setdefaultasetlistdefaultuMultiDict.setlistdefaultuMultiDict.listvaluesuMultiDict.copyuMultiDict.deepcopyuMultiDict.to_dictuMultiDict.updateuMultiDict.popuMultiDict.popitemuMultiDict.poplistapopitemlistuMultiDict.popitemlistuMultiDict.__copy__a__deepcopy__uMultiDict.__deepcopy__uMultiDict.__repr__uWraps values in the :class:`OrderedMultiDict`.  This makes it
    possible to keep an order over multiple different keys.  It requires
    a lot of extra memory and slows down access a lot, but makes it
    possible to access elements in O(1) and iterate in O(n).
    Taprevakeyavalueanexta__slots__u_omd_bucket.__init__u_omd_bucket.unlinkuWorks like a regular :class:`MultiDict` but preserves the
    order of the fields.  To convert the ordered multi dict into a
    list you can use the :meth:`items` method and pass it ``multi=True``.

    In general an :class:`OrderedMultiDict` is an order of magnitude
    slower than a :class:`MultiDict`.

    .. admonition:: note

       Due to a limitation in Python you cannot convert an ordered
       multi dict into a regular dict by using ``dict(multidict)``.
       Instead you have to use the :meth:`to_dict` method, otherwise
       the internal bucket objects are exposed.
    uOrderedMultiDict.__init__a__eq__uOrderedMultiDict.__eq__a__hash__a__reduce_ex__uOrderedMultiDict.__reduce_ex__uOrderedMultiDict.__getstate__uOrderedMultiDict.__setstate__uOrderedMultiDict.__getitem__uOrderedMultiDict.__setitem__a__delitem__uOrderedMultiDict.__delitem__uOrderedMultiDict.keysuOrderedMultiDict.__iter__uOrderedMultiDict.valuesuOrderedMultiDict.adduOrderedMultiDict.getlistuOrderedMultiDict.setlistuOrderedMultiDict.setlistdefaultuOrderedMultiDict.updateuOrderedMultiDict.poplistuOrderedMultiDict.popuOrderedMultiDict.popitemuOrderedMultiDict.popitemlistaCombinedMultiDictuA read only :class:`MultiDict` that you can pass multiple :class:`MultiDict`
    instances as sequence and it will combine the return values of all wrapped
    dicts:

    >>> from werkzeug.datastructures import CombinedMultiDict, MultiDict
    >>> post = MultiDict([('foo', 'bar')])
    >>> get = MultiDict([('blub', 'blah')])
    >>> combined = CombinedMultiDict([get, post])
    >>> combined['foo']
    'bar'
    >>> combined['blub']
    'blah'

    This works for all read operations and will raise a `TypeError` for
    methods that usually change data which isn't possible.

    From Werkzeug 0.3 onwards, the `KeyError` raised by this class is also a
    subclass of the :exc:`~exceptions.BadRequest` HTTP exception and will
    render a page for a ``400 BAD REQUEST`` if caught in a catch-all for HTTP
    exceptions.
    uCombinedMultiDict.__reduce_ex__uCombinedMultiDict.__init__aclassmethodafromkeysuCombinedMultiDict.fromkeysuCombinedMultiDict.__getitem__uCombinedMultiDict.getuCombinedMultiDict.getlistuCombinedMultiDict._keys_impluCombinedMultiDict.keysuCombinedMultiDict.__iter__uCombinedMultiDict.listsuCombinedMultiDict.listvaluesuCombinedMultiDict.copyuCombinedMultiDict.to_dicta__len__uCombinedMultiDict.__len__a__contains__uCombinedMultiDict.__contains__uCombinedMultiDict.__repr__aImmutableDictuAn immutable :class:`dict`.

    .. versionadded:: 0.5
    uImmutableDict.__repr__uImmutableDict.copyuImmutableDict.__copy__aImmutableMultiDictuAn immutable :class:`MultiDict`.

    .. versionadded:: 0.5
    uImmutableMultiDict.copyuImmutableMultiDict.__copy__aImmutableOrderedMultiDictuAn immutable :class:`OrderedMultiDict`.

    .. versionadded:: 0.6
    a_iter_hashitemsuImmutableOrderedMultiDict._iter_hashitemsuImmutableOrderedMultiDict.copyuImmutableOrderedMultiDict.__copy__aCallbackDictuA dict that calls a function passed every time something is changed.
    The function is passed the dict instance.
    uCallbackDict.__init__uCallbackDict.__repr__aHeaderSetuSimilar to the :class:`ETags` class this implements a set-like structure.
    Unlike :class:`ETags` this is case insensitive and used for vary, allow, and
    content-language headers.

    If not constructed using the :func:`parse_set_header` function the
    instantiation works like this:

    >>> hs = HeaderSet(['foo', 'bar', 'baz'])
    >>> hs
    HeaderSet(['foo', 'bar', 'baz'])
    uHeaderSet.__init__uHeaderSet.adduHeaderSet.removeuHeaderSet.updateadiscarduHeaderSet.discarduHeaderSet.findaindexuHeaderSet.indexuHeaderSet.clearaas_setuHeaderSet.as_setuHeaderSet.to_headeruHeaderSet.__getitem__uHeaderSet.__delitem__uHeaderSet.__setitem__uHeaderSet.__contains__uHeaderSet.__len__uHeaderSet.__iter__a__bool__uHeaderSet.__bool__a__str__uHeaderSet.__str__uHeaderSet.__repr__Tahttpuwerkzeug\datastructures\structures.pyTa.0wxTa.0wkavsTa.0akeyavalueu<module werkzeug.datastructures.structures>Ta__class__TaselfTaselfakeywdTaselfaheaderTaselfamemoTaselfaidxarvTaselfakeyT
aselfaotheraiter1aiter2ak1av1ak2av2akeyavaluesTaselfaidxTaselfakeyalstTaselfainitialaon_updateTaselfadictsTaselfaheadersaon_updateTaselfamappingatmpakeyavalueTaselfamappingTaselfaomdakeyavalueTaselfaprotocolTaselfaidxavalueaoldTaselfakeyavalueTaselfavalueTaselfavaluesakeyavalueTaselfarvTaselfapreserve_casingTaselfaheaderaidxaitemTaclsakeysavalueTaselfakeyadefaultatypewdTaselfakeyadefaultatypearvTaselfakeyatypearvwdTaselfakeyatypearvaresultaitemTaselfaheaderarvTaselfamultiafoundwdakeyavalueTaselfamultiakeyavaluesavalueTaselfamultiaptrareturned_keysTamappingakeyavaluewvTaselfarvwdakeyavaluesTaselfakeyavaluesTaselfareturned_keysaptrTaselfa_keyavaluesTaselfakeyadefaultalstTaselfakeyadefaultabucketsabucketTaselfaitemweTaselfakeyabucketsweabucketTaselfweTaselfakeyabucketsabucketTaselfaheaderakeyaidxTaselfakeyadefaultTaselfakeyanew_listTaselfakeyanew_listavalueTaselfakeyadefault_listTaselfaflatTaselfaomdTaselfaiterableainserted_anyaheaderakeyTaselfamappingakeyavalueTaselfa_keyavalueTaselfavalues.werkzeug.debug.console
a_bufferul:nnnaappenda_writeaescapeastdoutaThreadedStreamacastaTextIOa_streamasetaHTMLStringOagetareseta_displayhooka_ipyalocalsw_adebug_repruread only attribute a__stdout__a_storageaco_constsaCodeTypeasourceaselfa_ConsoleLoaderaloaderadumpahelpahelpera__loader__a__class__a__init__acompileDasourceafilenameasymbolareturnastrppuCodeType | Noneu_InteractiveConsole.__init__.<locals>.compileamoreabufferaoriginal_compilearegisterarstripw
apushu... u>>> arunsourceu<debugger>asingleafetchacodeu<string>aexecashowtracebackatbtoolsTaDebugTracebacklaDebugTracebackaexc_infoDaskiplarender_traceback_htmlDaskiplawritea_InteractiveConsolea__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsasyswtacontextvarsTaContextVaraContextVaramarkupsafeTaescapeareprTadebug_reprTadumpTahelperTuwerkzeug.debug.console.streamuContextVar[HTMLStringO]Tuwerkzeug.debug.console.ipyuContextVar[_InteractiveConsole]uwerkzeug.debug.consolea__module__uA StringO version that HTML escapes on write.a__qualname__DareturnaNoneuHTMLStringO.__init__DareturnaboolaisattyuHTMLStringO.isattyacloseuHTMLStringO.closeaflushuHTMLStringO.flushTlDwnamodeareturnaintpaNoneaseekuHTMLStringO.seekDareturnastrareadlineuHTMLStringO.readlineuHTMLStringO.resetDwxareturnastraNoneuHTMLStringO._writeuHTMLStringO.writeDwxareturnut.Iterable[str]aNoneawritelinesuHTMLStringO.writelinesuThread-local wrapper for sys.stdout for the interactive console.uThreadedStream.pushuThreadedStream.fetchDaobjareturnaobjectaNoneadisplayhookuThreadedStream.displayhookDanameavalueareturnastrut.AnyaNonea__setattr__uThreadedStream.__setattr__Dareturnulist[str]a__dir__uThreadedStream.__dir__Danameareturnastrut.Anya__getattribute__uThreadedStream.__getattribute__a__repr__uThreadedStream.__repr__u_ConsoleLoader.__init__DacodeasourceareturnaCodeTypeastraNoneu_ConsoleLoader.registerDacodeareturnaCodeTypeustr | Noneaget_source_by_codeu_ConsoleLoader.get_source_by_codeaInteractiveInterpretera__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>udict[str, t.Any]Daglobalsalocalsareturnudict[str, t.Any]udict[str, t.Any]aNoneu_InteractiveConsole.__init__Dasourceakwargsareturnastrut.Anyastru_InteractiveConsole.runsourceDacodeareturnaCodeTypeaNonearuncodeu_InteractiveConsole.runcodeu_InteractiveConsole.showtracebackTnDafilenameareturnustr | NoneaNoneashowsyntaxerroru_InteractiveConsole.showsyntaxerrorDadataareturnastraNoneu_InteractiveConsole.writea__orig_bases__uAn interactive console.aConsoleTnnDaglobalsalocalsareturnudict[str, t.Any] | Noneudict[str, t.Any] | NoneaNoneuConsole.__init__DacodeareturnastrpaevaluConsole.evaluwerkzeug\debug\console.pyu<module werkzeug.debug.console>Ta__class__TaselfTaselfanameastreamTaselfaglobalsalocalsTaselfaglobalsalocalsaoriginal_compileacompilea__class__TaselfanameavalueTaselfwxTasourceafilenameasymbolacodeaoriginal_compileaselfTaoriginal_compileaselfTaobjastreamTaselfacodeaold_sys_stdoutTastreamTaselfacodeTaselfaretTaselfacodeasourceavarTaselfavalTaselfasourceakwargsapromptasource_to_evalaoutputa__class__TaselfwnamodeTaselfafilenameaDebugTracebackaexcateTaselfaDebugTracebackaexcateTaselfadata.werkzeug.debug"Qahashlibasha1uu added saltuutf-8areplaceahexdigest:nlna_machine_idDareturnustr | bytes | Nonea_generateuget_machine_id.<locals>._generatecTu/etc/machine-idu/proc/sys/kernel/random/boot_idarba__enter__a__exit__areadlineastripTnnnavalueu/proc/self/cgrouparpartitionTd/lasubprocessTaPIPElaPIPETaPopenaPopenTLaioregu-caIOPlatformExpertDeviceu-dw2Tastdoutacommunicateareasearchc"serial-number" = <([^>]+)agroupTlTEOSErrorEImportErrorawinregaOpenKeyaHKEY_LOCAL_MACHINEuSOFTWARE\Microsoft\CryptographyaKEY_READaKEY_WOW64_64KEYaQueryValueExaMachineGuidutoo many values to unpack (expected 2)aREG_SZaencodeaConsoleaconsoleaidaevalaenvironagetTaWERKZEUG_DEBUG_PINaoffTnnTw-uaisdecimalw-a__module__acastagetpassagetuserTEImportErrorEKeyErroramodulesa__name__a__file__auuidagetnodeaget_machine_idachainwhaupdateTccookiesalta__wzd:nlnTcpinsaltlu09d:nlnTlllanumuGiven an application object this returns a semi-stable 9 digit pin
    code and a random key.  The hope is that this is stable between
    restarts to not make debugging particularly frustrating.  If the pin
    was forcefully disabled this returns `None`.

    Second item in the resulting tuple is the cookie name for remembering.
    agroup_sizearjustw0u<genexpr>uget_pin_and_cookie_name.<locals>.<genexpr>aappaevalexaframesaframe_contextsarequest_keyaconsole_pathaconsole_init_funcashow_hidden_framesagen_saltTlasecretaValueTwBa_failed_pin_authapin_loggingTaWERKZEUG_RUN_MAINatruea_logTawarningu * Debugger is active!apinTawarningu * Debugger PIN disabled. DEBUGGER UNSECURED!ainfou * Debugger PIN: %su.localhostu127.0.0.1atrusted_hostsa_pinaget_pin_and_cookie_namea_pin_cookieuThe name of the pin cookie.uRun the application and conserve the traceback frames.aselfaappenduwerkzeug.debug.preserve_contextastart_responseacloseaapp_iteraDebugTracebacklTaskipahideaall_framesacontextsacheck_pin_trustarender_debugger_htmlacheck_host_trustTaevalexasecretaevalex_trustedaResponseDastatusamimetypelutext/htmluwsgi.errorsawriteTuDebugging middleware caught exception in streamed response at a point where response headers were already sent.
arender_traceback_textadebug_applicationuDebuggedApplication.debug_applicationaSecurityErroraExitStackaexit_stackaenter_contextDamimetypeutext/htmluExecute a command in a console.a_ConsoleFramearender_console_htmlTasecretaevalex_trusteduDisplay a standalone shell.ajoinasharedabasenameuwerkzeug.debugaget_dataaNotFoundaadler32gasend_fileaBytesIOTadownload_nameaetaguReturn a static resource from the shared folder.aparse_cookieapin_cookie_namew|asplitTw|lahash_pinatimeaPIN_TIMEuChecks if the request passed the pin test.  This returns `True` if the
        request is trusted on a pin/cookie basis and returns `False` if not.
        Additionally if the cookie's stored pin hash is wrong it will return
        `None` so that appropriate action can be taken.
        ahost_is_trustedTaHTTP_HOSTaget_lockasleepacountlf@f?a_fail_pin_authl
aargsajsonadumpsaauthaexhaustedDamimetypeuapplication/jsonaset_cookieaStrictais_secureTahttponlyasamesiteasecureadelete_cookiearvuAuthenticates with the pin.Tainfou * To enable the debugger you need to enter the security pin:u * Debugger pin code: %sTuuLog the pin if needed.aRequestTa__debugger__ayesTacmdTwfTwsTafrmOintTatypearesourceaget_resourceapinauthapin_authaprintpinalog_pin_requestaexecute_commandapathadisplay_consoleuDispatch the requests.a__doc__adirnameTaNUITKA_PACKAGE_werkzeugu\not_existingadebugTaNUITKA_PACKAGE_werkzeug_debugu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__a__annotations__aannotationsaosapkgutilasyswtacontextlibTaExitStackaitertoolsTachainamultiprocessingTaValueuos.pathTabasenameTajoinazlibTaadler32a_internalTa_logaexceptionsTaNotFoundTaSecurityErrorahttpTaparse_cookieusansio.utilsTahost_is_trustedasecurityTagen_saltautilsTasend_fileuwrappers.requestTaRequestuwrappers.responseTaResponseTaConsoleatbtoolsTaDebugFrameSummaryaDebugFrameSummaryTaDebugTracebackTarender_console_htmll$Dapinareturnastrpustr | bytes | NoneuHelper class so that we can reuse the frame console code for the
    standalone console.
    a__qualname__Danamespaceudict[str, t.Any]a__init__u_ConsoleFrame.__init__Dacodeareturnastrut.Anyu_ConsoleFrame.evalDaappareturnaWSGIApplicationutuple[str, str] | tuple[None, None]uEnables debugging support for a given application::

        from werkzeug.debug import DebuggedApplication
        from myapp import app
        app = DebuggedApplication(app, evalex=True)

    The ``evalex`` argument allows evaluating expressions in any frame
    of a traceback. This works by preserving each frame with its local
    state. Some state, such as context globals, cannot be restored with
    the frame by default. When ``evalex`` is enabled,
    ``environ["werkzeug.debug.preserve_context"]`` will be a callable
    that takes a context manager, and can be called multiple times.
    Each context manager will be entered before evaluating code in the
    frame, then exited again, so they can perform setup and cleanup for
    each call.

    :param app: the WSGI application to run debugged.
    :param evalex: enable exception evaluation feature (interactive
                   debugging).  This requires a non-forking server.
    :param request_key: The key that points to the request object in this
                        environment.  This parameter is ignored in current
                        versions.
    :param console_path: the URL for a general purpose console.
    :param console_init_func: the function that is executed before starting
                              the general purpose console.  The return value
                              is used as initial namespace.
    :param show_hidden_frames: by default hidden traceback frames are skipped.
                               You can show them by setting this parameter
                               to `True`.
    :param pin_security: can be used to disable the pin based security system.
    :param pin_logging: enables the logging of the pin system.

    .. versionchanged:: 2.2
        Added the ``werkzeug.debug.preserve_context`` environ key.
    aDebuggedApplicationastrTFuwerkzeug.requestu/consolenFtpDaappaevalexarequest_keyaconsole_pathaconsole_init_funcashow_hidden_framesapin_securityapin_loggingareturnaWSGIApplicationaboolastrput.Callable[[], dict[str, t.Any]] | NoneaboolppaNoneuDebuggedApplication.__init__Dareturnustr | NoneuDebuggedApplication.pinasetterDavalueareturnastraNoneDareturnastruDebuggedApplication.pin_cookie_nameDaenvironastart_responseareturnaWSGIEnvironmentaStartResponseut.Iterator[bytes]DarequestacommandaframeareturnaRequestastruDebugFrameSummary | _ConsoleFrameaResponseuDebuggedApplication.execute_commandDarequestareturnaRequestaResponseuDebuggedApplication.display_consoleDarequestafilenameareturnaRequestastraResponseuDebuggedApplication.get_resourceDaenvironareturnaWSGIEnvironmentubool | NoneuDebuggedApplication.check_pin_trustDaenvironareturnaWSGIEnvironmentabooluDebuggedApplication.check_host_trustDareturnaNoneuDebuggedApplication._fail_pin_authuDebuggedApplication.pin_authuDebuggedApplication.log_pin_requestDaenvironastart_responseareturnaWSGIEnvironmentaStartResponseut.Iterable[bytes]a__call__uDebuggedApplication.__call__uwerkzeug\debug\__init__.pyTa.0wxanumagroup_sizeu<module werkzeug.debug>Ta__class__Taselfaenvironastart_responsearequestaresponseacmdaargasecretaframeTaselfaappaevalexarequest_keyaconsole_pathaconsole_init_funcashow_hidden_framesapin_securityapin_loggingTaselfanamespaceTaselfacountTaguidaguid_typealinuxafilenamewfavalueaPIPEaPopenadumpamatchawinregarkTaselfaenvironTaselfaenvironavalats_strapin_hashatsTaselfaenvironastart_responseacontextsaapp_iterweatbaframeais_trustedahtmlaresponseTaselfarequestansais_trustedTaselfacodeTaselfarequestacommandaframeacontextsaexit_stackacmTa_generateT
aappausernameapinarvanumamodnameamodaprobably_public_bitsaprivate_bitswhabitacookie_nameagroup_sizeTaselfarequestafilenameapathadataaetagTapinTaselfarequestTaselfapin_cookieTaselfavalueTaselfarequestaexhaustedaauthatrustapinabad_cookieaentered_pinarv.werkzeug.debug.repraDebugReprGeneratorarepruCreates a debug repr of an object as HTML string.amissingadump_localsa_getframeTlaf_localsadump_objectastdouta_writeuPrint the object details to stdout._write (for the interactive
    console of the web debugger.
    u<span class=help>uu</span>apydoclahelpareseta_paragraph_reasplitu

:lnnaHelpaHELP_HTMLatitleatexta__module__Ta__builtin__aexceptionsu<span class="module">u.</span>a__name__w(w)DaselfaobjarecursiveareturnaDebugReprGeneratorut.Iterable[t.Any]aboolastraproxyu_sequence_repr_maker.<locals>.proxya_add_subclass_infoaleftu...arightabaseutoo many values to unpack (expected 2)abufu, alimitaappendTu<span class="extended">aselfahave_extended_sectiona_stackapatternacodecsadecodeuunicode-escapeaignorewrure.compile(<span class="string regex">u</span>)u<span class="string">laescapeu<span class="extended">u'"wblTObytesOstru{...}w{aitemsu<span class="pair"><span class="key">u</span>: <span class="value">u</span></span>Tw}u<span class="object">ahelperu<span class="help">TOintOfloatOcomplexu<span class="number">astring_repraRegexTypearegex_repralist_repratuple_repraset_reprafrozenset_repradict_repradequeadeque_repraobject_repraformat_exception_onlyaexc_info:nlnw?u<span class="brokenrepr">&lt;broken repr (astripu)&gt;</span>adispatch_reprafallback_reprapopuContents ofuDetails forw a__repr__:lqnarender_object_dumpuLocal variables in frameahtml_itemsu<tr><th>u<td><pre class=repr>u</pre>u<tr><td><em>Nothing</em>aOBJECT_DUMP_HTMLu<pre class=repr>w
uObject representations for debugging purposes. Unlike the default
repr, these expose more information and produce HTML instead of ASCII.

Together with the CSS and JavaScript of the debugger this gives a
colorful and more compact output.
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsareasyswtacollectionsTadequeatracebackTaformat_exception_onlyamarkupsafeTaescapeacompileTu(?:\r\n|\r|\n){2,}u<div class=box>
  <h3>%(title)s</h3>
  <pre class=help>%(text)s</pre>
</div>u<div class=box>
  <h3>%(title)s</h3>
  %(repr)s
  <table>%(items)s</table>
</div>Daobjareturnaobjectastradebug_reprDaobjareturnaobjectaNoneadumpuwerkzeug.debug.repruDisplays an HTML version of the normal help, for the interactive
    debugger only because it requires a patched sys.stdout.
    a_Helpera__qualname__DareturnastruType help(object) for help about object.u_Helper.__repr__TnDatopicareturnut.Any | NoneaNonea__call__u_Helper.__call__Dainneraobjabaseareturnastraobjectutype | tuple[type, ...]astrTlDaleftarightabasealimitareturnastrpatypeaintut.Callable[[DebugReprGenerator, t.Iterable[t.Any], bool], str]a_sequence_repr_makerDareturnaNonea__init__uDebugReprGenerator.__init__Tw[w]OlistTw(w)OtupleTuset([u])OsetTufrozenset([u])Ofrozensetu<span class="module">collections.</span>deque([u])Daobjareturnut.Pattern[t.AnyStr]astruDebugReprGenerator.regex_reprTlFDaobjalimitareturnustr | bytesaintastruDebugReprGenerator.string_reprTlDwdarecursivealimitareturnudict[int, None] | dict[str, int] | dict[str | int, int]aboolaintastruDebugReprGenerator.dict_reprDaobjareturnut.AnyastruDebugReprGenerator.object_reprDaobjarecursiveareturnut.AnyaboolastruDebugReprGenerator.dispatch_repruDebugReprGenerator.fallback_repruDebugReprGenerator.repruDebugReprGenerator.dump_objectDwdareturnudict[str, t.Any]astruDebugReprGenerator.dump_localsDaitemsatitleareprareturnulist[tuple[str, str]]astrustr | NoneastruDebugReprGenerator.render_object_dumpuwerkzeug\debug\repr.pyu<module werkzeug.debug.repr>Ta__class__TaselfatopicapydocarvaparagraphsatitleatextTaselfTainneraobjabaseaclsamoduleTaleftarightabasealimitaproxyTaobjTaselfwdarecursivealimitabufahave_extended_sectionaidxakeyavalueTaselfaobjarecursiveTaobjagenarvTaselfwdaitemsTaselfaobjaitemsarepratitleakeyavalueTaselfainfoTaselfaobjwrTaselfaobjarecursiveabufahave_extended_sectionaidxaitemaleftarightabasealimitTabasealeftalimitarightTaselfaobjapatternTaselfaitemsatitleareprahtml_itemsakeyavalueTaselfaobjarecursiveaitemTaselfaobjalimitabufwraout.werkzeug.debug.tbtoolsatracebackaTracebackExceptionafrom_exceptionDalookup_linesFawalk_tba__traceback__atracebacklimitlaitertoolsaisliceastackutoo many values to unpack (expected 2)af_localsagetTa__traceback_hide__FPabefore_and_thisabeforeabefore_and_thisParesetareset_and_thisareset_and_thisPaafter_and_thisaafteraafter_and_thisahiddenafilenamealinenoanamealocalsaglobalsaf_globalsacolnoaend_colnoanew_stackaDebugFrameSummaryaglobal_nsTa__name__alocal_nsacodeop:nnna__context__acasta_process_tracebackTahidea__cause__Taskipahidea_tew<a__name__uw w>acurrentuThe above exception was the direct cause of the following exceptiona__suppress_context__uDuring handling of the above exception, another exception occurredaoutaall_tracebacksaformataall_framesais_libraryutraceback noframe-tracebacku<li><div class="exc-divider">u:</div>ainfou title="aescapew"arow_partsu<liarender_htmlamark_libraryarowsw
aexc_typeaSyntaxErroruSyntax ErroruTraceback <em>(most recent call last)</em>:aformat_exception_onlyu<pre class=syntaxerror>u</pre>u<blockquote>u</blockquote>aSUMMARY_HTMLaclassesatitleu<h3>u</h3>aframesadescriptionaPAGE_HTMLaevalexatrueafalseaevalex_trustedaconsoleaexceptionaexception_typeasummaryarender_traceback_htmlTFTainclude_titleaplaintextaplaintext_csareasubu-{2,}w-asecreta__class__a__init__DalocalsnTa__traceback_info__aget_pathsavaluesaselfastartswitharealpathu<genexpr>uDebugFrameSummary.is_library.<locals>.<genexpr>aConsoleaevalalinecacheagetlineslamaxlaminDalineaclsareturnastrpaNonearender_lineuDebugFrameSummary.render_html.<locals>.render_lineabeforeaafteraFRAME_HTMLaidafunction_namealinesalibraryaexpandtabsarstripastripu
<span class="ws">u</span>w^arendered_linesaappendu<pre class="line u"><span class="ws">aCONSOLE_HTMLa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaosasysasysconfigwtamarkupsafeTaescapeautilsTacached_propertylacached_propertyTaConsoleu<!doctype html>
<html lang=en>
  <head>
    <title>%(title)s // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = %(console)s,
          EVALEX = %(evalex)s,
          EVALEX_TRUSTED = %(evalex_trusted)s,
          SECRET = "%(secret)s";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
aHEADERu      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>
aFOOTERu<h1>%(exception_type)s</h1>
<div class="detail">
  <p class="errormsg">%(exception)s</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
%(summary)s
<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>%(plaintext)s</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
u
<!--

%(plaintext_cs)s

-->
u<h1>Interactive Console</h1>
<div class="explanation">
In this console you can execute Python expressions in the context of the
application.  The initial namespace was created by the debugger automatically.
</div>
<div class="console"><div class="inner">The Console requires JavaScript.</div></div>
u<div class="%(classes)s">
  %(title)s
  <ul>%(frames)s</ul>
  %(description)s
</div>
u<div class="frame" id="frame-%(id)d">
  <h4>File <cite class="filename">"%(filename)s"</cite>,
      line <em class="line">%(lineno)s</em>,
      in <code class="function">%(function_name)s</code></h4>
  <div class="source %(library)s">%(lines)s</div>
</div>
TnDaskipahideltDaexcateaskipahideareturnaBaseExceptionutraceback.TracebackException | Noneaintaboolutraceback.TracebackExceptionuwerkzeug.debug.tbtoolsa__module__aDebugTracebacka__qualname__Ta_tea_cache_all_tracebacksa_cache_all_framesa__slots__DaexcateaskipahideareturnaBaseExceptionutraceback.TracebackException | NoneaintaboolaNoneuDebugTraceback.__init__Dareturnastra__str__uDebugTraceback.__str__Dareturnulist[tuple[str | None, traceback.TracebackException]]uDebugTraceback.all_tracebacksDareturnulist[DebugFrameSummary]uDebugTraceback.all_framesarender_traceback_textuDebugTraceback.render_traceback_textTtDainclude_titleareturnaboolastruDebugTraceback.render_traceback_htmlDaevalexasecretaevalex_trustedareturnaboolastraboolastrarender_debugger_htmluDebugTraceback.render_debugger_htmlaFrameSummarya__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uA :class:`traceback.FrameSummary` that can evaluate code in the
    frame's namespace.
    Talocal_nsaglobal_nsa_cache_infoa_cache_is_librarya_cache_consoleDalocalsaglobalsakwargsareturnudict[str, t.Any]udict[str, t.Any]ut.AnyaNoneuDebugFrameSummary.__init__Dareturnustr | NoneuDebugFrameSummary.infoDareturnabooluDebugFrameSummary.is_libraryDareturnaConsoleuDebugFrameSummary.consoleDacodeareturnastrut.AnyuDebugFrameSummary.evalDamark_libraryareturnaboolastruDebugFrameSummary.render_htmla__orig_bases__Dasecretaevalex_trustedareturnastraboolastrarender_console_htmluwerkzeug\debug\tbtools.pyTa.0apathaselfu<module werkzeug.debug.tbtools>Ta__class__Taselfalocalsaglobalsakwargsa__class__TaselfaexcateaskipahideTaselfTaexcateaskipahideanew_stackaframe_argsaframe_genalimitahiddenwfw_afsahide_valueamoduleacontext_excacause_excTaselfaoutacurrentachained_msgachained_excTaselfacodeTasecretaevalex_trustedTaselfaevalexasecretaevalex_trustedaexc_linesaplaintextaexc_type_strT
aselfamark_libraryacontextalinesaline_idxastart_idxastop_idxarendered_linesarender_linealineTalineaclsastripped_lineaprefixacolnoaend_colnoaarrowaselfarendered_linesTarendered_linesaselfTaselfainclude_titlealibrary_framesamark_libraryarowsaclassesamsgacurrentarow_partsaframeainfoaexc_type_strais_syntax_erroratitleaexc_fulladescription.werkzeug.exceptions_IBa__class__a__init__adescriptionaresponseahttpTaHTTP_STATUS_CODESlaHTTP_STATUS_CODESlagetacodeuUnknown ErroruThe status name.uaescapeareplacew
aMarkupTu<br>u<p>u</p>uGet the description.u<!doctype html>
<html lang=en>
<title>w anameu</title>
<h1>u</h1>
aget_descriptionuGet the HTML body.TuContent-Typeutext/html; charset=utf-8uGet a list of headers.uwrappers.responseTaResponseaResponsea_get_environaget_headersaget_bodyuGet a response object.  If one was passed to the exception
        it's returned directly.

        :param environ: the optional environ for the request.  This
                        can be used to modify the response depending
                        on how the request looked like.
        :return: a :class:`Response` object or a subclass thereof.
        acastaWSGIResponseaget_responseuCall the exception as WSGI application.

        :param environ: the WSGI environment.
        :param start_response: the response callable provided by the WSGI
                               server.
        u???u: w<a__name__u 'u'>ashow_exceptiona_descriptionu
KeyError: a__str__adatastructuresTaWWWAuthenticateaWWWAuthenticateawww_authenticateaextenduWWW-Authenticateu<genexpr>uUnauthorized.get_headers.<locals>.<genexpr>Tadescriptionaresponseavalid_methodsuTakes an optional list of valid http methods
        starting with werkzeug 0.3 the list will be mandatory.aappendaAllowu, alengthaunitsuTakes an optional `Content-Range` header value based on ``length``
        parameter.
        uContent-Rangeu */aretry_afteradatetimeTahttp_dateahttp_dateuRetry-Afteraoriginal_exceptionavaluesaHTTPExceptionadefault_exceptionsamappingaupdateusansio.responseTaresponseuno exception for a_aborteruRaises an :py:exc:`HTTPException` for the given status code or WSGI
    application.

    If a status code is given, it will be looked up in the list of
    exceptions and will raise that exception.  If passed a WSGI application,
    it will wrap it in a proxy WSGI exception and raise that::

       abort(404)  # 404 Not Found
       abort(Response('Hello World'))

    uImplements a number of Python exceptions which can be raised from within
a view to trigger a standard HTTP non-200 response.

Usage Example
-------------

.. code-block:: python

    from werkzeug.wrappers.request import Request
    from werkzeug.exceptions import HTTPException, NotFound

    def view(request):
        raise NotFound()

    @Request.application
    def application(request):
        try:
            return view(request)
        except HTTPException as e:
            return e

As you can see from this example those exceptions are callable WSGI
applications. However, they are not Werkzeug response objects. You
can get a response object by calling ``get_response()`` on a HTTP
exception.

Keep in mind that you may have to pass an environ (WSGI) or scope
(ASGI) to ``get_response()`` because some errors fetch additional
information relating to the request.

If you want to hook in a different exception page to say, a 404 status
code, you can add a second except for a specific subclass of an error:

.. code-block:: python

    @Request.application
    def application(request):
        try:
            return view(request)
        except NotFound as e:
            return not_found(request)
        except HTTPException as e:
            return e

a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationswtTadatetimeamarkupsafeTaescapeTaMarkupa_internalTa_get_environTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uwerkzeug.exceptionsa__module__uThe base class for all HTTP exceptions. This exception can be called as a WSGI
    application to render a default error page or you can catch the subclasses
    of it independently and render nicer error messages.

    .. versionchanged:: 2.1
        Removed the ``wrap`` class method.
    a__qualname__uint | Noneustr | NoneTnnDadescriptionaresponseareturnustr | NoneuResponse | NoneaNoneuHTTPException.__init__apropertyDareturnastruHTTPException.nameDaenvironascopeareturnuWSGIEnvironment | Noneudict[str, t.Any] | NoneastruHTTPException.get_descriptionuHTTPException.get_bodyDaenvironascopeareturnuWSGIEnvironment | Noneudict[str, t.Any] | Noneulist[tuple[str, str]]uHTTPException.get_headersDaenvironascopeareturnuWSGIEnvironment | WSGIRequest | Noneudict[str, t.Any] | NoneaResponseuHTTPException.get_responseDaenvironastart_responseareturnaWSGIEnvironmentaStartResponseut.Iterable[bytes]a__call__uHTTPException.__call__uHTTPException.__str__a__repr__uHTTPException.__repr__a__orig_bases__aBadRequestu*400* `Bad Request`

    Raise if the browser sends something to the application the application
    or server cannot handle.
    luThe browser (or proxy) sent a request that this server could not understand.aBadRequestKeyErroruAn exception that is used to signal both a :exc:`KeyError` and a
    :exc:`BadRequest`. Used by many of the datastructures.
    TnDaargaargsakwargsustr | Noneut.Anyut.AnyuBadRequestKeyError.__init__uBadRequestKeyError.descriptionasetterDavalueareturnastraNoneaClientDisconnecteduInternal exception that is raised if Werkzeug detects a disconnected
    client.  Since the client is already gone at that point attempting to
    send the error message to the client might not work and might ultimately
    result in another exception in the server.  Mainly this is here so that
    it is silenced by default as far as Werkzeug is concerned.

    Since disconnections cannot be reliably detected and are unspecified
    by WSGI to a large extent this might or might not be raised if a client
    is gone.

    .. versionadded:: 0.8
    aSecurityErroruRaised if something triggers a security error.  This is otherwise
    exactly like a bad request error.

    .. versionadded:: 0.9
    aBadHostuRaised if the submitted host is badly formatted.

    .. versionadded:: 0.11.2
    aUnauthorizedu*401* ``Unauthorized``

    Raise if the user is not authorized to access a resource.

    The ``www_authenticate`` argument should be used to set the
    ``WWW-Authenticate`` header. This is used for HTTP basic auth and
    other schemes. Use :class:`~werkzeug.datastructures.WWWAuthenticate`
    to create correctly formatted values. Strictly speaking a 401
    response is invalid if it doesn't provide at least one value for
    this header, although real clients typically don't care.

    :param description: Override the default message used for the body
        of the response.
    :param www-authenticate: A single value, or list of values, for the
        WWW-Authenticate header(s).

    .. versionchanged:: 2.0
        Serialize multiple ``www_authenticate`` items into multiple
        ``WWW-Authenticate`` headers, rather than joining them
        into a single value, for better interoperability.

    .. versionchanged:: 0.15.3
        If the ``www_authenticate`` argument is not set, the
        ``WWW-Authenticate`` header is not set.

    .. versionchanged:: 0.15.3
        The ``response`` argument was restored.

    .. versionchanged:: 0.15.1
        ``description`` was moved back as the first argument, restoring
         its previous position.

    .. versionchanged:: 0.15.0
        ``www_authenticate`` was added as the first argument, ahead of
        ``description``.
    luThe server could not verify that you are authorized to access the URL requested. You either supplied the wrong credentials (e.g. a bad password), or your browser doesn't understand how to supply the credentials required.TnnnDadescriptionaresponseawww_authenticateareturnustr | NoneuResponse | NoneuNone | (WWWAuthenticate | t.Iterable[WWWAuthenticate])aNoneuUnauthorized.__init__uUnauthorized.get_headersaForbiddenu*403* `Forbidden`

    Raise if the user doesn't have the permission for the requested resource
    but was authenticated.
    luYou don't have the permission to access the requested resource. It is either read-protected or not readable by the server.aNotFoundu*404* `Not Found`

    Raise if a resource does not exist and never existed.
    luThe requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.aMethodNotAllowedu*405* `Method Not Allowed`

    Raise if the server used a method the resource does not handle.  For
    example `POST` if the resource is view only.  Especially useful for REST.

    The first argument for this exception should be a list of allowed methods.
    Strictly speaking the response would be invalid if you don't provide valid
    methods in the header which you can do with that list.
    luThe method is not allowed for the requested URL.Davalid_methodsadescriptionaresponseareturnut.Iterable[str] | Noneustr | NoneuResponse | NoneaNoneuMethodNotAllowed.__init__uMethodNotAllowed.get_headersaNotAcceptableu*406* `Not Acceptable`

    Raise if the server can't return any content conforming to the
    `Accept` headers of the client.
    luThe resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request.aRequestTimeoutu*408* `Request Timeout`

    Raise to signalize a timeout.
    luThe server closed the network connection because the browser didn't finish the request within the specified time.aConflictu*409* `Conflict`

    Raise to signal that a request cannot be completed because it conflicts
    with the current state on the server.

    .. versionadded:: 0.7
    luA conflict happened while processing the request. The resource might have been modified while the request was being processed.aGoneu*410* `Gone`

    Raise if a resource existed previously and went away without new location.
    luThe requested URL is no longer available on this server and there is no forwarding address. If you followed a link from a foreign page, please contact the author of this page.aLengthRequiredu*411* `Length Required`

    Raise if the browser submitted data but no ``Content-Length`` header which
    is required for the kind of processing the server does.
    luA request with this method requires a valid <code>Content-Length</code> header.aPreconditionFailedu*412* `Precondition Failed`

    Status code used in combination with ``If-Match``, ``If-None-Match``, or
    ``If-Unmodified-Since``.
    luThe precondition on the request for the URL failed positive evaluation.aRequestEntityTooLargeu*413* `Request Entity Too Large`

    The status code one should return if the data submitted exceeded a given
    limit.
    luThe data value transmitted exceeds the capacity limit.aRequestURITooLargeu*414* `Request URI Too Large`

    Like *413* but for too long URLs.
    luThe length of the requested URL exceeds the capacity limit for this server. The request cannot be processed.aUnsupportedMediaTypeu*415* `Unsupported Media Type`

    The status code returned if the server is unable to handle the media type
    the client transmitted.
    luThe server does not support the media type transmitted in the request.aRequestedRangeNotSatisfiableu*416* `Requested Range Not Satisfiable`

    The client asked for an invalid part of the file.

    .. versionadded:: 0.7
    luThe server cannot provide the requested range.TnabytesnnDalengthaunitsadescriptionaresponseareturnuint | Noneastrustr | NoneuResponse | NoneaNoneuRequestedRangeNotSatisfiable.__init__uRequestedRangeNotSatisfiable.get_headersaExpectationFailedu*417* `Expectation Failed`

    The server cannot meet the requirements of the Expect request-header.

    .. versionadded:: 0.7
    luThe server could not meet the requirements of the Expect headeraImATeapotu*418* `I'm a teapot`

    The server should return this if it is a teapot and someone attempted
    to brew coffee with it.

    .. versionadded:: 0.7
    luThis server is a teapot, not a coffee machineaUnprocessableEntityu*422* `Unprocessable Entity`

    Used if the request is well formed, but the instructions are otherwise
    incorrect.
    luThe request was well-formed but was unable to be followed due to semantic errors.aLockedu*423* `Locked`

    Used if the resource that is being accessed is locked.
    luThe resource that is being accessed is locked.aFailedDependencyu*424* `Failed Dependency`

    Used if the method could not be performed on the resource
    because the requested action depended on another action and that action failed.
    luThe method could not be performed on the resource because the requested action depended on another action and that action failed.aPreconditionRequiredu*428* `Precondition Required`

    The server requires this request to be conditional, typically to prevent
    the lost update problem, which is a race condition between two or more
    clients attempting to update a resource through PUT or DELETE. By requiring
    each client to include a conditional header ("If-Match" or "If-Unmodified-
    Since") with the proper value retained from a recent GET request, the
    server ensures that each client has at least seen the previous revision of
    the resource.
    luThis request is required to be conditional; try using "If-Match" or "If-Unmodified-Since".a_RetryAfteruAdds an optional ``retry_after`` parameter which will set the
    ``Retry-After`` header. May be an :class:`int` number of seconds or
    a :class:`~datetime.datetime`.
    Dadescriptionaresponsearetry_afterareturnustr | NoneuResponse | Noneudatetime | int | NoneaNoneu_RetryAfter.__init__u_RetryAfter.get_headersaTooManyRequestsu*429* `Too Many Requests`

    The server is limiting the rate at which this user receives
    responses, and this request exceeds that rate. (The server may use
    any convenient method to identify users and their request rates).
    The server may include a "Retry-After" header to indicate how long
    the user should wait before retrying.

    :param retry_after: If given, set the ``Retry-After`` header to this
        value. May be an :class:`int` number of seconds or a
        :class:`~datetime.datetime`.

    .. versionchanged:: 1.0
        Added ``retry_after`` parameter.
    luThis user has exceeded an allotted request count. Try again later.aRequestHeaderFieldsTooLargeu*431* `Request Header Fields Too Large`

    The server refuses to process the request because the header fields are too
    large. One or more individual fields may be too large, or the set of all
    headers is too large.
    luOne or more header fields exceeds the maximum size.aUnavailableForLegalReasonsu*451* `Unavailable For Legal Reasons`

    This status code indicates that the server is denying access to the
    resource as a consequence of a legal demand.
    luUnavailable for legal reasons.aInternalServerErroru*500* `Internal Server Error`

    Raise if an internal server error occurred.  This is a good fallback if an
    unknown error occurred in the dispatcher.

    .. versionchanged:: 1.0.0
        Added the :attr:`original_exception` attribute.
    luThe server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.Dadescriptionaresponseaoriginal_exceptionareturnustr | NoneuResponse | NoneuBaseException | NoneaNoneuInternalServerError.__init__aNotImplementedu*501* `Not Implemented`

    Raise if the application does not support the action requested by the
    browser.
    luThe server does not support the action requested by the browser.aBadGatewayu*502* `Bad Gateway`

    If you do proxying in your application you should return this status code
    if you received an invalid response from the upstream server it accessed
    in attempting to fulfill the request.
    luThe proxy server received an invalid response from an upstream server.aServiceUnavailableu*503* `Service Unavailable`

    Status code you should return if a service is temporarily
    unavailable.

    :param retry_after: If given, set the ``Retry-After`` header to this
        value. May be an :class:`int` number of seconds or a
        :class:`~datetime.datetime`.

    .. versionchanged:: 1.0
        Added ``retry_after`` parameter.
    luThe server is temporarily unable to service your request due to maintenance downtime or capacity problems. Please try again later.aGatewayTimeoutu*504* `Gateway Timeout`

    Status code you should return if a connection to an upstream server
    times out.
    luThe connection to an upstream server timed out.aHTTPVersionNotSupportedu*505* `HTTP Version Not Supported`

    The server does not support the HTTP protocol version used in the request.
    luThe server does not support the HTTP protocol version used in the request.udict[int, type[HTTPException]]DareturnaNonea_find_exceptionsuWhen passed a dict of code -> exception items it can be used as
    callable that raises exceptions.  If the first argument to the
    callable is an integer it will be looked up in the mapping, if it's
    a WSGI application it will be raised in a proxy exception.

    The rest of the arguments are forwarded to the exception constructor.
    aAborterDamappingaextraareturnudict[int, type[HTTPException]] | Noneudict[int, type[HTTPException]] | NoneaNoneuAborter.__init__Dacodeaargsakwargsareturnuint | Responseut.Anyut.Anyut.NoReturnuAborter.__call__Dastatusaargsakwargsareturnuint | Responseut.Anyut.Anyut.NoReturnaabortuwerkzeug\exceptions.pyTa.0wxTa__class__u<module werkzeug.exceptions>TaselfacodeaargsakwargsaResponseTaselfaenvironastart_responsearesponseTaselfamappingaextraTaselfaargaargsakwargsa__class__Taselfadescriptionaresponsea__class__Taselfadescriptionaresponseaoriginal_exceptiona__class__Taselfavalid_methodsadescriptionaresponsea__class__Taselfalengthaunitsadescriptionaresponsea__class__Taselfadescriptionaresponseawww_authenticateaWWWAuthenticatea__class__Taselfadescriptionaresponsearetry_aftera__class__TaselfacodeTaobjais_http_exceptionaold_objTastatusaargsakwargsTaselfTaselfavalueTaselfaenvironascopeTaselfaenvironascopeadescriptionTaselfaenvironascopeaheadersa__class__Taselfaenvironascopeaheadersahttp_dateavaluea__class__TaselfaenvironascopeaWSGIResponseaheadersTaselfaHTTP_STATUS_CODES.werkzeug.formparser%aSpooledTemporaryFileacastaIOTlurb+Tamax_sizeamodelaTemporaryFileTurb+aBytesIOaFormDataParserTastream_factoryamax_form_memory_sizeamax_content_lengthamax_form_partsasilentaclsaparse_from_environuParse the form data in the environ and return it as tuple in the form
    ``(stream, form, files)``.  You should only call this method if the
    transport method is `POST`, `PUT`, or `PATCH`.

    If the mimetype of the data transmitted is `multipart/form-data` the
    files multidict will be filled with `FileStorage` objects.  If the
    mimetype is unknown the input stream is wrapped and returned as first
    argument, else the stream is empty.

    This is a shortcut for the common usage of :class:`FormDataParser`.

    :param environ: the WSGI environment to be used for parsing.
    :param stream_factory: An optional callable that returns a new read and
                           writeable file descriptor.  This callable works
                           the same as :meth:`Response._get_file_stream`.
    :param max_form_memory_size: the maximum number of bytes to be accepted for
                           in-memory stored form data.  If the data
                           exceeds the value specified an
                           :exc:`~exceptions.RequestEntityTooLarge`
                           exception is raised.
    :param max_content_length: If this is provided and the transmitted data
                               is longer than this value an
                               :exc:`~exceptions.RequestEntityTooLarge`
                               exception is raised.
    :param cls: an optional dict class to use.  If this is not specified
                       or `None` the default :class:`MultiDict` is used.
    :param silent: If set to False parsing errors will not be caught.
    :param max_form_parts: The maximum number of multipart parts to be parsed. If this
        is exceeded, a :exc:`~exceptions.RequestEntityTooLarge` exception is raised.
    :return: A tuple in the form ``(stream, form, files)``.

    .. versionchanged:: 3.0
        The ``charset`` and ``errors`` parameters were removed.

    .. versionchanged:: 2.3
        Added the ``max_form_parts`` parameter.

    .. versionadded:: 0.5.1
       Added the ``silent`` parameter.

    .. versionadded:: 0.5
       Added the ``max_form_memory_size``, ``max_content_length``, and ``cls``
       parameters.
    adefault_stream_factoryastream_factoryamax_form_memory_sizeamax_content_lengthamax_form_partsutype[MultiDict[str, t.Any]]aMultiDictaclsasilentaget_input_streamTamax_content_lengthaget_content_lengthaparse_options_headeragetTaCONTENT_TYPEutoo many values to unpack (expected 2)aparseTacontent_lengthamimetypeaoptionsuParses the information from the environment as form data.

        :param environ: the WSGI environment to be used for parsing.
        :return: A tuple in the form ``(stream, form, files)``.
        umultipart/form-dataa_parse_multipartuapplication/x-www-form-urlencodeda_parse_urlencodedaselfuParses the information from the given stream, mimetype,
        content length and mimetype parameters.

        :param stream: an input stream
        :param mimetype: the mimetype of the data
        :param content_length: the content length of the incoming data
        :param options: optional mimetype parameters (used for
                        the multipart boundary for instance)
        :return: A tuple in the form ``(stream, form, files)``.

        .. versionchanged:: 3.0
            The invalid ``application/x-url-encoded`` content type is not
            treated as ``application/x-www-form-urlencoded``.
        aMultiPartParserTastream_factoryamax_form_memory_sizeamax_form_partsaclsTaboundaryuaencodeTaasciiuMissing boundaryaRequestEntityTooLargeaparse_qslareadadecodeDakeep_blank_valuesaerrorstuwerkzeug.url_quoteabuffer_sizeTucontent-typelTacharsetualowerPaasciiuiso-8859-1uutf-8uus-asciiuutf-8aheadersa_plain_intucontent-lengthTEKeyErrorEValueErrorlafilenameTatotal_content_lengthafilenameacontent_typeacontent_lengthaMultipartDecoderTamax_form_memory_sizeamax_partsa_chunk_iteraparserareceive_dataanext_eventaeventaEpilogueaNeedDataaFieldaappendaFileastart_file_streamingacontent_lengthawriteaDataa_writeadataamore_dataacurrent_partcacontaineraget_part_charsetareplaceafieldsanameaseekTlafilesaFileStorageTaheadersuRead data in chunks for multipart/form-data parsing. Stop if no data is read.
    Yield ``None`` at the end to signal end of parsing.
    asizea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtuurllib.parseTaparse_qsla_internalTa_plain_intadatastructuresTaFileStorageTaHeadersaHeadersTaMultiDictaexceptionsTaRequestEntityTooLargeahttpTaparse_options_headerusansio.multipartTaDataTaEpilogueTaFieldTaFileTaMultipartDecoderTaNeedDataawsgiTaget_content_lengthTaget_input_streamatempfileTaSpooledTemporaryFileTaTemporaryFileaTypeVaraCallableaAnyTwFTaboundwFTnDatotal_content_lengthacontent_typeafilenameacontent_lengthareturnuint | Noneustr | Noneustr | Noneuint | Noneut.IO[bytes]TnnnntDamax_form_partsnDaenvironastream_factoryamax_form_memory_sizeamax_content_lengthaclsasilentamax_form_partsareturnaWSGIEnvironmentuTStreamFactory | Noneuint | Noneuint | Noneutype[MultiDict[str, t.Any]] | Noneabooluint | Noneat_parse_resultaparse_form_datauwerkzeug.formparsera__module__uThis class implements parsing of form data for Werkzeug.  By itself
    it can parse multipart and url encoded form data.  It can be subclassed
    and extended but for most mimetypes it is a better idea to use the
    untouched stream and expose it as separate attributes on a request
    object.

    :param stream_factory: An optional callable that returns a new read and
                           writeable file descriptor.  This callable works
                           the same as :meth:`Response._get_file_stream`.
    :param max_form_memory_size: the maximum number of bytes to be accepted for
                           in-memory stored form data.  If the data
                           exceeds the value specified an
                           :exc:`~exceptions.RequestEntityTooLarge`
                           exception is raised.
    :param max_content_length: If this is provided and the transmitted data
                               is longer than this value an
                               :exc:`~exceptions.RequestEntityTooLarge`
                               exception is raised.
    :param cls: an optional dict class to use.  If this is not specified
                       or `None` the default :class:`MultiDict` is used.
    :param silent: If set to False parsing errors will not be caught.
    :param max_form_parts: The maximum number of multipart parts to be parsed. If this
        is exceeded, a :exc:`~exceptions.RequestEntityTooLarge` exception is raised.

    .. versionchanged:: 3.0
        The ``charset`` and ``errors`` parameters were removed.

    .. versionchanged:: 3.0
        The ``parse_functions`` attribute and ``get_parse_func`` methods were removed.

    .. versionchanged:: 2.2.3
        Added the ``max_form_parts`` parameter.

    .. versionadded:: 0.8
    a__qualname__Dastream_factoryamax_form_memory_sizeamax_content_lengthaclsasilentamax_form_partsareturnuTStreamFactory | Noneuint | Noneuint | Noneutype[MultiDict[str, t.Any]] | Noneabooluint | NoneaNonea__init__uFormDataParser.__init__DaenvironareturnaWSGIEnvironmentat_parse_resultuFormDataParser.parse_from_environDastreamamimetypeacontent_lengthaoptionsareturnut.IO[bytes]astruint | Noneudict[str, str] | Noneat_parse_resultuFormDataParser.parseDastreamamimetypeacontent_lengthaoptionsareturnut.IO[bytes]astruint | Noneudict[str, str]at_parse_resultuFormDataParser._parse_multipartuFormDataParser._parse_urlencodedTnnnlnDastream_factoryamax_form_memory_sizeaclsabuffer_sizeamax_form_partsareturnuTStreamFactory | Noneuint | Noneutype[MultiDict[str, t.Any]] | Noneaintuint | NoneaNoneuMultiPartParser.__init__Damessageareturnastrute.NoReturnafailuMultiPartParser.failDaheadersareturnaHeadersastruMultiPartParser.get_part_charsetDaeventatotal_content_lengthareturnaFileuint | Noneut.IO[bytes]uMultiPartParser.start_file_streamingDastreamaboundaryacontent_lengthareturnut.IO[bytes]abytesuint | Noneutuple[MultiDict[str, str], MultiDict[str, FileStorage]]uMultiPartParser.parseDareadasizeareturnut.Callable[[int], bytes]aintut.Iterator[bytes | None]uwerkzeug\formparser.pyu<module werkzeug.formparser>Taselfastream_factoryamax_form_memory_sizeamax_content_lengthaclsasilentamax_form_partsTaselfastream_factoryamax_form_memory_sizeaclsabuffer_sizeamax_form_partsTareadasizeadataTaselfastreamamimetypeacontent_lengthaoptionsaparseraboundaryaformafilesTaselfastreamamimetypeacontent_lengthaoptionsaitemsTatotal_content_lengthacontent_typeafilenameacontent_lengthamax_sizeTaselfamessageTaselfaheadersacontent_typeaparametersact_charsetTaselfastreamamimetypeacontent_lengthaoptionsaparse_funcT
aselfastreamaboundaryacontent_lengthacurrent_partacontainera_writeaparserafieldsafilesadataaeventavalueTaenvironastream_factoryamax_form_memory_sizeamax_content_lengthaclsasilentamax_form_partsTaselfaenvironastreamacontent_lengthamimetypeaoptionsTaselfaeventatotal_content_lengthacontent_typeacontent_lengthacontaineru.werkzeug.httpmu""a_token_charsaissupersetareplaceTw\u\\Tw"u\"w"uuAdd double quotes around a header value. If the header contains only ASCII token
    characters, it will be returned unchanged. If the header contains ``"`` or ``\``
    characters, they will be escaped with an additional ``\`` character.

    This is the reverse of :func:`unquote_header_value`.

    :param value: The value to quote. Will be converted to a string.
    :param allow_token: Disable to quote the value even if it only has token characters.

    .. versionchanged:: 3.0
        Passing bytes is not supported.

    .. versionchanged:: 3.0
        The ``extra_chars`` parameter is removed.

    .. versionchanged:: 2.3
        The value is quoted if it is the empty string.

    .. versionadded:: 0.5
    ql:lqnTu\\w\Tu\"w"uRemove double quotes and decode slash-escaped ``"`` and ``\`` characters in a
    header value.

    This is the reverse of :func:`quote_header_value`.

    :param value: The header value to unquote.

    .. versionchanged:: 3.0
        The ``is_filename`` parameter is removed.
    aitemsutoo many values to unpack (expected 2)w*asegmentsw=aquote_header_valueu; uProduce a header value and ``key=value`` parameters separated by semicolons
    ``;``. For example, the ``Content-Type`` header.

    .. code-block:: python

        dump_options_header("text/html", {"charset": "UTF-8"})
        'text/html; charset=UTF-8'

    This is the reverse of :func:`parse_options_header`.

    If a value contains non-token characters, it will be quoted.

    If a value is ``None``, the parameter is skipped.

    In some keys for some headers, a UTF-8 value can be encoded using a special
    ``key*=UTF-8''value`` form, where ``value`` is percent encoded. This function will
    not produce that format automatically, but if a given key ends with an asterisk
    ``*``, the value is assumed to have that form and will not be quoted further.

    :param header: The primary header value.
    :param options: Parameters to encode as ``key=value`` pairs.

    .. versionchanged:: 2.3
        Keys with ``None`` values are skipped rather than treated as a bare key.

    .. versionchanged:: 2.2.3
        If a key ends with ``*``, its value will not be quoted.
    u, uProduce a header value from a list of items or ``key=value`` pairs, separated by
    commas ``,``.

    This is the reverse of :func:`parse_list_header`, :func:`parse_dict_header`, and
    :func:`parse_set_header`.

    If a value contains non-token characters, it will be quoted.

    If a value is ``None``, the key is output alone.

    In some keys for some headers, a UTF-8 value can be encoded using a special
    ``key*=UTF-8''value`` form, where ``value`` is percent encoded. This function will
    not produce that format automatically, but if a given key ends with an asterisk
    ``*``, the value is assumed to have that form and will not be quoted further.

    .. code-block:: python

        dump_header(["foo", "bar baz"])
        'foo, "bar baz"'

        dump_header({"foo": "bar baz"})
        'foo="bar baz"'

    :param iterable: The items to create a header from.

    .. versionchanged:: 3.0
        The ``allow_token`` parameter is removed.

    .. versionchanged:: 2.2.3
        If a key ends with ``*``, its value will not be quoted.
    uDump a Content Security Policy header.

    These are structured into policies such as "default-src 'self';
    script-src 'self'".

    .. versionadded:: 1.0.0
       Support for Content Security Policy headers was added.

    w u<genexpr>udump_csp_header.<locals>.<genexpr>a_parse_list_headeraresultaitemuParse a header value that consists of a list of comma separated items according
    to `RFC 9110 <https://httpwg.org/specs/rfc9110.html#abnf.extension>`__.

    This extends :func:`urllib.request.parse_http_list` to remove surrounding quotes
    from values.

    .. code-block:: python

        parse_list_header('token, "quoted value"')
        ['token', 'quoted value']

    This is the reverse of :func:`dump_header`.

    :param value: The header value to parse.
    aparse_list_headerapartitionTw=utoo many values to unpack (expected 3)astrip:nqna_charset_value_reamatchagroupsalowerPaasciiuiso-8859-1uutf-8uus-asciiaunquoteavalueTaencodinguParse a list header using :func:`parse_list_header`, then parse each item as a
    ``key=value`` pair.

    .. code-block:: python

        parse_dict_header('a=b, c="d, e", f')
        {"a": "b", "c": "d, e", "f": None}

    This is the reverse of :func:`dump_header`.

    If a key does not have a value, it is ``None``.

    This handles charsets for values as described in
    `RFC 2231 <https://www.rfc-editor.org/rfc/rfc2231#section-3>`__. Only ASCII, UTF-8,
    and ISO-8859-1 charsets are accepted, otherwise the value remains quoted.

    :param value: The header value to parse.

    .. versionchanged:: 3.0
        Passing bytes is not supported.

    .. versionchanged:: 3.0
        The ``cls`` argument is removed.

    .. versionchanged:: 2.3
        Added support for ``key*=charset''value`` encoded items.

    .. versionchanged:: 0.9
       The ``cls`` argument was added.
    TuDTw;a_parameter_key_rearestagroupTlaenda_parameter_token_value_reapartsaappend:nlnlaposlPu\"u\\afindalstripaencodingacontinued_encodingapvTu%22w"a_continuation_reasearchastartaoptionsuParse a header that consists of a value with ``key=value`` parameters separated
    by semicolons ``;``. For example, the ``Content-Type`` header.

    .. code-block:: python

        parse_options_header("text/html; charset=UTF-8")
        ('text/html', {'charset': 'UTF-8'})

        parse_options_header("")
        ("", {})

    This is the reverse of :func:`dump_options_header`.

    This parses valid parameter parts as described in
    `RFC 9110 <https://httpwg.org/specs/rfc9110.html#parameter>`__. Invalid parts are
    skipped.

    This handles continuations and charsets as described in
    `RFC 2231 <https://www.rfc-editor.org/rfc/rfc2231#section-3>`__, although not as
    strictly as the RFC. Only ASCII, UTF-8, and ISO-8859-1 charsets are accepted,
    otherwise the value remains quoted.

    Clients may not be consistent in how they handle a quote character within a quoted
    value. The `HTML Standard <https://html.spec.whatwg.org/#multipart-form-data>`__
    replaces it with ``%22`` in multipart form data.
    `RFC 9110 <https://httpwg.org/specs/rfc9110.html#quoted.strings>`__ uses backslash
    escapes in HTTP headers. Both are decoded to the ``"`` character.

    Clients may not be consistent in how they handle non-ASCII characters. HTML
    documents must declare ``<meta charset=UTF-8>``, otherwise browsers may replace with
    HTML character references, which can be decoded using :func:`html.unescape`.

    :param value: The header value to parse.
    :return: ``(value, options)``, where ``options`` is a dict

    .. versionchanged:: 2.3
        Invalid parts, such as keys with no value, quoted keys, and incorrectly quoted
        values, are discarded instead of treating as ``None``.

    .. versionchanged:: 2.3
        Only ASCII, UTF-8, and ISO-8859-1 are accepted for charset values.

    .. versionchanged:: 2.3
        Escaped quotes in quoted values, like ``%22`` and ``\"``, are handled.

    .. versionchanged:: 2.2
        Option names are always converted to lowercase.

    .. versionchanged:: 2.2
        The ``multiple`` parameter was removed.

    .. versionchanged:: 0.15
        :rfc:`2231` parameter continuations are handled.

    .. versionadded:: 0.5
    acastaTypea_TAnyAcceptadsaAcceptTnaparse_options_headerwqapopTwqa_q_value_reafullmatchadump_options_headeruParse an ``Accept`` header according to
    `RFC 9110 <https://httpwg.org/specs/rfc9110.html#field.accept>`__.

    Returns an :class:`.Accept` instance, which can sort and inspect items based on
    their quality parameter. When parsing ``Accept-Charset``, ``Accept-Encoding``, or
    ``Accept-Language``, pass the appropriate :class:`.Accept` subclass.

    :param value: The header value to parse.
    :param cls: The :class:`.Accept` class to wrap the result in.
    :return: An instance of ``cls``.

    .. versionchanged:: 2.3
        Parse according to RFC 9110. Items with invalid ``q`` values are skipped.
    utype[_TAnyCC]aRequestCacheControlaparse_dict_headeruParse a cache control header.  The RFC differs between response and
    request cache control, this method does not.  It's your responsibility
    to not use the wrong control statements.

    .. versionadded:: 0.5
       The `cls` was added.  If not specified an immutable
       :class:`~werkzeug.datastructures.RequestCacheControl` is returned.

    :param value: a cache control header to be parsed.
    :param on_update: an optional callable that is called every time a value
                      on the :class:`~werkzeug.datastructures.CacheControl`
                      object is changed.
    :param cls: the class for the returned object.  By default
                :class:`~werkzeug.datastructures.RequestCacheControl` is used.
    :return: a `cls` object.
    utype[_TAnyCSP]aContentSecurityPolicyasplitTw luParse a Content Security Policy header.

    .. versionadded:: 1.0.0
       Support for Content Security Policy headers was added.

    :param value: a csp header to be parsed.
    :param on_update: an optional callable that is called every time a value
                      on the object is changed.
    :param cls: the class for the returned object.  By default
                :class:`~werkzeug.datastructures.ContentSecurityPolicy` is used.
    :return: a `cls` object.
    aHeaderSetuParse a set-like header and return a
    :class:`~werkzeug.datastructures.HeaderSet` object:

    >>> hs = parse_set_header('token, "quoted value"')

    The return value is an object that treats the items case-insensitively
    and keeps the order of the items:

    >>> 'TOKEN' in hs
    True
    >>> hs.index('quoted value')
    1
    >>> hs
    HeaderSet(['token', 'quoted value'])

    To create a header from the :class:`HeaderSet` again, use the
    :func:`dump_header` function.

    :param value: a set header to be parsed.
    :param on_update: an optional callable that is called every time a
                      value on the :class:`~werkzeug.datastructures.HeaderSet`
                      object is changed.
    :return: a :class:`~werkzeug.datastructures.HeaderSet`
    aIfRangeaparse_dateTadateaunquote_etaguParses an if-range header which can be an etag or a date.  Returns
    a :class:`~werkzeug.datastructures.IfRange` object.

    .. versionchanged:: 2.0
        If the value represents a datetime, it is timezone-aware.

    .. versionadded:: 0.7
    Tw=lTw,w-astartswithTw-alast_enda_plain_intTw-larangesabeginaRangeuParses a range header into a :class:`~werkzeug.datastructures.Range`
    object.  If the header is missing or malformed `None` is returned.
    `ranges` is a list of ``(start, stop)`` tuples where the ranges are
    non-inclusive.

    .. versionadded:: 0.7
    Tnlw/Tw/lais_byte_range_validaContentRangeTaon_updateuParses a range header into a
    :class:`~werkzeug.datastructures.ContentRange` object or `None` if
    parsing is not possible.

    .. versionadded:: 0.7

    :param value: a content range header to be parsed.
    :param on_update: an optional callable that is called every time a value
                      on the :class:`~werkzeug.datastructures.ContentRange`
                      object is changed.
    uinvalid etaguW/uQuote an etag.

    :param etag: the etag to quote.
    :param weak: set to `True` to tag it "weak".
    TnnTTuW/uw/:lnnaetag:qnnuUnquote a single etag:

    >>> unquote_etag('W/"bar"')
    ('bar', True)
    >>> unquote_etag('"bar"')
    ('bar', False)

    :param etag: the etag identifier to unquote.
    :return: a ``(etag, weak)`` tuple.
    aETagsa_etag_reTtTastar_tagaweakastronguParse an etag header.

    :param value: the tag header to parse
    :return: an :class:`~werkzeug.datastructures.ETags` object.
    asha1ahexdigestuGenerate an etag for some data.

    .. versionchanged:: 2.0
        Use SHA-1. MD5 may not be available in some environments.
    aemailautilsaparsedate_to_datetimeTETypeErrorEValueErroratzinfoatimezoneautcTatzinfouParse an :rfc:`2822` date into a timezone-aware
    :class:`datetime.datetime` object, or ``None`` if parsing fails.

    This is a wrapper for :func:`email.utils.parsedate_to_datetime`. It
    returns ``None`` if parsing fails instead of raising an exception,
    and always returns a timezone-aware datetime object. If the string
    doesn't have timezone information, it is assumed to be UTC.

    :param value: A string with a supported date format.

    .. versionchanged:: 2.0
        Return a timezone-aware datetime object. Use
        ``email.utils.parsedate_to_datetime``.
    adateadatetimeacombineatimea_dt_as_utcaformat_datetimeDausegmttastruct_timeamktimeaformatdateuFormat a datetime object or timestamp into an :rfc:`2822` date
    string.

    This is a wrapper for :func:`email.utils.format_datetime`. It
    assumes naive datetime objects are in UTC instead of raising an
    exception.

    :param timestamp: The datetime or timestamp to format. Defaults to
        the current time.

    .. versionchanged:: 2.0
        Use ``email.utils.format_datetime``. Accept ``date`` objects.
    atimedeltaTasecondsuParses a base-10 integer count of seconds into a timedelta.

    If parsing fails, the return value is `None`.

    :param value: a string consisting of an integer represented in base-10
    :return: a :class:`datetime.timedelta` object or `None`.
    atotal_secondsuage cannot be negativeuFormats the duration as a base-10 integer.

    :param age: should be an integer number of seconds,
                a :class:`datetime.timedelta` object, or,
                if the age is unknown, `None` (default).
    a_sansio_httpais_resource_modifiedagetTaHTTP_RANGETaHTTP_IF_RANGETaHTTP_IF_MODIFIED_SINCETaHTTP_IF_NONE_MATCHTaHTTP_IF_MATCHTahttp_rangeahttp_if_rangeahttp_if_modified_sinceahttp_if_none_matchahttp_if_matchaetagadataalast_modifiedaignore_if_rangeuConvenience method for conditional requests.

    :param environ: the WSGI environment of the request to be checked.
    :param etag: the etag for the response for comparison.
    :param data: or alternatively the data of the response to automatically
                 generate an etag using :func:`generate_etag`.
    :param last_modified: an optional date of the last modification.
    :param ignore_if_range: If `False`, `If-Range` header will be taken into
                            account.
    :return: `True` if the resource was modified, otherwise `False`.

    .. versionchanged:: 2.0
        SHA-1 is used to generate an etag value for the data. MD5 may
        not be available in some environments.

    .. versionchanged:: 1.0.0
        The check is run for methods other than ``GET`` and ``HEAD``.
    ais_entity_header:nnnuRemove all entity headers from a list or :class:`Headers` object.  This
    operation works in-place.  `Expires` and `Content-Location` headers are
    by default not removed.  The reason for this is :rfc:`2616` section
    10.3.5 which specifies some entity headers that should be sent.

    .. versionchanged:: 0.5
       added `allowed` parameter.

    :param headers: a list or :class:`Headers` object.
    :param allowed: a list of headers that should still be allowed even though
                    they are entity headers.
    ais_hop_by_hop_headeruRemove all HTTP/1.1 "Hop-by-Hop" headers from a list or
    :class:`Headers` object.  This operation works in-place.

    .. versionadded:: 0.5

    :param headers: a list or :class:`Headers` object.
    a_entity_headersuCheck if a header is an entity header.

    .. versionadded:: 0.5

    :param header: the header to test.
    :return: `True` if it's an entity header, `False` otherwise.
    a_hop_by_hop_headersuCheck if a header is an HTTP/1.1 "Hop-by-Hop" header.

    .. versionadded:: 0.5

    :param header: the header to test.
    :return: `True` if it's an HTTP/1.1 "Hop-by-Hop" header, `False` otherwise.
    TaHTTP_COOKIEaencodeTalatin1adecodeaparse_cookieTacookieaclsuParse a cookie from a string or WSGI environ.

    The same key can be provided multiple times, the values are stored
    in-order. The default :class:`MultiDict` will have the first value
    first, and all values can be retrieved with
    :meth:`MultiDict.getlist`.

    :param header: The cookie header as a string, or a WSGI environ dict
        with a ``HTTP_COOKIE`` key.
    :param cls: A dict-like class to store the parsed cookies in.
        Defaults to :class:`MultiDict`.

    .. versionchanged:: 3.0
        Passing bytes, and the ``charset`` and ``errors`` parameters, were removed.

    .. versionchanged:: 1.0
        Returns a :class:`MultiDict` instead of a ``TypeConversionDict``.

    .. versionchanged:: 0.5
        Returns a :class:`TypeConversionDict` instead of a regular dict. The ``cls``
        parameter was added.
    ato_bytesTlabigc\%03oaquoteDasafeu%!$&'()*+,/:=@Tw:Tw.TaidnaTaasciiahttp_dateanowTatzatimestampatitlePaStrictaLaxaNoneuSameSite must be 'Strict', 'Lax', or 'None'.a_cookie_no_quote_rea_cookie_slash_reasubu<lambda>udump_cookie.<locals>.<lambda>aDomainaExpiresuMax-AgeaSecureaHttpOnlyaPathaSameSiteabufawarningsawarnuThe 'u' cookie is too large: the value was u bytes but the header required u extra bytes. The final size was u bytes but the limit is u bytes. Browsers may silently ignore cookies larger than this.DastacklevelluCreate a Set-Cookie header without the ``Set-Cookie`` prefix.

    The return value is usually restricted to ascii as the vast majority
    of values are properly escaped, but that is no guarantee. It's
    tunneled through latin1 as required by :pep:`3333`.

    The return value is not ASCII safe if the key contains unicode
    characters.  This is technically against the specification but
    happens in the wild.  It's strongly recommended to not use
    non-ASCII values for the keys.

    :param max_age: should be a number of seconds, or `None` (default) if
                    the cookie should last only as long as the client's
                    browser session.  Additionally `timedelta` objects
                    are accepted, too.
    :param expires: should be a `datetime` object or unix timestamp.
    :param path: limits the cookie to a given path, per default it will
                 span the whole domain.
    :param domain: Use this if you want to set a cross-domain cookie. For
                   example, ``domain="example.com"`` will set a cookie
                   that is readable by the domain ``www.example.com``,
                   ``foo.example.com`` etc. Otherwise, a cookie will only
                   be readable by the domain that set it.
    :param secure: The cookie will only be available via HTTPS
    :param httponly: disallow JavaScript to access the cookie.  This is an
                     extension to the cookie standard and probably not
                     supported by all browsers.
    :param charset: the encoding for string values.
    :param sync_expires: automatically set expires if max_age is defined
                         but expires not.
    :param max_size: Warn if the final header value exceeds this size. The
        default, 4093, should be safely `supported by most browsers
        <cookie_>`_. Set to 0 to disable this check.
    :param samesite: Limits the scope of the cookie such that it will
        only be attached to requests if those requests are same-site.

    .. _`cookie`: http://browsercookielimits.squawky.net/

    .. versionchanged:: 3.0
        Passing bytes, and the ``charset`` parameter, were removed.

    .. versionchanged:: 2.3.3
        The ``path`` parameter is ``/`` by default.

    .. versionchanged:: 2.3.1
        The value allows more characters without quoting.

    .. versionchanged:: 2.3
        ``localhost`` and other names without a dot are allowed for the domain. A
        leading dot is ignored.

    .. versionchanged:: 2.3
        The ``path`` parameter is ``None`` by default.

    .. versionchanged:: 1.0.0
        The string ``'None'`` is accepted for ``samesite``.
    a_cookie_slash_mapuChecks if a given byte content range is valid for the given length.

    .. versionadded:: 0.7
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsuemail.utilsarewtTadatetimeTatimeTatimedeltaTatimezoneaenumTaEnumaEnumahashlibTasha1TamktimeTastruct_timeuurllib.parseTaquoteTaunquoteuurllib.requestTaparse_http_listaparse_http_lista_internalTa_dt_as_utcTa_plain_intPMw#wUw9wMwYw5waw~wowWw_wfw0w4wpw2wFw`w1wIw&wcwewSwAwBwCwGwgwkw|w$wdwXwEwbw6w*wswhwiwzwrw-wLwjw%w^wNwRwywJwmw3wZwqwuwwwlwPwKwQw+w8w.wvw7wxwDwOwnwHw!wTw'wtwVacompileTu([Ww]/)?(?:"(.*?)"|(.*?))(?:\s*,\s*|$)P
ucontent-lengthaexpiresucontent-rangeaallowucontent-typeucontent-languageucontent-encodingucontent-locationulast-modifieducontent-md5Pateatraileraconnectionaupgradeutransfer-encodinguproxy-authenticateukeep-aliveuproxy-authorizationD@ldlelflgllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllaContinueuSwitching ProtocolsaProcessinguEarly HintsaOKaCreatedaAccepteduNon Authoritative InformationuNo ContentuReset ContentuPartial ContentuMulti StatusuAlready ReporteduIM UseduMultiple ChoicesuMoved PermanentlyaFounduSee OtheruNot ModifieduUse ProxyuSwitch ProxyuTemporary RedirectuPermanent RedirectuBad RequestaUnauthorizeduPayment RequiredaForbiddenuNot FounduMethod Not AlloweduNot AcceptableuProxy Authentication RequireduRequest TimeoutaConflictaGoneuLength RequireduPrecondition FaileduRequest Entity Too LargeuRequest URI Too LonguUnsupported Media TypeuRequested Range Not SatisfiableuExpectation FaileduI'm a teapotuMisdirected RequestuUnprocessable EntityaLockeduFailed DependencyuToo EarlyuUpgrade RequireduPrecondition RequireduToo Many RequestsuRequest Header Fields Too LargeuRetry WithuUnavailable For Legal ReasonsuInternal Server ErroruNot ImplementeduBad GatewayuService UnavailableuGateway TimeoutuHTTP Version Not SupporteduVariant Also NegotiatesuInsufficient StorageuLoop DetecteduNot ExtendeduNetwork Authentication FailedaHTTP_STATUS_CODESa__prepare__aCOEPa__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uwerkzeug.httpa__module__uCross Origin Embedder Policiesa__qualname__uunsafe-noneaUNSAFE_NONEurequire-corpaREQUIRE_CORPa__orig_bases__aCOOPuCross Origin Opener Policiesusame-origin-allow-popupsaSAME_ORIGIN_ALLOW_POPUPSusame-originaSAME_ORIGINDavalueaallow_tokenareturnut.AnyaboolastrDavalueareturnastrpaunquote_header_valueDaheaderaoptionsareturnustr | Noneut.Mapping[str, t.Any]astrDaiterableareturnudict[str, t.Any] | t.Iterable[t.Any]astradump_headerDaheaderareturnuds.ContentSecurityPolicyastradump_csp_headerDavalueareturnastrulist[str]Davalueareturnastrudict[str, str | None]aASCIITu([\w!#$%&'*+\-.^`|~]+)=TaflagsTu[\w!#$%&'*+\-.^`|~]+u
    ([\w!#$%&*+\-.^`|~]*)'  # charset part, could be empty
    [\w!#$%&*+\-.^`|~]*'  # don't care about language part, usually empty
    ([\w!#$%&'*+\-.^`|~]+)  # one or more token chars with percent encoding
    aVERBOSEu\*(\d+)$Davalueareturnustr | Noneutuple[str, dict[str, str]]u-?\d+(\.\d+)?aTypeVarTa_TAnyAcceptuds.AcceptTaboundaoverloadDavalueareturnustr | Noneuds.Acceptaparse_accept_headerDavalueaclsareturnustr | Noneutype[_TAnyAccept]a_TAnyAcceptDavalueaclsareturnustr | Noneutype[_TAnyAccept] | Nonea_TAnyAcceptTa_TAnyCCuds.cache_control._CacheControla_TAnyCCDavalueaon_updateareturnustr | Noneut.Callable[[ds.cache_control._CacheControl], None] | Noneuds.RequestCacheControlaparse_cache_control_headerTnQDavalueaon_updateaclsareturnustr | Noneut.Callable[[ds.cache_control._CacheControl], None] | Noneutype[_TAnyCC]a_TAnyCCDavalueaon_updateaclsareturnustr | Noneut.Callable[[ds.cache_control._CacheControl], None] | Noneutype[_TAnyCC] | Nonea_TAnyCCTa_TAnyCSPuds.ContentSecurityPolicya_TAnyCSPDavalueaon_updateareturnustr | Noneut.Callable[[ds.ContentSecurityPolicy], None] | Noneuds.ContentSecurityPolicyaparse_csp_headerDavalueaon_updateaclsareturnustr | Noneut.Callable[[ds.ContentSecurityPolicy], None] | Noneutype[_TAnyCSP]a_TAnyCSPDavalueaon_updateaclsareturnustr | Noneut.Callable[[ds.ContentSecurityPolicy], None] | Noneutype[_TAnyCSP] | Nonea_TAnyCSPDavalueaon_updateareturnustr | Noneut.Callable[[ds.HeaderSet], None] | Noneuds.HeaderSetaparse_set_headerDavalueareturnustr | Noneuds.IfRangeaparse_if_range_headerDavalueamake_inclusiveareturnustr | Noneabooluds.Range | Noneaparse_range_headerDavalueaon_updateareturnustr | Noneut.Callable[[ds.ContentRange], None] | Noneuds.ContentRange | Noneaparse_content_range_headerTFDaetagaweakareturnastraboolastraquote_etagDaetagareturnustr | Noneutuple[str, bool] | tuple[None, None]Davalueareturnustr | Noneuds.ETagsaparse_etagsDadataareturnabytesastragenerate_etagDavalueareturnustr | Noneudatetime | NoneDatimestampareturnudatetime | date | int | float | struct_time | NoneastrDavalueareturnustr | Noneutimedelta | Noneaparse_ageDaageareturnutimedelta | int | Noneustr | Noneadump_ageTnnntDaenvironaetagadataalast_modifiedaignore_if_rangeareturnaWSGIEnvironmentustr | Noneubytes | Noneudatetime | str | NoneaboolpTTaexpiresucontent-locationDaheadersaallowedareturnuds.Headers | list[tuple[str, str]]ut.Iterable[str]aNonearemove_entity_headersDaheadersareturnuds.Headers | list[tuple[str, str]]aNonearemove_hop_by_hop_headersDaheaderareturnastraboolDaheaderaclsareturnuWSGIEnvironment | str | Noneutype[ds.MultiDict[str, str]] | Noneuds.MultiDict[str, str]u[\w!#$%&'()*+\-./:<=>?@\[\]^`{|}~]*wAc[\x00-\x19\",;\\\x7f-\xff]Dd"d\c\"c\\T;ll lc,;;lllT
unnw/nFptlnDakeyavalueamax_ageaexpiresapathadomainasecureahttponlyasync_expiresamax_sizeasamesiteareturnastrputimedelta | int | Noneustr | datetime | int | float | Noneustr | Noneustr | Noneaboolppaintustr | Noneastradump_cookieDastartastopalengthareturnuint | Noneuint | Noneuint | NoneaboolTadatastructuresadatastructuresasansioTahttpahttpuwerkzeug\http.pyTa.0wvTa.0akeyavalueTwmu<module werkzeug.http>Ta__class__TaageTakeyavalueamax_ageaexpiresapathadomainasecureahttponlyasync_expiresamax_sizeasamesiteabufwkwvarvacookie_sizeavalue_sizeTaheaderTaiterableaitemsakeyavalueTaheaderaoptionsasegmentsakeyavalueTadataTatimestampTastartastopalengthTaenvironaetagadataalast_modifiedaignore_if_rangeTavalueTavalueaclsTavalueaclsaresultaitemaoptionsaq_strwqTavalueasecondsTavalueaon_updateTavalueaon_updateaclsTavalueaon_updateaunitsarangedefarngalength_stralengthastart_strastop_strastartastopTaheaderaclsacookieTavalueaon_updateaclsaitemsapolicyadirectiveTavalueadtTavaluearesultaencodingaitemakeyahas_valueamatchTavalueastrongaweakaendaposamatchais_weakaquotedarawTavalueadateTavaluearesultaitemTavalueapartsaoptionsaencodingacontinued_encodingw_arestwmapkaposalengthaendapvamatchTavalueamake_inclusivearangesalast_endaunitsarngaitemabeginaendabegin_straend_strTaetagaweakTavalueaallow_tokenavalue_stratoken_charsTaheadersaallowedTaheaders.werkzeug.local2a__release_local__uRelease the data for the current context in a :class:`Local` or
    :class:`LocalStack` without using a :class:`LocalManager`.

    This should not be needed for modern use cases, and may be removed
    in the future.

    .. versionadded:: 0.6.1
    aContextVaruwerkzeug.Local<uu>.storagea__setattr__a_Local__storageagetaitemsaLocalProxyTaunbound_messageuCreate a :class:`LocalProxy` that access an attribute on this
        local namespace.

        :param name: Proxy this attribute.
        :param unbound_message: The error message that the proxy will
            show if the attribute isn't set.
        asetacopyuwerkzeug.LocalStack<a_storageaappenduAdd a new item to the top of the stack.q:nqnuRemove the top item from the stack and return it. If the
        stack is empty, return ``None``.
        uThe topmost item on the stack.  If the stack is empty,
        `None` is returned.
        uCreate a :class:`LocalProxy` that accesses the top of this
        local stack.

        :param name: If given, the proxy access this attribute of the
            top item, rather than the item itself.
        :param unbound_message: The error message that the proxy will
            show if the stack is empty.
        alocalsaLocalarelease_localuRelease the data in the locals for this context. Call this at
        the end of each request or use :meth:`make_middleware`.
        Daenvironastart_responseareturnaWSGIEnvironmentaStartResponseut.Iterable[bytes]aapplicationuLocalManager.make_middleware.<locals>.applicationuWrap a WSGI application so that local data is released
        automatically after the response has been sent for a request.
        aClosingIteratoraappaselfacleanupaupdate_wrapperamake_middlewareuLike :meth:`make_middleware` but used as a decorator on the
        WSGI application function.

        .. code-block:: python

            @manager.middleware
            def application(environ, start_response):
                ...
        w<a__name__u storages: w>a__get__DainstanceaobjareturnuLocalProxy[t.Any]ut.Anyut.Callable[..., t.Any]abind_fu_ProxyLookup.__init__.<locals>.bind_fafallbackaclass_valueais_attrwfapartialanamea_get_current_objectuproxy uSupport calling unbound methods from the class. For example,
        this happens with ``copy.copy``, which does
        ``type(x).__copy__(x)``. ``type(x)`` can't be proxied, so it
        returns the proxy type and descriptor.
        a__class__a__init__u_ProxyIOp.__init__.<locals>.bind_fDaselfaotherareturnut.Anyut.AnyuLocalProxy[t.Any]ai_opu_ProxyIOp.__init__.<locals>.bind_f.<locals>.i_opainstanceDaobjaotherareturnut.Anyut.Anyut.Anyar_opu_l_to_r_op.<locals>.r_opacastwFuSwap the argument order to turn an l-op into an r-op.aopa_identityaattrgetteruobject is not boundu'name' is required when proxying a 'Local' object.DareturnwTuLocalProxy.__init__.<locals>._get_current_objectaLocalStackacallableuDon't know how to proxy 'u'.a_LocalProxy__wrappedaget_namealocalaunbound_messageatopa__doc__u unbound>a__file__a__spec__aoriginahas_locationa__cached__aannotationslamathaoperatorwtacontextvarsTaContextVarTaattrgetterawsgiTaClosingIteratorlaTypeVarTwTwTaCallableaAnyTwFTaboundDalocalareturnuLocal | LocalStack[t.Any]aNoneuwerkzeug.locala__module__uCreate a namespace of context-local data. This wraps a
    :class:`ContextVar` containing a :class:`dict` value.

    This may incur a performance penalty compared to using individual
    context vars, as it has to copy data to avoid mutating the dict
    between nested contexts.

    :param context_var: The :class:`~contextvars.ContextVar` to use as
        storage for this local. If not given, one will be created.
        Context vars not created at the global scope may interfere with
        garbage collection.

    .. versionchanged:: 2.0
        Uses ``ContextVar`` instead of a custom storage implementation.
    a__qualname__Ta__storagea__slots__TnDacontext_varareturnuContextVar[dict[str, t.Any]] | NoneaNoneuLocal.__init__Dareturnut.Iterator[tuple[str, t.Any]]a__iter__uLocal.__iter__Daunbound_messagenDanameaunbound_messageareturnastrustr | NoneuLocalProxy[t.Any]a__call__uLocal.__call__DareturnaNoneuLocal.__release_local__Danameareturnastrut.Anya__getattr__uLocal.__getattr__Danameavalueareturnastrut.AnyaNoneuLocal.__setattr__DanameareturnastraNonea__delattr__uLocal.__delattr__aGenerica__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uCreate a stack of context-local data. This wraps a
    :class:`ContextVar` containing a :class:`list` value.

    This may incur a performance penalty compared to using individual
    context vars, as it has to copy data to avoid mutating the list
    between nested contexts.

    :param context_var: The :class:`~contextvars.ContextVar` to use as
        storage for this local. If not given, one will be created.
        Context vars not created at the global scope may interfere with
        garbage collection.

    .. versionchanged:: 2.0
        Uses ``ContextVar`` instead of a custom storage implementation.

    .. versionadded:: 0.6.1
    Ta_storageDacontext_varareturnuContextVar[list[T]] | NoneaNoneuLocalStack.__init__uLocalStack.__release_local__DaobjareturnwTulist[T]apushuLocalStack.pushDareturnuT | NoneapopuLocalStack.popapropertyuLocalStack.topDanameaunbound_messageareturnustr | Noneustr | NoneuLocalProxy[t.Any]uLocalStack.__call__a__orig_bases__uManage releasing the data for the current context in one or more
    :class:`Local` and :class:`LocalStack` objects.

    This should not be needed for modern use cases, and may be removed
    in the future.

    :param locals: A local or list of locals to manage.

    .. versionchanged:: 2.1
        The ``ident_func`` was removed.

    .. versionchanged:: 0.7
        The ``ident_func`` parameter was added.

    .. versionchanged:: 0.6.1
        The :func:`release_local` function can be used instead of a
        manager.
    aLocalManagerTalocalsDalocalsareturnuNone | (Local | LocalStack[t.Any] | t.Iterable[Local | LocalStack[t.Any]])aNoneuLocalManager.__init__uLocalManager.cleanupDaappareturnaWSGIApplicationpuLocalManager.make_middlewareDafuncareturnaWSGIApplicationpamiddlewareuLocalManager.middlewareDareturnastra__repr__uLocalManager.__repr__uDescriptor that handles proxied attribute lookup for
    :class:`LocalProxy`.

    :param f: The built-in function this attribute is accessed through.
        Instead of looking up the special method, the function call
        is redone on the object.
    :param fallback: Return this function if the proxy is unbound
        instead of raising a :exc:`RuntimeError`.
    :param is_attr: This proxied name is an attribute, not a function.
        Call the fallback immediately to get the value.
    :param class_value: Value to return when accessed from the
        ``LocalProxy`` class directly. Used for ``__doc__`` so building
        docs still works.
    a_ProxyLookupTabind_fafallbackais_attraclass_valueanameTnnnFDwfafallbackaclass_valueais_attrareturnut.Callable[..., t.Any] | Noneut.Callable[[LocalProxy[t.Any]], t.Any] | Noneut.Any | NoneaboolaNoneu_ProxyLookup.__init__DaowneranameareturnuLocalProxy[t.Any]astraNonea__set_name__u_ProxyLookup.__set_name__DainstanceaownerareturnuLocalProxy[t.Any]utype | Noneut.Anyu_ProxyLookup.__get__u_ProxyLookup.__repr__DainstanceaargsakwargsareturnuLocalProxy[t.Any]ut.Anyut.Anyut.Anyu_ProxyLookup.__call__a_ProxyIOpuLook up an augmented assignment method on a proxied object. The
    method is wrapped to return the proxy instead of the object.
    TnnDwfafallbackareturnut.Callable[..., t.Any] | Noneut.Callable[[LocalProxy[t.Any]], t.Any] | NoneaNoneu_ProxyIOp.__init__DaopareturnwFpa_l_to_r_opDwoareturnwTpuA proxy to the object bound to a context-local object. All
    operations on the proxy are forwarded to the bound object. If no
    object is bound, a ``RuntimeError`` is raised.

    :param local: The context-local object that provides the proxied
        object.
    :param name: Proxy this attribute from the proxied object.
    :param unbound_message: The error message to show if the
        context-local object is unbound.

    Proxy a :class:`~contextvars.ContextVar` to make it easier to
    access. Pass a name to proxy that attribute.

    .. code-block:: python

        _request_var = ContextVar("request")
        request = LocalProxy(_request_var)
        session = LocalProxy(_request_var, "session")

    Proxy an attribute on a :class:`Local` namespace by calling the
    local with the attribute name:

    .. code-block:: python

        data = Local()
        user = data("user")

    Proxy the top item on a :class:`LocalStack` by calling the local.
    Pass a name to proxy that attribute.

    .. code-block::

        app_stack = LocalStack()
        current_app = app_stack()
        g = app_stack("g")

    Pass a function to proxy the return value from that function. This
    was previously used to access attributes of local objects before
    that was supported directly.

    .. code-block:: python

        session = LocalProxy(lambda: request.session)

    ``__repr__`` and ``__class__`` are proxied, so ``repr(x)`` and
    ``isinstance(x, cls)`` will look like the proxied object. Use
    ``issubclass(type(x), LocalProxy)`` to check if an object is a
    proxy.

    .. code-block:: python

        repr(user)  # <User admin>
        isinstance(user, User)  # True
        issubclass(type(user), LocalProxy)  # True

    .. versionchanged:: 2.2.2
        ``__wrapped__`` is set when wrapping an object, not only when
        wrapping a function, to prevent doctest from failing.

    .. versionchanged:: 2.2
        Can proxy a ``ContextVar`` or ``LocalStack`` directly.

    .. versionchanged:: 2.2
        The ``name`` parameter can be used with any proxied object, not
        only ``Local``.

    .. versionchanged:: 2.2
        Added the ``unbound_message`` parameter.

    .. versionchanged:: 2.0
        Updated proxied attributes and methods to reflect the current
        data model.

    .. versionchanged:: 0.6.1
        The class can be instantiated with a callable.
    a__annotations__Ta__wrappeda_get_current_objectut.Callable[[], T]Dalocalanameaunbound_messageareturnuContextVar[T] | Local | LocalStack[T] | t.Callable[[], T]ustr | Noneustr | NoneaNoneuLocalProxy.__init__u<lambda>uLocalProxy.<lambda>Taclass_valueafallbackais_attrTafallbackais_attra__wrapped__areprTafallbackastra__str__abytesa__bytes__a__format__alta__lt__alea__le__aeqa__eq__anea__ne__agta__gt__agea__ge__ahasha__hash__aboola__bool__agetattrasetattradelattradira__dir__a__instancecheck__a__subclasscheck__alena__len__alength_hinta__length_hint__agetitemasetitema__setitem__adelitema__delitem__aiteranexta__next__areverseda__reversed__acontainsa__contains__aadda__add__asuba__sub__amula__mul__amatmula__matmul__atruediva__truediv__afloordiva__floordiv__amoda__mod__adivmoda__divmod__apowa__pow__alshifta__lshift__arshifta__rshift__aand_a__and__axora__xor__aor_a__or__a__radd__a__rsub__a__rmul__a__rmatmul__a__rtruediv__a__rfloordiv__a__rmod__a__rdivmod__a__rpow__a__rlshift__a__rrshift__a__rand__a__rxor__a__ror__aiadda__iadd__aisuba__isub__aimula__imul__aimatmula__imatmul__aitruediva__itruediv__aifloordiva__ifloordiv__aimoda__imod__aipowa__ipow__ailshifta__ilshift__airshifta__irshift__aianda__iand__aixora__ixor__aiora__ior__anega__neg__aposa__pos__aabsa__abs__ainverta__invert__acomplexa__complex__ainta__int__afloata__float__aindexa__index__arounda__round__atrunca__trunc__afloora__floor__aceila__ceil__a__enter__a__exit__a__await__a__aiter__a__anext__a__aenter__a__aexit__a__copy__adeepcopya__deepcopy__uwerkzeug\local.pyTaselfTaselfaargsakwargsTaselfaotheru<module werkzeug.local>Ta__class__Taselfanameaunbound_messageTaselfainstanceaargsakwargsTaselfanameavaluesTaselfainstanceaowneraobjafallbackTaselfacontext_varTaselfalocalsTaselfalocalanameaunbound_messageaget_namea_get_current_objectTaselfwfafallbackabind_fa__class__Taselfwfafallbackaclass_valueais_attrabind_fTaselfaowneranameTaselfanameavalueavaluesTaget_namealocalTaget_namealocalaunbound_messageTaobjalocalaunbound_messageaget_nameTwoTaopar_opTaenvironastart_responseaappaselfTaappaselfTainstanceaobjai_opTwfTainstanceaobjwfTaselfalocalTaselfaotherwfainstanceTwfainstanceTaselfaappaapplicationTaselfafuncTaselfastackarvTaselfaobjastackTaobjaotheraopTaopTalocalTaselfastack.werkzeug.middleware7a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_werkzeugu\not_existingamiddlewareTaNUITKA_PACKAGE_werkzeug_middlewareu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__uwerkzeug\middleware\__init__.pyu<module werkzeug.middleware>u.werkzeug.middleware.shared_dataaappaexportsacacheacache_timeoutaitemsutoo many values to unpack (expected 2)aselfaget_package_loaderaget_file_loaderaget_directory_loaderuunknown def uaappendafnmatchTafnmatchlu<lambda>uSharedDataMiddleware.__init__.<locals>.<lambda>ais_allowedafallback_mimetypeadisallowuSharedDataMiddleware._opener.<locals>.<lambda>afilenamearbadatetimeafromtimestampagetmtimeatimezoneautcTatzagetsizeuSharedDataMiddleware.get_file_loader.<locals>.<lambda>a_openeranowaimportlibautilafind_specaloaderaget_resource_readerDapathareturnustr | Noneutuple[str | None, _TOpener | None]uSharedDataMiddleware.get_package_loader.<locals>.loaderTnnasafe_joinapackage_pathabasenameareaderaopen_resourceaBytesIOuSharedDataMiddleware.get_package_loader.<locals>.loader.<locals>.<lambda>aresourceaload_timeagetvalueanameuSharedDataMiddleware.get_directory_loader.<locals>.loaderadirectoryafsencodeatimestampaadler32guwzsdm-w-aget_path_infoapathTnaendswithTw/w/astartswithasearch_pathafile_loaderareal_filenameamimetypesaguess_typeaget_content_typeuutf-8utoo many values to unpack (expected 3)aDateahttp_dateagenerate_etagaEtagw"uCache-Controlumax-age=u, publicais_resource_modifiedTalast_modifiedacloseu304 Not ModifiedaExpiresatimeTuCache-ControlapublicaheadersuContent-TypeuContent-LengthuLast-Modifiedu200 OKawrap_fileu
Serve Shared Static Files
=========================

.. autoclass:: SharedDataMiddleware
    :members: is_allowed

:copyright: 2007 Pallets
:license: BSD-3-Clause
a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsuimportlib.utilaosaposixpathwtTadatetimeTatimezoneTatimeazlibTaadler32ahttpTahttp_datelTais_resource_modifiedasecurityTasafe_joinautilsTaget_content_typeawsgiTaget_path_infoTawrap_fileaCallableaTupleaIOa_TOpeneraOptionala_TLoaderuwerkzeug.middleware.shared_dataa__module__uA WSGI middleware which provides static content for development
    environments or simple server setups. Its usage is quite simple::

        import os
        from werkzeug.middleware.shared_data import SharedDataMiddleware

        app = SharedDataMiddleware(app, {
            '/shared': os.path.join(os.path.dirname(__file__), 'shared')
        })

    The contents of the folder ``./shared`` will now be available on
    ``http://example.com/shared/``.  This is pretty useful during development
    because a standalone media server is not required. Files can also be
    mounted on the root folder and still continue to use the application because
    the shared data middleware forwards all unhandled requests to the
    application, even if the requests are below one of the shared folders.

    If `pkg_resources` is available you can also tell the middleware to serve
    files from package data::

        app = SharedDataMiddleware(app, {
            '/static': ('myapplication', 'static')
        })

    This will then serve the ``static`` folder in the `myapplication`
    Python package.

    The optional `disallow` parameter can be a list of :func:`~fnmatch.fnmatch`
    rules for files that are not accessible from the web.  If `cache` is set to
    `False` no caching headers are sent.

    Currently the middleware does not support non-ASCII filenames. If the
    encoding on the file system happens to match the encoding of the URI it may
    work but this could also be by accident. We strongly suggest using ASCII
    only file names for static files.

    The middleware will guess the mimetype using the Python `mimetype`
    module.  If it's unable to figure out the charset it will fall back
    to `fallback_mimetype`.

    :param app: the application to wrap.  If you don't want to wrap an
                application you can pass it :exc:`NotFound`.
    :param exports: a list or dict of exported files and folders.
    :param disallow: a list of :func:`~fnmatch.fnmatch` rules.
    :param cache: enable or disable caching headers.
    :param cache_timeout: the cache timeout in seconds for the headers.
    :param fallback_mimetype: The fallback mimetype for unknown files.

    .. versionchanged:: 1.0
        The default ``fallback_mimetype`` is
        ``application/octet-stream``. If a filename looks like a text
        mimetype, the ``utf-8`` charset is added to it.

    .. versionadded:: 0.6
        Added ``fallback_mimetype``.

    .. versionchanged:: 0.5
        Added ``cache_timeout``.
    aSharedDataMiddlewarea__qualname__Tntluapplication/octet-streamDaappaexportsadisallowacacheacache_timeoutafallback_mimetypeareturnaWSGIApplicationudict[str, str | tuple[str, str]] | t.Iterable[tuple[str, str | tuple[str, str]]]aNoneaboolaintastraNonea__init__uSharedDataMiddleware.__init__DafilenameareturnastrabooluSubclasses can override this method to disallow the access to
        certain files.  However by providing `disallow` in the constructor
        this method is overwritten.
        uSharedDataMiddleware.is_allowedDafilenameareturnastra_TOpeneruSharedDataMiddleware._openerDafilenameareturnastra_TLoaderuSharedDataMiddleware.get_file_loaderDapackageapackage_pathareturnastrpa_TLoaderuSharedDataMiddleware.get_package_loaderDadirectoryareturnastra_TLoaderuSharedDataMiddleware.get_directory_loaderDamtimeafile_sizeareal_filenameareturnadatetimeaintastrpuSharedDataMiddleware.generate_etagDaenvironastart_responseareturnaWSGIEnvironmentaStartResponseut.Iterable[bytes]a__call__uSharedDataMiddleware.__call__uwerkzeug\middleware\shared_data.pyTwxafnmatchadisallowTadisallowafnmatchTafilenameTwxafilenameaselfTafilenameaselfTaresourceTaresourceaload_timeTaload_timearesourceu<module werkzeug.middleware.shared_data>Taselfaenvironastart_responseapathafile_loaderasearch_pathaloaderareal_filenameaguessed_typeamime_typewfamtimeafile_sizeaheadersatimeoutaetagTaselfaappaexportsadisallowacacheacache_timeoutafallback_mimetypeakeyavaluealoaderafnmatchTaselfafilenameTaselfamtimeafile_sizeareal_filenameafn_stratimestampachecksumTaselfadirectoryaloaderTaselfapackageapackage_pathaload_timeaspecareaderaloaderTapathadirectoryaselfTadirectoryaselfTapathabasenamearesourceapackage_pathareaderTaload_timeapackage_pathareader.werkzeug.routing
OuWhen it comes to combining multiple controller or view functions
(however you want to call them) you need a dispatcher. A simple way
would be applying regular expression tests on the ``PATH_INFO`` and
calling registered callback functions that return the value then.

This module implements a much more powerful system than simple regular
expression matching because it can also convert values in the URLs and
build URLs.

Here a simple example that creates a URL map for an application with
two subdomains (www and kb) and some URL rules:

.. code-block:: python

    m = Map([
        # Static URLs
        Rule('/', endpoint='static/index'),
        Rule('/about', endpoint='static/about'),
        Rule('/help', endpoint='static/help'),
        # Knowledge Base
        Subdomain('kb', [
            Rule('/', endpoint='kb/index'),
            Rule('/browse/', endpoint='kb/browse'),
            Rule('/browse/<int:id>/', endpoint='kb/browse'),
            Rule('/browse/<int:id>/<int:page>', endpoint='kb/browse')
        ])
    ], default_subdomain='www')

If the application doesn't use subdomains it's perfectly fine to not set
the default subdomain and not use the `Subdomain` rule factory. The
endpoint in the rules can be anything, for example import paths or
unique identifiers. The WSGI application can use those endpoints to get the
handler for that URL.  It doesn't have to be a string at all but it's
recommended.

Now it's possible to create a URL adapter for one of the subdomains and
build URLs:

.. code-block:: python

    c = m.bind('example.com')

    c.build("kb/browse", dict(id=42))
    'http://kb.example.com/browse/42/'

    c.build("kb/browse", dict())
    'http://kb.example.com/browse/'

    c.build("kb/browse", dict(id=42, page=3))
    'http://kb.example.com/browse/42/3'

    c.build("static/about")
    '/about'

    c.build("static/index", force_external=True)
    'http://www.example.com/'

    c = m.bind('example.com', subdomain='kb')

    c.build("static/about")
    'http://www.example.com/about'

The first argument to bind is the server name *without* the subdomain.
Per default it will assume that the script is mounted on the root, but
often that's not the case so you can provide the real mount point as
second argument:

.. code-block:: python

    c = m.bind('example.com', '/applications/example')

The third argument can be the subdomain, if not given the default
subdomain is used.  For more details about binding have a look at the
documentation of the `MapAdapter`.

And here is how you can match URLs:

.. code-block:: python

    c = m.bind('example.com')

    c.match("/")
    ('static/index', {})

    c.match("/about")
    ('static/about', {})

    c = m.bind('example.com', '/', 'kb')

    c.match("/")
    ('kb/index', {})

    c.match("/browse/42/23")
    ('kb/browse', {'id': 42, 'page': 23})

If matching fails you get a ``NotFound`` exception, if the rule thinks
it's a good idea to redirect (for example because the URL was defined
to have a slash at the end but the request was missing that slash) it
will raise a ``RequestRedirect`` exception. Both are subclasses of
``HTTPException`` so you can use those errors as responses in the
application.

If matching succeeded but the URL rule was incompatible to the given
method (for example there were only rules for ``GET`` and ``HEAD`` but
routing tried to match a ``POST`` request) a ``MethodNotAllowed``
exception is raised.
a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_werkzeugu\not_existingaroutingTaNUITKA_PACKAGE_werkzeug_routingu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__aconvertersTaAnyConverterlaAnyConverterlTaBaseConverteraBaseConverterTaFloatConverteraFloatConverterTaIntegerConverteraIntegerConverterTaPathConverteraPathConverterTaUnicodeConverteraUnicodeConverterTaUUIDConverteraUUIDConverterTaValidationErroraValidationErroraexceptionsTaBuildErroraBuildErrorTaNoMatchaNoMatchTaRequestAliasRedirectaRequestAliasRedirectTaRequestPathaRequestPathTaRequestRedirectaRequestRedirectTaRoutingExceptionaRoutingExceptionTaWebsocketMismatchaWebsocketMismatchamapTaMapaMapTaMapAdapteraMapAdapteramatcherTaStateMachineMatcheraStateMachineMatcherarulesTaEndpointPrefixaEndpointPrefixTaparse_converter_argsaparse_converter_argsTaRuleaRuleTaRuleFactoryaRuleFactoryTaRuleTemplateaRuleTemplateTaRuleTemplateFactoryaRuleTemplateFactoryTaSubdomainaSubdomainTaSubmountaSubmountuwerkzeug\routing\__init__.pyu<module werkzeug.routing>u.werkzeug.routing.convertersa__class__a__init_subclass__aregexapart_isolatingw/amapaquoteDasafeu!$&'()*+,/:;=@a__init__w{uw}w,u[^/]aitemsu(?:w|areaescapew)u, asortedw'u' is not one of u<genexpr>uAnyConverter.to_url.<locals>.<genexpr>asigned_regexafixed_digitsaminamaxasignedaValidationErroranum_convertazfillu-?TaminamaxasignedauuidaUUIDa__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationslwtuurllib.parseTaquoteTEValueErrora__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uwerkzeug.routing.convertersa__module__uValidation error.  If a rule converter raises this exception the rule
    does not match the current URL and the next URL is tried.
    a__qualname__a__orig_bases__uBase class for all converters.

    .. versionchanged:: 2.3
        ``part_isolating`` defaults to ``False`` if ``regex`` contains a ``/``.
    aBaseConverteru[^/]+ldaweightDakwargsareturnut.AnyaNoneuBaseConverter.__init_subclass__DamapaargsakwargsareturnaMaput.Anyut.AnyaNoneuBaseConverter.__init__Davalueareturnastrut.Anyato_pythonuBaseConverter.to_pythonDavalueareturnut.Anyastrato_urluBaseConverter.to_urlaUnicodeConverteruThis converter is the default converter and accepts any string but
    only one path segment.  Thus the string can not include a slash.

    This is the default validator.

    Example::

        Rule('/pages/<page>'),
        Rule('/<string(length=2):lang_code>')

    :param map: the :class:`Map`.
    :param minlength: the minimum length of the string.  Must be greater
                      or equal 1.
    :param maxlength: the maximum length of the string.
    :param length: the exact length of the string.
    TlnnDamapaminlengthamaxlengthalengthareturnaMapaintuint | Noneuint | NoneaNoneuUnicodeConverter.__init__aAnyConverteruMatches one of the items provided.  Items can either be Python
    identifiers or strings::

        Rule('/<any(about, help, imprint, class, "foo,bar"):page_name>')

    :param map: the :class:`Map`.
    :param items: this function accepts the possible items as positional
                  arguments.

    .. versionchanged:: 2.2
        Value is validated when building a URL.
    DamapaitemsareturnaMapastraNoneuAnyConverter.__init__uAnyConverter.to_urlaPathConverteruLike the default :class:`UnicodeConverter`, but it also matches
    slashes.  This is useful for wikis and similar applications::

        Rule('/<path:wikipage>')
        Rule('/<path:wikipage>/edit')

    :param map: the :class:`Map`.
    u[^/].*?laNumberConverteruBaseclass for `IntegerConverter` and `FloatConverter`.

    :internal:
    l2aintut.Callable[[t.Any], t.Any]TlnnFDamapafixed_digitsaminamaxasignedareturnaMapaintuint | Noneuint | NoneaboolaNoneuNumberConverter.__init__uNumberConverter.to_pythonuNumberConverter.to_urlapropertyDareturnastruNumberConverter.signed_regexaIntegerConverteruThis converter only accepts integer values::

        Rule("/page/<int:page>")

    By default it only accepts unsigned, positive values. The ``signed``
    parameter will enable signed, negative values. ::

        Rule("/page/<int(signed=True):page>")

    :param map: The :class:`Map`.
    :param fixed_digits: The number of fixed digits in the URL. If you
        set this to ``4`` for example, the rule will only match if the
        URL looks like ``/0001/``. The default is variable length.
    :param min: The minimal value.
    :param max: The maximal value.
    :param signed: Allow signed (negative) values.

    .. versionadded:: 0.15
        The ``signed`` parameter.
    u\d+aFloatConverteruThis converter only accepts floating point values::

        Rule("/probability/<float:probability>")

    By default it only accepts unsigned, positive values. The ``signed``
    parameter will enable signed, negative values. ::

        Rule("/offset/<float(signed=True):offset>")

    :param map: The :class:`Map`.
    :param min: The minimal value.
    :param max: The maximal value.
    :param signed: Allow signed (negative) values.

    .. versionadded:: 0.15
        The ``signed`` parameter.
    u\d+\.\d+afloatTnnFDamapaminamaxasignedareturnaMapufloat | Noneufloat | NoneaboolaNoneuFloatConverter.__init__aUUIDConverteruThis converter only accepts UUID strings::

        Rule('/object/<uuid:identifier>')

    .. versionadded:: 0.10

    :param map: the :class:`Map`.
    u[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}Davalueareturnastruuuid.UUIDuUUIDConverter.to_pythonDavalueareturnuuuid.UUIDastruUUIDConverter.to_urladefaultastringaanyapathaDEFAULT_CONVERTERSut.Mapping[str, type[BaseConverter]]uwerkzeug\routing\converters.pyTa.0aitemu<module werkzeug.routing.converters>Ta__class__Taselfamapaitemsa__class__TaselfamapaargsakwargsTaselfamapaminamaxasigneda__class__Taselfamapafixed_digitsaminamaxasigneda__class__Taselfamapaminlengthamaxlengthalengthalength_regexamaxlength_valuea__class__Taclsakwargsa__class__TaselfTaselfavalueTaselfavalueavalue_numTaselfavalueavalid_valuesTaselfavalueavalue_str.werkzeug.routing.exceptionsfa__class__a__init__anew_urlaredirectacodeapath_infoamatched_valuesaendpointavaluesamethodaadapteraclosest_ruleDaruleareturnaRuleafloata_score_ruleuBuildError.closest_rule.<locals>._score_ruleamapa_rulesamaxTakeyf\(\?adifflibaSequenceMatcheraselfaratiof{Gz?aissubsetaargumentsamethodsuCould not build url for endpoint uu (w)u with values asortedw.asuggestedu Did you mean to use methods w?aunionadefaultsakeysu Did you forget to specify values u Did you mean u instead?ahave_match_forawebsocket_mismatcha__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationslwtaexceptionsTaBadRequestlaBadRequestTaHTTPExceptionaHTTPExceptionautilsTacached_propertyacached_propertyTaredirectTEExceptiona__prepare__aRoutingExceptiona__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uwerkzeug.routing.exceptionsa__module__uSpecial exceptions that require the application to redirect, notifying
    about missing urls, etc.

    :internal:
    a__qualname__a__orig_bases__aRequestRedirectuRaise if the map requests a redirect. This is for example the case if
    `strict_slashes` are activated and an url that requires a trailing slash.

    The attribute `new_url` contains the absolute destination url.
    lDanew_urlareturnastraNoneuRequestRedirect.__init__TnnDaenvironascopeareturnuWSGIEnvironment | Request | Noneudict[str, t.Any] | NoneaResponseaget_responseuRequestRedirect.get_responseaRequestPathuInternal exception.Tapath_infoa__slots__Dapath_infoareturnastraNoneuRequestPath.__init__aRequestAliasRedirectuThis rule is an alias and wants to redirect to the canonical URL.Damatched_valuesaendpointareturnut.Mapping[str, t.Any]ut.AnyaNoneuRequestAliasRedirect.__init__aBuildErroruRaised if the build system cannot find a URL for an endpoint with the
    values provided.
    TnDaendpointavaluesamethodaadapterareturnut.Anyut.Mapping[str, t.Any]ustr | NoneuMapAdapter | NoneaNoneuBuildError.__init__DareturnuRule | NoneuBuildError.suggestedDaadapterareturnuMapAdapter | NoneuRule | NoneuBuildError.closest_ruleDareturnastra__str__uBuildError.__str__aWebsocketMismatchuThe only matched rule is either a WebSocket and the request is
    HTTP, or the rule is HTTP and the request is a WebSocket.
    aNoMatchTahave_match_forawebsocket_mismatchDahave_match_forawebsocket_mismatchareturnuset[str]aboolaNoneuNoMatch.__init__uwerkzeug\routing\exceptions.pyu<module werkzeug.routing.exceptions>Ta__class__Taselfaendpointavaluesamethodaadaptera__class__Taselfahave_match_forawebsocket_mismatchTaselfamatched_valuesaendpointa__class__Taselfapath_infoa__class__Taselfanew_urla__class__Taselfamessageamissing_valuesTaruleaselfTaselfTaselfaadaptera_score_ruleTaselfaenvironascope.werkzeug.routing.map_OaStateMachineMatchera_matchera_rules_by_endpointa_remapalock_classa_remap_lockadefault_subdomainastrict_slashesaredirect_defaultsahost_matchingadefault_convertersacopyaconvertersaupdateasort_parametersasort_keyaselfaaddamerge_slashesaarguments_setaissubsetaargumentsuIterate over all rules and check if the endpoint expects
        the arguments provided.  This is for example useful if you have
        some URLs that expect a language code and others that do not and
        you want to wrap the builder a bit so that the current language
        code is automatically added if not provided but endpoints expect
        it.

        :param endpoint: the endpoint to check.
        :param arguments: this function accepts one or more arguments
                          as positional arguments.  Each one of them is
                          checked.
        avaluesa_rulesuIterate over all rules or the rules of an endpoint.

        :param endpoint: if provided only the rules for that endpoint
                         are returned.
        :return: an iterator
        aget_rulesabindabuild_onlyasetdefaultaendpointaappenduAdd a new rule or factory to the map and bind it.  Requires that the
        rule is not bound to another map.

        :param rulefactory: a :class:`Rule` or :class:`RuleFactory`
        aloweruhost matching enabled and a subdomain was providedw/apartitionTw:utoo many values to unpack (expected 3)aencodeTaidnaadecodeTaasciiaBadHostaMapAdapteruuReturn a new :class:`MapAdapter` with the details specified to the
        call.  Note that `script_name` will default to ``'/'`` if not further
        specified or `None`.  The `server_name` at least is a requirement
        because the HTTP RFC requires absolute URLs for redirects and so all
        redirect exceptions raised by Werkzeug will contain the full canonical
        URL.

        If no path_info is passed to :meth:`match` it will use the default path
        info passed to bind.  While this doesn't really make sense for
        manual bind calls, it's useful if you bind a map to a WSGI
        environment which already contains the path info.

        `subdomain` will default to the `default_subdomain` for this map if
        no defined. If there is no `default_subdomain` you cannot use the
        subdomain feature.

        .. versionchanged:: 1.0
            If ``url_scheme`` is ``ws`` or ``wss``, only WebSocket rules
            will match.

        .. versionchanged:: 0.15
            ``path_info`` defaults to ``'/'`` if ``None``.

        .. versionchanged:: 0.8
            ``query_args`` can be a string.

        .. versionchanged:: 0.7
            Added ``query_args``.
        a_get_environaget_hostuwsgi.url_schemeagetTaHTTP_CONNECTIONuasplitTw,TaHTTP_UPGRADEuawebsocketahttpsawssawsPawsahttpaendswithTu:80:nqnPawssahttpsTu:443:nqnTw.aserver_nameawarningsawarnuCurrent server name u doesn't match configured server name Dastacklevellu<invalid>w.Danameareturnastrustr | Nonea_get_wsgi_stringuMap.bind_to_environ.<locals>._get_wsgi_stringTaSCRIPT_NAMETaPATH_INFOTaQUERY_STRINGaMapaREQUEST_METHODTaquery_argsuLike :meth:`bind` but you can pass it an WSGI environment and it
        will fetch the information from that dictionary.  Note that because of
        limitations in the protocol there is no way to get the current
        subdomain and real `server_name` from the environment.  If you don't
        provide it, Werkzeug will use `SERVER_NAME` and `SERVER_PORT` (or
        `HTTP_HOST` if provided) as used `server_name` with disabled subdomain
        feature.

        If `subdomain` is `None` but an environment and a server name is
        provided it will calculate the current subdomain automatically.
        Example: `server_name` is ``'example.com'`` and the `SERVER_NAME`
        in the wsgi `environ` is ``'staging.dev.example.com'`` the calculated
        subdomain will be ``'staging.dev'``.

        If the object passed as environ has an environ attribute, the value of
        this attribute is used instead.  This allows you to pass request
        objects.  Additionally `PATH_INFO` added as a default of the
        :class:`MapAdapter` so that you don't have to pass the path info to
        the match method.

        .. versionchanged:: 1.0.0
            If the passed server name specifies port 443, it will match
            if the incoming scheme is ``https`` without a port.

        .. versionchanged:: 1.0.0
            A warning is shown when the passed server name does not
            match the incoming WSGI server name.

        .. versionchanged:: 0.8
           This will no longer raise a ValueError when an unexpected server
           name was passed.

        .. versionchanged:: 0.5
            previously this method accepted a bogus `calculate_subdomain`
            parameter that did not have any effect.  It was removed because
            of that.

        :param environ: a WSGI environment.
        :param server_name: an optional server name hint (see above).
        :param subdomain: optionally the current subdomain (see above).
        astripaupgradeu<genexpr>uMap.bind_to_environ.<locals>.<genexpr>aenva_wsgi_decoding_dancea__enter__a__exit__asortu<lambda>uMap.update.<locals>.<lambda>TakeyTnnnuCalled before matching and building to keep the compiled rules
        in the correct order after things changed.
        abuild_compare_keyaiter_rulesa__name__w(apformatw)amapTw/ascript_nameasubdomainaurl_schemeapath_infoadefault_methodaquery_argsPawssawsamatchutoo many values to unpack (expected 2)aRequestRedirectaHTTPExceptionuDoes the complete dispatching process.  `view_func` is called with
        the endpoint and a dict with the values for the view.  It should
        look up the view function, call it, and return a response object
        or WSGI application.  http exceptions are not caught by default
        so that applications can display nicer error messages by just
        catching them by hand.  If you want to stick with the default
        error messages you can pass it ``catch_http_exceptions=True`` and
        it will catch the http exceptions.

        Here a small example for the dispatch usage::

            from werkzeug.wrappers import Request, Response
            from werkzeug.wsgi import responder
            from werkzeug.routing import Map, Rule

            def on_index(request):
                return Response('Hello from the index')

            url_map = Map([Rule('/', endpoint='index')])
            views = {'index': on_index}

            @responder
            def application(environ, start_response):
                request = Request(environ)
                urls = url_map.bind_to_environ(environ)
                return urls.dispatch(lambda e, v: views[e](request, **v),
                                     catch_http_exceptions=True)

        Keep in mind that this method might return exception objects, too, so
        use :class:`Response.force_type` to get a response object.

        :param view_func: a function that is called with the endpoint as
                          first argument and the value dict as second.  Has
                          to dispatch to the actual view function with this
                          information.  (see above)
        :param path_info: the path info to use for matching.  Overrides the
                          path info specified on binding.
        :param method: the HTTP method used for matching.  Overrides the
                       method specified on binding.
        :param catch_http_exceptions: set to `True` to catch any of the
                                      werkzeug :class:`HTTPException`\s.
        aupperalstripaRequestPathaquoteDasafeu!$&'()*+,/:;=@amake_redirect_urlaRequestAliasRedirectamake_alias_redirect_urlw|amatched_valuesaNoMatchahave_match_foraMethodNotAllowedTavalid_methodsawebsocket_mismatchaWebsocketMismatchaNotFoundaget_default_redirectaredirect_toDamatchareturnut.Match[str]astra_handle_matchuMapAdapter.match.<locals>._handle_matcha_simple_rule_reasubaurljoinahttpu://uThe usage is simple: you just pass the match method the current
        path info as well as the method (which defaults to `GET`).  The
        following things can then happen:

        - you receive a `NotFound` exception that indicates that no URL is
          matching.  A `NotFound` exception is also a WSGI application you
          can call to get a default page not found page (happens to be the
          same object as `werkzeug.exceptions.NotFound`)

        - you receive a `MethodNotAllowed` exception that indicates that there
          is a match for this URL but not for the current request method.
          This is useful for RESTful applications.

        - you receive a `RequestRedirect` exception with a `new_url`
          attribute.  This exception is used to notify you about a request
          Werkzeug requests from your WSGI application.  This is for example the
          case if you request ``/foo`` although the correct URL is ``/foo/``
          You can use the `RequestRedirect` instance as response-like object
          similar to all other subclasses of `HTTPException`.

        - you receive a ``WebsocketMismatch`` exception if the only
          match is a WebSocket rule but the bind is an HTTP request, or
          if the match is an HTTP rule but the bind is a WebSocket
          request.

        - you get a tuple in the form ``(endpoint, arguments)`` if there is
          a match (unless `return_rule` is True, in which case you get a tuple
          in the form ``(rule, arguments)``)

        If the path info is not passed to the match method the default path
        info of the map is used (defaults to the root URL if not defined
        explicitly).

        All of the exceptions raised are subclasses of `HTTPException` so they
        can be used as WSGI responses. They will all render generic error or
        redirect pages.

        Here is a small example for matching:

        >>> m = Map([
        ...     Rule('/', endpoint='index'),
        ...     Rule('/downloads/', endpoint='downloads/index'),
        ...     Rule('/downloads/<int:id>', endpoint='downloads/show')
        ... ])
        >>> urls = m.bind("example.com", "/")
        >>> urls.match("/", "GET")
        ('index', {})
        >>> urls.match("/downloads/42")
        ('downloads/show', {'id': 42})

        And here is what happens on redirect and missing URLs:

        >>> urls.match("/downloads")
        Traceback (most recent call last):
          ...
        RequestRedirect: http://example.com/downloads/
        >>> urls.match("/missing")
        Traceback (most recent call last):
          ...
        NotFound: 404 Not Found

        :param path_info: the path info to use for matching.  Overrides the
                          path info specified on binding.
        :param method: the HTTP method used for matching.  Overrides the
                       method specified on binding.
        :param return_rule: return the rule that matched instead of just the
                            endpoint (defaults to `False`).
        :param query_args: optional query arguments that are used for
                           automatic redirects as string or dictionary.  It's
                           currently not possible to use the query arguments
                           for URL matching.
        :param websocket: Match WebSocket instead of HTTP requests. A
            websocket request has a ``ws`` or ``wss``
            :attr:`url_scheme`. This overrides that detection.

        .. versionadded:: 1.0
            Added ``websocket``.

        .. versionchanged:: 0.8
            ``query_args`` can be a string.

        .. versionadded:: 0.7
            Added ``query_args``.

        .. versionadded:: 0.6
            Added ``return_rule``.
        arvagroupTlarulea_convertersato_urluTest if a rule would match.  Works like `match` but returns `True`
        if the URL matches, or `False` if it does not exist.

        :param path_info: the path info to use for matching.  Overrides the
                          path info specified on binding.
        :param method: the HTTP method used for matching.  Overrides the
                       method specified on binding.
        Damethodu--avalid_methodsuReturns the valid methods that match for a given path.

        .. versionadded:: 0.7
        uFigures out the full host name for the given domain part.  The
        domain part is a subdomain in case host matching is disabled or
        a full host name.
        aprovides_defaults_forasuitable_foramethodadefaultsabuildTadomain_partuA helper that returns the URL to redirect to if it finds one.
        This is used for default redirecting only.

        :internal:
        a_urlencodeaencode_query_argsaurlunsplituCreates a redirect URL.

        :internal:
        Daappend_unknownaforce_externalFtw?Tudetected invalid alias setting. No canonical URL founduInternally called to make an alias redirect URL.a_partial_buildaappend_unknownllafirst_matchuHelper for :meth:`build`.  Returns subdomain and path for the
        rule that accepts this endpoint, values and method.

        :internal:
        aMultiDictaitemsaBuildErrorarstripw:u//:nqnuBuilding URLs works pretty much the other way round.  Instead of
        `match` you call `build` and pass it the endpoint and a dict of
        arguments for the placeholders.

        The `build` function also accepts an argument called `force_external`
        which, if you set it to `True` will force external URLs. Per default
        external URLs (include the server name) will only be used if the
        target URL is on a different subdomain.

        >>> m = Map([
        ...     Rule('/', endpoint='index'),
        ...     Rule('/downloads/', endpoint='downloads/index'),
        ...     Rule('/downloads/<int:id>', endpoint='downloads/show')
        ... ])
        >>> urls = m.bind("example.com", "/")
        >>> urls.build("index", {})
        '/'
        >>> urls.build("downloads/show", {'id': 42})
        '/downloads/42'
        >>> urls.build("downloads/show", {'id': 42}, force_external=True)
        'http://example.com/downloads/42'

        Because URLs cannot contain non ASCII data you will always get
        bytes back.  Non ASCII characters are urlencoded with the
        charset defined on the map instance.

        Additional values are converted to strings and appended to the URL as
        URL querystring parameters:

        >>> urls.build("index", {'q': 'My Searchstring'})
        '/?q=My+Searchstring'

        When processing those additional values, lists are furthermore
        interpreted as multiple values (as per
        :py:class:`werkzeug.datastructures.MultiDict`):

        >>> urls.build("index", {'q': ['a', 'b', 'c']})
        '/?q=a&q=b&q=c'

        Passing a ``MultiDict`` will also add multiple values:

        >>> urls.build("index", MultiDict((('p', 'z'), ('q', 'a'), ('q', 'b'))))
        '/?p=z&q=a&q=b'

        If a rule does not exist when building a `BuildError` exception is
        raised.

        The build method accepts an argument called `method` which allows you
        to specify the method you want to have an URL built for if you have
        different methods for the same endpoint specified.

        :param endpoint: the endpoint of the URL to build.
        :param values: the values for the URL to build.  Unhandled values are
                       appended to the URL as query parameters.
        :param method: the HTTP method for the rule if there are different
                       URLs for different methods on the same endpoint.
        :param force_external: enforce full canonical external URLs. If the URL
                               scheme is not provided, this will generate
                               a protocol-relative URL.
        :param append_unknown: unknown parameters are appended to the generated
                               URL as query string argument.  Disable this
                               if you want the builder to ignore those.
        :param url_scheme: Scheme to use in place of the bound
            :attr:`url_scheme`.

        .. versionchanged:: 2.0
            Added the ``url_scheme`` parameter.

        .. versionadded:: 0.6
           Added the ``append_unknown`` parameter.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtapprintTapformatathreadingTaLockaLockuurllib.parseTaquoteTaurljoinTaurlunsplita_internalTa_get_environlTa_wsgi_decoding_danceadatastructuresTaImmutableDictaImmutableDictTaMultiDictaexceptionsTaBadHostTaHTTPExceptionTaMethodNotAllowedTaNotFoundaurlsTa_urlencodeawsgiTaget_hostTaDEFAULT_CONVERTERSaDEFAULT_CONVERTERSTaBuildErrorTaNoMatchTaRequestAliasRedirectTaRequestPathTaRequestRedirectTaWebsocketMismatchamatcherTaStateMachineMatcherarulesTa_simple_rule_reTaRuleaRuleuwerkzeug.routing.mapa__module__uThe map class stores all the URL rules and some configuration
    parameters.  Some of the configuration values are only stored on the
    `Map` instance since those affect all rules, others are just defaults
    and can be overridden for each rule.  Note that you have to specify all
    arguments besides the `rules` as keyword arguments!

    :param rules: sequence of url rules for this map.
    :param default_subdomain: The default subdomain for rules without a
                              subdomain defined.
    :param strict_slashes: If a rule ends with a slash but the matched
        URL does not, redirect to the URL with a trailing slash.
    :param merge_slashes: Merge consecutive slashes when matching or
        building URLs. Matches will redirect to the normalized URL.
        Slashes in variable parts are not merged.
    :param redirect_defaults: This will redirect to the default rule if it
                              wasn't visited that way. This helps creating
                              unique URLs.
    :param converters: A dict of converters that adds additional converters
                       to the list of converters. If you redefine one
                       converter this will override the original one.
    :param sort_parameters: If set to `True` the url parameters are sorted.
                            See `url_encode` for more details.
    :param sort_key: The sort key function for `url_encode`.
    :param host_matching: if set to `True` it enables the host matching
                          feature and disables the subdomain one.  If
                          enabled the `host` parameter to rules is used
                          instead of the `subdomain` one.

    .. versionchanged:: 3.0
        The ``charset`` and ``encoding_errors`` parameters were removed.

    .. versionchanged:: 1.0
        If ``url_scheme`` is ``ws`` or ``wss``, only WebSocket rules will match.

    .. versionchanged:: 1.0
        The ``merge_slashes`` parameter was added.

    .. versionchanged:: 0.7
        The ``encoding_errors`` and ``host_matching`` parameters were added.

    .. versionchanged:: 0.5
        The ``sort_parameters`` and ``sort_key``  paramters were added.
    a__qualname__TnutppnFnFD
arulesadefault_subdomainastrict_slashesamerge_slashesaredirect_defaultsaconvertersasort_parametersasort_keyahost_matchingareturnut.Iterable[RuleFactory] | Noneastraboolpput.Mapping[str, type[BaseConverter]] | Noneaboolut.Callable[[t.Any], t.Any] | NoneaboolaNonea__init__uMap.__init__DareturnabooluMap.merge_slashesasetterDavalueareturnaboolaNoneDaendpointaargumentsareturnut.Anyastraboolais_endpoint_expectinguMap.is_endpoint_expectingDareturnulist[Rule]uMap._rulesTnDaendpointareturnut.Any | Noneut.Iterator[Rule]uMap.iter_rulesDarulefactoryareturnaRuleFactoryaNoneuMap.addTnnahttpaGETnnDaserver_nameascript_nameasubdomainaurl_schemeadefault_methodapath_infoaquery_argsareturnastrustr | Noneustr | Noneastrpustr | Noneut.Mapping[str, t.Any] | str | NoneaMapAdapteruMap.bindTnnDaenvironaserver_nameasubdomainareturnuWSGIEnvironment | Requestustr | Noneustr | NoneaMapAdapterabind_to_environuMap.bind_to_environDareturnaNoneuMap.updateDareturnastra__repr__uMap.__repr__uReturned by :meth:`Map.bind` or :meth:`Map.bind_to_environ` and does
    the URL matching and building based on runtime information.
    Damapaserver_nameascript_nameasubdomainaurl_schemeapath_infoadefault_methodaquery_argsaMapastrpustr | Noneastrpput.Mapping[str, t.Any] | str | NoneuMapAdapter.__init__TnnFDaview_funcapath_infoamethodacatch_http_exceptionsareturnut.Callable[[str, t.Mapping[str, t.Any]], WSGIApplication]ustr | Noneustr | NoneaboolaWSGIApplicationadispatchuMapAdapter.dispatchaoverloadTnnFnnDapath_infoamethodareturn_ruleaquery_argsawebsocketareturnustr | Noneustr | Noneut.Literal[False]ut.Mapping[str, t.Any] | str | Noneubool | Noneutuple[t.Any, t.Mapping[str, t.Any]]uMapAdapter.matchTnntnnDapath_infoamethodareturn_ruleaquery_argsawebsocketareturnustr | Noneustr | Noneut.Literal[True]ut.Mapping[str, t.Any] | str | Noneubool | Noneutuple[Rule, t.Mapping[str, t.Any]]Dapath_infoamethodareturn_ruleaquery_argsawebsocketareturnustr | Noneustr | Noneaboolut.Mapping[str, t.Any] | str | Noneubool | Noneutuple[t.Any | Rule, t.Mapping[str, t.Any]]Dapath_infoamethodareturnustr | Noneustr | NoneaboolatestuMapAdapter.testDapath_infoareturnustr | Noneut.Iterable[str]aallowed_methodsuMapAdapter.allowed_methodsDadomain_partareturnustr | NoneastruMapAdapter.get_hostDaruleamethodavaluesaquery_argsareturnaRuleastrut.MutableMapping[str, t.Any]ut.Mapping[str, t.Any] | strustr | NoneuMapAdapter.get_default_redirectDaquery_argsareturnut.Mapping[str, t.Any] | strastruMapAdapter.encode_query_argsDapath_infoaquery_argsadomain_partareturnastrut.Mapping[str, t.Any] | str | Noneustr | NoneastruMapAdapter.make_redirect_urlDapathaendpointavaluesamethodaquery_argsareturnastrut.Anyut.Mapping[str, t.Any]astrut.Mapping[str, t.Any] | strastruMapAdapter.make_alias_redirect_urlDaendpointavaluesamethodaappend_unknownareturnut.Anyut.Mapping[str, t.Any]ustr | Noneaboolutuple[str, str, bool] | NoneuMapAdapter._partial_buildTnnFtnDaendpointavaluesamethodaforce_externalaappend_unknownaurl_schemeareturnut.Anyut.Mapping[str, t.Any] | Noneustr | Noneaboolpustr | NoneastruMapAdapter.builduwerkzeug\routing\map.pyTa.0wvTwxu<module werkzeug.routing.map>Ta__class__Taselfarulesadefault_subdomainastrict_slashesamerge_slashesaredirect_defaultsaconvertersasort_parametersasort_keyahost_matchingarulefactoryTaselfamapaserver_nameascript_nameasubdomainaurl_schemeapath_infoadefault_methodaquery_argsTaselfarulesTanameavalaenvTaenvTamatchavaluearvaruleTarulearvTaselfaendpointavaluesamethodaappend_unknownarvafirst_matcharuleabuild_rvTaselfTaselfarulefactoryaruleTaselfapath_infoweTaselfaserver_nameascript_nameasubdomainaurl_schemeadefault_methodapath_infoaquery_argsaport_sepaportweTaselfaenvironaserver_nameasubdomainaenvawsgi_server_nameaschemeaupgradeacur_server_nameareal_server_nameaoffseta_get_wsgi_stringascript_nameapath_infoaquery_argsTaselfaendpointavaluesamethodaforce_externalaappend_unknownaurl_schemearvadomain_partapathawebsocketahostasecureaschemeTaselfaview_funcapath_infoamethodacatch_http_exceptionsaendpointaargsweTaselfaquery_argsTaselfaruleamethodavaluesaquery_argswradomain_partapathTaselfadomain_partasubdomainTaselfaendpointaargumentsaarguments_setaruleTaselfaendpointTaselfapathaendpointavaluesamethodaquery_argsaurlTaselfapath_infoaquery_argsadomain_partaquery_straschemeahostapathTaselfapath_infoamethodareturn_ruleaquery_argsawebsocketTaselfapath_infoamethodareturn_ruleaquery_argsawebsocketadomain_partapath_partaresultweanew_patharulearvaredirect_urla_handle_matchanetlocTaselfavalueTaselfapath_infoamethod.werkzeug.routing.matcher0
aStatea_rootamerge_slashesa_partsastaticastateasetdefaultacontentadynamicutoo many values to unpack (expected 2)aappendarulesDastateareturnaStateaNonea_update_stateuStateMachineMatcher.update.<locals>._update_stateasortu<lambda>uStateMachineMatcher.update.<locals>._update_state.<locals>.<lambda>TakeyavalueslaweightDastateapartsavaluesareturnaStateulist[str]ulist[str]utuple[Rule, list[str]] | Nonea_matchuStateMachineMatcher.match.<locals>._matchasplitTw/aSlashRequiredaRequestPathuw/areasubu/{2,}?aNoMatchawebsocket_mismatcha_convertersakeysaruleato_pythonaValidationErrorahave_match_foraresultadefaultsaaliasamaparedirect_defaultsaRequestAliasRedirectaendpointamethodsamethodaupdateawebsocketastrict_slashes:lnnapartafinalacompileamatchasuffixedagroupsqasortedagroupdictaitemsuStateMachineMatcher.match.<locals>._match.<locals>.<lambda>:nlna__werkzeug_a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtadataclassesTadataclassadataclassTafieldafieldaconvertersTaValidationErrorlaexceptionsTaNoMatchTaRequestAliasRedirectTaRequestPathTaRuleaRuleTaRulePartaRulePartTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uwerkzeug.routing.matchera__module__a__qualname__a__orig_bases__uA representation of a rule state.

    This includes the *rules* that correspond to the state and the
    possible *static* and *dynamic* transitions to the next state.
    a__annotations__TOlistTadefault_factoryulist[tuple[RulePart, State]]ulist[Rule]TOdictudict[str, State]aStateMachineMatcherDamerge_slashesareturnaboolaNonea__init__uStateMachineMatcher.__init__DaruleareturnaRuleaNoneaadduStateMachineMatcher.addDareturnaNoneuStateMachineMatcher.updateDadomainapathamethodawebsocketareturnastrppaboolutuple[Rule, t.MutableMapping[str, t.Any]]uStateMachineMatcher.matchuwerkzeug\routing\matcher.pyTaentryu<module werkzeug.routing.matcher>Ta__class__Taselfamerge_slashesTastateapartsavaluesahave_match_forawebsocket_mismatcharuleapartarvatest_partanew_stateatargetaremainingamatchasuffixaconverter_groupsagroupsamethodawebsocketa_matchTa_matchahave_match_foramethodawebsocketawebsocket_mismatchTastateanew_statew_a_update_stateTa_update_stateTaselfaruleastateapartatest_partanew_stateTaselfadomainapathamethodawebsocketahave_match_forawebsocket_mismatcha_matcharvaruleavaluesaresultanameavalueTaselfastatea_update_state.werkzeug.routing.rulesEaindexuFind the *target* in *value* after *pos*.

    Returns the *value* length if *target* isn't found.
    a_PYTHON_CONSTANTSTOintOfloatavalue:nln:qnnlu"':lqnw,a_converter_args_reafinditerastartapositionuCannot parse converter argument 'uw'agroupTastringvalTavaluea_pythonizeTanameaargsakwargsaenduSubclasses of `RuleFactory` have to override this method and return
        an iterable of rules.asubdomainarulesaselfaget_rulesamapaemptyuSubdomain.get_rulesarstripTw/apatharuleuSubmount.get_rulesaprefixaendpointuEndpointPrefix.get_rulesaRuleTemplateFactoryacontextadefaultsaitemsutoo many values to unpack (expected 2)aTemplateasubstituteanew_defaultsaRuleamethodsabuild_onlyastrict_slashesuRuleTemplateFactory.get_rulesaastaparseabodyaExpruAST node is of type a__name__u, not awalkaNamew.aiduast parse and prefix names with `.` to avoid collision with user varsastartswithuURL rule 'u' must start with a slash.aendswithais_leafais_branchamerge_slashesahostaaliasawebsocketu'methods' should be a list of strings.aupperaHEADaGETaaddTaHEADSaGETaHEADaOPTIONSuWebSocket rules can only use 'GET', 'HEAD', and 'OPTIONS' methods.aredirect_toaargumentsa_convertersa_tracea_partsaget_empty_kwargsu
        Return an unbound copy of this rule.

        This can be useful if want to reuse an already bound URL for another
        map.  See ``get_empty_kwargs`` to override what keyword arguments are
        provided to the new copy.
        u
        Provides kwargs for instantiating empty copy with empty()

        Use this method to provide custom keyword arguments to the subclass of
        ``Rule`` when calling ``some_rule.empty()``.  Helpful when the subclass
        has custom keyword arguments that are needed at instantiation.

        Must return a ``dict`` that will be provided as kwargs to the new
        instance of ``Rule``, following the initial ``self.rule`` value which
        is always provided as the first, required positional argument.
        uRule.get_rulesabindDarebindtuRebinds and refreshes the URL.  Call this if you modified the
        rule in place.

        :internal:
        uurl rule u already bound to map adefault_subdomainacompileuBind the url to a map and create a regular expression based on
        the information from the rule itself and the defaults from the map.

        :internal:
        aconvertersuthe converter u does not existuLooks up the converter for the given parameter.

        .. versionadded:: 0.9
        aiter_multi_itemsasort_parametersasortedasort_keyTakeya_urlencodeaposa_part_reamatchumalformed url rule: agroupdictastaticastatic_weightsaappendacontentareaescapeavariableaparse_converter_argsaget_converteraconverteradefaultapart_isolatingu(?P<__werkzeug_aconvertor_numberw>aregexw)laargument_weightsaweightaslashTTFw/afinalw/u\ZaWeightingaRulePartTacontentafinalastaticasuffixedaweightq:nqnu(?<!/)(/?)a_parse_ruleuRule._parse_ruleTurule not boundahost_matchingaextendTTFw|asubu/{2,}?a_compile_builderTFa__get__a_buildTta_build_unknownuCompiles the regular expression and stores it.u<string>aexecw|aoplaurl_opsato_urlaquoteDasafeu!$&'()*+,/:;=@Daelemareturnastruast.Calla_convertuRule._compile_builder.<locals>._convertDaopsareturnulist[tuple[bool, str]]ulist[ast.expr]uRule._compile_builder.<locals>._partsa_IF_KWARGS_URL_ENCODE_ASTa_URL_ENCODE_AST_NAMESDapartsareturnulist[ast.expr]uast.expra_joinuRule._compile_builder.<locals>._joinaReturnaTupleaLoada_prefix_namesudef _(): passaFunctionDefu<builder:anameaargTu.selfnafunc_astTu.kwargsnakwargaConstantTualinenoa_attributesaend_linenoacol_offsetaend_col_offsetu<werkzeug routing>a_get_func_codea_CALL_CONVERTER_CODE_FMTaformatTaelemaCall:lnnaretaJoinedStraValidationErroruAssembles the relative url for that rule and the subdomain.
        If building doesn't work for some reasons `None` is returned.

        :internal:
        uCheck if this rule has defaults for a given rule.

        :internal:
        uCheck if the dict of values has enough data for url generation.

        :internal:
        uThe build compare key for sorting.

        :internal:
        w<u (unbound)>apartsu (u, w u -> a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtadataclassesTadataclassadataclassastringTaTemplateaCodeTypeuurllib.parseTaquoteadatastructuresTaiter_multi_itemslaurlsTa_urlencodeTaValidationErroraNamedTuplea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uwerkzeug.routing.rulesa__module__a__qualname__a__annotations__aintanumber_static_weightsulist[tuple[int, int]]anumber_argument_weightsulist[int]a__orig_bases__uA part of a rule.

    Rules can be represented by parts as delimited by `/` with
    instances of this class representing those parts. The *content* is
    either the raw content if *static* or a regex string to match
    against. The *weight* can be used to order parts when matching.

    astraboolasuffixedu
    (?:
        (?P<slash>/)                                 # a slash
      |
        (?P<static>[^</]+)                           # static rule data
      |
        (?:
          <
            (?:
              (?P<converter>[a-zA-Z_][a-zA-Z0-9_]*)   # converter name
              (?:\((?P<arguments>.*?)\))?             # converter arguments
              :                                       # variable delimiter
            )?
            (?P<variable>[a-zA-Z_][a-zA-Z0-9_]*)      # variable name
           >
        )
    )
    aVERBOSETu<([^>]+)>a_simple_rule_reu
    \s*
    ((?P<name>\w+)\s*=\s*)?
    (?P<value>
        True|False|
        \d+.\d+|
        \d+.|
        \d+|
        [\w\d_.]+|
        [urUR]?(?P<stringval>"[^"]*?"|'[^']*')
    )\s*,
    DaNoneaTrueaFalsentFDavalueatargetaposareturnastrpaintpa_findDavalueareturnastruNone | bool | int | float | strDaargstrareturnastrutuple[tuple[t.Any, ...], dict[str, t.Any]]uAs soon as you have more complex URL setups it's a good idea to use rule
    factories to avoid repetitive tasks.  Some of them are builtin, others can
    be added by subclassing `RuleFactory` and overriding `get_rules`.
    aRuleFactoryDamapareturnaMaput.Iterable[Rule]uRuleFactory.get_rulesaSubdomainuAll URLs provided by this factory have the subdomain set to a
    specific domain. For example if you want to use the subdomain for
    the current language this can be a good setup::

        url_map = Map([
            Rule('/', endpoint='#select_language'),
            Subdomain('<string(length=2):lang_code>', [
                Rule('/', endpoint='index'),
                Rule('/about', endpoint='about'),
                Rule('/help', endpoint='help')
            ])
        ])

    All the rules except for the ``'#select_language'`` endpoint will now
    listen on a two letter long subdomain that holds the language code
    for the current request.
    Dasubdomainarulesareturnastrut.Iterable[RuleFactory]aNonea__init__uSubdomain.__init__DamapareturnaMaput.Iterator[Rule]aSubmountuLike `Subdomain` but prefixes the URL rule with a given string::

        url_map = Map([
            Rule('/', endpoint='index'),
            Submount('/blog', [
                Rule('/', endpoint='blog/index'),
                Rule('/entry/<entry_slug>', endpoint='blog/show')
            ])
        ])

    Now the rule ``'blog/show'`` matches ``/blog/entry/<entry_slug>``.
    Dapatharulesareturnastrut.Iterable[RuleFactory]aNoneuSubmount.__init__aEndpointPrefixuPrefixes all endpoints (which must be strings for this factory) with
    another string. This can be useful for sub applications::

        url_map = Map([
            Rule('/', endpoint='index'),
            EndpointPrefix('blog/', [Submount('/blog', [
                Rule('/', endpoint='index'),
                Rule('/entry/<entry_slug>', endpoint='show')
            ])])
        ])
    Daprefixarulesareturnastrut.Iterable[RuleFactory]aNoneuEndpointPrefix.__init__uReturns copies of the rules wrapped and expands string templates in
    the endpoint, rule, defaults or subdomain sections.

    Here a small example for such a rule template::

        from werkzeug.routing import Map, Rule, RuleTemplate

        resource = RuleTemplate([
            Rule('/$name/', endpoint='$name.list'),
            Rule('/$name/<int:id>', endpoint='$name.show')
        ])

        url_map = Map([resource(name='user'), resource(name='page')])

    When a rule template is called the keyword arguments are used to
    replace the placeholders in all the string parameters.
    aRuleTemplateDarulesareturnut.Iterable[Rule]aNoneuRuleTemplate.__init__Daargsakwargsareturnut.Anyut.AnyaRuleTemplateFactorya__call__uRuleTemplate.__call__uA factory that fills in template variables into rules.  Used by
    `RuleTemplate` internally.

    :internal:
    Darulesacontextareturnut.Iterable[RuleFactory]udict[str, t.Any]aNoneuRuleTemplateFactory.__init__aTypeVaraASTTa_ASTTTabounda_ASTTDasrcaexpected_typeareturnastrutype[_ASTT]a_ASTTuself._converters[{elem!r}].to_url()uif kwargs:
    params = self._encode_query_vars(kwargs)
    q = "?" if params else ""
else:
    q = params = ""
a_IF_KWARGS_URL_ENCODE_CODEaIfwqaparamsuA Rule represents one URL pattern.  There are some options for `Rule`
    that change the way it behaves and are passed to the `Rule` constructor.
    Note that besides the rule-string all arguments *must* be keyword arguments
    in order to not break the application on Werkzeug upgrades.

    `string`
        Rule strings basically are just normal URL paths with placeholders in
        the format ``<converter(arguments):name>`` where the converter and the
        arguments are optional.  If no converter is defined the `default`
        converter is used which means `string` in the normal configuration.

        URL rules that end with a slash are branch URLs, others are leaves.
        If you have `strict_slashes` enabled (which is the default), all
        branch URLs that are matched without a trailing slash will trigger a
        redirect to the same URL with the missing slash appended.

        The converters are defined on the `Map`.

    `endpoint`
        The endpoint for this rule. This can be anything. A reference to a
        function, a string, a number etc.  The preferred way is using a string
        because the endpoint is used for URL generation.

    `defaults`
        An optional dict with defaults for other rules with the same endpoint.
        This is a bit tricky but useful if you want to have unique URLs::

            url_map = Map([
                Rule('/all/', defaults={'page': 1}, endpoint='all_entries'),
                Rule('/all/page/<int:page>', endpoint='all_entries')
            ])

        If a user now visits ``http://example.com/all/page/1`` they will be
        redirected to ``http://example.com/all/``.  If `redirect_defaults` is
        disabled on the `Map` instance this will only affect the URL
        generation.

    `subdomain`
        The subdomain rule string for this rule. If not specified the rule
        only matches for the `default_subdomain` of the map.  If the map is
        not bound to a subdomain this feature is disabled.

        Can be useful if you want to have user profiles on different subdomains
        and all subdomains are forwarded to your application::

            url_map = Map([
                Rule('/', subdomain='<username>', endpoint='user/homepage'),
                Rule('/stats', subdomain='<username>', endpoint='user/stats')
            ])

    `methods`
        A sequence of http methods this rule applies to.  If not specified, all
        methods are allowed. For example this can be useful if you want different
        endpoints for `POST` and `GET`.  If methods are defined and the path
        matches but the method matched against is not in this list or in the
        list of another rule for that path the error raised is of the type
        `MethodNotAllowed` rather than `NotFound`.  If `GET` is present in the
        list of methods and `HEAD` is not, `HEAD` is added automatically.

    `strict_slashes`
        Override the `Map` setting for `strict_slashes` only for this rule. If
        not specified the `Map` setting is used.

    `merge_slashes`
        Override :attr:`Map.merge_slashes` for this rule.

    `build_only`
        Set this to True and the rule will never match but will create a URL
        that can be build. This is useful if you have resources on a subdomain
        or folder that are not handled by the WSGI application (like static data)

    `redirect_to`
        If given this must be either a string or callable.  In case of a
        callable it's called with the url adapter that triggered the match and
        the values of the URL as keyword arguments and has to return the target
        for the redirect, otherwise it has to be a string with placeholders in
        rule syntax::

            def foo_with_slug(adapter, id):
                # ask the database for the slug for the old id.  this of
                # course has nothing to do with werkzeug.
                return f'foo/{Foo.get_slug_for_id(id)}'

            url_map = Map([
                Rule('/foo/<slug>', endpoint='foo'),
                Rule('/some/old/url/<slug>', redirect_to='foo/<slug>'),
                Rule('/other/old/url/<int:id>', redirect_to=foo_with_slug)
            ])

        When the rule is matched the routing system will raise a
        `RequestRedirect` exception with the target for the redirect.

        Keep in mind that the URL will be joined against the URL root of the
        script so don't use a leading slash on the target URL unless you
        really mean root of that domain.

    `alias`
        If enabled this rule serves as an alias for another rule with the same
        endpoint and arguments.

    `host`
        If provided and the URL map has host matching enabled this can be
        used to provide a match rule for the whole host.  This also means
        that the subdomain feature is disabled.

    `websocket`
        If ``True``, this rule is only matches for WebSocket (``ws://``,
        ``wss://``) requests. By default, rules will only match for HTTP
        requests.

    .. versionchanged:: 2.1
        Percent-encoded newlines (``%0a``), which are decoded by WSGI
        servers, are considered when routing instead of terminating the
        match early.

    .. versionadded:: 1.0
        Added ``websocket``.

    .. versionadded:: 1.0
        Added ``merge_slashes``.

    .. versionadded:: 0.7
        Added ``alias`` and ``host``.

    .. versionchanged:: 0.6.1
       ``HEAD`` is added to ``methods`` if ``GET`` is present.
    TnnnFnnnnFnFD
astringadefaultsasubdomainamethodsabuild_onlyaendpointastrict_slashesamerge_slashesaredirect_toaaliasahostawebsocketareturnastrut.Mapping[str, t.Any] | Noneustr | Noneut.Iterable[str] | Noneaboolut.Any | Noneubool | Noneubool | Noneustr | t.Callable[..., str] | Noneaboolustr | NoneaboolaNoneuRule.__init__DareturnaRuleuRule.emptyDareturnut.Mapping[str, t.Any]uRule.get_empty_kwargsDareturnaNonearefreshuRule.refreshDamaparebindareturnaMapaboolaNoneuRule.bindDavariable_nameaconverter_nameaargsakwargsareturnastrputuple[t.Any, ...]ut.Mapping[str, t.Any]aBaseConverteruRule.get_converterDaquery_varsareturnut.Mapping[str, t.Any]astra_encode_query_varsuRule._encode_query_varsDaruleareturnastrut.Iterable[RulePart]uRule.compileastaticmethodDacodeanameareturnaCodeTypeastrut.Callable[..., tuple[str, str]]uRule._get_func_codeDaappend_unknownareturnaboolut.Callable[..., tuple[str, str]]uRule._compile_builderDavaluesaappend_unknownareturnut.Mapping[str, t.Any]aboolutuple[str, str] | NoneabuilduRule.buildDaruleareturnaRuleaboolaprovides_defaults_foruRule.provides_defaults_forTnDavaluesamethodareturnut.Mapping[str, t.Any]ustr | Noneaboolasuitable_foruRule.suitable_forDareturnutuple[int, int, int]abuild_compare_keyuRule.build_compare_keyDaotherareturnaobjectaboola__eq__uRule.__eq__a__hash__Dareturnastra__str__uRule.__str__a__repr__uRule.__repr__uwerkzeug\routing\rules.pyu<module werkzeug.routing.rules>Ta__class__TaselfaargsakwargsTaselfaotherTaselfaprefixarulesT
aselfastringadefaultsasubdomainamethodsabuild_onlyaendpointastrict_slashesamerge_slashesaredirect_toaaliasahostawebsocketTaselfarulesTaselfarulesacontextTaselfasubdomainarulesTaselfapatharulesTaselfapartsais_dynamicadataaparts_stramethodsTaselfTaselfaappend_unknownadom_opsaurl_opsabodyadefaultsaoplais_dynamicadataa_converta_partsadom_partsaurl_partsa_joinapargsakargsafunc_astaargw_amoduleanodeacodeTaelemaretTaselfaquery_varsaitemsTavalueatargetaposTacodeanameaglobsalocsTapartsTaselfaruleastatic_weightsacontentastaticaargument_weightsafinalaconvertor_numberaposamatchadataac_argsac_kwargsaconvobjaweightasuffixedTaopsapartsaretwpa_convertTa_convertTasrcaexpected_typeatreeanodeTavalueaconvertTaselfamaparebindTaselfavaluesaappend_unknownTaselfadomain_rulearuleTaselfavariable_nameaconverter_nameaargsakwargsTaselfadefaultsTaselfamaparulefactoryaruleTaselfamapTaselfamaparulefactoryaruleanew_defaultsasubdomainakeyavalueanew_endpointTaargstraargsakwargsapositionaitemavalueanameTaselfaruleTaselfavaluesamethodadefaultsakeyavalue.werkzeug.sansio'a__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_werkzeugu\not_existingasansioTaNUITKA_PACKAGE_werkzeug_sansiou\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__uwerkzeug\sansio\__init__.pyu<module werkzeug.sansio>u.werkzeug.sansio.httpWagenerate_etaguboth data and etag givenaparse_datea_dt_as_utcareplaceTlTamicrosecondaparse_if_range_headeradateaunquote_etagutoo many values to unpack (expected 2)acastaetagaparse_etagsacontainsacontains_weakais_stronguConvenience method for conditional requests.
    :param http_range: Range HTTP header
    :param http_if_range: If-Range HTTP header
    :param http_if_modified_since: If-Modified-Since HTTP header
    :param http_if_none_match: If-None-Match HTTP header
    :param http_if_match: If-Match HTTP header
    :param etag: the etag for the response for comparison.
    :param data: or alternatively the data of the response to automatically
                 generate an etag using :func:`generate_etag`.
    :param last_modified: an optional date of the last modification.
    :param ignore_if_range: If `False`, `If-Range` header will be taken into
                            account.
    :return: `True` if the resource was modified, otherwise `False`.

    .. versionadded:: 2.2
    agroupTllato_bytesTlabigutype[ds.MultiDict[str, str]]adsaMultiDictuw;a_cookie_reafindallastripqlw"a_cookie_unslash_reasuba_cookie_unslash_replace:lqnaencodeadecodeTareplaceTaerrorsaoutacvuParse a cookie from a string.

    The same key can be provided multiple times, the values are stored
    in-order. The default :class:`MultiDict` will have the first value
    first, and all values can be retrieved with
    :meth:`MultiDict.getlist`.

    :param cookie: The cookie header as a string.
    :param cls: A dict-like class to store the parsed cookies in.
        Defaults to :class:`MultiDict`.

    .. versionchanged:: 3.0
        Passing bytes, and the ``charset`` and ``errors`` parameters, were removed.

    .. versionadded:: 2.2
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsarewtadatetimeTadatetimea_internalTa_dt_as_utclahttpTagenerate_etagTaparse_dateTaparse_etagsTaparse_if_range_headerTaunquote_etagacompileTu([Ww]/)?(?:"(.*?)"|(.*?))(?:\s*,\s*|$)a_etag_reTnnnnnnnntD
ahttp_rangeahttp_if_rangeahttp_if_modified_sinceahttp_if_none_matchahttp_if_matchaetagadataalast_modifiedaignore_if_rangeareturnustr | Noneustr | Noneustr | Noneustr | Noneustr | Noneustr | Noneubytes | Noneudatetime | str | Noneaboolpais_resource_modifiedaASCIIaVERBOSETu
    ([^=;]*)
    (?:\s*=\s*
      (
        "(?:[^\\"]|\\.)*"
      |
        .*?
      )
    )?
    \s*;\s*
    TaflagsTc\\([0-3][0-7]{2}|.)Dwmareturnut.Match[bytes]abytesTnnDacookieaclsareturnustr | Noneutype[ds.MultiDict[str, str]] | Noneuds.MultiDict[str, str]aparse_cookieTadatastructuresadatastructuresuwerkzeug\sansio\http.pyu<module werkzeug.sansio.http>TwmwvTahttp_rangeahttp_if_rangeahttp_if_modified_sinceahttp_if_none_matchahttp_if_matchaetagadataalast_modifiedaignore_if_rangeamodified_sinceaunmodifiedaif_rangew_aif_none_matchaif_matchTacookieaclsaoutackacv.werkzeug.sansio.multipartBabufferacompleteamax_form_memory_sizeamax_partsaStateaPREAMBLEastateaboundaryareacompilec%s?--%s(--[^\S\n\r]*%s?|[^\S\n\r]*%s)aLINE_BREAKaescapeaMULTILINEapreamble_rec%s--%s(--[^\S\n\r]*%s?|[^\S\n\r]*%s)aboundary_rela_search_positiona_parts_decodedarindexTd
Td
aminaRequestEntityTooLargeaextendaNEED_DATAasearchagroupTlastartswithTc--aEPILOGUEaPARTastartaendaPreambleTadataamaxaSEARCH_EXTRA_LENGTHaBLANK_LINE_REa_parse_headerslucontent-dispositionuMissing Content-Disposition headeraparse_options_headerutoo many values to unpack (expected 2)acastagetTanameTafilenameaFileTafilenameaheadersanameaFieldTaheadersanameaDATA_STARTla_parse_dataDastarttutoo many values to unpack (expected 3)aDataTadataamore_dataaDATADastartFaEpilogue:nnnaCOMPLETEaNeedDatauInvalid form-data cannot parse beyond uaHEADER_CONTINUATION_REasubd asplitlinesastripcadecodeapartitionTw:aheadersaHeadersaLINE_BREAK_REamatchaMatchc--afindqalast_newlined
adata_startadata_endadatac
--c
cContent-Disposition: form-data; name="%s"anameaencodec; filename="%s"afilenamealoweru: u
c--
uCannot generate u in state: a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtadataclassesTadataclassadataclassaenumTaautoaautoTaEnumaEnumadatastructuresTaHeadersaexceptionsTaRequestEntityTooLargeahttpTaparse_options_headeruwerkzeug.sansio.multiparta__module__aEventa__qualname__a__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>TtTafrozena__annotations__abytesa__orig_bases__astraboolamore_datac(?:
|
|
)c(?:

|

|

)c%s[ ]luDecodes a multipart message as bytes into Python events.

    The part data is returned as available to allow the caller to save
    the data from memory to disk, if desired.
    aMultipartDecoderTnDamax_partsnDaboundaryamax_form_memory_sizeamax_partsareturnabytesuint | Noneuint | NoneaNonea__init__uMultipartDecoder.__init__DadataareturnabytesaintuMultipartDecoder.last_newlineDadataareturnubytes | NoneaNoneareceive_datauMultipartDecoder.receive_dataDareturnaEventanext_eventuMultipartDecoder.next_eventDadataareturnabytesaHeadersuMultipartDecoder._parse_headersDadataastartareturnabytesaboolutuple[bytes, int, bool]uMultipartDecoder._parse_dataaMultipartEncoderDaboundaryareturnabytesaNoneuMultipartEncoder.__init__DaeventareturnaEventabytesasend_eventuMultipartEncoder.send_eventuwerkzeug\sansio\multipart.pyu<module werkzeug.sansio.multipart>Ta__class__Taselfaboundaryamax_form_memory_sizeamax_partsTaselfaboundaryTaselfadataastartamatchadata_startaboundaryadata_endadel_indexamore_dataTaselfadataaheadersalineanamew_avalueTaselfadataalast_nlalast_crTaselfaeventamatchadataaheadersaheaders_endadispositionaextraanameafilenameadel_indexamore_dataTaselfadataTaselfaeventadataanameavalue.werkzeug.sansio.request1"aupperamethodaschemeaserverarstripTw/aroot_pathw/alstripapathaquery_stringaheadersaremote_addraurlu(invalid URL: uw)w<a__name__w u [u]>aparameter_storage_classaparse_qsladecodeDakeep_blank_valuesaerrorstuwerkzeug.url_quoteuThe parsed URL parameters (the part in the URL after the question
        mark).

        By default an
        :class:`~werkzeug.datastructures.ImmutableMultiDict`
        is returned from this function.  This can be changed by setting
        :attr:`parameter_storage_class` to a different type.  This might
        be necessary if the order of the form data is important.

        .. versionchanged:: 2.3
            Invalid bytes remain percent encoded.
        uX-Forwarded-Foralist_storage_classaparse_list_headeruIf a forwarded header exists this is a list of all ip addresses
        from the client ip to the last proxy server.
        w?uRequested path, including the query string.Pawssahttpsu``True`` if the request was made with a secure protocol
        (HTTPS or WSS).
        aget_current_urlahostuThe full request URL with the scheme, host, root path, path,
        and query string.uLike :attr:`url` but without the query string.uThe request URL scheme, host, and root path. This is the root
        that the application is accessed from.
        uThe request URL scheme and host only.aget_hostagetTahostatrusted_hostsuThe host name the request was made to, including the port if
        it's non-standard. Validated with :attr:`trusted_hosts`.
        w;agetlistTaCookieaparse_cookieadict_storage_classTaclsuA :class:`dict` with the contents of all cookies transmitted with
        the request.aget_content_lengthTuContent-LengthTuTransfer-EncodingTahttp_content_lengthahttp_transfer_encodinguThe Content-Length entity-header field indicates the size of the
        entity-body in bytes or, in the case of the HEAD method, the size of
        the entity-body that would have been sent had the request been a
        GET.
        a_parsed_content_typeaparse_options_headerTuContent-Typeua_parse_content_typelaloweruLike :attr:`content_type`, but without parameters (eg, without
        charset, type etc.) and always lowercase.  For example if the content
        type is ``text/HTML; charset=utf-8`` the mimetype would be
        ``'text/html'``.
        luThe mimetype parameters as dict.  For example if the content
        type is ``text/html; charset=utf-8`` the params would be
        ``{'charset': 'utf-8'}``.
        aparse_set_headerTaPragmauuThe Pragma general-header field is used to include
        implementation-specific directives that might apply to any recipient
        along the request/response chain.  All pragma directives specify
        optional behavior from the viewpoint of the protocol; however, some
        systems MAY require that behavior be consistent with the directives.
        aparse_accept_headerTaAcceptaMIMEAcceptuList of mimetypes this client supports as
        :class:`~werkzeug.datastructures.MIMEAccept` object.
        TuAccept-CharsetaCharsetAcceptuList of charsets this client supports as
        :class:`~werkzeug.datastructures.CharsetAccept` object.
        TuAccept-EncodinguList of encodings this client accepts.  Encodings in a HTTP term
        are compression encodings such as gzip.  For charsets have a look at
        :attr:`accept_charset`.
        TuAccept-LanguageaLanguageAcceptuList of languages this client accepts as
        :class:`~werkzeug.datastructures.LanguageAccept` object.

        .. versionchanged 0.5
           In previous versions this was a regular
           :class:`~werkzeug.datastructures.Accept` object.
        TuCache-Controlaparse_cache_control_headeraRequestCacheControluA :class:`~werkzeug.datastructures.RequestCacheControl` object
        for the incoming cache control headers.
        aparse_etagsTuIf-MatchuAn object containing all the etags in the `If-Match` header.

        :rtype: :class:`~werkzeug.datastructures.ETags`
        TuIf-None-MatchuAn object containing all the etags in the `If-None-Match` header.

        :rtype: :class:`~werkzeug.datastructures.ETags`
        aparse_dateTuIf-Modified-SinceuThe parsed `If-Modified-Since` header as a datetime object.

        .. versionchanged:: 2.0
            The datetime object is timezone-aware.
        TuIf-Unmodified-SinceuThe parsed `If-Unmodified-Since` header as a datetime object.

        .. versionchanged:: 2.0
            The datetime object is timezone-aware.
        aparse_if_range_headerTuIf-RangeuThe parsed ``If-Range`` header.

        .. versionchanged:: 2.0
            ``IfRange.date`` is timezone-aware.

        .. versionadded:: 0.7
        aparse_range_headerTaRangeuThe parsed `Range` header.

        .. versionadded:: 0.7

        :rtype: :class:`~werkzeug.datastructures.Range`
        auser_agent_classTuUser-AgentuuThe user agent. Use ``user_agent.string`` to get the header
        value. Set :attr:`user_agent_class` to a subclass of
        :class:`~werkzeug.user_agent.UserAgent` to provide parsing for
        the other properties or other extended data.

        .. versionchanged:: 2.1
            The built-in parser was removed. Set ``user_agent_class`` to a ``UserAgent``
            subclass to parse data from the string.
        aAuthorizationafrom_headerTaAuthorizationuThe ``Authorization`` header parsed into an :class:`.Authorization` object.
        ``None`` if the header is not present.

        .. versionchanged:: 2.3
            :class:`Authorization` is no longer a ``dict``. The ``token`` attribute
            was added for auth schemes that use a token instead of parameters.
        amimetypeuapplication/jsonastartswithTuapplication/aendswithTu+jsonuCheck if the mimetype indicates JSON data, either
        :mimetype:`application/json` or :mimetype:`application/*+json`.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtadatetimeTadatetimeuurllib.parseTaparse_qsladatastructureslaAcceptTaCharsetAcceptTaETagsaETagsTaHeadersaHeadersTaHeaderSetaHeaderSetTaIfRangeaIfRangeTaImmutableListaImmutableListTaImmutableMultiDictaImmutableMultiDictTaLanguageAcceptTaMIMEAcceptTaMultiDictaMultiDictaRangeTaRequestCacheControlahttpTaparse_accept_headerTaparse_cache_control_headerTaparse_dateTaparse_etagsTaparse_if_range_headerTaparse_list_headerTaparse_options_headerTaparse_range_headerTaparse_set_headerauser_agentTaUserAgentaUserAgentautilsTacached_propertyacached_propertyTaheader_propertyaheader_propertyTaparse_cookieTaget_content_lengthTaget_current_urlTaget_hostuwerkzeug.sansio.requesta__module__uRepresents the non-IO parts of a HTTP request, including the
    method, URL info, and headers.

    This class is not meant for general use. It should only be used when
    implementing WSGI, ASGI, or another HTTP application spec. Werkzeug
    provides a WSGI implementation at :cls:`werkzeug.wrappers.Request`.

    :param method: The method the request was made with, such as
        ``GET``.
    :param scheme: The URL scheme of the protocol the request used, such
        as ``https`` or ``wss``.
    :param server: The address of the server. ``(host, port)``,
        ``(path, None)`` for unix sockets, or ``None`` if not known.
    :param root_path: The prefix that the application is mounted under.
        This is prepended to generated URLs, but is not part of route
        matching.
    :param path: The path part of the URL after ``root_path``.
    :param query_string: The part of the URL after the "?".
    :param headers: The headers received with the request.
    :param remote_addr: The address of the client sending the request.

    .. versionchanged:: 3.0
        The ``charset``, ``url_charset``, and ``encoding_errors`` attributes
        were removed.

    .. versionadded:: 2.0
    aRequesta__qualname__a__annotations__utype[MultiDict[str, t.Any]]utype[list[t.Any]]utype[UserAgent]ulist[str] | NoneDamethodaschemeaserveraroot_pathapathaquery_stringaheadersaremote_addrareturnastrputuple[str, int | None] | NoneastrpabytesaHeadersustr | NoneaNonea__init__uRequest.__init__Dareturnastra__repr__uRequest.__repr__DareturnuMultiDict[str, str]aargsuRequest.argsDareturnulist[str]aaccess_routeuRequest.access_routeafull_pathuRequest.full_pathDareturnaboolais_secureuRequest.is_secureuRequest.urlabase_urluRequest.base_urlaroot_urluRequest.root_urlahost_urluRequest.host_urluRequest.hostDareturnuImmutableMultiDict[str, str]acookiesuRequest.cookiesTuContent-TypeuThe Content-Type entity-header field indicates the media
        type of the entity-body sent to the recipient or, in the case of
        the HEAD method, the media type that would have been sent had
        the request been a GET.tTadocaread_onlyacontent_typeDareturnuint | Noneacontent_lengthuRequest.content_lengthTuContent-EncodinguThe Content-Encoding entity-header field is used as a
        modifier to the media-type. When present, its value indicates
        what additional content codings have been applied to the
        entity-body, and thus what decoding mechanisms must be applied
        in order to obtain the media-type referenced by the Content-Type
        header field.

        .. versionadded:: 0.9tacontent_encodingTuContent-MD5uThe Content-MD5 entity-header field, as defined in
        RFC 1864, is an MD5 digest of the entity-body for the purpose of
        providing an end-to-end message integrity check (MIC) of the
        entity-body. (Note: a MIC is good for detecting accidental
        modification of the entity-body in transit, but is not proof
        against malicious attacks.)

        .. versionadded:: 0.9tacontent_md5TaRefereruThe Referer[sic] request-header field allows the client
        to specify, for the server's benefit, the address (URI) of the
        resource from which the Request-URI was obtained (the
        "referrer", although the header field is misspelled).tareferreraDateDadocaread_onlyuThe Date general-header field represents the date and
        time at which the message was originated, having the same
        semantics as orig-date in RFC 822.

        .. versionchanged:: 2.0
            The datetime object is timezone-aware.
        tadateTuMax-ForwardsnOintuThe Max-Forwards request-header field provides a
        mechanism with the TRACE and OPTIONS methods to limit the number
        of proxies or gateways that can forward the request to the next
        inbound server.tamax_forwardsDareturnaNoneuRequest._parse_content_typeuRequest.mimetypeDareturnudict[str, str]amimetype_paramsuRequest.mimetype_paramsDareturnaHeaderSetapragmauRequest.pragmaDareturnaMIMEAcceptaaccept_mimetypesuRequest.accept_mimetypesDareturnaCharsetAcceptaaccept_charsetsuRequest.accept_charsetsDareturnaAcceptaaccept_encodingsuRequest.accept_encodingsDareturnaLanguageAcceptaaccept_languagesuRequest.accept_languagesDareturnaRequestCacheControlacache_controluRequest.cache_controlDareturnaETagsaif_matchuRequest.if_matchaif_none_matchuRequest.if_none_matchDareturnudatetime | Noneaif_modified_sinceuRequest.if_modified_sinceaif_unmodified_sinceuRequest.if_unmodified_sinceDareturnaIfRangeaif_rangeuRequest.if_rangeDareturnuRange | NonearangeuRequest.rangeDareturnaUserAgentuRequest.user_agentDareturnuAuthorization | NoneaauthorizationuRequest.authorizationTaOriginuThe host that the request originated from. Set :attr:`~CORSResponseMixin.access_control_allow_origin` on the response to indicate which origins are allowed.tuSent with a preflight request to indicate which headers will be sent with the cross origin request. Set :attr:`~CORSResponseMixin.access_control_allow_headers` on the response to indicate which headers are allowed.TuAccess-Control-Request-HeadersTaload_funcadocaread_onlyaaccess_control_request_headersTuAccess-Control-Request-MethoduSent with a preflight request to indicate which method will be used for the cross origin request. Set :attr:`~CORSResponseMixin.access_control_allow_methods` on the response to indicate which methods are allowed.taaccess_control_request_methodais_jsonuRequest.is_jsonuwerkzeug\sansio\request.pyu<module werkzeug.sansio.request>Ta__class__Taselfamethodaschemeaserveraroot_pathapathaquery_stringaheadersaremote_addrTaselfaurlweTaselfTaselfacache_controlTaselfawsgi_combined_cookieTaselfamt.werkzeug.sansio.responseFcDaselfareturnaResponseaHeaderSetafgetu_set_property.<locals>.fgetDaselfavalueareturnaResponseuNone | (str | dict[str, str | int] | t.Iterable[str])aNoneafsetu_set_property.<locals>.fsetTadocDaheader_setareturnaHeaderSetaNoneaon_updateu_set_property.<locals>.fget.<locals>.on_updateaparse_set_headeraheadersagetanameaselfato_headeradump_headeraHeadersucontent-typeadefault_mimetypeaget_content_typeuutf-8uContent-Typeadefault_statusastatusw<a__name__uu [u]>a_status_codeuThe HTTP status code as a number.a_statusuThe HTTP status code as a string.a_clean_statusutoo many values to unpack (expected 2)aHTTPStatusastripuEmpty status argumentapartitionTw utoo many values to unpack (expected 3)u0 lw aHTTP_STATUS_CODESaupperu UNKNOWNaadduSet-Cookieadump_cookieamax_cookie_sizeTavalueamax_ageaexpiresapathadomainasecureahttponlyamax_sizeasamesiteuSets a cookie.

        A warning is raised if the size of the cookie header exceeds
        :attr:`max_cookie_size`, but the header will still be set.

        :param key: the key (name) of the cookie to be set.
        :param value: the value of the cookie.
        :param max_age: should be a number of seconds, or `None` (default) if
                        the cookie should last only as long as the client's
                        browser session.
        :param expires: should be a `datetime` object or UNIX timestamp.
        :param path: limits the cookie to a given path, per default it will
                     span the whole domain.
        :param domain: if you want to set a cross-domain cookie.  For example,
                       ``domain="example.com"`` will set a cookie that is
                       readable by the domain ``www.example.com``,
                       ``foo.example.com`` etc.  Otherwise, a cookie will only
                       be readable by the domain that set it.
        :param secure: If ``True``, the cookie will only be available
            via HTTPS.
        :param httponly: Disallow JavaScript access to the cookie.
        :param samesite: Limit the scope of the cookie to only be
            attached to requests that are "same-site".
        aset_cookieTaexpiresamax_ageapathadomainasecureahttponlyasamesiteuDelete a cookie.  Fails silently if key doesn't exist.

        :param key: the key (name) of the cookie to be deleted.
        :param path: if the cookie that should be deleted was limited to a
                     path, the path has to be defined here.
        :param domain: if the cookie that should be deleted was limited to a
                       domain, that domain has to be defined here.
        :param secure: If ``True``, the cookie will only be available
            via HTTPS.
        :param httponly: Disallow JavaScript access to the cookie.
        :param samesite: Limit the scope of the cookie to only be
            attached to requests that are "same-site".
        amimetypeuapplication/jsonastartswithTuapplication/aendswithTu+jsonuCheck if the mimetype indicates JSON data, either
        :mimetype:`application/json` or :mimetype:`application/*+json`.
        Tucontent-typeasplitTw;uThe mimetype (content type without charset etc.)DwdareturnuCallbackDict[str, str]aNoneuResponse.mimetype_params.<locals>.on_updateaparse_options_headerTucontent-typeulaCallbackDictuThe mimetype parameters as dict. For example if the
        content type is ``text/html; charset=utf-8`` the params would be
        ``{'charset': 'utf-8'}``.

        .. versionadded:: 0.5
        adump_options_headerTuretry-afteraparse_dateadatetimeanowatimezoneautcatimedeltaTasecondsuThe Retry-After response-header field can be used with a
        503 (Service Unavailable) response to indicate how long the
        service is expected to be unavailable to the requesting client.

        Time in seconds until expiration or date.

        .. versionchanged:: 2.0
            The datetime object is timezone-aware.
        uretry-afterahttp_dateuRetry-AfterDacache_controlareturna_CacheControlaNoneuResponse.cache_control.<locals>.on_updateaparse_cache_control_headerTucache-controlaResponseCacheControluThe Cache-Control general-header field is used to specify
        directives that MUST be obeyed by all caching mechanisms along the
        request/response chain.
        ucache-controluCache-Controlaquote_etagaETaguSet the etag, and override the old one if there was one.aunquote_etagTaETaguReturn a tuple in the form ``(etag, is_weak)``.  If there is no
        ETag the return value is ``(None, None)``.
        DarngareturnaContentRangeaNoneuResponse.content_range.<locals>.on_updateaparse_content_range_headerTucontent-rangeaContentRangeTnnnTaon_updateuThe ``Content-Range`` header as a
        :class:`~werkzeug.datastructures.ContentRange` object. Available
        even if the header is not set.

        .. versionadded:: 0.7
        ucontent-rangeuContent-RangeaWWWAuthenticateafrom_headerTuWWW-AuthenticateTabasicDavalueareturnaWWWAuthenticateaNoneuResponse.www_authenticate.<locals>.on_updatea_on_updateuThe ``WWW-Authenticate`` header parsed into a :class:`.WWWAuthenticate`
        object. Modifying the object will modify the header value.

        This header is not set by default. To set this header, assign an instance of
        :class:`.WWWAuthenticate` to this attribute.

        .. code-block:: python

            response.www_authenticate = WWWAuthenticate(
                "basic", {"realm": "Authentication Required"}
            )

        Multiple values for this header can be sent to give the client multiple options.
        Assign a list to set multiple headers. However, modifying the items in the list
        will not automatically update the header values, and accessing this attribute
        will only ever return the first value.

        To unset this header, assign ``None`` or use ``del``.

        .. versionchanged:: 2.3
            This attribute can be assigned to to set the header. A list can be assigned
            to set multiple header values. Use ``del`` to unset the header.

        .. versionchanged:: 2.3
            :class:`WWWAuthenticate` is no longer a ``dict``. The ``token`` attribute
            was added for auth challenges that use a token instead of parameters.
        awww_authenticateasetuWWW-Authenticate:lnnDacspareturnaContentSecurityPolicyaNoneuResponse.content_security_policy.<locals>.on_updateaparse_csp_headerTucontent-security-policyaContentSecurityPolicyTnuThe ``Content-Security-Policy`` header as a
        :class:`~werkzeug.datastructures.ContentSecurityPolicy` object. Available
        even if the header is not set.

        The Content-Security-Policy header adds an additional layer of
        security to help detect and mitigate certain types of attacks.
        ucontent-security-policyuContent-Security-PolicyuResponse.content_security_policy_report_only.<locals>.on_updateTucontent-security-policy-report-onlyuThe ``Content-Security-policy-report-only`` header as a
        :class:`~werkzeug.datastructures.ContentSecurityPolicy` object. Available
        even if the header is not set.

        The Content-Security-Policy-Report-Only header adds a csp policy
        that is not enforced but is reported thereby helping detect
        certain types of attacks.
        ucontent-security-policy-report-onlyuContent-Security-policy-report-onlyuAccess-Control-Allow-CredentialsuWhether credentials can be shared by the browser to
        JavaScript code. As part of the preflight request it indicates
        whether credentials can be used on the cross origin request.
        atrueapopTuAccess-Control-Allow-CredentialsnaCOOPavalueaCOEPa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtTadatetimeTatimedeltaTatimezoneahttpTaHTTPStatusadatastructuresTaCallbackDictlTaContentRangeTaContentSecurityPolicyTaHeadersTaHeaderSetaHeaderSetTaResponseCacheControlTaWWWAuthenticateTaCOEPTaCOOPTadump_ageadump_ageTadump_cookieTadump_headerTadump_options_headerTahttp_dateTaHTTP_STATUS_CODESTaparse_ageaparse_ageTaparse_cache_control_headerTaparse_content_range_headerTaparse_csp_headerTaparse_dateTaparse_options_headerTaparse_set_headerTaquote_etagTaunquote_etagautilsTaget_content_typeTaheader_propertyaheader_propertyDanameadocareturnastrustr | Noneapropertya_set_propertyuwerkzeug.sansio.responsea__module__uRepresents the non-IO parts of an HTTP response, specifically the
    status and headers but not the body.

    This class is not meant for general use. It should only be used when
    implementing WSGI, ASGI, or another HTTP application spec. Werkzeug
    provides a WSGI implementation at :cls:`werkzeug.wrappers.Response`.

    :param status: The status code for the response. Either an int, in
        which case the default status message is added, or a string in
        the form ``{code} {message}``, like ``404 Not Found``. Defaults
        to 200.
    :param headers: A :class:`~werkzeug.datastructures.Headers` object,
        or a list of ``(key, value)`` tuples that will be converted to a
        ``Headers`` object.
    :param mimetype: The mime type (content type without charset or
        other parameters) of the response. If the value starts with
        ``text/`` (or matches some other special cases), the charset
        will be added to create the ``content_type``.
    :param content_type: The full content type of the response.
        Overrides building the value from ``mimetype``.

    .. versionchanged:: 3.0
        The ``charset`` attribute was removed.

    .. versionadded:: 2.0
    aResponsea__qualname__a__annotations__lutext/plainustr | NonelTnnnnDastatusaheadersamimetypeacontent_typeareturnuint | str | HTTPStatus | Noneut.Mapping[str, str | t.Iterable[str]] | t.Iterable[tuple[str, str]] | Noneustr | Noneustr | NoneaNonea__init__uResponse.__init__Dareturnastra__repr__uResponse.__repr__Dareturnaintastatus_codeuResponse.status_codeasetterDacodeareturnaintaNoneuResponse.statusDavalueareturnustr | int | HTTPStatusaNoneDavalueareturnustr | int | HTTPStatusutuple[str, int]uResponse._clean_statusTunnw/nFpnD
akeyavalueamax_ageaexpiresapathadomainasecureahttponlyasamesiteareturnastrputimedelta | int | Noneustr | datetime | int | float | Noneustr | Noneustr | Noneaboolpustr | NoneaNoneuResponse.set_cookieTw/nFpnDakeyapathadomainasecureahttponlyasamesiteareturnastrustr | Noneustr | Noneaboolpustr | NoneaNoneadelete_cookieuResponse.delete_cookieDareturnaboolais_jsonuResponse.is_jsonDareturnustr | NoneuResponse.mimetypeDavalueareturnastraNoneDareturnudict[str, str]amimetype_paramsuResponse.mimetype_paramsTaLocationuThe Location response-header field is used to redirect
        the recipient to a location other than the Request-URI for
        completion of the request or identification of a new
        resource.alocationaAgeDadocuThe Age response-header field conveys the sender's
        estimate of the amount of time since the response (or its
        revalidation) was generated at the origin server.

        Age values are non-negative decimal integers, representing time
        in seconds.aageTuContent-TypeuThe Content-Type entity-header field indicates the media
        type of the entity-body sent to the recipient or, in the case of
        the HEAD method, the media type that would have been sent had
        the request been a GET.acontent_typeTuContent-LengthnOintOstruThe Content-Length entity-header field indicates the size
        of the entity-body, in decimal number of OCTETs, sent to the
        recipient or, in the case of the HEAD method, the size of the
        entity-body that would have been sent had the request been a
        GET.acontent_lengthTuContent-LocationuThe Content-Location entity-header field MAY be used to
        supply the resource location for the entity enclosed in the
        message when that entity is accessible from a location separate
        from the requested resource's URI.acontent_locationTuContent-EncodinguThe Content-Encoding entity-header field is used as a
        modifier to the media-type. When present, its value indicates
        what additional content codings have been applied to the
        entity-body, and thus what decoding mechanisms must be applied
        in order to obtain the media-type referenced by the Content-Type
        header field.acontent_encodingTuContent-MD5uThe Content-MD5 entity-header field, as defined in
        RFC 1864, is an MD5 digest of the entity-body for the purpose of
        providing an end-to-end message integrity check (MIC) of the
        entity-body. (Note: a MIC is good for detecting accidental
        modification of the entity-body in transit, but is not proof
        against malicious attacks.)acontent_md5aDateDadocuThe Date general-header field represents the date and
        time at which the message was originated, having the same
        semantics as orig-date in RFC 822.

        .. versionchanged:: 2.0
            The datetime object is timezone-aware.
        adateaExpiresDadocuThe Expires entity-header field gives the date/time after
        which the response is considered stale. A stale cache entry may
        not normally be returned by a cache.

        .. versionchanged:: 2.0
            The datetime object is timezone-aware.
        aexpiresuLast-ModifiedDadocuThe Last-Modified entity-header field indicates the date
        and time at which the origin server believes the variant was
        last modified.

        .. versionchanged:: 2.0
            The datetime object is timezone-aware.
        alast_modifiedDareturnudatetime | Nonearetry_afteruResponse.retry_afterDavalueareturnudatetime | int | str | NoneaNoneTaVaryuThe Vary field value indicates the set of request-header
        fields that fully determines, while the response is fresh,
        whether a cache is permitted to use the response to reply to a
        subsequent request without revalidation.avaryTuContent-LanguageuThe Content-Language entity-header field describes the
        natural language(s) of the intended audience for the enclosed
        entity. Note that this might not be equivalent to all the
        languages used within the entity-body.acontent_languageTaAllowuThe Allow entity-header field lists the set of methods
        supported by the resource identified by the Request-URI. The
        purpose of this field is strictly to inform the recipient of
        valid methods associated with the resource. An Allow header
        field MUST be present in a 405 (Method Not Allowed)
        response.aallowDareturnaResponseCacheControlacache_controluResponse.cache_controlTFDaetagaweakareturnastraboolaNoneaset_etaguResponse.set_etagDareturnutuple[str, bool] | tuple[None, None]aget_etaguResponse.get_etagTuAccept-RangesuThe `Accept-Ranges` header. Even though the name would
        indicate that multiple values are supported, it must be one
        string token only.

        The values ``'bytes'`` and ``'none'`` are common.

        .. versionadded:: 0.7aaccept_rangesDareturnaContentRangeacontent_rangeuResponse.content_rangeDavalueareturnuContentRange | str | NoneaNoneDareturnaWWWAuthenticateuResponse.www_authenticateDavalueareturnuWWWAuthenticate | list[WWWAuthenticate] | NoneaNoneadeleterDareturnaNoneDareturnaContentSecurityPolicyacontent_security_policyuResponse.content_security_policyDavalueareturnuContentSecurityPolicy | str | NoneaNoneacontent_security_policy_report_onlyuResponse.content_security_policy_report_onlyaaccess_control_allow_credentialsuResponse.access_control_allow_credentialsDavalueareturnubool | NoneaNoneuWhich headers can be sent with the cross origin request.TuAccess-Control-Allow-HeadersTaload_funcadump_funcadocaaccess_control_allow_headersuWhich methods can be used for the cross origin request.TuAccess-Control-Allow-Methodsaaccess_control_allow_methodsTuAccess-Control-Allow-OriginuThe origin or '*' for any origin that may make cross origin requests.aaccess_control_allow_originuWhich headers can be shared by the browser to JavaScript code.TuAccess-Control-Expose-Headersaaccess_control_expose_headersTuAccess-Control-Max-AgeOintOstruThe maximum age in seconds the access control settings can be cached for.aaccess_control_max_ageu<lambda>uResponse.<lambda>aUNSAFE_NONEuAllows control over sharing of browsing context group with cross-origin
        documents. Values must be a member of the :class:`werkzeug.http.COOP` enum.TuCross-Origin-Opener-PolicyTaload_funcadump_funcadefaultadocacross_origin_opener_policyuPrevents a document from loading any cross-origin resources that do not
        explicitly grant the document permission. Values must be a member of the
        :class:`werkzeug.http.COEP` enum.TuCross-Origin-Embedder-Policyacross_origin_embedder_policyuwerkzeug\sansio\response.pyTavalueu<module werkzeug.sansio.response>Ta__class__Taselfastatusaheadersamimetypeacontent_typeTaselfTaselfavalueastatus_codeacode_strasepw_astatusTanameadocafgetafsetTaselfavalueTaselfaon_updateTaselfaon_updatearvTaselfakeyapathadomainasecureahttponlyasamesiteTaselfaon_updateanameTanameTaselfavalueanameTaselfamtTaselfactTaselfaon_updatewdTacache_controlaselfTarngaselfTacspaselfTwdaselfTavalueaselfTaheader_setanameaselfTanameaselfTaselfavalueasecondsT
aselfakeyavalueamax_ageaexpiresapathadomainasecureahttponlyasamesiteTaselfaetagaweakTaselfacodeTaselfavalueaitemaon_updateTaselfavalueaon_update.werkzeug.sansio.utils
MapartitionTw:laencodeTaidnaadecodeTaasciiastartswithTw.:lnnarefahostnameaendswithw.uuCheck if a host matches a list of trusted names.

    :param hostname: The name to check.
    :param trusted_list: A list of valid names to match. If a name
        starts with a dot it will match all subdomains.

    .. versionadded:: 0.9
    lw:PawsahttpTu:80:nqnPawssahttpsTu:443:nqnahost_is_trustedahostaSecurityErroruHost u is not trusted.uReturn the host for the given parameters.

    This first checks the ``host_header``. If it's not present, then
    ``server`` is used. The host will only contain the port if it is
    different than the standard port for the protocol.

    Optionally, verify that the host is trusted using
    :func:`host_is_trusted` and raise a
    :exc:`~werkzeug.exceptions.SecurityError` if it is not.

    :param scheme: The protocol the request used, like ``"https"``.
    :param host_header: The ``Host`` header value.
    :param server: Address of the server. ``(host, port)``, or
        ``(path, None)`` for unix sockets.
    :param trusted_hosts: A list of trusted host names.

    :return: Host, with port if necessary.
    :raise ~werkzeug.exceptions.SecurityError: If the host is not
        trusted.
    u://w/auri_to_iriaquotearstripTw/Dasafeu!$&'()*+,/:;=@%alstripw?Dasafeu!$&'()*+,/:;=?@%uRecreate the URL for a request. If an optional part isn't
    provided, it and subsequent parts are not included in the URL.

    The URL is an IRI, not a URI, so it may contain Unicode characters.
    Use :func:`~werkzeug.urls.iri_to_uri` to convert it to ASCII.

    :param scheme: The protocol the request used, like ``"https"``.
    :param host: The host the request was made to. See :func:`get_host`.
    :param root_path: Prefix that the application is mounted under. This
        is prepended to ``path``.
    :param path: The path part of the URL after ``root_path``.
    :param query_string: The portion of the URL after the "?".
    achunkedamaxa_plain_intuReturn the ``Content-Length`` header value as an int. If the header is not given
    or the ``Transfer-Encoding`` header is ``chunked``, ``None`` is returned to indicate
    a streaming request. If the value is not an integer, or negative, 0 is returned.

    :param http_content_length: The Content-Length HTTP header.
    :param http_transfer_encoding: The Transfer-Encoding HTTP header.

    .. versionadded:: 2.2
    a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationswtuurllib.parseTaquotea_internalTa_plain_intlaexceptionsTaSecurityErroraurlsTauri_to_iriDahostnameatrusted_listareturnustr | Noneut.Iterable[str]aboolTnnDaschemeahost_headeraserveratrusted_hostsareturnastrustr | Noneutuple[str, int | None] | Noneut.Iterable[str] | Noneastraget_hostTnnnDaschemeahostaroot_pathapathaquery_stringareturnastrpustr | Noneustr | Noneubytes | Noneastraget_current_urlDahttp_content_lengthahttp_transfer_encodingareturnustr | Noneustr | Noneuint | Noneaget_content_lengthuwerkzeug\sansio\utils.pyu<module werkzeug.sansio.utils>Tahttp_content_lengthahttp_transfer_encodingTaschemeahostaroot_pathapathaquery_stringaurlTaschemeahost_headeraserveratrusted_hostsahostTahostnameatrusted_listarefasuffix_match.werkzeug.securitytYw/u<genexpr>luSalt length must be at least 1.uuGenerate a random string of SALT_CHARS with specified ``length``.asecretsachoiceaSALT_CHARSugen_salt.<locals>.<genexpr>asplitTw:unot enough values to unpack (expected at least 1, got %d)aencodeascryptlllutoo many values to unpack (expected 3)u'scrypt' takes 3 arguments.lahashlibTasaltwnwrwpamaxmemahexuscrypt:w:apbkdf2asha256aDEFAULT_PBKDF2_ITERATIONSu'pbkdf2' takes 2 arguments.apbkdf2_hmacupbkdf2:uInvalid hash method 'u'.agen_salta_hash_internalutoo many values to unpack (expected 2)w$uSecurely hash a password for storage. A password can be compared to a stored hash
    using :func:`check_password_hash`.

    The following methods are supported:

    -   ``scrypt``, the default. The parameters are ``n``, ``r``, and ``p``, the default
        is ``scrypt:32768:8:1``. See :func:`hashlib.scrypt`.
    -   ``pbkdf2``, less secure. The parameters are ``hash_method`` and ``iterations``,
        the default is ``pbkdf2:sha256:600000``. See :func:`hashlib.pbkdf2_hmac`.

    Default parameters may be updated to reflect current guidelines, and methods may be
    deprecated and removed if they are no longer considered secure. To migrate old
    hashes, you may generate a new hash when checking an old hash, or you may contact
    users with a link to reset their password.

    :param password: The plaintext password.
    :param method: The key derivation function and parameters.
    :param salt_length: The number of characters to generate for the salt.

    .. versionchanged:: 2.3
        Scrypt support was added.

    .. versionchanged:: 2.3
        The default iterations for pbkdf2 was increased to 600,000.

    .. versionchanged:: 2.3
        All plain hashes are deprecated and will not be supported in Werkzeug 3.0.
    Tw$lahmacacompare_digestuSecurely check that the given stored password hash, previously generated using
    :func:`generate_password_hash`, matches the given password.

    Methods may be deprecated and removed if they are no longer considered secure. To
    migrate old hashes, you may generate a new hash when checking an old hash, or you
    may contact users with a link to reset their password.

    :param pwhash: The hashed password.
    :param password: The plaintext password.

    .. versionchanged:: 2.3
        All plain hashes are deprecated and will not be supported in Werkzeug 3.0.
    w.anormpatha_os_alt_sepsaisabsafilenameu..astartswithTu../apartsajoinuSafely join zero or more untrusted path components to a base
    directory to avoid escaping the base directory.

    :param directory: The trusted base directory.
    :param pathnames: The untrusted path components relative to the
        base directory.
    :return: A safe path, otherwise ``None``.
    usafe_join.<locals>.<genexpr>a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsaosaposixpathaabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789l$w\aaltsepulist[str]DalengthareturnaintastrDamethodasaltapasswordareturnastrpputuple[str, str]TascryptlDapasswordamethodasalt_lengthareturnastrpaintastragenerate_password_hashDapwhashapasswordareturnastrpaboolacheck_password_hashDadirectoryapathnamesareturnastrpustr | Noneasafe_joinuwerkzeug\security.pyTa.0asepTa.0w_Ta.0asepafilenameu<module werkzeug.security>T
amethodasaltapasswordaargsasalt_bytesapassword_byteswnwrwpamaxmemalen_argsahash_nameaiterationsTapwhashapasswordamethodasaltahashvalTalengthTapasswordamethodasalt_lengthasaltwhaactual_methodTadirectoryapathnamesapartsafilename.werkzeug.servingH;uSSL is unavailable because this Python runtime was not compiled with SSL/TLS support.a_rfilea_donela_lenareadlineadecodeTalatin1astripluInvalid chunk headeruNegative chunk length not allowedaselfareadabufaread_chunk_lenaminTd
c
d
uMissing chunk terminating newlineaservera_server_versionaurlsplitapathassl_contextahttpahttpsaclient_addressTu<local>laschemeanetlocw/uaunquoteuwsgi.versionTlluwsgi.url_schemeuwsgi.inputarfileuwsgi.errorsastderruwsgi.multithreadamultithreaduwsgi.multiprocessamultiprocessuwsgi.run_onceuwerkzeug.socketaconnectionaSERVER_SOFTWAREaserver_versionaREQUEST_METHODacommandaSCRIPT_NAMEaPATH_INFOa_wsgi_encoding_danceaQUERY_STRINGaqueryaREQUEST_URIaRAW_URIaREMOTE_ADDRaaddress_stringaREMOTE_PORTaport_integeraSERVER_NAMEaserver_addressaSERVER_PORTlaSERVER_PROTOCOLarequest_versionaheadersaitemsutoo many values to unpack (expected 2)w_aupperareplaceTw-w_Tu
uTaCONTENT_TYPEaCONTENT_LENGTHaHTTP_aenvironw,aHTTP_TRANSFER_ENCODINGalowerachunkeduwsgi.input_terminatedaDechunkedInputaHTTP_HOSTagetpeercertTtTabinary_formasslaDER_cert_to_PEM_certaSSL_CLIENT_CERTalogTaerroruCannot fetch SSL peer certificate infoagetTaExpectuu100-continueawfileawriteTcHTTP/1.1 100 Continue

amake_environDadataareturnabytesaNoneuWSGIRequestHandler.run_wsgi.<locals>.writeTnastart_responseuWSGIRequestHandler.run_wsgi.<locals>.start_responseDaappareturnaWSGIApplicationaNoneaexecuteuWSGIRequestHandler.run_wsgi.<locals>.executeaappaconnection_dropped_errorsaconnection_droppedapassthrough_errorsastatus_sentachunk_responseaclose_connectionaInternalServerErrorudebug.tbtoolsTaDebugTracebackaDebugTracebackarender_traceback_textaerroruError on request:
astatus_setTuwrite() before start_responseaheaders_setasplitTnlasend_responseaheaders_sentasend_headeraheader_keysaadducontent-lengthaHEADldlPllaprotocol_versionuHTTP/1.1TuTransfer-EncodingachunkedTaConnectionacloseaend_headersTuapplications must write bytes:lnnaencodeTc
aflushawith_tracebackluHeaders already setTcTc0

aselectorsaDefaultSelectoraregisteraEVENT_READaselectoraselectTf{Gz?TatimeoutTlatotal_sizeatotal_readsgȯaclosea__class__ahandleasocketatimeoutais_ssl_erroralog_erroruSSL error occurred: %suHandles a request ignoring dropped connections.astartswithTado_arun_wsgiu<local>auri_to_iriw arequestlineatranslatea_control_char_tablew1a_ansi_styleaboldu200u304acyanw3agreenu404ayelloww4aredamagentaainfou"%s" %s %sa_logu - - [alog_date_time_stringu] w
a_log_add_styleDaboldaredagreenayellowamagentaacyanlll l!l#l$u[wmavalueu[0macryptographyTax509ax509ucryptography.hazmat.backendsTadefault_backendadefault_backenducryptography.hazmat.primitivesTahashesahashesucryptography.hazmat.primitives.asymmetricTarsaarsaucryptography.x509.oidTaNameOIDaNameOIDuUsing ad-hoc certificates requires the cryptography library.agenerate_private_keyllTapublic_exponentakey_sizeabackendw*aNameaNameAttributeaORGANIZATION_NAMEuDummy CertificateaCOMMON_NAMEaCertificateBuilderasubject_nameaissuer_nameapublic_keyaserial_numberarandom_serial_numberanot_valid_beforeadtanowatimezoneautcanot_valid_afteratimedeltaTlTadaysaadd_extensionaExtendedKeyUsageaOID_SERVER_AUTHDacriticalFaSubjectAlternativeNameaDNSNameu*.asignaSHA256agenerate_adhoc_ssl_pairTacnTaserializationaserializationu.crtu.keyawba__enter__a__exit__apublic_bytesaEncodingaPEMTnnnaprivate_bytesaPrivateFormataTraditionalOpenSSLaNoEncryptionTaencodingaformataencryption_algorithmuCreates an SSL key for development.  This should be used instead of
    the ``'adhoc'`` key which generates a new cert on each server start.
    It accepts a path for where it should store the key and cert and
    either a host or CN.  If a host is given it will use the CN
    ``*.host/CN=host``.

    For more information see :func:`run_simple`.

    .. versionadded:: 0.9

    :param base_path: the path to the certificate and key.  The extension
                      ``.crt`` is added for the certificate, ``.key`` is
                      added for the key.
    :param host: the name of the host.  This can be used as an alternative
                 for the `cn`.
    :param cn: the `CN` to use.
    aatexitatempfileamkstemparemoveaload_ssl_contextuGenerates an adhoc SSL context for the development server.aPROTOCOL_TLS_SERVERaSSLContextaload_cert_chainuLoads SSL context from cert/private key files and optional protocol.
    Many parameters are directly taken from the API of
    :py:class:`ssl.SSLContext`.

    :param cert_file: Path of the certificate to use.
    :param pkey_file: Path of the private key to use. If not given, the key
                      will be obtained from the certificate file.
    :param protocol: A ``PROTOCOL`` constant from the :mod:`ssl` module.
        Defaults to :data:`ssl.PROTOCOL_TLS_SERVER`.
    acastaexc_infoaSSLErroruChecks if the given error (or the current one) is an SSL error.Tuunix://aAF_UNIXw:aAF_INET6aAF_INETuReturn ``AF_INET4``, ``AF_INET6``, or ``AF_UNIX`` depending on
    the host and port.aaf_unixapartitionTu://agetaddrinfoaSOCK_STREAMaIPPROTO_TCPagaierrorluReturn a fully qualified socket address that can be passed to
    :func:`socket.bind`.ufd31:f903:5ab5:1::1u10.253.155.219aSOCK_DGRAMaconnectlu::1u127.0.0.1agetsocknameuGet the IP address of an external interface. Used when binding to
    0.0.0.0 or ::1 to show a more useful URL.

    :meta private:
    aWSGIRequestHandlerahostaportaselect_address_familyaaddress_familyaget_sockaddraunlinka__init__Dabind_and_activateFaserver_bindaserver_activateaserver_closeaprintastrerrorTafileaerrnoaEADDRINUSEuPort u is in use by another program. Either identify and stop that program, or start the server with a different port.afromfdaadhocagenerate_adhoc_ssl_contextawrap_socketDaserver_sidetuWerkzeug/3.0.4aserve_foreverTapoll_intervalahandle_errorTuWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.aboldaredu * Running on Pu0.0.0.0u::u * Running on all addresses (w)u0.0.0.0aget_interface_ipu[::1]u://w[w]amessagesuShow information about the address when starting the server.acan_forkuYour platform does not support forking.amax_childrenuCannot have a multi-thread and multi-process server.aThreadedWSGIServerTafdaForkingWSGIServeraBaseWSGIServeruCreate an appropriate WSGI server instance based on the value of
    ``threaded`` and ``processes``.

    This is called from :func:`run_simple`, but can be used separately
    to have access to the server object, such as to run it in a separate
    thread.

    See :func:`run_simple` for parameter docs.
    TaWERKZEUG_RUN_MAINatrueuCheck if the server is running as a subprocess within the
    Werkzeug reloader.

    .. versionadded:: 0.10
    uport must be an integerumiddleware.shared_dataTaSharedDataMiddlewareaSharedDataMiddlewareadebugTaDebuggedApplicationaDebuggedApplicationTaevalexatrusted_hostsaappendais_running_from_reloaderaWERKZEUG_SERVER_FDamake_serveraapplicationaset_inheritableafilenoalog_startupTuPress CTRL+C to quitayellowuStart a development server for a WSGI application. Various
    optional features can be enabled.

    .. warning::

        Do not use the development server when deploying to production.
        It is intended for use only during local development. It is not
        designed to be particularly efficient, stable, or secure.

    :param hostname: The host to bind to, for example ``'localhost'``.
        Can be a domain, IPv4 or IPv6 address, or file path starting
        with ``unix://`` for a Unix socket.
    :param port: The port to bind to, for example ``8080``. Using ``0``
        tells the OS to pick a random free port.
    :param application: The WSGI application to run.
    :param use_reloader: Use a reloader process to restart the server
        process when files are changed.
    :param use_debugger: Use Werkzeug's debugger, which will show
        formatted tracebacks on unhandled exceptions.
    :param use_evalex: Make the debugger interactive. A Python terminal
        can be opened for any frame in the traceback. Some protection is
        provided by requiring a PIN, but this should never be enabled
        on a publicly visible server.
    :param extra_files: The reloader will watch these files for changes
        in addition to Python modules. For example, watch a
        configuration file.
    :param exclude_patterns: The reloader will ignore changes to any
        files matching these :mod:`fnmatch` patterns. For example,
        ignore cache files.
    :param reloader_interval: How often the reloader tries to check for
        changes.
    :param reloader_type: The reloader to use. The ``'stat'`` reloader
        is built in, but may require significant CPU to watch files. The
        ``'watchdog'`` reloader is much more efficient but requires
        installing the ``watchdog`` package first.
    :param threaded: Handle concurrent requests using threads. Cannot be
        used with ``processes``.
    :param processes: Handle concurrent requests using up to this number
        of processes. Cannot be used with ``threaded``.
    :param request_handler: Use a different
        :class:`~BaseHTTPServer.BaseHTTPRequestHandler` subclass to
        handle requests.
    :param static_files: A dict mapping URL prefixes to directories to
        serve static files from using
        :class:`~werkzeug.middleware.SharedDataMiddleware`.
    :param passthrough_errors: Don't catch unhandled exceptions at the
        server level, let the server crash instead. If ``use_debugger``
        is enabled, the debugger will still catch such errors.
    :param ssl_context: Configure TLS to serve over HTTPS. Can be an
        :class:`ssl.SSLContext` object, a ``(cert_file, key_file)``
        tuple to create a typical context, or the string ``'adhoc'`` to
        generate a temporary self-signed certificate.

    .. versionchanged:: 2.1
        Instructions are shown for dealing with an "address already in
        use" error.

    .. versionchanged:: 2.1
        Running on ``0.0.0.0`` or ``::`` shows the loopback IP in
        addition to a real IP.

    .. versionchanged:: 2.1
        The command-line interface was removed.

    .. versionchanged:: 2.0
        Running on ``0.0.0.0`` or ``::`` shows a real IP address that
        was bound as well as a warning not to run the development server
        in production.

    .. versionchanged:: 2.0
        The ``exclude_patterns`` parameter was added.

    .. versionchanged:: 0.15
        Bind to a Unix socket by passing a ``hostname`` that starts with
        ``unix://``.

    .. versionchanged:: 0.10
        Improved the reloader and added support for changing the backend
        through the ``reloader_type`` parameter.

    .. versionchanged:: 0.9
        A command-line interface was added.

    .. versionchanged:: 0.8
        ``ssl_context`` can be a tuple of paths to the certificate and
        private key files.

    .. versionchanged:: 0.6
        The ``ssl_context`` parameter was added.

    .. versionchanged:: 0.5
       The ``static_files`` and ``passthrough_errors`` parameters were
       added.
    uA WSGI and HTTP server for use **during development only**. This
server is convenient to use, but is not designed to be particularly
stable, secure, or efficient. Use a dedicate WSGI server and HTTP
server when deploying to production.

It provides features like interactive debugging and code reloading. Use
``run_simple`` to start the server. Put this in a ``run.py`` script:

.. code-block:: python

    from myapp import create_app
    from werkzeug import run_simple
a__doc__a__file__a__spec__aoriginahas_locationa__cached__a__annotations__aannotationsaioaosasocketserverasyswtadatetimeTadatetimeTatimedeltaTatimezoneuhttp.serverTaBaseHTTPRequestHandleraBaseHTTPRequestHandlerTaHTTPServeraHTTPServeruurllib.parseTaunquoteTaurlsplita_internalTa_logTa_wsgi_encoding_danceaexceptionsTaInternalServerErroraurlsTauri_to_iriaSSLEOFErrorutuple[type[Exception], ...]uwerkzeug.servinga__module__a_SslDummya__qualname__Danameareturnastrut.Anya__getattr__u_SslDummy.__getattr__acoloramaaforkaForkingMixInlaLISTEN_QUEUEaOptionalaUnionussl.SSLContextaTupleaLiterala_TSSLContextArgaRawIOBasea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uAn input stream that handles Transfer-Encoding 'chunked'Darfileareturnut.IO[bytes]aNoneuDechunkedInput.__init__DareturnaboolareadableuDechunkedInput.readableDareturnaintuDechunkedInput.read_chunk_lenDabufareturnabytearrayaintareadintouDechunkedInput.readintoa__orig_bases__uA request handler that implements WSGI dispatching.apropertyDareturnastruWSGIRequestHandler.server_versionDareturnaWSGIEnvironmentuWSGIRequestHandler.make_environDareturnaNoneuWSGIRequestHandler.run_wsgiuWSGIRequestHandler.handleDaerroraenvironareturnaBaseExceptionuWSGIEnvironment | NoneaNoneuCalled if the connection was closed by the client.  By default
        nothing happens.
        uWSGIRequestHandler.connection_droppeduWSGIRequestHandler.__getattr__uWSGIRequestHandler.address_stringuWSGIRequestHandler.port_integerastramaketransarangeTl ;ll lTll;lllu\xu02xu\\aordTw\l\Tw-pDacodeasizeareturnuint | struint | straNonealog_requestuWSGIRequestHandler.log_requestDaformataargsareturnastrut.AnyaNoneuWSGIRequestHandler.log_erroralog_messageuWSGIRequestHandler.log_messageDatypeamessageaargsareturnastrput.AnyaNoneuWSGIRequestHandler.logDavalueastylesareturnastrppDacnareturnustr | Noneutuple[Certificate, RSAPrivateKeyWithSerialization]TnnDabase_pathahostacnareturnastrustr | Noneustr | Noneutuple[str, str]amake_ssl_devcertDareturnussl.SSLContextDacert_fileapkey_fileaprotocolareturnastrustr | Noneuint | Noneussl.SSLContextDaerrorareturnuException | NoneaboolDahostaportareturnastraintusocket.AddressFamilyDahostaportafamilyareturnastraintusocket.AddressFamilyutuple[str, int] | strDafamilyareturnusocket.AddressFamilyastruA WSGI server that that handles one request at a time.

    Use :func:`make_server` to create a server instance.
    arequest_queue_sizeaallow_reuse_addressTnFnnDahostaportaappahandlerapassthrough_errorsassl_contextafdareturnastraintaWSGIApplicationutype[WSGIRequestHandler] | Noneaboolu_TSSLContextArg | Noneuint | NoneaNoneuBaseWSGIServer.__init__uBaseWSGIServer.logTf?Dapoll_intervalareturnafloataNoneuBaseWSGIServer.serve_foreverDarequestaclient_addressareturnut.Anyutuple[str, int] | straNoneuBaseWSGIServer.handle_erroruBaseWSGIServer.log_startupaThreadingMixInuA WSGI server that handles concurrent requests in separate
    threads.

    Use :func:`make_server` to create a server instance.
    adaemon_threadsuA WSGI server that handles concurrent requests in separate forked
    processes.

    Use :func:`make_server` to create a server instance.
    Tl(nFnnDahostaportaappaprocessesahandlerapassthrough_errorsassl_contextafdareturnastraintaWSGIApplicationaintutype[WSGIRequestHandler] | Noneaboolu_TSSLContextArg | Noneuint | NoneaNoneuForkingWSGIServer.__init__TFlnFnnD
ahostaportaappathreadedaprocessesarequest_handlerapassthrough_errorsassl_contextafdareturnastraintaWSGIApplicationaboolaintutype[WSGIRequestHandler] | Noneaboolu_TSSLContextArg | Noneuint | NoneaBaseWSGIServerT
FptnnlaautoFlnnFnDahostnameaportaapplicationause_reloaderause_debuggerause_evalexaextra_filesaexclude_patternsareloader_intervalareloader_typeathreadedaprocessesarequest_handlerastatic_filesapassthrough_errorsassl_contextareturnastraintaWSGIApplicationaboolpput.Iterable[str] | Noneut.Iterable[str] | Noneaintastraboolaintutype[WSGIRequestHandler] | Noneudict[str, str | tuple[str, str]] | Noneaboolu_TSSLContextArg | NoneaNonearun_simpleuwerkzeug\serving.pyu<module werkzeug.serving>Ta__class__Taselfanamea__class__TaselfanameT
aselfahostaportaappahandlerapassthrough_errorsassl_contextafdaaddress_familyaserver_addressweaimportliba__class__TaselfarfileT
aselfahostaportaappaprocessesahandlerapassthrough_errorsassl_contextafda__class__TavalueastylesacodesastyleTaselfTaselfaerroraenvironTaappaapplication_iteradataaselectoratotal_sizeatotal_readsaenvironastart_responseawriteaheaders_sentachunk_responseaselfTachunk_responseaenvironaheaders_sentaselfastart_responseawriteT
aatexitatempfileacertapkeyaserializationacert_handleacert_fileapkey_handleapkey_fileactxT
acnax509adefault_backendahashesarsaaNameOIDabackendapkeyasubjectacertTafamilyahostwsTahostaportafamilyaresTaselfwea__class__Taselfarequestaclient_addressa__class__TaerrorTacert_fileapkey_fileaprotocolactxTaselfatypeamessageaargsTaselfaformataargsTaselfacodeasizeapathamsgTaselfadev_warningamessagesaschemeadisplay_hostnamealocalhostTaselfaenvironarequest_urlaurl_schemeapath_infoakeyavalueapeer_certTahostaportaappathreadedaprocessesarequest_handlerapassthrough_errorsassl_contextafdTabase_pathahostacnacertapkeyaserializationacert_fileapkey_filewfTaselfalinea_lenweTaselfabufareadwnaterminatorTahostnameaportaapplicationause_reloaderause_debuggerause_evalexaextra_filesaexclude_patternsareloader_intervalareloader_typeathreadedaprocessesarequest_handlerastatic_filesapassthrough_errorsassl_contextaSharedDataMiddlewareaDebuggedApplicationafdasrvarun_with_reloaderT
aselfastatus_setaheaders_setastatus_sentaheaders_sentachunk_responseaenvironawriteastart_responseaexecuteweaDebugTracebackamsgTahostaportTaselfapoll_intervala__class__Tastatusaheadersaexc_infoastatus_setaheaders_setaheaders_sentawriteTaheaders_sentaheaders_setastatus_setawriteTadataastatus_sentaheaders_sentachunk_responseacode_stramsgacodeaheader_keysakeyavalueastatus_setaheaders_setaselfaenvironTachunk_responseaenvironaheaders_sentaheaders_setaselfastatus_sentastatus_set.werkzeug.testqdu---------------WerkzeugFormPart_atimeuarandomaBytesIOlDwsareturnabytesaintawrite_binaryustream_encode_multipart.<locals>.write_binaryawriteaMultipartEncoderaencodeasend_eventaPreambleTcTadataa_iter_datautoo many values to unpack (expected 2)areadafilenameanameacontent_typeamimetypesaguess_typeuapplication/octet-streamaheadersaupdateuContent-TypeaencoderaFieldTanameaheadersaFileTanameafilenameaheadersareaderTlaDataTadataamore_dataaHeadersaEpilogueastreamatellaseekTluEncode a dict of values (either strings or file descriptors or
    :class:`FileStorage` objects.) into a multipart encoded string stored
    in a file descriptor.

    .. versionchanged:: 3.0
        The ``charset`` parameter was removed.
    aon_diskatotal_lengthathresholdacastaIOaTemporaryFileTuwb+agetvalueastream_encode_multipartTause_tempfileaboundaryutoo many values to unpack (expected 3)uLike `stream_encode_multipart` but returns a tuple in the form
    (``boundary``, ``data``) where data is bytes.

    .. versionchanged:: 3.0
        The ``charset`` parameter was removed.
    uIterate over a mapping that might have a list of values, yielding
    all key, value pairs. Almost like iter_multi_items but only allows
    lists, not tuples, of values so tuples can be used for files.
    adataaMultiDictaitemsTtTamultiw?uQuery string is defined in the path and as an argumentaurlsplitaqueryairi_to_uriapatharequest_uriabase_urlaquery_stringaargsamethodastderraerrors_streamamultithreadamultiprocessarun_onceaenviron_baseaenviron_overridesainput_streamacontent_lengthaclosedaAuthorizationabasicausernameapasswordlasetato_headerucan't provide both json and dataajson_dumpsuapplication/jsonucan't provide input stream and dataTOtupleOdictaselfa_add_file_from_dataaformasetlistdefaultaappendamimetypeaEnvironHeadersa_wsgi_decoding_danceaPATH_INFOa_make_base_urluwsgi.url_schemeapopTaHostaSCRIPT_NAMEaQUERY_STRINGaREQUEST_METHODuwsgi.inputTuContent-TypenTuContent-Lengthnuwsgi.errorsuwsgi.multithreaduwsgi.multiprocessuwsgi.run_onceuTurn an environ dict back into a builder. Any extra kwargs
        override the args extracted from the environ.

        .. versionchanged:: 2.0
            Path and query values are passed through the WSGI decoding
            dance to avoid double encoding.

        .. versionadded:: 0.15
        afilesaadd_fileuCalled in the EnvironBuilder to add files from the data dict.aurlunsplitarstripTw/w/aurl_schemeahostascript_rootuThe base URL is used to extract the URL scheme, host name,
        port, and root path.
        ahttpalocalhostutoo many values to unpack (expected 5)ubase url must not contain a query string or fragmentagetTuContent-Typea_input_streama_filesumultipart/form-dataa_formuapplication/x-www-form-urlencodeduThe content type for the request.  Reflected from and to
        the :attr:`headers`.  Do not set if you set :attr:`files` or
        :attr:`form` for auto detection.
        asplitTw;astripuThe mimetype (content type without charset etc.)

        .. versionadded:: 0.14
        aget_content_typeuutf-8DwdareturnuCallbackDict[str, str]aNoneaon_updateuEnvironBuilder.mimetype_params.<locals>.on_updateaparse_options_headerTucontent-typeuaCallbackDictuThe mimetype parameters as dict.  For example if the
        content type is ``text/html; charset=utf-8`` the params would be
        ``{'charset': 'utf-8'}``.

        .. versionadded:: 0.14
        adump_options_headerTuContent-LengthOintTatypeuThe content length as integer.  Reflected from and to the
        :attr:`headers`.  Do not set if you set :attr:`files` or
        :attr:`form` for auto detection.
        uContent-Lengthuan input stream is defineduCommon behavior for getting the :attr:`form` and
        :attr:`files` properties.

        :param name: Name of the internal cached attribute.
        :param storage: Storage class used for the data.
        uCommon behavior for setting the :attr:`form` and
        :attr:`files` properties.

        :param name: Name of the internal cached attribute.
        :param value: Value to assign to the attribute.
        a_get_formuA :class:`MultiDict` of form values.a_set_formaFileMultiDictuA :class:`FileMultiDict` of uploaded files. Use
        :meth:`~FileMultiDict.add_file` to add new files.
        uAn optional input stream. This is mutually exclusive with
        setting :attr:`form` and :attr:`files`, setting it will clear
        those. Do not provide this if the method is not ``POST`` or
        another method that has a body.
        a_query_stringa_argsa_urlencodeuThe query string.  If you set this to a string
        :attr:`args` will no longer be available.
        ua query string is defineduThe URL arguments as :class:`MultiDict`.Tw:luThe server name (read-only, use :attr:`host` to set)ahttpsllPuThe server port as integer (read-only, use :attr:`host` to set)acloseavaluesuCloses all files.  If you put real :class:`file` objects into the
        :attr:`files` dict you can call this method to automatically close
        them all in one go.
        TllaCombinedMultiDictu; boundary="w"TaasciiDwxareturnastrpa_path_encodeuEnvironBuilder.get_environ.<locals>._path_encodea_wsgi_encoding_danceaREQUEST_URIaRAW_URIaSERVER_NAMEaserver_nameaSERVER_PORTaserver_portaHTTP_HOSTaSERVER_PROTOCOLaserver_protocoluwsgi.versionawsgi_versionacopyaremoveTuContent-LengthaCONTENT_TYPEaCONTENT_LENGTHadefaultdictTOlistato_wsgi_listaHTTP_aupperareplaceTw-w_u, aresultuReturn the built environ.

        .. versionchanged:: 0.15
            The content type and length headers are set based on
            input stream detection. Previously this only set the WSGI
            keys.
        aunquotearequest_classaget_environuReturns a request with the data.  If the request class is not
        specified :attr:`request_class` is used.

        :param cls: The request wrapper to use.
        aapplicationaResponseaTestResponseaWrapperTestResponseuwerkzeug.testaTypearesponse_wrappera_cookiesaallow_subdomain_redirectsuCookies are disabled. Create a client with 'use_cookies=True'.uReturn a :class:`.Cookie` if it exists. Cookies are uniquely identified by
        ``(domain, path, key)``.

        :param key: The decoded form of the key for the cookie.
        :param domain: The domain the cookie was set for.
        :param path: The path the cookie was set for.

        .. versionadded:: 2.3
        aCookiea_from_response_headeradump_cookieadomainaorigin_onlya_should_deletea_storage_keyuSet a cookie to be sent in subsequent requests.

        This is a convenience to skip making a test request to a route that would set
        the cookie. To test the cookie, make a test request to a route that uses the
        cookie value.

        The client uses ``domain``, ``origin_only``, and ``path`` to determine which
        cookies to send with a request. It does not use other cookie parameters that
        browsers use, since they're not applicable in tests.

        :param key: The key part of the cookie.
        :param value: The value part of the cookie.
        :param domain: Send this cookie with requests that match this domain. If
            ``origin_only`` is true, it must be an exact match, otherwise it may be a
            suffix match.
        :param origin_only: Whether the domain must be an exact match to the request.
        :param path: Send this cookie with requests that match this path either exactly
            or as a prefix.
        :param kwargs: Passed to :func:`.dump_cookie`.

        .. versionchanged:: 3.0
            The parameter ``server_name`` is removed. The first parameter is
            ``key``. Use the ``domain`` and ``origin_only`` parameters instead.

        .. versionchanged:: 2.3
            The ``origin_only`` parameter was added.

        .. versionchanged:: 2.3
            The ``domain`` parameter defaults to ``localhost``.
        uDelete a cookie if it exists. Cookies are uniquely identified by
        ``(domain, path, key)``.

        :param key: The decoded form of the key for the cookie.
        :param domain: The domain the cookie was set for.
        :param path: The path the cookie was set for.

        .. versionchanged:: 3.0
            The ``server_name`` parameter is removed. The first parameter is
            ``key``. Use the ``domain`` parameter instead.

        .. versionchanged:: 3.0
            The ``secure``, ``httponly`` and ``samesite`` parameters are removed.

        .. versionchanged:: 2.3
            The ``domain`` parameter defaults to ``localhost``.
        aget_current_urlahostnameu; aHTTP_COOKIETaHTTP_COOKIEnuIf cookies are enabled, set the ``Cookie`` header in the environ to the
        cookies that are applicable to the request host and path.

        :meta private:

        .. versionadded:: 2.3
        a_matches_requestaurla_to_request_headeru<genexpr>uClient._add_cookies_to_wsgi.<locals>.<genexpr>uIf cookies are enabled, update the stored cookies from any ``Set-Cookie``
        headers in the response.

        :meta private:

        .. versionadded:: 2.3
        a_add_cookies_to_wsgiarun_wsgi_appTabuffereda_update_cookies_from_responselagetlistTuSet-CookieuRuns the wrapped WSGI app with the given environment.

        :meta private:
        alocationaEnvironBuilderafrom_environarequestaenvironTapathaquery_stringTw.uFollowing subdomain redirects is not enabled.uFollowing external redirects is not supported.astatus_codePllaHEADaGETTuTransfer-EncodingnaopenuPerform a new request to the location given by the redirect
        response to the previous request.

        :meta private:
        aget_requestaRequestaresponsePllllllabufferedamake_sequencearedirectsaClientRedirectErroruLoop detected: A u redirect to u was already made.aaddahistoryaresolve_redirectacall_on_closeuGenerate an environ dict from the given arguments, make a
        request to the application using it, and return the response.

        :param args: Passed to :class:`EnvironBuilder` to create the
            environ for the request. If a single arg is passed, it can
            be an existing :class:`EnvironBuilder` or an environ dict.
        :param buffered: Convert the iterator returned by the app into
            a list. If the iterator has a ``close()`` method, it is
            called automatically.
        :param follow_redirects: Make additional requests to follow HTTP
            redirects until a non-redirect status is returned.
            :attr:`TestResponse.history` lists the intermediate
            responses.

        .. versionchanged:: 2.1
            Removed the ``as_tuple`` parameter.

        .. versionchanged:: 2.0
            The request input stream is closed when calling
            ``response.close()``. Input streams for redirects are
            automatically closed.

        .. versionchanged:: 0.5
            If a dict is provided as file in the dict for the ``data``
            parameter the content type has to be called ``content_type``
            instead of ``mimetype``. This change was made for
            consistency with :class:`werkzeug.FileWrapper`.

        .. versionchanged:: 0.5
            Added the ``follow_redirects`` parameter.
        uCall :meth:`open` with ``method`` set to ``GET``.aPOSTuCall :meth:`open` with ``method`` set to ``POST``.aPUTuCall :meth:`open` with ``method`` set to ``PUT``.aDELETEuCall :meth:`open` with ``method`` set to ``DELETE``.aPATCHuCall :meth:`open` with ``method`` set to ``PATCH``.aOPTIONSuCall :meth:`open` with ``method`` set to ``OPTIONS``.uCall :meth:`open` with ``method`` set to ``HEAD``.aTRACEuCall :meth:`open` with ``method`` set to ``TRACE``.w<a__name__w w>uCreate a new WSGI environ dict based on the values passed.  The first
    parameter should be the path of the request which defaults to '/'.  The
    second one can either be an absolute path (in that case the host is
    localhost:80) or a full path to the request with scheme, netloc port and
    the path to the script.

    This accepts the same arguments as the :class:`EnvironBuilder`
    constructor.

    .. versionchanged:: 0.5
       This function is now a thin wrapper over :class:`EnvironBuilder` which
       was added in 0.5.  The `headers`, `environ_base`, `environ_overrides`
       and `charset` parameters were added.
    a_get_environTnastart_responseurun_wsgi_app.<locals>.start_responseabufferachainaapp_iteraClosingIteratoruReturn a tuple in the form (app_iter, status, headers) of the
    application output.  This works best if you pass it an application that
    returns an iterator all the time.

    Sometimes applications may use the `write()` callable returned
    by the `start_response` function.  This tries to resolve such edge
    cases automatically.  But if you don't get the expected output you
    should set `buffered` to `True` which enforces buffering.

    If passed an invalid WSGI application the behavior of this function is
    undefined.  Never pass non-conforming WSGI applications to this function.

    :param app: the application to execute.
    :param buffered: set to `True` to enforce buffering.
    :return: tuple in the form ``(app_iter, status, headers)``
    awith_tracebacka__class__a__init__a_compat_tupleaget_dataTaas_textuThe response data as text. A shortcut for
        ``response.get_data(as_text=True)``.

        .. versionadded:: 2.1
        aendswithastartswithakeyw=avalueapartitionTw=aparse_cookieaparamsaloweraparse_dateaexpiresumax-agearpartitionasecureahttponlyasamesiteTakeyavalueadecoded_keyadecoded_valueaexpiresamax_ageadomainaorigin_onlyapathasecureahttp_onlyasame_siteadecoded_keyamax_ageatimestampa__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsadataclassesasyswtacollectionsTadefaultdictadatetimeTadatetimeaitertoolsTachainTarandomatempfileTaTemporaryFileTatimeuurllib.parseTaunquoteTaurlsplitTaurlunsplita_internalTa_get_environTa_wsgi_decoding_danceTa_wsgi_encoding_danceadatastructuresTaAuthorizationTaCallbackDictTaCombinedMultiDictTaEnvironHeadersTaFileMultiDictTaHeadersTaMultiDictTadump_cookieTadump_options_headerTaparse_cookieTaparse_dateTaparse_options_headerusansio.multipartTaDataTaEpilogueTaFieldTaFileTaMultipartEncoderTaPreambleaurlsTa_urlencodeTairi_to_uriautilsTacached_propertyacached_propertyTaget_content_typeuwrappers.requestTaRequestuwrappers.responseTaResponseawsgiTaClosingIteratorTaget_current_urlTtlnDadataause_tempfileathresholdaboundaryareturnut.Mapping[str, t.Any]aboolaintustr | Noneutuple[t.IO[bytes], int, str]Davaluesaboundaryareturnut.Mapping[str, t.Any]ustr | Noneutuple[str, bytes]aencode_multipartDadataareturnut.Mapping[str, t.Any]ut.Iterator[tuple[str, t.Any]]aTypeVarTa_TAnyMultiDictuMultiDict[t.Any, t.Any]Tabounda_TAnyMultiDicta__module__uThis class can be used to conveniently create a WSGI environment
    for testing purposes.  It can be used to quickly create WSGI environments
    or request objects from arbitrary data.

    The signature of this class is also used in some other places as of
    Werkzeug 0.5 (:func:`create_environ`, :meth:`Response.from_values`,
    :meth:`Client.open`).  Because of this most of the functionality is
    available through the constructor alone.

    Files and regular form data can be manipulated independently of each
    other with the :attr:`form` and :attr:`files` attributes, but are
    passed with the same argument to the constructor: `data`.

    `data` can be any of these values:

    -   a `str` or `bytes` object: The object is converted into an
        :attr:`input_stream`, the :attr:`content_length` is set and you have to
        provide a :attr:`content_type`.
    -   a `dict` or :class:`MultiDict`: The keys have to be strings. The values
        have to be either any of the following objects, or a list of any of the
        following objects:

        -   a :class:`file`-like object:  These are converted into
            :class:`FileStorage` objects automatically.
        -   a `tuple`:  The :meth:`~FileMultiDict.add_file` method is called
            with the key and the unpacked `tuple` items as positional
            arguments.
        -   a `str`:  The string is set as form data for the associated key.
    -   a file-like object: The object content is loaded in memory and then
        handled like a regular `str` or a `bytes`.

    :param path: the path of the request.  In the WSGI environment this will
                 end up as `PATH_INFO`.  If the `query_string` is not defined
                 and there is a question mark in the `path` everything after
                 it is used as query string.
    :param base_url: the base URL is a URL that is used to extract the WSGI
                     URL scheme, host (server name + server port) and the
                     script root (`SCRIPT_NAME`).
    :param query_string: an optional string or dict with URL parameters.
    :param method: the HTTP method to use, defaults to `GET`.
    :param input_stream: an optional input stream.  Do not specify this and
                         `data`.  As soon as an input stream is set you can't
                         modify :attr:`args` and :attr:`files` unless you
                         set the :attr:`input_stream` to `None` again.
    :param content_type: The content type for the request.  As of 0.5 you
                         don't have to provide this when specifying files
                         and form data via `data`.
    :param content_length: The content length for the request.  You don't
                           have to specify this when providing data via
                           `data`.
    :param errors_stream: an optional error stream that is used for
                          `wsgi.errors`.  Defaults to :data:`stderr`.
    :param multithread: controls `wsgi.multithread`.  Defaults to `False`.
    :param multiprocess: controls `wsgi.multiprocess`.  Defaults to `False`.
    :param run_once: controls `wsgi.run_once`.  Defaults to `False`.
    :param headers: an optional list or :class:`Headers` object of headers.
    :param data: a string or dict of form data or a file-object.
                 See explanation above.
    :param json: An object to be serialized and assigned to ``data``.
        Defaults the content type to ``"application/json"``.
        Serialized with the function assigned to :attr:`json_dumps`.
    :param environ_base: an optional dict of environment defaults.
    :param environ_overrides: an optional dict of environment overrides.
    :param auth: An authorization object to use for the
        ``Authorization`` header value. A ``(username, password)`` tuple
        is a shortcut for ``Basic`` authorization.

    .. versionchanged:: 3.0
        The ``charset`` parameter was removed.

    .. versionchanged:: 2.1
        ``CONTENT_TYPE`` and ``CONTENT_LENGTH`` are not duplicated as
        header keys in the environ.

    .. versionchanged:: 2.0
        ``REQUEST_URI`` and ``RAW_URI`` is the full raw URI including
        the query string, not only the path.

    .. versionchanged:: 2.0
        The default :attr:`request_class` is ``Request`` instead of
        ``BaseRequest``.

    .. versionadded:: 2.0
       Added the ``auth`` parameter.

    .. versionadded:: 0.15
        The ``json`` param and :meth:`json_dumps` method.

    .. versionadded:: 0.15
        The environ has keys ``REQUEST_URI`` and ``RAW_URI`` containing
        the path before percent-decoding. This is not part of the WSGI
        PEP, but many WSGI servers include it.

    .. versionchanged:: 0.6
       ``path`` and ``base_url`` can now be unicode strings that are
       encoded with :func:`iri_to_uri`.
    a__qualname__a__annotations__uHTTP/1.1TllajsonadumpsuMultiDict[str, str] | Noneustr | Noneut.IO[bytes] | NoneuFileMultiDict | NoneTw/nnaGETnnnnFppnnnnnnnDapathabase_urlaquery_stringamethodainput_streamacontent_typeacontent_lengthaerrors_streamamultithreadamultiprocessarun_onceaheadersadataaenviron_baseaenviron_overridesamimetypeajsonaauthareturnastrustr | Noneut.Mapping[str, str] | str | Noneastrut.IO[bytes] | Noneustr | Noneuint | Noneut.IO[str] | NoneaboolppuHeaders | t.Iterable[tuple[str, str]] | NoneuNone | (t.IO[bytes] | str | bytes | t.Mapping[str, t.Any])ut.Mapping[str, t.Any] | Noneut.Mapping[str, t.Any] | Noneustr | Noneut.Mapping[str, t.Any] | NoneuAuthorization | tuple[str, str] | NoneaNoneuEnvironBuilder.__init__DaenvironakwargsareturnaWSGIEnvironmentut.AnyaEnvironBuilderuEnvironBuilder.from_environDakeyavalueareturnastrut.IO[bytes] | tuple[t.IO[bytes], str] | tuple[t.IO[bytes], str, str]aNoneuEnvironBuilder._add_file_from_dataDaschemeahostascript_rootareturnastrpppuEnvironBuilder._make_base_urlDareturnastruEnvironBuilder.base_urlasetterDavalueareturnustr | NoneaNoneDareturnustr | NoneuEnvironBuilder.content_typeuEnvironBuilder.mimetypeDavalueareturnastraNoneDareturnut.Mapping[str, str]amimetype_paramsuEnvironBuilder.mimetype_paramsDareturnuint | NoneuEnvironBuilder.content_lengthDavalueareturnuint | NoneaNoneDanameastorageareturnastrutype[_TAnyMultiDict]a_TAnyMultiDictuEnvironBuilder._get_formDanameavalueareturnastruMultiDict[str, t.Any]aNoneuEnvironBuilder._set_formDareturnuMultiDict[str, str]uEnvironBuilder.formDavalueareturnuMultiDict[str, str]aNoneDareturnaFileMultiDictuEnvironBuilder.filesDavalueareturnaFileMultiDictaNoneDareturnut.IO[bytes] | NoneuEnvironBuilder.input_streamDavalueareturnut.IO[bytes] | NoneaNoneuEnvironBuilder.query_stringuEnvironBuilder.argsDavalueareturnuMultiDict[str, str] | NoneaNoneuEnvironBuilder.server_nameDareturnaintuEnvironBuilder.server_portDareturnaNonea__del__uEnvironBuilder.__del__uEnvironBuilder.closeDareturnaWSGIEnvironmentuEnvironBuilder.get_environDaclsareturnutype[Request] | NoneaRequestuEnvironBuilder.get_requestTEExceptiona__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uIf a redirect loop is detected when using follow_redirects=True with
    the :cls:`Client`, then this exception is raised.
    a__orig_bases__uSimulate sending requests to a WSGI application without running a WSGI or HTTP
    server.

    :param application: The WSGI application to make requests to.
    :param response_wrapper: A :class:`.Response` class to wrap response data with.
        Defaults to :class:`.TestResponse`. If it's not a subclass of ``TestResponse``,
        one will be created.
    :param use_cookies: Persist cookies from ``Set-Cookie`` response headers to the
        ``Cookie`` header in subsequent requests. Domain and path matching is supported,
        but other cookie parameters are ignored.
    :param allow_subdomain_redirects: Allow requests to follow redirects to subdomains.
        Enable this if the application handles subdomains and redirects between them.

    .. versionchanged:: 2.3
        Simplify cookie implementation, support domain and path matching.

    .. versionchanged:: 2.1
        All data is available as properties on the returned response object. The
        response cannot be returned as a tuple.

    .. versionchanged:: 2.0
        ``response_wrapper`` is always a subclass of :class:``TestResponse``.

    .. versionchanged:: 0.5
        Added the ``use_cookies`` parameter.
    aClientTntFDaapplicationaresponse_wrapperause_cookiesaallow_subdomain_redirectsareturnaWSGIApplicationutype[Response] | NoneaboolpaNoneuClient.__init__Talocalhostw/DakeyadomainapathareturnastrppuCookie | Noneaget_cookieuClient.get_cookieTuDadomainaorigin_onlyapathalocalhosttw/Dakeyavalueadomainaorigin_onlyapathakwargsareturnastrppaboolastrut.AnyaNoneaset_cookieuClient.set_cookieDadomainapathalocalhostw/DakeyadomainapathareturnastrppaNoneadelete_cookieuClient.delete_cookieDaenvironareturnaWSGIEnvironmentaNoneuClient._add_cookies_to_wsgiDaserver_nameapathaheadersareturnastrpulist[str]aNoneuClient._update_cookies_from_responseTFDaenvironabufferedareturnaWSGIEnvironmentaboolutuple[t.Iterable[bytes], str, Headers]uClient.run_wsgi_appDaresponseabufferedareturnaTestResponseaboolaTestResponseuClient.resolve_redirectDabufferedafollow_redirectsFpDabufferedafollow_redirectsaargsakwargsareturnaboolput.Anyut.AnyaTestResponseuClient.openDaargsakwareturnut.Anyut.AnyaTestResponseuClient.getapostuClient.postaputuClient.putadeleteuClient.deleteapatchuClient.patchaoptionsuClient.optionsaheaduClient.headatraceuClient.tracea__repr__uClient.__repr__Daargsakwargsareturnut.Anyut.AnyaWSGIEnvironmentacreate_environDaappaenvironabufferedareturnaWSGIApplicationaWSGIEnvironmentaboolutuple[t.Iterable[bytes], str, Headers]u:class:`~werkzeug.wrappers.Response` subclass that provides extra
    information about requests made with the test :class:`Client`.

    Test client requests will always return an instance of this class.
    If a custom response class is passed to the client, it is
    subclassed along with this to support test information.

    If the test request included large files, or if the application is
    serving a file, call :meth:`close` to close any open files and
    prevent Python showing a ``ResourceWarning``.

    .. versionchanged:: 2.2
        Set the ``default_mimetype`` to None to prevent a mimetype being
        assumed if missing.

    .. versionchanged:: 2.1
        Response instances cannot be treated as tuples.

    .. versionadded:: 2.0
        Test client methods always return instances of this class.
    adefault_mimetypeutuple[TestResponse, ...]a__test__TTDaresponseastatusaheadersarequestahistoryakwargsareturnut.Iterable[bytes]astraHeadersaRequestutuple[TestResponse]ut.AnyaNoneuTestResponse.__init__atextuTestResponse.textadataclassuA cookie key, value, and parameters.

    The class itself is not a public API. Its attributes are documented for inspection
    with :meth:`.Client.get_cookie` only.

    .. versionadded:: 2.3
    astradecoded_valueudatetime | Noneuint | Noneaboolubool | Noneahttp_onlyasame_siteDaserver_nameapathareturnastrpabooluCookie._matches_requestuCookie._to_request_headerDaserver_nameapathaheaderareturnastrppute.SelfuCookie._from_response_headerDareturnutuple[str, str, str]uCookie._storage_keyDareturnabooluCookie._should_deleteuwerkzeug\test.pyTa.0wcaserver_nameaurlu<module werkzeug.test>Ta__class__TaselfTaselfaapplicationaresponse_wrapperause_cookiesaallow_subdomain_redirectsTaselfapathabase_urlaquery_stringamethodainput_streamacontent_typeacontent_lengthaerrors_streamamultithreadamultiprocessarun_onceaheadersadataaenviron_baseaenviron_overridesamimetypeajsonaautharequest_uriakeyavalueTaselfaresponseastatusaheadersarequestahistoryakwargsa__class__Taselfaenvironaurlaserver_nameavalueTaselfakeyavalueTaclsaserver_nameapathaheaderw_aparameters_strakeyavalueadecoded_keyadecoded_valueaparamsaitemwkasepwvTaselfanameastoragearvTadataakeyavaluewvTaschemeahostascript_rootTaselfaserver_nameapathTwxTaselfanameavalueTaselfaserver_nameapathaheadersaheaderacookieTaselfavalueTaselfavalueaschemeanetlocascript_rootaqsaanchorTaselfafileswfTaselfactTaargsakwargsabuilderTaselfaargsakwTaselfakeyadomainapathTavaluesaboundaryastreamalengthTaclsaenvironakwargsaheadersaoutTaselfaresultainput_streamacontent_lengthamimetypeacontent_typeastart_posaend_posaboundaryaform_encodeda_path_encodearaw_uriaheadersacombined_headersakeyavalueavaluesTaselfaclsTaselfaon_updatewdTwdaselfT
aselfabufferedafollow_redirectsaargsakwargsarequestahistoryaargabuilderaresponse_partsaresponsearedirectsanew_redirect_entryT
aselfaresponseabufferedaschemeanetlocapathaqsaanchorabuilderato_name_partsafrom_name_partsapath_partsaroot_partsTaselfaenvironabufferedarvaurlTaappaenvironabufferedastatusaresponseabufferaapp_iterastart_responseaapp_rvaclose_funcaitemaheadersTaselfapiecesTaselfakeyavalueadomainaorigin_onlyapathakwargsacookieTastatusaheadersaexc_infoaresponseabufferTabufferaresponseTadataause_tempfileathresholdaboundaryastreamawrite_binaryatotal_lengthaon_diskaencoderakeyavalueareaderafilenameacontent_typeaheadersachunkalengthTwsastreamatotal_lengthaon_diskalengthanew_streamathresholdTaon_diskastreamathresholdatotal_length.werkzeug.urls
vaquoteaobjectastartaendDasafeuuUsed in :func:`uri_to_iri` after unquoting to re-quote any
    invalid bytes.
    w|asortedareacompileu((?:%(?:u))+)uwIDavalueareturnastrpa_unquote_partialu_make_unquote_part.<locals>._unquote_partiala_unquote_a__name__uCreate a function that unquotes all percent encoded characters except those
    given. This allows working with unquoted characters if possible while not changing
    the meaning of a given part of a URL.
    u02Xu<genexpr>u_make_unquote_part.<locals>.<genexpr>apatternasplitaoutaunquoteuutf-8uwerkzeug.url_quoteaappendaurlsplita_unquote_pathapatha_unquote_queryaquerya_unquote_fragmentafragmentahostnamea_decode_idnaw:w[w]aportausernamea_unquote_userapasswordw@aurlunsplitaschemeuConvert a URI to an IRI. All valid UTF-8 characters are unquoted,
    leaving all reserved and invalid characters quoted. If the URL has
    a domain, it is decoded from Punycode.

    >>> uri_to_iri("http://xn--n3h.net/p%C3%A5th?q=%C3%A8ry%DF")
    'http://\u2603.net/p\xe5th?q=\xe8ry%DF'

    :param uri: The URI to convert.

    .. versionchanged:: 3.0
        Passing a tuple or bytes, and the ``charset`` and ``errors`` parameters,
        are removed.

    .. versionchanged:: 2.3
        Which characters remain quoted is specific to each part of the URL.

    .. versionchanged:: 0.15
        All reserved and invalid characters remain quoted. Previously,
        only some reserved characters were preserved, and invalid bytes
        were replaced instead of left quoted.

    .. versionadded:: 0.6
    Dasafeu%!$&'()*+,/:;=@Dasafeu%!$&'()*+,/:;=?@Dasafeu%!#$&'()*+,/:;=?@aencodeTaidnaadecodeTaasciiDasafeu%!$&'()*+,;=uConvert an IRI to a URI. All non-ASCII and unsafe characters are
    quoted. If the URL has a domain, it is encoded to Punycode.

    >>> iri_to_uri('http://\u2603.net/p\xe5th?q=\xe8ry%DF')
    'http://xn--n3h.net/p%C3%A5th?q=%C3%A8ry%DF'

    :param iri: The IRI to convert.

    .. versionchanged:: 3.0
        Passing a tuple or bytes, the ``charset`` and ``errors`` parameters,
        and the ``safe_conversion`` parameter, are removed.

    .. versionchanged:: 2.3
        Which characters remain unquoted is specific to each part of the URL.

    .. versionchanged:: 0.15
        All reserved characters remain unquoted. Previously, only some reserved
        characters were left unquoted.

    .. versionchanged:: 0.9.6
       The ``safe_conversion`` parameter was added.

    .. versionadded:: 0.6
    Td.apartsw.aiter_multi_itemslaurlencodeDasafeu!$'()*,/:;?@a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsacodecslwtuurllib.parseaurllibTaquoteTaunquoteTaurlencodeTaurlsplitTaurlunsplitadatastructuresTaiter_multi_itemsDweareturnaUnicodeErrorutuple[str, int]a_codec_error_url_quotearegister_errorDanameacharsareturnastrput.Callable[[str], str]a_make_unquote_partT;ll!lTl%Tla_always_unsafeu&=+#u/?#auseru:@/?#Dauriareturnastrpauri_to_iriDairiareturnastrpairi_to_uriuitms-servicesaparseauses_netlocTuitms-servicesDadomainareturnastrpDaqueryareturnut.Mapping[str, str] | t.Iterable[tuple[str, str]]astra_urlencodeuwerkzeug\urls.pyTa.0wcu<module werkzeug.urls>TweaoutTadomainadataapartsapartTanameacharsachoicesapatterna_unquote_partialTavalueapartsaoutapartapatternTapatternTaqueryaitemsTairiapartsapathaqueryafragmentanetlocaauthapasswordTauriapartsapathaqueryafragmentanetlocaauthapassword.werkzeug.user_agent',astringw<a__name__uw abrowserw/aversionw>uConvert to a header value.a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsuwerkzeug.user_agenta__module__uRepresents a parsed user agent header value.

    The default implementation does no parsing, only the :attr:`string`
    attribute is set. A subclass may parse the string to set the
    common attributes or expose other information. Set
    :attr:`werkzeug.wrappers.Request.user_agent_class` to use a
    subclass.

    :param string: The header value to parse.

    .. versionadded:: 2.0
        This replaces the previous ``useragents`` module, but does not
        provide a built-in parser.
    aUserAgenta__qualname__a__annotations__aplatformustr | NonealanguageDastringareturnastraNonea__init__uUserAgent.__init__Dareturnastra__repr__uUserAgent.__repr__a__str__uUserAgent.__str__Dareturnaboola__bool__uUserAgent.__bool__ato_headeruUserAgent.to_headeruwerkzeug\user_agent.pyu<module werkzeug.user_agent>Ta__class__TaselfTaselfastring.werkzeug.utils7A1aCOMuu<genexpr>aLPTa__class__a__init__Tadoca__name__a_cache_aslot_namea__module__a__dict__ageta_missingaselfafgetavalueaenvironaheadersastartswithTutext/a_charset_mimetypesaendswithTu+xmlu; charset=amimetypeuReturns the full content type string with charset for a mimetype.

    If the mimetype represents text, the charset parameter will be
    appended, otherwise the mimetype is returned unchanged.

    :param mimetype: The mimetype to be used as content type.
    :param charset: The charset to be appended for text mimetypes.
    :return: The content type.

    .. versionchanged:: 0.15
        Any type that ends with ``+xml`` gets a charset, not just those
        that start with ``application/``. Known text types such as
        ``application/javascript`` are also given charsets.
    aunicodedataanormalizeaNFKDaencodeTaasciiaignoreadecodeTaasciiw\aaltsepafilenameareplacew a_filename_ascii_strip_reasubw_asplitastripTu._Tw.lauppera_windows_device_filesuPass it a filename and it will return a secure version of it.  This
    filename can then safely be stored on a regular file system and passed
    to :func:`os.path.join`.  The filename returned is an ASCII only string
    for maximum portability.

    On windows systems the function also makes sure that the file is not
    named after one of the special device files.

    >>> secure_filename("My cool movie.mov")
    'My_cool_movie.mov'
    >>> secure_filename("../../../etc/passwd")
    'etc_passwd'
    >>> secure_filename('i contain cool \xfcml\xe4uts.txt')
    'i_contain_cool_umlauts.txt'

    The function might return an empty filename.  It's your responsibility
    to ensure that the filename is unique and that you abort or
    generate a random filename if the function returned an empty one.

    .. versionadded:: 0.5

    :param filename: the filename to secure
    awrappersTaResponselaResponseaescapeu<!doctype html>
<html lang=en>
<title>Redirecting...</title>
<h1>Redirecting...</h1>
<p>You should be redirected automatically to the target URL: <a href="u">u</a>. If not, click the link.
Damimetypeutext/htmlaLocationuReturns a response object (a WSGI application) that, if called,
    redirects the client to the target location. Supported codes are
    301, 302, 303, 305, 307, and 308. 300 is not supported because
    it's not a real redirect and 304 because it's the answer for a
    request with a request with defined If-Modified-Since headers.

    .. versionadded:: 0.6
       The location can now be a unicode string that is encoded using
       the :func:`iri_to_uri` function.

    .. versionadded:: 0.10
        The class used for the Response object can now be passed in.

    :param location: the location the response should redirect to.
    :param code: the redirect status code. defaults to 302.
    :param class Response: a Response class to use when instantiating a
        response. The default is :class:`werkzeug.wrappers.Response` if
        unspecified.
    aPATH_INFOarpartitionTw/lu./w/TaQUERY_STRINGw?aredirectuRedirect to the current URL with a slash appended.

    If the current URL is ``/user/42``, the redirect URL will be
    ``42/``. When joined to the current URL during response
    processing or by the browser, this will produce ``/user/42/``.

    The behavior is undefined if the path ends with a slash already. If
    called unconditionally on a URL, it may produce a redirect loop.

    :param environ: Use the path and query from this WSGI environment
        to produce the redirect URL.
    :param code: the status code for the redirect.

    .. versionchanged:: 2.1
        Produce a relative URL that only modifies the last segment.
        Relevant when the current path has multiple segments.

    .. versionchanged:: 2.1
        The default status code is 308 instead of 301. This preserves
        the request method and body.
    aHeadersaPathLikea__fspath__acastut.Union[os.PathLike[str], str]ajoinastatast_sizeast_mtimeapathuUnable to detect the MIME type because a file name is not available. Either set 'download_name', pass a path instead of a file, or set 'mimetype'.amimetypesaguess_typeutoo many values to unpack (expected 2)uapplication/octet-streamasetuContent-EncodingaquoteDasafeu!#$&+-.^_`|~ufilename*uUTF-8''aattachmentainlineuContent-DispositionanamesuNo name provided for attachment. Either set 'download_name' or pass a path instead of a file.uX-SendfilearbaBytesIOagetbufferanbytesaTextIOBaseuFiles must be opened in binary mode or use BytesIO.awrap_fileafileTamimetypeaheadersadirect_passthroughacontent_lengthalast_modifiedacache_controlano_cacheacallableapublicamax_ageatimeaexpiresaset_etagaadler32gw-amake_conditionalTaaccept_rangesacomplete_lengthaRequestedRangeNotSatisfiableacloseastatus_codelapopTux-sendfilenarvuSend the contents of a file to the client.

    The first argument can be a file path or a file-like object. Paths
    are preferred in most cases because Werkzeug can manage the file and
    get extra information from the path. Passing a file-like object
    requires that the file is opened in binary mode, and is mostly
    useful when building a file in memory with :class:`io.BytesIO`.

    Never pass file paths provided by a user. The path is assumed to be
    trusted, so a user could craft a path to access a file you didn't
    intend. Use :func:`send_from_directory` to safely serve user-provided paths.

    If the WSGI server sets a ``file_wrapper`` in ``environ``, it is
    used, otherwise Werkzeug's built-in wrapper is used. Alternatively,
    if the HTTP server supports ``X-Sendfile``, ``use_x_sendfile=True``
    will tell the server to send the given path, which is much more
    efficient than reading it in Python.

    :param path_or_file: The path to the file to send, relative to the
        current working directory if a relative path is given.
        Alternatively, a file-like object opened in binary mode. Make
        sure the file pointer is seeked to the start of the data.
    :param environ: The WSGI environ for the current request.
    :param mimetype: The MIME type to send for the file. If not
        provided, it will try to detect it from the file name.
    :param as_attachment: Indicate to a browser that it should offer to
        save the file instead of displaying it.
    :param download_name: The default name browsers will use when saving
        the file. Defaults to the passed file name.
    :param conditional: Enable conditional and range responses based on
        request headers. Requires passing a file path and ``environ``.
    :param etag: Calculate an ETag for the file, which requires passing
        a file path. Can also be a string to use instead.
    :param last_modified: The last modified time to send for the file,
        in seconds. If not provided, it will try to detect it from the
        file path.
    :param max_age: How long the client should cache the file, in
        seconds. If set, ``Cache-Control`` will be ``public``, otherwise
        it will be ``no-cache`` to prefer conditional caching.
    :param use_x_sendfile: Set the ``X-Sendfile`` header to let the
        server to efficiently send the file. Requires support from the
        HTTP server. Requires passing a file path.
    :param response_class: Build the response using this class. Defaults
        to :class:`~werkzeug.wrappers.Response`.
    :param _root_path: Do not use. For internal use only. Use
        :func:`send_from_directory` to safely send files under a path.

    .. versionchanged:: 2.0.2
        ``send_file`` only sets a detected ``Content-Encoding`` if
        ``as_attachment`` is disabled.

    .. versionadded:: 2.0
        Adapted from Flask's implementation.

    .. versionchanged:: 2.0
        ``download_name`` replaces Flask's ``attachment_filename``
         parameter. If ``as_attachment=False``, it is passed with
         ``Content-Disposition: inline`` instead.

    .. versionchanged:: 2.0
        ``max_age`` replaces Flask's ``cache_timeout`` parameter.
        ``conditional`` is enabled and ``max_age`` is not set by
        default.

    .. versionchanged:: 2.0
        ``etag`` replaces Flask's ``add_etags`` parameter. It can be a
        string to use instead of generating one.

    .. versionchanged:: 2.0
        If an encoding is returned when guessing ``mimetype`` from
        ``download_name``, set the ``Content-Encoding`` header.
    asafe_joinafspathaNotFounda_root_pathasend_fileuSend a file from within a directory using :func:`send_file`.

    This is a secure way to serve files from a folder, such as static
    files or uploads. Uses :func:`~werkzeug.security.safe_join` to
    ensure the path coming from the client is not maliciously crafted to
    point outside the specified directory.

    If the final path does not point to an existing regular file,
    returns a 404 :exc:`~werkzeug.exceptions.NotFound` error.

    :param directory: The directory that ``path`` must be located under. This *must not*
        be a value provided by the client, otherwise it becomes insecure.
    :param path: The path to the file to send, relative to ``directory``. This is the
        part of the path provided by the client, which is checked for security.
    :param environ: The WSGI environ for the current request.
    :param kwargs: Arguments to pass to :func:`send_file`.

    .. versionadded:: 2.0
        Adapted from Flask's implementation.
    Tw:w.w.amodulesarsplitTw.laimport_nameasilentamodule_nameaobj_nameaImportStringErrorawith_tracebackaexc_infouImports an object based on a string.  This is useful if you want to
    use import paths as endpoints or something similar.  An import path can
    be specified either in dotted notation (``xml.sax.saxutils.escape``)
    or with a colon as object delimiter (``xml.sax.saxutils:escape``).

    If `silent` is True the return value will be `None` if the import fails.

    :param import_name: the dotted name for the object to import.
    :param silent: if set to `True` import errors are ignored and
                   `None` is returned instead.
    :return: imported object
    uFinds all the modules below a package.  This can be useful to
    automatically import all views / controllers so that their metaclasses /
    function decorators have a chance to register themselves on the
    application.

    Packages are not returned unless `include_packages` is `True`.  This can
    also recursively list modules but in that case it will import all the
    packages to get the correct load path of that module.

    :param import_path: the dotted name for the package to find child modules.
    :param include_packages: set to `True` if packages should be returned, too.
    :param recursive: set to `True` if recursion should happen.
    :return: generator
    aimport_stringaimport_patha__path__u is not a packageaiter_modulesutoo many values to unpack (expected 3)abasenameainclude_packagesarecursiveafind_modulesaexceptionanameDasilenttatrackeda__file__u- u found in aappendu not found.w
uimport_string() failed for u. Possible reasons are:

- missing __init__.py in a package;
- package or module path not included in sys.path;
- duplicated package or module name taking precedence in sys.path;
- missing module, class, function or variable;

Debugged import:

u

Original exception:

u: w<w(u, u)>a__doc__a__spec__aoriginahas_locationa__cached__aannotationsaioaosapkgutilareasyswtadatetimeTadatetimeTatimeuurllib.parseTaquoteazlibTaadler32amarkupsafeTaescapea_internalTa_DictAccessorPropertya_DictAccessorPropertyTa_missingTa_TAccessorValuea_TAccessorValueadatastructuresTaHeadersaexceptionsTaNotFoundTaRequestedRangeNotSatisfiableasecurityTasafe_joinawsgiTawrap_fileaTypeVarTa_Ta_TacompileTu&([^;]+);a_entity_reTu[^A-Za-z0-9_.-]TaCONTaPRNTaAUXTaNUL;ll
laGenerica__prepare__acached_propertya__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uwerkzeug.utilsuA :func:`property` that is only evaluated once. Subsequent access
    returns the cached value. Setting the property sets the cached
    value. Deleting the property clears the cached value, accessing it
    again will evaluate it again.

    .. code-block:: python

        class Example:
            @cached_property
            def value(self):
                # calculate something important here
                return 42

        e = Example()
        e.value  # evaluates
        e.value  # uses cache
        e.value = 16  # sets cache
        del e.value  # clears cache

    If the class defines ``__slots__``, it must add ``_cache_{name}`` as
    a slot. Alternatively, it can add ``__dict__``, but that's usually
    not desirable.

    .. versionchanged:: 2.1
        Works with ``__slots__``.

    .. versionchanged:: 2.0
        ``del obj.name`` clears the cached value.
    a__qualname__TnnDafgetanameadocareturnut.Callable[[t.Any], _T]ustr | Noneustr | NoneaNoneucached_property.__init__Daobjavalueareturnaobjecta_TaNonea__set__ucached_property.__set__TnDaobjatypeareturnaobjectatypea_Ta__get__ucached_property.__get__DaobjareturnaobjectaNonea__delete__ucached_property.__delete__a__orig_bases__aenviron_propertyuMaps request attributes to environment variables. This works not only
    for the Werkzeug request object, but also any other class with an
    environ attribute:

    >>> class Test(object):
    ...     environ = {'key': 'value'}
    ...     test = environ_property('key')
    >>> var = Test()
    >>> var.test
    'value'

    If you pass it a second value it's used as default if the key does not
    exist, the third one can be a converter that takes a value and converts
    it.  If it raises :exc:`ValueError` or :exc:`TypeError` the default value
    is used. If no default value is provided `None` is used.

    Per default the property is read only.  You have to explicitly enable it
    by passing ``read_only=False`` to the constructor.
    aread_onlyDaobjareturnaRequestaWSGIEnvironmentalookupuenviron_property.lookupaheader_propertyuLike `environ_property` but for headers.DaobjareturnuRequest | ResponseaHeadersuheader_property.lookupSuapplication/xmluapplication/sqluapplication/xml-dtduapplication/xml-external-parsed-entityuapplication/ecmascriptuapplication/javascriptDamimetypeacharsetareturnastrppaget_content_typeDafilenameareturnastrpasecure_filenameTlnDalocationacodeaResponseareturnastraintutype[Response] | NoneaResponseTlDaenvironacodeareturnaWSGIEnvironmentaintaResponseaappend_slash_redirectT
nFntpnnFnnD
apath_or_fileaenvironamimetypeaas_attachmentadownload_nameaconditionalaetagalast_modifiedamax_ageause_x_sendfilearesponse_classa_root_pathareturnuos.PathLike[str] | str | t.IO[bytes]aWSGIEnvironmentustr | Noneaboolustr | Noneaboolubool | strudatetime | int | float | NoneuNone | (int | t.Callable[[str | None], int | None])aboolutype[Response] | Noneuos.PathLike[str] | str | NoneaResponseDadirectoryapathaenvironakwargsareturnuos.PathLike[str] | struos.PathLike[str] | straWSGIEnvironmentut.AnyaResponseasend_from_directoryTFDaimport_nameasilentareturnastraboolut.AnyTFpDaimport_pathainclude_packagesarecursiveareturnastraboolput.Iterator[str]TEImportErroruProvides information about a failed :func:`import_string` attempt.a__annotations__astraBaseExceptionDaimport_nameaexceptionareturnastraBaseExceptionaNoneuImportStringError.__init__Dareturnastra__repr__uImportStringError.__repr__uwerkzeug\utils.pyTa.0wiu<module werkzeug.utils>Ta__class__TaselfaobjTaselfaobjatypeavalueaobj_dictTaselfaimport_nameaexceptionamsganameatrackedapartaimportedatrackatrack_stra__class__Taselfafgetanameadoca__class__TaselfTaselfaobjavalueTaenvironacodeatailanew_pathaquery_stringTaimport_pathainclude_packagesarecursiveamoduleapathabasenamea_importeramodnameaispkgTamimetypeacharsetTaimport_nameasilentamodule_nameaobj_nameamoduleweTalocationacodeaResponseahtml_locationaresponseTafilenameasepTapath_or_fileaenvironamimetypeaas_attachmentadownload_nameaconditionalaetagalast_modifiedamax_ageause_x_sendfilearesponse_classa_root_pathapathafileasizeamtimeaResponseaheadersastataencodingasimpleaquotedanamesavalueadataarvacheckTadirectoryapathaenvironakwargsapath_str.werkzeug.wrappersa__doc__a__file__apathadirnameajoinaenvironagetTaNUITKA_PACKAGE_werkzeugu\not_existingawrappersTaNUITKA_PACKAGE_werkzeug_wrappersu\not_existinga__path__a__spec__aoriginahas_locationasubmodule_search_locationsa__cached__arequestTaRequestlaRequestlaresponseTaResponseaResponseTaResponseStreamaResponseStreamuwerkzeug\wrappers\__init__.pyu<module werkzeug.wrappers>u.werkzeug.wrappers.requestDa__class__a__init__agetTaREQUEST_METHODaGETTuwsgi.url_schemeahttpa_get_servera_wsgi_decoding_danceTaSCRIPT_NAMEuTaPATH_INFOTaQUERY_STRINGuaencodeTalatin1aEnvironHeadersTaREMOTE_ADDRTamethodaschemeaserveraroot_pathapathaquery_stringaheadersaremote_addraenvironashallowuwerkzeug.requestatestTaEnvironBuilderlaEnvironBuilderlaget_requestacloseuCreate a new request object based on the values provided.  If
        environ is given missing values are filled from there.  This method is
        useful for small scripts when you need to simulate a request from an URL.
        Do not use this method for unittesting, there is a full featured client
        object (:class:`Client`) that allows to create multipart requests,
        support for cookies etc.

        This accepts the same options as the
        :class:`~werkzeug.test.EnvironBuilder`.

        .. versionchanged:: 0.5
           This method now accepts the same arguments as
           :class:`~werkzeug.test.EnvironBuilder`.  Because of this the
           `environ` parameter is now called `environ_overrides`.

        :return: request object
        aexceptionsTaHTTPExceptionaHTTPExceptionawrapsDaargsareturnut.Anyucabc.Iterable[bytes]aapplicationuRequest.application.<locals>.applicationacastaWSGIApplicationuDecorate a function as responder that accepts the request as
        the last argument.  This works like the :func:`responder`
        decorator but the function is passed the request object as the
        last argument and the request object will be closed
        automatically::

            @Request.application
            def my_wsgi_app(request):
                return Response('Hello World!')

        As of Werkzeug 0.14 HTTP exceptions are automatically caught and
        converted to responses instead of failing.

        :param f: the WSGI callable to decorate
        :return: a new WSGI callable
        aclsqa__enter__a__exit__wf:nqnaget_response:qnnTnnnadefault_stream_factoryTatotal_content_lengthafilenameacontent_typeacontent_lengthuCalled to get a stream for the file upload.

        This must provide a file-like class with `read()`, `readline()`
        and `seek()` methods that is both writeable and readable.

        The default implementation returns a temporary file if the total
        content length is higher than 500KB.  Because many browsers do not
        provide a content length for the files only the total content
        length matters.

        :param total_content_length: the total content length of all the
                                     data in the request combined.  This value
                                     is guaranteed to be there.
        :param content_type: the mimetype of the uploaded file.
        :param filename: the filename of the uploaded file.  May be `None`.
        :param content_length: the length of this file.  This value is usually
                               not provided because webbrowsers do not provide
                               this value.
        TaCONTENT_TYPEu``True`` if the request method carries content. By default
        this is true if a ``Content-Type`` is sent.

        .. versionadded:: 0.8
        aform_data_parser_classa_get_file_streamamax_form_memory_sizeamax_content_lengthamax_form_partsaparameter_storage_classTastream_factoryamax_form_memory_sizeamax_content_lengthamax_form_partsaclsuCreates the form data parser. Instantiates the
        :attr:`form_data_parser_class` with some parameters.

        .. versionadded:: 0.8
        aformawant_form_data_parsedamake_form_data_parseraparsea_get_stream_for_parsingamimetypeacontent_lengthamimetype_paramsastreamutoo many values to unpack (expected 3)afilesuMethod used internally to retrieve submitted data.  After calling
        this sets `form` and `files` on the request object to multi dicts
        filled with the incoming form data.  As a matter of fact the input
        stream will be empty afterwards.  You can also call this method to
        force the parsing of the form data.

        .. versionadded:: 0.8
        a_cached_dataaBytesIOuThis is the same as accessing :attr:`stream` with the difference
        that if it finds cached data from calling :meth:`get_data` first it
        will create a new stream out of the cached data.

        .. versionadded:: 0.9.3
        Tafilesaiter_multi_itemsutoo many values to unpack (expected 2)uCloses associated resources of this request object.  This
        closes all file handles explicitly.  You can also use the request
        object in a with statement which will automatically close it.

        .. versionadded:: 0.9
        uThis request was created with 'shallow=True', reading from the input stream is disabled.aget_input_streamTamax_content_lengthuThe WSGI input stream, with safety checks. This stream can only be consumed
        once.

        Use :meth:`get_data` to get the full data as bytes or text. The :attr:`data`
        attribute will contain the full bytes only if they do not represent form data.
        The :attr:`form` attribute will contain the parsed form data in that case.

        Unlike :attr:`input_stream`, this stream guards against infinite streams or
        reading past :attr:`content_length` or :attr:`max_content_length`.

        If ``max_content_length`` is set, it can be enforced on streams if
        ``wsgi.input_terminated`` is set. Otherwise, an empty stream is returned.

        If the limit is reached before the underlying stream is exhausted (such as a
        file that is too large, or an infinite stream), the remaining contents of the
        stream cannot be read safely. Depending on how the server handles this, clients
        may show a "connection reset" failure instead of seeing the 413 response.

        .. versionchanged:: 2.3
            Check ``max_content_length`` preemptively and while reading.

        .. versionchanged:: 0.9
            The stream is always set (but may be consumed) even if form parsing was
            accessed first.
        aget_dataTtTaparse_form_datauThe raw data read from :attr:`stream`. Will be empty if the request
        represents form data.

        To get the raw data even if it represents form data, use :meth:`get_data`.
        a_load_form_dataareadarvadecodeTareplaceTaerrorsuThis reads the buffered incoming data from the client into one
        bytes object.  By default this is cached but that behavior can be
        changed by setting `cache` to `False`.

        Usually it's a bad idea to call this method without checking the
        content length first as a client could send dozens of megabytes or more
        to cause memory problems on the server.

        Note that if the form data was already parsed this method will not
        return anything as form data parsing does not cache the data like
        this method does.  To implicitly invoke form data parsing function
        set `parse_form_data` to `True`.  When this is done the return value
        of this method will be an empty string if the form parser handles
        the data.  This generally is not necessary as if the whole data is
        cached (which is the default) the form parser will used the cached
        data to parse the form data.  Please be generally aware of checking
        the content length first in any case before calling this method
        to avoid exhausting server memory.

        If `as_text` is set to `True` the return value will be a decoded
        string.

        .. versionadded:: 0.9
        uThe form parameters.  By default an
        :class:`~werkzeug.datastructures.ImmutableMultiDict`
        is returned from this function.  This can be changed by setting
        :attr:`parameter_storage_class` to a different type.  This might
        be necessary if the order of the form data is important.

        Please keep in mind that file uploads will not end up here, but instead
        in the :attr:`files` attribute.

        .. versionchanged:: 0.9

            Previous to Werkzeug 0.9 this would only contain form data for POST
            and PUT requests.
        aargsamethodaGETaMultiDictaCombinedMultiDictuA :class:`werkzeug.datastructures.CombinedMultiDict` that
        combines :attr:`args` and :attr:`form`.

        For GET requests, only ``args`` are present, not ``form``.

        .. versionchanged:: 2.0
            For GET requests, only ``args`` are present, not ``form``.
        u:class:`~werkzeug.datastructures.MultiDict` object containing
        all uploaded files.  Each key in :attr:`files` is the name from the
        ``<input type="file" name="">``.  Each value in :attr:`files` is a
        Werkzeug :class:`~werkzeug.datastructures.FileStorage` object.

        It basically behaves like a standard file object you know from Python,
        with the difference that it also has a
        :meth:`~werkzeug.datastructures.FileStorage.save` function that can
        store the file on the filesystem.

        Note that :attr:`files` will only contain data if the request method was
        POST, PUT or PATCH and the ``<form>`` that posted to the request had
        ``enctype="multipart/form-data"``.  It will be empty otherwise.

        See the :class:`~werkzeug.datastructures.MultiDict` /
        :class:`~werkzeug.datastructures.FileStorage` documentation for
        more details about the used data structure.
        aroot_pathuAlias for :attr:`self.root_path`. ``environ["SCRIPT_ROOT"]``
        without a trailing slash.
        aroot_urluAlias for :attr:`root_url`. The URL with scheme, host, and
        root path. For example, ``https://example.com/app/``.
        aget_jsonuThe parsed JSON data if :attr:`mimetype` indicates JSON
        (:mimetype:`application/json`, see :attr:`is_json`).

        Calls :meth:`get_json` with default arguments.

        If the request content type is not ``application/json``, this
        will raise a 415 Unsupported Media Type error.

        .. versionchanged:: 2.3
            Raise a 415 error instead of 400.

        .. versionchanged:: 2.1
            Raise a 400 error if the content type is incorrect.
        a_cached_jsonaEllipsisais_jsonaon_json_loading_failedTnTacacheajson_modulealoadsuParse :attr:`data` as JSON.

        If the mimetype does not indicate JSON
        (:mimetype:`application/json`, see :attr:`is_json`), or parsing
        fails, :meth:`on_json_loading_failed` is called and
        its return value is used as the return value. By default this
        raises a 415 Unsupported Media Type resp.

        :param force: Ignore the mimetype and always try to parse JSON.
        :param silent: Silence mimetype and parsing errors, and
            return ``None`` instead.
        :param cache: Store the parsed JSON to return for subsequent
            calls.

        .. versionchanged:: 2.3
            Raise a 415 error instead of 400.

        .. versionchanged:: 2.1
            Raise a 400 error if the content type is incorrect.
        aBadRequestuFailed to decode JSON object: aUnsupportedMediaTypeTuDid not attempt to load JSON data because the request Content-Type was not 'application/json'.uCalled if :meth:`get_json` fails and isn't silenced.

        If this method returns a value, it is used as the return value
        for :meth:`get_json`. The default implementation raises
        :exc:`~werkzeug.exceptions.BadRequest`.

        :param e: If parsing failed, this is the exception. It will be
            ``None`` if the content type wasn't ``application/json``.

        .. versionchanged:: 2.3
            Raise a 415 error instead of 400.
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsucollections.abcaabcacabcafunctoolsajsonwta_internalTa_wsgi_decoding_danceadatastructuresTaCombinedMultiDictTaEnvironHeadersTaFileStorageaFileStorageTaImmutableMultiDictaImmutableMultiDictTaiter_multi_itemsTaMultiDictTaBadRequestTaUnsupportedMediaTypeaformparserTadefault_stream_factoryTaFormDataParseraFormDataParserusansio.requestTaRequestaRequesta_SansIORequestautilsTacached_propertyacached_propertyTaenviron_propertyaenviron_propertyawsgiTa_get_serverTaget_input_streama__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uwerkzeug.wrappers.requesta__module__uRepresents an incoming WSGI HTTP request, with headers and body
    taken from the WSGI environment. Has properties and methods for
    using the functionality defined by various HTTP specs. The data in
    requests object is read-only.

    Text data is assumed to use UTF-8 encoding, which should be true for
    the vast majority of modern clients. Using an encoding set by the
    client is unsafe in Python due to extra encodings it provides, such
    as ``zip``. To change the assumed encoding, subclass and replace
    :attr:`charset`.

    :param environ: The WSGI environ is generated by the WSGI server and
        contains information about the server configuration and client
        request.
    :param populate_request: Add this request object to the WSGI environ
        as ``environ['werkzeug.request']``. Can be useful when
        debugging.
    :param shallow: Makes reading from :attr:`stream` (and any method
        that would read from it) raise a :exc:`RuntimeError`. Useful to
        prevent consuming the form data in middleware, which would make
        it unavailable to the final application.

    .. versionchanged:: 3.0
        The ``charset``, ``url_charset``, and ``encoding_errors`` parameters
        were removed.

    .. versionchanged:: 2.1
        Old ``BaseRequest`` and mixin classes were removed.

    .. versionchanged:: 2.1
        Remove the ``disable_data_descriptor`` attribute.

    .. versionchanged:: 2.0
        Combine ``BaseRequest`` and mixins into a single ``Request``
        class.

    .. versionchanged:: 0.5
        Read-only mode is enforced with immutable classes for all data.
    a__qualname__a__annotations__uint | Nonelutype[FormDataParser]aWSGIEnvironmentaboolTtFDaenvironapopulate_requestashallowareturnaWSGIEnvironmentaboolpaNoneuRequest.__init__aclassmethodDaargsakwargsareturnut.Anyut.AnyaRequestafrom_valuesuRequest.from_valuesDwfareturnut.Callable[[Request], WSGIApplication]aWSGIApplicationuRequest.applicationTnnDatotal_content_lengthacontent_typeafilenameacontent_lengthareturnuint | Noneustr | Noneustr | Noneuint | Noneut.IO[bytes]uRequest._get_file_streamapropertyDareturnabooluRequest.want_form_data_parsedDareturnaFormDataParseruRequest.make_form_data_parserDareturnaNoneuRequest._load_form_dataDareturnut.IO[bytes]uRequest._get_stream_for_parsinguRequest.closeDareturnaRequestuRequest.__enter__uRequest.__exit__uRequest.streamaIOabytesTuwsgi.inputuThe raw WSGI input stream, without any safety checks.

        This is dangerous to use. It does not guard against infinite streams or reading
        past :attr:`content_length` or :attr:`max_content_length`.

        Use :attr:`stream` instead.
        Tadocainput_streamDareturnabytesadatauRequest.dataaoverloadTtFpDacacheaas_textaparse_form_dataareturnaboolut.Literal[False]aboolabytesuRequest.get_dataTtQFDacacheaas_textaparse_form_dataareturnaboolut.Literal[True]aboolastrDacacheaas_textaparse_form_dataareturnaboolppubytes | strDareturnuImmutableMultiDict[str, str]uRequest.formDareturnuCombinedMultiDict[str, str]avaluesuRequest.valuesDareturnuImmutableMultiDict[str, FileStorage]uRequest.filesDareturnastrascript_rootuRequest.script_rootaurl_rootuRequest.url_rootastrTaREMOTE_USERuIf the server supports user authentication, and the
        script is protected, this attribute contains the username the
        user has authenticated as.aremote_userTuwsgi.multithreaduboolean that is `True` if the application is served by a
        multithreaded WSGI server.ais_multithreadTuwsgi.multiprocessuboolean that is `True` if the application is served by a
        WSGI server that spawns multiple processes.ais_multiprocessTuwsgi.run_onceuboolean that is `True` if the application will be
        executed only once in a process lifetime.  This is the case for
        CGI for example, but it's not guaranteed that the execution only
        happens one time.ais_run_onceDareturnut.Any | NoneuRequest.jsonutuple[t.Any, t.Any]TQQQDaforceasilentacacheareturnaboolut.Literal[False]aboolut.AnyuRequest.get_jsonDaforceasilentacacheareturnaboolpput.Any | NoneTFptDweareturnuValueError | Noneut.AnyuRequest.on_json_loading_faileda__orig_bases__uwerkzeug\wrappers\request.pyu<module werkzeug.wrappers.request>Ta__class__TaselfTaselfaexc_typeaexc_valueatbTaselfaenvironapopulate_requestashallowa__class__Taselfatotal_content_lengthacontent_typeafilenameacontent_lengthTaselfacached_dataTaselfaparseradatawdTaclswfaHTTPExceptionaapplicationTaargsarequestarespweaclswfaHTTPExceptionTaHTTPExceptionaclswfTaselfafilesa_keyavalueTaclsaargsakwargsaEnvironBuilderabuilderTaselfacacheaas_textaparse_form_dataTaselfacacheaas_textaparse_form_dataarvTaselfaforceasilentacacheT
aselfaforceasilentacacheadataarvweanormal_rvw_asilent_rvTaselfweTaselfasourcesaargswd.werkzeug.wrappers.responseSLaiterableaencodea_iter_encodeda__class__a__init__Tastatusaheadersamimetypeacontent_typeadirect_passthrougha_on_closearesponseTOstrObytesObytearrayaset_dataaappenduAdds a function to the internal list of functions that should
        be called as part of closing down the response.  Since 0.7 this
        function also returns the function that was passed so that this
        can be used as a decorator.

        .. versionadded:: 0.6
        ais_sequencealenaiter_encodeduu bytesais_streamedastreamedulikely-streamedw<a__name__w u [astatusu]>aResponseucannot convert WSGI application into response objects without an environatestTarun_wsgi_applarun_wsgi_appluEnforce that the WSGI response is a response object of the current
        type.  Werkzeug will use the :class:`Response` internally in many
        situations like the exceptions.  If you call :meth:`get_response` on an
        exception you will get back a regular :class:`Response` object, even
        if you are using a custom subclass.

        This method can enforce a given response type, and it will also
        convert arbitrary WSGI callables into response objects if an environ
        is provided::

            # convert a Werkzeug response object into an instance of the
            # MyResponseClass subclass.
            response = MyResponseClass.force_type(response)

            # convert any WSGI application into a response object
            response = MyResponseClass.force_type(response, environ)

        This is especially useful if you want to post-process responses in
        the main dispatcher and use functionality provided by your subclass.

        Keep in mind that this will modify response objects in place if
        possible!

        :param response: a response object or wsgi application.
        :param environ: a WSGI environment object.
        :return: a response object.
        uCreate a new response object from an application output.  This
        works best if you pass it an application that returns a generator all
        the time.  Sometimes applications may use the `write()` callable
        returned by the `start_response` function.  This tries to resolve such
        edge cases automatically.  But if you don't get the expected output
        you should set `buffered` to `True` which enforces buffering.

        :param app: the WSGI application to execute.
        :param environ: the WSGI environment to execute against.
        :param buffered: set to `True` to enforce buffering.
        :return: a response object.
        a_ensure_sequencecuThe string representation of the response body.  Whenever you call
        this property the response iterable is encoded and flattened.  This
        can lead to unwanted behavior if you stream big data.

        This behavior can be disabled by setting
        :attr:`implicit_sequence_conversion` to `False`.

        If `as_text` is set to `True` the return value will be a decoded
        string.

        .. versionadded:: 0.9
        aautomatically_set_content_lengthaheadersuContent-LengthuSets a new string as response.  The value must be a string or
        bytes. If a string is set it's encoded to the charset of the
        response (utf-8 by default).

        .. versionadded:: 0.9
        uReturns the content length if available or `None` otherwise.u<genexpr>uResponse.calculate_content_length.<locals>.<genexpr>uAttempted implicit sequence conversion but the response object is in direct passthrough mode.aimplicit_sequence_conversionuThe response object required the iterable to be a sequence, but the implicit conversion was disabled. Call make_sequence() yourself.amake_sequenceuThis method can be called by methods that need a sequence.  If
        `mutable` is true, it will also ensure that the response sequence
        is a standard Python list.

        .. versionadded:: 0.6
        acloseacall_on_closeuConverts the response iterator in a list.  By default this happens
        automatically if required.  If `implicit_sequence_conversion` is
        disabled, this method is not automatically called and some properties
        might raise exceptions.  This also encodes all the items.

        .. versionadded:: 0.6
        uIter the response encoded with the encoding of the response.
        If the response object is invoked as WSGI application the return
        value of this method is used as application iterator unless
        :attr:`direct_passthrough` was activated.
        TETypeErrorEAttributeErroruIf the response is streamed (the response is not an iterable with
        a length information) this property is `True`.  In this case streamed
        means that there is no information about the number of iterations.
        This is usually `True` if a generator is passed to the response object.

        This is useful for checking before applying some sort of post
        filtering that should not take place for streamed responses.
        TOtupleOlistuIf the iterator is buffered, this property will be `True`.  A
        response object will consider an iterator to be buffered if the
        response attribute is a list or tuple.

        .. versionadded:: 0.6
        uClose the wrapped response if possible.  You can also use the object
        in a with statement which will automatically close it.

        .. versionadded:: 0.9
           Can now be used in a with statement.
        aadd_etaguMake the response object ready to be pickled. Does the
        following:

        *   Buffer the response into a list, ignoring
            :attr:`implicity_sequence_conversion` and
            :attr:`direct_passthrough`.
        *   Set the ``Content-Length`` header.
        *   Generate an ``ETag`` header if one is not already set.

        .. versionchanged:: 2.1
            Removed the ``no_etag`` parameter.

        .. versionchanged:: 2.0
            An ``ETag`` header is always added.

        .. versionchanged:: 0.6
            The ``Content-Length`` header is set.
        aHeadersastatus_codeutoo many values to unpack (expected 2)aloweralocationucontent-locationucontent-lengthairi_to_uriaautocorrect_location_headeraget_current_urlDastrip_querystringtaurljoinaLocationacontent_locationuContent-LocationldllaremoveTuContent-Lengthlaremove_entity_headersacontent_lengthTlluThis is automatically called right before the response is started
        and returns headers modified for the given environment.  It returns a
        copy of the headers from the response with some modifications applied
        if necessary.

        For example the location header (if present) is joined with the root
        URL of the environment.  Also the content length is automatically set
        to zero here for certain status codes.

        .. versionchanged:: 0.6
           Previously that function was called `fix_headers` and modified
           the response object in place.  Also since 0.6, IRIs in location
           and content-location headers are handled properly.

           Also starting with 0.6, Werkzeug will attempt to set the content
           length if it is able to figure it out on its own.  This is the
           case if all the strings in the response iterable are already
           encoded and the iterable is buffered.

        :param environ: the WSGI environment of the request.
        :return: returns a new :class:`~werkzeug.datastructures.Headers`
                 object.
        uResponse.get_wsgi_headers.<locals>.<genexpr>aREQUEST_METHODaHEADaClosingIteratoruReturns the application iterator for the given environ.  Depending
        on the request method and the current status code the return value
        might be an empty response rather than the one from the response.

        If the request method is `HEAD` or the status code is in a range
        where the HTTP specification requires an empty response, an empty
        iterable is returned.

        .. versionadded:: 0.6

        :param environ: the WSGI environment of the request.
        :return: a response iterable.
        aget_wsgi_headersaget_app_iterato_wsgi_listuReturns the final WSGI response as tuple.  The first item in
        the tuple is the application iterator, the second the status and
        the third the list of headers.  The response returned is created
        specially for the given environment.  For example if the request
        method in the WSGI environment is ``'HEAD'`` the response will
        be empty and only the headers and status code will be present.

        .. versionadded:: 0.6

        :param environ: the WSGI environment of the request.
        :return: an ``(app_iter, status, headers)`` tuple.
        aget_wsgi_responseutoo many values to unpack (expected 3)uProcess this response as WSGI application.

        :param environ: the WSGI environment.
        :param start_response: the response callable provided by the WSGI
                               server.
        :return: an application iterator
        aget_jsonuThe parsed JSON data if :attr:`mimetype` indicates JSON
        (:mimetype:`application/json`, see :attr:`is_json`).

        Calls :meth:`get_json` with default arguments.
        ais_jsonaget_dataajson_modulealoadsuParse :attr:`data` as JSON. Useful during testing.

        If the mimetype does not indicate JSON
        (:mimetype:`application/json`, see :attr:`is_json`), this
        returns ``None``.

        Unlike :meth:`Request.get_json`, the result is not cached.

        :param force: Ignore the mimetype and always try to parse JSON.
        :param silent: Silence parsing errors and return ``None``
            instead.
        aResponseStreamuThe response iterable as write-only stream.la_RangeWrapperuWrap existing Response in case of Range Request context.aHTTP_IF_RANGEais_resource_modifiedagetTaetagTulast-modifiedDaignore_if_rangeFaHTTP_RANGEuReturn ``True`` if `Range` header is present and if underlying
        resource is considered unchanged when compared with `If-Range` header.
        aexceptionsTaRequestedRangeNotSatisfiableaRequestedRangeNotSatisfiablea_is_range_request_processableabytesaparse_range_headerTaHTTP_RANGEarange_for_lengthato_content_range_headerluAccept-Rangesacontent_rangea_wrap_range_responseuHandle Range Request related headers (RFC7233).  If `Accept-Ranges`
        header is valid, and Range Request is processable, we set the headers
        as described by the RFC, and wrap the underlying response in a
        RangeWrapper.

        Returns ``True`` if Range Request can be fulfilled, ``False`` otherwise.

        :raises: :class:`~werkzeug.exceptions.RequestedRangeNotSatisfiable`
                 if `Range` header could not be parsed or satisfied.

        .. versionchanged:: 2.0
            Returns ``False`` if the length is 0.
        a_get_environTaGETaHEADadateahttp_dateaDatea_process_range_requestaparse_etagsTaHTTP_IF_MATCHlacalculate_content_lengthuMake the response conditional to the request.  This method works
        best if an etag was defined for the response already.  The `add_etag`
        method can be used to do that.  If called without etag just the date
        header is set.

        This does nothing if the request method in the request or environ is
        anything but GET or HEAD.

        For optimal performance when handling range requests, it's recommended
        that your response data object implements `seekable`, `seek` and `tell`
        methods as described by :py:class:`io.IOBase`.  Objects returned by
        :meth:`~werkzeug.wsgi.wrap_file` automatically implement those methods.

        It does not remove the body of the response because that's something
        the :meth:`__call__` function does for us automatically.

        Returns self so that you can do ``return resp.make_conditional(req)``
        but modifies the object in-place.

        :param request_or_environ: a request object or WSGI environment to be
                                   used to make the response conditional
                                   against.
        :param accept_ranges: This parameter dictates the value of
                              `Accept-Ranges` header. If ``False`` (default),
                              the header is not set. If ``True``, it will be set
                              to ``"bytes"``. If it's a string, it will use this
                              value.
        :param complete_length: Will be used only in valid Range Requests.
                                It will set `Content-Range` complete length
                                value and compute `Content-Length` real value.
                                This parameter is mandatory for successful
                                Range Requests completion.
        :raises: :class:`~werkzeug.exceptions.RequestedRangeNotSatisfiable`
                 if `Range` header could not be parsed or satisfied.

        .. versionchanged:: 2.0
            Range processing is skipped if length is 0 instead of
            raising a 416 Range Not Satisfiable error.
        aetagaset_etagagenerate_etaguAdd an etag for the current response if there is none yet.

        .. versionchanged:: 2.0
            SHA-1 is used to generate the value. MD5 may not be
            available in some environments.
        acloseduI/O operation on closed fileTtTamutableapopTuContent-Lengthnaselfawritea__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsajsonwtahttpTaHTTPStatusaHTTPStatusuurllib.parseTaurljoina_internalTa_get_environadatastructuresTaHeadersTagenerate_etagTahttp_dateTais_resource_modifiedTaparse_etagsTaparse_range_headerTaremove_entity_headersusansio.responseTaResponsea_SansIOResponseaurlsTairi_to_uriautilsTacached_propertyacached_propertyawsgiTa_RangeWrapperTaClosingIteratorTaget_current_urlDaiterableareturnut.Iterable[str | bytes]ut.Iterator[bytes]a__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %su<metaclass>uwerkzeug.wrappers.responsea__module__uRepresents an outgoing WSGI HTTP response with body, status, and
    headers. Has properties and methods for using the functionality
    defined by various HTTP specs.

    The response body is flexible to support different use cases. The
    simple form is passing bytes, or a string which will be encoded as
    UTF-8. Passing an iterable of bytes or strings makes this a
    streaming response. A generator is particularly useful for building
    a CSV file in memory or using SSE (Server Sent Events). A file-like
    object is also iterable, although the
    :func:`~werkzeug.utils.send_file` helper should be used in that
    case.

    The response object is itself a WSGI application callable. When
    called (:meth:`__call__`) with ``environ`` and ``start_response``,
    it will pass its status and headers to ``start_response`` then
    return its body as an iterable.

    .. code-block:: python

        from werkzeug.wrappers.response import Response

        def index():
            return Response("Hello, World!")

        def application(environ, start_response):
            path = environ.get("PATH_INFO") or "/"

            if path == "/":
                response = index()
            else:
                response = Response("Not Found", status=404)

            return response(environ, start_response)

    :param response: The data for the body of the response. A string or
        bytes, or tuple or list of strings or bytes, for a fixed-length
        response, or any other iterable of strings or bytes for a
        streaming response. Defaults to an empty body.
    :param status: The status code for the response. Either an int, in
        which case the default status message is added, or a string in
        the form ``{code} {message}``, like ``404 Not Found``. Defaults
        to 200.
    :param headers: A :class:`~werkzeug.datastructures.Headers` object,
        or a list of ``(key, value)`` tuples that will be converted to a
        ``Headers`` object.
    :param mimetype: The mime type (content type without charset or
        other parameters) of the response. If the value starts with
        ``text/`` (or matches some other special cases), the charset
        will be added to create the ``content_type``.
    :param content_type: The full content type of the response.
        Overrides building the value from ``mimetype``.
    :param direct_passthrough: Pass the response body directly through
        as the WSGI iterable. This can be used when the body is a binary
        file or other iterator of bytes, to skip some unnecessary
        checks. Use :func:`~werkzeug.utils.send_file` instead of setting
        this manually.

    .. versionchanged:: 2.1
        Old ``BaseResponse`` and mixin classes were removed.

    .. versionchanged:: 2.0
        Combine ``BaseResponse`` and mixins into a single ``Response``
        class.

    .. versionchanged:: 0.5
        The ``direct_passthrough`` parameter was added.
    a__qualname__a__annotations__ut.Iterable[str] | t.Iterable[bytes]TnnnnnFDaresponseastatusaheadersamimetypeacontent_typeadirect_passthroughareturnut.Iterable[bytes] | bytes | t.Iterable[str] | str | Noneuint | str | HTTPStatus | Noneut.Mapping[str, str | t.Iterable[str]] | t.Iterable[tuple[str, str]] | Noneustr | Noneustr | NoneaboolaNoneuResponse.__init__Dafuncareturnut.Callable[[], t.Any]ut.Callable[[], t.Any]uResponse.call_on_closeDareturnastra__repr__uResponse.__repr__aclassmethodTnDaresponseaenvironareturnaResponseuWSGIEnvironment | NoneaResponseaforce_typeuResponse.force_typeTFDaappaenvironabufferedareturnaWSGIApplicationaWSGIEnvironmentaboolaResponseafrom_appuResponse.from_appaoverloadDaas_textareturnut.Literal[False]abytesuResponse.get_dataDaas_textareturnut.Literal[True]astrDaas_textareturnaboolubytes | strDavalueareturnubytes | straNoneuResponse.set_dataapropertyDadocuA descriptor that calls :meth:`get_data` and :meth:`set_data`.adataDareturnuint | NoneuResponse.calculate_content_lengthDamutableareturnaboolaNoneuResponse._ensure_sequenceDareturnaNoneuResponse.make_sequenceDareturnut.Iterator[bytes]uResponse.iter_encodedDareturnabooluResponse.is_streameduResponse.is_sequenceuResponse.closeDareturnaResponsea__enter__uResponse.__enter__a__exit__uResponse.__exit__afreezeuResponse.freezeDaenvironareturnaWSGIEnvironmentaHeadersuResponse.get_wsgi_headersDaenvironareturnaWSGIEnvironmentut.Iterable[bytes]uResponse.get_app_iterDaenvironareturnaWSGIEnvironmentutuple[t.Iterable[bytes], str, list[tuple[str, str]]]uResponse.get_wsgi_responseDaenvironastart_responseareturnaWSGIEnvironmentaStartResponseut.Iterable[bytes]a__call__uResponse.__call__Dareturnut.Any | NoneuResponse.jsonTQQDaforceasilentareturnaboolut.Literal[False]ut.AnyuResponse.get_jsonDaforceasilentareturnaboolput.Any | NoneTFpDareturnaResponseStreamastreamuResponse.streamDastartalengthareturnaintpaNoneuResponse._wrap_range_responseDaenvironareturnaWSGIEnvironmentabooluResponse._is_range_request_processableDaenvironacomplete_lengthaaccept_rangesareturnaWSGIEnvironmentuint | Noneubool | strabooluResponse._process_range_requestTFnDarequest_or_environaaccept_rangesacomplete_lengthareturnuWSGIEnvironment | Requestubool | struint | NoneaResponseamake_conditionaluResponse.make_conditionalDaoverwriteaweakareturnaboolpaNoneuResponse.add_etaga__orig_bases__uA file descriptor like object used by :meth:`Response.stream` to
    represent the body of the stream. It directly pushes into the
    response iterable of the response object.
    uwb+amodeDaresponseaResponseuResponseStream.__init__DavalueareturnabytesaintuResponseStream.writeDaseqareturnut.Iterable[bytes]aNoneawritelinesuResponseStream.writelinesuResponseStream.closeaflushuResponseStream.flushaisattyuResponseStream.isattyDareturnaintatelluResponseStream.telluutf-8aencodinguResponseStream.encodinguwerkzeug\wrappers\response.pyTa.0wxu<module werkzeug.wrappers.response>Ta__class__Taselfaenvironastart_responseaapp_iterastatusaheadersTaselfTaselfaexc_typeaexc_valueatbTaselfaresponseastatusaheadersamimetypeacontent_typeadirect_passthrougha__class__TaselfaresponseTaselfabody_infoTaselfamutableTaselfaenvironTaiterableaitemTaselfaenvironacomplete_lengthaaccept_rangesaRequestedRangeNotSatisfiableaparsed_rangearange_tupleacontent_range_headeracontent_lengthTaselfastartalengthTaselfaoverwriteaweakTaselfafuncTaclsaresponseaenvironarun_wsgi_appTaclsaappaenvironabufferedarun_wsgi_appTaselfaenvironaiterableastatusTaselfaas_textTaselfaas_textarvTaselfaforceasilentTaselfaforceasilentadataTaselfaenvironalocationacontent_locationacontent_lengthaheadersastatusakeyavalueaikeyacurrent_urlTaselfaenvironaheadersaapp_iterTaselfarequest_or_environaaccept_rangesacomplete_lengthaenvironais206alengthTaselfacloseTaselfavalueTaselfaseqaitem.werkzeug.wsgi5aupdate_wrapperu<lambda>uresponder.<locals>.<lambda>uMarks a function as responder.  Decorate a function with it and it
    will automatically call the return value as WSGI application.

    Example::

        @responder
        def application(environ, start_response):
            return Response('Hello World!')
    wf:qnnaschemeuwsgi.url_schemeahostaget_hostagetTaSCRIPT_NAMEuaroot_pathTaPATH_INFOuapathTaQUERY_STRINGuaencodeTalatin1aquery_stringa_sansio_utilsaget_current_urluRecreate the URL for a request from the parts in a WSGI
    environment.

    The URL is an IRI, not a URI, so it may contain Unicode characters.
    Use :func:`~werkzeug.urls.iri_to_uri` to convert it to ASCII.

    :param environ: The WSGI environment to get the URL parts from.
    :param root_only: Only build the root path, don't include the
        remaining path or query string.
    :param strip_querystring: Don't include the query string.
    :param host_only: Only build the scheme and host.
    :param trusted_hosts: A list of trusted host names to validate the
        host against.
    TaSERVER_NAMETaSERVER_PORTnTETypeErrorEValueErrorTaHTTP_HOSTa_get_serveruReturn the host for the given WSGI environment.

    The ``Host`` header is preferred, then ``SERVER_NAME`` if it's not
    set. The returned host will only contain the port if it is different
    than the standard port for the protocol.

    Optionally, verify that the host is trusted using
    :func:`host_is_trusted` and raise a
    :exc:`~werkzeug.exceptions.SecurityError` if it is not.

    :param environ: A WSGI environment dict.
    :param trusted_hosts: A list of trusted host names.

    :return: Host, with port if necessary.
    :raise ~werkzeug.exceptions.SecurityError: If the host is not
        trusted.
    aget_content_lengthTaCONTENT_LENGTHTaHTTP_TRANSFER_ENCODINGTahttp_content_lengthahttp_transfer_encodinguReturn the ``Content-Length`` header value as an int. If the header is not given
    or the ``Transfer-Encoding`` header is ``chunked``, ``None`` is returned to indicate
    a streaming request. If the value is not an integer, or negative, 0 is returned.

    :param environ: The WSGI environ to get the content length from.

    .. versionadded:: 0.9
    acastaIOuwsgi.inputaRequestEntityTooLargeuwsgi.input_terminatedaLimitedStreamDais_maxtaBytesIOuReturn the WSGI input stream, wrapped so that it may be read safely without going
    past the ``Content-Length`` header value or ``max_content_length``.

    If ``Content-Length`` exceeds ``max_content_length``, a
    :exc:`RequestEntityTooLarge`` ``413 Content Too Large`` error is raised.

    If the WSGI server sets ``environ["wsgi.input_terminated"]``, it indicates that the
    server handles terminating the stream, so it is safe to read directly. For example,
    a server that knows how to handle chunked requests safely would set this.

    If ``max_content_length`` is set, it can be enforced on streams if
    ``wsgi.input_terminated`` is set. Otherwise, an empty stream is returned unless the
    user explicitly disables this safe fallback.

    If the limit is reached before the underlying stream is exhausted (such as a file
    that is too large, or an infinite stream), the remaining contents of the stream
    cannot be read safely. Depending on how the server handles this, clients may show a
    "connection reset" failure instead of seeing the 413 response.

    :param environ: The WSGI environ containing the stream.
    :param safe_fallback: Return an empty stream when ``Content-Length`` is not set.
        Disabling this allows infinite streams, which can be a denial-of-service risk.
    :param max_content_length: The maximum length that content-length or streaming
        requests may not exceed.

    .. versionchanged:: 2.3.2
        ``max_content_length`` is only applied to streaming requests if the server sets
        ``wsgi.input_terminated``.

    .. versionchanged:: 2.3
        Check ``max_content_length`` and raise an error if it is exceeded.

    .. versionadded:: 0.9
    adecodeTareplaceTaerrorsuReturn ``PATH_INFO`` from  the WSGI environment.

    :param environ: WSGI environment to get the path from.

    .. versionchanged:: 3.0
        The ``charset`` and ``errors`` parameters were removed.

    .. versionadded:: 0.9
    aCallableTLObytesapartialanexta_nextacallableaclosea_callbacksuwsgi.file_wrapperaFileWrapperuWraps a file.  This uses the WSGI server's file wrapper if available
    or otherwise the generic :class:`FileWrapper`.

    .. versionadded:: 0.5

    If the file wrapper from the WSGI server is used it's important to not
    iterate over it from inside the application but to pass it through
    unchanged.  If you want to pass out a file wrapper inside a response
    object you have to set :attr:`Response.direct_passthrough` to `True`.

    More information about file wrappers are available in :pep:`333`.

    :param file: a :class:`file`-like object with a :meth:`~file.read` method.
    :param buffer_size: number of bytes for one iteration.
    afileabuffer_sizeaseekableaseekatellareadaiterableabyte_rangeastart_byteaend_bytelaread_lengthaend_reachedaselfa_next_chunkachunka_first_iterationutoo many values to unpack (expected 2)a_streama_posalimita_limit_is_maxuWhether the current stream position has reached the limit.uCalled when attempting to read after the limit has been reached.

        The default behavior is to do nothing, unless the limit is a maximum, in which
        case it raises :exc:`.RequestEntityTooLarge`.

        .. versionchanged:: 2.3
            Raises ``RequestEntityTooLarge`` if the limit is a maximum.

        .. versionchanged:: 2.3
            Any return value is ignored.
        aClientDisconnecteduCalled when an attempted read receives zero bytes before the limit was
        reached. This indicates that the client disconnected before sending the full
        request body.

        The default behavior is to raise :exc:`.ClientDisconnected`, unless the limit is
        a maximum and no error was raised.

        .. versionchanged:: 2.3
            Added the ``error`` parameter. Do nothing if the limit is a maximum and no
            error was raised.

        .. versionchanged:: 2.3
            Any return value is ignored.
        ais_exhaustedareadallcuExhaust the stream by reading until the limit is reached or the client
        disconnects, returning the remaining data.

        .. versionchanged:: 2.3
            Return the remaining data.

        .. versionchanged:: 2.2.3
            Handle case where wrapped stream returns fewer bytes than requested.
        aon_exhaustedareadintoTEOSErrorEValueErroraon_disconnectTaerroraminBTlaoutaextenduReturn the current stream position.

        .. versionadded:: 0.9
        a__doc__a__file__a__spec__aoriginahas_locationa__cached__aannotationsaiowtaexceptionsTaClientDisconnectedlTaRequestEntityTooLargeasansioTautilsautilsusansio.utilsTahost_is_trustedahost_is_trustedDwfareturnut.Callable[..., WSGIApplication]aWSGIApplicationaresponderTFppnDaenvironaroot_onlyastrip_querystringahost_onlyatrusted_hostsareturnaWSGIEnvironmentaboolpput.Iterable[str] | NoneastrDaenvironareturnaWSGIEnvironmentutuple[str, int | None] | NoneTnDaenvironatrusted_hostsareturnaWSGIEnvironmentut.Iterable[str] | NoneastrDaenvironareturnaWSGIEnvironmentuint | NoneTtnDaenvironasafe_fallbackamax_content_lengthareturnaWSGIEnvironmentabooluint | Noneut.IO[bytes]aget_input_streamDaenvironareturnaWSGIEnvironmentastraget_path_infouwerkzeug.wsgia__module__uThe WSGI specification requires that all middlewares and gateways
    respect the `close` callback of the iterable returned by the application.
    Because it is useful to add another close action to a returned iterable
    and adding a custom iterable is a boring task this class can be used for
    that::

        return ClosingIterator(app(environ, start_response), [cleanup_session,
                                                              cleanup_locals])

    If there is just one close function it can be passed instead of the list.

    A closing iterator is not needed if the application uses response objects
    and finishes the processing if the response is started::

        try:
            return response(environ, start_response)
        finally:
            cleanup_session()
            cleanup_locals()
    aClosingIteratora__qualname__Daiterableacallbacksareturnut.Iterable[bytes]uNone | (t.Callable[[], None] | t.Iterable[t.Callable[[], None]])aNonea__init__uClosingIterator.__init__DareturnaClosingIteratora__iter__uClosingIterator.__iter__Dareturnabytesa__next__uClosingIterator.__next__DareturnaNoneuClosingIterator.closeTl@Daenvironafileabuffer_sizeareturnaWSGIEnvironmentut.IO[bytes]aintut.Iterable[bytes]awrap_fileuThis class can be used to convert a :class:`file`-like object into
    an iterable.  It yields `buffer_size` blocks until the file is fully
    read.

    You should not use this class directly but rather use the
    :func:`wrap_file` function that uses the WSGI server's file wrapper
    support if it's available.

    .. versionadded:: 0.5

    If you're using this object together with a :class:`Response` you have
    to use the `direct_passthrough` mode.

    :param file: a :class:`file`-like object with a :meth:`~file.read` method.
    :param buffer_size: number of bytes for one iteration.
    Dafileabuffer_sizeareturnut.IO[bytes]aintaNoneuFileWrapper.__init__uFileWrapper.closeDareturnabooluFileWrapper.seekableDaargsareturnut.AnyaNoneuFileWrapper.seekDareturnuint | NoneuFileWrapper.tellDareturnaFileWrapperuFileWrapper.__iter__uFileWrapper.__next__uThis class can be used to convert an iterable object into
    an iterable that will only yield a piece of the underlying content.
    It yields blocks until the underlying stream range is fully read.
    The yielded blocks will have a size that can't exceed the original
    iterator defined block size, but that can be smaller.

    If you're using this object together with a :class:`Response` you have
    to use the `direct_passthrough` mode.

    :param iterable: an iterable object with a :meth:`__next__` method.
    :param start_byte: byte from which read will start.
    :param byte_range: how many bytes to read.
    a_RangeWrapperTlnDaiterableastart_byteabyte_rangeut.Iterable[bytes] | t.IO[bytes]aintuint | Noneu_RangeWrapper.__init__Dareturna_RangeWrapperu_RangeWrapper.__iter__u_RangeWrapper._next_chunkDareturnutuple[bytes | None, int]u_RangeWrapper._first_iterationu_RangeWrapper._nextu_RangeWrapper.__next__u_RangeWrapper.closeaRawIOBasea__prepare__a__getitem__u%s.__prepare__() must return a mapping, not %sa__name__u<metaclass>uWrap a stream so that it doesn't read more than a given limit. This is used to
    limit ``wsgi.input`` to the ``Content-Length`` header value or
    :attr:`.Request.max_content_length`.

    When attempting to read after the limit has been reached, :meth:`on_exhausted` is
    called. When the limit is a maximum, this raises :exc:`.RequestEntityTooLarge`.

    If reading from the stream returns zero bytes or raises an error,
    :meth:`on_disconnect` is called, which raises :exc:`.ClientDisconnected`. When the
    limit is a maximum and zero bytes were read, no error is raised, since it may be the
    end of the stream.

    If the limit is reached before the underlying stream is exhausted (such as a file
    that is too large, or an infinite stream), the remaining contents of the stream
    cannot be read safely. Depending on how the server handles this, clients may show a
    "connection reset" failure instead of seeing the 413 response.

    :param stream: The stream to read from. Must be a readable binary IO object.
    :param limit: The limit in bytes to not read past. Should be either the
        ``Content-Length`` header value or ``request.max_content_length``.
    :param is_max: Whether the given ``limit`` is ``request.max_content_length`` instead
        of the ``Content-Length`` header value. This changes how exhausted and
        disconnect events are handled.

    .. versionchanged:: 2.3
        Handle ``max_content_length`` differently than ``Content-Length``.

    .. versionchanged:: 2.3
        Implements ``io.RawIOBase`` rather than ``io.IOBase``.
    TFDastreamalimitais_maxareturnut.IO[bytes]aintaboolaNoneuLimitedStream.__init__apropertyuLimitedStream.is_exhausteduLimitedStream.on_exhaustedDaerrorareturnuException | NoneaNoneuLimitedStream.on_disconnectaexhaustuLimitedStream.exhaustDwbareturnabytearrayuint | NoneuLimitedStream.readintouLimitedStream.readallDareturnaintuLimitedStream.tellareadableuLimitedStream.readablea__orig_bases__uwerkzeug\wsgi.pyTwawfTwfu<module werkzeug.wsgi>Ta__class__Taselfaiterableacallbacksaiteratoraiterable_closeTaselfafileabuffer_sizeTaselfastreamalimitais_maxTaselfaiterableastart_byteabyte_rangeTaselfTaselfadataTaselfachunkTaselfachunkacontextual_read_lengthTaenvironaportanameTaselfacallbackTaenvironTaenvironaroot_onlyastrip_querystringahost_onlyatrusted_hostsapartsTaenvironatrusted_hostsTaenvironasafe_fallbackamax_content_lengthastreamacontent_lengthTaenvironapathTaselfaerrorTaselfaoutadataTaselfwbaout_sizeasizearemainingweatemp_badataTaselfaargsTaenvironafileabuffer_sizeu.
